uint64_t IntelligenceElement.Image.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntelligenceElement.Image.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IntelligenceElement.Image.name.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Image.textDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntelligenceElement.Image.textDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*IntelligenceElement.Image.textDescription.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Image.init(name:textDescription:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_249631CA4(char *a1, char *a2)
{
  return sub_249674920(*a1, *a2);
}

uint64_t sub_249631CB0()
{
  sub_2496769A8();
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_249631D34()
{
  sub_249676534();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249631D94()
{
  sub_2496769A8();
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_249631E14@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_249676834();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_249631E70(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701667182;
  if (*v1)
    v2 = 0x6373654474786574;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xEF6E6F6974706972;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_249631EB4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6373654474786574;
  else
    return 1701667182;
}

uint64_t sub_249631EF4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_249676834();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_249631F54()
{
  return 0;
}

void sub_249631F60(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_249631F6C()
{
  sub_249632E58();
  return sub_249676A20();
}

uint64_t sub_249631F94()
{
  sub_249632E58();
  return sub_249676A2C();
}

uint64_t IntelligenceElement.Image.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB90);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249632E58();
  sub_249676A14();
  v12 = 0;
  sub_2496768E8();
  if (!v2)
  {
    v11 = 1;
    sub_2496768E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t IntelligenceElement.Image.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249632E58();
  sub_2496769FC();
  if (!v2)
  {
    v20 = 0;
    v9 = sub_249676858();
    v11 = v10;
    v19 = 1;
    swift_bridgeObjectRetain();
    v12 = sub_249676858();
    v15 = v14;
    v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17 = v12;
    v16(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v17;
    a2[3] = v15;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496322A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IntelligenceElement.Image.init(from:)(a1, a2);
}

uint64_t sub_2496322B4(_QWORD *a1)
{
  return IntelligenceElement.Image.encode(to:)(a1);
}

uint64_t IntelligenceElement.Image.description.getter()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  if (!v1)
    goto LABEL_9;
  v4 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v4 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v4)
  {
LABEL_9:
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!v3)
      goto LABEL_18;
    goto LABEL_10;
  }
  sub_24967654C();
  sub_24967654C();
  v5 = sub_2496325A0(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_2496325A0((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  v8 = &v5[2 * v7];
  v8[4] = 0x22203A656D616ELL;
  v8[5] = 0xE700000000000000;
  if (v3)
  {
LABEL_10:
    v9 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v9 = v2 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      sub_249676798();
      swift_bridgeObjectRelease();
      sub_24967654C();
      sub_24967654C();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_2496325A0(0, v5[2] + 1, 1, v5);
      v11 = v5[2];
      v10 = v5[3];
      if (v11 >= v10 >> 1)
        v5 = sub_2496325A0((_QWORD *)(v10 > 1), v11 + 1, 1, v5);
      v5[2] = v11 + 1;
      v12 = &v5[2 * v11];
      v12[4] = 0xD000000000000012;
      v12[5] = 0x800000024967D170;
    }
  }
LABEL_18:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  sub_249632EBC();
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return 0x286567616D49;
}

void sub_249632520(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_249632528@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_24963253C(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_24963256C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_249632580(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_249632594@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_2496325A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA88);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2496334C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2496326AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2496328DC(a1, a2, a3, a4, &qword_25786B158, &qword_25786B160);
}

uint64_t sub_2496326C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B0D8);
  v10 = *(_QWORD *)(type metadata accessor for IntelligenceElement() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_2496767EC();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for IntelligenceElement() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2496335B8(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_2496328C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2496328DC(a1, a2, a3, a4, &qword_25786B170, &qword_25786A7A0);
}

uint64_t sub_2496328DC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_2496767EC();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2496337C8(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_249632AE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25786B168);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2496336D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_249632C10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2496328DC(a1, a2, a3, a4, &qword_25786B0C0, &qword_25786ACE8);
}

uint64_t sub_249632C24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2496328DC(a1, a2, a3, a4, &qword_25786B0C8, &qword_25786ACF0);
}

_QWORD *sub_249632C38(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25786B0D0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2496338E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t _s21UIIntelligenceSupport19IntelligenceElementV5ImageV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_249676960(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_249676960() & 1) != 0))
        return 1;
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BCF4DC8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_249632E58()
{
  unint64_t result;

  result = qword_25786AE30;
  if (!qword_25786AE30)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677284, &_s5ImageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE30);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_249632EBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25786A900;
  if (!qword_25786A900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25786A8F8);
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_25786A900);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BCF4DD4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t _s5ImageVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s5ImageVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s5ImageVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s5ImageVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *_s5ImageVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5ImageVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s5ImageVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceElement.Image()
{
  return &type metadata for IntelligenceElement.Image;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_249633A64(a1, &qword_2544AE4B8);
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_249633180(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2496331A0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
  sub_249633A64(a1, qword_25786A668);
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_2496331F4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_249633214(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_249633A64(a1, &qword_25786A920);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_249633A64(a1, &qword_25786B070);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s5ImageV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s5ImageV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24963335C + 4 * byte_249677065[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249633390 + 4 * byte_249677060[v4]))();
}

uint64_t sub_249633390(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249633398(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496333A0);
  return result;
}

uint64_t sub_2496333AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496333B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2496333B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496333C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496333CC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2496333D4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *_s5ImageV10CodingKeysOMa()
{
  return &_s5ImageV10CodingKeysON;
}

unint64_t sub_2496333F4()
{
  unint64_t result;

  result = qword_25786B150;
  if (!qword_25786B150)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967725C, &_s5ImageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B150);
  }
  return result;
}

unint64_t sub_24963343C()
{
  unint64_t result;

  result = qword_25786AE40;
  if (!qword_25786AE40)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677194, &_s5ImageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE40);
  }
  return result;
}

unint64_t sub_249633484()
{
  unint64_t result;

  result = qword_25786AE38;
  if (!qword_25786AE38)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496771BC, &_s5ImageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE38);
  }
  return result;
}

uint64_t sub_2496334C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249676828();
  __break(1u);
  return result;
}

uint64_t sub_2496335B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for IntelligenceElement() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_249676828();
  __break(1u);
  return result;
}

uint64_t sub_2496336D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249676828();
  __break(1u);
  return result;
}

uint64_t sub_2496337C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_249676828();
  __break(1u);
  return result;
}

uint64_t sub_2496338E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25786ACF8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_249676828();
  __break(1u);
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_2496339F4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_249633A14(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_249633A64(a1, &qword_25786B178);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_249633A64(a1, &qword_25786B180);
}

void sub_249633A64(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t IntelligenceElement.RemoteProcess.processInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_BYTE *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(v1 + 36);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v3;
  return swift_bridgeObjectRetain();
}

double IntelligenceElement.RemoteProcess.processInfo.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9;

  v9 = *a1;
  v3 = *((_QWORD *)a1 + 2);
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_BYTE *)a1 + 32);
  v6 = *((_QWORD *)a1 + 6);
  v7 = *((_QWORD *)a1 + 7);
  swift_bridgeObjectRelease();
  *(_OWORD *)v1 = v9;
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v4;
  *(_BYTE *)(v1 + 32) = v5;
  result = *(double *)((char *)a1 + 36);
  *(double *)(v1 + 36) = result;
  *(_QWORD *)(v1 + 48) = v6;
  *(_QWORD *)(v1 + 56) = v7;
  return result;
}

uint64_t (*IntelligenceElement.RemoteProcess.processInfo.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.RemoteProcess.remoteContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IntelligenceElement.RemoteProcess();
  return sub_249634958(v1 + *(int *)(v3 + 20), a1, type metadata accessor for IntelligenceFragment.RemoteContext);
}

uint64_t type metadata accessor for IntelligenceElement.RemoteProcess()
{
  uint64_t result;

  result = qword_2544ADF40;
  if (!qword_2544ADF40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t IntelligenceElement.RemoteProcess.remoteContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
  return sub_249633C08(a1, v3);
}

uint64_t sub_249633C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*IntelligenceElement.RemoteProcess.remoteContext.modify())()
{
  type metadata accessor for IntelligenceElement.RemoteProcess();
  return nullsub_1;
}

uint64_t IntelligenceElement.RemoteProcess.init(processInfo:remoteContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  __int128 v6;
  uint64_t v7;

  v5 = *(_BYTE *)(a1 + 32);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(_BYTE *)(a3 + 32) = v5;
  *(_QWORD *)(a3 + 36) = *(_QWORD *)(a1 + 36);
  *(_OWORD *)(a3 + 48) = *(_OWORD *)(a1 + 48);
  v7 = a3 + *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
  return sub_249633CC8(a2, v7);
}

uint64_t sub_249633CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249633D14(char *a1, char *a2)
{
  return sub_2496746A8(*a1, *a2);
}

uint64_t sub_249633D20()
{
  sub_2496769A8();
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_249633DB4()
{
  sub_249676534();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249633E24()
{
  sub_2496769A8();
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_249633EB4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_249676834();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_249633F10(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x49737365636F7270;
  if (*v1)
    v2 = 0x6F4365746F6D6572;
  v3 = 0xEB000000006F666ELL;
  if (*v1)
    v3 = 0xED0000747865746ELL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_249633F64()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F4365746F6D6572;
  else
    return 0x49737365636F7270;
}

uint64_t sub_249633FB4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_249676834();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_249634014()
{
  sub_24963484C();
  return sub_249676A20();
}

uint64_t sub_24963403C()
{
  sub_24963484C();
  return sub_249676A2C();
}

uint64_t IntelligenceElement.RemoteProcess.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  __int128 v10;
  _BYTE v12[16];
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  __int128 v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B188);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24963484C();
  sub_249676A14();
  v9 = *((_BYTE *)v3 + 32);
  v10 = v3[1];
  v13 = *v3;
  v14 = v10;
  v15 = v9;
  v16 = *(_QWORD *)((char *)v3 + 36);
  v17 = v3[3];
  v12[15] = 0;
  sub_249634890();
  sub_24967693C();
  if (!v2)
  {
    type metadata accessor for IntelligenceElement.RemoteProcess();
    LOBYTE(v13) = 1;
    type metadata accessor for IntelligenceFragment.RemoteContext(0);
    sub_249634918(&qword_25786B2B0, (uint64_t)&protocol conformance descriptor for IntelligenceFragment.RemoteContext);
    sub_24967693C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IntelligenceElement.RemoteProcess.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  char v28;

  v19 = a2;
  v21 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8]();
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B198);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IntelligenceElement.RemoteProcess();
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24963484C();
  sub_2496769FC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = a1;
  v18 = v5;
  v11 = (uint64_t)v10;
  v12 = (uint64_t)v20;
  v28 = 0;
  sub_2496348D4();
  v13 = v22;
  sub_2496768B8();
  v14 = v25;
  v15 = v24;
  *(_OWORD *)v11 = v23;
  *(_OWORD *)(v11 + 16) = v15;
  *(_BYTE *)(v11 + 32) = v14;
  *(_QWORD *)(v11 + 36) = v26;
  *(_OWORD *)(v11 + 48) = v27;
  LOBYTE(v23) = 1;
  sub_249634918(&qword_25786B1A0, (uint64_t)&protocol conformance descriptor for IntelligenceFragment.RemoteContext);
  sub_2496768B8();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v13);
  sub_249633CC8(v12, v11 + *(int *)(v8 + 20));
  sub_249634958(v11, v19, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.RemoteProcess);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_24963499C(v11, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.RemoteProcess);
}

uint64_t sub_24963445C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceElement.RemoteProcess.init(from:)(a1, a2);
}

uint64_t sub_249634470(_QWORD *a1)
{
  return IntelligenceElement.RemoteProcess.encode(to:)(a1);
}

uint64_t IntelligenceElement.RemoteProcess.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v1 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11[0] = 0;
  *((_QWORD *)&v11[0] + 1) = 0xE000000000000000;
  sub_249676798();
  v16 = v11[0];
  sub_24967654C();
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_OWORD *)(v0 + 16);
  v11[0] = *(_OWORD *)v0;
  v11[1] = v7;
  v12 = v4;
  v13 = *(_QWORD *)(v0 + 36);
  v14 = v5;
  v15 = v6;
  swift_bridgeObjectRetain();
  IntelligenceProcessInfo.description.getter();
  sub_24967654C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24967654C();
  v8 = type metadata accessor for IntelligenceElement.RemoteProcess();
  sub_249634958(v0 + *(int *)(v8 + 20), (uint64_t)v3, type metadata accessor for IntelligenceFragment.RemoteContext);
  v9 = (uint64_t)&v3[*(int *)(v1 + 24)];
  type metadata accessor for IntelligenceFragment.RemoteID(0);
  sub_2496767E0();
  sub_24963499C(v9, type metadata accessor for IntelligenceFragment.RemoteID);
  sub_24967654C();
  return v16;
}

BOOL _s21UIIntelligenceSupport19IntelligenceElementV13RemoteProcessV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  __int128 v50;
  __int128 v51;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;

  if (*(_DWORD *)(a1 + 36) != *(_DWORD *)(a2 + 36) || *(_DWORD *)(a1 + 40) != *(_DWORD *)(a2 + 40))
    return 0;
  v5 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  LOBYTE(v5) = *(_BYTE *)(v6 + 8);
  v8 = *(_BYTE *)(v6 + 9);
  v9 = *(_BYTE *)(v6 + 10);
  v10 = *(_BYTE *)(v6 + 11);
  v11 = *(_BYTE *)(v6 + 12);
  v12 = *(_BYTE *)(v6 + 13);
  v13 = *(_BYTE *)(v6 + 14);
  v14 = *(_BYTE *)(v6 + 15);
  v15 = *(_QWORD *)(v6 + 16);
  v16 = *(_BYTE *)(v6 + 24);
  v17 = *(_BYTE *)(v6 + 25);
  v18 = *(_QWORD *)(v6 + 32);
  v19 = *(_BYTE *)(v6 + 40);
  v20 = *(_BYTE *)(v6 + 41);
  v21 = *(_QWORD *)(v6 + 48);
  v22 = *(_BYTE *)(v6 + 56);
  v23 = *(_BYTE *)(v6 + 57);
  v24 = *(_BYTE *)(v6 + 58);
  v25 = *(_BYTE *)(v6 + 59);
  v26 = *(_BYTE *)(v6 + 60);
  v27 = *(_BYTE *)(v6 + 61);
  v28 = *(_BYTE *)(v6 + 62);
  *(_QWORD *)&v64 = *(_QWORD *)v6;
  BYTE8(v64) = v5;
  BYTE9(v64) = v8;
  BYTE10(v64) = v9;
  BYTE11(v64) = v10;
  BYTE12(v64) = v11;
  BYTE13(v64) = v12;
  BYTE14(v64) = v13;
  HIBYTE(v64) = v14;
  *(_QWORD *)&v65 = v15;
  BYTE8(v65) = v16;
  BYTE9(v65) = v17;
  *(_QWORD *)&v66 = v18;
  BYTE8(v66) = v19;
  BYTE9(v66) = v20;
  v67 = v21;
  v68 = v22;
  v69 = v23;
  v70 = v24;
  v71 = v25;
  v72 = v26;
  v73 = v27;
  v74 = v28;
  LOBYTE(v5) = *(_BYTE *)(v7 + 8);
  v29 = *(_BYTE *)(v7 + 9);
  v30 = *(_BYTE *)(v7 + 10);
  v31 = *(_BYTE *)(v7 + 11);
  v32 = *(_BYTE *)(v7 + 12);
  v33 = *(_BYTE *)(v7 + 13);
  v34 = *(_BYTE *)(v7 + 14);
  v35 = *(_BYTE *)(v7 + 15);
  v36 = *(_QWORD *)(v7 + 16);
  v37 = *(_BYTE *)(v7 + 24);
  v38 = *(_BYTE *)(v7 + 25);
  v39 = *(_QWORD *)(v7 + 32);
  v40 = *(_BYTE *)(v7 + 40);
  v41 = *(_BYTE *)(v7 + 41);
  v42 = *(_QWORD *)(v7 + 48);
  v43 = *(_BYTE *)(v7 + 56);
  v44 = *(_BYTE *)(v7 + 57);
  v45 = *(_BYTE *)(v7 + 58);
  v46 = *(_BYTE *)(v7 + 59);
  v47 = *(_BYTE *)(v7 + 60);
  v48 = *(_BYTE *)(v7 + 61);
  v49 = *(_BYTE *)(v7 + 62);
  *(_QWORD *)&v53 = *(_QWORD *)v7;
  BYTE8(v53) = v5;
  BYTE9(v53) = v29;
  BYTE10(v53) = v30;
  BYTE11(v53) = v31;
  BYTE12(v53) = v32;
  BYTE13(v53) = v33;
  BYTE14(v53) = v34;
  HIBYTE(v53) = v35;
  *(_QWORD *)&v54 = v36;
  BYTE8(v54) = v37;
  BYTE9(v54) = v38;
  *(_QWORD *)&v55 = v39;
  BYTE8(v55) = v40;
  BYTE9(v55) = v41;
  v56 = v42;
  v57 = v43;
  v58 = v44;
  v59 = v45;
  v60 = v46;
  v61 = v47;
  v62 = v48;
  v63 = v49;
  if ((_s21UIIntelligenceSupport29IntelligenceCollectionRequestV2eeoiySbAC_ACtFZ_0((unsigned int *)&v64, (unsigned int *)&v53) & 1) == 0)return 0;
  v50 = *(_OWORD *)(v6 + 80);
  v53 = *(_OWORD *)(v6 + 64);
  v54 = v50;
  v55 = *(_OWORD *)(v6 + 96);
  v51 = *(_OWORD *)(v7 + 80);
  v64 = *(_OWORD *)(v7 + 64);
  v65 = v51;
  v66 = *(_OWORD *)(v7 + 96);
  if ((sub_24967666C() & 1) == 0)
    return 0;
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  return (_s21UIIntelligenceSupport20IntelligenceFragmentV8RemoteIDV2eeoiySbAE_AEtFZ_0() & 1) != 0;
}

unint64_t sub_24963484C()
{
  unint64_t result;

  result = qword_25786B190;
  if (!qword_25786B190)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496774CC, &_s13RemoteProcessV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B190);
  }
  return result;
}

unint64_t sub_249634890()
{
  unint64_t result;

  result = qword_25786AF98;
  if (!qword_25786AF98)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceProcessInfo, &type metadata for IntelligenceProcessInfo);
    atomic_store(result, (unint64_t *)&qword_25786AF98);
  }
  return result;
}

unint64_t sub_2496348D4()
{
  unint64_t result;

  result = qword_25786A868;
  if (!qword_25786A868)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceProcessInfo, &type metadata for IntelligenceProcessInfo);
    atomic_store(result, (unint64_t *)&qword_25786A868);
  }
  return result;
}

uint64_t sub_249634918(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IntelligenceFragment.RemoteContext(255);
    result = MEMORY[0x24BCF4DE0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249634958(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24963499C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_QWORD *_s13RemoteProcessVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v19 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_QWORD *)(a1 + 36) = *(uint64_t *)((char *)a2 + 36);
    v6 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)(a1 + v7);
    v9 = (uint64_t)a2 + v7;
    *(_OWORD *)((char *)v8 + 47) = *(_OWORD *)((char *)a2 + v7 + 47);
    v10 = *(_OWORD *)((char *)a2 + v7 + 32);
    v11 = *(_OWORD *)((char *)a2 + v7);
    v8[1] = *(_OWORD *)((char *)a2 + v7 + 16);
    v8[2] = v10;
    *v8 = v11;
    v12 = *(_OWORD *)((char *)a2 + v7 + 96);
    v13 = *(_OWORD *)((char *)a2 + v7 + 64);
    v8[5] = *(_OWORD *)((char *)a2 + v7 + 80);
    v8[6] = v12;
    v8[4] = v13;
    v14 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
    v15 = (char *)v8 + v14;
    v16 = v9 + v14;
    v17 = sub_24967633C();
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
  }
  return v3;
}

uint64_t _s13RemoteProcessVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = v4 + *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
  v6 = sub_24967633C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t _s13RemoteProcessVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (_OWORD *)(a1 + v6);
  v8 = a2 + v6;
  *(_OWORD *)((char *)v7 + 47) = *(_OWORD *)(a2 + v6 + 47);
  v9 = *(_OWORD *)(a2 + v6 + 32);
  v10 = *(_OWORD *)(a2 + v6);
  v7[1] = *(_OWORD *)(a2 + v6 + 16);
  v7[2] = v9;
  *v7 = v10;
  v11 = *(_OWORD *)(a2 + v6 + 96);
  v12 = *(_OWORD *)(a2 + v6 + 64);
  v7[5] = *(_OWORD *)(a2 + v6 + 80);
  v7[6] = v11;
  v7[4] = v12;
  v13 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
  v14 = (char *)v7 + v13;
  v15 = v8 + v13;
  v16 = sub_24967633C();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  return a1;
}

uint64_t _s13RemoteProcessVwca(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *a2;
  v7 = a2[1];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_DWORD *)(v9 + 4) = *(_DWORD *)(v10 + 4);
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(v9 + 9) = *(_BYTE *)(v10 + 9);
  *(_BYTE *)(v9 + 10) = *(_BYTE *)(v10 + 10);
  *(_BYTE *)(v9 + 11) = *(_BYTE *)(v10 + 11);
  *(_BYTE *)(v9 + 12) = *(_BYTE *)(v10 + 12);
  *(_BYTE *)(v9 + 13) = *(_BYTE *)(v10 + 13);
  *(_BYTE *)(v9 + 14) = *(_BYTE *)(v10 + 14);
  *(_BYTE *)(v9 + 15) = *(_BYTE *)(v10 + 15);
  v11 = *(_QWORD *)(v10 + 16);
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 25) = *(_BYTE *)(v10 + 25);
  v12 = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = v12;
  *(_BYTE *)(v9 + 41) = *(_BYTE *)(v10 + 41);
  v13 = *(_QWORD *)(v10 + 48);
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_QWORD *)(v9 + 48) = v13;
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  *(_BYTE *)(v9 + 58) = *(_BYTE *)(v10 + 58);
  *(_BYTE *)(v9 + 59) = *(_BYTE *)(v10 + 59);
  *(_BYTE *)(v9 + 60) = *(_BYTE *)(v10 + 60);
  *(_BYTE *)(v9 + 61) = *(_BYTE *)(v10 + 61);
  *(_BYTE *)(v9 + 62) = *(_BYTE *)(v10 + 62);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 80) = *(_QWORD *)(v10 + 80);
  *(_QWORD *)(v9 + 88) = *(_QWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 96) = *(_QWORD *)(v10 + 96);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  v14 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
  v15 = v9 + v14;
  v16 = v10 + v14;
  v17 = sub_24967633C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *_s13RemoteProcessVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _OWORD *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  *(_OWORD *)((char *)v7 + 47) = *(_OWORD *)((char *)a2 + v6 + 47);
  v10 = *(_OWORD *)((char *)a2 + v6 + 64);
  v11 = *(_OWORD *)((char *)a2 + v6 + 96);
  v7[5] = *(_OWORD *)((char *)a2 + v6 + 80);
  v7[6] = v11;
  v7[4] = v10;
  v12 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
  v13 = (char *)v7 + v12;
  v14 = &v8[v12];
  v15 = sub_24967633C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t _s13RemoteProcessVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(v9 + 9) = *(_BYTE *)(v10 + 9);
  *(_BYTE *)(v9 + 10) = *(_BYTE *)(v10 + 10);
  *(_BYTE *)(v9 + 11) = *(_BYTE *)(v10 + 11);
  *(_BYTE *)(v9 + 12) = *(_BYTE *)(v10 + 12);
  *(_BYTE *)(v9 + 13) = *(_BYTE *)(v10 + 13);
  *(_BYTE *)(v9 + 14) = *(_BYTE *)(v10 + 14);
  *(_BYTE *)(v9 + 15) = *(_BYTE *)(v10 + 15);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(v10 + 24);
  *(_BYTE *)(v9 + 25) = *(_BYTE *)(v10 + 25);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  *(_BYTE *)(v9 + 41) = *(_BYTE *)(v10 + 41);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v10 + 48);
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  *(_BYTE *)(v9 + 58) = *(_BYTE *)(v10 + 58);
  *(_BYTE *)(v9 + 59) = *(_BYTE *)(v10 + 59);
  *(_BYTE *)(v9 + 60) = *(_BYTE *)(v10 + 60);
  *(_BYTE *)(v9 + 61) = *(_BYTE *)(v10 + 61);
  *(_BYTE *)(v9 + 62) = *(_BYTE *)(v10 + 62);
  v11 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v11;
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  v12 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_24967633C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t _s13RemoteProcessVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249634F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t _s13RemoteProcessVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249635024(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 56) = a2;
  }
  else
  {
    v7 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_249635098()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IntelligenceFragment.RemoteContext(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s13RemoteProcessV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249635158 + 4 * byte_2496772ED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24963518C + 4 * asc_2496772E8[v4]))();
}

uint64_t sub_24963518C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249635194(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24963519CLL);
  return result;
}

uint64_t sub_2496351A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496351B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2496351B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496351BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13RemoteProcessV10CodingKeysOMa()
{
  return &_s13RemoteProcessV10CodingKeysON;
}

unint64_t sub_2496351DC()
{
  unint64_t result;

  result = qword_25786B1A8;
  if (!qword_25786B1A8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496774A4, &_s13RemoteProcessV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B1A8);
  }
  return result;
}

unint64_t sub_249635224()
{
  unint64_t result;

  result = qword_25786B1B0;
  if (!qword_25786B1B0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496773DC, &_s13RemoteProcessV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B1B0);
  }
  return result;
}

unint64_t sub_24963526C()
{
  unint64_t result;

  result = qword_25786B1B8;
  if (!qword_25786B1B8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677404, &_s13RemoteProcessV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B1B8);
  }
  return result;
}

double sub_2496352B0()
{
  uint64_t v0;
  double result;

  type metadata accessor for IntelligenceCollectionListener();
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  qword_2544AE4A0 = v0;
  return result;
}

uint64_t static IntelligenceCollectionListener.shared.getter()
{
  if (qword_2544AE490 != -1)
    swift_once();
  return swift_retain();
}

BOOL IntelligenceCollectionListener.shouldCollect.getter()
{
  os_unfair_lock_s *v0;
  _BOOL8 v1;
  BOOL v3;

  if (qword_2544AE4B0 != -1)
    swift_once();
  v0 = (os_unfair_lock_s *)*((_QWORD *)off_2544AE4A8 + 2);
  swift_retain();
  os_unfair_lock_lock(v0 + 8);
  sub_24965D16C((uint64_t)&v0[4], &v3);
  os_unfair_lock_unlock(v0 + 8);
  v1 = v3;
  swift_release();
  return v1;
}

uint64_t sub_2496353C4@<X0>(BOOL *a1@<X8>)
{
  os_unfair_lock_s *v2;
  BOOL v3;
  uint64_t result;
  BOOL v5;

  if (qword_2544AE4B0 != -1)
    swift_once();
  v2 = (os_unfair_lock_s *)*((_QWORD *)off_2544AE4A8 + 2);
  swift_retain();
  os_unfair_lock_lock(v2 + 8);
  sub_24965D16C((uint64_t)&v2[4], &v5);
  os_unfair_lock_unlock(v2 + 8);
  v3 = v5;
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t IntelligenceCollectionListener.shouldCollect.setter(char a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;

  if (qword_2544AE4B0 != -1)
    swift_once();
  v3 = (os_unfair_lock_s *)*((_QWORD *)off_2544AE4A8 + 2);
  swift_retain();
  os_unfair_lock_lock(v3 + 8);
  sub_24965D180((uint64_t)&v3[4], a1 & 1, v1, (uint64_t)&off_251A9EB40);
  os_unfair_lock_unlock(v3 + 8);
  return swift_release();
}

uint64_t (*IntelligenceCollectionListener.shouldCollect.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  BOOL v4;
  BOOL v6;

  *(_QWORD *)a1 = v1;
  if (qword_2544AE4B0 != -1)
    swift_once();
  v3 = (os_unfair_lock_s *)*((_QWORD *)off_2544AE4A8 + 2);
  swift_retain();
  os_unfair_lock_lock(v3 + 8);
  sub_24965D16C((uint64_t)&v3[4], &v6);
  *(_QWORD *)(a1 + 8) = 0;
  os_unfair_lock_unlock(v3 + 8);
  v4 = v6;
  swift_release();
  *(_BYTE *)(a1 + 16) = v4;
  return sub_2496355DC;
}

uint64_t sub_2496355DC(uint64_t a1)
{
  uint64_t v1;
  char v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)a1;
  v2 = *(_BYTE *)(a1 + 16);
  v3 = (os_unfair_lock_s *)*((_QWORD *)off_2544AE4A8 + 2);
  swift_retain();
  os_unfair_lock_lock(v3 + 8);
  sub_24965D180((uint64_t)&v3[4], v2, v1, (uint64_t)&off_251A9EB40);
  os_unfair_lock_unlock(v3 + 8);
  return swift_release();
}

uint64_t IntelligenceCollectionListener.observer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_249635D80(v1 + 16, a1);
}

uint64_t IntelligenceCollectionListener.observer.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  sub_249635DC8(a1, v1 + 16);
  return swift_endAccess();
}

uint64_t (*IntelligenceCollectionListener.observer.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t IntelligenceCollectionListener.deinit()
{
  uint64_t v0;

  sub_249635E10(v0 + 16);
  return v0;
}

uint64_t IntelligenceCollectionListener.__deallocating_deinit()
{
  uint64_t v0;

  sub_249635E10(v0 + 16);
  return swift_deallocClassInstance();
}

void sub_249635774(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  __CFRunLoop *v21;
  __CFRunLoop *v22;
  uint64_t v23;
  const void *v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  char v30;
  char v31;
  unsigned int v32;
  unsigned int v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t (*v44)();
  char v45;
  char v46;
  uint64_t (*v47)();
  char v48;
  char v49;
  __int128 v50[2];
  __int128 aBlock;
  uint64_t (*v52)();
  void *v53;
  uint64_t (*v54)();
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  _BYTE v64[48];

  v2 = v1;
  v3 = *a1;
  v4 = a1[1];
  v5 = *((_BYTE *)a1 + 8);
  v6 = *((_BYTE *)a1 + 9);
  v7 = *((_BYTE *)a1 + 10);
  v8 = *((_BYTE *)a1 + 11);
  v9 = *((_BYTE *)a1 + 12);
  v10 = *((_BYTE *)a1 + 13);
  v48 = *((_BYTE *)a1 + 15);
  v49 = *((_BYTE *)a1 + 14);
  v47 = (uint64_t (*)())*((_QWORD *)a1 + 2);
  v45 = *((_BYTE *)a1 + 25);
  v46 = *((_BYTE *)a1 + 24);
  v44 = (uint64_t (*)())*((_QWORD *)a1 + 4);
  v42 = *((_BYTE *)a1 + 41);
  v43 = *((_BYTE *)a1 + 40);
  v41 = *((_QWORD *)a1 + 6);
  v39 = *((_BYTE *)a1 + 57);
  v40 = *((_BYTE *)a1 + 56);
  v37 = *((_BYTE *)a1 + 59);
  v38 = *((_BYTE *)a1 + 58);
  v35 = *((_BYTE *)a1 + 61);
  v36 = *((_BYTE *)a1 + 60);
  v34 = *((_BYTE *)a1 + 62);
  swift_beginAccess();
  sub_249635D80(v1 + 16, (uint64_t)&aBlock);
  if (v53)
  {
    v32 = v4;
    v33 = v3;
    sub_249635EC4(&aBlock, (uint64_t)v64);
    if (qword_25786AC58 != -1)
      swift_once();
    v11 = sub_2496763D8();
    __swift_project_value_buffer(v11, (uint64_t)qword_25786B020);
    v12 = sub_2496763C0();
    v13 = sub_24967663C();
    if (os_log_type_enabled(v12, v13))
    {
      v31 = v5;
      v14 = (uint8_t *)swift_slowAlloc();
      v30 = v6;
      v15 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v15;
      *(_DWORD *)v14 = 136446210;
      v16 = RequestID.debugDescription.getter();
      *(_QWORD *)&v50[0] = sub_249652C48(v16, v17, (uint64_t *)&aBlock);
      sub_2496766E4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249630000, v12, v13, "received request to collect fragments %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      v18 = v15;
      v6 = v30;
      MEMORY[0x24BCF4E7C](v18, -1, -1);
      v19 = v14;
      v5 = v31;
      MEMORY[0x24BCF4E7C](v19, -1, -1);
    }

    if (qword_2544AE4B0 != -1)
      swift_once();
    *(_QWORD *)&aBlock = __PAIR64__(v32, v33);
    BYTE8(aBlock) = v5;
    BYTE9(aBlock) = v6;
    BYTE10(aBlock) = v7;
    BYTE11(aBlock) = v8;
    BYTE12(aBlock) = v9;
    BYTE13(aBlock) = v10;
    BYTE14(aBlock) = v49;
    HIBYTE(aBlock) = v48;
    v52 = v47;
    LOBYTE(v53) = v46;
    BYTE1(v53) = v45;
    v54 = v44;
    LOBYTE(v55) = v43;
    BYTE1(v55) = v42;
    v56 = v41;
    v57 = v40;
    v58 = v39;
    v59 = v38;
    v60 = v37;
    v61 = v36;
    v62 = v35;
    v63 = v34;
    v20 = sub_24965B0C4((unsigned int *)&aBlock);
    v21 = CFRunLoopGetMain();
    if (v21)
    {
      v22 = v21;
      sub_249635EDC((uint64_t)v64, (uint64_t)v50);
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v2;
      sub_249635EC4(v50, v23 + 24);
      *(_QWORD *)(v23 + 64) = v20;
      v24 = (const void *)*MEMORY[0x24BDBD598];
      if (*MEMORY[0x24BDBD598])
      {
        v54 = sub_249635F54;
        v55 = v23;
        *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v52 = sub_24965B7DC;
        v53 = &block_descriptor;
        v25 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release();
        CFRunLoopPerformBlock(v22, v24, v25);
        _Block_release(v25);
        CFRunLoopWakeUp(v22);
        swift_release();

        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sub_249635E10((uint64_t)&aBlock);
    if (qword_25786AC58 != -1)
      swift_once();
    v26 = sub_2496763D8();
    __swift_project_value_buffer(v26, (uint64_t)qword_25786B020);
    v27 = sub_2496763C0();
    v28 = sub_249676648();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_249630000, v27, v28, "No application owning kit has registered an observer", v29, 2u);
      MEMORY[0x24BCF4E7C](v29, -1, -1);
    }

  }
}

uint64_t sub_249635C90(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  os_unfair_lock_s *v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v10;

  if (qword_2544AE4B0 != -1)
    swift_once();
  v5 = (os_unfair_lock_s *)*((_QWORD *)off_2544AE4A8 + 2);
  swift_retain();
  os_unfair_lock_lock(v5 + 8);
  sub_24965D16C((uint64_t)&v5[4], &v10);
  os_unfair_lock_unlock(v5 + 8);
  v6 = v10;
  swift_release();
  if (v6)
  {
    v7 = a2[3];
    v8 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(a3, v7, v8);
  }
  return IntelligenceCollectionCoordinator.finishCollection(_:)(a3);
}

uint64_t sub_249635D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249635DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_249635E10(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE498);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249635E54(char *a1)
{
  return IntelligenceCollectionListener.shouldCollect.setter(*a1);
}

uint64_t dispatch thunk of IntelligenceElementCollecting.collectFragment(collector:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for IntelligenceCollectionListener()
{
  return objc_opt_self();
}

uint64_t method lookup function for IntelligenceCollectionListener()
{
  return swift_lookUpClassMethod();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_249635EC4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_249635EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_249635F20()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249635F54()
{
  uint64_t *v0;

  return sub_249635C90(v0[2], v0 + 3, v0[8]);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

double IntelligenceElement.boundingBox.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void IntelligenceElement.boundingBox.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*IntelligenceElement.boundingBox.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IntelligenceElement();
  return sub_249634958(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
}

uint64_t type metadata accessor for IntelligenceElement()
{
  uint64_t result;

  result = qword_2544ADF80;
  if (!qword_2544ADF80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t IntelligenceElement.content.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IntelligenceElement() + 20);
  return sub_24963604C(a1, v3);
}

uint64_t sub_24963604C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntelligenceElement.Content();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*IntelligenceElement.content.modify())()
{
  type metadata accessor for IntelligenceElement();
  return nullsub_1;
}

uint64_t IntelligenceElement.subelements.getter()
{
  type metadata accessor for IntelligenceElement();
  return swift_bridgeObjectRetain();
}

uint64_t IntelligenceElement.subelements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for IntelligenceElement() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*IntelligenceElement.subelements.modify())()
{
  type metadata accessor for IntelligenceElement();
  return nullsub_1;
}

uint64_t IntelligenceElement.fractionVisible.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for IntelligenceElement() + 28));
}

uint64_t IntelligenceElement.fractionVisible.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for IntelligenceElement();
  v6 = v2 + *(int *)(result + 28);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*IntelligenceElement.fractionVisible.modify())()
{
  type metadata accessor for IntelligenceElement();
  return nullsub_1;
}

unint64_t IntelligenceElement.extraAttributes.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for IntelligenceElement() + 32));
  if (*(_QWORD *)(v1 + 16)
    && (v2 = sub_24963CA00(0), (v3 & 1) != 0)
    && *(_BYTE *)(*(_QWORD *)(v1 + 56) + 24 * v2 + 16) == 2)
  {
    return swift_bridgeObjectRetain();
  }
  else
  {
    return sub_249636310(MEMORY[0x24BEE4AF8]);
  }
}

unint64_t sub_24963623C(uint64_t *a1)
{
  uint64_t v1;
  char v2;

  v1 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    v2 = 2;
  }
  else
  {
    v1 = 0;
    v2 = -1;
  }
  type metadata accessor for IntelligenceElement();
  return sub_249636430(v1, 0, v2, 0);
}

unint64_t IntelligenceElement.extraAttributes.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    v2 = 2;
  }
  else
  {
    swift_bridgeObjectRelease();
    v1 = 0;
    v2 = -1;
  }
  type metadata accessor for IntelligenceElement();
  return sub_249636430(v1, 0, v2, 0);
}

unint64_t sub_249636310(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B258);
  v2 = (_QWORD *)sub_24967681C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_24963CA58(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249636430(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4)
{
  uint64_t *v4;
  uint64_t *v5;
  char v10;
  unint64_t result;
  char v12;
  unint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v5 = v4;
  if (a3 == -1)
  {
    result = sub_24963CA00(a4);
    if ((v12 & 1) != 0)
    {
      v13 = result;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v15 = *v4;
      v21 = *v5;
      *v5 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24963D9F8();
        v15 = v21;
      }
      v16 = *(_QWORD *)(v15 + 56) + 24 * v13;
      v17 = *(_QWORD *)v16;
      v18 = *(_QWORD *)(v16 + 8);
      v19 = *(_BYTE *)(v16 + 16);
      sub_24963D364(v13, v15);
      *v5 = v15;
      swift_bridgeObjectRelease();
      return sub_24963DBAC(v17, v18, v19);
    }
  }
  else
  {
    v10 = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v4;
    *v4 = 0x8000000000000000;
    sub_24963D6F8(a1, a2, a3, a4, v10);
    *v4 = v20;
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t (*IntelligenceElement.extraAttributes.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for IntelligenceElement() + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(v1 + v3);
  if (*(_QWORD *)(v4 + 16)
    && (v5 = sub_24963CA00(0), (v6 & 1) != 0)
    && *(_BYTE *)(*(_QWORD *)(v4 + 56) + 24 * v5 + 16) == 2)
  {
    v7 = swift_bridgeObjectRetain();
  }
  else
  {
    v7 = sub_249636310(MEMORY[0x24BEE4AF8]);
  }
  *(_QWORD *)a1 = v7;
  return sub_2496365CC;
}

unint64_t sub_2496365CC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      v4 = swift_bridgeObjectRetain();
      v5 = 2;
    }
    else
    {
      v4 = 0;
      v5 = -1;
    }
    sub_249636430(v4, 0, v5, 0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (v3)
    {
      v6 = 2;
    }
    else
    {
      swift_bridgeObjectRelease();
      v2 = 0;
      v6 = -1;
    }
    return sub_249636430(v2, 0, v6, 0);
  }
}

uint64_t IntelligenceElement.customTypeNames.getter()
{
  return sub_249636AE8(1u);
}

unint64_t IntelligenceElement.customTypeNames.setter(uint64_t a1)
{
  return sub_249636BCC(a1, 1u);
}

unint64_t (*IntelligenceElement.customTypeNames.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for IntelligenceElement() + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(v1 + v3);
  if (*(_QWORD *)(v4 + 16)
    && (v5 = sub_24963CA00(1u), (v6 & 1) != 0)
    && *(_BYTE *)(*(_QWORD *)(v4 + 56) + 24 * v5 + 16) == 1)
  {
    v7 = swift_bridgeObjectRetain();
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)a1 = v7;
  return sub_249636704;
}

unint64_t sub_249636704(uint64_t *a1, char a2)
{
  return sub_249636CC4(a1, a2, 1u);
}

uint64_t IntelligenceElement.customControllerTypeNames.getter()
{
  return sub_249636AE8(2u);
}

unint64_t IntelligenceElement.customControllerTypeNames.setter(uint64_t a1)
{
  return sub_249636BCC(a1, 2u);
}

unint64_t (*IntelligenceElement.customControllerTypeNames.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for IntelligenceElement() + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(v1 + v3);
  if (*(_QWORD *)(v4 + 16)
    && (v5 = sub_24963CA00(2u), (v6 & 1) != 0)
    && *(_BYTE *)(*(_QWORD *)(v4 + 56) + 24 * v5 + 16) == 1)
  {
    v7 = swift_bridgeObjectRetain();
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)a1 = v7;
  return sub_2496367A0;
}

unint64_t sub_2496367A0(uint64_t *a1, char a2)
{
  return sub_249636CC4(a1, a2, 2u);
}

uint64_t IntelligenceElement.appEntityIdentifier.getter()
{
  return sub_249636D80(3u);
}

unint64_t IntelligenceElement.appEntityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_249636DFC(a1, a2, 3u);
}

uint64_t (*IntelligenceElement.appEntityIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = IntelligenceElement.appEntityIdentifier.getter();
  a1[1] = v3;
  return sub_2496367EC;
}

uint64_t sub_2496367EC(uint64_t *a1, char a2)
{
  return sub_249636848(a1, a2, (uint64_t (*)(uint64_t, uint64_t))IntelligenceElement.appEntityIdentifier.setter);
}

uint64_t IntelligenceElement.appIntentIdentifier.getter()
{
  return sub_249636D80(4u);
}

unint64_t IntelligenceElement.appIntentIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_249636DFC(a1, a2, 4u);
}

uint64_t (*IntelligenceElement.appIntentIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = IntelligenceElement.appIntentIdentifier.getter();
  a1[1] = v3;
  return sub_24963683C;
}

uint64_t sub_24963683C(uint64_t *a1, char a2)
{
  return sub_249636848(a1, a2, (uint64_t (*)(uint64_t, uint64_t))IntelligenceElement.appIntentIdentifier.setter);
}

uint64_t sub_249636848(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v5 = *a1;
  v4 = a1[1];
  if ((a2 & 1) == 0)
    return a3(*a1, v4);
  swift_bridgeObjectRetain();
  a3(v5, v4);
  return swift_bridgeObjectRelease();
}

uint64_t IntelligenceElement.appIntentsPayload.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for IntelligenceElement() + 32));
  if (!*(_QWORD *)(v1 + 16))
    return 0;
  v2 = sub_24963CA00(5u);
  if ((v3 & 1) == 0)
    return 0;
  v4 = *(_QWORD *)(v1 + 56) + 24 * v2;
  if (*(_BYTE *)(v4 + 16) != 3)
    return 0;
  v5 = *(_QWORD *)v4;
  sub_24963DC2C(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  return v5;
}

unint64_t IntelligenceElement.appIntentsPayload.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t result;
  char v8;
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = *(int *)(type metadata accessor for IntelligenceElement() + 32);
  if (a2 >> 60 == 15)
  {
    result = sub_24963CA00(5u);
    if ((v8 & 1) != 0)
    {
      v9 = result;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v11 = *(_QWORD *)(v2 + v6);
      v17 = *(_QWORD *)(v3 + v6);
      *(_QWORD *)(v3 + v6) = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24963D9F8();
        v11 = v17;
      }
      v12 = *(_QWORD *)(v11 + 56) + 24 * v9;
      v13 = *(_QWORD *)v12;
      v14 = *(_QWORD *)(v12 + 8);
      v15 = *(_BYTE *)(v12 + 16);
      sub_24963D364(v9, v11);
      *(_QWORD *)(v3 + v6) = v11;
      swift_bridgeObjectRelease();
      return sub_24963DBAC(v13, v14, v15);
    }
  }
  else
  {
    v16 = swift_isUniquelyReferenced_nonNull_native();
    v18 = *(_QWORD *)(v2 + v6);
    *(_QWORD *)(v2 + v6) = 0x8000000000000000;
    sub_24963D6F8(a1, a2, 3, 5u, v16);
    *(_QWORD *)(v2 + v6) = v18;
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t (*IntelligenceElement.appIntentsPayload.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = IntelligenceElement.appIntentsPayload.getter();
  a1[1] = v3;
  return sub_249636A78;
}

unint64_t sub_249636A78(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return IntelligenceElement.appIntentsPayload.setter(*a1, v3);
  sub_24963DC70(*a1, v3);
  IntelligenceElement.appIntentsPayload.setter(v2, v3);
  return sub_24963DC84(v2, v3);
}

uint64_t IntelligenceElement.appIntentsPayloadDebugDescription.getter()
{
  return sub_249636AE8(6u);
}

uint64_t sub_249636AE8(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for IntelligenceElement() + 32));
  if (*(_QWORD *)(v3 + 16)
    && (v4 = sub_24963CA00(a1), (v5 & 1) != 0)
    && *(_BYTE *)(*(_QWORD *)(v3 + 56) + 24 * v4 + 16) == 1)
  {
    return swift_bridgeObjectRetain();
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
}

unint64_t sub_249636B54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v6;
  char v7;

  v6 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = 1;
  }
  else
  {
    v6 = 0;
    v7 = -1;
  }
  type metadata accessor for IntelligenceElement();
  return sub_249636430(v6, 0, v7, a5);
}

unint64_t IntelligenceElement.appIntentsPayloadDebugDescription.setter(uint64_t a1)
{
  return sub_249636BCC(a1, 6u);
}

unint64_t sub_249636BCC(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  char v4;

  v3 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    v4 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = 0;
    v4 = -1;
  }
  type metadata accessor for IntelligenceElement();
  return sub_249636430(v3, 0, v4, a2);
}

unint64_t (*IntelligenceElement.appIntentsPayloadDebugDescription.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for IntelligenceElement() + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(v1 + v3);
  if (*(_QWORD *)(v4 + 16)
    && (v5 = sub_24963CA00(6u), (v6 & 1) != 0)
    && *(_BYTE *)(*(_QWORD *)(v4 + 56) + 24 * v5 + 16) == 1)
  {
    v7 = swift_bridgeObjectRetain();
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)a1 = v7;
  return sub_249636CBC;
}

unint64_t sub_249636CBC(uint64_t *a1, char a2)
{
  return sub_249636CC4(a1, a2, 6u);
}

unint64_t sub_249636CC4(uint64_t *a1, char a2, unsigned __int8 a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 16);
  if ((a2 & 1) != 0)
  {
    if (v5)
    {
      v6 = swift_bridgeObjectRetain();
      v7 = 1;
    }
    else
    {
      v6 = 0;
      v7 = -1;
    }
    sub_249636430(v6, 0, v7, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (v5)
    {
      v8 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      v4 = 0;
      v8 = -1;
    }
    return sub_249636430(v4, 0, v8, a3);
  }
}

uint64_t IntelligenceElement.accessibilityLabel.getter()
{
  return sub_249636D80(7u);
}

uint64_t sub_249636D80(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for IntelligenceElement() + 32));
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  v4 = sub_24963CA00(a1);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(v3 + 56) + 24 * v4;
  if (*(_BYTE *)(v6 + 16))
    return 0;
  v7 = *(_QWORD *)v6;
  swift_bridgeObjectRetain();
  return v7;
}

unint64_t IntelligenceElement.accessibilityLabel.setter(uint64_t a1, uint64_t a2)
{
  return sub_249636DFC(a1, a2, 7u);
}

unint64_t sub_249636DFC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t result;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v5 = v3;
  v8 = *(int *)(type metadata accessor for IntelligenceElement() + 32);
  if (a2)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *(_QWORD *)(v3 + v8);
    *(_QWORD *)(v3 + v8) = 0x8000000000000000;
    sub_24963D6F8(a1, a2, 0, a3, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v3 + v8) = v19;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_24963CA00(a3);
    if ((v11 & 1) != 0)
    {
      v12 = result;
      v13 = swift_isUniquelyReferenced_nonNull_native();
      v14 = *(_QWORD *)(v3 + v8);
      v20 = *(_QWORD *)(v5 + v8);
      *(_QWORD *)(v5 + v8) = 0x8000000000000000;
      if ((v13 & 1) == 0)
      {
        sub_24963D9F8();
        v14 = v20;
      }
      v15 = *(_QWORD *)(v14 + 56) + 24 * v12;
      v16 = *(_QWORD *)v15;
      v17 = *(_QWORD *)(v15 + 8);
      v18 = *(_BYTE *)(v15 + 16);
      sub_24963D364(v12, v14);
      *(_QWORD *)(v5 + v8) = v14;
      swift_bridgeObjectRelease();
      return sub_24963DBAC(v16, v17, v18);
    }
  }
  return result;
}

uint64_t (*IntelligenceElement.accessibilityLabel.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = IntelligenceElement.accessibilityLabel.getter();
  a1[1] = v3;
  return sub_249636F4C;
}

uint64_t sub_249636F4C(uint64_t *a1, char a2)
{
  return sub_249636848(a1, a2, (uint64_t (*)(uint64_t, uint64_t))IntelligenceElement.accessibilityLabel.setter);
}

uint64_t IntelligenceElement.init(boundingBox:content:subelements:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  int *v14;
  char *v15;
  uint64_t v16;
  uint64_t result;

  v14 = (int *)type metadata accessor for IntelligenceElement();
  v15 = (char *)a3 + v14[7];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  v16 = v14[8];
  *(_QWORD *)((char *)a3 + v16) = sub_24963E7FC(MEMORY[0x24BEE4AF8]);
  *a3 = a4;
  a3[1] = a5;
  a3[2] = a6;
  a3[3] = a7;
  result = sub_24963E94C(a1, (uint64_t)a3 + v14[5], (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
  *(_QWORD *)((char *)a3 + v14[6]) = a2;
  return result;
}

uint64_t IntelligenceElement.pruned()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = v1;
  v4 = (int *)type metadata accessor for IntelligenceElement();
  v5 = *((_QWORD *)v4 - 1);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v11 = type metadata accessor for IntelligenceElement.Content();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v2 + v4[5];
  swift_storeEnumTagMultiPayload();
  _s21UIIntelligenceSupport19IntelligenceElementV7ContentO2eeoiySbAE_AEtFZ_0(v14, (uint64_t)v13);
  LOBYTE(v14) = v15;
  sub_24963499C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
  sub_249634958(v2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  if ((v14 & 1) == 0)
  {
    sub_24963499C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    sub_249634958(v2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(*(_QWORD *)&v10[v4[8]] + 16);
  sub_24963499C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  sub_249634958(v2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  if (v16)
  {
LABEL_7:
    sub_24963499C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    goto LABEL_8;
  }
  v17 = *(_QWORD *)(*(_QWORD *)&v8[v4[6]] + 16);
  sub_24963499C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  if (v17 <= 1)
  {
    v18 = *(_QWORD *)(v2 + v4[6]);
    if (!*(_QWORD *)(v18 + 16))
    {
      v19 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a1, v19, 1, v4);
    }
    v2 = v18 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  }
LABEL_8:
  sub_249634958(v2, a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  v19 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a1, v19, 1, v4);
}

uint64_t IntelligenceElement.recursivelyPruned()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25786AF78);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntelligenceElement();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v31 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v31 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v31 - v17;
  sub_249634958(v2, (uint64_t)v31 - v17, v19);
  v20 = *(int *)(v7 + 24);
  v21 = *(_QWORD *)(v2 + v20);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v32 = v18;
    v33 = a1;
    v34 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v23 = v21 + v34;
    v24 = *(_QWORD *)(v8 + 72);
    v31[1] = v21;
    swift_bridgeObjectRetain();
    v25 = MEMORY[0x24BEE4AF8];
    v35 = v8;
    v36 = v7;
    do
    {
      v26 = sub_249634958(v23, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      IntelligenceElement.recursivelyPruned()(v26);
      sub_24963499C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_24963EB88((uint64_t)v6, (uint64_t *)&unk_25786AF78);
      }
      else
      {
        sub_24963E94C((uint64_t)v6, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
        sub_24963E94C((uint64_t)v13, v37, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v25 = sub_2496326C0(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
        v28 = *(_QWORD *)(v25 + 16);
        v27 = *(_QWORD *)(v25 + 24);
        if (v28 >= v27 >> 1)
          v25 = sub_2496326C0(v27 > 1, v28 + 1, 1, v25);
        *(_QWORD *)(v25 + 16) = v28 + 1;
        sub_24963E94C(v37, v25 + v34 + v28 * v24, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
        v8 = v35;
        v7 = v36;
      }
      v23 += v24;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v20 = *(int *)(v7 + 24);
    v18 = v32;
    v29 = v33;
  }
  else
  {
    v29 = a1;
    v25 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[v20] = v25;
  IntelligenceElement.pruned()(v29);
  return sub_24963499C((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
}

uint64_t IntelligenceElement.isEqualIgnoringSubelements(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  CGRect *v13;
  uint64_t v14;
  uint64_t v15;
  CGRect *v16;
  char v17;
  _BOOL4 v18;
  char v19;
  char v20;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for IntelligenceElement();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v22 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (CGRect *)((char *)&v22 - v12);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (CGRect *)((char *)&v22 - v15);
  v17 = sub_2496376A0(*(_QWORD *)(v2 + *(int *)(v14 + 32)), *(_QWORD *)(a1 + *(int *)(v14 + 32)));
  sub_249634958(v2, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  sub_249634958(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  if ((v17 & 1) == 0)
  {
    sub_24963499C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    sub_24963499C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    sub_249634958(v2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    sub_249634958(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    goto LABEL_5;
  }
  v18 = CGRectEqualToRect(*v16, *v13);
  sub_24963499C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  sub_24963499C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  sub_249634958(v2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  sub_249634958(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  if (!v18)
  {
LABEL_5:
    v20 = 0;
    goto LABEL_6;
  }
  _s21UIIntelligenceSupport19IntelligenceElementV7ContentO2eeoiySbAE_AEtFZ_0((uint64_t)&v10[*(int *)(v4 + 20)], (uint64_t)&v7[*(int *)(v4 + 20)]);
  v20 = v19;
LABEL_6:
  sub_24963499C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  sub_24963499C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  return v20 & 1;
}

uint64_t sub_2496376A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  int64_t v17;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v3 = *(_QWORD *)(a1 + 64);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    v5 = -1;
    if (v4 < 64)
      v5 = ~(-1 << v4);
    v17 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
LABEL_20:
      v10 = *(_QWORD *)(a1 + 56) + 24 * v6;
      v12 = *(_QWORD *)v10;
      v11 = *(_QWORD *)(v10 + 8);
      v13 = *(_BYTE *)(v10 + 16);
      v14 = sub_24963CA00(*(_BYTE *)(*(_QWORD *)(a1 + 48) + v6));
      if ((v15 & 1) != 0)
        __asm { BR              X8 }
      sub_24964031C(v12, v11, v13);
      sub_24963DBAC(v12, v11, v13);
      return 0;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 72);
      v8 = 1;
      if (v7)
        goto LABEL_19;
      v8 = 2;
      if ((unint64_t)(v4 + 63) >> 6 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_19;
      v8 = 3;
      if ((unint64_t)(v4 + 63) >> 6 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_19:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
        goto LABEL_20;
      }
      v9 = 4;
      if (v17 > 4)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
        {
          v8 = 4;
          goto LABEL_19;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x249638464);
          }
          if (v8 >= v17)
            break;
          v7 = *(_QWORD *)(a1 + 64 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_19;
        }
      }
    }
    return 1;
  }
  return 0;
}

uint64_t sub_249638544(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_24963CA58(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_249676960();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_249638748(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249638788 + 4 * byte_2496775E0[a1]))(0x7474416172747865, 0xEF73657475626972);
}

uint64_t sub_249638788()
{
  return 0x79546D6F74737563;
}

unint64_t sub_2496387AC()
{
  return 0xD000000000000019;
}

uint64_t sub_24963883C()
{
  return 0;
}

void sub_249638848(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_249638854()
{
  sub_249641A44();
  return sub_249676A20();
}

uint64_t sub_24963887C()
{
  sub_249641A44();
  return sub_249676A2C();
}

uint64_t sub_2496388A4()
{
  sub_249641B54();
  return sub_249676A20();
}

uint64_t sub_2496388CC()
{
  sub_249641B54();
  return sub_249676A2C();
}

uint64_t sub_2496388F4()
{
  sub_249641B10();
  return sub_249676A20();
}

uint64_t sub_24963891C()
{
  sub_249641B10();
  return sub_249676A2C();
}

uint64_t sub_249638944()
{
  sub_249641ACC();
  return sub_249676A20();
}

uint64_t sub_24963896C()
{
  sub_249641ACC();
  return sub_249676A2C();
}

uint64_t sub_249638994()
{
  sub_249641A88();
  return sub_249676A20();
}

uint64_t sub_2496389BC()
{
  sub_249641A88();
  return sub_249676A2C();
}

BOOL sub_2496389E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2496389FC()
{
  return sub_2496769B4();
}

void sub_249638A28(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[19];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB40);
  v17[17] = *(_QWORD *)(v3 - 8);
  v17[18] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v17[16] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB60);
  v17[14] = *(_QWORD *)(v5 - 8);
  v17[15] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v17[13] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB38);
  v17[11] = *(_QWORD *)(v7 - 8);
  v17[12] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v17[10] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB50);
  v17[8] = *(_QWORD *)(v9 - 8);
  v17[9] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v17[7] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB48);
  v17[5] = *(_QWORD *)(v11 - 8);
  v17[6] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v17[4] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB58);
  v17[2] = *(_QWORD *)(v13 - 8);
  v17[3] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v17[1] = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB28);
  MEMORY[0x24BDAC7A8](v17[0]);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB30);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB20);
  v19 = *(_QWORD *)(v16 - 8);
  v20 = v16;
  MEMORY[0x24BDAC7A8](v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249641A00();
  sub_249676A14();
  __asm { BR              X10 }
}

uint64_t sub_249638CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 72) = 0;
  sub_249641C20();
  v5 = *(_QWORD *)(v4 - 104);
  sub_2496768DC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v5);
}

uint64_t sub_249638F34()
{
  unsigned __int8 *v0;

  return sub_249638748(*v0);
}

uint64_t sub_249638F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2496407A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_249638F60(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_249638F6C()
{
  sub_249641A00();
  return sub_249676A20();
}

uint64_t sub_249638F94()
{
  sub_249641A00();
  return sub_249676A2C();
}

uint64_t sub_249638FBC()
{
  sub_249641B98();
  return sub_249676A20();
}

uint64_t sub_249638FE4()
{
  sub_249641B98();
  return sub_249676A2C();
}

uint64_t sub_24963900C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_249639038()
{
  sub_249641BDC();
  return sub_249676A20();
}

uint64_t sub_249639060()
{
  sub_249641BDC();
  return sub_249676A2C();
}

uint64_t sub_249639088()
{
  sub_249641C20();
  return sub_249676A20();
}

uint64_t sub_2496390B0()
{
  sub_249641C20();
  return sub_249676A2C();
}

uint64_t sub_2496390D8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_249640AF4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_249639100(_QWORD *a1)
{
  unsigned __int8 *v1;

  sub_249638A28(a1, *v1);
}

void sub_249639118(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  uint64_t v11;
  uint64_t v12;

  v12 = a4;
  v10[7] = a3;
  v10[9] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB70);
  v10[5] = *(_QWORD *)(v5 - 8);
  v10[6] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v10[4] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB88);
  v10[2] = *(_QWORD *)(v7 - 8);
  v10[3] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB78);
  v10[0] = *(_QWORD *)(v8 - 8);
  v10[1] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB80);
  MEMORY[0x24BDAC7A8](v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB68);
  v10[8] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249641C64();
  sub_249676A14();
  __asm { BR              X10 }
}

uint64_t sub_2496392D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 96) = 0;
  sub_249641DB8();
  v5 = *(_QWORD *)(v4 - 112);
  sub_2496768DC();
  sub_24967690C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 128) + 8))(v1, v5);
}

uint64_t sub_249639574()
{
  return 1;
}

uint64_t sub_249639584()
{
  return 12383;
}

uint64_t sub_249639594()
{
  sub_249641D74();
  return sub_249676A20();
}

uint64_t sub_2496395BC()
{
  sub_249641D74();
  return sub_249676A2C();
}

uint64_t sub_2496395E4()
{
  sub_2496769A8();
  sub_2496769B4();
  return sub_2496769E4();
}

uint64_t sub_249639628()
{
  sub_2496769A8();
  sub_2496769B4();
  return sub_2496769E4();
}

uint64_t sub_249639668()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249639694 + 4 * byte_2496775F4[*v0]))(0x676E69727473, 0xE600000000000000);
}

uint64_t sub_249639694()
{
  return 0x7961727261;
}

uint64_t sub_2496396A8()
{
  return 0x616E6F6974636964;
}

uint64_t sub_2496396C4()
{
  return 1635017060;
}

uint64_t sub_2496396D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2496411B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2496396F8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_249639704()
{
  sub_249641C64();
  return sub_249676A20();
}

uint64_t sub_24963972C()
{
  sub_249641C64();
  return sub_249676A2C();
}

uint64_t sub_249639754()
{
  return sub_2496769B4();
}

uint64_t sub_249639778()
{
  sub_249641CA8();
  return sub_249676A20();
}

uint64_t sub_2496397A0()
{
  sub_249641CA8();
  return sub_249676A2C();
}

uint64_t sub_2496397C8()
{
  sub_249641D30();
  return sub_249676A20();
}

uint64_t sub_2496397F0()
{
  sub_249641D30();
  return sub_249676A2C();
}

uint64_t sub_249639818()
{
  sub_2496769A8();
  sub_2496769B4();
  return sub_2496769E4();
}

uint64_t sub_249639858()
{
  sub_2496769A8();
  sub_2496769B4();
  return sub_2496769E4();
}

uint64_t sub_249639894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249676960();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249639910()
{
  sub_249641DB8();
  return sub_249676A20();
}

uint64_t sub_249639938()
{
  sub_249641DB8();
  return sub_249676A2C();
}

void sub_249639960(uint64_t a1)
{
  sub_24963E4D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

_QWORD *sub_24963997C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  char v6;

  result = sub_24964135C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

void sub_2496399A8(_QWORD *a1)
{
  uint64_t v1;

  sub_249639118(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_2496399C8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  CGRect *v7;
  uint64_t v8;
  uint64_t v9;
  CGRect *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  double *v17;
  char v18;
  double *v19;
  int v20;
  char v21;
  BOOL v23;
  uint64_t v25;

  v4 = (int *)type metadata accessor for IntelligenceElement();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (CGRect *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (CGRect *)((char *)&v25 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_22:
    v21 = 0;
    return v21 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_249634958(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      sub_249634958(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      if (!CGRectEqualToRect(*v10, *v7))
        break;
      _s21UIIntelligenceSupport19IntelligenceElementV7ContentO2eeoiySbAE_AEtFZ_0((uint64_t)v10 + v4[5], (uint64_t)v7 + v4[5]);
      if ((v15 & 1) == 0
        || (sub_2496399C8(*(_QWORD *)((char *)&v10->origin.x + v4[6]), *(_QWORD *)((char *)&v7->origin.x + v4[6])) & 1) == 0)
      {
        break;
      }
      v16 = v4[7];
      v17 = (double *)((char *)&v10->origin.x + v16);
      v18 = *((_BYTE *)&v10->origin.y + v16);
      v19 = (double *)((char *)&v7->origin.x + v16);
      v20 = *((unsigned __int8 *)&v7->origin.y + v16);
      if ((v18 & 1) != 0)
      {
        if (!v20)
          break;
      }
      else
      {
        if (*v17 != *v19)
          LOBYTE(v20) = 1;
        if ((v20 & 1) != 0)
          break;
      }
      v21 = sub_2496376A0(*(_QWORD *)((char *)&v10->origin.x + v4[8]), *(_QWORD *)((char *)&v7->origin.x + v4[8]));
      sub_24963499C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      sub_24963499C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      v23 = v14-- != 0;
      if ((v21 & 1) != 0)
      {
        v12 += v13;
        if (v23)
          continue;
      }
      return v21 & 1;
    }
    sub_24963499C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    sub_24963499C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    goto LABEL_22;
  }
  v21 = 1;
  return v21 & 1;
}

uint64_t sub_249639BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  uint64_t v20;
  uint64_t result;
  _QWORD *v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v25 = a2 + 32;
    v26 = a1 + 32;
    while (1)
    {
      v4 = v26 + 56 * v3;
      v5 = *(_QWORD *)(v4 + 16);
      v6 = *(_QWORD *)(v4 + 24);
      v7 = *(_QWORD **)(v4 + 32);
      v28 = *(unsigned __int8 *)(v4 + 40);
      v27 = *(_QWORD *)(v4 + 48);
      v8 = v25 + 56 * v3;
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      v11 = *(_QWORD **)(v8 + 32);
      v12 = *(unsigned __int8 *)(v8 + 40);
      v13 = *(_QWORD *)(v8 + 48);
      v14 = *(_QWORD *)v4 == *(_QWORD *)v8 && *(_QWORD *)(v4 + 8) == *(_QWORD *)(v8 + 8);
      if (!v14 && (sub_249676960() & 1) == 0)
        return 0;
      v15 = v5 == v9 && v6 == v10;
      if (!v15 && (sub_249676960() & 1) == 0)
        return 0;
      v16 = v7[2];
      if (v16 != v11[2])
        return 0;
      if (v16)
        v17 = v7 == v11;
      else
        v17 = 1;
      if (!v17)
      {
        v18 = v7[4] == v11[4] && v7[5] == v11[5];
        if (!v18 && (sub_249676960() & 1) == 0)
          return 0;
        if (v16 != 1)
        {
          v19 = v7[6] == v11[6] && v7[7] == v11[7];
          if (!v19 && (sub_249676960() & 1) == 0)
            return 0;
          v20 = v16 - 2;
          if (v20)
          {
            v22 = v11 + 9;
            v23 = v7 + 9;
            do
            {
              v24 = *(v23 - 1) == *(v22 - 1) && *v23 == *v22;
              if (!v24 && (sub_249676960() & 1) == 0)
                return 0;
              v22 += 2;
              v23 += 2;
            }
            while (--v20);
          }
        }
      }
      result = 0;
      if (v28 != v12 || v27 != v13)
        return result;
      if (++v3 == v2)
        return 1;
    }
  }
  return 1;
}

uint64_t sub_249639D7C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_249676960(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_249676960() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t IntelligenceElement.traverseHierarchy(_:)(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t i;
  uint64_t v35;
  uint64_t v36;
  uint64_t j;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v3 = v2;
  ((void (*)(uint64_t))a1)(v3);
  v6 = type metadata accessor for IntelligenceElement();
  result = *(_QWORD *)(v3 + *(int *)(v6 + 24));
  v43 = *(_QWORD *)(result + 16);
  if (v43)
  {
    v8 = *(_QWORD *)(v6 - 8);
    v69 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v42 = result + v69;
    v9 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    v10 = 0;
    do
    {
      v44 = v10;
      v11 = v42 + v9 * v10;
      ((void (*)(unint64_t))a1)(v11);
      v12 = *(_QWORD *)(v11 + *(int *)(v6 + 24));
      v46 = *(_QWORD *)(v12 + 16);
      if (v46)
      {
        v45 = v12 + v69;
        swift_bridgeObjectRetain();
        v13 = 0;
        do
        {
          v47 = v13;
          v14 = v45 + v13 * v9;
          ((void (*)(uint64_t))a1)(v14);
          v15 = *(_QWORD *)(v14 + *(int *)(v6 + 24));
          v49 = *(_QWORD *)(v15 + 16);
          if (v49)
          {
            v48 = v15 + v69;
            swift_bridgeObjectRetain();
            v16 = 0;
            do
            {
              v50 = v16;
              v17 = v48 + v16 * v9;
              ((void (*)(uint64_t))a1)(v17);
              v18 = *(_QWORD *)(v17 + *(int *)(v6 + 24));
              v52 = *(_QWORD *)(v18 + 16);
              if (v52)
              {
                v51 = v18 + v69;
                swift_bridgeObjectRetain();
                v19 = 0;
                do
                {
                  v53 = v19;
                  v20 = v51 + v19 * v9;
                  ((void (*)(uint64_t))a1)(v20);
                  v21 = *(_QWORD *)(v20 + *(int *)(v6 + 24));
                  v55 = *(_QWORD *)(v21 + 16);
                  if (v55)
                  {
                    v54 = v21 + v69;
                    swift_bridgeObjectRetain();
                    v22 = 0;
                    do
                    {
                      v56 = v22;
                      v23 = v54 + v22 * v9;
                      ((void (*)(uint64_t))a1)(v23);
                      v24 = *(_QWORD *)(v23 + *(int *)(v6 + 24));
                      v58 = *(_QWORD *)(v24 + 16);
                      if (v58)
                      {
                        v57 = v24 + v69;
                        swift_bridgeObjectRetain();
                        v25 = 0;
                        do
                        {
                          v59 = v25;
                          v26 = v57 + v25 * v9;
                          ((void (*)(uint64_t))a1)(v26);
                          v27 = *(_QWORD *)(v26 + *(int *)(v6 + 24));
                          v61 = *(_QWORD *)(v27 + 16);
                          if (v61)
                          {
                            v60 = v27 + v69;
                            swift_bridgeObjectRetain();
                            v28 = 0;
                            do
                            {
                              v62 = v28;
                              v29 = v60 + v28 * v9;
                              ((void (*)(uint64_t))a1)(v29);
                              v30 = *(_QWORD *)(v29 + *(int *)(v6 + 24));
                              v64 = *(_QWORD *)(v30 + 16);
                              if (v64)
                              {
                                v63 = v30 + v69;
                                swift_bridgeObjectRetain();
                                v31 = 0;
                                do
                                {
                                  v65 = v31;
                                  v32 = v63 + v31 * v9;
                                  ((void (*)(uint64_t))a1)(v32);
                                  v33 = *(_QWORD *)(v32 + *(int *)(v6 + 24));
                                  v67 = *(_QWORD *)(v33 + 16);
                                  if (v67)
                                  {
                                    v66 = v33 + v69;
                                    swift_bridgeObjectRetain();
                                    for (i = 0; i != v67; ++i)
                                    {
                                      ((void (*)(uint64_t))a1)(v66 + i * v9);
                                      v35 = *(_QWORD *)(v66 + i * v9 + *(int *)(v6 + 24));
                                      v36 = *(_QWORD *)(v35 + 16);
                                      if (v36)
                                      {
                                        v68 = i;
                                        v70 = v35 + v69;
                                        swift_bridgeObjectRetain();
                                        for (j = 0; j != v36; ++j)
                                        {
                                          ((void (*)(uint64_t))a1)(v70 + j * v9);
                                          v38 = *(_QWORD *)(v70 + j * v9 + *(int *)(v6 + 24));
                                          v39 = *(_QWORD *)(v38 + 16);
                                          if (v39)
                                          {
                                            v40 = v6;
                                            v41 = v38 + v69;
                                            swift_bridgeObjectRetain();
                                            do
                                            {
                                              sub_24963A2D0(v41, a1, a2);
                                              v41 += v9;
                                              --v39;
                                            }
                                            while (v39);
                                            swift_bridgeObjectRelease();
                                            v6 = v40;
                                          }
                                        }
                                        swift_bridgeObjectRelease();
                                        i = v68;
                                      }
                                    }
                                    swift_bridgeObjectRelease();
                                  }
                                  v31 = v65 + 1;
                                }
                                while (v65 + 1 != v64);
                                swift_bridgeObjectRelease();
                              }
                              v28 = v62 + 1;
                            }
                            while (v62 + 1 != v61);
                            swift_bridgeObjectRelease();
                          }
                          v25 = v59 + 1;
                        }
                        while (v59 + 1 != v58);
                        swift_bridgeObjectRelease();
                      }
                      v22 = v56 + 1;
                    }
                    while (v56 + 1 != v55);
                    swift_bridgeObjectRelease();
                  }
                  v19 = v53 + 1;
                }
                while (v53 + 1 != v52);
                swift_bridgeObjectRelease();
              }
              v16 = v50 + 1;
            }
            while (v50 + 1 != v49);
            swift_bridgeObjectRelease();
          }
          v13 = v47 + 1;
        }
        while (v47 + 1 != v46);
        swift_bridgeObjectRelease();
      }
      v10 = v44 + 1;
    }
    while (v44 + 1 != v43);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24963A2D0(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  a2();
  result = type metadata accessor for IntelligenceElement();
  v7 = *(_QWORD *)(a1 + *(int *)(result + 24));
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = *(_QWORD *)(result - 8);
    v10 = v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_24963A2D0(v10, a2, a3);
      v10 += v11;
      --v8;
    }
    while (v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24963A37C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  a3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B0D8);
  v7 = type metadata accessor for IntelligenceElement();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2496786E0;
  sub_249634958(a1, v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  v12 = swift_bridgeObjectRetain();
  sub_24963C740(v12);
  v13 = v11;
  v14 = *(_QWORD *)(a1 + *(int *)(v7 + 24));
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = v14 + v10;
    swift_bridgeObjectRetain();
    do
    {
      sub_24963A37C(v16, v13, a3, a4);
      v16 += v9;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t IntelligenceElement.traverseHierarchyWithAncestors(_:)(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = MEMORY[0x24BEE4AF8];
  ((void (*)(uint64_t, _QWORD))a1)(v2, MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B0D8);
  v7 = type metadata accessor for IntelligenceElement();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2496786E0;
  sub_249634958(v3, v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  sub_24963C740(v6);
  v12 = v11;
  v13 = *(_QWORD *)(v3 + *(int *)(v7 + 24));
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = v13 + v10;
    swift_bridgeObjectRetain();
    do
    {
      sub_24963A37C(v15, v12, a1, a2);
      v15 += v9;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t IntelligenceElement.recursiveMap<A>(_:transform:)@<X0>(_QWORD *a1@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24[16];
  _QWORD *v25;
  void (*v26)(_QWORD);
  uint64_t v27;
  void (*v28)(_QWORD);

  v5 = v4;
  v10 = *MEMORY[0x24BEE2B70];
  v23 = *a1;
  v11 = *(_QWORD *)(v10 + v23 + 8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  sub_249634958(v5, a4, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  swift_getAtKeyPath();
  v16 = v28;
  v28 = a2;
  a2(v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if (v16)
    return sub_24963499C(a4, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  swift_setAtWritableKeyPath();
  v17 = *(_QWORD *)(v23 + *MEMORY[0x24BEE2B70]);
  v18 = *(_QWORD *)(v5 + *(int *)(v17 + 24));
  v25 = a1;
  v26 = v28;
  v27 = a3;
  v20 = sub_24963A7A0((void (*)(uint64_t, uint64_t *))sub_24963E910, (uint64_t)v24, v18);
  v21 = *(int *)(v17 + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + v21) = v20;
  return result;
}

uint64_t Array<A>.recursiveMap<A>(_:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[6];

  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  return sub_24963A7A0((void (*)(uint64_t, uint64_t *))sub_24963E910, (uint64_t)v5, a4);
}

uint64_t sub_24963A7A0(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v18 = a1;
  v19 = a2;
  v6 = type metadata accessor for IntelligenceElement();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_2496553FC(0, v10, 0);
    v11 = v21;
    v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v12 = a3 + v17;
    v13 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      v18(v12, &v20);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_2496553FC(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_24963E94C((uint64_t)v9, v11 + v17 + v15 * v13, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      v12 += v13;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t Array<A>.nearestAncestorProcessInfo.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __int128 v38;

  v4 = type metadata accessor for IntelligenceElement.RemoteProcess();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntelligenceElement.Content();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for IntelligenceElement();
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v37 = v6;
    *(_QWORD *)&v38 = a1;
    v16 = (uint64_t)&v14[*(int *)(result + 20)];
    v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_249634958(v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      sub_249634958(v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
      sub_24963499C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        swift_bridgeObjectRelease();
        v20 = (uint64_t)v37;
        sub_24963E94C((uint64_t)v9, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.RemoteProcess);
        v38 = *(_OWORD *)v20;
        v21 = *(_QWORD *)(v20 + 16);
        v22 = *(_QWORD *)(v20 + 24);
        v23 = *(unsigned __int8 *)(v20 + 32);
        v25 = *(_QWORD *)(v20 + 48);
        v24 = *(_QWORD *)(v20 + 56);
        v27 = *(unsigned int *)(v20 + 36);
        v26 = *(unsigned int *)(v20 + 40);
        swift_bridgeObjectRetain();
        result = sub_24963499C(v20, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.RemoteProcess);
        *(_OWORD *)a2 = v38;
        *(_QWORD *)(a2 + 16) = v21;
        *(_QWORD *)(a2 + 24) = v22;
        *(_QWORD *)(a2 + 32) = v23 | (v27 << 32);
        *(_QWORD *)(a2 + 40) = v26;
        *(_QWORD *)(a2 + 48) = v25;
        *(_QWORD *)(a2 + 56) = v24;
        return result;
      }
      if (EnumCaseMultiPayload == 1)
        break;
      sub_24963499C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
      v17 += v18;
      if (!--v15)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v28 = *v9;
    v29 = v9[1];
    v30 = v9[2];
    v31 = v9[3];
    v32 = v9[4];
    v33 = v9[5];
    v34 = v9[6];
    v35 = v9[7];
    sub_24963E990(*v9, v29, v30, v31, v32, v33, v34, v35);
    sub_24963E9A4(v28, v29, v30, v31, v32, v33, v34, v35);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v28;
    *(_QWORD *)(a2 + 8) = v29;
    *(_QWORD *)(a2 + 16) = v30;
    *(_QWORD *)(a2 + 24) = v31;
    *(_QWORD *)(a2 + 32) = v32;
    *(_QWORD *)(a2 + 40) = v33;
    *(_QWORD *)(a2 + 48) = v34;
    *(_QWORD *)(a2 + 56) = v35;
  }
  else
  {
LABEL_7:
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 56) = 1;
  }
  return result;
}

void sub_24963AB8C(char *a1)
{
  sub_249674760(*a1);
}

void sub_24963AB98()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2496769A8();
  __asm { BR              X9 }
}

uint64_t sub_24963ABE4()
{
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

void sub_24963AC84()
{
  __asm { BR              X10 }
}

uint64_t sub_24963ACC0()
{
  sub_249676534();
  return swift_bridgeObjectRelease();
}

void sub_24963AD4C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2496769A8();
  __asm { BR              X9 }
}

uint64_t sub_24963AD94()
{
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_24963AE34@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2496419B8();
  *a1 = result;
  return result;
}

uint64_t sub_24963AE60()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_24963AE90 + 4 * byte_249677607[*v0]))();
}

void sub_24963AE90(_QWORD *a1@<X8>)
{
  *a1 = 0x676E69646E756F62;
  a1[1] = 0xEB00000000786F42;
}

void sub_24963AEB4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x746E65746E6F63;
  a1[1] = v1;
}

void sub_24963AECC(_QWORD *a1@<X8>)
{
  *a1 = 0x656D656C65627573;
  a1[1] = 0xEB0000000073746ELL;
}

void sub_24963AEF0(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F697463617266;
  a1[1] = 0xEF656C6269736956;
}

uint64_t sub_24963AF18()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24963AF48 + 4 * byte_24967760C[*v0]))(0x656761726F7473, 0xE700000000000000);
}

uint64_t sub_24963AF48()
{
  return 0x676E69646E756F62;
}

uint64_t sub_24963AF68()
{
  return 0x746E65746E6F63;
}

uint64_t sub_24963AF7C()
{
  return 0x656D656C65627573;
}

uint64_t sub_24963AF9C()
{
  return 0x6E6F697463617266;
}

uint64_t sub_24963AFC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2496419B8();
  *a1 = result;
  return result;
}

void sub_24963AFE4(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24963AFF0()
{
  sub_24963E9B8();
  return sub_249676A20();
}

uint64_t sub_24963B018()
{
  sub_24963E9B8();
  return sub_249676A2C();
}

uint64_t IntelligenceElement.encode(to:)(_QWORD *a1)
{
  CGFloat *v1;
  uint64_t v2;
  CGFloat *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  char v31;
  CGRect v32;

  v3 = v1;
  v25 = type metadata accessor for IntelligenceElement.Content();
  v5 = MEMORY[0x24BDAC7A8](v25);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB18);
  v26 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24963E9B8();
  sub_249676A14();
  v13 = type metadata accessor for IntelligenceElement();
  if (*(_QWORD *)(*(_QWORD *)((char *)v3 + *(int *)(v13 + 32)) + 16))
  {
    v27 = *(CGFloat *)((char *)v3 + *(int *)(v13 + 32));
    v31 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B058);
    sub_24963EA84(&qword_25786AAF8, (uint64_t (*)(void))sub_24963E9FC, (uint64_t (*)(void))sub_24963EA40, MEMORY[0x24BEE04C0]);
    sub_24967693C();
    if (v2)
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v12, v10);
  }
  v14 = *v3;
  v15 = v3[1];
  v16 = v3[2];
  v17 = v3[3];
  v32.origin.x = *v3;
  v32.origin.y = v15;
  v32.size.width = v16;
  v32.size.height = v17;
  if (!CGRectIsNull(v32))
  {
    v27 = v14;
    v28 = v15;
    v29 = v16;
    v30 = v17;
    v31 = 1;
    type metadata accessor for CGRect(0);
    sub_24963EC48(&qword_25786AB08, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_24967693C();
    if (v2)
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v12, v10);
  }
  v23 = v13;
  v24 = v10;
  sub_249634958((uint64_t)v3 + *(int *)(v13 + 20), (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
  swift_storeEnumTagMultiPayload();
  _s21UIIntelligenceSupport19IntelligenceElementV7ContentO2eeoiySbAE_AEtFZ_0((uint64_t)v9, (uint64_t)v7);
  v20 = v19;
  sub_24963499C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
  sub_24963499C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
  if ((v20 & 1) != 0)
  {
    v21 = v23;
    v22 = v24;
LABEL_10:
    if (!*(_QWORD *)(*(_QWORD *)((char *)v3 + *(int *)(v21 + 24)) + 16)
      || (v27 = *(CGFloat *)((char *)v3 + *(int *)(v21 + 24)),
          v31 = 3,
          __swift_instantiateConcreteTypeFromMangledName(&qword_25786B060),
          sub_24963EBC4(&qword_25786AB00, &qword_25786AAF0, (uint64_t)&protocol conformance descriptor for IntelligenceElement, MEMORY[0x24BEE12A0]), sub_24967693C(), !v2))
    {
      if ((*((_BYTE *)v3 + *(int *)(v21 + 28) + 8) & 1) == 0)
      {
        LOBYTE(v27) = 4;
        sub_249676924();
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v12, v22);
  }
  LOBYTE(v27) = 2;
  sub_24963EC48(&qword_25786AAE8, (uint64_t (*)(uint64_t))type metadata accessor for IntelligenceElement.Content, (uint64_t)&protocol conformance descriptor for IntelligenceElement.Content);
  v22 = v24;
  sub_24967693C();
  if (!v2)
  {
    v21 = v23;
    goto LABEL_10;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v12, v22);
}

uint64_t IntelligenceElement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;

  v45 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADF70);
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IntelligenceElement.Content();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v40 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A960);
  v7 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IntelligenceElement();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v13[*(int *)(v11 + 28)];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v15 = *(int *)(v11 + 32);
  v16 = sub_24963E7FC(MEMORY[0x24BEE4AF8]);
  v47 = v15;
  v48 = v13;
  *(_QWORD *)&v13[v15] = v16;
  v17 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_24963E9B8();
  v18 = v49;
  sub_2496769FC();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v39 = (uint64_t *)v14;
    v49 = v7;
    v19 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B058);
    v54 = 0;
    sub_24963EA84(&qword_25786A8D0, (uint64_t (*)(void))sub_24963EB00, (uint64_t (*)(void))sub_24963EB44, MEMORY[0x24BEE04E0]);
    v20 = v44;
    sub_249676888();
    v22 = v50;
    if (!v50)
      v22 = sub_24963E7FC(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
    v23 = (uint64_t)v48;
    *(_QWORD *)&v48[v47] = v22;
    type metadata accessor for CGRect(0);
    v54 = 1;
    sub_24963EC48(&qword_25786A928, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    v24 = v9;
    sub_249676888();
    if (v53)
      v25 = (unint64_t *)MEMORY[0x24BDBF070];
    else
      v25 = &v50;
    if (v53)
      v26 = (uint64_t *)(MEMORY[0x24BDBF070] + 24);
    else
      v26 = &v52;
    v27 = *v26;
    if (v53)
      v28 = (__int128 *)(MEMORY[0x24BDBF070] + 8);
    else
      v28 = (__int128 *)&v51;
    v29 = *v28;
    *(_QWORD *)v23 = *v25;
    *(_OWORD *)(v23 + 8) = v29;
    *(_QWORD *)(v23 + 24) = v27;
    LOBYTE(v50) = 2;
    sub_24963EC48(&qword_25786A830, (uint64_t (*)(uint64_t))type metadata accessor for IntelligenceElement.Content, (uint64_t)&protocol conformance descriptor for IntelligenceElement.Content);
    v30 = v42;
    v31 = (uint64_t)v43;
    sub_249676888();
    v48 = v24;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v31, 1, v30) == 1)
    {
      v32 = v40;
      swift_storeEnumTagMultiPayload();
      sub_24963EB88(v31, &qword_2544ADF70);
    }
    else
    {
      v32 = v40;
      sub_24963E94C(v31, v40, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
    }
    sub_24963E94C(v32, v23 + *(int *)(v10 + 20), (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B060);
    v54 = 3;
    sub_24963EBC4(&qword_25786A8E8, (unint64_t *)&unk_25786A838, (uint64_t)&protocol conformance descriptor for IntelligenceElement, MEMORY[0x24BEE12D0]);
    v33 = v48;
    sub_249676888();
    v34 = v50;
    if (!v50)
      v34 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v23 + *(int *)(v10 + 24)) = v34;
    LOBYTE(v50) = 4;
    v35 = sub_249676870();
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v20);
    v38 = v39;
    *v39 = v35;
    *((_BYTE *)v38 + 8) = v37 & 1;
    sub_249634958(v23, v19, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    return sub_24963499C(v23, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  }
}

uint64_t sub_24963B978@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceElement.init(from:)(a1, a2);
}

uint64_t sub_24963B98C(_QWORD *a1)
{
  return IntelligenceElement.encode(to:)(a1);
}

uint64_t IntelligenceElement.description.getter()
{
  CGFloat *v0;
  uint64_t v1;
  unint64_t v2;
  CGFloat *v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  CGRect v97;

  v3 = v0;
  v5 = *v0;
  v4 = v0[1];
  v7 = v0[2];
  v6 = v0[3];
  v97.origin.x = *v0;
  v97.origin.y = v4;
  v97.size.width = v7;
  v97.size.height = v6;
  if (CGRectIsNull(v97))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B1C0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_2496786F0;
    v10 = MEMORY[0x24BEE50B0];
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE50B0];
    v11 = sub_24963EC88();
    *(_QWORD *)(v9 + 64) = v11;
    *(CGFloat *)(v9 + 32) = v5;
    *(_QWORD *)(v9 + 96) = v10;
    *(_QWORD *)(v9 + 104) = v11;
    *(CGFloat *)(v9 + 72) = v4;
    *(_QWORD *)(v9 + 136) = v10;
    *(_QWORD *)(v9 + 144) = v11;
    *(CGFloat *)(v9 + 112) = v7;
    *(_QWORD *)(v9 + 176) = v10;
    *(_QWORD *)(v9 + 184) = v11;
    *(CGFloat *)(v9 + 152) = v6;
    v12 = sub_2496764F8();
    v14 = v13;
    v8 = sub_2496325A0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v16 = v8[2];
    v15 = v8[3];
    v1 = v16 + 1;
    if (v16 >= v15 >> 1)
      v8 = sub_2496325A0((_QWORD *)(v15 > 1), v16 + 1, 1, v8);
    v8[2] = v1;
    v17 = &v8[2 * v16];
    v17[4] = v12;
    v17[5] = v14;
  }
  v18 = type metadata accessor for IntelligenceElement();
  v19 = (uint64_t)v3 + *(int *)(v18 + 28);
  if ((*(_BYTE *)(v19 + 8) & 1) == 0)
  {
    v20 = round(*(double *)v19 * 100.0);
    if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) != 0)
    {
      if (v20 > -9.22337204e18)
      {
        if (v20 < 9.22337204e18)
        {
          sub_249676954();
          sub_24967654C();
          swift_bridgeObjectRelease();
          sub_24967654C();
          v1 = 0x3A656C6269736976;
          v2 = 0xE900000000000020;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
LABEL_11:
            v22 = v8[2];
            v21 = v8[3];
            if (v22 >= v21 >> 1)
              v8 = sub_2496325A0((_QWORD *)(v21 > 1), v22 + 1, 1, v8);
            v8[2] = v22 + 1;
            v23 = &v8[2 * v22];
            v23[4] = v1;
            v23[5] = v2;
            goto LABEL_14;
          }
LABEL_107:
          v8 = sub_2496325A0(0, v8[2] + 1, 1, v8);
          goto LABEL_11;
        }
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_106;
  }
LABEL_14:
  IntelligenceElement.Content.description.getter();
  sub_24967654C();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_2496325A0(0, v8[2] + 1, 1, v8);
  v25 = v8[2];
  v24 = v8[3];
  if (v25 >= v24 >> 1)
    v8 = sub_2496325A0((_QWORD *)(v24 > 1), v25 + 1, 1, v8);
  v8[2] = v25 + 1;
  v26 = &v8[2 * v25];
  v26[4] = 0x3A746E65746E6F63;
  v26[5] = 0xE900000000000020;
  v27 = *(_QWORD *)((char *)v3 + *(int *)(v18 + 32));
  if (*(_QWORD *)(v27 + 16)
    && (v28 = sub_24963CA00(0), (v29 & 1) != 0)
    && *(_BYTE *)(*(_QWORD *)(v27 + 56) + 24 * v28 + 16) == 2)
  {
    v30 = swift_bridgeObjectRetain();
  }
  else
  {
    v30 = sub_249636310(MEMORY[0x24BEE4AF8]);
  }
  v31 = *(_QWORD *)(v30 + 16);
  swift_bridgeObjectRelease();
  if (v31)
  {
    sub_249676798();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v27 + 16)
      && (v32 = sub_24963CA00(0), (v33 & 1) != 0)
      && *(_BYTE *)(*(_QWORD *)(v27 + 56) + 24 * v32 + 16) == 2)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_249636310(MEMORY[0x24BEE4AF8]);
    }
    sub_24967648C();
    sub_24967654C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = v8[2];
    v34 = v8[3];
    if (v35 >= v34 >> 1)
      v8 = sub_2496325A0((_QWORD *)(v34 > 1), v35 + 1, 1, v8);
    v8[2] = v35 + 1;
    v36 = &v8[2 * v35];
    v36[4] = 0xD000000000000011;
    v36[5] = 0x800000024967D300;
  }
  if (*(_QWORD *)(v27 + 16)
    && (v37 = sub_24963CA00(1u), (v38 & 1) != 0)
    && *(_BYTE *)(*(_QWORD *)(v27 + 56) + 24 * v37 + 16) == 1)
  {
    v39 = swift_bridgeObjectRetain();
  }
  else
  {
    v39 = MEMORY[0x24BEE4AF8];
  }
  v40 = *(_QWORD *)(v39 + 16);
  swift_bridgeObjectRelease();
  if (v40)
  {
    sub_249676798();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v27 + 16)
      && (v41 = sub_24963CA00(1u), (v42 & 1) != 0)
      && (v43 = *(_QWORD *)(v27 + 56) + 24 * v41, *(_BYTE *)(v43 + 16) == 1))
    {
      v44 = *(_QWORD *)v43;
      swift_bridgeObjectRetain();
    }
    else
    {
      v44 = MEMORY[0x24BEE4AF8];
    }
    MEMORY[0x24BCF45A0](v44, MEMORY[0x24BEE0D00]);
    sub_24967654C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = v8[2];
    v45 = v8[3];
    if (v46 >= v45 >> 1)
      v8 = sub_2496325A0((_QWORD *)(v45 > 1), v46 + 1, 1, v8);
    v8[2] = v46 + 1;
    v47 = &v8[2 * v46];
    v47[4] = 0xD000000000000011;
    v47[5] = 0x800000024967D320;
  }
  if (*(_QWORD *)(v27 + 16)
    && (v48 = sub_24963CA00(2u), (v49 & 1) != 0)
    && *(_BYTE *)(*(_QWORD *)(v27 + 56) + 24 * v48 + 16) == 1)
  {
    v50 = swift_bridgeObjectRetain();
  }
  else
  {
    v50 = MEMORY[0x24BEE4AF8];
  }
  v51 = *(_QWORD *)(v50 + 16);
  swift_bridgeObjectRelease();
  if (v51)
  {
    sub_249676798();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v27 + 16)
      && (v52 = sub_24963CA00(2u), (v53 & 1) != 0)
      && (v54 = *(_QWORD *)(v27 + 56) + 24 * v52, *(_BYTE *)(v54 + 16) == 1))
    {
      v55 = *(_QWORD *)v54;
      swift_bridgeObjectRetain();
    }
    else
    {
      v55 = MEMORY[0x24BEE4AF8];
    }
    MEMORY[0x24BCF45A0](v55, MEMORY[0x24BEE0D00]);
    sub_24967654C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v57 = v8[2];
    v56 = v8[3];
    if (v57 >= v56 >> 1)
      v8 = sub_2496325A0((_QWORD *)(v56 > 1), v57 + 1, 1, v8);
    v8[2] = v57 + 1;
    v58 = &v8[2 * v57];
    v58[4] = 0xD00000000000001BLL;
    v58[5] = 0x800000024967D340;
  }
  v59 = IntelligenceElement.appEntityIdentifier.getter();
  if (v60)
  {
    v61 = HIBYTE(v60) & 0xF;
    if ((v60 & 0x2000000000000000) == 0)
      v61 = v59 & 0xFFFFFFFFFFFFLL;
    if (v61)
    {
      sub_249676798();
      swift_bridgeObjectRelease();
      sub_24967654C();
      swift_bridgeObjectRelease();
      sub_24967654C();
      v63 = v8[2];
      v62 = v8[3];
      if (v63 >= v62 >> 1)
        v8 = sub_2496325A0((_QWORD *)(v62 > 1), v63 + 1, 1, v8);
      v8[2] = v63 + 1;
      v64 = &v8[2 * v63];
      v64[4] = 0xD000000000000016;
      v64[5] = 0x800000024967D3E0;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v65 = IntelligenceElement.appIntentIdentifier.getter();
  if (!v66)
  {
LABEL_75:
    if (!*(_QWORD *)(v27 + 16))
      goto LABEL_80;
    goto LABEL_76;
  }
  v67 = HIBYTE(v66) & 0xF;
  if ((v66 & 0x2000000000000000) == 0)
    v67 = v65 & 0xFFFFFFFFFFFFLL;
  if (v67)
  {
    sub_249676798();
    swift_bridgeObjectRelease();
    sub_24967654C();
    swift_bridgeObjectRelease();
    sub_24967654C();
    v69 = v8[2];
    v68 = v8[3];
    if (v69 >= v68 >> 1)
      v8 = sub_2496325A0((_QWORD *)(v68 > 1), v69 + 1, 1, v8);
    v8[2] = v69 + 1;
    v70 = &v8[2 * v69];
    v70[4] = 0xD000000000000016;
    v70[5] = 0x800000024967D3C0;
    goto LABEL_75;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v27 + 16))
    goto LABEL_80;
LABEL_76:
  v71 = sub_24963CA00(6u);
  if ((v72 & 1) != 0 && *(_BYTE *)(*(_QWORD *)(v27 + 56) + 24 * v71 + 16) == 1)
  {
    v73 = swift_bridgeObjectRetain();
    goto LABEL_81;
  }
LABEL_80:
  v73 = MEMORY[0x24BEE4AF8];
LABEL_81:
  v74 = *(_QWORD *)(v73 + 16);
  swift_bridgeObjectRelease();
  if (v74)
  {
    sub_249676798();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v27 + 16)
      && (v75 = sub_24963CA00(6u), (v76 & 1) != 0)
      && (v77 = *(_QWORD *)(v27 + 56) + 24 * v75, *(_BYTE *)(v77 + 16) == 1))
    {
      v78 = *(_QWORD *)v77;
      swift_bridgeObjectRetain();
    }
    else
    {
      v78 = MEMORY[0x24BEE4AF8];
    }
    MEMORY[0x24BCF45A0](v78, MEMORY[0x24BEE0D00]);
    sub_24967654C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v79 = 0x800000024967D360;
    v81 = v8[2];
    v80 = v8[3];
    if (v81 >= v80 >> 1)
      v8 = sub_2496325A0((_QWORD *)(v80 > 1), v81 + 1, 1, v8);
    v8[2] = v81 + 1;
    v82 = &v8[2 * v81];
    v82[4] = 0xD000000000000013;
    v83 = v82 + 4;
  }
  else
  {
    v84 = IntelligenceElement.appIntentsPayload.getter();
    v86 = v85;
    sub_24963DC84(v84, v85);
    if (v86 >> 60 == 15)
      goto LABEL_95;
    v88 = v8[2];
    v87 = v8[3];
    if (v88 >= v87 >> 1)
      v8 = sub_2496325A0((_QWORD *)(v87 > 1), v88 + 1, 1, v8);
    v8[2] = v88 + 1;
    v89 = &v8[2 * v88];
    v89[4] = 0xD00000000000001BLL;
    v83 = v89 + 4;
    v79 = 0x800000024967D3A0;
  }
  v83[1] = v79;
LABEL_95:
  v90 = IntelligenceElement.accessibilityLabel.getter();
  if (v91)
  {
    v92 = HIBYTE(v91) & 0xF;
    if ((v91 & 0x2000000000000000) == 0)
      v92 = v90 & 0xFFFFFFFFFFFFLL;
    if (v92)
    {
      sub_249676798();
      swift_bridgeObjectRelease();
      sub_24967654C();
      swift_bridgeObjectRelease();
      sub_24967654C();
      v94 = v8[2];
      v93 = v8[3];
      if (v94 >= v93 >> 1)
        v8 = sub_2496325A0((_QWORD *)(v93 > 1), v94 + 1, 1, v8);
      v8[2] = v94 + 1;
      v95 = &v8[2 * v94];
      v95[4] = 0xD000000000000015;
      v95[5] = 0x800000024967D380;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  sub_249632EBC();
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return 0x28746E656D656C45;
}

uint64_t sub_24963C540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_249676540();
  result = swift_bridgeObjectRelease();
  if (v6 >= 1)
    result = sub_24967654C();
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a2)
  {
    v8 = a2;
    do
    {
      sub_24967654C();
      --v8;
    }
    while (v8);
  }
  IntelligenceElement.description.getter();
  sub_24967654C();
  swift_bridgeObjectRelease();
  result = type metadata accessor for IntelligenceElement();
  v9 = *(_QWORD *)(v3 + *(int *)(result + 24));
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = __OFADD__(a2, 1);
    v12 = a2 + 1;
    if (!v11)
    {
      v13 = *(_QWORD *)(result - 8);
      v14 = v9 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
      v15 = *(_QWORD *)(v13 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_24963C540(a1, v12);
        v14 += v15;
        --v10;
      }
      while (v10);
      return swift_bridgeObjectRelease();
    }
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t IntelligenceElement.recursiveDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  if (sub_249676540() >= 1)
    sub_24967654C();
  IntelligenceElement.description.getter();
  sub_24967654C();
  swift_bridgeObjectRelease();
  v1 = type metadata accessor for IntelligenceElement();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 24));
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v1 - 8);
    v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_24963C540((uint64_t)v8, 1);
      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return v8[0];
}

uint64_t sub_24963C740(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_2496326C0(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for IntelligenceElement();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_249676828();
  __break(1u);
  return result;
}

uint64_t sub_24963C8A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_249632AE8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[7 * v8 + 4];
  if (a1 + 32 < v9 + 56 * v2 && v9 < a1 + 32 + 56 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_249676828();
  __break(1u);
  return result;
}

unint64_t sub_24963CA00(unsigned __int8 a1)
{
  uint64_t v2;

  sub_2496769A8();
  sub_2496769B4();
  v2 = sub_2496769E4();
  return sub_24963CB14(a1, v2);
}

unint64_t sub_24963CA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2496769A8();
  sub_249676534();
  v4 = sub_2496769E4();
  return sub_24963CBB4(a1, a2, v4);
}

unint64_t sub_24963CABC(uint64_t a1)
{
  uint64_t v2;

  sub_2496769A8();
  sub_2496769D8();
  v2 = sub_2496769E4();
  return sub_24963CC94(a1, v2);
}

unint64_t sub_24963CB14(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_24963CBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_249676960() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_249676960() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24963CC94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = __ROR8__(a1, 32);
    v8 = *(_QWORD *)(v2 + 48);
    if ((*(unsigned int *)(v8 + 8 * result + 4) | ((unint64_t)*(unsigned int *)(v8 + 8 * result) << 32)) != v7)
    {
      v9 = ~v5;
      for (result = (result + 1) & v9;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v9)
      {
        if ((*(unsigned int *)(v8 + 8 * result + 4) | ((unint64_t)*(unsigned int *)(v8 + 8 * result) << 32)) == v7)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_24963CD44(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB10);
  v35 = a2;
  result = sub_249676810();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v32;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v29 = *(_QWORD *)v28;
      v30 = *(_QWORD *)(v28 + 8);
      v31 = *(_BYTE *)(v28 + 16);
      if ((v35 & 1) == 0)
        sub_24964031C(v29, v30, v31);
      sub_2496769A8();
      sub_2496769B4();
      result = sub_2496769E4();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_QWORD *)v17 = v29;
      *(_QWORD *)(v17 + 8) = v30;
      *(_BYTE *)(v17 + 16) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_24963D044(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  __int128 *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B088);
  result = sub_249676810();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v21 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v22 = v21 | (v8 << 6);
      }
      else
      {
        v23 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v23 >= v13)
          goto LABEL_33;
        v24 = v9[v23];
        ++v8;
        if (!v24)
        {
          v8 = v23 + 1;
          if (v23 + 1 >= v13)
            goto LABEL_33;
          v24 = v9[v8];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v24 = v9[v25];
            if (!v24)
            {
              while (1)
              {
                v8 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v24 = v9[v8];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v8 = v25;
          }
        }
LABEL_30:
        v12 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v8 << 6);
      }
      v34 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v22);
      v30 = (__int128 *)(*(_QWORD *)(v5 + 56) + 32 * v22);
      v32 = v30[1];
      v33 = *v30;
      if ((a2 & 1) == 0)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_2496769A8();
      sub_2496769D8();
      result = sub_2496769E4();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        v19 = v34;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        v19 = v34;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v19;
      v20 = (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v18);
      *v20 = v33;
      v20[1] = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

unint64_t sub_24963D364(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  BOOL v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_249676720();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2496769A8();
        sub_2496769B4();
        result = sub_2496769E4();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_BYTE *)(v11 + v3);
          v13 = (_BYTE *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = v14 + 24 * v3;
          v16 = (__int128 *)(v14 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v15 >= (unint64_t)v16 + 24 || (v17 = v3 == v6, v3 = v6, !v17))
          {
            v9 = *v16;
            *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
            *(_OWORD *)v15 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24963D53C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_249676720();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2496769A8();
        sub_2496769D8();
        result = sub_2496769E4();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_QWORD *)(v11 + 8 * v3);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 32 * v3);
          v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 2))
          {
            v9 = v16[1];
            *v15 = *v16;
            v15[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24963D6F8(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v6 = v5;
  v12 = *v5;
  v14 = sub_24963CA00(a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_24963D9F8();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 24 * v14;
      result = sub_24963DBAC(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), *(_BYTE *)(v21 + 16));
      *(_QWORD *)v21 = a1;
      *(_QWORD *)(v21 + 8) = a2;
      *(_BYTE *)(v21 + 16) = a3;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_BYTE *)(v20[6] + v14) = a4;
    v23 = v20[7] + 24 * v14;
    *(_QWORD *)v23 = a1;
    *(_QWORD *)(v23 + 8) = a2;
    *(_BYTE *)(v23 + 16) = a3;
    v24 = v20[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_24963CD44(result, a5 & 1);
  result = sub_24963CA00(a4);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_249676990();
  __break(1u);
  return result;
}

uint64_t sub_24963D854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t result;
  unint64_t v25;
  char v26;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_24963CABC(a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = (uint64_t *)(v22[7] + 32 * v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        result = swift_unknownObjectRelease();
        *v23 = a1;
        v23[1] = a2;
        v23[2] = a3;
        v23[3] = a4;
        return result;
      }
      return sub_24963D9AC(v16, a5, a1, a2, a3, a4, v22);
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_24963DC98();
      goto LABEL_7;
    }
    sub_24963D044(v19, a6 & 1);
    v25 = sub_24963CABC(a5);
    if ((v20 & 1) == (v26 & 1))
    {
      v16 = v25;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
      return sub_24963D9AC(v16, a5, a1, a2, a3, a4, v22);
    }
  }
  result = sub_249676990();
  __break(1u);
  return result;
}

unint64_t sub_24963D9AC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a7[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a7[6] + 8 * result) = a2;
  v7 = (_QWORD *)(a7[7] + 32 * result);
  *v7 = a3;
  v7[1] = a4;
  v7[2] = a5;
  v7[3] = a6;
  v8 = a7[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a7[2] = v10;
  return result;
}

void *sub_24963D9F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB10);
  v2 = *v0;
  v3 = sub_249676804();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 24 * v15;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_BYTE *)(v16 + 16);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v20 = *(_QWORD *)(v4 + 56) + 24 * v15;
    *(_QWORD *)v20 = v17;
    *(_QWORD *)(v20 + 8) = v18;
    *(_BYTE *)(v20 + 16) = v19;
    result = (void *)sub_24964031C(v17, v18, v19);
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24963DBAC(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
      result = sub_24963DBE8(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24963DBE8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24963DC2C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24963DC70(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24963DC2C(a1, a2);
  return a1;
}

uint64_t sub_24963DC84(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24963DBE8(a1, a2);
  return a1;
}

void *sub_24963DC98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B088);
  v2 = *v0;
  v3 = sub_249676804();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = 32 * v15;
    v18 = (__int128 *)(*(_QWORD *)(v2 + 56) + v17);
    v19 = v18[1];
    v20 = *v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v21 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v17);
    *v21 = v20;
    v21[1] = v19;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_24963DE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_24963DED8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x24963E0BCLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_24963E0E0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24963E13C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_24963DE78((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_24963DBE8(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

unint64_t sub_24963E304(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B088);
    v3 = (_QWORD *)sub_24967681C();
    v4 = (uint64_t *)(a1 + 64);
    while (1)
    {
      v5 = *(v4 - 4);
      v14 = *(_OWORD *)(v4 - 3);
      v6 = *(v4 - 1);
      v7 = *v4;
      result = sub_24963CABC(v5);
      if ((v9 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      v10 = v3[7] + 32 * result;
      *(_OWORD *)v10 = v14;
      *(_QWORD *)(v10 + 16) = v6;
      *(_QWORD *)(v10 + 24) = v7;
      v11 = v3[2];
      v12 = __OFADD__(v11, 1);
      v13 = v11 + 1;
      if (v12)
        goto LABEL_10;
      v4 += 5;
      v3[2] = v13;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_24963E424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_2496760CC();
  v11 = result;
  if (result)
  {
    result = sub_2496760E4();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_2496760D8();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_24963DE78(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_24963E4D8(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t _s21UIIntelligenceSupport19IntelligenceElementV2eeoiySbAC_ACtFZ_0(CGRect *a1, CGRect *a2)
{
  int *v4;
  char v5;
  uint64_t v6;
  double *v7;
  char v8;
  double *v9;
  int v10;

  if (!CGRectEqualToRect(*a1, *a2))
    return 0;
  v4 = (int *)type metadata accessor for IntelligenceElement();
  _s21UIIntelligenceSupport19IntelligenceElementV7ContentO2eeoiySbAE_AEtFZ_0((uint64_t)a1 + v4[5], (uint64_t)a2 + v4[5]);
  if ((v5 & 1) == 0
    || (sub_2496399C8(*(_QWORD *)((char *)&a1->origin.x + v4[6]), *(_QWORD *)((char *)&a2->origin.x + v4[6])) & 1) == 0)
  {
    return 0;
  }
  v6 = v4[7];
  v7 = (double *)((char *)&a1->origin.x + v6);
  v8 = *((_BYTE *)&a1->origin.y + v6);
  v9 = (double *)((char *)&a2->origin.x + v6);
  v10 = *((unsigned __int8 *)&a2->origin.y + v6);
  if ((v8 & 1) != 0)
  {
    if (!v10)
      return 0;
  }
  else
  {
    if (*v7 != *v9)
      LOBYTE(v10) = 1;
    if ((v10 & 1) != 0)
      return 0;
  }
  return sub_2496376A0(*(_QWORD *)((char *)&a1->origin.x + v4[8]), *(_QWORD *)((char *)&a2->origin.x + v4[8]));
}

unint64_t sub_24963E7FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB10);
  v3 = (_QWORD *)sub_24967681C();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 56);
  result = sub_24963CA00(v4);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x24BEE4B00];
  }
  v10 = (char *)(a1 + 88);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v11 = v3[7] + 24 * result;
    *(_QWORD *)v11 = v5;
    *(_QWORD *)(v11 + 8) = v6;
    *(_BYTE *)(v11 + 16) = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v3[2] = v14;
    sub_24964031C(v5, v6, v7);
    if (!--v1)
      return (unint64_t)v3;
    v4 = *(v10 - 24);
    v5 = *((_QWORD *)v10 - 2);
    v6 = *((_QWORD *)v10 - 1);
    v7 = *v10;
    result = sub_24963CA00(v4);
    v10 += 32;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_24963E910@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = IntelligenceElement.recursiveMap<A>(_:transform:)(*(_QWORD **)(v2 + 16), *(void (**)(_QWORD))(v2 + 24), *(_QWORD *)(v2 + 32), a2);
  if (v3)
    *a1 = v3;
  return result;
}

uint64_t sub_24963E94C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24963E990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a8 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_24963E9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a8 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_24963E9B8()
{
  unint64_t result;

  result = qword_25786AD10;
  if (!qword_25786AD10)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496779DC, &type metadata for IntelligenceElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD10);
  }
  return result;
}

unint64_t sub_24963E9FC()
{
  unint64_t result;

  result = qword_25786AAB8;
  if (!qword_25786AAB8)
  {
    result = MEMORY[0x24BCF4DE0]("]zB\b8}", &type metadata for IntelligenceElement.StorageKey);
    atomic_store(result, (unint64_t *)&qword_25786AAB8);
  }
  return result;
}

unint64_t sub_24963EA40()
{
  unint64_t result;

  result = qword_25786AAC0;
  if (!qword_25786AAC0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967798C, &type metadata for IntelligenceElement.StorageValue);
    atomic_store(result, (unint64_t *)&qword_25786AAC0);
  }
  return result;
}

uint64_t sub_24963EA84(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25786B058);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x24BCF4DE0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24963EB00()
{
  unint64_t result;

  result = qword_25786A7E8;
  if (!qword_25786A7E8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677964, &type metadata for IntelligenceElement.StorageKey);
    atomic_store(result, (unint64_t *)&qword_25786A7E8);
  }
  return result;
}

unint64_t sub_24963EB44()
{
  unint64_t result;

  result = qword_25786A7F0;
  if (!qword_25786A7F0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967793C, &type metadata for IntelligenceElement.StorageValue);
    atomic_store(result, (unint64_t *)&qword_25786A7F0);
  }
  return result;
}

uint64_t sub_24963EB88(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24963EBC4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25786B060);
    v10 = sub_24963EC48(a2, (uint64_t (*)(uint64_t))type metadata accessor for IntelligenceElement, a3);
    result = MEMORY[0x24BCF4DE0](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24963EC48(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24BCF4DE0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24963EC88()
{
  unint64_t result;

  result = qword_25786B1C8;
  if (!qword_25786B1C8)
  {
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BEE5108], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25786B1C8);
  }
  return result;
}

unint64_t sub_24963ECCC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = IntelligenceElement.extraAttributes.getter();
  *a1 = result;
  return result;
}

uint64_t sub_24963ECF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntelligenceElement.customTypeNames.getter();
  *a1 = result;
  return result;
}

unint64_t sub_24963ED20(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249636B54(a1, a2, a3, a4, 1u);
}

uint64_t sub_24963ED38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntelligenceElement.customControllerTypeNames.getter();
  *a1 = result;
  return result;
}

unint64_t sub_24963ED60(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249636B54(a1, a2, a3, a4, 2u);
}

uint64_t sub_24963ED78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = IntelligenceElement.appEntityIdentifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24963EDA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))IntelligenceElement.appEntityIdentifier.setter);
}

uint64_t sub_24963EDAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = IntelligenceElement.appIntentIdentifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24963EDD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))IntelligenceElement.appIntentIdentifier.setter);
}

uint64_t keypath_set_6Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v7 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v6, v7);
}

uint64_t sub_24963EE20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = IntelligenceElement.appIntentsPayload.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_24963EE48(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_24963DC70(*a1, v2);
  return IntelligenceElement.appIntentsPayload.setter(v1, v2);
}

uint64_t sub_24963EE88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntelligenceElement.appIntentsPayloadDebugDescription.getter();
  *a1 = result;
  return result;
}

unint64_t sub_24963EEB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249636B54(a1, a2, a3, a4, 6u);
}

uint64_t sub_24963EEC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = IntelligenceElement.accessibilityLabel.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24963EEF0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))IntelligenceElement.accessibilityLabel.setter);
}

_QWORD *initializeBufferWithCopyOfBuffer for IntelligenceElement(_OWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for IntelligenceElement.Content();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v9 = *v10;
        v9[1] = v10[1];
        v12 = *((_QWORD *)v10 + 2);
        *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
        *((_QWORD *)v9 + 2) = v12;
        v13 = v10 + 24;
        v14 = *((_QWORD *)v10 + 4);
        swift_bridgeObjectRetain();
        if (v14 >> 60 == 15)
        {
          *(_OWORD *)(v9 + 24) = *v13;
        }
        else
        {
          v42 = *(_QWORD *)v13;
          sub_24963DC2C(v42, v14);
          *((_QWORD *)v9 + 3) = v42;
          *((_QWORD *)v9 + 4) = v14;
        }
        goto LABEL_19;
      case 1u:
        v36 = *((_QWORD *)v10 + 7);
        v37 = *((_OWORD *)v10 + 1);
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v37;
        if (v36 == 1)
        {
          v38 = *((_OWORD *)v10 + 3);
          *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
          *((_OWORD *)v9 + 3) = v38;
        }
        else
        {
          v9[32] = v10[32];
          *(_QWORD *)(v9 + 36) = *(_QWORD *)(v10 + 36);
          *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
          *((_QWORD *)v9 + 7) = v36;
          swift_bridgeObjectRetain();
        }
        v54 = *((_QWORD *)v10 + 9);
        *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
        *((_QWORD *)v9 + 9) = v54;
        v9[80] = v10[80];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 2u:
        v16 = *((_OWORD *)v10 + 1);
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v16;
        *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
        *(_OWORD *)(v9 + 47) = *(_OWORD *)(v10 + 47);
        v17 = *((_OWORD *)v10 + 5);
        *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
        *((_OWORD *)v9 + 5) = v17;
        *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
        v18 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v19 = &v9[v18];
        v20 = &v10[v18];
        v21 = sub_24967633C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        goto LABEL_19;
      case 3u:
        v22 = *((_OWORD *)v10 + 1);
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v22;
        v9[32] = v10[32];
        *(_QWORD *)(v9 + 36) = *(_QWORD *)(v10 + 36);
        v23 = *((_QWORD *)v10 + 7);
        *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
        *((_QWORD *)v9 + 7) = v23;
        v24 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
        v25 = &v9[v24];
        v26 = &v10[v24];
        v27 = *(_OWORD *)&v10[v24 + 16];
        *(_OWORD *)v25 = *(_OWORD *)&v10[v24];
        *((_OWORD *)v25 + 1) = v27;
        *((_OWORD *)v25 + 2) = *(_OWORD *)&v10[v24 + 32];
        *(_OWORD *)(v25 + 47) = *(_OWORD *)&v10[v24 + 47];
        v28 = *(_OWORD *)&v10[v24 + 80];
        *((_OWORD *)v25 + 4) = *(_OWORD *)&v10[v24 + 64];
        *((_OWORD *)v25 + 5) = v28;
        *((_OWORD *)v25 + 6) = *(_OWORD *)&v10[v24 + 96];
        v29 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v30 = &v25[v29];
        v31 = &v26[v29];
        v32 = sub_24967633C();
        v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        v33(v30, v31, v32);
        goto LABEL_19;
      case 4u:
        *(_WORD *)v9 = *(_WORD *)v10;
        v34 = *((_QWORD *)v10 + 2);
        if (v34 == 1)
        {
          v35 = *(_OWORD *)(v10 + 24);
          *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
          *(_OWORD *)(v9 + 24) = v35;
          *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
          *((_WORD *)v9 + 28) = *((_WORD *)v10 + 28);
        }
        else
        {
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          *((_QWORD *)v9 + 2) = v34;
          v43 = *((_QWORD *)v10 + 4);
          *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
          *((_QWORD *)v9 + 4) = v43;
          v44 = *((_QWORD *)v10 + 6);
          *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
          *((_QWORD *)v9 + 6) = v44;
          *((_WORD *)v9 + 28) = *((_WORD *)v10 + 28);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v45 = type metadata accessor for IntelligenceElement.Text();
        v46 = *(int *)(v45 + 28);
        v47 = &v9[v46];
        v48 = &v10[v46];
        v49 = sub_24967621C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
        v50 = *(int *)(v45 + 32);
        v51 = &v9[v50];
        v52 = &v10[v50];
        v53 = *((_OWORD *)v52 + 1);
        *(_OWORD *)v51 = *(_OWORD *)v52;
        *((_OWORD *)v51 + 1) = v53;
        *(_OWORD *)(v51 + 26) = *(_OWORD *)(v52 + 26);
        goto LABEL_19;
      case 5u:
        v39 = *((_QWORD *)v10 + 1);
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = v39;
        v40 = *((_QWORD *)v10 + 2);
        v41 = *((_QWORD *)v10 + 3);
        *((_QWORD *)v9 + 2) = v40;
        *((_QWORD *)v9 + 3) = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
    v55 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v56 = (char *)v4 + v55;
    v57 = (uint64_t)a2 + v55;
    *(_QWORD *)v56 = *(_QWORD *)v57;
    v56[8] = *(_BYTE *)(v57 + 8);
    *(_QWORD *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for IntelligenceElement(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for IntelligenceElement.Content();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v3 = v2[4];
      if (v3 >> 60 != 15)
        sub_24963DBE8(v2[3], v3);
      break;
    case 1u:
      if (v2[7] != 1)
        swift_bridgeObjectRelease();
      goto LABEL_14;
    case 2u:
      goto LABEL_8;
    case 3u:
      swift_bridgeObjectRelease();
      v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20));
LABEL_8:
      v4 = (char *)v2 + *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v5 = sub_24967633C();
      goto LABEL_12;
    case 4u:
      if (v2[2] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v4 = (char *)v2 + *(int *)(type metadata accessor for IntelligenceElement.Text() + 28);
      v5 = sub_24967621C();
LABEL_12:
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    case 5u:
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_OWORD *initializeWithCopy for IntelligenceElement(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for IntelligenceElement.Content();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *v8 = *v9;
      v8[1] = v9[1];
      v11 = *((_QWORD *)v9 + 2);
      *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
      *((_QWORD *)v8 + 2) = v11;
      v12 = v9 + 24;
      v13 = *((_QWORD *)v9 + 4);
      swift_bridgeObjectRetain();
      if (v13 >> 60 == 15)
      {
        *(_OWORD *)(v8 + 24) = *v12;
      }
      else
      {
        v40 = *(_QWORD *)v12;
        sub_24963DC2C(v40, v13);
        *((_QWORD *)v8 + 3) = v40;
        *((_QWORD *)v8 + 4) = v13;
      }
      goto LABEL_17;
    case 1u:
      v14 = *((_QWORD *)v9 + 7);
      v15 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v15;
      if (v14 == 1)
      {
        v16 = *((_OWORD *)v9 + 3);
        *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
        *((_OWORD *)v8 + 3) = v16;
      }
      else
      {
        v8[32] = v9[32];
        *(_QWORD *)(v8 + 36) = *(_QWORD *)(v9 + 36);
        *((_QWORD *)v8 + 6) = *((_QWORD *)v9 + 6);
        *((_QWORD *)v8 + 7) = v14;
        swift_bridgeObjectRetain();
      }
      v41 = *((_QWORD *)v9 + 9);
      *((_QWORD *)v8 + 8) = *((_QWORD *)v9 + 8);
      *((_QWORD *)v8 + 9) = v41;
      v8[80] = v9[80];
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 2u:
      v17 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v17;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      *(_OWORD *)(v8 + 47) = *(_OWORD *)(v9 + 47);
      v18 = *((_OWORD *)v9 + 5);
      *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
      *((_OWORD *)v8 + 5) = v18;
      *((_OWORD *)v8 + 6) = *((_OWORD *)v9 + 6);
      v19 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v20 = &v8[v19];
      v21 = &v9[v19];
      v22 = sub_24967633C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      goto LABEL_17;
    case 3u:
      v23 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v23;
      v8[32] = v9[32];
      *(_QWORD *)(v8 + 36) = *(_QWORD *)(v9 + 36);
      v24 = *((_QWORD *)v9 + 7);
      *((_QWORD *)v8 + 6) = *((_QWORD *)v9 + 6);
      *((_QWORD *)v8 + 7) = v24;
      v25 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
      v26 = &v8[v25];
      v27 = &v9[v25];
      v28 = *(_OWORD *)&v9[v25 + 16];
      *(_OWORD *)v26 = *(_OWORD *)&v9[v25];
      *((_OWORD *)v26 + 1) = v28;
      *((_OWORD *)v26 + 2) = *(_OWORD *)&v9[v25 + 32];
      *(_OWORD *)(v26 + 47) = *(_OWORD *)&v9[v25 + 47];
      v29 = *(_OWORD *)&v9[v25 + 80];
      *((_OWORD *)v26 + 4) = *(_OWORD *)&v9[v25 + 64];
      *((_OWORD *)v26 + 5) = v29;
      *((_OWORD *)v26 + 6) = *(_OWORD *)&v9[v25 + 96];
      v30 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v31 = &v26[v30];
      v32 = &v27[v30];
      v33 = sub_24967633C();
      v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      v34(v31, v32, v33);
      goto LABEL_17;
    case 4u:
      *(_WORD *)v8 = *(_WORD *)v9;
      v35 = *((_QWORD *)v9 + 2);
      if (v35 == 1)
      {
        v36 = *(_OWORD *)(v9 + 24);
        *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
        *(_OWORD *)(v8 + 24) = v36;
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        *((_WORD *)v8 + 28) = *((_WORD *)v9 + 28);
      }
      else
      {
        *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
        *((_QWORD *)v8 + 2) = v35;
        v42 = *((_QWORD *)v9 + 4);
        *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
        *((_QWORD *)v8 + 4) = v42;
        v43 = *((_QWORD *)v9 + 6);
        *((_QWORD *)v8 + 5) = *((_QWORD *)v9 + 5);
        *((_QWORD *)v8 + 6) = v43;
        *((_WORD *)v8 + 28) = *((_WORD *)v9 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v44 = type metadata accessor for IntelligenceElement.Text();
      v45 = *(int *)(v44 + 28);
      v46 = &v8[v45];
      v47 = &v9[v45];
      v48 = sub_24967621C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
      v49 = *(int *)(v44 + 32);
      v50 = &v8[v49];
      v51 = &v9[v49];
      v52 = *((_OWORD *)v51 + 1);
      *(_OWORD *)v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v52;
      *(_OWORD *)(v50 + 26) = *(_OWORD *)(v51 + 26);
      goto LABEL_17;
    case 5u:
      v37 = *((_QWORD *)v9 + 1);
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *((_QWORD *)v8 + 1) = v37;
      v38 = *((_QWORD *)v9 + 2);
      v39 = *((_QWORD *)v9 + 3);
      *((_QWORD *)v8 + 2) = v38;
      *((_QWORD *)v8 + 3) = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      break;
  }
  v53 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  v54[8] = v55[8];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IntelligenceElement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_24963499C((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
    v9 = type metadata accessor for IntelligenceElement.Content();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v7 = *v8;
        v7[1] = v8[1];
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        v10 = v8 + 24;
        v11 = *((_QWORD *)v8 + 4);
        swift_bridgeObjectRetain();
        if (v11 >> 60 == 15)
        {
          *(_OWORD *)(v7 + 24) = *v10;
        }
        else
        {
          v42 = *(_QWORD *)v10;
          sub_24963DC2C(v42, v11);
          *((_QWORD *)v7 + 3) = v42;
          *((_QWORD *)v7 + 4) = v11;
        }
        goto LABEL_18;
      case 1u:
        v12 = *(_OWORD *)v8;
        v13 = *((_OWORD *)v8 + 1);
        if (*((_QWORD *)v8 + 7) == 1)
        {
          v14 = *((_OWORD *)v8 + 3);
          *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
          *((_OWORD *)v7 + 3) = v14;
          *(_OWORD *)v7 = v12;
          *((_OWORD *)v7 + 1) = v13;
        }
        else
        {
          v7[32] = v8[32];
          *(_OWORD *)v7 = v12;
          *((_OWORD *)v7 + 1) = v13;
          *((_DWORD *)v7 + 9) = *((_DWORD *)v8 + 9);
          *((_DWORD *)v7 + 10) = *((_DWORD *)v8 + 10);
          *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
          *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
          swift_bridgeObjectRetain();
        }
        *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
        *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
        v7[80] = v8[80];
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 2u:
        v15 = *(_OWORD *)v8;
        v16 = *((_OWORD *)v8 + 1);
        v17 = *((_OWORD *)v8 + 2);
        *(_OWORD *)(v7 + 47) = *(_OWORD *)(v8 + 47);
        *((_OWORD *)v7 + 1) = v16;
        *((_OWORD *)v7 + 2) = v17;
        *(_OWORD *)v7 = v15;
        v18 = *((_OWORD *)v8 + 4);
        v19 = *((_OWORD *)v8 + 6);
        *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
        *((_OWORD *)v7 + 6) = v19;
        *((_OWORD *)v7 + 4) = v18;
        v20 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v21 = &v7[v20];
        v22 = &v8[v20];
        v23 = sub_24967633C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
        goto LABEL_18;
      case 3u:
        v24 = *(_OWORD *)v8;
        v25 = *((_OWORD *)v8 + 1);
        v7[32] = v8[32];
        *(_OWORD *)v7 = v24;
        *((_OWORD *)v7 + 1) = v25;
        *((_DWORD *)v7 + 9) = *((_DWORD *)v8 + 9);
        *((_DWORD *)v7 + 10) = *((_DWORD *)v8 + 10);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
        v26 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
        v27 = &v7[v26];
        v28 = &v8[v26];
        v29 = *(_OWORD *)&v8[v26 + 47];
        v31 = *(_OWORD *)&v8[v26 + 16];
        v30 = *(_OWORD *)&v8[v26 + 32];
        *(_OWORD *)v27 = *(_OWORD *)&v8[v26];
        *((_OWORD *)v27 + 1) = v31;
        *((_OWORD *)v27 + 2) = v30;
        *(_OWORD *)(v27 + 47) = v29;
        v32 = *(_OWORD *)&v8[v26 + 64];
        v33 = *(_OWORD *)&v8[v26 + 96];
        *((_OWORD *)v27 + 5) = *(_OWORD *)&v8[v26 + 80];
        *((_OWORD *)v27 + 6) = v33;
        *((_OWORD *)v27 + 4) = v32;
        v34 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v35 = &v27[v34];
        v36 = &v28[v34];
        v37 = sub_24967633C();
        v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v35, v36, v37);
        goto LABEL_18;
      case 4u:
        *v7 = *v8;
        v7[1] = v8[1];
        if (*((_QWORD *)v8 + 2) == 1)
        {
          v39 = *(_OWORD *)(v8 + 8);
          v40 = *(_OWORD *)(v8 + 24);
          v41 = *(_OWORD *)(v8 + 40);
          *((_WORD *)v7 + 28) = *((_WORD *)v8 + 28);
          *(_OWORD *)(v7 + 24) = v40;
          *(_OWORD *)(v7 + 40) = v41;
          *(_OWORD *)(v7 + 8) = v39;
        }
        else
        {
          *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
          *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
          *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
          *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
          v7[56] = v8[56];
          v7[57] = v8[57];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v43 = type metadata accessor for IntelligenceElement.Text();
        v44 = *(int *)(v43 + 28);
        v45 = &v7[v44];
        v46 = &v8[v44];
        v47 = sub_24967621C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
        v48 = *(int *)(v43 + 32);
        v49 = &v7[v48];
        v50 = &v8[v48];
        v51 = *(_OWORD *)v50;
        v52 = *((_OWORD *)v50 + 1);
        *(_OWORD *)(v49 + 26) = *(_OWORD *)(v50 + 26);
        *(_OWORD *)v49 = v51;
        *((_OWORD *)v49 + 1) = v52;
        goto LABEL_18;
      case 5u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = a3[7];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = *(_QWORD *)v55;
  v54[8] = v55[8];
  *(_QWORD *)v54 = v56;
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for IntelligenceElement(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for IntelligenceElement.Content();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 4:
      *(_WORD *)v8 = *(_WORD *)v9;
      *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      *((_WORD *)v8 + 28) = *((_WORD *)v9 + 28);
      v18 = type metadata accessor for IntelligenceElement.Text();
      v19 = *(int *)(v18 + 28);
      v20 = &v8[v19];
      v21 = &v9[v19];
      v22 = sub_24967621C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      v23 = *(int *)(v18 + 32);
      v24 = &v8[v23];
      v25 = &v9[v23];
      v26 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v26;
      *(_OWORD *)(v24 + 26) = *(_OWORD *)(v25 + 26);
      swift_storeEnumTagMultiPayload();
      break;
    case 3:
      v27 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v27;
      v28 = *((_OWORD *)v9 + 3);
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      *((_OWORD *)v8 + 3) = v28;
      v29 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
      v30 = &v8[v29];
      v31 = &v9[v29];
      v32 = *(_OWORD *)&v9[v29 + 16];
      *(_OWORD *)v30 = *(_OWORD *)&v9[v29];
      *((_OWORD *)v30 + 1) = v32;
      *((_OWORD *)v30 + 2) = *(_OWORD *)&v9[v29 + 32];
      *(_OWORD *)(v30 + 47) = *(_OWORD *)&v9[v29 + 47];
      v33 = *(_OWORD *)&v9[v29 + 80];
      *((_OWORD *)v30 + 4) = *(_OWORD *)&v9[v29 + 64];
      *((_OWORD *)v30 + 5) = v33;
      *((_OWORD *)v30 + 6) = *(_OWORD *)&v9[v29 + 96];
      v34 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v35 = &v30[v34];
      v36 = &v31[v34];
      v37 = sub_24967633C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v12 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v12;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      *(_OWORD *)(v8 + 47) = *(_OWORD *)(v9 + 47);
      v13 = *((_OWORD *)v9 + 5);
      *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
      *((_OWORD *)v8 + 5) = v13;
      *((_OWORD *)v8 + 6) = *((_OWORD *)v9 + 6);
      v14 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v15 = &v8[v14];
      v16 = &v9[v14];
      v17 = sub_24967633C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      break;
  }
  v38 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = v40[8];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_OWORD *assignWithTake for IntelligenceElement(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_24963499C((uint64_t)a1 + v7, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
    v10 = type metadata accessor for IntelligenceElement.Content();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 4:
        *(_WORD *)v8 = *(_WORD *)v9;
        *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
        *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        *((_WORD *)v8 + 28) = *((_WORD *)v9 + 28);
        v18 = type metadata accessor for IntelligenceElement.Text();
        v19 = *(int *)(v18 + 28);
        v20 = &v8[v19];
        v21 = &v9[v19];
        v22 = sub_24967621C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        v23 = *(int *)(v18 + 32);
        v24 = &v8[v23];
        v25 = &v9[v23];
        v26 = *((_OWORD *)v25 + 1);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v26;
        *(_OWORD *)(v24 + 26) = *(_OWORD *)(v25 + 26);
        swift_storeEnumTagMultiPayload();
        break;
      case 3:
        v27 = *((_OWORD *)v9 + 1);
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_OWORD *)v8 + 1) = v27;
        v28 = *((_OWORD *)v9 + 3);
        *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
        *((_OWORD *)v8 + 3) = v28;
        v29 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
        v30 = &v8[v29];
        v31 = &v9[v29];
        v32 = *(_OWORD *)&v9[v29 + 16];
        *(_OWORD *)v30 = *(_OWORD *)&v9[v29];
        *((_OWORD *)v30 + 1) = v32;
        *((_OWORD *)v30 + 2) = *(_OWORD *)&v9[v29 + 32];
        *(_OWORD *)(v30 + 47) = *(_OWORD *)&v9[v29 + 47];
        v33 = *(_OWORD *)&v9[v29 + 80];
        *((_OWORD *)v30 + 4) = *(_OWORD *)&v9[v29 + 64];
        *((_OWORD *)v30 + 5) = v33;
        *((_OWORD *)v30 + 6) = *(_OWORD *)&v9[v29 + 96];
        v34 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v35 = &v30[v34];
        v36 = &v31[v34];
        v37 = sub_24967633C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v12 = *((_OWORD *)v9 + 1);
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_OWORD *)v8 + 1) = v12;
        *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
        *(_OWORD *)(v8 + 47) = *(_OWORD *)(v9 + 47);
        v13 = *((_OWORD *)v9 + 5);
        *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
        *((_OWORD *)v8 + 5) = v13;
        *((_OWORD *)v8 + 6) = *((_OWORD *)v9 + 6);
        v14 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v15 = &v8[v14];
        v16 = &v9[v14];
        v17 = sub_24967633C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v38 = a3[7];
  v39 = a3[8];
  v40 = (char *)a1 + v38;
  v41 = (char *)a2 + v38;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  v40[8] = v41[8];
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceElement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249640184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for IntelligenceElement.Content();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceElement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249640210(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for IntelligenceElement.Content();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_24964028C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IntelligenceElement.Content();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24964031C(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
      result = swift_bridgeObjectRetain();
      break;
    case 3:
      result = sub_24963DC2C(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for IntelligenceElement.StorageValue(uint64_t a1)
{
  return sub_24963DBAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s21UIIntelligenceSupport19IntelligenceElementV12StorageValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24964031C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for IntelligenceElement.StorageValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24964031C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_24963DBAC(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IntelligenceElement.StorageValue(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_24963DBAC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceElement.StorageValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceElement.StorageValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2496404E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2496404F0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageValue()
{
  return &type metadata for IntelligenceElement.StorageValue;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageKey()
{
  return &type metadata for IntelligenceElement.StorageKey;
}

uint64_t getEnumTagSinglePayload for IntelligenceElement.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceElement.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2496405FC + 4 * byte_249677636[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_249640630 + 4 * byte_249677631[v4]))();
}

uint64_t sub_249640630(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249640638(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249640640);
  return result;
}

uint64_t sub_24964064C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249640654);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_249640658(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249640660(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_24964066C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceElement.CodingKeys()
{
  return &type metadata for IntelligenceElement.CodingKeys;
}

unint64_t sub_249640688()
{
  unint64_t result;

  result = qword_25786B1D0;
  if (!qword_25786B1D0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677884, &type metadata for IntelligenceElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B1D0);
  }
  return result;
}

unint64_t sub_2496406D0()
{
  unint64_t result;

  result = qword_25786ADC8;
  if (!qword_25786ADC8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496778EC, &type metadata for IntelligenceElement.StorageKey);
    atomic_store(result, (unint64_t *)&qword_25786ADC8);
  }
  return result;
}

unint64_t sub_249640718()
{
  unint64_t result;

  result = qword_25786AD20;
  if (!qword_25786AD20)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496777BC, &type metadata for IntelligenceElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD20);
  }
  return result;
}

unint64_t sub_249640760()
{
  unint64_t result;

  result = qword_25786AD18;
  if (!qword_25786AD18)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496777E4, &type metadata for IntelligenceElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD18);
  }
  return result;
}

uint64_t sub_2496407A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7474416172747865 && a2 == 0xEF73657475626972;
  if (v2 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79546D6F74737563 && a2 == 0xEF73656D614E6570 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000024967D440 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024967D460 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024967D480 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024967D4A0 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x800000024967D4C0 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024967D4F0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_249640AF4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD v31[5];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A988);
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v48 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9A8);
  v31[4] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v51 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A980);
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A998);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A990);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9A0);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A970);
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A978);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A968);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_249641A00();
  v23 = v53;
  sub_2496769FC();
  if (!v23)
  {
    v31[3] = v17;
    v31[1] = v15;
    v31[2] = v14;
    v53 = v19;
    v24 = v21;
    v25 = sub_2496768D0();
    v26 = v18;
    if (*(_QWORD *)(v25 + 16) == 1)
      __asm { BR              X9 }
    v27 = sub_2496767C8();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B240);
    *v29 = &type metadata for IntelligenceElement.StorageKey;
    sub_24967684C();
    sub_2496767BC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v26);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
}

uint64_t sub_2496411B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
  if (v2 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7961727261 && a2 == 0xE500000000000000 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616E6F6974636964 && a2 == 0xEA00000000007972 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

_QWORD *sub_24964135C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9B8);
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9D0);
  v27 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v30 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9C0);
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9C8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9B0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v32 = a1;
  v15 = __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_249641C64();
  v16 = v33;
  sub_2496769FC();
  if (!v16)
  {
    v22[2] = v6;
    v22[3] = v9;
    v22[1] = v7;
    v33 = v11;
    v17 = sub_2496768D0();
    if (*(_QWORD *)(v17 + 16) == 1)
      __asm { BR              X9 }
    v18 = sub_2496767C8();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B240);
    *v20 = &type metadata for IntelligenceElement.StorageValue;
    v15 = v13;
    sub_24967684C();
    sub_2496767BC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v10);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return v15;
}

uint64_t sub_2496419B8()
{
  unint64_t v0;

  v0 = sub_249676834();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_249641A00()
{
  unint64_t result;

  result = qword_25786AD28;
  if (!qword_25786AD28)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678690, &type metadata for IntelligenceElement.StorageKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD28);
  }
  return result;
}

unint64_t sub_249641A44()
{
  unint64_t result;

  result = qword_25786AD70;
  if (!qword_25786AD70)
  {
    result = MEMORY[0x24BCF4DE0]("InB\bXr", &type metadata for IntelligenceElement.StorageKey.AccessibilityLabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD70);
  }
  return result;
}

unint64_t sub_249641A88()
{
  unint64_t result;

  result = qword_25786B1D8;
  if (!qword_25786B1D8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496785F0, &type metadata for IntelligenceElement.StorageKey.AppIntentsPayloadDebugDescriptionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B1D8);
  }
  return result;
}

unint64_t sub_249641ACC()
{
  unint64_t result;

  result = qword_25786B1E0;
  if (!qword_25786B1E0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496785A0, &type metadata for IntelligenceElement.StorageKey.AppIntentsPayloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B1E0);
  }
  return result;
}

unint64_t sub_249641B10()
{
  unint64_t result;

  result = qword_25786B1E8;
  if (!qword_25786B1E8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678550, &type metadata for IntelligenceElement.StorageKey.AppIntentIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B1E8);
  }
  return result;
}

unint64_t sub_249641B54()
{
  unint64_t result;

  result = qword_25786B1F0;
  if (!qword_25786B1F0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678500, &type metadata for IntelligenceElement.StorageKey.AppEntityIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B1F0);
  }
  return result;
}

unint64_t sub_249641B98()
{
  unint64_t result;

  result = qword_25786B1F8;
  if (!qword_25786B1F8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496784B0, &type metadata for IntelligenceElement.StorageKey.CustomControllerTypeNamesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B1F8);
  }
  return result;
}

unint64_t sub_249641BDC()
{
  unint64_t result;

  result = qword_25786B200;
  if (!qword_25786B200)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678460, &type metadata for IntelligenceElement.StorageKey.CustomTypeNamesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B200);
  }
  return result;
}

unint64_t sub_249641C20()
{
  unint64_t result;

  result = qword_25786B208;
  if (!qword_25786B208)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678410, &type metadata for IntelligenceElement.StorageKey.ExtraAttributesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B208);
  }
  return result;
}

unint64_t sub_249641C64()
{
  unint64_t result;

  result = qword_25786ADD0;
  if (!qword_25786ADD0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496783C0, &type metadata for IntelligenceElement.StorageValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADD0);
  }
  return result;
}

unint64_t sub_249641CA8()
{
  unint64_t result;

  result = qword_25786B210;
  if (!qword_25786B210)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678370, &type metadata for IntelligenceElement.StorageValue.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B210);
  }
  return result;
}

unint64_t sub_249641CEC()
{
  unint64_t result;

  result = qword_25786A748;
  if (!qword_25786A748)
  {
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25786A748);
  }
  return result;
}

unint64_t sub_249641D30()
{
  unint64_t result;

  result = qword_25786B218;
  if (!qword_25786B218)
  {
    atomic_store(result, (unint64_t *)&qword_25786B218);
  }
  return result;
}

unint64_t sub_249641D74()
{
  unint64_t result;

  result = qword_25786B230;
  if (!qword_25786B230)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496782D0, &type metadata for IntelligenceElement.StorageValue.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B230);
  }
  return result;
}

unint64_t sub_249641DB8()
{
  unint64_t result;

  result = qword_25786AE18;
  if (!qword_25786AE18)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678280, &type metadata for IntelligenceElement.StorageValue.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AE18);
  }
  return result;
}

unint64_t sub_249641DFC()
{
  unint64_t result;

  result = qword_25786A7C0;
  if (!qword_25786A7C0)
  {
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25786A7C0);
  }
  return result;
}

uint64_t sub_249641E40(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25786B220);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x24BCF4DE0](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249641EA0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25786A8F8);
    v8 = a2;
    result = MEMORY[0x24BCF4DE0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IntelligenceElement.StorageValue.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceElement.StorageValue.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_249641FDC + 4 * byte_24967764C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_249642010 + 4 * byte_249677647[v4]))();
}

uint64_t sub_249642010(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249642018(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249642020);
  return result;
}

uint64_t sub_24964202C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249642034);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_249642038(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249642040(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageValue.CodingKeys()
{
  return &type metadata for IntelligenceElement.StorageValue.CodingKeys;
}

uint64_t sub_249642068()
{
  return 0;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageValue.StringCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageValue.StringCodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageValue.ArrayCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageValue.ArrayCodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageValue.DictionaryCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageValue.DictionaryCodingKeys;
}

uint64_t getEnumTagSinglePayload for IntelligenceCommand.Identifier.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s21UIIntelligenceSupport19IntelligenceElementV12StorageValueO16StringCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249642130 + 4 * byte_249677651[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249642150 + 4 * byte_249677656[v4]))();
}

_BYTE *sub_249642130(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249642150(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249642158(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249642160(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249642168(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249642170(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageValue.DataCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageValue.DataCodingKeys;
}

uint64_t _s7ContentO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s21UIIntelligenceSupport19IntelligenceElementV10StorageKeyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_249642268 + 4 * byte_249677660[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_24964229C + 4 * byte_24967765B[v4]))();
}

uint64_t sub_24964229C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496422A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496422ACLL);
  return result;
}

uint64_t sub_2496422B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496422C0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2496422C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496422CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageKey.CodingKeys()
{
  return &type metadata for IntelligenceElement.StorageKey.CodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageKey.ExtraAttributesCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageKey.ExtraAttributesCodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageKey.CustomTypeNamesCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageKey.CustomTypeNamesCodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageKey.CustomControllerTypeNamesCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageKey.CustomControllerTypeNamesCodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageKey.AppEntityIdentifierCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageKey.AppEntityIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageKey.AppIntentIdentifierCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageKey.AppIntentIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageKey.AppIntentsPayloadCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageKey.AppIntentsPayloadCodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageKey.AppIntentsPayloadDebugDescriptionCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageKey.AppIntentsPayloadDebugDescriptionCodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceElement.StorageKey.AccessibilityLabelCodingKeys()
{
  return &type metadata for IntelligenceElement.StorageKey.AccessibilityLabelCodingKeys;
}

unint64_t sub_24964236C()
{
  unint64_t result;

  result = qword_25786B260;
  if (!qword_25786B260)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677EC0, &type metadata for IntelligenceElement.StorageKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B260);
  }
  return result;
}

unint64_t sub_2496423B4()
{
  unint64_t result;

  result = qword_25786B268;
  if (!qword_25786B268)
  {
    result = MEMORY[0x24BCF4DE0]("ytB\b$x", &type metadata for IntelligenceElement.StorageValue.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B268);
  }
  return result;
}

unint64_t sub_2496423FC()
{
  unint64_t result;

  result = qword_25786B270;
  if (!qword_25786B270)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678030, &type metadata for IntelligenceElement.StorageValue.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B270);
  }
  return result;
}

unint64_t sub_249642444()
{
  unint64_t result;

  result = qword_25786B278;
  if (!qword_25786B278)
  {
    result = MEMORY[0x24BCF4DE0]("\tsB\b|v", &type metadata for IntelligenceElement.StorageValue.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B278);
  }
  return result;
}

unint64_t sub_24964248C()
{
  unint64_t result;

  result = qword_25786B280;
  if (!qword_25786B280)
  {
    result = MEMORY[0x24BCF4DE0](&unk_2496781A0, &type metadata for IntelligenceElement.StorageValue.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B280);
  }
  return result;
}

unint64_t sub_2496424D4()
{
  unint64_t result;

  result = qword_25786B288;
  if (!qword_25786B288)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678258, &type metadata for IntelligenceElement.StorageValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B288);
  }
  return result;
}

unint64_t sub_24964251C()
{
  unint64_t result;

  result = qword_25786AE08;
  if (!qword_25786AE08)
  {
    result = MEMORY[0x24BCF4DE0]("!sB\b8v", &type metadata for IntelligenceElement.StorageValue.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AE08);
  }
  return result;
}

unint64_t sub_249642564()
{
  unint64_t result;

  result = qword_25786AE10;
  if (!qword_25786AE10)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678138, &type metadata for IntelligenceElement.StorageValue.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AE10);
  }
  return result;
}

unint64_t sub_2496425AC()
{
  unint64_t result;

  result = qword_25786AE00;
  if (!qword_25786AE00)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678058, &type metadata for IntelligenceElement.StorageValue.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AE00);
  }
  return result;
}

unint64_t sub_2496425F4()
{
  unint64_t result;

  result = qword_25786ADF8;
  if (!qword_25786ADF8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678080, &type metadata for IntelligenceElement.StorageValue.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADF8);
  }
  return result;
}

unint64_t sub_24964263C()
{
  unint64_t result;

  result = qword_25786AE28;
  if (!qword_25786AE28)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677FA0, &type metadata for IntelligenceElement.StorageValue.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AE28);
  }
  return result;
}

unint64_t sub_249642684()
{
  unint64_t result;

  result = qword_25786AE20;
  if (!qword_25786AE20)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677FC8, &type metadata for IntelligenceElement.StorageValue.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AE20);
  }
  return result;
}

unint64_t sub_2496426CC()
{
  unint64_t result;

  result = qword_25786ADF0;
  if (!qword_25786ADF0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677EE8, &type metadata for IntelligenceElement.StorageValue.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADF0);
  }
  return result;
}

unint64_t sub_249642714()
{
  unint64_t result;

  result = qword_25786ADE8;
  if (!qword_25786ADE8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677F10, &type metadata for IntelligenceElement.StorageValue.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADE8);
  }
  return result;
}

unint64_t sub_24964275C()
{
  unint64_t result;

  result = qword_25786ADE0;
  if (!qword_25786ADE0)
  {
    result = MEMORY[0x24BCF4DE0]("irB\bdu", &type metadata for IntelligenceElement.StorageValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADE0);
  }
  return result;
}

unint64_t sub_2496427A4()
{
  unint64_t result;

  result = qword_25786ADD8;
  if (!qword_25786ADD8)
  {
    result = MEMORY[0x24BCF4DE0]("1rB\b<u", &type metadata for IntelligenceElement.StorageValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADD8);
  }
  return result;
}

unint64_t sub_2496427EC()
{
  unint64_t result;

  result = qword_25786AD58;
  if (!qword_25786AD58)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677DE0, &type metadata for IntelligenceElement.StorageKey.ExtraAttributesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD58);
  }
  return result;
}

unint64_t sub_249642834()
{
  unint64_t result;

  result = qword_25786AD50;
  if (!qword_25786AD50)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677E08, &type metadata for IntelligenceElement.StorageKey.ExtraAttributesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD50);
  }
  return result;
}

unint64_t sub_24964287C()
{
  unint64_t result;

  result = qword_25786AD48;
  if (!qword_25786AD48)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677D90, &type metadata for IntelligenceElement.StorageKey.CustomTypeNamesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD48);
  }
  return result;
}

unint64_t sub_2496428C4()
{
  unint64_t result;

  result = qword_25786AD40;
  if (!qword_25786AD40)
  {
    result = MEMORY[0x24BCF4DE0]("ivB\b8z", &type metadata for IntelligenceElement.StorageKey.CustomTypeNamesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD40);
  }
  return result;
}

unint64_t sub_24964290C()
{
  unint64_t result;

  result = qword_25786ADB0;
  if (!qword_25786ADB0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677D40, &type metadata for IntelligenceElement.StorageKey.CustomControllerTypeNamesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADB0);
  }
  return result;
}

unint64_t sub_249642954()
{
  unint64_t result;

  result = qword_25786ADA8;
  if (!qword_25786ADA8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677D68, &type metadata for IntelligenceElement.StorageKey.CustomControllerTypeNamesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADA8);
  }
  return result;
}

unint64_t sub_24964299C()
{
  unint64_t result;

  result = qword_25786AD90;
  if (!qword_25786AD90)
  {
    result = MEMORY[0x24BCF4DE0]("AwB\b8{", &type metadata for IntelligenceElement.StorageKey.AppEntityIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD90);
  }
  return result;
}

unint64_t sub_2496429E4()
{
  unint64_t result;

  result = qword_25786AD88;
  if (!qword_25786AD88)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677D18, &type metadata for IntelligenceElement.StorageKey.AppEntityIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD88);
  }
  return result;
}

unint64_t sub_249642A2C()
{
  unint64_t result;

  result = qword_25786ADA0;
  if (!qword_25786ADA0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677CA0, &type metadata for IntelligenceElement.StorageKey.AppIntentIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADA0);
  }
  return result;
}

unint64_t sub_249642A74()
{
  unint64_t result;

  result = qword_25786AD98;
  if (!qword_25786AD98)
  {
    result = MEMORY[0x24BCF4DE0]("YwB\b|{", &type metadata for IntelligenceElement.StorageKey.AppIntentIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD98);
  }
  return result;
}

unint64_t sub_249642ABC()
{
  unint64_t result;

  result = qword_25786AD68;
  if (!qword_25786AD68)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677C50, &type metadata for IntelligenceElement.StorageKey.AppIntentsPayloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD68);
  }
  return result;
}

unint64_t sub_249642B04()
{
  unint64_t result;

  result = qword_25786AD60;
  if (!qword_25786AD60)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677C78, &type metadata for IntelligenceElement.StorageKey.AppIntentsPayloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD60);
  }
  return result;
}

unint64_t sub_249642B4C()
{
  unint64_t result;

  result = qword_25786ADB8;
  if (!qword_25786ADB8)
  {
    result = MEMORY[0x24BCF4DE0]("1xB\b||", &type metadata for IntelligenceElement.StorageKey.AppIntentsPayloadDebugDescriptionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADB8);
  }
  return result;
}

unint64_t sub_249642B94()
{
  unint64_t result;

  result = qword_25786ADC0;
  if (!qword_25786ADC0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677C28, &type metadata for IntelligenceElement.StorageKey.AppIntentsPayloadDebugDescriptionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786ADC0);
  }
  return result;
}

unint64_t sub_249642BDC()
{
  unint64_t result;

  result = qword_25786AD80;
  if (!qword_25786AD80)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677BB0, &type metadata for IntelligenceElement.StorageKey.AccessibilityLabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD80);
  }
  return result;
}

unint64_t sub_249642C24()
{
  unint64_t result;

  result = qword_25786AD78;
  if (!qword_25786AD78)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677BD8, &type metadata for IntelligenceElement.StorageKey.AccessibilityLabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD78);
  }
  return result;
}

unint64_t sub_249642C6C()
{
  unint64_t result;

  result = qword_25786AD38;
  if (!qword_25786AD38)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677E30, &type metadata for IntelligenceElement.StorageKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD38);
  }
  return result;
}

unint64_t sub_249642CB4()
{
  unint64_t result;

  result = qword_25786AD30;
  if (!qword_25786AD30)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249677E58, &type metadata for IntelligenceElement.StorageKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786AD30);
  }
  return result;
}

uint64_t sub_249642D10()
{
  uint64_t v0;

  v0 = sub_2496760C0();
  __swift_allocate_value_buffer(v0, qword_25786A750);
  __swift_project_value_buffer(v0, (uint64_t)qword_25786A750);
  sub_249676090();
  sub_2496760A8();
  sub_2496760A8();
  sub_2496760A8();
  sub_2496760A8();
  sub_2496760A8();
  sub_2496760A8();
  sub_2496760A8();
  sub_2496760A8();
  sub_2496760A8();
  sub_2496760A8();
  sub_2496760A8();
  return sub_2496760A8();
}

uint64_t sub_249642DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_2496760C0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_25786A780);
  __swift_project_value_buffer(v0, (uint64_t)qword_25786A780);
  sub_24967609C();
  if (qword_25786A768 != -1)
    swift_once();
  __swift_project_value_buffer(v0, (uint64_t)qword_25786A750);
  sub_249676084();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

Swift::String __swiftcall String.trimmed(maximumLength:trimWhitespace:)(Swift::Int_optional maximumLength, Swift::Bool trimWhitespace)
{
  Swift::Int value;
  Swift::Bool is_nil;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  Swift::String result;
  uint64_t v16;
  _BOOL4 v17;
  Swift::Int_optional v18;

  v17 = trimWhitespace;
  value = maximumLength.value;
  is_nil = maximumLength.is_nil;
  v4 = sub_249676120();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_249676264();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_24967621C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_249676258();
  sub_249676228();
  v18.value = value;
  v18.is_nil = is_nil;
  AttributedString.trim(maximumLength:trimWhitespace:)(v18, v17);
  sub_249676108();
  sub_24963EC48(&qword_25786B290, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
  v10 = sub_2496765A0();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v10;
  v14 = v12;
  result._object = v14;
  result._countAndFlagsBits = v13;
  return result;
}

Swift::Bool __swiftcall String.trim(maximumLength:trimWhitespace:)(Swift::Int_optional maximumLength, Swift::Bool trimWhitespace)
{
  uint64_t *v2;
  uint64_t *v3;
  Swift::Bool is_nil;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Bool v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int value;
  _BOOL4 v17;
  Swift::Int_optional v18;

  v3 = v2;
  v17 = trimWhitespace;
  value = maximumLength.value;
  is_nil = maximumLength.is_nil;
  v5 = sub_249676120();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_249676264();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_24967621C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&value - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249676258();
  sub_249676228();
  v18.value = value;
  v18.is_nil = is_nil;
  v11 = AttributedString.trim(maximumLength:trimWhitespace:)(v18, v17);
  sub_249676108();
  sub_24963EC48(&qword_25786B290, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
  v12 = sub_2496765A0();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *v3 = v12;
  v3[1] = v14;
  return v11;
}

Swift::Bool __swiftcall AttributedString.trim(maximumLength:trimWhitespace:)(Swift::Int_optional maximumLength, Swift::Bool trimWhitespace)
{
  void (*v2)(_QWORD, _QWORD);
  void (*v3)(uint64_t, uint64_t);
  Swift::Bool is_nil;
  Swift::Int value;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::Bool v38;
  int v39;
  void (*v40)(uint64_t, uint64_t);
  unint64_t v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  char *v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::Bool result;
  uint64_t v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  char *v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  char *v91;
  void (*v92)(uint64_t, uint64_t);
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;

  v3 = v2;
  is_nil = maximumLength.is_nil;
  value = maximumLength.value;
  v7 = sub_249676294();
  MEMORY[0x24BDAC7A8](v7);
  v92 = (void (*)(uint64_t, uint64_t))((char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A730);
  v9 = MEMORY[0x24BDAC7A8](v98);
  v95 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v93 = (char *)&v85 - v11;
  v12 = sub_2496761F8();
  v96 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v97 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v99 = (char *)&v85 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v85 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A7A0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v94 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v85 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A7A8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_249676168();
  v29 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!is_nil && value <= 0)
  {
    v33 = v32;
    v34 = v29;
    v35 = v30;
    sub_249676144();
    v36 = sub_24967621C();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v3, v36);
    v37 = sub_24967615C();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
    v38 = v37 > 0;
    sub_249676210();
    return v38;
  }
  v39 = is_nil;
  if (!trimWhitespace)
  {
    if (!v39)
    {
      v66 = v32;
      v67 = v29;
      v68 = v30;
      sub_249676144();
      v69 = sub_24967615C();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v67);
      if (v69 > value)
      {
        v70 = (uint64_t)v99;
        sub_249676114();
        v71 = sub_24967621C();
        sub_24963EC48(&qword_25786A740, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
        v89 = v71;
        sub_2496762DC();
        v72 = v96;
        v90 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
        v90(v70, v12);
        sub_249643A5C((uint64_t)v18, v70);
        v73 = v97;
        sub_249676114();
        sub_24963EC48(&qword_25786B298, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
        result = sub_2496764C8();
        v91 = v18;
        if (result)
        {
          v74 = v98;
          v75 = v93;
          v76 = &v93[*(int *)(v98 + 48)];
          v77 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
          v77(v93, v73, v12);
          v78 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
          v88 = v76;
          v78(v76, v99, v12);
          v79 = v95;
          v80 = &v95[*(int *)(v74 + 48)];
          v78(v95, v75, v12);
          v78(v80, v76, v12);
          v81 = (uint64_t)v94;
          v77(v94, v79, v12);
          v82 = (void (*)(char *, uint64_t))v90;
          v90((uint64_t)v80, v12);
          v83 = &v79[*(int *)(v98 + 48)];
          v77(v79, v75, v12);
          v77(v83, v88, v12);
          v77((char *)(v81 + *(int *)(v19 + 36)), v83, v12);
          v82(v79, v12);
          sub_249643D78(v81, (uint64_t)v24);
          sub_249643DC0();
          sub_249676240();
          (*(void (**)(void (*)(uint64_t, uint64_t)))(*(_QWORD *)(v89 - 8) + 8))(v3);
          sub_24963EB88((uint64_t)v24, &qword_25786A7A0);
          sub_24967624C();
          v82(v99, v12);
          v82(v91, v12);
          return 1;
        }
        __break(1u);
        goto LABEL_26;
      }
    }
    return 0;
  }
  v88 = v32;
  v89 = v30;
  v90 = (void (*)(uint64_t, uint64_t))v29;
  v92 = (void (*)(uint64_t, uint64_t))value;
  v40 = v3;
  v41 = sub_249643E0C(value, v39);
  if (!v41)
  {
    v84 = sub_24967621C();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v84 - 8) + 8))(v3, v84);
    sub_249676210();
    return 0;
  }
  v43 = v41;
  v86 = v42;
  v87 = v39;
  v91 = v18;
  v85 = v12;
  v44 = *(_QWORD *)(v41 + 16);
  if (v44)
  {
    v45 = v41 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    while (v44 <= *(_QWORD *)(v43 + 16))
    {
      --v44;
      sub_249644C08(v45 + *(_QWORD *)(v20 + 72) * v44, (uint64_t)v27, &qword_25786A7A0);
      v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
      v46(v27, 0, 1, v19);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v27, 1, v19) == 1)
        goto LABEL_12;
      sub_249643D78((uint64_t)v27, (uint64_t)v24);
      sub_249643DC0();
      sub_249676138();
      sub_24963EB88((uint64_t)v24, &qword_25786A7A0);
      if (!v44)
      {
        v46(v27, 1, 1, v19);
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v27, 1, 1, v19);
LABEL_12:
  v38 = v86 & 1;
  swift_bridgeObjectRelease();
  if (v87)
    return v38;
  v47 = v88;
  v48 = v40;
  sub_249676144();
  v49 = sub_24967615C();
  (*(void (**)(char *, _QWORD))(v89 + 8))(v47, v90);
  if (v49 <= (uint64_t)v92)
    return v38;
  v50 = (uint64_t)v99;
  sub_249676114();
  sub_24967621C();
  sub_24963EC48(&qword_25786A740, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
  v51 = (uint64_t)v91;
  sub_2496762DC();
  v52 = v96;
  v53 = v85;
  v92 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
  v92(v50, v85);
  sub_249643A5C(v51, v50);
  v90 = v48;
  sub_249676204();
  sub_24963EC48(&qword_25786B298, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
  result = sub_2496764C8();
  if (result)
  {
    v55 = v98;
    v56 = v93;
    v57 = &v93[*(int *)(v98 + 48)];
    v58 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
    v58(v93, v50, v53);
    v59 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
    v59(v57, v97, v53);
    v60 = *(int *)(v55 + 48);
    v61 = v95;
    v62 = &v95[v60];
    v58(v95, (uint64_t)v56, v53);
    v58(v62, (uint64_t)v57, v53);
    v63 = (uint64_t)v94;
    v59(v94, v61, v53);
    v92((uint64_t)v62, v53);
    v64 = &v61[*(int *)(v98 + 48)];
    v59(v61, v56, v53);
    v59(v64, v57, v53);
    v59((char *)(v63 + *(int *)(v19 + 36)), v64, v53);
    v65 = (void (*)(char *, uint64_t))v92;
    v92((uint64_t)v61, v53);
    sub_249643D78(v63, (uint64_t)v24);
    sub_249643DC0();
    sub_249676138();
    sub_24963EB88((uint64_t)v24, &qword_25786A7A0);
    v65(v99, v53);
    v65(v91, v53);
    return v38;
  }
LABEL_26:
  __break(1u);
  return result;
}

BOOL AttributedString.trimmed(maximumLength:trimWhitespace:)@<W0>(Swift::Int a1@<X0>, char a2@<W1>, Swift::Bool a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  Swift::Bool v8;
  uint64_t v9;
  Swift::Int_optional v11;

  v8 = a2 & 1;
  v9 = sub_24967621C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a4, v4, v9);
  v11.value = a1;
  v11.is_nil = v8;
  return AttributedString.trim(maximumLength:trimWhitespace:)(v11, a3);
}

uint64_t sub_249643A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  char v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v30 = sub_249676168();
  v4 = *(_QWORD *)(v30 - 8);
  v5 = MEMORY[0x24BDAC7A8](v30);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)&v26 - v8;
  v9 = sub_2496761F8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v26 - v14;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v31 = a1;
  v16(a2, a1, v9);
  sub_249676114();
  sub_249676144();
  v17 = sub_24963EC48(&qword_25786B298, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
  v28 = v15;
  v18 = v4;
  LOBYTE(a1) = sub_2496764BC();
  v19 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v19(v7, v29, v30);
  if ((a1 & 1) != 0)
  {
    v26 = v17;
    v27 = v18;
    v20 = v30;
    while (1)
    {
      if (qword_25786A798 != -1)
        swift_once();
      v21 = sub_2496760C0();
      __swift_project_value_buffer(v21, (uint64_t)qword_25786A780);
      sub_249676174();
      v22 = sub_2496760B4();
      v23 = *(void (**)(char *, uint64_t))(v27 + 8);
      v23(v7, v20);
      if ((v22 & 1) != 0)
        break;
      sub_24967621C();
      sub_24963EC48(&qword_25786A740, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
      sub_2496762D0();
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(a2, v13, v9);
      v24 = sub_2496764BC();
      v19(v7, v29, v20);
      if ((v24 & 1) == 0)
        goto LABEL_9;
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t))(v18 + 8);
LABEL_9:
    v23(v7, v30);
  }
  if ((sub_2496761EC() & 1) != 0)
  {
    sub_24967621C();
    sub_24963EC48(&qword_25786A740, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
    do
    {
      sub_2496762C4();
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(a2, v13, v9);
    }
    while ((sub_2496761EC() & 1) != 0);
  }
  v23(v29, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v28, v9);
}

uint64_t sub_249643D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_249643DC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25786B2A0;
  if (!qword_25786B2A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25786A7A0);
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BEE1BC0], v1);
    atomic_store(result, (unint64_t *)&qword_25786B2A0);
  }
  return result;
}

unint64_t sub_249643E0C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  BOOL v47;
  char *v48;
  BOOL v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  unint64_t v69;
  void (*v70)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  char *v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  void (*v100)(char *, uint64_t);
  char *v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  unint64_t v107;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  void (*v118)(char *, uint64_t);
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t);
  char *v129;
  void (*v130)(char *, uint64_t, uint64_t, uint64_t);
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  unint64_t v133;
  int v134;
  char *v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;

  v137 = a2;
  v136 = a1;
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A730);
  v2 = MEMORY[0x24BDAC7A8](v122);
  v123 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v120 = (char *)&v109 - v4;
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A7A0);
  v124 = *(_QWORD *)(v121 - 8);
  v5 = MEMORY[0x24BDAC7A8](v121);
  v7 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v113 = (uint64_t)&v109 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v119 = (char *)&v109 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v125 = (uint64_t)&v109 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A738);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v128 = (void (*)(char *, uint64_t))((char *)&v109 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v127 = (uint64_t)&v109 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v132 = (uint64_t)&v109 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (void (*)(char *, uint64_t))((char *)&v109 - v23);
  v25 = sub_2496761F8();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v111 = (char *)&v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v135 = (char *)&v109 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v126 = (char *)&v109 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v129 = (char *)&v109 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (void (*)(char *, uint64_t))((char *)&v109 - v36);
  v38 = MEMORY[0x24BDAC7A8](v35);
  v40 = (char *)&v109 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v109 - v41;
  v115 = sub_249676168();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v44 = (char *)&v109 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249676144();
  sub_249676204();
  sub_249676114();
  v130 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v131 = v24;
  v130((char *)v24, 0, 1, v25);
  sub_249676114();
  if ((sub_2496761EC() & 1) != 0)
  {
    v118 = v37;
    v110 = v16;
    v109 = v7;
    v139 = 0;
    v133 = MEMORY[0x24BEE4AF8];
    v45 = (uint64_t)v131;
    v117 = v42;
    v116 = v44;
    v46 = v128;
    v138 = v26;
    do
    {
      v49 = (v137 & 1) != 0 || v139 < v136;
      v50 = !v49;
      v134 = v50;
      if (!v49)
      {
        if (v139 < 1)
          goto LABEL_45;
        goto LABEL_49;
      }
      sub_249676174();
      if (qword_25786A798 != -1)
        swift_once();
      v51 = sub_2496760C0();
      __swift_project_value_buffer(v51, (uint64_t)qword_25786A780);
      if ((sub_2496760B4() & 1) != 0)
      {
        v52 = v132;
        sub_249644C08(v45, v132, &qword_25786A738);
        v26 = v138;
        v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v52, 1, v25);
        sub_24963EB88(v52, &qword_25786A738);
        if (v53 == 1)
        {
          sub_24963EB88(v45, &qword_25786A738);
          (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v45, v40, v25);
          v130((char *)v45, 0, 1, v25);
          v47 = __OFADD__(v139++, 1);
          if (v47)
            goto LABEL_58;
        }
      }
      else
      {
        if (qword_25786A768 != -1)
          swift_once();
        __swift_project_value_buffer(v51, (uint64_t)qword_25786A750);
        if ((sub_2496760B4() & 1) != 0)
        {
          v54 = v127;
          sub_249644C08(v45, v127, &qword_25786A738);
          v26 = v138;
          v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v54, 1, v25);
          sub_24963EB88(v54, &qword_25786A738);
          if (v55 == 1)
          {
            v46 = v118;
            sub_249676150();
            sub_24963EC48(&qword_25786B298, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
            if ((sub_2496764C8() & 1) == 0)
              goto LABEL_59;
            v56 = v122;
            v57 = v120;
            v58 = &v120[*(int *)(v122 + 48)];
            v59 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
            v59(v120, v40, v25);
            v112 = v58;
            v59(v58, (char *)v46, v25);
            v60 = v123;
            v61 = &v123[*(int *)(v56 + 48)];
            v59(v123, v57, v25);
            v59(v61, v58, v25);
            v62 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
            v63 = (uint64_t)v119;
            v62(v119, v60, v25);
            v64 = *(void (**)(char *, uint64_t))(v26 + 8);
            v64(v61, v25);
            v65 = &v60[*(int *)(v56 + 48)];
            v62(v60, v57, v25);
            v62(v65, v112, v25);
            v62((char *)(v63 + *(int *)(v121 + 36)), v65, v25);
            v64(v60, v25);
            sub_249643D78(v63, v125);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v133 = sub_2496328C8(0, *(_QWORD *)(v133 + 16) + 1, 1, v133);
            v67 = *(_QWORD *)(v133 + 16);
            v66 = *(_QWORD *)(v133 + 24);
            v42 = v117;
            v44 = v116;
            v46 = v128;
            v68 = (char *)v118;
            if (v67 >= v66 >> 1)
              v133 = sub_2496328C8(v66 > 1, v67 + 1, 1, v133);
            v69 = v133;
            *(_QWORD *)(v133 + 16) = v67 + 1;
            sub_249643D78(v125, v69+ ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80))+ *(_QWORD *)(v124 + 72) * v67);
            v64(v68, v25);
            v45 = (uint64_t)v131;
            v26 = v138;
          }
        }
        else
        {
          sub_249644C08(v45, (uint64_t)v46, &qword_25786A738);
          v26 = v138;
          if ((*(unsigned int (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v138 + 48))(v46, 1, v25) == 1)
          {
            sub_24963EB88((uint64_t)v46, &qword_25786A738);
          }
          else
          {
            v70 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v26 + 32);
            v71 = v129;
            v70(v129, (void (*)(_QWORD, _QWORD))v46, v25);
            v72 = v126;
            if (v139)
            {
              sub_249676150();
              v71 = v129;
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v126, v71, v25);
            }
            if ((sub_2496761EC() & 1) != 0)
            {
              sub_24963EC48(&qword_25786B298, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
              if ((sub_2496764C8() & 1) == 0)
                goto LABEL_60;
              v73 = v72;
              v74 = v122;
              v75 = v120;
              v76 = &v120[*(int *)(v122 + 48)];
              v77 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
              v77(v120, v73, v25);
              v77(v76, v40, v25);
              v78 = v123;
              v79 = &v123[*(int *)(v74 + 48)];
              v77(v123, v75, v25);
              v77(v79, v76, v25);
              v80 = (uint64_t)v119;
              v70(v119, (void (*)(_QWORD, _QWORD))v78, v25);
              v81 = *(void (**)(char *, uint64_t))(v138 + 8);
              v81(v79, v25);
              v82 = &v78[*(int *)(v74 + 48)];
              v70(v78, (void (*)(_QWORD, _QWORD))v75, v25);
              v70(v82, (void (*)(_QWORD, _QWORD))v76, v25);
              v70((char *)(v80 + *(int *)(v121 + 36)), (void (*)(_QWORD, _QWORD))v82, v25);
              v81(v78, v25);
              sub_249643D78(v80, v113);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v133 = sub_2496328C8(0, *(_QWORD *)(v133 + 16) + 1, 1, v133);
              v84 = *(_QWORD *)(v133 + 16);
              v83 = *(_QWORD *)(v133 + 24);
              v42 = v117;
              v44 = v116;
              v26 = v138;
              v46 = v128;
              if (v84 >= v83 >> 1)
                v133 = sub_2496328C8(v83 > 1, v84 + 1, 1, v133);
              v85 = v133;
              *(_QWORD *)(v133 + 16) = v84 + 1;
              sub_249643D78(v113, v85+ ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80))+ *(_QWORD *)(v124 + 72) * v84);
              v71 = v129;
            }
            else
            {
              v81 = *(void (**)(char *, uint64_t))(v26 + 8);
            }
            v81(v126, v25);
            v81(v71, v25);
            v45 = (uint64_t)v131;
            sub_24963EB88((uint64_t)v131, &qword_25786A738);
            v130((char *)v45, 1, 1, v25);
          }
          v47 = __OFADD__(v139++, 1);
          if (v47)
          {
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
        }
      }
      v48 = v135;
      sub_249676150();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v40, v25);
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v40, v48, v25);
    }
    while ((sub_2496761EC() & 1) != 0);
    if (v139 <= 0)
      goto LABEL_45;
LABEL_49:
    v46 = v131;
    v87 = (uint64_t)v110;
    sub_249644C08((uint64_t)v131, (uint64_t)v110, &qword_25786A738);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v87, 1, v25) == 1)
    {
      v88 = *(void (**)(char *, uint64_t))(v26 + 8);
      v88(v40, v25);
      sub_24963EB88((uint64_t)v46, &qword_25786A738);
      v88(v42, v25);
      (*(void (**)(char *, uint64_t))(v114 + 8))(v44, v115);
      sub_24963EB88(v87, &qword_25786A738);
      return v133;
    }
    v89 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
    v90 = v26;
    v91 = v111;
    v139 = (uint64_t)v89;
    v89(v111, v87, v25);
    sub_24963EC48(&qword_25786B298, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
    if ((sub_2496764C8() & 1) == 0)
      goto LABEL_61;
    v92 = v122;
    v93 = v120;
    v94 = &v120[*(int *)(v122 + 48)];
    v95 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
    v95(v120, v91, v25);
    v95(v94, v42, v25);
    v96 = v123;
    v97 = &v123[*(int *)(v92 + 48)];
    v95(v123, v93, v25);
    v95(v97, v94, v25);
    v98 = (uint64_t)v119;
    v99 = (void (*)(char *, char *, uint64_t))v139;
    ((void (*)(char *, char *, uint64_t))v139)(v119, v96, v25);
    v100 = *(void (**)(char *, uint64_t))(v90 + 8);
    v100(v97, v25);
    v101 = &v96[*(int *)(v92 + 48)];
    v99(v96, v93, v25);
    v99(v101, v94, v25);
    v99((char *)(v98 + *(int *)(v121 + 36)), v101, v25);
    v46 = v100;
    v100(v96, v25);
    sub_249643D78(v98, (uint64_t)v109);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_53;
LABEL_62:
    v133 = sub_2496328C8(0, *(_QWORD *)(v133 + 16) + 1, 1, v133);
LABEL_53:
    v103 = *(_QWORD *)(v133 + 16);
    v102 = *(_QWORD *)(v133 + 24);
    v104 = v117;
    v105 = v116;
    v106 = v111;
    if (v103 >= v102 >> 1)
      v133 = sub_2496328C8(v102 > 1, v103 + 1, 1, v133);
    v107 = v133;
    *(_QWORD *)(v133 + 16) = v103 + 1;
    sub_249643D78((uint64_t)v109, v107+ ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80))+ *(_QWORD *)(v124 + 72) * v103);
    v46(v106, v25);
    v46(v40, v25);
    sub_24963EB88((uint64_t)v131, &qword_25786A738);
    v46(v104, v25);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v105, v115);
  }
  else
  {
    v133 = MEMORY[0x24BEE4AF8];
LABEL_45:
    v86 = *(void (**)(char *, uint64_t))(v26 + 8);
    v86(v40, v25);
    sub_24963EB88((uint64_t)v131, &qword_25786A738);
    v86(v42, v25);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v44, v115);
    swift_bridgeObjectRelease();
    return 0;
  }
  return v133;
}

uint64_t sub_249644C08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t UIIntelligenceCollectionRemoteContextWrapper.remoteContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC21UIIntelligenceSupport44UIIntelligenceCollectionRemoteContextWrapper_remoteContext;
  swift_beginAccess();
  return sub_249634958(v3, a1, type metadata accessor for IntelligenceFragment.RemoteContext);
}

uint64_t UIIntelligenceCollectionRemoteContextWrapper.remoteContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC21UIIntelligenceSupport44UIIntelligenceCollectionRemoteContextWrapper_remoteContext;
  swift_beginAccess();
  sub_2496490DC(a1, v3, type metadata accessor for IntelligenceFragment.RemoteContext);
  return swift_endAccess();
}

uint64_t (*UIIntelligenceCollectionRemoteContextWrapper.remoteContext.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id UIIntelligenceCollectionRemoteContextWrapper.__allocating_init(remoteContext:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_249634958(a1, (uint64_t)v3 + OBJC_IVAR____TtC21UIIntelligenceSupport44UIIntelligenceCollectionRemoteContextWrapper_remoteContext, type metadata accessor for IntelligenceFragment.RemoteContext);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_24963499C(a1, type metadata accessor for IntelligenceFragment.RemoteContext);
  return v4;
}

id UIIntelligenceCollectionRemoteContextWrapper.init(remoteContext:)(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_249634958(a1, (uint64_t)v1 + OBJC_IVAR____TtC21UIIntelligenceSupport44UIIntelligenceCollectionRemoteContextWrapper_remoteContext, type metadata accessor for IntelligenceFragment.RemoteContext);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_24963499C(a1, type metadata accessor for IntelligenceFragment.RemoteContext);
  return v4;
}

uint64_t static UIIntelligenceCollectionRemoteContextWrapper.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall UIIntelligenceCollectionRemoteContextWrapper.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;

  v3 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  v7 = v1 + OBJC_IVAR____TtC21UIIntelligenceSupport44UIIntelligenceCollectionRemoteContextWrapper_remoteContext;
  swift_beginAccess();
  sub_249634958(v7, (uint64_t)v5, type metadata accessor for IntelligenceFragment.RemoteContext);
  v8 = *MEMORY[0x24BDD0E88];
  sub_2496764EC();
  sub_24963EC48(&qword_25786B2B0, type metadata accessor for IntelligenceFragment.RemoteContext, (uint64_t)&protocol conformance descriptor for IntelligenceFragment.RemoteContext);
  sub_249676660();
  sub_24963499C((uint64_t)v5, type metadata accessor for IntelligenceFragment.RemoteContext);
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_encodedData);
  v10 = sub_249676318();
  v12 = v11;

  v13 = (void *)sub_24967630C();
  sub_24963DBE8(v10, v12);
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v13, v8);

}

id UIIntelligenceCollectionRemoteContextWrapper.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return UIIntelligenceCollectionRemoteContextWrapper.init(coder:)(a1);
}

id UIIntelligenceCollectionRemoteContextWrapper.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  id v16;
  int v18;
  objc_class *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  objc_super v24;

  ObjectType = swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B2B8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v22 = (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249648E78();
  sub_2496764EC();
  v9 = v1;
  v10 = (void *)sub_2496766B4();
  swift_bridgeObjectRelease();
  if (v10)
  {
    v11 = sub_249676318();
    v13 = v12;

    v14 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_24963DC2C(v11, v13);
    v15 = sub_249648EB4();
    sub_24963DBE8(v11, v13);
    if (v15)
    {
      sub_2496764EC();
      sub_24963EC48(&qword_25786B1A0, type metadata accessor for IntelligenceFragment.RemoteContext, (uint64_t)&protocol conformance descriptor for IntelligenceFragment.RemoteContext);
      sub_249676678();
      sub_24963DBE8(v11, v13);
      swift_bridgeObjectRelease();

      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
      v19 = (objc_class *)ObjectType;
      if (v18 != 1)
      {
        v20 = v22;
        sub_24963E94C((uint64_t)v5, v22, type metadata accessor for IntelligenceFragment.RemoteContext);
        sub_24963E94C(v20, (uint64_t)v9+ OBJC_IVAR____TtC21UIIntelligenceSupport44UIIntelligenceCollectionRemoteContextWrapper_remoteContext, type metadata accessor for IntelligenceFragment.RemoteContext);

        v24.receiver = v9;
        v24.super_class = v19;
        v16 = objc_msgSendSuper2(&v24, sel_init);

        return v16;
      }

      sub_24963EB88((uint64_t)v5, &qword_25786B2B8);
    }
    else
    {

      sub_24963DBE8(v11, v13);
    }
  }
  else
  {

  }
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t UIIntelligenceCollectionRemoteContextWrapper.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  __int128 v55;
  __int128 v56;
  char v57;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;

  v2 = v1;
  swift_getObjectType();
  v4 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v59 - v8;
  sub_249648F70(a1, (uint64_t)&v70);
  if (!*((_QWORD *)&v71 + 1))
  {
    sub_24963EB88((uint64_t)&v70, &qword_25786B2D0);
    goto LABEL_7;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v57 = 0;
    return v57 & 1;
  }
  v10 = (void *)v59;
  v11 = v2 + OBJC_IVAR____TtC21UIIntelligenceSupport44UIIntelligenceCollectionRemoteContextWrapper_remoteContext;
  swift_beginAccess();
  sub_249634958(v11, (uint64_t)v9, type metadata accessor for IntelligenceFragment.RemoteContext);
  v12 = (uint64_t)v10
      + OBJC_IVAR____TtC21UIIntelligenceSupport44UIIntelligenceCollectionRemoteContextWrapper_remoteContext;
  swift_beginAccess();
  sub_249634958(v12, (uint64_t)v7, type metadata accessor for IntelligenceFragment.RemoteContext);
  v13 = v9[8];
  v14 = v9[9];
  v15 = v9[10];
  v16 = v9[11];
  v17 = v9[12];
  v18 = v9[13];
  v19 = v9[14];
  v20 = v9[15];
  v21 = *((_QWORD *)v9 + 2);
  v22 = v9[24];
  v23 = v9[25];
  v24 = *((_QWORD *)v9 + 4);
  v25 = v9[40];
  v26 = v9[41];
  v27 = *((_QWORD *)v9 + 6);
  v28 = v9[56];
  v29 = v9[57];
  v30 = v9[58];
  LOBYTE(v12) = v9[59];
  v31 = v9[60];
  v32 = v9[61];
  v33 = v9[62];
  *(_QWORD *)&v70 = *(_QWORD *)v9;
  BYTE8(v70) = v13;
  BYTE9(v70) = v14;
  BYTE10(v70) = v15;
  BYTE11(v70) = v16;
  BYTE12(v70) = v17;
  BYTE13(v70) = v18;
  BYTE14(v70) = v19;
  HIBYTE(v70) = v20;
  *(_QWORD *)&v71 = v21;
  BYTE8(v71) = v22;
  BYTE9(v71) = v23;
  *(_QWORD *)&v72 = v24;
  BYTE8(v72) = v25;
  BYTE9(v72) = v26;
  v73 = v27;
  v74 = v28;
  v75 = v29;
  v76 = v30;
  v77 = v12;
  v78 = v31;
  v79 = v32;
  v80 = v33;
  v34 = v7[8];
  v35 = v7[9];
  v36 = v7[10];
  v37 = v7[11];
  v38 = v7[12];
  v39 = v7[13];
  v40 = v7[14];
  v41 = v7[15];
  v42 = *((_QWORD *)v7 + 2);
  v43 = v7[24];
  v44 = v7[25];
  v45 = *((_QWORD *)v7 + 4);
  v46 = v7[40];
  v47 = v7[41];
  v48 = *((_QWORD *)v7 + 6);
  v49 = v7[56];
  v50 = v7[57];
  v51 = v7[58];
  LOBYTE(v12) = v7[59];
  v52 = v7[60];
  v53 = v7[61];
  v54 = v7[62];
  *(_QWORD *)&v59 = *(_QWORD *)v7;
  BYTE8(v59) = v34;
  BYTE9(v59) = v35;
  BYTE10(v59) = v36;
  BYTE11(v59) = v37;
  BYTE12(v59) = v38;
  BYTE13(v59) = v39;
  BYTE14(v59) = v40;
  HIBYTE(v59) = v41;
  *(_QWORD *)&v60 = v42;
  BYTE8(v60) = v43;
  BYTE9(v60) = v44;
  *(_QWORD *)&v61 = v45;
  BYTE8(v61) = v46;
  BYTE9(v61) = v47;
  v62 = v48;
  v63 = v49;
  v64 = v50;
  v65 = v51;
  v66 = v12;
  v67 = v52;
  v68 = v53;
  v69 = v54;
  if ((_s21UIIntelligenceSupport29IntelligenceCollectionRequestV2eeoiySbAC_ACtFZ_0((unsigned int *)&v70, (unsigned int *)&v59) & 1) == 0)goto LABEL_8;
  v55 = *((_OWORD *)v9 + 5);
  v59 = *((_OWORD *)v9 + 4);
  v60 = v55;
  v61 = *((_OWORD *)v9 + 6);
  v56 = *((_OWORD *)v7 + 5);
  v70 = *((_OWORD *)v7 + 4);
  v71 = v56;
  v72 = *((_OWORD *)v7 + 6);
  if ((sub_24967666C() & 1) != 0)
    v57 = _s21UIIntelligenceSupport20IntelligenceFragmentV8RemoteIDV2eeoiySbAE_AEtFZ_0();
  else
LABEL_8:
    v57 = 0;

  sub_24963499C((uint64_t)v7, type metadata accessor for IntelligenceFragment.RemoteContext);
  sub_24963499C((uint64_t)v9, type metadata accessor for IntelligenceFragment.RemoteContext);
  return v57 & 1;
}

id UIIntelligenceCollectionRemoteContextWrapper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void UIIntelligenceCollectionRemoteContextWrapper.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id UIIntelligenceCollectionRemoteContextWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t IntelligenceFragment.RemoteID.hash(into:)()
{
  sub_24967633C();
  sub_24963EC48(&qword_25786B2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_249676498();
}

uint64_t sub_2496458E8()
{
  return 25705;
}

uint64_t sub_2496458F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249676960();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249645970()
{
  sub_249648FB8();
  return sub_249676A20();
}

uint64_t sub_249645998()
{
  sub_249648FB8();
  return sub_249676A2C();
}

uint64_t IntelligenceFragment.RemoteID.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B2E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249648FB8();
  sub_249676A14();
  sub_24967633C();
  sub_24963EC48(&qword_25786B2F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_24967693C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t IntelligenceFragment.RemoteID.hashValue.getter()
{
  sub_2496769A8();
  sub_24967633C();
  sub_24963EC48(&qword_25786B2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249676498();
  return sub_2496769E4();
}

uint64_t IntelligenceFragment.RemoteID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v16 = a2;
  v18 = sub_24967633C();
  v15 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v17 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B2F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249676330();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249648FB8();
  sub_2496769FC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v12 = (uint64_t)v11;
  }
  else
  {
    sub_24963EC48(&qword_25786B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_2496768B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v11, v17, v18);
    sub_249634958((uint64_t)v11, v16, type metadata accessor for IntelligenceFragment.RemoteID);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v12 = (uint64_t)v11;
  }
  return sub_24963499C(v12, type metadata accessor for IntelligenceFragment.RemoteID);
}

uint64_t sub_249645D38()
{
  sub_2496769A8();
  sub_24967633C();
  sub_24963EC48(&qword_25786B2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249676498();
  return sub_2496769E4();
}

uint64_t sub_249645DA4()
{
  sub_24967633C();
  sub_24963EC48(&qword_25786B2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_249676498();
}

uint64_t sub_249645DFC()
{
  sub_2496769A8();
  sub_24967633C();
  sub_24963EC48(&qword_25786B2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249676498();
  return sub_2496769E4();
}

uint64_t sub_249645E64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceFragment.RemoteID.init(from:)(a1, a2);
}

uint64_t sub_249645E78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B2E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249648FB8();
  sub_249676A14();
  sub_24967633C();
  sub_24963EC48(&qword_25786B2F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_24967693C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

double IntelligenceFragment.LocalContext.request.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  double result;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  v4 = *(_BYTE *)(v1 + 10);
  v5 = *(_BYTE *)(v1 + 11);
  v6 = *(_BYTE *)(v1 + 12);
  v7 = *(_BYTE *)(v1 + 13);
  v8 = *(_BYTE *)(v1 + 14);
  v9 = *(_BYTE *)(v1 + 15);
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_BYTE *)(v1 + 24);
  v12 = *(_BYTE *)(v1 + 25);
  v13 = *(_QWORD *)(v1 + 32);
  v14 = *(_BYTE *)(v1 + 40);
  v15 = *(_BYTE *)(v1 + 41);
  v16 = *(_QWORD *)(v1 + 48);
  v17 = *(_BYTE *)(v1 + 56);
  v18 = *(_BYTE *)(v1 + 57);
  v19 = *(_BYTE *)(v1 + 58);
  v20 = *(_BYTE *)(v1 + 59);
  v21 = *(_BYTE *)(v1 + 60);
  v22 = *(_BYTE *)(v1 + 61);
  v23 = *(_BYTE *)(v1 + 62);
  result = *(double *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  *(_BYTE *)(a1 + 10) = v4;
  *(_BYTE *)(a1 + 11) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  *(_BYTE *)(a1 + 13) = v7;
  *(_BYTE *)(a1 + 14) = v8;
  *(_BYTE *)(a1 + 15) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 25) = v12;
  *(_QWORD *)(a1 + 32) = v13;
  *(_BYTE *)(a1 + 40) = v14;
  *(_BYTE *)(a1 + 41) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  *(_BYTE *)(a1 + 56) = v17;
  *(_BYTE *)(a1 + 57) = v18;
  *(_BYTE *)(a1 + 58) = v19;
  *(_BYTE *)(a1 + 59) = v20;
  *(_BYTE *)(a1 + 60) = v21;
  *(_BYTE *)(a1 + 61) = v22;
  *(_BYTE *)(a1 + 62) = v23;
  return result;
}

double IntelligenceFragment.LocalContext.request.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  double result;

  v2 = *(_BYTE *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 9);
  v4 = *(_BYTE *)(a1 + 10);
  v5 = *(_BYTE *)(a1 + 11);
  v6 = *(_BYTE *)(a1 + 12);
  v7 = *(_BYTE *)(a1 + 13);
  v8 = *(_BYTE *)(a1 + 14);
  v9 = *(_BYTE *)(a1 + 15);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 25);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 40);
  v15 = *(_BYTE *)(a1 + 41);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_BYTE *)(a1 + 56);
  v18 = *(_BYTE *)(a1 + 57);
  v19 = *(_BYTE *)(a1 + 58);
  v20 = *(_BYTE *)(a1 + 59);
  v21 = *(_BYTE *)(a1 + 60);
  v22 = *(_BYTE *)(a1 + 61);
  v23 = *(_BYTE *)(a1 + 62);
  result = *(double *)a1;
  *(_QWORD *)v1 = *(_QWORD *)a1;
  *(_BYTE *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 9) = v3;
  *(_BYTE *)(v1 + 10) = v4;
  *(_BYTE *)(v1 + 11) = v5;
  *(_BYTE *)(v1 + 12) = v6;
  *(_BYTE *)(v1 + 13) = v7;
  *(_BYTE *)(v1 + 14) = v8;
  *(_BYTE *)(v1 + 15) = v9;
  *(_QWORD *)(v1 + 16) = v10;
  *(_BYTE *)(v1 + 24) = v11;
  *(_BYTE *)(v1 + 25) = v12;
  *(_QWORD *)(v1 + 32) = v13;
  *(_BYTE *)(v1 + 40) = v14;
  *(_BYTE *)(v1 + 41) = v15;
  *(_QWORD *)(v1 + 48) = v16;
  *(_BYTE *)(v1 + 56) = v17;
  *(_BYTE *)(v1 + 57) = v18;
  *(_BYTE *)(v1 + 58) = v19;
  *(_BYTE *)(v1 + 59) = v20;
  *(_BYTE *)(v1 + 60) = v21;
  *(_BYTE *)(v1 + 61) = v22;
  *(_BYTE *)(v1 + 62) = v23;
  return result;
}

uint64_t (*IntelligenceFragment.LocalContext.request.modify())()
{
  return nullsub_1;
}

double IntelligenceFragment.LocalContext.createRemoteContext()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  double result;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  v3 = *(_BYTE *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 9);
  v5 = *(_BYTE *)(v1 + 10);
  v6 = *(_BYTE *)(v1 + 11);
  v7 = *(_BYTE *)(v1 + 12);
  v8 = *(_BYTE *)(v1 + 13);
  v9 = *(_BYTE *)(v1 + 14);
  v10 = *(_BYTE *)(v1 + 15);
  v25 = *(_QWORD *)(v1 + 16);
  v23 = *(_BYTE *)(v1 + 25);
  v24 = *(_BYTE *)(v1 + 24);
  v22 = *(_QWORD *)(v1 + 32);
  v20 = *(_BYTE *)(v1 + 41);
  v21 = *(_BYTE *)(v1 + 40);
  v19 = *(_QWORD *)(v1 + 48);
  v17 = *(_BYTE *)(v1 + 57);
  v18 = *(_BYTE *)(v1 + 56);
  v15 = *(_BYTE *)(v1 + 59);
  v16 = *(_BYTE *)(v1 + 58);
  v13 = *(_BYTE *)(v1 + 61);
  v14 = *(_BYTE *)(v1 + 60);
  v12 = *(_BYTE *)(v1 + 62);
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  sub_249676330();
  result = *(double *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4;
  *(_BYTE *)(a1 + 10) = v5;
  *(_BYTE *)(a1 + 11) = v6;
  *(_BYTE *)(a1 + 12) = v7;
  *(_BYTE *)(a1 + 13) = v8;
  *(_BYTE *)(a1 + 14) = v9;
  *(_BYTE *)(a1 + 15) = v10;
  *(_QWORD *)(a1 + 16) = v25;
  *(_BYTE *)(a1 + 24) = v24;
  *(_BYTE *)(a1 + 25) = v23;
  *(_QWORD *)(a1 + 32) = v22;
  *(_BYTE *)(a1 + 40) = v21;
  *(_BYTE *)(a1 + 41) = v20;
  *(_QWORD *)(a1 + 48) = v19;
  *(_BYTE *)(a1 + 56) = v18;
  *(_BYTE *)(a1 + 57) = v17;
  *(_BYTE *)(a1 + 58) = v16;
  *(_BYTE *)(a1 + 59) = v15;
  *(_BYTE *)(a1 + 60) = v14;
  *(_BYTE *)(a1 + 61) = v13;
  *(_BYTE *)(a1 + 62) = v12;
  *(_QWORD *)(a1 + 64) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  return result;
}

__n128 IntelligenceFragment.LocalContext.createRemoteContext(boundingBoxTransform:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  __int128 v12;
  __n128 result;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;

  v5 = *(_BYTE *)(v2 + 8);
  v6 = *(_BYTE *)(v2 + 9);
  v7 = *(_BYTE *)(v2 + 10);
  v8 = *(_BYTE *)(v2 + 11);
  v9 = *(_BYTE *)(v2 + 12);
  v10 = *(_BYTE *)(v2 + 13);
  v11 = *(_BYTE *)(v2 + 14);
  v28 = *(_BYTE *)(v2 + 15);
  v27 = *(_QWORD *)(v2 + 16);
  v25 = *(_BYTE *)(v2 + 25);
  v26 = *(_BYTE *)(v2 + 24);
  v24 = *(_QWORD *)(v2 + 32);
  v22 = *(_BYTE *)(v2 + 41);
  v23 = *(_BYTE *)(v2 + 40);
  v21 = *(_QWORD *)(v2 + 48);
  v19 = *(_BYTE *)(v2 + 57);
  v20 = *(_BYTE *)(v2 + 56);
  v17 = *(_BYTE *)(v2 + 59);
  v18 = *(_BYTE *)(v2 + 58);
  v15 = *(_BYTE *)(v2 + 61);
  v16 = *(_BYTE *)(v2 + 60);
  v14 = *(_BYTE *)(v2 + 62);
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  sub_249676330();
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_BYTE *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 9) = v6;
  *(_BYTE *)(a2 + 10) = v7;
  *(_BYTE *)(a2 + 11) = v8;
  *(_BYTE *)(a2 + 12) = v9;
  *(_BYTE *)(a2 + 13) = v10;
  *(_BYTE *)(a2 + 14) = v11;
  *(_BYTE *)(a2 + 15) = v28;
  *(_QWORD *)(a2 + 16) = v27;
  *(_BYTE *)(a2 + 24) = v26;
  *(_BYTE *)(a2 + 25) = v25;
  *(_QWORD *)(a2 + 32) = v24;
  *(_BYTE *)(a2 + 40) = v23;
  *(_BYTE *)(a2 + 41) = v22;
  *(_QWORD *)(a2 + 48) = v21;
  *(_BYTE *)(a2 + 56) = v20;
  *(_BYTE *)(a2 + 57) = v19;
  *(_BYTE *)(a2 + 58) = v18;
  *(_BYTE *)(a2 + 59) = v17;
  *(_BYTE *)(a2 + 60) = v16;
  *(_BYTE *)(a2 + 61) = v15;
  *(_BYTE *)(a2 + 62) = v14;
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 80) = v12;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 96) = result;
  return result;
}

uint64_t IntelligenceFragment.LocalContext.hash(into:)()
{
  return IntelligenceCollectionRequest.hash(into:)();
}

uint64_t static IntelligenceFragment.LocalContext.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v29 = *((_BYTE *)a1 + 8);
  v30 = *((_BYTE *)a1 + 9);
  v31 = *((_BYTE *)a1 + 10);
  v32 = *((_BYTE *)a1 + 11);
  v33 = *((_BYTE *)a1 + 12);
  v34 = *((_BYTE *)a1 + 13);
  v35 = *((_BYTE *)a1 + 14);
  v36 = *((_BYTE *)a1 + 15);
  v37 = a1[2];
  v38 = *((_BYTE *)a1 + 24);
  v39 = *((_BYTE *)a1 + 25);
  v40 = a1[4];
  v41 = *((_BYTE *)a1 + 40);
  v42 = *((_BYTE *)a1 + 41);
  v43 = a1[6];
  v44 = *((_BYTE *)a1 + 56);
  v45 = *((_BYTE *)a1 + 57);
  v46 = *((_BYTE *)a1 + 58);
  v47 = *((_BYTE *)a1 + 59);
  v48 = *((_BYTE *)a1 + 60);
  v49 = *((_BYTE *)a1 + 61);
  v2 = *a1;
  v50 = *((_BYTE *)a1 + 62);
  v6 = *((_BYTE *)a2 + 8);
  v7 = *((_BYTE *)a2 + 9);
  v8 = *((_BYTE *)a2 + 10);
  v9 = *((_BYTE *)a2 + 11);
  v10 = *((_BYTE *)a2 + 12);
  v11 = *((_BYTE *)a2 + 13);
  v12 = *((_BYTE *)a2 + 14);
  v13 = *((_BYTE *)a2 + 15);
  v14 = a2[2];
  v15 = *((_BYTE *)a2 + 24);
  v16 = *((_BYTE *)a2 + 25);
  v17 = a2[4];
  v18 = *((_BYTE *)a2 + 40);
  v19 = *((_BYTE *)a2 + 41);
  v20 = a2[6];
  v21 = *((_BYTE *)a2 + 56);
  v22 = *((_BYTE *)a2 + 57);
  v23 = *((_BYTE *)a2 + 58);
  v24 = *((_BYTE *)a2 + 59);
  v25 = *((_BYTE *)a2 + 60);
  v26 = *((_BYTE *)a2 + 61);
  v3 = *a2;
  v27 = *((_BYTE *)a2 + 62);
  v28 = v2;
  v5 = v3;
  return _s21UIIntelligenceSupport29IntelligenceCollectionRequestV2eeoiySbAC_ACtFZ_0((unsigned int *)&v28, (unsigned int *)&v5) & 1;
}

uint64_t sub_2496466D0()
{
  return 0x74736575716572;
}

uint64_t sub_2496466E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_249676960();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24964677C()
{
  sub_249649010();
  return sub_249676A20();
}

uint64_t sub_2496467A4()
{
  sub_249649010();
  return sub_249676A2C();
}

uint64_t IntelligenceFragment.LocalContext.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  char v8;
  char v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B308);
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *((_BYTE *)v2 + 8);
  v8 = *((_BYTE *)v2 + 9);
  v9 = *((_BYTE *)v2 + 10);
  v10 = *((unsigned __int8 *)v2 + 11);
  v35 = *((unsigned __int8 *)v2 + 12);
  v36 = v10;
  v11 = *((unsigned __int8 *)v2 + 13);
  v33 = *((unsigned __int8 *)v2 + 14);
  v34 = v11;
  v32 = *((unsigned __int8 *)v2 + 15);
  v31 = v2[2];
  v12 = *((unsigned __int8 *)v2 + 24);
  v29 = *((unsigned __int8 *)v2 + 25);
  v30 = v12;
  v28 = v2[4];
  v13 = *((unsigned __int8 *)v2 + 40);
  v26 = *((unsigned __int8 *)v2 + 41);
  v27 = v13;
  v25 = v2[6];
  v14 = *((unsigned __int8 *)v2 + 56);
  v23 = *((unsigned __int8 *)v2 + 57);
  v24 = v14;
  v15 = *((unsigned __int8 *)v2 + 58);
  v21 = *((unsigned __int8 *)v2 + 59);
  v22 = v15;
  v16 = *((unsigned __int8 *)v2 + 60);
  v19 = *((unsigned __int8 *)v2 + 61);
  v20 = v16;
  HIDWORD(v18) = *((unsigned __int8 *)v2 + 62);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249649010();
  sub_249676A14();
  v38 = *v2;
  v39 = v7;
  v40 = v8;
  v41 = v9;
  v42 = v36;
  v43 = v35;
  v44 = v34;
  v45 = v33;
  v46 = v32;
  v47 = v31;
  v48 = v30;
  v49 = v29;
  v50 = v28;
  v51 = v27;
  v52 = v26;
  v53 = v25;
  v54 = v24;
  v55 = v23;
  v56 = v22;
  v57 = v21;
  v58 = v20;
  v59 = v19;
  v60 = BYTE4(v18);
  sub_249649054();
  sub_24967693C();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v6, v4);
}

uint64_t IntelligenceFragment.LocalContext.hashValue.getter()
{
  sub_2496769A8();
  IntelligenceCollectionRequest.hash(into:)();
  return sub_2496769E4();
}

uint64_t IntelligenceFragment.LocalContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25786B320);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249649010();
  sub_2496769FC();
  if (!v2)
  {
    sub_249649098();
    sub_2496768B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v33;
    v10 = v34;
    v11 = v35;
    v12 = v36;
    v13 = v37;
    v14 = v38;
    v15 = v39;
    v16 = v40;
    v17 = v41;
    v18 = v42;
    v19 = v43;
    v20 = v44;
    v21 = v45;
    v22 = v46;
    v23 = v47;
    v24 = v48;
    v25 = v49;
    v26 = v50;
    v27 = v51;
    v28 = v52;
    v29 = v53;
    v30 = v54;
    *(_QWORD *)a2 = v32;
    *(_BYTE *)(a2 + 8) = v9;
    *(_BYTE *)(a2 + 9) = v10;
    *(_BYTE *)(a2 + 10) = v11;
    *(_BYTE *)(a2 + 11) = v12;
    *(_BYTE *)(a2 + 12) = v13;
    *(_BYTE *)(a2 + 13) = v14;
    *(_BYTE *)(a2 + 14) = v15;
    *(_BYTE *)(a2 + 15) = v16;
    *(_QWORD *)(a2 + 16) = v17;
    *(_BYTE *)(a2 + 24) = v18;
    *(_BYTE *)(a2 + 25) = v19;
    *(_QWORD *)(a2 + 32) = v20;
    *(_BYTE *)(a2 + 40) = v21;
    *(_BYTE *)(a2 + 41) = v22;
    *(_QWORD *)(a2 + 48) = v23;
    *(_BYTE *)(a2 + 56) = v24;
    *(_BYTE *)(a2 + 57) = v25;
    *(_BYTE *)(a2 + 58) = v26;
    *(_BYTE *)(a2 + 59) = v27;
    *(_BYTE *)(a2 + 60) = v28;
    *(_BYTE *)(a2 + 61) = v29;
    *(_BYTE *)(a2 + 62) = v30;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

double sub_249646D40@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  double result;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  v4 = *(_BYTE *)(v1 + 10);
  v5 = *(_BYTE *)(v1 + 11);
  v6 = *(_BYTE *)(v1 + 12);
  v7 = *(_BYTE *)(v1 + 13);
  v8 = *(_BYTE *)(v1 + 14);
  v9 = *(_BYTE *)(v1 + 15);
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_BYTE *)(v1 + 24);
  v12 = *(_BYTE *)(v1 + 25);
  v13 = *(_QWORD *)(v1 + 32);
  v14 = *(_BYTE *)(v1 + 40);
  v15 = *(_BYTE *)(v1 + 41);
  v16 = *(_QWORD *)(v1 + 48);
  v17 = *(_BYTE *)(v1 + 56);
  v18 = *(_BYTE *)(v1 + 57);
  v19 = *(_BYTE *)(v1 + 58);
  v20 = *(_BYTE *)(v1 + 59);
  v21 = *(_BYTE *)(v1 + 60);
  v22 = *(_BYTE *)(v1 + 61);
  v23 = *(_BYTE *)(v1 + 62);
  result = *(double *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  *(_BYTE *)(a1 + 10) = v4;
  *(_BYTE *)(a1 + 11) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  *(_BYTE *)(a1 + 13) = v7;
  *(_BYTE *)(a1 + 14) = v8;
  *(_BYTE *)(a1 + 15) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 25) = v12;
  *(_QWORD *)(a1 + 32) = v13;
  *(_BYTE *)(a1 + 40) = v14;
  *(_BYTE *)(a1 + 41) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  *(_BYTE *)(a1 + 56) = v17;
  *(_BYTE *)(a1 + 57) = v18;
  *(_BYTE *)(a1 + 58) = v19;
  *(_BYTE *)(a1 + 59) = v20;
  *(_BYTE *)(a1 + 60) = v21;
  *(_BYTE *)(a1 + 61) = v22;
  *(_BYTE *)(a1 + 62) = v23;
  return result;
}

double sub_249646E14@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  double result;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  v3 = *(_BYTE *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 9);
  v5 = *(_BYTE *)(v1 + 10);
  v6 = *(_BYTE *)(v1 + 11);
  v7 = *(_BYTE *)(v1 + 12);
  v8 = *(_BYTE *)(v1 + 13);
  v9 = *(_BYTE *)(v1 + 14);
  v10 = *(_BYTE *)(v1 + 15);
  v25 = *(_QWORD *)(v1 + 16);
  v23 = *(_BYTE *)(v1 + 25);
  v24 = *(_BYTE *)(v1 + 24);
  v22 = *(_QWORD *)(v1 + 32);
  v20 = *(_BYTE *)(v1 + 41);
  v21 = *(_BYTE *)(v1 + 40);
  v19 = *(_QWORD *)(v1 + 48);
  v17 = *(_BYTE *)(v1 + 57);
  v18 = *(_BYTE *)(v1 + 56);
  v15 = *(_BYTE *)(v1 + 59);
  v16 = *(_BYTE *)(v1 + 58);
  v13 = *(_BYTE *)(v1 + 61);
  v14 = *(_BYTE *)(v1 + 60);
  v12 = *(_BYTE *)(v1 + 62);
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  sub_249676330();
  result = *(double *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4;
  *(_BYTE *)(a1 + 10) = v5;
  *(_BYTE *)(a1 + 11) = v6;
  *(_BYTE *)(a1 + 12) = v7;
  *(_BYTE *)(a1 + 13) = v8;
  *(_BYTE *)(a1 + 14) = v9;
  *(_BYTE *)(a1 + 15) = v10;
  *(_QWORD *)(a1 + 16) = v25;
  *(_BYTE *)(a1 + 24) = v24;
  *(_BYTE *)(a1 + 25) = v23;
  *(_QWORD *)(a1 + 32) = v22;
  *(_BYTE *)(a1 + 40) = v21;
  *(_BYTE *)(a1 + 41) = v20;
  *(_QWORD *)(a1 + 48) = v19;
  *(_BYTE *)(a1 + 56) = v18;
  *(_BYTE *)(a1 + 57) = v17;
  *(_BYTE *)(a1 + 58) = v16;
  *(_BYTE *)(a1 + 59) = v15;
  *(_BYTE *)(a1 + 60) = v14;
  *(_BYTE *)(a1 + 61) = v13;
  *(_BYTE *)(a1 + 62) = v12;
  *(_QWORD *)(a1 + 64) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  return result;
}

__n128 sub_249646F90@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  __int128 v12;
  __n128 result;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;

  v5 = *(_BYTE *)(v2 + 8);
  v6 = *(_BYTE *)(v2 + 9);
  v7 = *(_BYTE *)(v2 + 10);
  v8 = *(_BYTE *)(v2 + 11);
  v9 = *(_BYTE *)(v2 + 12);
  v10 = *(_BYTE *)(v2 + 13);
  v11 = *(_BYTE *)(v2 + 14);
  v28 = *(_BYTE *)(v2 + 15);
  v27 = *(_QWORD *)(v2 + 16);
  v25 = *(_BYTE *)(v2 + 25);
  v26 = *(_BYTE *)(v2 + 24);
  v24 = *(_QWORD *)(v2 + 32);
  v22 = *(_BYTE *)(v2 + 41);
  v23 = *(_BYTE *)(v2 + 40);
  v21 = *(_QWORD *)(v2 + 48);
  v19 = *(_BYTE *)(v2 + 57);
  v20 = *(_BYTE *)(v2 + 56);
  v17 = *(_BYTE *)(v2 + 59);
  v18 = *(_BYTE *)(v2 + 58);
  v15 = *(_BYTE *)(v2 + 61);
  v16 = *(_BYTE *)(v2 + 60);
  v14 = *(_BYTE *)(v2 + 62);
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  sub_249676330();
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_BYTE *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 9) = v6;
  *(_BYTE *)(a2 + 10) = v7;
  *(_BYTE *)(a2 + 11) = v8;
  *(_BYTE *)(a2 + 12) = v9;
  *(_BYTE *)(a2 + 13) = v10;
  *(_BYTE *)(a2 + 14) = v11;
  *(_BYTE *)(a2 + 15) = v28;
  *(_QWORD *)(a2 + 16) = v27;
  *(_BYTE *)(a2 + 24) = v26;
  *(_BYTE *)(a2 + 25) = v25;
  *(_QWORD *)(a2 + 32) = v24;
  *(_BYTE *)(a2 + 40) = v23;
  *(_BYTE *)(a2 + 41) = v22;
  *(_QWORD *)(a2 + 48) = v21;
  *(_BYTE *)(a2 + 56) = v20;
  *(_BYTE *)(a2 + 57) = v19;
  *(_BYTE *)(a2 + 58) = v18;
  *(_BYTE *)(a2 + 59) = v17;
  *(_BYTE *)(a2 + 60) = v16;
  *(_BYTE *)(a2 + 61) = v15;
  *(_BYTE *)(a2 + 62) = v14;
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 80) = v12;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 96) = result;
  return result;
}

uint64_t sub_249647118()
{
  sub_2496769A8();
  IntelligenceCollectionRequest.hash(into:)();
  return sub_2496769E4();
}

uint64_t sub_249647284()
{
  return IntelligenceCollectionRequest.hash(into:)();
}

uint64_t sub_249647374()
{
  sub_2496769A8();
  IntelligenceCollectionRequest.hash(into:)();
  return sub_2496769E4();
}

uint64_t sub_2496474DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceFragment.LocalContext.init(from:)(a1, a2);
}

uint64_t sub_2496474F0(_QWORD *a1)
{
  return IntelligenceFragment.LocalContext.encode(to:)(a1);
}

uint64_t sub_249647504(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v29 = *((_BYTE *)a1 + 8);
  v30 = *((_BYTE *)a1 + 9);
  v31 = *((_BYTE *)a1 + 10);
  v32 = *((_BYTE *)a1 + 11);
  v33 = *((_BYTE *)a1 + 12);
  v34 = *((_BYTE *)a1 + 13);
  v35 = *((_BYTE *)a1 + 14);
  v36 = *((_BYTE *)a1 + 15);
  v37 = a1[2];
  v38 = *((_BYTE *)a1 + 24);
  v39 = *((_BYTE *)a1 + 25);
  v40 = a1[4];
  v41 = *((_BYTE *)a1 + 40);
  v42 = *((_BYTE *)a1 + 41);
  v43 = a1[6];
  v44 = *((_BYTE *)a1 + 56);
  v45 = *((_BYTE *)a1 + 57);
  v46 = *((_BYTE *)a1 + 58);
  v47 = *((_BYTE *)a1 + 59);
  v48 = *((_BYTE *)a1 + 60);
  v49 = *((_BYTE *)a1 + 61);
  v2 = *a1;
  v50 = *((_BYTE *)a1 + 62);
  v6 = *((_BYTE *)a2 + 8);
  v7 = *((_BYTE *)a2 + 9);
  v8 = *((_BYTE *)a2 + 10);
  v9 = *((_BYTE *)a2 + 11);
  v10 = *((_BYTE *)a2 + 12);
  v11 = *((_BYTE *)a2 + 13);
  v12 = *((_BYTE *)a2 + 14);
  v13 = *((_BYTE *)a2 + 15);
  v14 = a2[2];
  v15 = *((_BYTE *)a2 + 24);
  v16 = *((_BYTE *)a2 + 25);
  v17 = a2[4];
  v18 = *((_BYTE *)a2 + 40);
  v19 = *((_BYTE *)a2 + 41);
  v20 = a2[6];
  v21 = *((_BYTE *)a2 + 56);
  v22 = *((_BYTE *)a2 + 57);
  v23 = *((_BYTE *)a2 + 58);
  v24 = *((_BYTE *)a2 + 59);
  v25 = *((_BYTE *)a2 + 60);
  v26 = *((_BYTE *)a2 + 61);
  v3 = *a2;
  v27 = *((_BYTE *)a2 + 62);
  v28 = v2;
  v5 = v3;
  return _s21UIIntelligenceSupport29IntelligenceCollectionRequestV2eeoiySbAC_ACtFZ_0((unsigned int *)&v28, (unsigned int *)&v5) & 1;
}

double IntelligenceFragment.RemoteContext.request.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  double result;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  v4 = *(_BYTE *)(v1 + 10);
  v5 = *(_BYTE *)(v1 + 11);
  v6 = *(_BYTE *)(v1 + 12);
  v7 = *(_BYTE *)(v1 + 13);
  v8 = *(_BYTE *)(v1 + 14);
  v9 = *(_BYTE *)(v1 + 15);
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_BYTE *)(v1 + 24);
  v12 = *(_BYTE *)(v1 + 25);
  v13 = *(_QWORD *)(v1 + 32);
  v14 = *(_BYTE *)(v1 + 40);
  v15 = *(_BYTE *)(v1 + 41);
  v16 = *(_QWORD *)(v1 + 48);
  v17 = *(_BYTE *)(v1 + 56);
  v18 = *(_BYTE *)(v1 + 57);
  v19 = *(_BYTE *)(v1 + 58);
  v20 = *(_BYTE *)(v1 + 59);
  v21 = *(_BYTE *)(v1 + 60);
  v22 = *(_BYTE *)(v1 + 61);
  v23 = *(_BYTE *)(v1 + 62);
  result = *(double *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  *(_BYTE *)(a1 + 10) = v4;
  *(_BYTE *)(a1 + 11) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  *(_BYTE *)(a1 + 13) = v7;
  *(_BYTE *)(a1 + 14) = v8;
  *(_BYTE *)(a1 + 15) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 25) = v12;
  *(_QWORD *)(a1 + 32) = v13;
  *(_BYTE *)(a1 + 40) = v14;
  *(_BYTE *)(a1 + 41) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  *(_BYTE *)(a1 + 56) = v17;
  *(_BYTE *)(a1 + 57) = v18;
  *(_BYTE *)(a1 + 58) = v19;
  *(_BYTE *)(a1 + 59) = v20;
  *(_BYTE *)(a1 + 60) = v21;
  *(_BYTE *)(a1 + 61) = v22;
  *(_BYTE *)(a1 + 62) = v23;
  return result;
}

double IntelligenceFragment.RemoteContext.request.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  double result;

  v2 = *(_BYTE *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 9);
  v4 = *(_BYTE *)(a1 + 10);
  v5 = *(_BYTE *)(a1 + 11);
  v6 = *(_BYTE *)(a1 + 12);
  v7 = *(_BYTE *)(a1 + 13);
  v8 = *(_BYTE *)(a1 + 14);
  v9 = *(_BYTE *)(a1 + 15);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 25);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 40);
  v15 = *(_BYTE *)(a1 + 41);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_BYTE *)(a1 + 56);
  v18 = *(_BYTE *)(a1 + 57);
  v19 = *(_BYTE *)(a1 + 58);
  v20 = *(_BYTE *)(a1 + 59);
  v21 = *(_BYTE *)(a1 + 60);
  v22 = *(_BYTE *)(a1 + 61);
  v23 = *(_BYTE *)(a1 + 62);
  result = *(double *)a1;
  *(_QWORD *)v1 = *(_QWORD *)a1;
  *(_BYTE *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 9) = v3;
  *(_BYTE *)(v1 + 10) = v4;
  *(_BYTE *)(v1 + 11) = v5;
  *(_BYTE *)(v1 + 12) = v6;
  *(_BYTE *)(v1 + 13) = v7;
  *(_BYTE *)(v1 + 14) = v8;
  *(_BYTE *)(v1 + 15) = v9;
  *(_QWORD *)(v1 + 16) = v10;
  *(_BYTE *)(v1 + 24) = v11;
  *(_BYTE *)(v1 + 25) = v12;
  *(_QWORD *)(v1 + 32) = v13;
  *(_BYTE *)(v1 + 40) = v14;
  *(_BYTE *)(v1 + 41) = v15;
  *(_QWORD *)(v1 + 48) = v16;
  *(_BYTE *)(v1 + 56) = v17;
  *(_BYTE *)(v1 + 57) = v18;
  *(_BYTE *)(v1 + 58) = v19;
  *(_BYTE *)(v1 + 59) = v20;
  *(_BYTE *)(v1 + 60) = v21;
  *(_BYTE *)(v1 + 61) = v22;
  *(_BYTE *)(v1 + 62) = v23;
  return result;
}

uint64_t (*IntelligenceFragment.RemoteContext.request.modify())()
{
  return nullsub_1;
}

__n128 IntelligenceFragment.RemoteContext.boundingBoxTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 96);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 IntelligenceFragment.RemoteContext.boundingBoxTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 80) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 96) = result;
  return result;
}

uint64_t (*IntelligenceFragment.RemoteContext.boundingBoxTransform.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceFragment.RemoteContext.remoteID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  return sub_249634958(v1 + *(int *)(v3 + 24), a1, type metadata accessor for IntelligenceFragment.RemoteID);
}

uint64_t IntelligenceFragment.RemoteContext.remoteID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  return sub_2496490DC(a1, v1 + *(int *)(v3 + 24), type metadata accessor for IntelligenceFragment.RemoteID);
}

uint64_t (*IntelligenceFragment.RemoteContext.remoteID.modify())()
{
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  return nullsub_1;
}

double IntelligenceFragment.RemoteContext.createRemoteContext()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  double result;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  v3 = *(_BYTE *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 9);
  v5 = *(_BYTE *)(v1 + 10);
  v6 = *(_BYTE *)(v1 + 11);
  v7 = *(_BYTE *)(v1 + 12);
  v8 = *(_BYTE *)(v1 + 13);
  v9 = *(_BYTE *)(v1 + 14);
  v10 = *(_BYTE *)(v1 + 15);
  v25 = *(_QWORD *)(v1 + 16);
  v23 = *(_BYTE *)(v1 + 25);
  v24 = *(_BYTE *)(v1 + 24);
  v22 = *(_QWORD *)(v1 + 32);
  v20 = *(_BYTE *)(v1 + 41);
  v21 = *(_BYTE *)(v1 + 40);
  v19 = *(_QWORD *)(v1 + 48);
  v17 = *(_BYTE *)(v1 + 57);
  v18 = *(_BYTE *)(v1 + 56);
  v15 = *(_BYTE *)(v1 + 59);
  v16 = *(_BYTE *)(v1 + 58);
  v13 = *(_BYTE *)(v1 + 61);
  v14 = *(_BYTE *)(v1 + 60);
  v12 = *(_BYTE *)(v1 + 62);
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  sub_249676330();
  result = *(double *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4;
  *(_BYTE *)(a1 + 10) = v5;
  *(_BYTE *)(a1 + 11) = v6;
  *(_BYTE *)(a1 + 12) = v7;
  *(_BYTE *)(a1 + 13) = v8;
  *(_BYTE *)(a1 + 14) = v9;
  *(_BYTE *)(a1 + 15) = v10;
  *(_QWORD *)(a1 + 16) = v25;
  *(_BYTE *)(a1 + 24) = v24;
  *(_BYTE *)(a1 + 25) = v23;
  *(_QWORD *)(a1 + 32) = v22;
  *(_BYTE *)(a1 + 40) = v21;
  *(_BYTE *)(a1 + 41) = v20;
  *(_QWORD *)(a1 + 48) = v19;
  *(_BYTE *)(a1 + 56) = v18;
  *(_BYTE *)(a1 + 57) = v17;
  *(_BYTE *)(a1 + 58) = v16;
  *(_BYTE *)(a1 + 59) = v15;
  *(_BYTE *)(a1 + 60) = v14;
  *(_BYTE *)(a1 + 61) = v13;
  *(_BYTE *)(a1 + 62) = v12;
  *(_QWORD *)(a1 + 64) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  return result;
}

__n128 IntelligenceFragment.RemoteContext.createRemoteContext(boundingBoxTransform:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  __int128 v12;
  __n128 result;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;

  v5 = *(_BYTE *)(v2 + 8);
  v6 = *(_BYTE *)(v2 + 9);
  v7 = *(_BYTE *)(v2 + 10);
  v8 = *(_BYTE *)(v2 + 11);
  v9 = *(_BYTE *)(v2 + 12);
  v10 = *(_BYTE *)(v2 + 13);
  v11 = *(_BYTE *)(v2 + 14);
  v28 = *(_BYTE *)(v2 + 15);
  v27 = *(_QWORD *)(v2 + 16);
  v25 = *(_BYTE *)(v2 + 25);
  v26 = *(_BYTE *)(v2 + 24);
  v24 = *(_QWORD *)(v2 + 32);
  v22 = *(_BYTE *)(v2 + 41);
  v23 = *(_BYTE *)(v2 + 40);
  v21 = *(_QWORD *)(v2 + 48);
  v19 = *(_BYTE *)(v2 + 57);
  v20 = *(_BYTE *)(v2 + 56);
  v17 = *(_BYTE *)(v2 + 59);
  v18 = *(_BYTE *)(v2 + 58);
  v15 = *(_BYTE *)(v2 + 61);
  v16 = *(_BYTE *)(v2 + 60);
  v14 = *(_BYTE *)(v2 + 62);
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  sub_249676330();
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_BYTE *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 9) = v6;
  *(_BYTE *)(a2 + 10) = v7;
  *(_BYTE *)(a2 + 11) = v8;
  *(_BYTE *)(a2 + 12) = v9;
  *(_BYTE *)(a2 + 13) = v10;
  *(_BYTE *)(a2 + 14) = v11;
  *(_BYTE *)(a2 + 15) = v28;
  *(_QWORD *)(a2 + 16) = v27;
  *(_BYTE *)(a2 + 24) = v26;
  *(_BYTE *)(a2 + 25) = v25;
  *(_QWORD *)(a2 + 32) = v24;
  *(_BYTE *)(a2 + 40) = v23;
  *(_BYTE *)(a2 + 41) = v22;
  *(_QWORD *)(a2 + 48) = v21;
  *(_BYTE *)(a2 + 56) = v20;
  *(_BYTE *)(a2 + 57) = v19;
  *(_BYTE *)(a2 + 58) = v18;
  *(_BYTE *)(a2 + 59) = v17;
  *(_BYTE *)(a2 + 60) = v16;
  *(_BYTE *)(a2 + 61) = v15;
  *(_BYTE *)(a2 + 62) = v14;
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 80) = v12;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 96) = result;
  return result;
}

uint64_t IntelligenceFragment.RemoteContext.hash(into:)()
{
  IntelligenceCollectionRequest.hash(into:)();
  sub_24967666C();
  sub_2496769C0();
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  sub_24967633C();
  sub_24963EC48(&qword_25786B2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_249676498();
}

uint64_t sub_249647DB0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000014;
  if (*v0 != 1)
    v1 = 0x444965746F6D6572;
  if (*v0)
    return v1;
  else
    return 0x74736575716572;
}

uint64_t sub_249647E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24964A0C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_249647E34(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_249647E40()
{
  sub_249649120();
  return sub_249676A20();
}

uint64_t sub_249647E68()
{
  sub_249649120();
  return sub_249676A2C();
}

uint64_t IntelligenceFragment.RemoteContext.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  __int128 v31;
  uint64_t v33;
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v3 = v2;
  v4 = v1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B330);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249649120();
  sub_249676A14();
  v10 = *(_BYTE *)(v4 + 8);
  v11 = *(_BYTE *)(v4 + 9);
  v12 = *(_BYTE *)(v4 + 10);
  v13 = *(_BYTE *)(v4 + 11);
  v14 = *(_BYTE *)(v4 + 12);
  v15 = *(_BYTE *)(v4 + 13);
  v16 = *(_BYTE *)(v4 + 14);
  v17 = *(_BYTE *)(v4 + 15);
  v18 = *(_QWORD *)(v4 + 16);
  v19 = *(_BYTE *)(v4 + 24);
  v20 = *(_BYTE *)(v4 + 25);
  v21 = *(_QWORD *)(v4 + 32);
  v22 = *(_BYTE *)(v4 + 40);
  v23 = *(_BYTE *)(v4 + 41);
  v24 = *(_QWORD *)(v4 + 48);
  v25 = *(_BYTE *)(v4 + 56);
  v26 = *(_BYTE *)(v4 + 57);
  v27 = *(_BYTE *)(v4 + 58);
  v28 = *(_BYTE *)(v4 + 59);
  LOBYTE(a1) = *(_BYTE *)(v4 + 60);
  v29 = *(_BYTE *)(v4 + 61);
  v30 = *(_BYTE *)(v4 + 62);
  *(_QWORD *)&v35 = *(_QWORD *)v4;
  BYTE8(v35) = v10;
  BYTE9(v35) = v11;
  BYTE10(v35) = v12;
  BYTE11(v35) = v13;
  BYTE12(v35) = v14;
  BYTE13(v35) = v15;
  BYTE14(v35) = v16;
  HIBYTE(v35) = v17;
  *(_QWORD *)&v36 = v18;
  BYTE8(v36) = v19;
  BYTE9(v36) = v20;
  *(_QWORD *)&v37 = v21;
  BYTE8(v37) = v22;
  BYTE9(v37) = v23;
  v38 = v24;
  v39 = v25;
  v40 = v26;
  v41 = v27;
  v42 = v28;
  v43 = (char)a1;
  v44 = v29;
  v45 = v30;
  v34 = 0;
  sub_249649054();
  sub_24967693C();
  if (!v3)
  {
    v31 = *(_OWORD *)(v4 + 80);
    v35 = *(_OWORD *)(v4 + 64);
    v36 = v31;
    v37 = *(_OWORD *)(v4 + 96);
    v34 = 1;
    type metadata accessor for CGAffineTransform(0);
    sub_24963EC48((unint64_t *)&unk_25786B340, (uint64_t (*)(uint64_t))type metadata accessor for CGAffineTransform, MEMORY[0x24BDBD810]);
    sub_24967693C();
    type metadata accessor for IntelligenceFragment.RemoteContext(0);
    LOBYTE(v35) = 2;
    type metadata accessor for IntelligenceFragment.RemoteID(0);
    sub_24963EC48(&qword_25786AF88, type metadata accessor for IntelligenceFragment.RemoteID, (uint64_t)&protocol conformance descriptor for IntelligenceFragment.RemoteID);
    sub_24967693C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t IntelligenceFragment.RemoteContext.hashValue.getter()
{
  sub_2496769A8();
  IntelligenceCollectionRequest.hash(into:)();
  sub_24967666C();
  sub_2496769C0();
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  sub_24967633C();
  sub_24963EC48(&qword_25786B2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249676498();
  return sub_2496769E4();
}

uint64_t IntelligenceFragment.RemoteContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;

  v41 = a2;
  v42 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  MEMORY[0x24BDAC7A8](v42);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25786B350);
  v5 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249649120();
  v43 = v7;
  v11 = v45;
  sub_2496769FC();
  if (!v11)
  {
    v45 = v5;
    v40 = v4;
    v57 = 0;
    sub_249649098();
    v12 = v43;
    v13 = v44;
    sub_2496768B8();
    v14 = BYTE8(v46);
    v15 = BYTE9(v46);
    v16 = BYTE10(v46);
    v17 = BYTE11(v46);
    v18 = BYTE12(v46);
    v19 = BYTE13(v46);
    v20 = BYTE14(v46);
    v21 = HIBYTE(v46);
    v22 = v47;
    v23 = BYTE8(v47);
    v24 = BYTE9(v47);
    v25 = v48;
    v26 = BYTE8(v48);
    v27 = BYTE9(v48);
    v28 = v49;
    v29 = v50;
    v30 = v51;
    v31 = v52;
    v32 = v53;
    v33 = v54;
    v34 = v55;
    v35 = v56;
    *(_QWORD *)v10 = v46;
    v10[8] = v14;
    v10[9] = v15;
    v10[10] = v16;
    v10[11] = v17;
    v10[12] = v18;
    v10[13] = v19;
    v10[14] = v20;
    v10[15] = v21;
    *((_QWORD *)v10 + 2) = v22;
    v10[24] = v23;
    v10[25] = v24;
    *((_QWORD *)v10 + 4) = v25;
    v10[40] = v26;
    v10[41] = v27;
    *((_QWORD *)v10 + 6) = v28;
    v10[56] = v29;
    v10[57] = v30;
    v10[58] = v31;
    v10[59] = v32;
    v10[60] = v33;
    v10[61] = v34;
    v10[62] = v35;
    type metadata accessor for CGAffineTransform(0);
    v57 = 1;
    sub_24963EC48(&qword_25786A918, (uint64_t (*)(uint64_t))type metadata accessor for CGAffineTransform, MEMORY[0x24BDBD818]);
    sub_2496768B8();
    v37 = v47;
    *((_OWORD *)v10 + 4) = v46;
    *((_OWORD *)v10 + 5) = v37;
    *((_OWORD *)v10 + 6) = v48;
    LOBYTE(v46) = 2;
    sub_24963EC48(&qword_25786A850, type metadata accessor for IntelligenceFragment.RemoteID, (uint64_t)&protocol conformance descriptor for IntelligenceFragment.RemoteID);
    v38 = (uint64_t)v40;
    sub_2496768B8();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v13);
    v39 = v41;
    sub_24963E94C(v38, (uint64_t)&v10[*(int *)(v8 + 24)], type metadata accessor for IntelligenceFragment.RemoteID);
    sub_24963E94C((uint64_t)v10, v39, type metadata accessor for IntelligenceFragment.RemoteContext);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

double sub_249648614@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  double result;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;

  v25 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  v4 = *(_BYTE *)(v1 + 10);
  v5 = *(_BYTE *)(v1 + 11);
  v6 = *(_BYTE *)(v1 + 12);
  v7 = *(_BYTE *)(v1 + 13);
  v8 = *(_BYTE *)(v1 + 14);
  v9 = *(_BYTE *)(v1 + 15);
  v24 = *(_QWORD *)(v1 + 16);
  v22 = *(_BYTE *)(v1 + 25);
  v23 = *(_BYTE *)(v1 + 24);
  v21 = *(_QWORD *)(v1 + 32);
  v19 = *(_BYTE *)(v1 + 41);
  v20 = *(_BYTE *)(v1 + 40);
  v18 = *(_QWORD *)(v1 + 48);
  v16 = *(_BYTE *)(v1 + 57);
  v17 = *(_BYTE *)(v1 + 56);
  v14 = *(_BYTE *)(v1 + 59);
  v15 = *(_BYTE *)(v1 + 58);
  v12 = *(_BYTE *)(v1 + 61);
  v13 = *(_BYTE *)(v1 + 60);
  v10 = *(_BYTE *)(v1 + 62);
  sub_249676330();
  result = *(double *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v25;
  *(_BYTE *)(a1 + 9) = v3;
  *(_BYTE *)(a1 + 10) = v4;
  *(_BYTE *)(a1 + 11) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  *(_BYTE *)(a1 + 13) = v7;
  *(_BYTE *)(a1 + 14) = v8;
  *(_BYTE *)(a1 + 15) = v9;
  *(_QWORD *)(a1 + 16) = v24;
  *(_BYTE *)(a1 + 24) = v23;
  *(_BYTE *)(a1 + 25) = v22;
  *(_QWORD *)(a1 + 32) = v21;
  *(_BYTE *)(a1 + 40) = v20;
  *(_BYTE *)(a1 + 41) = v19;
  *(_QWORD *)(a1 + 48) = v18;
  *(_BYTE *)(a1 + 56) = v17;
  *(_BYTE *)(a1 + 57) = v16;
  *(_BYTE *)(a1 + 58) = v15;
  *(_BYTE *)(a1 + 59) = v14;
  *(_BYTE *)(a1 + 60) = v13;
  *(_BYTE *)(a1 + 61) = v12;
  *(_BYTE *)(a1 + 62) = v10;
  *(_QWORD *)(a1 + 64) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  return result;
}

__n128 sub_249648788@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  __int128 v12;
  __n128 result;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;

  v5 = *(_BYTE *)(v2 + 9);
  v6 = *(_BYTE *)(v2 + 10);
  v7 = *(_BYTE *)(v2 + 11);
  v8 = *(_BYTE *)(v2 + 12);
  v9 = *(_BYTE *)(v2 + 13);
  v10 = *(_BYTE *)(v2 + 14);
  v27 = *(_BYTE *)(v2 + 15);
  v28 = *(_BYTE *)(v2 + 8);
  v26 = *(_QWORD *)(v2 + 16);
  v24 = *(_BYTE *)(v2 + 25);
  v25 = *(_BYTE *)(v2 + 24);
  v23 = *(_QWORD *)(v2 + 32);
  v21 = *(_BYTE *)(v2 + 41);
  v22 = *(_BYTE *)(v2 + 40);
  v20 = *(_QWORD *)(v2 + 48);
  v18 = *(_BYTE *)(v2 + 57);
  v19 = *(_BYTE *)(v2 + 56);
  v16 = *(_BYTE *)(v2 + 59);
  v17 = *(_BYTE *)(v2 + 58);
  v14 = *(_BYTE *)(v2 + 61);
  v15 = *(_BYTE *)(v2 + 60);
  v11 = *(_BYTE *)(v2 + 62);
  sub_249676330();
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_BYTE *)(a2 + 8) = v28;
  *(_BYTE *)(a2 + 9) = v5;
  *(_BYTE *)(a2 + 10) = v6;
  *(_BYTE *)(a2 + 11) = v7;
  *(_BYTE *)(a2 + 12) = v8;
  *(_BYTE *)(a2 + 13) = v9;
  *(_BYTE *)(a2 + 14) = v10;
  *(_BYTE *)(a2 + 15) = v27;
  *(_QWORD *)(a2 + 16) = v26;
  *(_BYTE *)(a2 + 24) = v25;
  *(_BYTE *)(a2 + 25) = v24;
  *(_QWORD *)(a2 + 32) = v23;
  *(_BYTE *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 41) = v21;
  *(_QWORD *)(a2 + 48) = v20;
  *(_BYTE *)(a2 + 56) = v19;
  *(_BYTE *)(a2 + 57) = v18;
  *(_BYTE *)(a2 + 58) = v17;
  *(_BYTE *)(a2 + 59) = v16;
  *(_BYTE *)(a2 + 60) = v15;
  *(_BYTE *)(a2 + 61) = v14;
  *(_BYTE *)(a2 + 62) = v11;
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 80) = v12;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 96) = result;
  return result;
}

uint64_t sub_249648908()
{
  IntelligenceCollectionRequest.hash(into:)();
  sub_24967666C();
  sub_2496769C0();
  sub_24967633C();
  sub_24963EC48(&qword_25786B2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_249676498();
}

uint64_t sub_249648A8C()
{
  sub_2496769A8();
  IntelligenceCollectionRequest.hash(into:)();
  sub_24967666C();
  sub_2496769C0();
  sub_24967633C();
  sub_24963EC48(&qword_25786B2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_249676498();
  return sub_2496769E4();
}

uint64_t sub_249648C20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceFragment.RemoteContext.init(from:)(a1, a2);
}

uint64_t sub_249648C34(_QWORD *a1)
{
  return IntelligenceFragment.RemoteContext.encode(to:)(a1);
}

uint64_t _s21UIIntelligenceSupport20IntelligenceFragmentV13RemoteContextV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  __int128 v48;
  __int128 v49;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;

  v4 = *(_BYTE *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 9);
  v6 = *(_BYTE *)(a1 + 10);
  v7 = *(_BYTE *)(a1 + 11);
  v8 = *(_BYTE *)(a1 + 12);
  v9 = *(_BYTE *)(a1 + 13);
  v10 = *(_BYTE *)(a1 + 14);
  v11 = *(_BYTE *)(a1 + 15);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  v14 = *(_BYTE *)(a1 + 25);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_BYTE *)(a1 + 40);
  v17 = *(_BYTE *)(a1 + 41);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_BYTE *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 57);
  v21 = *(_BYTE *)(a1 + 58);
  v22 = *(_BYTE *)(a1 + 59);
  v23 = *(_BYTE *)(a1 + 60);
  v24 = *(_BYTE *)(a1 + 61);
  v25 = *(_BYTE *)(a1 + 62);
  *(_QWORD *)&v62 = *(_QWORD *)a1;
  BYTE8(v62) = v4;
  BYTE9(v62) = v5;
  BYTE10(v62) = v6;
  BYTE11(v62) = v7;
  BYTE12(v62) = v8;
  BYTE13(v62) = v9;
  BYTE14(v62) = v10;
  HIBYTE(v62) = v11;
  *(_QWORD *)&v63 = v12;
  BYTE8(v63) = v13;
  BYTE9(v63) = v14;
  *(_QWORD *)&v64 = v15;
  BYTE8(v64) = v16;
  BYTE9(v64) = v17;
  v65 = v18;
  v66 = v19;
  v67 = v20;
  v68 = v21;
  v69 = v22;
  v70 = v23;
  v71 = v24;
  v72 = v25;
  v26 = *(_BYTE *)(a2 + 8);
  v27 = *(_BYTE *)(a2 + 9);
  v28 = *(_BYTE *)(a2 + 10);
  v29 = *(_BYTE *)(a2 + 11);
  v30 = *(_BYTE *)(a2 + 12);
  v31 = *(_BYTE *)(a2 + 13);
  v32 = *(_BYTE *)(a2 + 14);
  v33 = *(_BYTE *)(a2 + 15);
  v34 = *(_QWORD *)(a2 + 16);
  v35 = *(_BYTE *)(a2 + 24);
  v36 = *(_BYTE *)(a2 + 25);
  v37 = *(_QWORD *)(a2 + 32);
  v38 = *(_BYTE *)(a2 + 40);
  v39 = *(_BYTE *)(a2 + 41);
  v40 = *(_QWORD *)(a2 + 48);
  v41 = *(_BYTE *)(a2 + 56);
  v42 = *(_BYTE *)(a2 + 57);
  v43 = *(_BYTE *)(a2 + 58);
  v44 = *(_BYTE *)(a2 + 59);
  v45 = *(_BYTE *)(a2 + 60);
  v46 = *(_BYTE *)(a2 + 61);
  v47 = *(_BYTE *)(a2 + 62);
  *(_QWORD *)&v51 = *(_QWORD *)a2;
  BYTE8(v51) = v26;
  BYTE9(v51) = v27;
  BYTE10(v51) = v28;
  BYTE11(v51) = v29;
  BYTE12(v51) = v30;
  BYTE13(v51) = v31;
  BYTE14(v51) = v32;
  HIBYTE(v51) = v33;
  *(_QWORD *)&v52 = v34;
  BYTE8(v52) = v35;
  BYTE9(v52) = v36;
  *(_QWORD *)&v53 = v37;
  BYTE8(v53) = v38;
  BYTE9(v53) = v39;
  v54 = v40;
  v55 = v41;
  v56 = v42;
  v57 = v43;
  v58 = v44;
  v59 = v45;
  v60 = v46;
  v61 = v47;
  if ((_s21UIIntelligenceSupport29IntelligenceCollectionRequestV2eeoiySbAC_ACtFZ_0((unsigned int *)&v62, (unsigned int *)&v51) & 1) == 0)return 0;
  v48 = *(_OWORD *)(a1 + 80);
  v51 = *(_OWORD *)(a1 + 64);
  v52 = v48;
  v53 = *(_OWORD *)(a1 + 96);
  v49 = *(_OWORD *)(a2 + 80);
  v62 = *(_OWORD *)(a2 + 64);
  v63 = v49;
  v64 = *(_OWORD *)(a2 + 96);
  if ((sub_24967666C() & 1) == 0)
    return 0;
  type metadata accessor for IntelligenceFragment.RemoteContext(0);
  return _s21UIIntelligenceSupport20IntelligenceFragmentV8RemoteIDV2eeoiySbAE_AEtFZ_0();
}

uint64_t type metadata accessor for IntelligenceFragment.RemoteContext(uint64_t a1)
{
  return sub_249649264(a1, qword_2544AE2B0);
}

unint64_t sub_249648E78()
{
  unint64_t result;

  result = qword_25786B2C0;
  if (!qword_25786B2C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25786B2C0);
  }
  return result;
}

id sub_249648EB4()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (void *)sub_24967630C();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_2496762B8();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_249648F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B2D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_249648FB8()
{
  unint64_t result;

  result = qword_25786B2E8;
  if (!qword_25786B2E8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678D2C, &_s8RemoteIDV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B2E8);
  }
  return result;
}

uint64_t type metadata accessor for IntelligenceFragment.RemoteID(uint64_t a1)
{
  return sub_249649264(a1, (uint64_t *)&unk_2544ADFB0);
}

unint64_t sub_249649010()
{
  unint64_t result;

  result = qword_25786B310;
  if (!qword_25786B310)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678CDC, &_s12LocalContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B310);
  }
  return result;
}

unint64_t sub_249649054()
{
  unint64_t result;

  result = qword_25786A878;
  if (!qword_25786A878)
  {
    result = MEMORY[0x24BCF4DE0]("I_B\b\\b", &type metadata for IntelligenceCollectionRequest);
    atomic_store(result, (unint64_t *)&qword_25786A878);
  }
  return result;
}

unint64_t sub_249649098()
{
  unint64_t result;

  result = qword_25786AFB8;
  if (!qword_25786AFB8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCollectionRequest, &type metadata for IntelligenceCollectionRequest);
    atomic_store(result, (unint64_t *)&qword_25786AFB8);
  }
  return result;
}

uint64_t sub_2496490DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_249649120()
{
  unint64_t result;

  result = qword_25786B338;
  if (!qword_25786B338)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678C8C, &_s13RemoteContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B338);
  }
  return result;
}

uint64_t sub_249649164()
{
  return sub_24963EC48(&qword_25786A848, type metadata accessor for IntelligenceFragment.RemoteID, (uint64_t)&protocol conformance descriptor for IntelligenceFragment.RemoteID);
}

unint64_t sub_249649194()
{
  unint64_t result;

  result = qword_25786B360;
  if (!qword_25786B360)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceFragment.LocalContext, &type metadata for IntelligenceFragment.LocalContext);
    atomic_store(result, (unint64_t *)&qword_25786B360);
  }
  return result;
}

uint64_t sub_2496491D8()
{
  return sub_24963EC48((unint64_t *)&unk_25786B368, type metadata accessor for IntelligenceFragment.RemoteContext, (uint64_t)&protocol conformance descriptor for IntelligenceFragment.RemoteContext);
}

uint64_t dispatch thunk of IntelligenceCollectionContext.request.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IntelligenceCollectionContext.createRemoteContext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of IntelligenceCollectionContext.createRemoteContext(boundingBoxTransform:)(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[3];

  v3 = *(uint64_t (**)(_OWORD *))(a3 + 24);
  v4 = a1[1];
  v6[0] = *a1;
  v6[1] = v4;
  v6[2] = a1[2];
  return v3(v6);
}

uint64_t sub_249649248()
{
  return type metadata accessor for UIIntelligenceCollectionRemoteContextWrapper(0);
}

uint64_t type metadata accessor for UIIntelligenceCollectionRemoteContextWrapper(uint64_t a1)
{
  return sub_249649264(a1, qword_2544AE268);
}

uint64_t sub_249649264(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249649298()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IntelligenceFragment.RemoteContext(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for UIIntelligenceCollectionRemoteContextWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIIntelligenceCollectionRemoteContextWrapper.__allocating_init(remoteContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UIIntelligenceCollectionRemoteContextWrapper.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t _s8RemoteIDVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24967633C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s8RemoteIDVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24967633C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s8RemoteIDVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24967633C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s8RemoteIDVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24967633C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s8RemoteIDVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24967633C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s8RemoteIDVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24967633C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s8RemoteIDVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2496494AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24967633C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s8RemoteIDVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2496494F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24967633C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_249649534()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24967633C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy63_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 47) = *(_OWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for IntelligenceCollectionRequest(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 63))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceCollectionRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 62) = 0;
    *(_WORD *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 63) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 63) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceFragment.LocalContext()
{
  return &type metadata for IntelligenceFragment.LocalContext;
}

_QWORD *_s13RemoteContextVwCP(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    a1[2] = *((_OWORD *)a2 + 2);
    *(_OWORD *)((char *)a1 + 47) = *(_OWORD *)((char *)a2 + 47);
    v6 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (uint64_t)a2 + v7;
    a1[6] = *((_OWORD *)a2 + 6);
    v10 = sub_24967633C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return v3;
}

uint64_t _s13RemoteContextVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_24967633C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *_s13RemoteContextVwcp(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  *(_OWORD *)((char *)a1 + 47) = *(_OWORD *)((char *)a2 + 47);
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  a1[6] = a2[6];
  v9 = sub_24967633C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  return a1;
}

uint64_t _s13RemoteContextVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_BYTE *)(a1 + 61) = *(_BYTE *)(a2 + 61);
  *(_BYTE *)(a1 + 62) = *(_BYTE *)(a2 + 62);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24967633C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *_s13RemoteContextVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  *(_OWORD *)((char *)a1 + 47) = *(_OWORD *)((char *)a2 + 47);
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  a1[6] = a2[6];
  v9 = sub_24967633C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t _s13RemoteContextVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_BYTE *)(a1 + 61) = *(_BYTE *)(a2 + 61);
  *(_BYTE *)(a1 + 62) = *(_BYTE *)(a2 + 62);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v9 = sub_24967633C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t _s13RemoteContextVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249649ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for IntelligenceFragment.RemoteID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t _s13RemoteContextVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249649B44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for IntelligenceFragment.RemoteID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_249649BB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24967633C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s13RemoteContextV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13RemoteContextV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249649D0C + 4 * byte_249678705[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249649D40 + 4 * byte_249678700[v4]))();
}

uint64_t sub_249649D40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249649D48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249649D50);
  return result;
}

uint64_t sub_249649D5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249649D64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249649D68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249649D70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13RemoteContextV10CodingKeysOMa()
{
  return &_s13RemoteContextV10CodingKeysON;
}

ValueMetadata *_s12LocalContextV10CodingKeysOMa()
{
  return &_s12LocalContextV10CodingKeysON;
}

uint64_t _s12LocalContextV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249649DE0 + 4 * byte_24967870A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249649E00 + 4 * byte_24967870F[v4]))();
}

_BYTE *sub_249649DE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249649E00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249649E08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249649E10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249649E18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249649E20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s8RemoteIDV10CodingKeysOMa()
{
  return &_s8RemoteIDV10CodingKeysON;
}

unint64_t sub_249649E40()
{
  unint64_t result;

  result = qword_25786B3E0;
  if (!qword_25786B3E0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678AF4, &_s8RemoteIDV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B3E0);
  }
  return result;
}

unint64_t sub_249649E88()
{
  unint64_t result;

  result = qword_25786B3E8;
  if (!qword_25786B3E8)
  {
    result = MEMORY[0x24BCF4DE0]("eiB\b n", &_s12LocalContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B3E8);
  }
  return result;
}

unint64_t sub_249649ED0()
{
  unint64_t result;

  result = qword_25786B3F0;
  if (!qword_25786B3F0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678C64, &_s13RemoteContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B3F0);
  }
  return result;
}

unint64_t sub_249649F18()
{
  unint64_t result;

  result = qword_25786B3F8;
  if (!qword_25786B3F8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678BD4, &_s13RemoteContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B3F8);
  }
  return result;
}

unint64_t sub_249649F60()
{
  unint64_t result;

  result = qword_25786B400;
  if (!qword_25786B400)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678BFC, &_s13RemoteContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B400);
  }
  return result;
}

unint64_t sub_249649FA8()
{
  unint64_t result;

  result = qword_25786B408;
  if (!qword_25786B408)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678B1C, &_s12LocalContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B408);
  }
  return result;
}

unint64_t sub_249649FF0()
{
  unint64_t result;

  result = qword_25786B410;
  if (!qword_25786B410)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678B44, &_s12LocalContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B410);
  }
  return result;
}

unint64_t sub_24964A038()
{
  unint64_t result;

  result = qword_25786B418;
  if (!qword_25786B418)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678A64, &_s8RemoteIDV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B418);
  }
  return result;
}

unint64_t sub_24964A080()
{
  unint64_t result;

  result = qword_25786B420;
  if (!qword_25786B420)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249678A8C, &_s8RemoteIDV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B420);
  }
  return result;
}

uint64_t sub_24964A0C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v2 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024967CF50 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x444965746F6D6572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t RequestID.debugDescription.getter()
{
  sub_249676798();
  swift_bridgeObjectRelease();
  sub_249676954();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  sub_249676954();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  sub_249676954();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return 0x4974736575716552;
}

uint64_t RequestID.hash(into:)()
{
  return sub_2496769D8();
}

unint64_t RequestID.rawValue.getter()
{
  unsigned int *v0;

  return v0[1] | ((unint64_t)*v0 << 32);
}

BOOL static RequestID.== infix(_:_:)(unsigned int *a1, unsigned int *a2)
{
  return (a1[1] | ((unint64_t)*a1 << 32)) == (a2[1] | ((unint64_t)*a2 << 32));
}

void static RequestID.generate()(_DWORD *a1@<X8>)
{
  _DWORD *v2;
  os_unfair_lock_s *v3;
  int v4;
  BOOL v5;
  int v6;

  if (qword_25786A660 != -1)
    swift_once();
  v2 = off_25786A880;
  v3 = (os_unfair_lock_s *)((char *)off_25786A880 + 24);
  swift_retain();
  os_unfair_lock_lock(v3);
  v4 = v2[5];
  v5 = __CFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v2[5] = v6;
    *a1 = v2[4];
    a1[1] = v6;
    os_unfair_lock_unlock(v3);
    swift_release();
  }
}

uint64_t sub_24964A42C()
{
  pid_t v0;
  pid_t v1;
  uint64_t result;

  v0 = getpid();
  if (v0 < 0)
  {
    result = sub_2496767EC();
    __break(1u);
  }
  else
  {
    v1 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786A930);
    result = swift_allocObject();
    *(_DWORD *)(result + 20) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 16) = v1;
    off_25786A880 = (_UNKNOWN *)result;
  }
  return result;
}

uint64_t RequestID.hashValue.getter()
{
  sub_2496769A8();
  sub_2496769D8();
  return sub_2496769E4();
}

uint64_t sub_24964A50C()
{
  sub_2496769A8();
  sub_2496769D8();
  return sub_2496769E4();
}

uint64_t sub_24964A550()
{
  return sub_2496769D8();
}

uint64_t sub_24964A57C()
{
  sub_2496769A8();
  sub_2496769D8();
  return sub_2496769E4();
}

BOOL sub_24964A5BC(unsigned int *a1, unsigned int *a2)
{
  return (a1[1] | ((unint64_t)*a1 << 32)) == (a2[1] | ((unint64_t)*a2 << 32));
}

uint64_t RequestID.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249676A08();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_249676978();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t RequestID.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496769F0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    v5 = sub_24967696C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    *a2 = __ROR8__(v5, 32);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24964A758@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RequestID.init(from:)(a1, a2);
}

uint64_t sub_24964A76C(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249676A08();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_249676978();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t RequestID.init(_:)@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unint64_t v9;
  char v10;
  char v11;
  unsigned __int8 v12;
  BOOL v13;
  unint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  unsigned __int8 v23;
  unint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned int v27;
  char v28;
  _QWORD v29[3];

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    result = swift_bridgeObjectRelease();
    v18 = 0;
    v19 = 1;
LABEL_40:
    *(_QWORD *)a3 = v18;
    *(_BYTE *)(a3 + 8) = v19;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v9 = sub_24964AD84(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_24964AE74);
    v11 = v28;
LABEL_37:
    result = swift_bridgeObjectRelease();
    v18 = __ROR8__(v9, 32);
    if ((v11 & 1) != 0)
    {
      v18 = 0;
      v19 = 1;
    }
    else
    {
      v19 = 0;
    }
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_2496767D4();
    v9 = (unint64_t)sub_24964AE74(v8, v6, 10);
    v11 = v10 & 1;
    goto LABEL_37;
  }
  v29[0] = result;
  v29[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5)
      goto LABEL_64;
    if (v5 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_33;
    v9 = (BYTE1(result) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_33;
      v9 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v15 = v5 - 3;
      if (v15)
      {
        v16 = (unsigned __int8 *)v29 + 3;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            goto LABEL_33;
          if (!is_mul_ok(v9, 0xAuLL))
            goto LABEL_33;
          v13 = __CFADD__(10 * v9, v17);
          v9 = 10 * v9 + v17;
          if (v13)
            goto LABEL_33;
          v11 = 0;
          ++v16;
          if (!--v15)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v11 = 0;
    goto LABEL_37;
  }
  if (result != 45)
  {
    if (!v5 || (result - 48) > 9u)
      goto LABEL_33;
    v9 = (result - 48);
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_33;
      v9 = 10 * (result - 48) + (BYTE1(result) - 48);
      v20 = v5 - 2;
      if (v20)
      {
        v21 = (unsigned __int8 *)v29 + 2;
        while (1)
        {
          v22 = *v21 - 48;
          if (v22 > 9)
            goto LABEL_33;
          if (!is_mul_ok(v9, 0xAuLL))
            goto LABEL_33;
          v13 = __CFADD__(10 * v9, v22);
          v9 = 10 * v9 + v22;
          if (v13)
            goto LABEL_33;
          v11 = 0;
          ++v21;
          if (!--v20)
            goto LABEL_37;
        }
      }
    }
    goto LABEL_36;
  }
  if (v5)
  {
    if (v5 != 1)
    {
      v12 = BYTE1(result) - 48;
      if ((BYTE1(result) - 48) <= 9u)
      {
        v9 = 0;
        v13 = v12 == 0;
        v14 = -(uint64_t)v12;
        if (!v13)
          goto LABEL_34;
        if (v5 == 2)
        {
          v11 = 0;
          v9 = v14;
          goto LABEL_37;
        }
        v23 = BYTE2(result) - 48;
        if ((BYTE2(result) - 48) <= 9u && is_mul_ok(v14, 0xAuLL))
        {
          v24 = 10 * v14;
          v9 = v24 - v23;
          if (v24 >= v23)
          {
            v25 = v5 - 3;
            if (v25)
            {
              v26 = (unsigned __int8 *)v29 + 3;
              while (1)
              {
                v27 = *v26 - 48;
                if (v27 > 9)
                  goto LABEL_33;
                if (!is_mul_ok(v9, 0xAuLL))
                  goto LABEL_33;
                v13 = 10 * v9 >= v27;
                v9 = 10 * v9 - v27;
                if (!v13)
                  goto LABEL_33;
                v11 = 0;
                ++v26;
                if (!--v25)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
        }
      }
    }
LABEL_33:
    v9 = 0;
LABEL_34:
    v11 = 1;
    goto LABEL_37;
  }
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t RequestID.description.getter()
{
  sub_24964AC88();
  return sub_2496766FC();
}

uint64_t sub_24964AB50()
{
  sub_24964AC88();
  return sub_2496766FC();
}

_QWORD *sub_24964AB98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B4A0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24964ABFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_249676594();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x24BCF4534](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_24964AC74(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_24964B0F0(a1, a2, a3);
}

unint64_t sub_24964AC88()
{
  unint64_t result;

  result = qword_25786B490;
  if (!qword_25786B490)
  {
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BEE45A0], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_25786B490);
  }
  return result;
}

unint64_t sub_24964ACD0()
{
  unint64_t result;

  result = qword_2544AE000;
  if (!qword_2544AE000)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for RequestID, &type metadata for RequestID);
    atomic_store(result, (unint64_t *)&qword_2544AE000);
  }
  return result;
}

unint64_t sub_24964AD18()
{
  unint64_t result;

  result = qword_25786B498;
  if (!qword_25786B498)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for RequestID, &type metadata for RequestID);
    atomic_store(result, (unint64_t *)&qword_25786B498);
  }
  return result;
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for RequestID()
{
  return &type metadata for RequestID;
}

uint64_t sub_24964AD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24964AD84(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_24964B0F0);
}

uint64_t sub_24964AD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_2496765AC();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_24964B36C();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_2496767D4();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_24964AE74(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_24964B0F0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_24964B36C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_2496765B8();
  v4 = sub_24964B3E8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24964B3E8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_24964B52C(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_24964AB98(v9, 0);
      v12 = sub_24964B618((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x24BCF44EC](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x24BCF44ECLL);
LABEL_9:
      sub_2496767D4();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24BCF44EC]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_24964B52C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_24964ABFC(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_24964ABFC(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_24967657C();
  }
  __break(1u);
  return result;
}

unint64_t sub_24964B618(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_24964ABFC(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_249676588();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_2496767D4();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_24964ABFC(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_249676564();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for RequestID.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RequestID.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RequestID.State()
{
  return &type metadata for RequestID.State;
}

BOOL static IntelligenceProcessInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36) && *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40);
}

__n128 IntelligenceProcessInfo.auditToken.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 32);
  result = *(__n128 *)v1;
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t IntelligenceProcessInfo.auditToken.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_24964B8BC(a1, v1);
}

uint64_t sub_24964B8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25786A908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t (*IntelligenceProcessInfo.auditToken.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceProcessInfo.pid.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 36);
}

uint64_t IntelligenceProcessInfo.pid.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 36) = result;
  return result;
}

uint64_t (*IntelligenceProcessInfo.pid.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceProcessInfo.pidversion.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 40);
}

uint64_t IntelligenceProcessInfo.pidversion.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*IntelligenceProcessInfo.pidversion.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceProcessInfo.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntelligenceProcessInfo.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*IntelligenceProcessInfo.bundleIdentifier.modify())()
{
  return nullsub_1;
}

double IntelligenceProcessInfo.init(auditToken:pid:pidversion:bundleIdentifier:)@<D0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v11;
  double result;
  __int128 v13;
  _OWORD v14[2];
  char v15;

  sub_24964B8BC(a1, (uint64_t)v14);
  v11 = v15;
  result = *(double *)v14;
  v13 = v14[1];
  *(_OWORD *)a6 = v14[0];
  *(_OWORD *)(a6 + 16) = v13;
  *(_BYTE *)(a6 + 32) = v11;
  *(_DWORD *)(a6 + 36) = a2;
  *(_DWORD *)(a6 + 40) = a3;
  *(_QWORD *)(a6 + 48) = a4;
  *(_QWORD *)(a6 + 56) = a5;
  return result;
}

uint64_t IntelligenceProcessInfo.hash(into:)()
{
  sub_2496769CC();
  return sub_2496769CC();
}

uint64_t IntelligenceProcessInfo.hashValue.getter()
{
  sub_2496769A8();
  sub_2496769CC();
  sub_2496769CC();
  return sub_2496769E4();
}

uint64_t sub_24964BAB8()
{
  sub_2496769A8();
  sub_2496769CC();
  sub_2496769CC();
  return sub_2496769E4();
}

uint64_t sub_24964BB10()
{
  sub_2496769CC();
  return sub_2496769CC();
}

uint64_t sub_24964BB48()
{
  sub_2496769A8();
  sub_2496769CC();
  sub_2496769CC();
  return sub_2496769E4();
}

BOOL sub_24964BB9C(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36) && *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40);
}

uint64_t sub_24964BBB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_249673E00(*a1, *a2);
}

uint64_t sub_24964BBC0()
{
  sub_2496769A8();
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_24964BC60()
{
  sub_249676534();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24964BCDC()
{
  sub_2496769A8();
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_24964BD78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24964C82C();
  *a1 = result;
  return result;
}

void sub_24964BDA4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0xEA00000000006E6FLL;
  v5 = 0x6973726576646970;
  if (v2 != 1)
  {
    v5 = 0xD000000000000010;
    v4 = 0x800000024967CF20;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 6580592;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_24964BE04()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6973726576646970;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 6580592;
}

uint64_t sub_24964BE60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24964C82C();
  *a1 = result;
  return result;
}

uint64_t sub_24964BE84()
{
  sub_24964C030();
  return sub_249676A20();
}

uint64_t sub_24964BEAC()
{
  sub_24964C030();
  return sub_249676A2C();
}

uint64_t IntelligenceProcessInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B4A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_DWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v10[0] = *(_QWORD *)(v1 + 56);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24964C030();
  sub_249676A14();
  v14 = 0;
  sub_249676948();
  if (!v2)
  {
    v13 = 1;
    sub_249676948();
    v12 = 2;
    sub_2496768E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24964C030()
{
  unint64_t result;

  result = qword_25786B4B0;
  if (!qword_25786B4B0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679124, &type metadata for IntelligenceProcessInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B4B0);
  }
  return result;
}

uint64_t IntelligenceProcessInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B4B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24964C030();
  sub_2496769FC();
  if (!v2)
  {
    v20 = 0;
    v9 = sub_2496768C4();
    v19 = 1;
    v10 = sub_2496768C4();
    v18 = 2;
    v11 = sub_249676858();
    v14 = v13;
    v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16 = v11;
    v15(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_BYTE *)(a2 + 32) = 1;
    *(_DWORD *)(a2 + 36) = v9;
    *(_DWORD *)(a2 + 40) = v10;
    *(_QWORD *)(a2 + 48) = v16;
    *(_QWORD *)(a2 + 56) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24964C220@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceProcessInfo.init(from:)(a1, a2);
}

uint64_t sub_24964C234(_QWORD *a1)
{
  return IntelligenceProcessInfo.encode(to:)(a1);
}

uint64_t IntelligenceProcessInfo.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD v11[2];

  v1 = *(_QWORD *)(v0 + 56);
  if (!v1)
    goto LABEL_8;
  v2 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v2 = *(_QWORD *)(v0 + 48) & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    v11[0] = 34;
    v11[1] = 0xE100000000000000;
    sub_24967654C();
    sub_24967654C();
    v3 = sub_2496325A0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v5 = v3[2];
    v4 = v3[3];
    if (v5 >= v4 >> 1)
      v3 = sub_2496325A0((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
    v3[2] = v5 + 1;
    v6 = &v3[2 * v5];
    v6[4] = 34;
    v6[5] = 0xE100000000000000;
  }
  else
  {
LABEL_8:
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v11[0] = 0x203A646970;
  v11[1] = 0xE500000000000000;
  sub_249676954();
  sub_24967654C();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_2496325A0(0, v3[2] + 1, 1, v3);
  v8 = v3[2];
  v7 = v3[3];
  if (v8 >= v7 >> 1)
    v3 = sub_2496325A0((_QWORD *)(v7 > 1), v8 + 1, 1, v3);
  v3[2] = v8 + 1;
  v9 = &v3[2 * v8];
  v9[4] = 0x203A646970;
  v9[5] = 0xE500000000000000;
  strcpy((char *)v11, "ProcessInfo(");
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  sub_249632EBC();
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return v11[0];
}

unint64_t sub_24964C46C()
{
  unint64_t result;

  result = qword_25786A860;
  if (!qword_25786A860)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceProcessInfo, &type metadata for IntelligenceProcessInfo);
    atomic_store(result, (unint64_t *)&qword_25786A860);
  }
  return result;
}

uint64_t destroy for IntelligenceProcessInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IntelligenceProcessInfo(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IntelligenceProcessInfo(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 v4;

  v3 = *a2;
  v4 = a2[1];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for IntelligenceProcessInfo(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceProcessInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceProcessInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 56) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceProcessInfo()
{
  return &type metadata for IntelligenceProcessInfo;
}

uint64_t storeEnumTagSinglePayload for IntelligenceProcessInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24964C6D4 + 4 * byte_249678EF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24964C708 + 4 * asc_249678EF0[v4]))();
}

uint64_t sub_24964C708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24964C710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24964C718);
  return result;
}

uint64_t sub_24964C724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24964C72CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24964C730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24964C738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceProcessInfo.CodingKeys()
{
  return &type metadata for IntelligenceProcessInfo.CodingKeys;
}

unint64_t sub_24964C758()
{
  unint64_t result;

  result = qword_25786B4C0;
  if (!qword_25786B4C0)
  {
    result = MEMORY[0x24BCF4DE0]("=eB\bti", &type metadata for IntelligenceProcessInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B4C0);
  }
  return result;
}

unint64_t sub_24964C7A0()
{
  unint64_t result;

  result = qword_25786B4C8;
  if (!qword_25786B4C8)
  {
    result = MEMORY[0x24BCF4DE0]("EfB\b<j", &type metadata for IntelligenceProcessInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B4C8);
  }
  return result;
}

unint64_t sub_24964C7E8()
{
  unint64_t result;

  result = qword_25786B4D0;
  if (!qword_25786B4D0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967905C, &type metadata for IntelligenceProcessInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B4D0);
  }
  return result;
}

uint64_t sub_24964C82C()
{
  unint64_t v0;

  v0 = sub_249676834();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

double IntelligenceFragmentCollector.context.getter@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t *boxed_opaque_existential_1;
  double result;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v3 = type metadata accessor for IntelligenceFragmentCollector.InternalContext(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249634958(v1 + OBJC_IVAR____TtC21UIIntelligenceSupport29IntelligenceFragmentCollector__context, (uint64_t)v5, v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    a1[3] = type metadata accessor for IntelligenceFragment.RemoteContext(0);
    a1[4] = (uint64_t)&protocol witness table for IntelligenceFragment.RemoteContext;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
    sub_24963E94C((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for IntelligenceFragment.RemoteContext);
  }
  else
  {
    v9 = v5[8];
    v10 = v5[9];
    v11 = v5[10];
    v12 = v5[11];
    v13 = v5[12];
    v14 = v5[13];
    v15 = v5[14];
    v16 = v5[15];
    v37 = *((_QWORD *)v5 + 2);
    v17 = v5[24];
    v35 = v5[25];
    v36 = v17;
    v34 = *((_QWORD *)v5 + 4);
    v18 = v5[40];
    v32 = v5[41];
    v33 = v18;
    v31 = *((_QWORD *)v5 + 6);
    v19 = v5[56];
    v29 = v5[57];
    v30 = v19;
    v20 = v5[58];
    v27 = v5[59];
    v28 = v20;
    v21 = v5[60];
    v25 = v5[61];
    v26 = v21;
    v24 = v5[62];
    a1[3] = (uint64_t)&type metadata for IntelligenceFragment.LocalContext;
    a1[4] = (uint64_t)&protocol witness table for IntelligenceFragment.LocalContext;
    v22 = swift_allocObject();
    *a1 = v22;
    result = *(double *)v5;
    *(_QWORD *)(v22 + 16) = *(_QWORD *)v5;
    *(_BYTE *)(v22 + 24) = v9;
    *(_BYTE *)(v22 + 25) = v10;
    *(_BYTE *)(v22 + 26) = v11;
    *(_BYTE *)(v22 + 27) = v12;
    *(_BYTE *)(v22 + 28) = v13;
    *(_BYTE *)(v22 + 29) = v14;
    *(_BYTE *)(v22 + 30) = v15;
    *(_BYTE *)(v22 + 31) = v16;
    *(_QWORD *)(v22 + 32) = v37;
    *(_BYTE *)(v22 + 40) = v36;
    *(_BYTE *)(v22 + 41) = v35;
    *(_QWORD *)(v22 + 48) = v34;
    *(_BYTE *)(v22 + 56) = v33;
    *(_BYTE *)(v22 + 57) = v32;
    *(_QWORD *)(v22 + 64) = v31;
    *(_BYTE *)(v22 + 72) = v30;
    *(_BYTE *)(v22 + 73) = v29;
    *(_BYTE *)(v22 + 74) = v28;
    *(_BYTE *)(v22 + 75) = v27;
    *(_BYTE *)(v22 + 76) = v26;
    *(_BYTE *)(v22 + 77) = v25;
    *(_BYTE *)(v22 + 78) = v24;
  }
  return result;
}

uint64_t type metadata accessor for IntelligenceFragmentCollector.InternalContext(uint64_t a1)
{
  return sub_249649264(a1, (uint64_t *)&unk_25786AFC0);
}

uint64_t sub_24964CAAC()
{
  return swift_deallocObject();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t IntelligenceFragmentCollector.collect(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_24964CB80(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t sub_24964CB80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = type metadata accessor for IntelligenceElement();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + *(int *)(type metadata accessor for IntelligenceFragmentCollector.State(0) + 20)) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_249634958(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
    v2 = *(int *)(type metadata accessor for IntelligenceFragment() + 32);
    a2 = *(_QWORD *)(a1 + v2);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_3;
  }
  a2 = sub_2496326C0(0, *(_QWORD *)(a2 + 16) + 1, 1, a2);
LABEL_3:
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  if (v10 >= v9 >> 1)
    a2 = sub_2496326C0(v9 > 1, v10 + 1, 1, a2);
  *(_QWORD *)(a2 + 16) = v10 + 1;
  result = sub_24963E94C((uint64_t)v8, a2+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v10, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  *(_QWORD *)(a1 + v2) = a2;
  return result;
}

Swift::Void __swiftcall IntelligenceFragmentCollector.collect(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = v2 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v2 + 16);
  v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(_QWORD *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_24964CDD0(v3);
  os_unfair_lock_unlock(v4);
  swift_release();
}

Swift::Void __swiftcall IntelligenceFragmentCollector.collect(_:bundleID:)(Swift::OpaquePointer _, Swift::String bundleID)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_24964CDD0(v4);
  os_unfair_lock_unlock(v5);
  swift_release();
}

uint64_t sub_24964CDD0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for IntelligenceFragmentCollector.State(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 20)) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for IntelligenceFragment();
    v3 = swift_bridgeObjectRetain();
    return sub_24963C8A8(v3);
  }
  return result;
}

__n128 IntelligenceFragmentCollector.boundingBoxTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;
  __n128 v10;
  __int128 v11;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = (__int128 *)(v3 + *(int *)(type metadata accessor for IntelligenceFragment() + 28) + v4);
  v10 = (__n128)v6[1];
  v11 = *v6;
  v7 = *((_QWORD *)v6 + 4);
  v8 = *((_QWORD *)v6 + 5);
  os_unfair_lock_unlock(v5);
  swift_release();
  result = v10;
  *(_OWORD *)a1 = v11;
  *(__n128 *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  return result;
}

__n128 sub_24964CEE8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __n128 v9;
  __int128 v10;
  _OWORD v11[2];
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_24964D0DC(v4, (uint64_t)v11);
  os_unfair_lock_unlock(v5);
  v9 = (__n128)v11[1];
  v10 = v11[0];
  v6 = v12;
  v7 = v13;
  swift_release();
  result = v9;
  *(_OWORD *)a2 = v10;
  *(__n128 *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v7;
  return result;
}

uint64_t sub_24964CFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  v3 = v2 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v2 + 16);
  v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(_QWORD *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_249650524(v3);
  os_unfair_lock_unlock(v4);
  return swift_release();
}

uint64_t IntelligenceFragmentCollector.boundingBoxTransform.setter(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  _OWORD *v6;
  __int128 v7;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = (_OWORD *)(v3 + *(int *)(type metadata accessor for IntelligenceFragment() + 28) + v4);
  v7 = a1[1];
  *v6 = *a1;
  v6[1] = v7;
  v6[2] = a1[2];
  os_unfair_lock_unlock(v5);
  return swift_release();
}

__n128 sub_24964D0DC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  __n128 result;

  v3 = a1 + *(int *)(type metadata accessor for IntelligenceFragment() + 28);
  v4 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v4;
  result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

void (*IntelligenceFragmentCollector.boundingBoxTransform.modify(_QWORD *a1))(__int128 **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[18] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v4 + 16);
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v6);
  v7 = (__int128 *)(v4 + *(int *)(type metadata accessor for IntelligenceFragment() + 28) + v5);
  v11 = v7[1];
  v12 = *v7;
  v8 = *((_QWORD *)v7 + 4);
  v9 = *((_QWORD *)v7 + 5);
  os_unfair_lock_unlock(v6);
  swift_release();
  *((_OWORD *)v3 + 6) = v12;
  *((_OWORD *)v3 + 7) = v11;
  v3 += 12;
  v3[4] = v8;
  v3[5] = v9;
  return sub_24964D200;
}

void sub_24964D200(__int128 **a1, char a2)
{
  __int128 *v2;
  uint64_t v3;
  __int128 *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;

  v2 = *a1;
  v3 = *((_QWORD *)*a1 + 18);
  if ((a2 & 1) != 0)
    v4 = *a1;
  else
    v4 = *a1 + 3;
  v5 = v2[7];
  *v4 = v2[6];
  v4[1] = v5;
  v4[2] = v2[8];
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v6 + 16);
  v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(_QWORD *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v8);
  v9 = (_OWORD *)(v6 + *(int *)(type metadata accessor for IntelligenceFragment() + 28) + v7);
  v10 = *v4;
  v11 = v4[2];
  v9[1] = v4[1];
  v9[2] = v11;
  *v9 = v10;
  os_unfair_lock_unlock(v8);
  swift_release();
  free(v2);
}

uint64_t IntelligenceFragmentCollector.collectedFragment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_249634958(v4, a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFragment);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t sub_24964D34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249634958(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFragment);
}

BOOL static IntelligenceFragmentCollector.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t IntelligenceFragmentCollector.hash(into:)()
{
  return sub_2496769B4();
}

uint64_t IntelligenceFragmentCollector.__allocating_init(request:)(unint64_t *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  IntelligenceFragmentCollector.init(request:)(a1);
  return v2;
}

uint64_t IntelligenceFragmentCollector.init(request:)(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unint64_t v41;
  int v42;
  int v43;
  unint64_t v44;
  int v45;
  int v46;
  unint64_t v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;

  v3 = type metadata accessor for IntelligenceFragmentCollector.State(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v7 = HIDWORD(*a1);
  v8 = *((_BYTE *)a1 + 8);
  v9 = *((_BYTE *)a1 + 9);
  v10 = *((unsigned __int8 *)a1 + 10);
  v52 = *((unsigned __int8 *)a1 + 11);
  v53 = v10;
  v11 = *((unsigned __int8 *)a1 + 12);
  v50 = *((unsigned __int8 *)a1 + 13);
  v51 = v11;
  v12 = *((unsigned __int8 *)a1 + 14);
  v48 = *((unsigned __int8 *)a1 + 15);
  v49 = v12;
  v47 = a1[2];
  v13 = *((unsigned __int8 *)a1 + 24);
  v45 = *((unsigned __int8 *)a1 + 25);
  v46 = v13;
  v44 = a1[4];
  v14 = *((unsigned __int8 *)a1 + 40);
  v42 = *((unsigned __int8 *)a1 + 41);
  v43 = v14;
  v41 = a1[6];
  v15 = *((unsigned __int8 *)a1 + 56);
  v39 = *((unsigned __int8 *)a1 + 57);
  v40 = v15;
  v16 = *((unsigned __int8 *)a1 + 58);
  v37 = *((unsigned __int8 *)a1 + 59);
  v38 = v16;
  v17 = *((unsigned __int8 *)a1 + 60);
  v35 = *((unsigned __int8 *)a1 + 61);
  v36 = v17;
  HIDWORD(v34) = *((unsigned __int8 *)a1 + 62);
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v18 = (int *)type metadata accessor for IntelligenceFragment();
  v19 = &v5[v18[5]];
  v20 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = &v5[v18[6]];
  *((_OWORD *)v21 + 1) = 0u;
  *((_OWORD *)v21 + 2) = 0u;
  *(_OWORD *)v21 = 0u;
  *((_QWORD *)v21 + 6) = 0;
  *((_QWORD *)v21 + 7) = 1;
  v22 = &v5[v18[7]];
  *(_QWORD *)v22 = 0x3FF0000000000000;
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v22 + 4) = 0;
  *((_QWORD *)v22 + 5) = 0;
  v23 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v5[v18[8]] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v5[v18[9]] = v23;
  v5[*(int *)(v3 + 20)] = 0;
  v24 = &v5[*(int *)(v3 + 24)];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B080);
  v25 = swift_allocObject();
  *(_DWORD *)(v25 + ((*(unsigned int *)(*(_QWORD *)v25 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  v26 = (_QWORD *)MEMORY[0x24BEE27A8];
  sub_249634958((uint64_t)v5, v25 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v25 + 16), type metadata accessor for IntelligenceFragmentCollector.State);
  sub_24963499C((uint64_t)v5, type metadata accessor for IntelligenceFragmentCollector.State);
  *(_QWORD *)(v1 + 16) = v25;
  v27 = v1 + OBJC_IVAR____TtC21UIIntelligenceSupport29IntelligenceFragmentCollector__context;
  *(_DWORD *)v27 = v6;
  *(_DWORD *)(v27 + 4) = v7;
  *(_BYTE *)(v27 + 8) = v8;
  *(_BYTE *)(v27 + 9) = v9;
  *(_BYTE *)(v27 + 10) = v53;
  *(_BYTE *)(v27 + 11) = v52;
  *(_BYTE *)(v27 + 12) = v51;
  *(_BYTE *)(v27 + 13) = v50;
  *(_BYTE *)(v27 + 14) = v49;
  *(_BYTE *)(v27 + 15) = v48;
  *(_QWORD *)(v27 + 16) = v47;
  *(_BYTE *)(v27 + 24) = v46;
  *(_BYTE *)(v27 + 25) = v45;
  *(_QWORD *)(v27 + 32) = v44;
  *(_BYTE *)(v27 + 40) = v43;
  *(_BYTE *)(v27 + 41) = v42;
  *(_QWORD *)(v27 + 48) = v41;
  *(_BYTE *)(v27 + 56) = v40;
  *(_BYTE *)(v27 + 57) = v39;
  *(_BYTE *)(v27 + 58) = v38;
  *(_BYTE *)(v27 + 59) = v37;
  *(_BYTE *)(v27 + 60) = v36;
  *(_BYTE *)(v27 + 61) = v35;
  *(_BYTE *)(v27 + 62) = BYTE4(v34);
  type metadata accessor for IntelligenceFragmentCollector.InternalContext(0);
  swift_storeEnumTagMultiPayload();
  v28 = *(_QWORD *)(v1 + 16);
  v29 = v28 + *(_QWORD *)(*v26 + *(_QWORD *)v28 + 16);
  v30 = (os_unfair_lock_s *)(v28 + ((*(unsigned int *)(*(_QWORD *)v28 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v30);
  *(_QWORD *)v29 = v6;
  *(_BYTE *)(v29 + 8) = 0;
  v31 = mach_continuous_time();
  v32 = v29 + *(int *)(v3 + 24);
  *(_QWORD *)v32 = v31;
  *(_BYTE *)(v32 + 8) = 0;
  os_unfair_lock_unlock(v30);
  swift_release();
  return v1;
}

uint64_t type metadata accessor for IntelligenceFragmentCollector.State(uint64_t a1)
{
  return sub_249649264(a1, (uint64_t *)&unk_25786AFD0);
}

uint64_t IntelligenceFragmentCollector.__allocating_init(remoteContext:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  IntelligenceFragmentCollector.init(remoteContext:)(a1);
  return v2;
}

uint64_t IntelligenceFragmentCollector.init(remoteContext:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v19;

  v3 = type metadata accessor for IntelligenceFragmentCollector.State(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v6 = (int *)type metadata accessor for IntelligenceFragment();
  v7 = &v5[v6[5]];
  v8 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = &v5[v6[6]];
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *(_OWORD *)v9 = 0u;
  *((_QWORD *)v9 + 6) = 0;
  *((_QWORD *)v9 + 7) = 1;
  v10 = &v5[v6[7]];
  *(_QWORD *)v10 = 0x3FF0000000000000;
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *((_QWORD *)v10 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v10 + 4) = 0;
  *((_QWORD *)v10 + 5) = 0;
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v5[v6[8]] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v5[v6[9]] = v11;
  v5[*(int *)(v3 + 20)] = 0;
  v12 = &v5[*(int *)(v3 + 24)];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B080);
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + ((*(unsigned int *)(*(_QWORD *)v13 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  v14 = (_QWORD *)MEMORY[0x24BEE27A8];
  sub_249634958((uint64_t)v5, v13 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v13 + 16), type metadata accessor for IntelligenceFragmentCollector.State);
  sub_24963499C((uint64_t)v5, type metadata accessor for IntelligenceFragmentCollector.State);
  *(_QWORD *)(v1 + 16) = v13;
  sub_249634958(a1, v1 + OBJC_IVAR____TtC21UIIntelligenceSupport29IntelligenceFragmentCollector__context, type metadata accessor for IntelligenceFragment.RemoteContext);
  type metadata accessor for IntelligenceFragmentCollector.InternalContext(0);
  swift_storeEnumTagMultiPayload();
  v15 = *(_QWORD *)(v1 + 16);
  v16 = v15 + *(_QWORD *)(*v14 + *(_QWORD *)v15 + 16);
  v17 = (os_unfair_lock_s *)(v15 + ((*(unsigned int *)(*(_QWORD *)v15 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v17);
  sub_24964D9E4(v16, a1);
  os_unfair_lock_unlock(v17);
  swift_release();
  sub_24963499C(a1, type metadata accessor for IntelligenceFragment.RemoteContext);
  return v1;
}

uint64_t sub_24964D9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = 0;
  v4 = type metadata accessor for IntelligenceFragment();
  v5 = a1 + *(int *)(v4 + 20);
  sub_24963EB88(v5, &qword_2544ADFC0);
  v6 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  sub_249634958(a2 + *(int *)(v6 + 24), v5, type metadata accessor for IntelligenceFragment.RemoteID);
  v7 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v8 = (_OWORD *)(a1 + *(int *)(v4 + 28));
  v9 = *(_OWORD *)(a2 + 80);
  *v8 = *(_OWORD *)(a2 + 64);
  v8[1] = v9;
  v8[2] = *(_OWORD *)(a2 + 96);
  v10 = mach_continuous_time();
  result = type metadata accessor for IntelligenceFragmentCollector.State(0);
  v12 = a1 + *(int *)(result + 24);
  *(_QWORD *)v12 = v10;
  *(_BYTE *)(v12 + 8) = 0;
  return result;
}

uint64_t IntelligenceFragmentCollector.processInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_24964DD68(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

double sub_24964DB5C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  __int128 v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_24964DD68(v4, (uint64_t *)v9);
  os_unfair_lock_unlock(v5);
  swift_release();
  v6 = v9[1];
  *a2 = v9[0];
  a2[1] = v6;
  result = *(double *)&v10;
  v8 = v11;
  a2[2] = v10;
  a2[3] = v8;
  return result;
}

uint64_t sub_24964DC08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  _QWORD v7[8];

  sub_24964E62C(a1, (uint64_t)v7);
  v3 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  sub_24964E674(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24963E990);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_24965050C(v4);
  os_unfair_lock_unlock(v5);
  sub_24964E674(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24963E9A4);
  return swift_release();
}

uint64_t IntelligenceFragmentCollector.processInfo.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  _QWORD v6[8];

  sub_24964E62C(a1, (uint64_t)v6);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = v2 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v2 + 16);
  v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(_QWORD *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_24964DDCC(v3, v6);
  os_unfair_lock_unlock(v4);
  sub_24964E674(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24963E9A4);
  return swift_release();
}

uint64_t sub_24964DD68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for IntelligenceFragment() + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  a2[6] = v10;
  a2[7] = v11;
  return sub_24963E990(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_24964DDCC(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for IntelligenceFragment() + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[7];
  v12 = v3[6];
  sub_24964E674(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24963E990);
  sub_24963E9A4(v4, v5, v6, v7, v8, v9, v12, v10);
  return sub_24964E62C((uint64_t)a2, (uint64_t)v3);
}

void (*IntelligenceFragmentCollector.processInfo.modify(uint64_t **a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v3 = (uint64_t *)malloc(0xD0uLL);
  *a1 = v3;
  v3[24] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = v4 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v4 + 16);
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_24964DD68(v5, v3 + 16);
  v3[25] = 0;
  os_unfair_lock_unlock(v6);
  swift_release();
  return sub_24964DF38;
}

void sub_24964DF38(_QWORD **a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;

  v2 = *a1;
  v3 = (uint64_t)(*a1 + 16);
  v5 = v2[24];
  v4 = v2[25];
  if ((a2 & 1) == 0)
  {
    sub_24964E62C(v3, (uint64_t)(v2 + 8));
    v9 = *(_QWORD *)(v5 + 16);
    v10 = v9 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v9 + 16);
    v11 = (os_unfair_lock_s *)(v9 + ((*(unsigned int *)(*(_QWORD *)v9 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v11);
    sub_24964DDCC(v10, v2 + 8);
    os_unfair_lock_unlock(v11);
    sub_24964E674(v2 + 8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24963E9A4);
    swift_release();
    goto LABEL_5;
  }
  sub_24964E62C(v3, (uint64_t)v2);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = v6 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v6 + 16);
  v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(_QWORD *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
  sub_24964E674(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24963E990);
  swift_retain();
  os_unfair_lock_lock(v8);
  sub_24964DDCC(v7, v2);
  if (!v4)
  {
    os_unfair_lock_unlock(v8);
    sub_24964E674(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24963E9A4);
    swift_release();
    sub_24963E9A4(v2[16], v2[17], v2[18], v2[19], v2[20], v2[21], v2[22], v2[23]);
LABEL_5:
    free(v2);
    return;
  }
  os_unfair_lock_unlock(v8);
  __break(1u);
}

Swift::Void __swiftcall IntelligenceFragmentCollector.markFinished()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_24964E138(v2);
  os_unfair_lock_unlock(v3);
  swift_release();
}

uint64_t sub_24964E138(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = type metadata accessor for IntelligenceFragmentCollector.State(0);
  v3 = *(int *)(result + 20);
  if ((*(_BYTE *)(a1 + v3) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_BYTE *)(a1 + v3) = 1;
    v4 = a1 + *(int *)(result + 24);
    if ((*(_BYTE *)(v4 + 8) & 1) == 0)
    {
      result = sub_24964E1A8(*(_QWORD *)v4);
      *(_QWORD *)v4 = 0;
      *(_BYTE *)(v4 + 8) = 1;
    }
  }
  return result;
}

uint64_t sub_24964E1A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  NSObject *v17;
  os_signpost_type_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint8_t *v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  void (*v25)(char *, uint64_t);
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a1;
  v31 = sub_24967636C();
  v2 = *(_QWORD *)(v31 - 8);
  v3 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - v5;
  v7 = type metadata accessor for IntelligenceFragmentCollector.InternalContext(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_249676390();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25786AC50 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v10, (uint64_t)qword_25786B000);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  sub_249634958(v1 + OBJC_IVAR____TtC21UIIntelligenceSupport29IntelligenceFragmentCollector__context, (uint64_t)v9, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24963499C((uint64_t)v9, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
    v15 = "RemoteCollection";
  }
  else
  {
    v15 = "Collection";
  }
  sub_249676384();
  swift_unknownObjectRetain();
  sub_249676348();
  sub_249650564();
  sub_24964EB00();
  sub_2496505A8(v16);
  v17 = sub_249676384();
  v18 = sub_2496766A8();
  if ((sub_2496766C0() & 1) != 0)
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v27 = v15;
    v21 = v30;
    v20 = v31;
    v19(v30, v6, v31);
    v22 = (uint8_t *)swift_slowAlloc();
    v28 = v2;
    v23 = v22;
    *(_DWORD *)v22 = 134217984;
    v32 = v29;
    sub_2496766E4();
    v24 = sub_249676360();
    _os_signpost_emit_with_name_impl(&dword_249630000, v17, v18, v24, v27, "%{public, signpost.description:begin_time}llu", v23, 0xCu);
    MEMORY[0x24BCF4E7C](v23, -1, -1);

    v25 = *(void (**)(char *, uint64_t))(v28 + 8);
    v25(v6, v20);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return ((uint64_t (*)(char *, uint64_t))v25)(v21, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t IntelligenceFragmentCollector.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  LODWORD(v2) = *(unsigned __int8 *)(v2
                                   + *(int *)(type metadata accessor for IntelligenceFragmentCollector.State(0) + 20));
  os_unfair_lock_unlock(v3);
  result = swift_release();
  if ((_DWORD)v2 == 1)
  {
    swift_release();
    sub_24963499C(v0 + OBJC_IVAR____TtC21UIIntelligenceSupport29IntelligenceFragmentCollector__context, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t IntelligenceFragmentCollector.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  LODWORD(v2) = *(unsigned __int8 *)(v2
                                   + *(int *)(type metadata accessor for IntelligenceFragmentCollector.State(0) + 20));
  os_unfair_lock_unlock(v3);
  result = swift_release();
  if ((_DWORD)v2 == 1)
  {
    swift_release();
    sub_24963499C(v0 + OBJC_IVAR____TtC21UIIntelligenceSupport29IntelligenceFragmentCollector__context, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24964E62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B4D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_24964E674(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

uint64_t sub_24964E6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t (*v8)(_QWORD);
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  __int128 v31;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  int v39;
  char v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  _BYTE v44[12];
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  v1 = v0;
  v2 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v44[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for IntelligenceFragmentCollector.InternalContext(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_249634958(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24963E94C((uint64_t)v7, (uint64_t)v4, type metadata accessor for IntelligenceFragment.RemoteContext);
    sub_2496769B4();
    v9 = v4[8];
    v10 = v4[9];
    v11 = v4[10];
    v12 = v4[11];
    v13 = v4[12];
    v14 = v4[13];
    v15 = v4[14];
    v16 = v4[15];
    v17 = *((_QWORD *)v4 + 2);
    v18 = v4[24];
    v19 = v4[25];
    v20 = *((_QWORD *)v4 + 4);
    v21 = v4[40];
    v22 = v4[41];
    v23 = *((_QWORD *)v4 + 6);
    v24 = v4[56];
    v25 = v4[57];
    v26 = v4[58];
    v27 = v4[59];
    v28 = v4[60];
    v29 = v4[61];
    v30 = v4[62];
    v59 = *(_QWORD *)v4;
    LOBYTE(v60) = v9;
    BYTE1(v60) = v10;
    BYTE2(v60) = v11;
    BYTE3(v60) = v12;
    BYTE4(v60) = v13;
    BYTE5(v60) = v14;
    BYTE6(v60) = v15;
    HIBYTE(v60) = v16;
    v61 = v17;
    LOBYTE(v62) = v18;
    BYTE1(v62) = v19;
    v63 = v20;
    LOBYTE(v64) = v21;
    BYTE1(v64) = v22;
    v65 = v23;
    v66 = v24;
    v67 = v25;
    v68 = v26;
    v69 = v27;
    v70 = v28;
    v71 = v29;
    v72 = v30;
    IntelligenceCollectionRequest.hash(into:)();
    v31 = *((_OWORD *)v4 + 5);
    v73 = *((_OWORD *)v4 + 4);
    v74 = v31;
    v75 = *((_OWORD *)v4 + 6);
    v59 = 0x3FF0000000000000;
    v60 = 0;
    v61 = 0;
    v62 = 0x3FF0000000000000;
    v63 = 0;
    v64 = 0;
    sub_24967666C();
    sub_2496769C0();
    sub_24967633C();
    sub_24963EC48(&qword_25786B2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_249676498();
    return sub_24963499C((uint64_t)v4, type metadata accessor for IntelligenceFragment.RemoteContext);
  }
  else
  {
    v33 = v7[8];
    v34 = v7[9];
    v35 = v7[10];
    v36 = v7[11];
    v37 = v7[12];
    v38 = v7[13];
    v39 = v7[14];
    v40 = v7[15];
    v41 = *((_QWORD *)v7 + 2);
    v57 = v7[24];
    v58 = v39;
    v56 = v7[25];
    v55 = *((_QWORD *)v7 + 4);
    v42 = v7[40];
    v53 = v7[41];
    v54 = v42;
    v52 = *((_QWORD *)v7 + 6);
    v51 = v7[56];
    v50 = v7[57];
    v49 = v7[58];
    v48 = v7[59];
    v47 = v7[60];
    v46 = v7[61];
    v45 = v7[62];
    v43 = *(_QWORD *)v7;
    sub_2496769B4();
    v59 = v43;
    LOBYTE(v60) = v33;
    BYTE1(v60) = v34;
    BYTE2(v60) = v35;
    BYTE3(v60) = v36;
    BYTE4(v60) = v37;
    BYTE5(v60) = v38;
    BYTE6(v60) = v58;
    HIBYTE(v60) = v40;
    v61 = v41;
    LOBYTE(v62) = v57;
    BYTE1(v62) = v56;
    v63 = v55;
    LOBYTE(v64) = v54;
    BYTE1(v64) = v53;
    v65 = v52;
    v66 = v51;
    v67 = v50;
    v68 = v49;
    v69 = v48;
    v70 = v47;
    v71 = v46;
    v72 = v45;
    return IntelligenceCollectionRequest.hash(into:)();
  }
}

uint64_t sub_24964EA84()
{
  sub_2496769A8();
  sub_24964E6B0();
  return sub_2496769E4();
}

uint64_t sub_24964EAC4()
{
  sub_2496769A8();
  sub_24964E6B0();
  return sub_2496769E4();
}

uint64_t sub_24964EB00()
{
  return sub_24967639C();
}

uint64_t IntelligenceFragmentCollector.hashValue.getter()
{
  sub_2496769A8();
  sub_2496769B4();
  return sub_2496769E4();
}

uint64_t sub_24964EBB0()
{
  sub_2496769A8();
  sub_2496769B4();
  return sub_2496769E4();
}

uint64_t sub_24964EBF4()
{
  return sub_2496769B4();
}

uint64_t sub_24964EC1C()
{
  sub_2496769A8();
  sub_2496769B4();
  return sub_2496769E4();
}

uint64_t sub_24964EC5C()
{
  return sub_24963EC48(&qword_25786AFE8, type metadata accessor for IntelligenceFragmentCollector, (uint64_t)&protocol conformance descriptor for IntelligenceFragmentCollector);
}

uint64_t type metadata accessor for IntelligenceFragmentCollector(uint64_t a1)
{
  return sub_249649264(a1, (uint64_t *)&unk_25786AFF0);
}

BOOL sub_24964EC9C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24964ECC0()
{
  return type metadata accessor for IntelligenceFragmentCollector(0);
}

uint64_t sub_24964ECC8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IntelligenceFragmentCollector.InternalContext(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for IntelligenceFragmentCollector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IntelligenceFragmentCollector.__allocating_init(request:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of IntelligenceFragmentCollector.__allocating_init(remoteContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

_QWORD *sub_24964ED60(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = (int *)type metadata accessor for IntelligenceFragment();
    v8 = v7[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for IntelligenceFragment.RemoteID(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = sub_24967633C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = v7[6];
    v17 = (char *)v4 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = *(_QWORD *)(v18 + 56);
    v20 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v20;
    if (v19 == 1)
    {
      v21 = *(_OWORD *)(v18 + 48);
      *((_OWORD *)v17 + 2) = *(_OWORD *)(v18 + 32);
      *((_OWORD *)v17 + 3) = v21;
    }
    else
    {
      v17[32] = *(_BYTE *)(v18 + 32);
      *(_QWORD *)(v17 + 36) = *(_QWORD *)(v18 + 36);
      *((_QWORD *)v17 + 6) = *(_QWORD *)(v18 + 48);
      *((_QWORD *)v17 + 7) = v19;
      swift_bridgeObjectRetain();
    }
    v22 = v7[7];
    v23 = (_OWORD *)((char *)v4 + v22);
    v24 = (_OWORD *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v23[2] = v24[2];
    *(_QWORD *)((char *)v4 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
    *(_QWORD *)((char *)v4 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
    v26 = *(int *)(a3 + 24);
    *((_BYTE *)v4 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v27 = (char *)v4 + v26;
    v28 = (uint64_t)a2 + v26;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = *(_BYTE *)(v28 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_24964EF2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for IntelligenceFragment();
  v3 = a1 + *(int *)(v2 + 20);
  v4 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    v5 = sub_24967633C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  }
  if (*(_QWORD *)(a1 + *(int *)(v2 + 24) + 56) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24964EFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for IntelligenceFragment();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_24967633C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v6[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(v16 + 56);
  v18 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
  if (v17 == 1)
  {
    v19 = *(_OWORD *)(v16 + 48);
    *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
    *(_OWORD *)(v15 + 48) = v19;
  }
  else
  {
    *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
    *(_QWORD *)(v15 + 36) = *(_QWORD *)(v16 + 36);
    *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
    *(_QWORD *)(v15 + 56) = v17;
    swift_bridgeObjectRetain();
  }
  v20 = v6[7];
  v21 = (_OWORD *)(a1 + v20);
  v22 = (_OWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v21[2] = v22[2];
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v24 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24964F170(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v39;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = (int *)type metadata accessor for IntelligenceFragment();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      v16 = sub_24967633C();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_24963499C((uint64_t)v9, type metadata accessor for IntelligenceFragment.RemoteID);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v39 = sub_24967633C();
  (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v9, v10, v39);
LABEL_7:
  v18 = v7[6];
  v19 = a1 + v18;
  v20 = (__int128 *)((char *)a2 + v18);
  v21 = *(_QWORD *)(a1 + v18 + 56);
  v22 = *(uint64_t *)((char *)a2 + v18 + 56);
  if (v21 == 1)
  {
    v23 = *v20;
    v24 = v20[1];
    if (v22 == 1)
    {
      v25 = v20[3];
      *(_OWORD *)(v19 + 32) = v20[2];
      *(_OWORD *)(v19 + 48) = v25;
      *(_OWORD *)v19 = v23;
      *(_OWORD *)(v19 + 16) = v24;
    }
    else
    {
      *(_BYTE *)(v19 + 32) = *((_BYTE *)v20 + 32);
      *(_OWORD *)v19 = v23;
      *(_OWORD *)(v19 + 16) = v24;
      *(_DWORD *)(v19 + 36) = *((_DWORD *)v20 + 9);
      *(_DWORD *)(v19 + 40) = *((_DWORD *)v20 + 10);
      *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
      *(_QWORD *)(v19 + 56) = *((_QWORD *)v20 + 7);
      swift_bridgeObjectRetain();
    }
  }
  else if (v22 == 1)
  {
    sub_24964F420(v19);
    v26 = v20[3];
    v28 = *v20;
    v27 = v20[1];
    *(_OWORD *)(v19 + 32) = v20[2];
    *(_OWORD *)(v19 + 48) = v26;
    *(_OWORD *)v19 = v28;
    *(_OWORD *)(v19 + 16) = v27;
  }
  else
  {
    v29 = *v20;
    v30 = v20[1];
    *(_BYTE *)(v19 + 32) = *((_BYTE *)v20 + 32);
    *(_OWORD *)v19 = v29;
    *(_OWORD *)(v19 + 16) = v30;
    *(_DWORD *)(v19 + 36) = *((_DWORD *)v20 + 9);
    *(_DWORD *)(v19 + 40) = *((_DWORD *)v20 + 10);
    *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
    *(_QWORD *)(v19 + 56) = *((_QWORD *)v20 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v31 = v7[7];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  v32[2] = v33[2];
  v32[3] = v33[3];
  v32[4] = v33[4];
  v32[5] = v33[5];
  *(_QWORD *)(a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v34 = *(int *)(a3 + 24);
  v35 = a1 + v34;
  v36 = (uint64_t *)((char *)a2 + v34);
  v37 = *v36;
  *(_BYTE *)(v35 + 8) = *((_BYTE *)v36 + 8);
  *(_QWORD *)v35 = v37;
  return a1;
}

uint64_t sub_24964F420(uint64_t a1)
{
  destroy for IntelligenceProcessInfo();
  return a1;
}

uint64_t sub_24964F454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for IntelligenceFragment();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_24967633C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v6[6];
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v16[3];
  v15[2] = v16[2];
  v15[3] = v18;
  v19 = v6[7];
  v20 = (_OWORD *)(a1 + v19);
  v21 = (_OWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v20[2] = v21[2];
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v23 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  return a1;
}

uint64_t sub_24964F5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for IntelligenceFragment();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      v15 = sub_24967633C();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_24963499C((uint64_t)v8, type metadata accessor for IntelligenceFragment.RemoteID);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v32 = sub_24967633C();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v8, v9, v32);
LABEL_7:
  v17 = v6[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (*(_QWORD *)(a1 + v17 + 56) != 1)
  {
    v20 = *(_QWORD *)(v19 + 56);
    if (v20 != 1)
    {
      v23 = *(_OWORD *)(v19 + 16);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *(_OWORD *)(v18 + 16) = v23;
      *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
      *(_QWORD *)(v18 + 36) = *(_QWORD *)(v19 + 36);
      *(_QWORD *)(v18 + 48) = *(_QWORD *)(v19 + 48);
      *(_QWORD *)(v18 + 56) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_24964F420(v18);
  }
  v21 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v21;
  v22 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v22;
LABEL_12:
  v24 = v6[7];
  v25 = (_OWORD *)(a1 + v24);
  v26 = (_OWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  swift_bridgeObjectRelease();
  v28 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  return a1;
}

uint64_t sub_24964F7C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24964F7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for IntelligenceFragment();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_24964F85C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24964F868(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for IntelligenceFragment();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_24964F8E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IntelligenceFragment();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_OWORD *sub_24964F95C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (_OWORD *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    *(_OWORD *)((char *)a1 + 47) = *(_OWORD *)((char *)a2 + 47);
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    a1[6] = a2[6];
    v9 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_24967633C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_24964FA4C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = a1 + *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
    v4 = sub_24967633C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_OWORD *sub_24964FAA8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    *(_OWORD *)((char *)a1 + 47) = *(_OWORD *)((char *)a2 + 47);
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    a1[6] = a2[6];
    v8 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24967633C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

__int128 *sub_24964FB70(__int128 *a1, __int128 *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_24963499C((uint64_t)a1, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = *a2;
      v7 = a2[1];
      v8 = a2[2];
      *(__int128 *)((char *)a1 + 47) = *(__int128 *)((char *)a2 + 47);
      a1[1] = v7;
      a1[2] = v8;
      *a1 = v6;
      v9 = a2[4];
      v10 = a2[6];
      a1[5] = a2[5];
      a1[6] = v10;
      a1[4] = v9;
      v11 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_24967633C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_OWORD *sub_24964FC50(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    *(_OWORD *)((char *)a1 + 47) = *(_OWORD *)((char *)a2 + 47);
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    a1[6] = a2[6];
    v8 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24967633C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_24964FD18(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_24963499C((uint64_t)a1, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      *(_OWORD *)((char *)a1 + 47) = *(_OWORD *)((char *)a2 + 47);
      v7 = a2[5];
      a1[4] = a2[4];
      a1[5] = v7;
      a1[6] = a2[6];
      v8 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_24967633C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s7ContentOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t _s7ContentOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_24964FE14()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24964FE24()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IntelligenceFragment.RemoteContext(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_24964FE94()
{
  return sub_24963EC48(&qword_25786B4E0, type metadata accessor for IntelligenceFragmentCollector.InternalContext, (uint64_t)&unk_2496792B0);
}

void sub_24964FEC0(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13;

  v13 = sub_249676360();
  _os_signpost_emit_with_name_impl(&dword_249630000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_24964FF40(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_24964FF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  __int128 v62;
  __int128 v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;

  v4 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntelligenceFragmentCollector.InternalContext(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v68 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B4E8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_249634958(a1, (uint64_t)v16, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
  sub_249634958(a2, v17, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_249634958((uint64_t)v16, (uint64_t)v12, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      *((_QWORD *)&v79 + 1) = *((_QWORD *)v12 + 1);
      *(_QWORD *)&v80 = *((_QWORD *)v12 + 2);
      WORD4(v80) = *((_WORD *)v12 + 12);
      *(_QWORD *)&v81 = *((_QWORD *)v12 + 4);
      WORD4(v81) = *((_WORD *)v12 + 20);
      v82 = *((_QWORD *)v12 + 6);
      v83 = v12[56];
      v84 = v12[57];
      v85 = v12[58];
      v86 = v12[59];
      v87 = v12[60];
      v88 = v12[61];
      v65 = *(_QWORD *)v12;
      v89 = v12[62];
      *((_QWORD *)&v68 + 1) = *(_QWORD *)(v17 + 8);
      *(_QWORD *)&v69 = *(_QWORD *)(v17 + 16);
      WORD4(v69) = *(_WORD *)(v17 + 24);
      *(_QWORD *)&v70 = *(_QWORD *)(v17 + 32);
      WORD4(v70) = *(_WORD *)(v17 + 40);
      v71 = *(_QWORD *)(v17 + 48);
      v72 = *(_BYTE *)(v17 + 56);
      v73 = *(_BYTE *)(v17 + 57);
      v74 = *(_BYTE *)(v17 + 58);
      v75 = *(_BYTE *)(v17 + 59);
      v76 = *(_BYTE *)(v17 + 60);
      v77 = *(_BYTE *)(v17 + 61);
      v66 = *(_QWORD *)v17;
      v78 = *(_BYTE *)(v17 + 62);
      *(_QWORD *)&v79 = v65;
      *(_QWORD *)&v68 = v66;
      v64 = _s21UIIntelligenceSupport29IntelligenceCollectionRequestV2eeoiySbAC_ACtFZ_0((unsigned int *)&v79, (unsigned int *)&v68);
      sub_24963499C((uint64_t)v16, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
      return v64 & 1;
    }
    goto LABEL_10;
  }
  sub_249634958((uint64_t)v16, (uint64_t)v10, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_24963499C((uint64_t)v10, type metadata accessor for IntelligenceFragment.RemoteContext);
LABEL_10:
    sub_24963EB88((uint64_t)v16, &qword_25786B4E8);
LABEL_12:
    v64 = 0;
    return v64 & 1;
  }
  sub_24963E94C(v17, (uint64_t)v6, type metadata accessor for IntelligenceFragment.RemoteContext);
  v18 = v10[8];
  v19 = v10[9];
  v20 = v10[10];
  v21 = v10[11];
  v22 = v10[12];
  v23 = v10[13];
  v24 = v10[14];
  v25 = v10[15];
  v26 = *((_QWORD *)v10 + 2);
  v27 = v10[24];
  v28 = v10[25];
  v29 = *((_QWORD *)v10 + 4);
  v30 = v10[40];
  v31 = v10[41];
  v32 = *((_QWORD *)v10 + 6);
  v33 = v10[56];
  v34 = v10[57];
  v35 = v10[58];
  v36 = v10[59];
  v37 = v10[60];
  v38 = v10[61];
  v39 = v10[62];
  *(_QWORD *)&v79 = *(_QWORD *)v10;
  BYTE8(v79) = v18;
  BYTE9(v79) = v19;
  BYTE10(v79) = v20;
  BYTE11(v79) = v21;
  BYTE12(v79) = v22;
  BYTE13(v79) = v23;
  BYTE14(v79) = v24;
  HIBYTE(v79) = v25;
  *(_QWORD *)&v80 = v26;
  BYTE8(v80) = v27;
  BYTE9(v80) = v28;
  *(_QWORD *)&v81 = v29;
  BYTE8(v81) = v30;
  BYTE9(v81) = v31;
  v82 = v32;
  v83 = v33;
  v84 = v34;
  v85 = v35;
  v86 = v36;
  v87 = v37;
  v88 = v38;
  v89 = v39;
  v40 = v6[8];
  v41 = v6[9];
  v42 = v6[10];
  v43 = v6[11];
  v44 = v6[12];
  v45 = v6[13];
  v46 = v6[14];
  v47 = v6[15];
  v48 = *((_QWORD *)v6 + 2);
  v49 = v6[24];
  v50 = v6[25];
  v51 = *((_QWORD *)v6 + 4);
  v52 = v6[40];
  v53 = v6[41];
  v54 = *((_QWORD *)v6 + 6);
  v55 = v6[56];
  v56 = v6[57];
  v57 = v6[58];
  v58 = v6[59];
  v59 = v6[60];
  v60 = v6[61];
  v61 = v6[62];
  *(_QWORD *)&v68 = *(_QWORD *)v6;
  BYTE8(v68) = v40;
  BYTE9(v68) = v41;
  BYTE10(v68) = v42;
  BYTE11(v68) = v43;
  BYTE12(v68) = v44;
  BYTE13(v68) = v45;
  BYTE14(v68) = v46;
  HIBYTE(v68) = v47;
  *(_QWORD *)&v69 = v48;
  BYTE8(v69) = v49;
  BYTE9(v69) = v50;
  *(_QWORD *)&v70 = v51;
  BYTE8(v70) = v52;
  BYTE9(v70) = v53;
  v71 = v54;
  v72 = v55;
  v73 = v56;
  v74 = v57;
  v75 = v58;
  v76 = v59;
  v77 = v60;
  v78 = v61;
  if ((_s21UIIntelligenceSupport29IntelligenceCollectionRequestV2eeoiySbAC_ACtFZ_0((unsigned int *)&v79, (unsigned int *)&v68) & 1) == 0)goto LABEL_11;
  v62 = *((_OWORD *)v10 + 5);
  v68 = *((_OWORD *)v10 + 4);
  v69 = v62;
  v70 = *((_OWORD *)v10 + 6);
  v63 = *((_OWORD *)v6 + 5);
  v79 = *((_OWORD *)v6 + 4);
  v80 = v63;
  v81 = *((_OWORD *)v6 + 6);
  if ((sub_24967666C() & 1) == 0
    || (_s21UIIntelligenceSupport20IntelligenceFragmentV8RemoteIDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
  {
LABEL_11:
    sub_24963499C((uint64_t)v6, type metadata accessor for IntelligenceFragment.RemoteContext);
    sub_24963499C((uint64_t)v10, type metadata accessor for IntelligenceFragment.RemoteContext);
    sub_24963499C((uint64_t)v16, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
    goto LABEL_12;
  }
  sub_24963499C((uint64_t)v6, type metadata accessor for IntelligenceFragment.RemoteContext);
  sub_24963499C((uint64_t)v10, type metadata accessor for IntelligenceFragment.RemoteContext);
  sub_24963499C((uint64_t)v16, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
  v64 = 1;
  return v64 & 1;
}

uint64_t sub_24965050C(uint64_t a1)
{
  uint64_t v1;

  return sub_24964DDCC(a1, *(_QWORD **)(v1 + 16));
}

__n128 sub_249650524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = a1 + *(int *)(type metadata accessor for IntelligenceFragment() + 28);
  result = *(__n128 *)v2;
  v5 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 32) = v5;
  *(__n128 *)v3 = result;
  return result;
}

unint64_t sub_249650564()
{
  unint64_t result;

  result = qword_25786B4F0;
  if (!qword_25786B4F0)
  {
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BEE45A8], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_25786B4F0);
  }
  return result;
}

uint64_t sub_2496505A8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2496505B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = sub_24967645C();
  v17 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_249676480();
  v4 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_249676468();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE328);
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = 0;
  *(_DWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v0 + 32) = v11;
  sub_249653234();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5480], v7);
  v12 = (void *)sub_249676690();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  aBlock[4] = sub_249653590;
  v20 = v0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24965B7DC;
  aBlock[3] = &block_descriptor_3;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_249676474();
  v18 = MEMORY[0x24BEE4AF8];
  sub_2496532C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE3F8);
  sub_249653308();
  sub_249676714();
  MEMORY[0x24BCF4648](0, v6, v3, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  swift_release();
  return v0;
}

uint64_t sub_249650814(uint64_t *a1)
{
  os_unfair_lock_s *v2;
  uint64_t v4;

  v2 = (os_unfair_lock_s *)a1[4];
  swift_retain();
  os_unfair_lock_lock(v2 + 10);
  sub_2496511C8((uint64_t)&v2[4], a1, &v4);
  os_unfair_lock_unlock(v2 + 10);
  swift_release();
  return swift_release();
}

uint64_t sub_249650888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_24967645C();
  v18 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_249676480();
  v5 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_249676468();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 40));
  *(_BYTE *)(v12 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 40));
  swift_release();
  sub_249653234();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5480], v8);
  v13 = (void *)sub_249676690();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  aBlock[4] = sub_2496537F8;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24965B7DC;
  aBlock[3] = &block_descriptor_11;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_249676474();
  v19 = MEMORY[0x24BEE4AF8];
  sub_2496532C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE3F8);
  sub_249653308();
  sub_249676714();
  MEMORY[0x24BCF4648](0, v7, v4, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  return swift_release();
}

uint64_t sub_249650AD8(uint64_t a1)
{
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(a1 + 32);
  swift_retain();
  os_unfair_lock_lock(v1 + 10);
  sub_249650B38((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v1 + 10);
  return swift_release();
}

uint64_t sub_249650B38(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  v1 = result;
  if (*(_QWORD *)(result + 8))
  {
    sub_249676420();
    result = swift_release();
  }
  *(_QWORD *)(v1 + 8) = 0;
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_beginAccess();
    v3 = *(_DWORD *)(v2 + 56);
    if (v3 != -1)
    {
      notify_cancel(v3);
      *(_DWORD *)(v2 + 56) = -1;
    }
    result = swift_release();
  }
  *(_QWORD *)(v1 + 16) = 0;
  return result;
}

void sub_249650BE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  os_unfair_lock_s *v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  os_signpost_type_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint8_t *v18;
  os_signpost_id_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41[3];

  v3 = sub_24967636C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v38 - v8;
  v10 = *(os_unfair_lock_s **)(v1 + 32);
  swift_retain();
  os_unfair_lock_lock(v10 + 10);
  v11 = 0;
  sub_2496511C8(v41, &v10[4], v1);
  os_unfair_lock_unlock(v10 + 10);
  v12 = v41[0];
  swift_release();
  v39 = v12;
  if (v12)
  {
    if (qword_2544AE028 != -1)
      swift_once();
    v13 = sub_249676390();
    __swift_project_value_buffer(v13, (uint64_t)qword_2544AE010);
    sub_249676384();
    sub_249676354();
    swift_bridgeObjectRetain();
    v14 = sub_249676384();
    v15 = sub_24967669C();
    if ((sub_2496766C0() & 1) != 0)
    {
      v38 = 0;
      v16 = v4;
      v17 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      v17(v7, v9, v3);
      v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v18 = 134349056;
      v41[0] = *(_QWORD *)(a1 + 16);
      sub_2496766E4();
      swift_bridgeObjectRelease();
      v19 = sub_249676360();
      _os_signpost_emit_with_name_impl(&dword_249630000, v14, v15, v19, "TransferFragments", "count=%{public}ld", v18, 0xCu);
      MEMORY[0x24BCF4E7C](v18, -1, -1);

      v4 = v16;
      v11 = v38;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    else
    {
      swift_bridgeObjectRelease();

      v17 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    }
    v17(v7, v9, v3);
    sub_2496763B4();
    swift_allocObject();
    v23 = sub_2496763A8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    v41[0] = a1;
    v41[1] = v23;
    sub_2496535CC();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_249676414();
    if (v11)
    {
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_2544AE3D0 != -1)
        swift_once();
      v24 = sub_2496763D8();
      __swift_project_value_buffer(v24, (uint64_t)qword_2544AE3D8);
      v25 = v11;
      v26 = v11;
      v27 = v11;
      v28 = v11;
      v29 = sub_2496763C0();
      v30 = sub_249676648();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc();
        v32 = swift_slowAlloc();
        v41[0] = v32;
        *(_DWORD *)v31 = 136446466;
        swift_getErrorValue();
        v33 = sub_24967699C();
        v40 = sub_249652C48(v33, v34, v41);
        sub_2496766E4();
        swift_bridgeObjectRelease();

        *(_WORD *)(v31 + 12) = 2082;
        v40 = (uint64_t)v11;
        v35 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25786B4F8);
        v36 = sub_249676510();
        v40 = sub_249652C48(v36, v37, v41);
        sub_2496766E4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_249630000, v29, v30, "error sending transfer fragments XPC message: %{public}s; underlying error: %{public}s",
          (uint8_t *)v31,
          0x16u);
        swift_arrayDestroy();
        MEMORY[0x24BCF4E7C](v32, -1, -1);
        MEMORY[0x24BCF4E7C](v31, -1, -1);

        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();

      }
    }
    else
    {
      swift_release();
      swift_release_n();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_2544AE3D0 != -1)
      swift_once();
    v20 = sub_2496763D8();
    __swift_project_value_buffer(v20, (uint64_t)qword_2544AE3D8);
    v39 = sub_2496763C0();
    v21 = sub_249676648();
    if (os_log_type_enabled(v39, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_249630000, v39, v21, "missing client session inside transferFragments", v22, 2u);
      MEMORY[0x24BCF4E7C](v22, -1, -1);
    }

  }
}

uint64_t sub_2496511C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[5];

  v7 = *a2;
  v8 = sub_249676408();
  result = MEMORY[0x24BDAC7A8](v8);
  if ((*(_BYTE *)a1 & 1) != 0)
  {
    *a3 = 0;
    return result;
  }
  v10 = *(_QWORD *)(a1 + 8);
  if (!v10)
  {
    if (!*(_QWORD *)(a1 + 16))
    {
      type metadata accessor for XPCRelaunchNotificationHandler();
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 32) = 0u;
      *(_QWORD *)(v11 + 48) = 0;
      *(_OWORD *)(v11 + 16) = 0u;
      *(_DWORD *)(v11 + 56) = -1;
      sub_24967386C();
      *(_QWORD *)(a1 + 16) = v11;
      v31[3] = v7;
      v31[4] = (uint64_t)&off_251A9C1A8;
      v31[0] = (uint64_t)a2;
      swift_beginAccess();
      swift_retain();
      sub_249653610((uint64_t)v31, v11 + 16);
      swift_endAccess();
    }
    if (qword_2544AE3D0 != -1)
      swift_once();
    v12 = sub_2496763D8();
    __swift_project_value_buffer(v12, (uint64_t)qword_2544AE3D8);
    v13 = sub_2496763C0();
    v14 = sub_249676654();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_249630000, v13, v14, "establishing connection to agent", v15, 2u);
      MEMORY[0x24BCF4E7C](v15, -1, -1);
    }

    xpc_connection_create_mach_service("com.apple.uiintelligencesupport.agent", 0, 0);
    xpc_connection_set_non_launching();
    sub_24967642C();
    swift_allocObject();
    swift_weakInit();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    swift_retain();
    sub_2496763FC();
    v16 = sub_2496763F0();
    if (v3)
    {
      swift_release();
      swift_release();
      v17 = v3;
      v18 = v3;
      v19 = v3;
      v20 = v3;
      v21 = sub_2496763C0();
      v22 = sub_249676648();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v30 = swift_slowAlloc();
        v31[0] = v30;
        *(_DWORD *)v23 = 136446722;
        sub_249652C48(0xD000000000000025, 0x800000024967D6C0, v31);
        sub_2496766E4();
        *(_WORD *)(v23 + 12) = 2082;
        swift_getErrorValue();
        v24 = sub_24967699C();
        sub_249652C48(v24, v25, v31);
        sub_2496766E4();
        swift_bridgeObjectRelease();

        *(_WORD *)(v23 + 22) = 2082;
        v26 = v3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25786B4F8);
        v27 = sub_249676510();
        sub_249652C48(v27, v28, v31);
        sub_2496766E4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_249630000, v21, v22, "unable to create XPCSession for service \"%{public}s\": %{public}s; underlying error: %{public}s",
          (uint8_t *)v23,
          0x20u);
        swift_arrayDestroy();
        MEMORY[0x24BCF4E7C](v30, -1, -1);
        MEMORY[0x24BCF4E7C](v23, -1, -1);

      }
      else
      {

      }
      if (!*(_QWORD *)(a1 + 8))
        goto LABEL_18;
    }
    else
    {
      v29 = v16;
      swift_release();
      swift_release();
      swift_release();
      *(_QWORD *)(a1 + 8) = v29;
      if (!v29)
        goto LABEL_18;
    }
    sub_2496535CC();
    v31[0] = 0;
    v31[1] = 0;
    sub_249676414();
LABEL_18:
    v10 = *(_QWORD *)(a1 + 8);
  }
  *a3 = v10;
  return swift_retain();
}

double sub_2496518E4@<D0>(uint64_t a1@<X8>)
{
  double result;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_249651964(a1);
    swift_release();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double sub_249651964@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  uint8_t *v20;
  void (*v21)(char *, uint64_t);
  double result;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  uint64_t v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  uint64_t v57;
  unsigned __int8 v58;
  unsigned __int8 v59;
  uint64_t v60;
  unsigned __int8 v61;
  unsigned __int8 v62;
  unsigned __int8 v63;
  unsigned __int8 v64;
  unsigned __int8 v65;
  unsigned __int8 v66;
  unsigned __int8 v67;

  v2 = v1;
  v4 = sub_24967636C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v23 - v9;
  v11 = *(_QWORD *)(v1 + 32);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 40));
  v12 = *(_BYTE *)(v11 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 40));
  swift_release();
  if ((v12 & 1) == 0)
  {
    sub_249653778();
    sub_249676450();
    v13 = v45;
    LODWORD(v14) = v46;
    v43 = v48;
    v44 = v47;
    v41 = v50;
    v42 = v49;
    v39 = v52;
    v40 = v51;
    v38 = v53;
    v37 = v54;
    v36 = v55;
    v35 = v56;
    v34 = v57;
    v33 = v58;
    v32 = v59;
    v31 = v60;
    v30 = v61;
    v29 = v62;
    v28 = v63;
    v27 = v64;
    v26 = v65;
    v25 = v66;
    v24 = v67;
    if (qword_25786AC50 != -1)
      swift_once();
    v15 = sub_249676390();
    __swift_project_value_buffer(v15, (uint64_t)qword_25786B000);
    sub_249676384();
    swift_unknownObjectRetain();
    sub_249676348();
    v16 = sub_249676384();
    v17 = sub_2496766A8();
    if ((sub_2496766C0() & 1) != 0)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
      v18 = (uint8_t *)swift_slowAlloc();
      v23 = (int)v14;
      v14 = v18;
      *(_WORD *)v18 = 0;
      v19 = sub_249676360();
      _os_signpost_emit_with_name_impl(&dword_249630000, v16, v17, v19, "ReceiveRequest", "", v14, 2u);
      v20 = v14;
      LOBYTE(v14) = v23;
      MEMORY[0x24BCF4E7C](v20, -1, -1);

      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v10, v4);
      v21(v8, v4);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
    if (MEMORY[0x24BCF4EF4](v2 + 16))
    {
      v45 = v13;
      v46 = v14;
      v47 = v44;
      v48 = v43;
      v49 = v42;
      v50 = v41;
      v51 = v40;
      v52 = v39;
      v53 = v38;
      v54 = v37;
      v55 = v36;
      v56 = v35;
      v57 = v34;
      v58 = v33;
      v59 = v32;
      v60 = v31;
      v61 = v30;
      v62 = v29;
      v63 = v28;
      v64 = v27;
      v65 = v26;
      v66 = v25;
      v67 = v24;
      sub_249635774((int *)&v45);
      swift_unknownObjectRelease();
    }
  }
  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_249651F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24[3];

  v4 = sub_249676438();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v23 - v9;
  v11 = a2 + 16;
  if (qword_2544AE3D0 != -1)
    swift_once();
  v12 = sub_2496763D8();
  __swift_project_value_buffer(v12, (uint64_t)qword_2544AE3D8);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v10, a1, v4);
  v14 = sub_2496763C0();
  v15 = sub_249676654();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v23[1] = v11;
    v18 = v17;
    v24[0] = v17;
    *(_DWORD *)v16 = 136446210;
    v23[0] = v16 + 4;
    v13(v8, (uint64_t)v10, v4);
    v19 = sub_249676510();
    v23[2] = sub_249652C48(v19, v20, v24);
    sub_2496766E4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    _os_log_impl(&dword_249630000, v14, v15, "agent connection cancelled (details: %{public}s)", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BCF4E7C](v18, -1, -1);
    MEMORY[0x24BCF4E7C](v16, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v22 = *(_QWORD *)(result + 32);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 40));
    swift_release();
    *(_QWORD *)(v22 + 24) = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 40));
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t static IntelligenceSupportAgentXPCConnection.sendLaunchSentinel()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[12];

  v0 = sub_24967645C();
  v19 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_249676480();
  v17 = *(_QWORD *)(v3 - 8);
  v18 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_249676468();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_249676408();
  MEMORY[0x24BDAC7A8](v10);
  xpc_connection_create_mach_service("com.apple.uiintelligencesupport.agent", 0, 0);
  xpc_connection_set_non_launching();
  sub_24967642C();
  swift_unknownObjectRetain();
  sub_2496763FC();
  v11 = sub_2496763E4();
  sub_249653234();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5490], v6);
  swift_retain();
  v12 = (void *)sub_249676690();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v11;
  v13[3] = 0xD000000000000025;
  v13[4] = 0x800000024967D6C0;
  aBlock[4] = sub_24965329C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24965B7DC;
  aBlock[3] = &block_descriptor_0;
  v14 = _Block_copy(aBlock);
  sub_249676474();
  aBlock[10] = MEMORY[0x24BEE4AF8];
  sub_2496532C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE3F8);
  sub_249653308();
  sub_249676714();
  MEMORY[0x24BCF4648](0, v5, v2, v14);
  _Block_release(v14);
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v18);
  swift_release();
  return v11;
}

uint64_t sub_2496527A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_249676444();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_2496527DC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_2544AE3D0 != -1)
    swift_once();
  v0 = sub_2496763D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_2544AE3D8);
  v1 = sub_2496763C0();
  v2 = sub_24967663C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_249630000, v1, v2, "Sending launch sentinel", v3, 2u);
    MEMORY[0x24BCF4E7C](v3, -1, -1);
  }

  sub_2496535CC();
  return sub_249676414();
}

uint64_t IntelligenceSupportAgentXPCConnection.deinit()
{
  uint64_t v0;

  sub_249653354(v0 + 16);
  swift_release();
  return v0;
}

uint64_t IntelligenceSupportAgentXPCConnection.__deallocating_deinit()
{
  uint64_t v0;

  sub_249653354(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_249652B98(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_249652BA8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

uint64_t sub_249652BB8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_249652BD8(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_249652C48(v6, v7, a3);
  v8 = *a1 + 8;
  sub_2496766E4();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_249652C48(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_249652D18(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2496537BC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2496537BC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_249652D18(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2496766F0();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_249652ED0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2496767D4();
  if (!v8)
  {
    sub_2496767EC();
    __break(1u);
LABEL_17:
    result = sub_249676828();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_249652ED0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_249652F64(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2496530D8(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2496530D8(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_249652F64(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_24964AB98(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2496767A4();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2496767EC();
      __break(1u);
LABEL_10:
      v2 = sub_249676558();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_249676828();
    __break(1u);
LABEL_14:
    result = sub_2496767EC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_2496530D8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B4A0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_249676828();
  __break(1u);
  return result;
}

_BYTE **sub_249653224(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

unint64_t sub_249653234()
{
  unint64_t result;

  result = qword_2544AE408;
  if (!qword_2544AE408)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2544AE408);
  }
  return result;
}

uint64_t sub_249653270()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24965329C()
{
  return sub_2496527DC();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_2496532C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544AE3F0;
  if (!qword_2544AE3F0)
  {
    v1 = sub_24967645C();
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2544AE3F0);
  }
  return result;
}

unint64_t sub_249653308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544AE400;
  if (!qword_2544AE400)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2544AE3F8);
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2544AE400);
  }
  return result;
}

uint64_t sub_249653354(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t type metadata accessor for IntelligenceSupportAgentXPCConnection()
{
  return objc_opt_self();
}

uint64_t method lookup function for IntelligenceSupportAgentXPCConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_2496533A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for IntelligenceSupportAgentXPCConnection.State()
{
  swift_release();
  return swift_release();
}

uint64_t _s21UIIntelligenceSupport37IntelligenceSupportAgentXPCConnectionC5StateVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for IntelligenceSupportAgentXPCConnection.State(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IntelligenceSupportAgentXPCConnection.State(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceSupportAgentXPCConnection.State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceSupportAgentXPCConnection.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceSupportAgentXPCConnection.State()
{
  return &type metadata for IntelligenceSupportAgentXPCConnection.State;
}

uint64_t sub_249653590()
{
  uint64_t *v0;

  return sub_249650814(v0);
}

uint64_t sub_249653598()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

double sub_2496535BC@<D0>(uint64_t a1@<X8>)
{
  return sub_2496518E4(a1);
}

uint64_t sub_2496535C4(uint64_t a1)
{
  uint64_t v1;

  return sub_249651F98(a1, v1);
}

unint64_t sub_2496535CC()
{
  unint64_t result;

  result = qword_2544AE3A8;
  if (!qword_2544AE3A8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for XPCClientMessage, &type metadata for XPCClientMessage);
    atomic_store(result, (unint64_t *)&qword_2544AE3A8);
  }
  return result;
}

uint64_t sub_249653610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_249653658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  os_unfair_lock_s *v6;
  uint64_t v8;

  v1 = v0;
  if (qword_2544AE3D0 != -1)
    swift_once();
  v2 = sub_2496763D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_2544AE3D8);
  v3 = sub_2496763C0();
  v4 = sub_24967663C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_249630000, v3, v4, "Agent has launched", v5, 2u);
    MEMORY[0x24BCF4E7C](v5, -1, -1);
  }

  v6 = *(os_unfair_lock_s **)(v1 + 32);
  swift_retain();
  os_unfair_lock_lock(v6 + 10);
  sub_2496511C8(&v8, &v6[4], v1);
  os_unfair_lock_unlock(v6 + 10);
  swift_release();
  return swift_release();
}

unint64_t sub_249653778()
{
  unint64_t result;

  result = qword_25786AC60[0];
  if (!qword_25786AC60[0])
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for XPCAgentMessage, &type metadata for XPCAgentMessage);
    atomic_store(result, qword_25786AC60);
  }
  return result;
}

uint64_t sub_2496537BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2496537F8()
{
  uint64_t v0;

  return sub_249650AD8(v0);
}

double IntelligenceFragment.init()@<D0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  _QWORD *v7;
  uint64_t v8;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  v2 = (int *)type metadata accessor for IntelligenceFragment();
  v3 = a1 + v2[5];
  v4 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = a1 + v2[6];
  result = 0.0;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)v5 = 0u;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 56) = 1;
  v7 = (_QWORD *)(a1 + v2[7]);
  *v7 = 0x3FF0000000000000;
  v7[1] = 0;
  v7[2] = 0;
  v7[3] = 0x3FF0000000000000;
  v7[4] = 0;
  v7[5] = 0;
  v8 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + v2[8]) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + v2[9]) = v8;
  return result;
}

uint64_t type metadata accessor for IntelligenceFragment()
{
  uint64_t result;

  result = qword_2544ADFD0;
  if (!qword_2544ADFD0)
    return swift_getSingletonMetadata();
  return result;
}

void IntelligenceFragment.requestID.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t IntelligenceFragment.requestID.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t (*IntelligenceFragment.requestID.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceFragment.remoteID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IntelligenceFragment() + 20);
  return sub_249653964(v3, a1);
}

uint64_t sub_249653964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t IntelligenceFragment.remoteID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IntelligenceFragment() + 20);
  return sub_2496539DC(a1, v3);
}

uint64_t sub_2496539DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*IntelligenceFragment.remoteID.modify())()
{
  type metadata accessor for IntelligenceFragment();
  return nullsub_1;
}

uint64_t IntelligenceFragment.processInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IntelligenceFragment() + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  return sub_24963E990(v4, v5, v6, v7, v8, v9, v10, v11);
}

__n128 IntelligenceFragment.processInfo.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IntelligenceFragment() + 24));
  sub_24963E9A4(*v4, v4[1], v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]);
  *(_OWORD *)v4 = v8;
  *((_OWORD *)v4 + 1) = v7;
  result = v6;
  *((__n128 *)v4 + 2) = v6;
  v4[6] = v2;
  v4[7] = v3;
  return result;
}

uint64_t (*IntelligenceFragment.processInfo.modify())()
{
  type metadata accessor for IntelligenceFragment();
  return nullsub_1;
}

uint64_t IntelligenceFragment.bundleID.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for IntelligenceFragment() + 24));
  v2 = v1[7];
  if (v2 == 1)
    v3 = 0;
  else
    v3 = v1[6];
  sub_24963E990(*v1, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v2);
  return v3;
}

uint64_t sub_249653B8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for IntelligenceFragment() + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  if (v11 == 1)
    v12 = 0;
  else
    v12 = v3[6];
  if (v11 == 1)
    v13 = 0;
  else
    v13 = v11;
  *a2 = v12;
  a2[1] = v13;
  return sub_24963E990(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_249653BDC(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  result = type metadata accessor for IntelligenceFragment();
  v5 = a2 + *(int *)(result + 24);
  if (*(_QWORD *)(v5 + 56) != 1)
  {
    v8 = a1;
    v6 = *a1;
    v7 = v8[1];
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v5 + 48) = v6;
    *(_QWORD *)(v5 + 56) = v7;
  }
  return result;
}

uint64_t IntelligenceFragment.bundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for IntelligenceFragment() + 24);
  if (*(_QWORD *)(v5 + 56) == 1)
    return swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 48) = a1;
  *(_QWORD *)(v5 + 56) = a2;
  return result;
}

uint64_t (*IntelligenceFragment.bundleID.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IntelligenceFragment() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  v8 = v4[3];
  v9 = v4[4];
  v10 = v4[5];
  v11 = v4[6];
  v12 = v4[7];
  if (v12 == 1)
    v13 = 0;
  else
    v13 = v4[6];
  if (v12 == 1)
    v14 = 0;
  else
    v14 = v12;
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v14;
  sub_24963E990(v5, v6, v7, v8, v9, v10, v11, v12);
  return sub_249653CFC;
}

uint64_t sub_249653CFC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v2 = *((int *)a1 + 6);
  v3 = a1[2];
  if ((a2 & 1) != 0)
  {
    v4 = v3 + v2;
    if (*(_QWORD *)(v3 + v2 + 56) != 1)
    {
      v10 = *a1;
      v9 = a1[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v4 + 48) = v10;
      *(_QWORD *)(v4 + 56) = v9;
    }
  }
  else
  {
    v5 = v3 + v2;
    v6 = a1[1];
    if (*(_QWORD *)(v3 + v2 + 56) != 1)
    {
      v7 = *a1;
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v5 + 48) = v7;
      *(_QWORD *)(v5 + 56) = v6;
      return result;
    }
  }
  return swift_bridgeObjectRelease();
}

__n128 IntelligenceFragment.boundingBoxTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __n128 result;

  v3 = v1 + *(int *)(type metadata accessor for IntelligenceFragment() + 28);
  v4 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 IntelligenceFragment.boundingBoxTransform.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __n128 result;

  v3 = v1 + *(int *)(type metadata accessor for IntelligenceFragment() + 28);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v3 + 32) = result;
  return result;
}

uint64_t (*IntelligenceFragment.boundingBoxTransform.modify())()
{
  type metadata accessor for IntelligenceFragment();
  return nullsub_1;
}

uint64_t IntelligenceFragment.elements.getter()
{
  type metadata accessor for IntelligenceFragment();
  return swift_bridgeObjectRetain();
}

uint64_t IntelligenceFragment.elements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for IntelligenceFragment() + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*IntelligenceFragment.elements.modify())()
{
  type metadata accessor for IntelligenceFragment();
  return nullsub_1;
}

uint64_t IntelligenceFragment.commands.getter()
{
  type metadata accessor for IntelligenceFragment();
  return swift_bridgeObjectRetain();
}

uint64_t IntelligenceFragment.commands.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for IntelligenceFragment() + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*IntelligenceFragment.commands.modify())()
{
  type metadata accessor for IntelligenceFragment();
  return nullsub_1;
}

uint64_t IntelligenceFragment.visitAllElements(_:)(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  result = type metadata accessor for IntelligenceFragment();
  v6 = *(_QWORD *)(v2 + *(int *)(result + 32));
  v16 = *(_QWORD *)(v6 + 16);
  if (v16)
  {
    v7 = type metadata accessor for IntelligenceElement();
    v8 = *(_QWORD *)(v7 - 8);
    v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v9 = v6 + v15;
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    for (i = 0; i != v16; ++i)
    {
      ((void (*)(uint64_t))a1)(v9 + v10 * i);
      v12 = *(_QWORD *)(v9 + v10 * i + *(int *)(v7 + 24));
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        v14 = v12 + v15;
        swift_bridgeObjectRetain();
        do
        {
          sub_24963A2D0(v14, a1, a2);
          v14 += v10;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24965406C(char *a1)
{
  sub_249673F10(*a1);
}

void sub_249654078()
{
  char *v0;

  sub_24966E34C(*v0);
}

void sub_249654080(uint64_t a1)
{
  char *v1;

  sub_24966E5E4(a1, *v1);
}

void sub_249654088(uint64_t a1)
{
  char *v1;

  sub_24966E850(a1, *v1);
}

uint64_t sub_249654090@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249656BD0();
  *a1 = result;
  return result;
}

uint64_t sub_2496540BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2496540F0 + 4 * byte_2496793D0[*v0]))();
}

void sub_2496540F0(_QWORD *a1@<X8>)
{
  *a1 = 0x444965746F6D6572;
  a1[1] = 0xE800000000000000;
}

void sub_24965410C(_QWORD *a1@<X8>)
{
  *a1 = 0x49737365636F7270;
  a1[1] = 0xEB000000006F666ELL;
}

void sub_249654130(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x800000024967CF50;
}

void sub_249654150(_QWORD *a1@<X8>)
{
  *a1 = 0x73746E656D656C65;
  a1[1] = 0xE800000000000000;
}

void sub_24965416C(_QWORD *a1@<X8>)
{
  *a1 = 0x73646E616D6D6F63;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_249654188()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2496541BC + 4 * byte_2496793D6[*v0]))(0x4974736575716572, 0xE900000000000044);
}

uint64_t sub_2496541BC()
{
  return 0x444965746F6D6572;
}

uint64_t sub_2496541D4()
{
  return 0x49737365636F7270;
}

unint64_t sub_2496541F4()
{
  return 0xD000000000000014;
}

uint64_t sub_249654210()
{
  return 0x73746E656D656C65;
}

uint64_t sub_249654228()
{
  return 0x73646E616D6D6F63;
}

uint64_t sub_249654240@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249656BD0();
  *a1 = result;
  return result;
}

void sub_249654264(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_249654270()
{
  sub_249655C2C();
  return sub_249676A20();
}

uint64_t sub_249654298()
{
  sub_249655C2C();
  return sub_249676A2C();
}

uint64_t IntelligenceFragment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B0B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249655C2C();
  sub_249676A14();
  v9 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)&v17 = *(_QWORD *)v3;
  BYTE8(v17) = v9;
  v21 = 0;
  sub_249655C70();
  sub_249676900();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for IntelligenceFragment();
    LOBYTE(v17) = 1;
    type metadata accessor for IntelligenceFragment.RemoteID(0);
    sub_24963EC48(&qword_25786AF88, type metadata accessor for IntelligenceFragment.RemoteID, (uint64_t)&protocol conformance descriptor for IntelligenceFragment.RemoteID);
    sub_249676900();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = v11[1];
    v17 = *v11;
    v18 = v12;
    v13 = v11[3];
    v19 = v11[2];
    v20 = v13;
    v21 = 2;
    sub_249634890();
    sub_249676900();
    v15 = (__int128 *)(v3 + v10[7]);
    v16 = v15[1];
    v22 = *v15;
    v23 = v16;
    v24 = v15[2];
    v25 = 0x3FF0000000000000;
    v26 = 0;
    v27 = 0;
    v28 = 0x3FF0000000000000;
    v29 = 0;
    v30 = 0;
    if ((sub_24967666C() & 1) == 0)
    {
      v17 = v22;
      v18 = v23;
      v19 = v24;
      v21 = 3;
      type metadata accessor for CGAffineTransform(0);
      sub_24963EC48((unint64_t *)&unk_25786B340, (uint64_t (*)(uint64_t))type metadata accessor for CGAffineTransform, MEMORY[0x24BDBD810]);
      sub_24967693C();
    }
    if (*(_QWORD *)(*(_QWORD *)(v3 + v10[8]) + 16))
    {
      *(_QWORD *)&v17 = *(_QWORD *)(v3 + v10[8]);
      v21 = 4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25786B060);
      sub_249655DA4(&qword_25786AB00, &qword_25786AAF0, (uint64_t)&protocol conformance descriptor for IntelligenceElement, MEMORY[0x24BEE12A0]);
      sub_24967693C();
    }
    if (*(_QWORD *)(*(_QWORD *)(v3 + v10[9]) + 16))
    {
      *(_QWORD *)&v17 = *(_QWORD *)(v3 + v10[9]);
      v21 = 5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8D8);
      sub_249655CB4(&qword_25786B500, (uint64_t (*)(void))sub_249655D1C, MEMORY[0x24BEE12A0]);
      sub_24967693C();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IntelligenceFragment.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  char *v13;
  int8x16_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __int8 *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int8 *v25;
  uint64_t v26;
  __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int8x16_t v36;
  unint64_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int8x16_t v47;
  uint64_t v48;
  uint64_t v49;
  int8x16_t *v50;
  uint64_t v51;
  uint64_t v52;
  int8x16_t v53;
  int8x16_t v54;
  uint64_t v55;
  uint64_t v56;
  __int8 *v57;
  __int8 *v58;
  uint64_t *v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  v51 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
  MEMORY[0x24BDAC7A8](v3);
  v54.i64[0] = (uint64_t)v47.i64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA60);
  v52 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v58 = &v47.i8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = (int *)type metadata accessor for IntelligenceFragment();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v47.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = &v9[*(int *)(v7 + 20)];
  v11 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v53.i64[0] = (uint64_t)v10;
  v12(v10, 1, 1, v11);
  v13 = &v9[v6[6]];
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  *(_OWORD *)v13 = 0u;
  *((_QWORD *)v13 + 6) = 0;
  *((_QWORD *)v13 + 7) = 1;
  v14 = (int8x16_t *)&v9[v6[7]];
  v14->i64[0] = 0x3FF0000000000000;
  v14->i64[1] = 0;
  v14[1].i64[0] = 0;
  v14[1].i64[1] = 0x3FF0000000000000;
  v14[2].i64[0] = 0;
  v14[2].i64[1] = 0;
  v15 = v6[8];
  v16 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v9[v15] = MEMORY[0x24BEE4AF8];
  v17 = v6[9];
  v56 = a1;
  v57 = v9;
  *(_QWORD *)&v9[v17] = v16;
  v18 = *(_QWORD *)(a1 + 24);
  v19 = (_QWORD *)a1;
  v20 = v58;
  __swift_project_boxed_opaque_existential_1(v19, v18);
  sub_249655C2C();
  v21 = v59;
  sub_2496769FC();
  if (v21)
  {
    v25 = v57;
    __swift_destroy_boxed_opaque_existential_1(v56);
    v26 = (uint64_t)v25;
  }
  else
  {
    v59 = (uint64_t *)v13;
    v50 = v14;
    v22 = v53.i64[0];
    v23 = v54.i64[0];
    v49 = v15;
    v48 = v17;
    v65 = 0;
    sub_249655D60();
    v24 = v55;
    sub_249676888();
    v28 = v60.i8[8];
    v29 = (uint64_t)v57;
    *(_QWORD *)v57 = v60.i64[0];
    *(_BYTE *)(v29 + 8) = v28;
    v60.i8[0] = 1;
    sub_24963EC48(&qword_25786A850, type metadata accessor for IntelligenceFragment.RemoteID, (uint64_t)&protocol conformance descriptor for IntelligenceFragment.RemoteID);
    v30 = v24;
    v31 = v23;
    v32 = v30;
    sub_249676888();
    sub_2496539DC(v31, v22);
    v65 = 2;
    sub_2496348D4();
    sub_249676888();
    v53 = v61;
    v54 = v60;
    v47 = v62;
    v33 = v63;
    v34 = v64;
    v35 = v59;
    sub_24963E9A4(*v59, v59[1], v59[2], v59[3], v59[4], v59[5], v59[6], v59[7]);
    v36 = v53;
    *(int8x16_t *)v35 = v54;
    *((int8x16_t *)v35 + 1) = v36;
    *((int8x16_t *)v35 + 2) = v47;
    v35[6] = v33;
    v35[7] = v34;
    type metadata accessor for CGAffineTransform(0);
    v65 = 3;
    sub_24963EC48(&qword_25786A918, (uint64_t (*)(uint64_t))type metadata accessor for CGAffineTransform, MEMORY[0x24BDBD818]);
    sub_249676888();
    if ((_BYTE)v63)
      v37 = -1;
    else
      v37 = 0;
    v38 = (int8x16_t)vdupq_n_s64(v37);
    v39 = vbslq_s8(v38, (int8x16_t)xmmword_2496796A0, v61);
    v40 = vbicq_s8(v62, v38);
    v41 = v50;
    *v50 = vbslq_s8(v38, (int8x16_t)xmmword_249679690, v60);
    v41[1] = v39;
    v41[2] = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B060);
    v65 = 4;
    sub_249655DA4(&qword_25786A8E8, (unint64_t *)&unk_25786A838, (uint64_t)&protocol conformance descriptor for IntelligenceElement, MEMORY[0x24BEE12D0]);
    sub_249676888();
    v42 = MEMORY[0x24BEE4AF8];
    if (v60.i64[0])
      v43 = v60.i64[0];
    else
      v43 = MEMORY[0x24BEE4AF8];
    v44 = v49;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v29 + v44) = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8D8);
    v65 = 5;
    sub_249655CB4(&qword_25786A8E0, (uint64_t (*)(void))sub_249655E28, MEMORY[0x24BEE12D0]);
    sub_249676888();
    if (v60.i64[0])
      v45 = v60.i64[0];
    else
      v45 = v42;
    (*(void (**)(__int8 *, uint64_t))(v52 + 8))(v20, v32);
    v46 = v48;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v29 + v46) = v45;
    sub_249634958(v29, v51, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFragment);
    __swift_destroy_boxed_opaque_existential_1(v56);
    v26 = v29;
  }
  return sub_24963499C(v26, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFragment);
}

uint64_t sub_249654BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceFragment.init(from:)(a1, a2);
}

uint64_t sub_249654BD8(_QWORD *a1)
{
  return IntelligenceFragment.encode(to:)(a1);
}

unint64_t IntelligenceFragment.description.getter()
{
  return sub_249654FD4(0);
}

uint64_t sub_249654BF8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  int v19;
  _QWORD v20[2];
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v19 = a1;
  v2 = type metadata accessor for IntelligenceElement();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = 2651;
  v25 = 0xE200000000000000;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for IntelligenceFragment() + 32));
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v23 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2496553E0(0, v7, 0);
    v9 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    v17 = v6;
    v18 = v10;
    do
    {
      sub_249634958(v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      v21 = 0;
      v22 = 0xE000000000000000;
      if ((v19 & 1) != 0)
      {
        v20[0] = 0;
        v20[1] = 0xE000000000000000;
        sub_24963C540((uint64_t)v20, 0);
      }
      else
      {
        IntelligenceElement.description.getter();
      }
      sub_24967654C();
      swift_bridgeObjectRelease();
      v11 = v21;
      v12 = v22;
      sub_24963499C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      v8 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2496553E0(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v23;
      }
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_2496553E0(v13 > 1, v14 + 1, 1);
        v8 = v23;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      v15 = v8 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v12;
      v9 += v18;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v21 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  sub_249632EBC();
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return v24;
}

uint64_t sub_249654E38()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for IntelligenceFragment() + 36));
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2496553E0(0, v2, 0);
    v3 = v1 + 40;
    do
    {
      v4 = IntelligenceCommand.description.getter();
      v6 = v5;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      if (v8 >= v7 >> 1)
        sub_2496553E0(v7 > 1, v8 + 1, 1);
      v3 += 56;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  sub_249632EBC();
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return 2651;
}

unint64_t IntelligenceFragment.recursiveDescription.getter()
{
  return sub_249654FD4(1);
}

unint64_t sub_249654FD4(char a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  __int128 v5;
  unint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v19;
  _OWORD v20[3];

  v3 = type metadata accessor for IntelligenceFragment();
  if (*(_QWORD *)(v1 + *(int *)(v3 + 24) + 56) == 1)
  {
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    strcpy((char *)v20, "processInfo: ");
    HIWORD(v20[0]) = -4864;
    IntelligenceProcessInfo.description.getter();
    sub_24967654C();
    swift_bridgeObjectRelease();
    v5 = v20[0];
    v4 = sub_2496325A0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v7 = v4[2];
    v6 = v4[3];
    if (v7 >= v6 >> 1)
      v4 = sub_2496325A0((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    v4[2] = v7 + 1;
    *(_OWORD *)&v4[2 * v7 + 4] = v5;
  }
  v8 = (_OWORD *)(v1 + *(int *)(v3 + 28));
  v9 = v8[1];
  v20[0] = *v8;
  v20[1] = v9;
  v20[2] = v8[2];
  if ((sub_24967666C() & 1) == 0)
  {
    *(_QWORD *)&v19 = 0;
    *((_QWORD *)&v19 + 1) = 0xE000000000000000;
    sub_249676798();
    sub_24967654C();
    type metadata accessor for CGAffineTransform(0);
    sub_2496767E0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_2496325A0(0, v4[2] + 1, 1, v4);
    v11 = v4[2];
    v10 = v4[3];
    if (v11 >= v10 >> 1)
      v4 = sub_2496325A0((_QWORD *)(v10 > 1), v11 + 1, 1, v4);
    v4[2] = v11 + 1;
    *(_OWORD *)&v4[2 * v11 + 4] = v19;
  }
  sub_249654BF8(a1 & 1);
  sub_24967654C();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_2496325A0(0, v4[2] + 1, 1, v4);
  v13 = v4[2];
  v12 = v4[3];
  if (v13 >= v12 >> 1)
    v4 = sub_2496325A0((_QWORD *)(v12 > 1), v13 + 1, 1, v4);
  v4[2] = v13 + 1;
  v14 = &v4[2 * v13];
  v14[4] = 0x73746E656D656C65;
  v14[5] = 0xEA0000000000203ALL;
  sub_249654E38();
  sub_24967654C();
  swift_bridgeObjectRelease();
  v16 = v4[2];
  v15 = v4[3];
  if (v16 >= v15 >> 1)
    v4 = sub_2496325A0((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
  v4[2] = v16 + 1;
  v17 = &v4[2 * v16];
  v17[4] = 0x73646E616D6D6F63;
  v17[5] = 0xEA0000000000203ALL;
  sub_249676798();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  sub_249632EBC();
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return 0xD000000000000015;
}

uint64_t sub_2496553E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249655454(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2496553FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2496555BC(a1, a2, a3, (_QWORD *)*v3, &qword_25786B0D8, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
  *v3 = result;
  return result;
}

uint64_t sub_249655428(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2496555BC(a1, a2, a3, (_QWORD *)*v3, &qword_25786B0E0, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFragment);
  *v3 = result;
  return result;
}

uint64_t sub_249655454(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA88);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_249676828();
  __break(1u);
  return result;
}

uint64_t sub_2496555BC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_249676828();
  __break(1u);
  return result;
}

uint64_t _s21UIIntelligenceSupport20IntelligenceFragmentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __int128 *v50;
  __int128 v51;
  __int128 v52;
  __int128 *v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _BYTE v64[24];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;

  v4 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B518);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v59 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v59 - v18;
  v20 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      goto LABEL_24;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v20 = 1;
    if ((v20 & 1) != 0)
      goto LABEL_24;
  }
  v21 = type metadata accessor for IntelligenceFragment();
  v22 = a1;
  v23 = a2;
  v24 = v21;
  v25 = *(int *)(v21 + 20);
  *(_QWORD *)&v60 = v22;
  sub_249653964(v22 + v25, (uint64_t)v19);
  *(_QWORD *)&v61 = v24;
  v26 = *(int *)(v24 + 20);
  v27 = v23;
  sub_249653964(v23 + v26, (uint64_t)v17);
  v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_249653964((uint64_t)v19, (uint64_t)v10);
  sub_249653964((uint64_t)v17, v28);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v29((uint64_t)v10, 1, v4) == 1)
  {
    sub_24963EB88((uint64_t)v17, &qword_2544ADFC0);
    sub_24963EB88((uint64_t)v19, &qword_2544ADFC0);
    if (v29(v28, 1, v4) == 1)
    {
      sub_24963EB88((uint64_t)v10, &qword_2544ADFC0);
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  sub_249653964((uint64_t)v10, (uint64_t)v14);
  if (v29(v28, 1, v4) == 1)
  {
    sub_24963EB88((uint64_t)v17, &qword_2544ADFC0);
    sub_24963EB88((uint64_t)v19, &qword_2544ADFC0);
    sub_24963499C((uint64_t)v14, type metadata accessor for IntelligenceFragment.RemoteID);
LABEL_12:
    sub_24963EB88((uint64_t)v10, &qword_25786B518);
LABEL_24:
    v49 = 0;
    return v49 & 1;
  }
  sub_249656CA4(v28, (uint64_t)v7);
  v30 = _s21UIIntelligenceSupport20IntelligenceFragmentV8RemoteIDV2eeoiySbAE_AEtFZ_0();
  sub_24963499C((uint64_t)v7, type metadata accessor for IntelligenceFragment.RemoteID);
  sub_24963EB88((uint64_t)v17, &qword_2544ADFC0);
  sub_24963EB88((uint64_t)v19, &qword_2544ADFC0);
  sub_24963499C((uint64_t)v14, type metadata accessor for IntelligenceFragment.RemoteID);
  sub_24963EB88((uint64_t)v10, &qword_2544ADFC0);
  if ((v30 & 1) == 0)
    goto LABEL_24;
LABEL_14:
  v31 = *(int *)(v61 + 24);
  v32 = v60;
  v33 = v60 + v31;
  v34 = *(_OWORD *)(v60 + v31);
  v35 = *(_OWORD *)(v60 + v31 + 16);
  v36 = *(_QWORD *)(v60 + v31 + 32);
  v37 = *(_OWORD *)(v60 + v31 + 40);
  v38 = *(_QWORD *)(v60 + v31 + 56);
  v39 = (uint64_t *)(v27 + v31);
  v40 = *v39;
  v41 = v39[1];
  v42 = v39[2];
  v43 = v39[3];
  v45 = v39[4];
  v44 = v39[5];
  v47 = v39[6];
  v46 = v39[7];
  if (v38 != 1)
  {
    if (v46 != 1)
    {
      v49 = 0;
      if (__PAIR64__(v37, (*(unsigned int *)(v33 + 33) | ((unint64_t)(*(unsigned __int16 *)(v33 + 37) | (*(unsigned __int8 *)(v33 + 39) << 16)) << 32)) >> 24) != __PAIR64__(v44, HIDWORD(v45)))return v49 & 1;
      goto LABEL_21;
    }
    v48 = v39[5];
    v61 = v37;
    v60 = v34;
    v59 = v35;
    v38 = swift_bridgeObjectRetain();
    v35 = v59;
    v34 = v60;
    v37 = v61;
    v44 = v48;
    goto LABEL_19;
  }
  if (v46 != 1)
  {
LABEL_19:
    v62 = v34;
    v63 = v35;
    *(_QWORD *)v64 = v36;
    *(_OWORD *)&v64[8] = v37;
    v65 = v38;
    v66 = v40;
    v67 = v41;
    v68 = v42;
    v69 = v43;
    v70 = v45;
    v71 = v44;
    v72 = v47;
    v73 = v46;
    sub_24963E990(v40, v41, v42, v43, v45, v44, v47, v46);
    sub_249656C18((uint64_t *)&v62);
    goto LABEL_24;
  }
LABEL_21:
  v50 = (__int128 *)(v60 + *(int *)(v61 + 28));
  v51 = v50[2];
  v52 = *v50;
  v75 = v50[1];
  v76 = v51;
  v74 = v52;
  v53 = (__int128 *)(v27 + *(int *)(v61 + 28));
  v54 = v53[2];
  v55 = *v53;
  v63 = v53[1];
  *(_OWORD *)v64 = v54;
  v62 = v55;
  v56 = v27;
  v57 = v61;
  if ((sub_24967666C() & 1) == 0
    || (sub_2496399C8(*(_QWORD *)(v32 + *(int *)(v57 + 32)), *(_QWORD *)(v56 + *(int *)(v57 + 32))) & 1) == 0)
  {
    goto LABEL_24;
  }
  v49 = sub_249639BA0(*(_QWORD *)(v32 + *(int *)(v57 + 36)), *(_QWORD *)(v56 + *(int *)(v57 + 36)));
  return v49 & 1;
}

unint64_t sub_249655C2C()
{
  unint64_t result;

  result = qword_2544ADF90;
  if (!qword_2544ADF90)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967963C, &type metadata for IntelligenceFragment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADF90);
  }
  return result;
}

unint64_t sub_249655C70()
{
  unint64_t result;

  result = qword_2544ADFF8;
  if (!qword_2544ADFF8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for RequestID, &type metadata for RequestID);
    atomic_store(result, (unint64_t *)&qword_2544ADFF8);
  }
  return result;
}

uint64_t sub_249655CB4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25786A8D8);
    v8 = a2();
    result = MEMORY[0x24BCF4DE0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249655D1C()
{
  unint64_t result;

  result = qword_25786B508;
  if (!qword_25786B508)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCommand, &type metadata for IntelligenceCommand);
    atomic_store(result, (unint64_t *)&qword_25786B508);
  }
  return result;
}

unint64_t sub_249655D60()
{
  unint64_t result;

  result = qword_2544AE008;
  if (!qword_2544AE008)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for RequestID, &type metadata for RequestID);
    atomic_store(result, (unint64_t *)&qword_2544AE008);
  }
  return result;
}

uint64_t sub_249655DA4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25786B060);
    v10 = sub_24963EC48(a2, (uint64_t (*)(uint64_t))type metadata accessor for IntelligenceElement, a3);
    result = MEMORY[0x24BCF4DE0](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249655E28()
{
  unint64_t result;

  result = qword_25786A7E0;
  if (!qword_25786A7E0)
  {
    result = MEMORY[0x24BCF4DE0]("\r6B\bH;", &type metadata for IntelligenceCommand);
    atomic_store(result, (unint64_t *)&qword_25786A7E0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for IntelligenceFragment(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a3[5];
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for IntelligenceFragment.RemoteID(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_24967633C();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = a3[6];
    v16 = (char *)v4 + v15;
    v17 = (uint64_t)a2 + v15;
    v18 = *(_QWORD *)(v17 + 56);
    v19 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v19;
    if (v18 == 1)
    {
      v20 = *(_OWORD *)(v17 + 48);
      *((_OWORD *)v16 + 2) = *(_OWORD *)(v17 + 32);
      *((_OWORD *)v16 + 3) = v20;
    }
    else
    {
      v16[32] = *(_BYTE *)(v17 + 32);
      *(_QWORD *)(v16 + 36) = *(_QWORD *)(v17 + 36);
      *((_QWORD *)v16 + 6) = *(_QWORD *)(v17 + 48);
      *((_QWORD *)v16 + 7) = v18;
      swift_bridgeObjectRetain();
    }
    v21 = a3[7];
    v22 = a3[8];
    v23 = (_OWORD *)((char *)v4 + v21);
    v24 = (_OWORD *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v23[2] = v24[2];
    *(_QWORD *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    *(_QWORD *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for IntelligenceFragment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_24967633C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24) + 56) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IntelligenceFragment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_24967633C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(v15 + 56);
  v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  if (v16 == 1)
  {
    v18 = *(_OWORD *)(v15 + 48);
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
    *(_OWORD *)(v14 + 48) = v18;
  }
  else
  {
    *(_BYTE *)(v14 + 32) = *(_BYTE *)(v15 + 32);
    *(_QWORD *)(v14 + 36) = *(_QWORD *)(v15 + 36);
    *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
    *(_QWORD *)(v14 + 56) = v16;
    swift_bridgeObjectRetain();
  }
  v19 = a3[7];
  v20 = a3[8];
  v21 = (_OWORD *)(a1 + v19);
  v22 = (_OWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v21[2] = v22[2];
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IntelligenceFragment(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v34;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      v15 = sub_24967633C();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v8, v9, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_24963499C((uint64_t)v8, type metadata accessor for IntelligenceFragment.RemoteID);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v34 = sub_24967633C();
  (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v8, v9, v34);
LABEL_7:
  v17 = a3[6];
  v18 = a1 + v17;
  v19 = (__int128 *)((char *)a2 + v17);
  v20 = *(_QWORD *)(a1 + v17 + 56);
  v21 = *(uint64_t *)((char *)a2 + v17 + 56);
  if (v20 == 1)
  {
    v22 = *v19;
    v23 = v19[1];
    if (v21 == 1)
    {
      v24 = v19[3];
      *(_OWORD *)(v18 + 32) = v19[2];
      *(_OWORD *)(v18 + 48) = v24;
      *(_OWORD *)v18 = v22;
      *(_OWORD *)(v18 + 16) = v23;
    }
    else
    {
      *(_BYTE *)(v18 + 32) = *((_BYTE *)v19 + 32);
      *(_OWORD *)v18 = v22;
      *(_OWORD *)(v18 + 16) = v23;
      *(_DWORD *)(v18 + 36) = *((_DWORD *)v19 + 9);
      *(_DWORD *)(v18 + 40) = *((_DWORD *)v19 + 10);
      *(_QWORD *)(v18 + 48) = *((_QWORD *)v19 + 6);
      *(_QWORD *)(v18 + 56) = *((_QWORD *)v19 + 7);
      swift_bridgeObjectRetain();
    }
  }
  else if (v21 == 1)
  {
    sub_24964F420(v18);
    v25 = v19[3];
    v27 = *v19;
    v26 = v19[1];
    *(_OWORD *)(v18 + 32) = v19[2];
    *(_OWORD *)(v18 + 48) = v25;
    *(_OWORD *)v18 = v27;
    *(_OWORD *)(v18 + 16) = v26;
  }
  else
  {
    v28 = *v19;
    v29 = v19[1];
    *(_BYTE *)(v18 + 32) = *((_BYTE *)v19 + 32);
    *(_OWORD *)v18 = v28;
    *(_OWORD *)(v18 + 16) = v29;
    *(_DWORD *)(v18 + 36) = *((_DWORD *)v19 + 9);
    *(_DWORD *)(v18 + 40) = *((_DWORD *)v19 + 10);
    *(_QWORD *)(v18 + 48) = *((_QWORD *)v19 + 6);
    *(_QWORD *)(v18 + 56) = *((_QWORD *)v19 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v30 = a3[7];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)((char *)a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  v31[2] = v32[2];
  v31[3] = v32[3];
  v31[4] = v32[4];
  v31[5] = v32[5];
  *(_QWORD *)(a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for IntelligenceFragment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_24967633C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = (_OWORD *)(a1 + v13);
  v16 = (_OWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v16[3];
  v15[2] = v16[2];
  v15[3] = v18;
  v19 = (_OWORD *)(a1 + v14);
  v20 = (_OWORD *)(a2 + v14);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v19[2] = v20[2];
  v22 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  return a1;
}

uint64_t assignWithTake for IntelligenceFragment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_24967633C();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_24963499C((uint64_t)v7, type metadata accessor for IntelligenceFragment.RemoteID);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v29 = sub_24967633C();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v7, v8, v29);
LABEL_7:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 56) != 1)
  {
    v19 = *(_QWORD *)(v18 + 56);
    if (v19 != 1)
    {
      v22 = *(_OWORD *)(v18 + 16);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *(_OWORD *)(v17 + 16) = v22;
      *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
      *(_QWORD *)(v17 + 36) = *(_QWORD *)(v18 + 36);
      *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
      *(_QWORD *)(v17 + 56) = v19;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_24964F420(v17);
  }
  v20 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v20;
  v21 = *(_OWORD *)(v18 + 48);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_OWORD *)(v17 + 48) = v21;
LABEL_12:
  v23 = a3[7];
  v24 = a3[8];
  v25 = (_OWORD *)(a1 + v23);
  v26 = (_OWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceFragment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2496567A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceFragment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249656830(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADFC0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

void sub_2496568B0()
{
  unint64_t v0;

  sub_249656948();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_249656948()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2544ADFC8)
  {
    type metadata accessor for IntelligenceFragment.RemoteID(255);
    v0 = sub_2496766CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2544ADFC8);
  }
}

uint64_t getEnumTagSinglePayload for IntelligenceFragment.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceFragment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_249656A78 + 4 * byte_2496793E1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_249656AAC + 4 * byte_2496793DC[v4]))();
}

uint64_t sub_249656AAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249656AB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249656ABCLL);
  return result;
}

uint64_t sub_249656AC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249656AD0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_249656AD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249656ADC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceFragment.CodingKeys()
{
  return &type metadata for IntelligenceFragment.CodingKeys;
}

unint64_t sub_249656AFC()
{
  unint64_t result;

  result = qword_25786B510;
  if (!qword_25786B510)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679614, &type metadata for IntelligenceFragment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B510);
  }
  return result;
}

unint64_t sub_249656B44()
{
  unint64_t result;

  result = qword_2544ADFA0;
  if (!qword_2544ADFA0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967954C, &type metadata for IntelligenceFragment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADFA0);
  }
  return result;
}

unint64_t sub_249656B8C()
{
  unint64_t result;

  result = qword_2544ADF98;
  if (!qword_2544ADF98)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679574, &type metadata for IntelligenceFragment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADF98);
  }
  return result;
}

uint64_t sub_249656BD0()
{
  unint64_t v0;

  v0 = sub_249676834();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t *sub_249656C18(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  v9 = a1[15];
  sub_24963E9A4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  sub_24963E9A4(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_249656CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntelligenceFragment.RemoteID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double IntelligenceCollectionRequest.requestID.getter@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

double IntelligenceCollectionRequest.requestID.setter(double *a1)
{
  _QWORD *v1;
  double result;

  result = *a1;
  *v1 = *(_QWORD *)a1;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.requestID.modify())()
{
  return nullsub_1;
}

uint64_t static IntelligenceCollectionRequest.DefaultValues.pruneEmptyElements.getter()
{
  return 1;
}

uint64_t static IntelligenceCollectionRequest.DefaultValues.includeVisibleElementsOnly.getter()
{
  return 1;
}

uint64_t static IntelligenceCollectionRequest.DefaultValues.includeGeometry.getter()
{
  return 1;
}

uint64_t static IntelligenceCollectionRequest.DefaultValues.includeCustomTypeNames.getter()
{
  return 0;
}

uint64_t static IntelligenceCollectionRequest.DefaultValues.includeAccessibilityProperties.getter()
{
  return 1;
}

uint64_t static IntelligenceCollectionRequest.DefaultValues.includeAppEntities.getter()
{
  return 1;
}

uint64_t static IntelligenceCollectionRequest.DefaultValues.includeAppIntents.getter()
{
  return 1;
}

uint64_t static IntelligenceCollectionRequest.DefaultValues.includeAppIntentsPayloadDebugDescription.getter()
{
  return 0;
}

void static IntelligenceCollectionRequest.DefaultValues.textOptions.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1000000;
  *(_WORD *)(a1 + 8) = 256;
  *(_QWORD *)(a1 + 16) = 100000;
  *(_WORD *)(a1 + 24) = 256;
  *(_QWORD *)(a1 + 32) = 10000;
  *(_WORD *)(a1 + 40) = 256;
}

uint64_t static IntelligenceCollectionRequest.DefaultValues.includeElements.getter()
{
  return 1;
}

uint64_t static IntelligenceCollectionRequest.DefaultValues.includeCommands.getter()
{
  return 1;
}

UIIntelligenceSupport::IntelligenceCollectionRequest::CommandOptions __swiftcall IntelligenceCollectionRequest.CommandOptions.init()()
{
  uint64_t v0;
  UIIntelligenceSupport::IntelligenceCollectionRequest::CommandOptions result;

  *(_WORD *)v0 = 0;
  *(_BYTE *)(v0 + 2) = 0;
  return result;
}

void static IntelligenceCollectionRequest.DefaultValues.commandOptions.getter(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 0;
  *(_BYTE *)(a1 + 2) = 0;
}

uint64_t IntelligenceCollectionRequest.pruneEmptyElements.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t IntelligenceCollectionRequest.pruneEmptyElements.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.pruneEmptyElements.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.includeVisibleElementsOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t IntelligenceCollectionRequest.includeVisibleElementsOnly.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.includeVisibleElementsOnly.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.includeGeometry.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t IntelligenceCollectionRequest.includeGeometry.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 10) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.includeGeometry.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.includeCustomTypeNames.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t IntelligenceCollectionRequest.includeCustomTypeNames.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 11) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.includeCustomTypeNames.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.includeAccessibilityProperties.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 12);
}

uint64_t IntelligenceCollectionRequest.includeAccessibilityProperties.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 12) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.includeAccessibilityProperties.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.includeAppEntities.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 13);
}

uint64_t IntelligenceCollectionRequest.includeAppEntities.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 13) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.includeAppEntities.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.includeAppIntents.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 14);
}

uint64_t IntelligenceCollectionRequest.includeAppIntents.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 14) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.includeAppIntents.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.includeAppIntentsPayloadDebugDescription.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 15);
}

uint64_t IntelligenceCollectionRequest.includeAppIntentsPayloadDebugDescription.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 15) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.includeAppIntentsPayloadDebugDescription.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.TextOptions.StringOptions.maximumLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t IntelligenceCollectionRequest.TextOptions.StringOptions.maximumLength.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.TextOptions.StringOptions.maximumLength.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.TextOptions.StringOptions.trimWhitespace.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t IntelligenceCollectionRequest.TextOptions.StringOptions.trimWhitespace.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.TextOptions.StringOptions.trimWhitespace.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.TextOptions.StringOptions.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_2496769C0();
  }
  else
  {
    sub_2496769C0();
    sub_2496769B4();
  }
  return sub_2496769C0();
}

uint64_t static IntelligenceCollectionRequest.TextOptions.StringOptions.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return *(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9) ^ 1u;
}

BOOL sub_249656FA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_249656FBC()
{
  _BYTE *v0;

  if (*v0)
    return 0x746968576D697274;
  else
    return 0x4C6D756D6978616DLL;
}

uint64_t sub_249657010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24965AC64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249657034()
{
  sub_249659F5C();
  return sub_249676A20();
}

uint64_t sub_24965705C()
{
  sub_249659F5C();
  return sub_249676A2C();
}

uint64_t IntelligenceCollectionRequest.TextOptions.StringOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B520);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249659F5C();
  sub_249676A14();
  v12 = 0;
  sub_2496768F4();
  if (!v2)
  {
    v11 = 1;
    sub_249676918();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t IntelligenceCollectionRequest.TextOptions.StringOptions.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2496769A8();
  sub_2496769C0();
  if (v1 != 1)
    sub_2496769B4();
  sub_2496769C0();
  return sub_2496769E4();
}

uint64_t IntelligenceCollectionRequest.TextOptions.StringOptions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B530);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249659F5C();
  sub_2496769FC();
  if (!v2)
  {
    v16 = 0;
    v9 = sub_24967687C();
    v11 = v10;
    v15 = 1;
    v12 = sub_2496768A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v11 & 1;
    *(_BYTE *)(a2 + 9) = v12 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249657394@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceCollectionRequest.TextOptions.StringOptions.init(from:)(a1, a2);
}

uint64_t sub_2496573A8(_QWORD *a1)
{
  return IntelligenceCollectionRequest.TextOptions.StringOptions.encode(to:)(a1);
}

uint64_t sub_2496573BC()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2496769A8();
  sub_2496769C0();
  if (v1 != 1)
    sub_2496769B4();
  sub_2496769C0();
  return sub_2496769E4();
}

uint64_t sub_24965743C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_2496769C0();
  }
  else
  {
    sub_2496769C0();
    sub_2496769B4();
  }
  return sub_2496769C0();
}

uint64_t sub_24965749C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2496769A8();
  sub_2496769C0();
  if (v1 != 1)
    sub_2496769B4();
  sub_2496769C0();
  return sub_2496769E4();
}

uint64_t sub_249657518(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return *(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9) ^ 1u;
}

void IntelligenceCollectionRequest.TextOptions.selectedTextOptions.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
}

uint64_t IntelligenceCollectionRequest.TextOptions.selectedTextOptions.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_BYTE *)(result + 9);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 9) = v3;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.TextOptions.selectedTextOptions.modify())()
{
  return nullsub_1;
}

void IntelligenceCollectionRequest.TextOptions.focusedEditableTextOptions.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 25);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
}

uint64_t IntelligenceCollectionRequest.TextOptions.focusedEditableTextOptions.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_BYTE *)(result + 9);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 24) = v2;
  *(_BYTE *)(v1 + 25) = v3;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.TextOptions.focusedEditableTextOptions.modify())()
{
  return nullsub_1;
}

void IntelligenceCollectionRequest.TextOptions.defaultOptions.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 40);
  v3 = *(_BYTE *)(v1 + 41);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
}

uint64_t IntelligenceCollectionRequest.TextOptions.defaultOptions.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_BYTE *)(result + 9);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 40) = v2;
  *(_BYTE *)(v1 + 41) = v3;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.TextOptions.defaultOptions.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.TextOptions.hash(into:)()
{
  _BYTE *v0;
  int v1;
  int v2;

  v1 = v0[24];
  v2 = v0[40];
  if (v0[8] == 1)
  {
    sub_2496769C0();
  }
  else
  {
    sub_2496769C0();
    sub_2496769B4();
  }
  sub_2496769C0();
  sub_2496769C0();
  if (!v1)
    sub_2496769B4();
  sub_2496769C0();
  sub_2496769C0();
  if (!v2)
    sub_2496769B4();
  return sub_2496769C0();
}

unint64_t sub_24965771C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001ALL;
  if (*v0 != 1)
    v1 = 0x4F746C7561666564;
  if (*v0)
    return v1;
  else
    return 0xD000000000000013;
}

uint64_t sub_249657788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24965AD9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2496577AC()
{
  sub_249659FA0();
  return sub_249676A20();
}

uint64_t sub_2496577D4()
{
  sub_249659FA0();
  return sub_249676A2C();
}

uint64_t IntelligenceCollectionRequest.TextOptions.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  int v9;
  uint64_t v10;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  int v26;
  char v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B538);
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *((_BYTE *)v1 + 8);
  v8 = *((_BYTE *)v1 + 9);
  v20 = v1[2];
  v26 = *((unsigned __int8 *)v1 + 24);
  v19 = *((unsigned __int8 *)v1 + 25);
  v18 = v1[4];
  v9 = *((unsigned __int8 *)v1 + 40);
  v16 = *((unsigned __int8 *)v1 + 41);
  v17 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249659FA0();
  sub_249676A14();
  v23 = v6;
  v24 = v7;
  v25 = v8;
  v27 = 0;
  sub_249659FE4();
  v10 = v22;
  sub_24967693C();
  if (v10)
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  v13 = v16;
  v12 = v17;
  v14 = v18;
  v15 = v21;
  v23 = v20;
  v24 = v26;
  v25 = v19;
  v27 = 1;
  sub_24967693C();
  v23 = v14;
  v24 = v12;
  v25 = v13;
  v27 = 2;
  sub_24967693C();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
}

uint64_t IntelligenceCollectionRequest.TextOptions.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;

  v1 = v0[8];
  v2 = v0[24];
  v3 = v0[40];
  sub_2496769A8();
  sub_2496769C0();
  if (v1 != 1)
    sub_2496769B4();
  sub_2496769C0();
  sub_2496769C0();
  if (!v2)
    sub_2496769B4();
  sub_2496769C0();
  sub_2496769C0();
  if (!v3)
    sub_2496769B4();
  sub_2496769C0();
  return sub_2496769E4();
}

uint64_t IntelligenceCollectionRequest.TextOptions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  int v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B550);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249659FA0();
  sub_2496769FC();
  if (!v2)
  {
    v24 = 0;
    sub_24965A028();
    sub_2496768B8();
    v19 = v20;
    v23 = v21;
    v9 = v22;
    v24 = 1;
    sub_2496768B8();
    v18 = v9;
    v10 = v20;
    v16 = v22;
    v17 = v21;
    v24 = 2;
    sub_2496768B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v20;
    v13 = v21;
    v14 = v22;
    *(_QWORD *)a2 = v19;
    *(_BYTE *)(a2 + 8) = v23;
    *(_BYTE *)(a2 + 9) = v18;
    *(_QWORD *)(a2 + 16) = v10;
    *(_BYTE *)(a2 + 24) = v17;
    *(_BYTE *)(a2 + 25) = v16;
    *(_QWORD *)(a2 + 32) = v12;
    *(_BYTE *)(a2 + 40) = v13;
    *(_BYTE *)(a2 + 41) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249657D14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceCollectionRequest.TextOptions.init(from:)(a1, a2);
}

uint64_t sub_249657D28(_QWORD *a1)
{
  return IntelligenceCollectionRequest.TextOptions.encode(to:)(a1);
}

uint64_t sub_249657D40()
{
  _BYTE *v0;
  int v1;
  int v2;

  v1 = v0[24];
  v2 = v0[40];
  if (v0[8] == 1)
  {
    sub_2496769C0();
  }
  else
  {
    sub_2496769C0();
    sub_2496769B4();
  }
  sub_2496769C0();
  sub_2496769C0();
  if (!v1)
    sub_2496769B4();
  sub_2496769C0();
  sub_2496769C0();
  if (!v2)
    sub_2496769B4();
  return sub_2496769C0();
}

uint64_t sub_249657E20()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;

  v1 = v0[8];
  v2 = v0[24];
  v3 = v0[40];
  sub_2496769A8();
  sub_2496769C0();
  if (v1 != 1)
    sub_2496769B4();
  sub_2496769C0();
  sub_2496769C0();
  if (!v2)
    sub_2496769B4();
  sub_2496769C0();
  sub_2496769C0();
  if (!v3)
    sub_2496769B4();
  sub_2496769C0();
  return sub_2496769E4();
}

void IntelligenceCollectionRequest.textOptions.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;

  v2 = *(_BYTE *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 25);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_BYTE *)(v1 + 40);
  v6 = *(_BYTE *)(v1 + 41);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 57);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 25) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 41) = v9;
}

uint64_t IntelligenceCollectionRequest.textOptions.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_BYTE *)(result + 9);
  v4 = *(_QWORD *)(result + 16);
  v5 = *(_BYTE *)(result + 24);
  v6 = *(_BYTE *)(result + 25);
  v7 = *(_QWORD *)(result + 32);
  v8 = *(_BYTE *)(result + 40);
  v9 = *(_BYTE *)(result + 41);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 24) = v2;
  *(_BYTE *)(v1 + 25) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  *(_BYTE *)(v1 + 40) = v5;
  *(_BYTE *)(v1 + 41) = v6;
  *(_QWORD *)(v1 + 48) = v7;
  *(_BYTE *)(v1 + 56) = v8;
  *(_BYTE *)(v1 + 57) = v9;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.textOptions.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.includeElements.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t IntelligenceCollectionRequest.includeElements.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 58) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.includeElements.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.includeCommands.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t IntelligenceCollectionRequest.includeCommands.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 59) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.includeCommands.modify())()
{
  return nullsub_1;
}

void IntelligenceCollectionRequest.commandOptions.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;
  char v2;
  char v3;

  v2 = v1[61];
  v3 = v1[62];
  *a1 = v1[60];
  a1[1] = v2;
  a1[2] = v3;
}

_BYTE *IntelligenceCollectionRequest.commandOptions.setter(_BYTE *result)
{
  _BYTE *v1;
  char v2;
  char v3;

  v2 = result[1];
  v3 = result[2];
  v1[60] = *result;
  v1[61] = v2;
  v1[62] = v3;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.commandOptions.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.CommandOptions.cachedIfAvailable.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t IntelligenceCollectionRequest.CommandOptions.cachedIfAvailable.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.CommandOptions.cachedIfAvailable.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.CommandOptions.includeNonPerformable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t IntelligenceCollectionRequest.CommandOptions.includeNonPerformable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.CommandOptions.includeNonPerformable.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.CommandOptions.includeUntitled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t IntelligenceCollectionRequest.CommandOptions.includeUntitled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*IntelligenceCollectionRequest.CommandOptions.includeUntitled.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCollectionRequest.CommandOptions.hash(into:)()
{
  sub_2496769C0();
  sub_2496769C0();
  return sub_2496769C0();
}

BOOL static IntelligenceCollectionRequest.CommandOptions.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a2[2] ^ a1[2]) & 1) == 0;
}

unint64_t sub_249658148()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000015;
  if (*v0 != 1)
    v1 = 0x556564756C636E69;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_2496581B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24965AF0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2496581D8()
{
  sub_24965A06C();
  return sub_249676A20();
}

uint64_t sub_249658200()
{
  sub_24965A06C();
  return sub_249676A2C();
}

uint64_t IntelligenceCollectionRequest.CommandOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _DWORD v9[7];
  char v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B560);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[6] = *(unsigned __int8 *)(v1 + 1);
  v9[3] = *(unsigned __int8 *)(v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24965A06C();
  sub_249676A14();
  v12 = 0;
  sub_249676918();
  if (!v2)
  {
    v11 = 1;
    sub_249676918();
    v10 = 2;
    sub_249676918();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t IntelligenceCollectionRequest.CommandOptions.hashValue.getter()
{
  sub_2496769A8();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  return sub_2496769E4();
}

uint64_t IntelligenceCollectionRequest.CommandOptions.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B570);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24965A06C();
  sub_2496769FC();
  if (!v2)
  {
    v16 = 0;
    v9 = sub_2496768A0();
    v15 = 1;
    v11 = sub_2496768A0();
    v14 = 2;
    v12 = sub_2496768A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
    a2[1] = v11 & 1;
    a2[2] = v12 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249658570@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return IntelligenceCollectionRequest.CommandOptions.init(from:)(a1, a2);
}

uint64_t sub_249658584(_QWORD *a1)
{
  return IntelligenceCollectionRequest.CommandOptions.encode(to:)(a1);
}

uint64_t sub_24965859C()
{
  sub_2496769C0();
  sub_2496769C0();
  return sub_2496769C0();
}

uint64_t sub_2496585E4()
{
  sub_2496769A8();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  return sub_2496769E4();
}

BOOL sub_24965864C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a2[2] ^ a1[2]) & 1) == 0;
}

double IntelligenceCollectionRequest.init(requestID:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = 0x1010100010101;
  *(_QWORD *)(a2 + 16) = 1000000;
  *(_WORD *)(a2 + 24) = 256;
  *(_QWORD *)(a2 + 32) = 100000;
  *(_WORD *)(a2 + 40) = 256;
  *(_QWORD *)(a2 + 48) = 10000;
  *(_BYTE *)(a2 + 56) = 0;
  *(_QWORD *)&result = 65793;
  *(_DWORD *)(a2 + 57) = 65793;
  *(_WORD *)(a2 + 61) = 0;
  return result;
}

uint64_t IntelligenceCollectionRequest.hash(into:)()
{
  unsigned __int8 *v0;
  int v1;
  int v3;
  int v4;

  v1 = v0[24];
  v3 = v0[40];
  v4 = v0[56];
  sub_2496769D8();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  if (v1 != 1)
    sub_2496769B4();
  sub_2496769C0();
  sub_2496769C0();
  if (!v3)
    sub_2496769B4();
  sub_2496769C0();
  sub_2496769C0();
  if (!v4)
    sub_2496769B4();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  sub_2496769C0();
  return sub_2496769C0();
}

uint64_t IntelligenceCollectionRequest.hashValue.getter()
{
  sub_2496769A8();
  IntelligenceCollectionRequest.hash(into:)();
  return sub_2496769E4();
}

uint64_t sub_249658994(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2496589CC + 4 * byte_2496796C0[a1]))(0x4974736575716572, 0xE900000000000044);
}

unint64_t sub_2496589CC()
{
  return 0xD000000000000012;
}

unint64_t sub_249658A60()
{
  return 0xD000000000000011;
}

void sub_249658A78()
{
  JUMPOUT(0x249658A8CLL);
}

uint64_t sub_249658A98()
{
  return 0x6974704F74786574;
}

uint64_t sub_249658AB8()
{
  return 0x456564756C636E69;
}

uint64_t sub_249658ADC()
{
  return 0x436564756C636E69;
}

uint64_t sub_249658B00()
{
  return 0x4F646E616D6D6F63;
}

uint64_t sub_249658B24(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249658B5C + 4 * byte_2496796CD[a1]))(0x4974736575716572, 0xE900000000000044);
}

unint64_t sub_249658B5C()
{
  return 0xD000000000000012;
}

unint64_t sub_249658BF0()
{
  return 0xD000000000000011;
}

void sub_249658C08()
{
  JUMPOUT(0x249658C1CLL);
}

uint64_t sub_249658C28()
{
  return 0x6974704F74786574;
}

uint64_t sub_249658C48()
{
  return 0x456564756C636E69;
}

uint64_t sub_249658C6C()
{
  return 0x436564756C636E69;
}

uint64_t sub_249658C90()
{
  return 0x4F646E616D6D6F63;
}

uint64_t sub_249658CB4()
{
  sub_2496769A8();
  IntelligenceCollectionRequest.hash(into:)();
  return sub_2496769E4();
}

uint64_t sub_249658DC0()
{
  sub_2496769A8();
  IntelligenceCollectionRequest.hash(into:)();
  return sub_2496769E4();
}

uint64_t sub_249658EC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_249658994(*a1);
  v5 = v4;
  if (v3 == sub_249658994(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_249676960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_249658F50()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2496769A8();
  sub_249658994(v1);
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_249658FB0()
{
  unsigned __int8 *v0;

  sub_249658994(*v0);
  sub_249676534();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249658FF0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2496769A8();
  sub_249658994(v1);
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_24965904C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24965B07C();
  *a1 = result;
  return result;
}

uint64_t sub_249659078@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_249658994(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2496590A0()
{
  unsigned __int8 *v0;

  return sub_249658B24(*v0);
}

uint64_t sub_2496590A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24965B07C();
  *a1 = result;
  return result;
}

void sub_2496590CC(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_2496590D8()
{
  sub_24965A0B0();
  return sub_249676A20();
}

uint64_t sub_249659100()
{
  sub_24965A0B0();
  return sub_249676A2C();
}

uint64_t IntelligenceCollectionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  int v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  char v22;
  char v23;
  int v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  __int16 v52;
  uint64_t v53;
  __int16 v54;
  uint64_t v55;
  __int16 v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *((unsigned __int8 *)v2 + 8);
  v49 = *((unsigned __int8 *)v2 + 9);
  v50 = v8;
  v48 = *((unsigned __int8 *)v2 + 10);
  LODWORD(v6) = *((unsigned __int8 *)v2 + 12);
  v40 = *((unsigned __int8 *)v2 + 11);
  v41 = v6;
  LODWORD(v6) = *((unsigned __int8 *)v2 + 14);
  v42 = *((unsigned __int8 *)v2 + 13);
  v43 = v6;
  v44 = *((unsigned __int8 *)v2 + 15);
  v45 = v2[2];
  v33 = *((unsigned __int8 *)v2 + 24);
  v9 = *((unsigned __int8 *)v2 + 25);
  v46 = v2[4];
  v38 = *((unsigned __int8 *)v2 + 40);
  v39 = v9;
  v37 = *((unsigned __int8 *)v2 + 41);
  v36 = v2[6];
  v35 = *((unsigned __int8 *)v2 + 56);
  v34 = *((unsigned __int8 *)v2 + 57);
  v31 = *((unsigned __int8 *)v2 + 58);
  v32 = *((unsigned __int8 *)v2 + 59);
  v47 = *((unsigned __int8 *)v2 + 60);
  v10 = *((_BYTE *)v2 + 61);
  v11 = *((unsigned __int8 *)v2 + 62);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24965A0B0();
  v12 = v4;
  sub_249676A14();
  v57 = *v2;
  LOBYTE(v51) = 0;
  sub_249655C70();
  v13 = v66;
  sub_24967693C();
  if (!v13)
  {
    v16 = v48;
    v15 = v49;
    LODWORD(v66) = v11;
    v17 = v47;
    if ((v50 & 1) == 0)
    {
      LOBYTE(v57) = 1;
      sub_249676918();
    }
    if ((v15 & 1) == 0)
    {
      LOBYTE(v57) = 2;
      sub_249676918();
    }
    v19 = v45;
    v18 = v46;
    v21 = v43;
    v20 = v44;
    v23 = v41;
    v22 = v42;
    v24 = v40;
    if ((v16 & 1) == 0)
    {
      LOBYTE(v57) = 3;
      sub_249676918();
      v19 = v45;
      v18 = v46;
      v21 = v43;
      v20 = v44;
      v23 = v41;
      v22 = v42;
      v24 = v40;
    }
    if (v24)
    {
      LOBYTE(v57) = 4;
      sub_249676918();
      v19 = v45;
      v18 = v46;
      v21 = v43;
      v20 = v44;
      v23 = v41;
      v22 = v42;
    }
    if ((v23 & 1) == 0)
    {
      LOBYTE(v57) = 5;
      sub_249676918();
      v19 = v45;
      v18 = v46;
      v21 = v43;
      v20 = v44;
      v22 = v42;
    }
    if ((v22 & 1) == 0)
    {
      LOBYTE(v57) = 6;
      sub_249676918();
      v19 = v45;
      v18 = v46;
      v21 = v43;
      v20 = v44;
    }
    if ((v21 & 1) == 0)
    {
      LOBYTE(v57) = 7;
      sub_249676918();
      v19 = v45;
      v18 = v46;
      v20 = v44;
    }
    if (v20)
    {
      LOBYTE(v57) = 8;
      sub_249676918();
      v25 = v33;
      v26 = v39;
      v19 = v45;
      v18 = v46;
    }
    else
    {
      v25 = v33;
      v26 = v39;
    }
    v57 = v19;
    v58 = v25;
    v59 = v26;
    v60 = v18;
    v61 = v38;
    v62 = v37;
    v63 = v36;
    v64 = v35;
    v65 = v34;
    v27 = v18;
    v51 = 1000000;
    v52 = 256;
    v53 = 100000;
    v54 = 256;
    v55 = 10000;
    v56 = 256;
    if ((_s21UIIntelligenceSupport29IntelligenceCollectionRequestV11TextOptionsV2eeoiySbAE_AEtFZ_0((uint64_t)&v57, (uint64_t)&v51) & 1) == 0)
    {
      v57 = v19;
      v58 = v25;
      v59 = v39;
      v60 = v27;
      v61 = v38;
      v62 = v37;
      v63 = v36;
      v64 = v35;
      v65 = v34;
      LOBYTE(v51) = 9;
      sub_24965A0F4();
      sub_24967693C();
    }
    v28 = v17;
    v29 = v32;
    if ((v31 & 1) == 0)
    {
      LOBYTE(v57) = 10;
      sub_249676918();
      v28 = v17;
      v29 = v32;
    }
    if ((v29 & 1) == 0)
    {
      LOBYTE(v57) = 11;
      sub_249676918();
      v28 = v17;
    }
    if ((v28 & 1) != 0 || (v10 & 1) != 0 || (_DWORD)v66)
    {
      LOBYTE(v57) = v28;
      BYTE1(v57) = v10;
      BYTE2(v57) = v66;
      LOBYTE(v51) = 12;
      sub_24965A138();
      sub_24967693C();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t IntelligenceCollectionRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  _BOOL4 v12;
  int v13;
  int v14;
  _BOOL4 v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  char v23;
  char v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  _BOOL4 v29;
  _BOOL4 v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  _BOOL4 v42;
  int v43;
  _BOOL4 v44;
  _BOOL4 v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unsigned __int16 v57;
  char v58;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B0A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24965A0B0();
  sub_2496769FC();
  if (!v2)
  {
    v58 = 0;
    sub_249655D60();
    sub_2496768B8();
    v9 = v52;
    LOBYTE(v52) = 1;
    v10 = sub_249676864();
    LOBYTE(v52) = 2;
    v11 = sub_249676864();
    LODWORD(v51) = v10;
    HIDWORD(v51) = v10 == 2;
    v12 = v11 == 2;
    LOBYTE(v52) = 3;
    v13 = v11;
    v14 = sub_249676864();
    v49 = v13;
    v50 = v12;
    v15 = v14 == 2;
    LOBYTE(v52) = 4;
    v16 = v14;
    v47 = sub_249676864();
    v48 = v15;
    v46 = v16;
    LOBYTE(v52) = 5;
    v17 = sub_249676864();
    LOBYTE(v52) = 6;
    v18 = sub_249676864();
    v45 = v17 == 2;
    v19 = v18;
    v44 = v18 == 2;
    LOBYTE(v52) = 7;
    v20 = sub_249676864();
    v42 = v20 == 2;
    v43 = v20;
    LOBYTE(v52) = 8;
    v41 = sub_249676864();
    v58 = 9;
    sub_24965A17C();
    sub_249676888();
    if ((v53 & 0xFF00) == 0x200)
    {
      v36 = 0;
      v37 = 0;
      v38 = 1;
      v39 = 10000;
      v35 = 100000;
      v34 = 1000000;
      v33 = 1;
      v21 = 1;
    }
    else
    {
      v39 = v56;
      v38 = (v53 >> 8) & 1;
      v35 = v54;
      LODWORD(v37) = v53 & 1;
      HIDWORD(v37) = v55 & 1;
      v33 = (v55 >> 8) & 1;
      v34 = v52;
      v36 = v57 & 1;
      v21 = HIBYTE(v57) & 1;
    }
    v32 = v21;
    LOBYTE(v52) = 10;
    v40 = sub_249676864();
    v30 = v40 == 2;
    LOBYTE(v52) = 11;
    v31 = sub_249676864();
    v29 = v31 == 2;
    v58 = 12;
    sub_24965A1C0();
    sub_249676888();
    v28 = v47 & 1;
    v47 = v41 & 1;
    v23 = BYTE4(v51) | v51;
    v27 = v50 | v49;
    v41 = v48 | v46;
    v46 = v45 | v17;
    v48 = v44 | v19;
    v49 = v42 | v43;
    v50 = v30 | v40;
    v24 = v29 | v31;
    v25 = (unsigned __int16)v52 | (BYTE2(v52) << 16);
    if (v52 == 2)
    {
      v51 = 0;
      LOBYTE(v26) = 0;
    }
    else
    {
      LODWORD(v51) = (v25 >> 8) & 1;
      HIDWORD(v51) = v52 & 1;
      v26 = HIWORD(v25) & 1;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v23 & 1;
    *(_BYTE *)(a2 + 9) = v27 & 1;
    *(_BYTE *)(a2 + 10) = v41 & 1;
    *(_BYTE *)(a2 + 11) = v28;
    *(_BYTE *)(a2 + 12) = v46 & 1;
    *(_BYTE *)(a2 + 13) = v48 & 1;
    *(_BYTE *)(a2 + 14) = v49 & 1;
    *(_BYTE *)(a2 + 15) = v47;
    *(_QWORD *)(a2 + 16) = v34;
    *(_BYTE *)(a2 + 24) = v37;
    *(_BYTE *)(a2 + 25) = v38;
    *(_QWORD *)(a2 + 32) = v35;
    *(_BYTE *)(a2 + 40) = BYTE4(v37);
    *(_BYTE *)(a2 + 41) = v33;
    *(_QWORD *)(a2 + 48) = v39;
    *(_BYTE *)(a2 + 56) = v36;
    *(_BYTE *)(a2 + 57) = v32;
    *(_BYTE *)(a2 + 58) = v50 & 1;
    *(_BYTE *)(a2 + 59) = v24 & 1;
    *(_BYTE *)(a2 + 60) = BYTE4(v51);
    *(_BYTE *)(a2 + 61) = v51;
    *(_BYTE *)(a2 + 62) = v26;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249659C84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceCollectionRequest.init(from:)(a1, a2);
}

uint64_t sub_249659C98(_QWORD *a1)
{
  return IntelligenceCollectionRequest.encode(to:)(a1);
}

uint64_t _s21UIIntelligenceSupport29IntelligenceCollectionRequestV11TextOptionsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  char v8;
  int v9;
  int v10;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 25);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  v9 = *(unsigned __int8 *)(a1 + 41);
  v10 = *(unsigned __int8 *)(a2 + 41);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    result = 0;
    if (!*(_BYTE *)(a2 + 8))
      return result;
  }
  else
  {
    if ((*(_BYTE *)(a2 + 8) & 1) != 0)
      return 0;
    result = 0;
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      return result;
  }
  if (((v3 ^ *(unsigned __int8 *)(a2 + 9)) & 1) != 0)
    return result;
  if ((v5 & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
      return 0;
    result = 0;
    if (v4 != *(_QWORD *)(a2 + 16))
      return result;
    goto LABEL_12;
  }
  result = 0;
  if (*(_BYTE *)(a2 + 24))
  {
LABEL_12:
    if (((v6 ^ *(unsigned __int8 *)(a2 + 25)) & 1) != 0)
      return result;
    if ((v8 & 1) != 0)
    {
      if (*(_BYTE *)(a2 + 40) && ((v9 ^ v10) & 1) == 0)
        return 1;
    }
    else if ((*(_BYTE *)(a2 + 40) & 1) == 0 && v7 == *(_QWORD *)(a2 + 32) && v9 == v10)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s21UIIntelligenceSupport29IntelligenceCollectionRequestV2eeoiySbAC_ACtFZ_0(unsigned int *a1, unsigned int *a2)
{
  uint64_t result;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  int v21;
  int v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;

  result = 0;
  if ((a1[1] | ((unint64_t)*a1 << 32)) == (a2[1] | ((unint64_t)*a2 << 32))
    && ((*((unsigned __int8 *)a1 + 8) ^ *((unsigned __int8 *)a2 + 8)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 9) ^ *((unsigned __int8 *)a2 + 9)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 10) ^ *((unsigned __int8 *)a2 + 10)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 11) ^ *((unsigned __int8 *)a2 + 11)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 12) ^ *((unsigned __int8 *)a2 + 12)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 13) ^ *((unsigned __int8 *)a2 + 13)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 14) ^ *((unsigned __int8 *)a2 + 14)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 15) ^ *((unsigned __int8 *)a2 + 15)) & 1) == 0)
  {
    v4 = *((unsigned __int8 *)a1 + 60);
    v5 = *((unsigned __int8 *)a1 + 61);
    v6 = *((unsigned __int8 *)a1 + 62);
    v7 = *((unsigned __int8 *)a2 + 60);
    v8 = *((unsigned __int8 *)a2 + 61);
    v9 = *((unsigned __int8 *)a2 + 62);
    v10 = *((unsigned __int8 *)a2 + 59);
    v11 = *((unsigned __int8 *)a2 + 58);
    v12 = *((_BYTE *)a2 + 57);
    v13 = *((_BYTE *)a2 + 56);
    v14 = *((_QWORD *)a2 + 6);
    v15 = *((_BYTE *)a2 + 41);
    v16 = *((_BYTE *)a2 + 40);
    v17 = *((_QWORD *)a2 + 4);
    v18 = *((_BYTE *)a2 + 25);
    v19 = *((_BYTE *)a2 + 24);
    v20 = *((_QWORD *)a2 + 2);
    v21 = *((unsigned __int8 *)a1 + 59);
    v22 = *((unsigned __int8 *)a1 + 58);
    v23 = *((_BYTE *)a1 + 57);
    v24 = *((_BYTE *)a1 + 56);
    v25 = *((_QWORD *)a1 + 6);
    v26 = *((_BYTE *)a1 + 41);
    v27 = *((_BYTE *)a1 + 40);
    v28 = *((_QWORD *)a1 + 4);
    v29 = *((_BYTE *)a1 + 25);
    v30 = *((_BYTE *)a1 + 24);
    v41 = *((_QWORD *)a1 + 2);
    v42 = v30;
    v43 = v29;
    v44 = v28;
    v45 = v27;
    v46 = v26;
    v47 = v25;
    v48 = v24;
    v49 = v23;
    v32 = v20;
    v33 = v19;
    v34 = v18;
    v35 = v17;
    v36 = v16;
    v37 = v15;
    v38 = v14;
    v39 = v13;
    v40 = v12;
    v31 = _s21UIIntelligenceSupport29IntelligenceCollectionRequestV11TextOptionsV2eeoiySbAE_AEtFZ_0((uint64_t)&v41, (uint64_t)&v32);
    result = 0;
    if ((v31 & 1) != 0 && ((v11 ^ v22) & 1) == 0 && ((v10 ^ v21) & 1) == 0)
      return (v4 ^ v7 | v5 ^ v8 | v6 ^ v9) ^ 1u;
  }
  return result;
}

unint64_t sub_249659F5C()
{
  unint64_t result;

  result = qword_25786B528;
  if (!qword_25786B528)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679EB8, &type metadata for IntelligenceCollectionRequest.TextOptions.StringOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B528);
  }
  return result;
}

unint64_t sub_249659FA0()
{
  unint64_t result;

  result = qword_25786B540;
  if (!qword_25786B540)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679E68, &type metadata for IntelligenceCollectionRequest.TextOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B540);
  }
  return result;
}

unint64_t sub_249659FE4()
{
  unint64_t result;

  result = qword_25786B548;
  if (!qword_25786B548)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCollectionRequest.TextOptions.StringOptions, &type metadata for IntelligenceCollectionRequest.TextOptions.StringOptions);
    atomic_store(result, (unint64_t *)&qword_25786B548);
  }
  return result;
}

unint64_t sub_24965A028()
{
  unint64_t result;

  result = qword_25786B558;
  if (!qword_25786B558)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCollectionRequest.TextOptions.StringOptions, &type metadata for IntelligenceCollectionRequest.TextOptions.StringOptions);
    atomic_store(result, (unint64_t *)&qword_25786B558);
  }
  return result;
}

unint64_t sub_24965A06C()
{
  unint64_t result;

  result = qword_25786B568;
  if (!qword_25786B568)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679E18, &type metadata for IntelligenceCollectionRequest.CommandOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B568);
  }
  return result;
}

unint64_t sub_24965A0B0()
{
  unint64_t result;

  result = qword_2544ADFE0;
  if (!qword_2544ADFE0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679DC8, &type metadata for IntelligenceCollectionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADFE0);
  }
  return result;
}

unint64_t sub_24965A0F4()
{
  unint64_t result;

  result = qword_25786B578;
  if (!qword_25786B578)
  {
    result = MEMORY[0x24BCF4DE0]("!aB\bld", &type metadata for IntelligenceCollectionRequest.TextOptions);
    atomic_store(result, (unint64_t *)&qword_25786B578);
  }
  return result;
}

unint64_t sub_24965A138()
{
  unint64_t result;

  result = qword_25786B580;
  if (!qword_25786B580)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCollectionRequest.CommandOptions, &type metadata for IntelligenceCollectionRequest.CommandOptions);
    atomic_store(result, (unint64_t *)&qword_25786B580);
  }
  return result;
}

unint64_t sub_24965A17C()
{
  unint64_t result;

  result = qword_25786AFA0;
  if (!qword_25786AFA0)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCollectionRequest.TextOptions, &type metadata for IntelligenceCollectionRequest.TextOptions);
    atomic_store(result, (unint64_t *)&qword_25786AFA0);
  }
  return result;
}

unint64_t sub_24965A1C0()
{
  unint64_t result;

  result = qword_25786AFA8;
  if (!qword_25786AFA8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCollectionRequest.CommandOptions, &type metadata for IntelligenceCollectionRequest.CommandOptions);
    atomic_store(result, (unint64_t *)&qword_25786AFA8);
  }
  return result;
}

unint64_t sub_24965A208()
{
  unint64_t result;

  result = qword_25786B588;
  if (!qword_25786B588)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCollectionRequest.TextOptions.StringOptions, &type metadata for IntelligenceCollectionRequest.TextOptions.StringOptions);
    atomic_store(result, (unint64_t *)&qword_25786B588);
  }
  return result;
}

unint64_t sub_24965A250()
{
  unint64_t result;

  result = qword_25786B590;
  if (!qword_25786B590)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCollectionRequest.TextOptions, &type metadata for IntelligenceCollectionRequest.TextOptions);
    atomic_store(result, (unint64_t *)&qword_25786B590);
  }
  return result;
}

unint64_t sub_24965A298()
{
  unint64_t result;

  result = qword_25786B598;
  if (!qword_25786B598)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCollectionRequest.CommandOptions, &type metadata for IntelligenceCollectionRequest.CommandOptions);
    atomic_store(result, (unint64_t *)&qword_25786B598);
  }
  return result;
}

unint64_t sub_24965A2E0()
{
  unint64_t result;

  result = qword_25786B5A0;
  if (!qword_25786B5A0)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCollectionRequest, &type metadata for IntelligenceCollectionRequest);
    atomic_store(result, (unint64_t *)&qword_25786B5A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionRequest()
{
  return &type metadata for IntelligenceCollectionRequest;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionRequest.DefaultValues()
{
  return &type metadata for IntelligenceCollectionRequest.DefaultValues;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for IntelligenceCollectionRequest.TextOptions(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceCollectionRequest.TextOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionRequest.TextOptions()
{
  return &type metadata for IntelligenceCollectionRequest.TextOptions;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for IntelligenceCollectionRequest.TextOptions.StringOptions(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceCollectionRequest.TextOptions.StringOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionRequest.TextOptions.StringOptions()
{
  return &type metadata for IntelligenceCollectionRequest.TextOptions.StringOptions;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for IntelligenceCollectionRequest.CommandOptions(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceCollectionRequest.CommandOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionRequest.CommandOptions()
{
  return &type metadata for IntelligenceCollectionRequest.CommandOptions;
}

uint64_t getEnumTagSinglePayload for IntelligenceCollectionRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceCollectionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_24965A6D4 + 4 * byte_2496796DF[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_24965A708 + 4 * byte_2496796DA[v4]))();
}

uint64_t sub_24965A708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24965A710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24965A718);
  return result;
}

uint64_t sub_24965A724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24965A72CLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_24965A730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24965A738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionRequest.CodingKeys()
{
  return &type metadata for IntelligenceCollectionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionRequest.CommandOptions.CodingKeys()
{
  return &type metadata for IntelligenceCollectionRequest.CommandOptions.CodingKeys;
}

uint64_t _s21UIIntelligenceSupport29IntelligenceCollectionRequestV14CommandOptionsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24965A7B8 + 4 * byte_2496796E9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24965A7EC + 4 * byte_2496796E4[v4]))();
}

uint64_t sub_24965A7EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24965A7F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24965A7FCLL);
  return result;
}

uint64_t sub_24965A808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24965A810);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24965A814(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24965A81C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionRequest.TextOptions.CodingKeys()
{
  return &type metadata for IntelligenceCollectionRequest.TextOptions.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for IntelligenceCollectionRequest.TextOptions.StringOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24965A884 + 4 * byte_2496796F3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24965A8B8 + 4 * byte_2496796EE[v4]))();
}

uint64_t sub_24965A8B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24965A8C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24965A8C8);
  return result;
}

uint64_t sub_24965A8D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24965A8DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24965A8E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24965A8E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionRequest.TextOptions.StringOptions.CodingKeys()
{
  return &type metadata for IntelligenceCollectionRequest.TextOptions.StringOptions.CodingKeys;
}

unint64_t sub_24965A908()
{
  unint64_t result;

  result = qword_25786B5A8;
  if (!qword_25786B5A8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679B40, &type metadata for IntelligenceCollectionRequest.TextOptions.StringOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B5A8);
  }
  return result;
}

unint64_t sub_24965A950()
{
  unint64_t result;

  result = qword_25786B5B0;
  if (!qword_25786B5B0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679BF8, &type metadata for IntelligenceCollectionRequest.TextOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B5B0);
  }
  return result;
}

unint64_t sub_24965A998()
{
  unint64_t result;

  result = qword_25786B5B8;
  if (!qword_25786B5B8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679CB0, &type metadata for IntelligenceCollectionRequest.CommandOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B5B8);
  }
  return result;
}

unint64_t sub_24965A9E0()
{
  unint64_t result;

  result = qword_25786B5C0;
  if (!qword_25786B5C0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679DA0, &type metadata for IntelligenceCollectionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B5C0);
  }
  return result;
}

unint64_t sub_24965AA28()
{
  unint64_t result;

  result = qword_2544ADFF0;
  if (!qword_2544ADFF0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679CD8, &type metadata for IntelligenceCollectionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADFF0);
  }
  return result;
}

unint64_t sub_24965AA70()
{
  unint64_t result;

  result = qword_2544ADFE8;
  if (!qword_2544ADFE8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679D00, &type metadata for IntelligenceCollectionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADFE8);
  }
  return result;
}

unint64_t sub_24965AAB8()
{
  unint64_t result;

  result = qword_25786B5C8;
  if (!qword_25786B5C8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679C20, &type metadata for IntelligenceCollectionRequest.CommandOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B5C8);
  }
  return result;
}

unint64_t sub_24965AB00()
{
  unint64_t result;

  result = qword_25786B5D0;
  if (!qword_25786B5D0)
  {
    atomic_store(result, (unint64_t *)&qword_25786B5D0);
  }
  return result;
}

unint64_t sub_24965AB48()
{
  unint64_t result;

  result = qword_25786B5D8;
  if (!qword_25786B5D8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679B68, &type metadata for IntelligenceCollectionRequest.TextOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B5D8);
  }
  return result;
}

unint64_t sub_24965AB90()
{
  unint64_t result;

  result = qword_25786B5E0;
  if (!qword_25786B5E0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679B90, &type metadata for IntelligenceCollectionRequest.TextOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B5E0);
  }
  return result;
}

unint64_t sub_24965ABD8()
{
  unint64_t result;

  result = qword_25786B5E8;
  if (!qword_25786B5E8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_249679AB0, &type metadata for IntelligenceCollectionRequest.TextOptions.StringOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B5E8);
  }
  return result;
}

unint64_t sub_24965AC20()
{
  unint64_t result;

  result = qword_25786B5F0;
  if (!qword_25786B5F0)
  {
    result = MEMORY[0x24BCF4DE0]("y^B\b4b", &type metadata for IntelligenceCollectionRequest.TextOptions.StringOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B5F0);
  }
  return result;
}

uint64_t sub_24965AC64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4C6D756D6978616DLL && a2 == 0xED00006874676E65;
  if (v2 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746968576D697274 && a2 == 0xEE00656361707365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24965AD9C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x800000024967D9C0 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000024967D9E0 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4F746C7561666564 && a2 == 0xEE00736E6F697470)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_24965AF0C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000024967DA00 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024967DA20 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x556564756C636E69 && a2 == 0xEF64656C7469746ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_24965B07C()
{
  unint64_t v0;

  v0 = sub_249676834();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD)
    return 13;
  else
    return v0;
}

uint64_t sub_24965B0C4(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v39;
  uint64_t v40[2];
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v2 = v1;
  v3 = *a1;
  v4 = a1[1];
  v5 = *((_BYTE *)a1 + 8);
  v6 = *((_BYTE *)a1 + 9);
  v7 = *((_BYTE *)a1 + 10);
  v8 = *((_BYTE *)a1 + 11);
  v9 = *((_BYTE *)a1 + 12);
  v10 = *((_BYTE *)a1 + 13);
  v11 = *((_BYTE *)a1 + 14);
  v12 = *((_BYTE *)a1 + 15);
  v13 = *((_QWORD *)a1 + 2);
  v14 = *((_BYTE *)a1 + 24);
  v15 = *((_BYTE *)a1 + 25);
  v16 = *((_QWORD *)a1 + 4);
  v17 = *((_BYTE *)a1 + 40);
  v18 = *((_BYTE *)a1 + 41);
  v19 = *((_QWORD *)a1 + 6);
  v20 = *((_BYTE *)a1 + 56);
  v21 = *((_BYTE *)a1 + 57);
  v22 = *((_BYTE *)a1 + 58);
  v23 = *((_BYTE *)a1 + 59);
  v24 = *((_BYTE *)a1 + 60);
  v25 = *((_BYTE *)a1 + 61);
  v26 = *((_BYTE *)a1 + 62);
  v41 = __PAIR64__(v4, v3);
  LOBYTE(v42) = v5;
  BYTE1(v42) = v6;
  BYTE2(v42) = v7;
  BYTE3(v42) = v8;
  BYTE4(v42) = v9;
  BYTE5(v42) = v10;
  BYTE6(v42) = v11;
  HIBYTE(v42) = v12;
  v43 = v13;
  v44 = v14;
  v45 = v15;
  v46 = v16;
  v47 = v17;
  v48 = v18;
  v49 = v19;
  v50 = v20;
  v51 = v21;
  v52 = v22;
  v53 = v23;
  v54 = v24;
  v55 = v25;
  v56 = v26;
  type metadata accessor for IntelligenceFragmentCollector(0);
  swift_allocObject();
  v27 = IntelligenceFragmentCollector.init(request:)(&v41);
  if (qword_25786B050 != -1)
    swift_once();
  v28 = sub_2496763D8();
  __swift_project_value_buffer(v28, (uint64_t)qword_25786B038);
  swift_retain_n();
  v29 = sub_2496763C0();
  v30 = sub_24967663C();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v39 = v3;
    v32 = swift_slowAlloc();
    v40[0] = v32;
    *(_DWORD *)v31 = 136446466;
    v41 = 0;
    v42 = 0xE000000000000000;
    sub_249676798();
    swift_bridgeObjectRelease();
    v41 = 0xD000000000000020;
    v42 = 0x800000024967DA50;
    sub_249676510();
    sub_24967654C();
    swift_bridgeObjectRelease();
    sub_24967654C();
    v41 = sub_249652C48(v41, v42, v40);
    sub_2496766E4();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    v41 = __PAIR64__(v4, v39);
    v33 = RequestID.debugDescription.getter();
    v41 = sub_249652C48(v33, v34, v40);
    sub_2496766E4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249630000, v29, v30, "created %{public}s for %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    v35 = v32;
    v3 = v39;
    MEMORY[0x24BCF4E7C](v35, -1, -1);
    MEMORY[0x24BCF4E7C](v31, -1, -1);

  }
  else
  {

    v36 = swift_release_n();
  }
  v37 = *(_QWORD *)(v2 + 16);
  MEMORY[0x24BDAC7A8](v36);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v37 + 32));
  sub_24965CFC8((uint64_t *)(v37 + 16), __SPAIR64__(v4, v3), v27);
  os_unfair_lock_unlock((os_unfair_lock_t)(v37 + 32));
  swift_release();
  return v27;
}

uint64_t IntelligenceCollectionCoordinator.finishCollection(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  void *v16;
  uint64_t result;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 aBlock;
  uint64_t (*v30)();
  void *v31;
  void (*v32)();
  uint64_t v33;

  v3 = sub_24967645C();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_249676480();
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_249676468();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 32));
  sub_24965C1E4((uint64_t *)(v13 + 16), a1, &aBlock);
  os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 32));
  v14 = aBlock;
  v15 = (uint64_t)v30;
  v16 = v31;
  result = swift_release();
  if (v15)
  {
    sub_249653234();
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5480], v9);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v23 = sub_249676690();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v14;
    *(_QWORD *)(v18 + 32) = v15;
    *(_QWORD *)(v18 + 40) = v16;
    v32 = sub_24965CB44;
    v33 = v18;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v30 = sub_24965B7DC;
    v31 = &block_descriptor_1;
    v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_249676474();
    v28 = MEMORY[0x24BEE4AF8];
    sub_2496532C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE3F8);
    sub_249653308();
    v20 = v27;
    sub_249676714();
    v21 = (void *)v23;
    MEMORY[0x24BCF4648](0, v8, v5, v19);
    _Block_release(v19);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();

    sub_24965CB68(v14, *((uint64_t *)&v14 + 1), v15);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v20);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
    return swift_release();
  }
  return result;
}

uint64_t sub_24965B754(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  uint64_t v5;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = sub_24963CABC(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 32 * v3);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return v5;
}

uint64_t sub_24965B7E0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_24965B80C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  type metadata accessor for IntelligenceCollectionCoordinator();
  v0 = swift_allocObject();
  v1 = sub_24963E304(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE438);
  result = swift_allocObject();
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 16) = v1;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(v0 + 16) = result;
  off_2544AE4A8 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static IntelligenceCollectionCoordinator.shared.getter()
{
  if (qword_2544AE4B0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t IntelligenceCollectionCoordinator.createCollector(remoteContextWrapper:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (unsigned int *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = a1 + OBJC_IVAR____TtC21UIIntelligenceSupport44UIIntelligenceCollectionRemoteContextWrapper_remoteContext;
  swift_beginAccess();
  sub_249634958(v5, (uint64_t)v4, type metadata accessor for IntelligenceFragment.RemoteContext);
  v6 = IntelligenceCollectionCoordinator.createCollector(remoteContext:)(v4);
  sub_24965CBB8((uint64_t)v4);
  return v6;
}

uint64_t IntelligenceCollectionCoordinator.createCollector(remoteContext:)(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26[2];

  v2 = v1;
  v4 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = a1[1];
  sub_249634958((uint64_t)a1, (uint64_t)v6, v9);
  type metadata accessor for IntelligenceFragmentCollector(0);
  swift_allocObject();
  v10 = IntelligenceFragmentCollector.init(remoteContext:)((uint64_t)v6);
  if (qword_25786B050 != -1)
    swift_once();
  v11 = sub_2496763D8();
  __swift_project_value_buffer(v11, (uint64_t)qword_25786B038);
  swift_retain_n();
  v12 = sub_2496763C0();
  v13 = sub_24967663C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v14 = 136446466;
    v21[1] = v14 + 4;
    v24 = 0;
    v25 = 0xE000000000000000;
    v26[0] = v15;
    sub_249676798();
    swift_bridgeObjectRelease();
    v24 = 0xD000000000000020;
    v25 = 0x800000024967DA50;
    v23 = v10;
    sub_249676510();
    v22 = v2;
    sub_24967654C();
    swift_bridgeObjectRelease();
    sub_24967654C();
    v24 = sub_249652C48(v24, v25, v26);
    sub_2496766E4();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    v24 = __PAIR64__(v8, v7);
    v16 = RequestID.debugDescription.getter();
    v24 = sub_249652C48(v16, v17, v26);
    v2 = v22;
    sub_2496766E4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249630000, v12, v13, "created remote %{public}s for %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BCF4E7C](v15, -1, -1);
    MEMORY[0x24BCF4E7C](v14, -1, -1);

  }
  else
  {

    v18 = swift_release_n();
  }
  v19 = *(_QWORD *)(v2 + 16);
  MEMORY[0x24BDAC7A8](v18);
  LODWORD(v21[-2]) = v7;
  HIDWORD(v21[-2]) = v8;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v19 + 32));
  sub_24965BD40((uint64_t *)(v19 + 16), v21[-2], v10);
  os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 32));
  swift_release();
  return v10;
}

unint64_t sub_24965BCA8()
{
  sub_249676798();
  swift_bridgeObjectRelease();
  sub_249676510();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return 0xD000000000000020;
}

uint64_t sub_24965BD40(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_24965B754(a2, *a1);
  if (v6)
  {
    v10 = v7;
    v11 = v8;
    v12 = v9;
    v19 = v6;
  }
  else
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v14 = (void *)sub_2496764E0();
    v12 = objc_msgSend(v13, sel_beginActivityWithOptions_reason_, 0xFFFFFFLL, v14);

    v19 = MEMORY[0x24BEE4B08];
    type metadata accessor for IntelligenceSupportAgentXPCConnection();
    swift_allocObject();
    v11 = sub_2496505B8();
    v10 = MEMORY[0x24BEE4AF8];
  }
  swift_retain();
  sub_24965D548(&v18, a3);
  swift_release();
  v15 = v19;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *a1;
  *a1 = 0x8000000000000000;
  sub_24963D854(v15, v10, v11, (uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
  *a1 = v18;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

CFRunLoopRef IntelligenceCollectionCoordinator.createCollector(remoteContextWrapper:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  CFRunLoopRef result;
  __CFRunLoop *v12;
  const void *v13;
  void *v14;
  _QWORD aBlock[6];

  v6 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (unsigned int *)((char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = a1 + OBJC_IVAR____TtC21UIIntelligenceSupport44UIIntelligenceCollectionRemoteContextWrapper_remoteContext;
  swift_beginAccess();
  sub_249634958(v9, (uint64_t)v8, type metadata accessor for IntelligenceFragment.RemoteContext);
  v10 = IntelligenceCollectionCoordinator.createCollector(remoteContext:)(v8);
  sub_24965CBB8((uint64_t)v8);
  result = CFRunLoopGetMain();
  if (result)
  {
    v12 = result;
    result = (CFRunLoopRef)swift_allocObject();
    *((_QWORD *)result + 2) = a2;
    *((_QWORD *)result + 3) = a3;
    *((_QWORD *)result + 4) = v10;
    v13 = (const void *)*MEMORY[0x24BDBD598];
    if (*MEMORY[0x24BDBD598])
    {
      aBlock[4] = sub_24965D26C;
      aBlock[5] = result;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24965B7DC;
      aBlock[3] = &block_descriptor_6;
      v14 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      CFRunLoopPerformBlock(v12, v13, v14);
      _Block_release(v14);
      CFRunLoopWakeUp(v12);
      swift_release();

      return (CFRunLoopRef)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

CFRunLoopRef IntelligenceCollectionCoordinator.createCollector(remoteContext:completion:)(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  CFRunLoopRef result;
  __CFRunLoop *v7;
  const void *v8;
  void *v9;
  _QWORD v10[6];

  v5 = IntelligenceCollectionCoordinator.createCollector(remoteContext:)(a1);
  result = CFRunLoopGetMain();
  if (result)
  {
    v7 = result;
    result = (CFRunLoopRef)swift_allocObject();
    *((_QWORD *)result + 2) = a2;
    *((_QWORD *)result + 3) = a3;
    *((_QWORD *)result + 4) = v5;
    v8 = (const void *)*MEMORY[0x24BDBD598];
    if (*MEMORY[0x24BDBD598])
    {
      v10[4] = sub_24965D26C;
      v10[5] = result;
      v10[0] = MEMORY[0x24BDAC760];
      v10[1] = 1107296256;
      v10[2] = sub_24965B7DC;
      v10[3] = &block_descriptor_12;
      v9 = _Block_copy(v10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      CFRunLoopPerformBlock(v7, v8, v9);
      _Block_release(v9);
      CFRunLoopWakeUp(v7);
      swift_release();

      return (CFRunLoopRef)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_24965C1E4(uint64_t *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  int EnumCaseMultiPayload;
  uint64_t *boxed_opaque_existential_1;
  ValueMetadata *v15;
  _UNKNOWN **v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _OWORD *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t *v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[3];
  ValueMetadata *v91;
  _UNKNOWN **v92;
  uint64_t v93;

  v7 = type metadata accessor for IntelligenceFragmentCollector.InternalContext(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = v10 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v10 + 16);
  v12 = (os_unfair_lock_s *)(v10 + ((*(unsigned int *)(*(_QWORD *)v10 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v12);
  sub_24964E138(v11);
  if (v3)
  {
    os_unfair_lock_unlock(v12);
    __break(1u);
    return;
  }
  os_unfair_lock_unlock(v12);
  swift_release();
  sub_249634958(a2 + OBJC_IVAR____TtC21UIIntelligenceSupport29IntelligenceFragmentCollector__context, (uint64_t)v9, type metadata accessor for IntelligenceFragmentCollector.InternalContext);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v83 = 0;
  v84 = a3;
  v85 = a1;
  if (EnumCaseMultiPayload == 1)
  {
    v91 = (ValueMetadata *)type metadata accessor for IntelligenceFragment.RemoteContext(0);
    v92 = &protocol witness table for IntelligenceFragment.RemoteContext;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v90);
    sub_24963E94C((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, type metadata accessor for IntelligenceFragment.RemoteContext);
    v15 = v91;
    v16 = v92;
  }
  else
  {
    v17 = v9[8];
    v18 = v9[9];
    v19 = v9[10];
    v20 = v9[11];
    v21 = v9[12];
    LODWORD(v82) = v9[13];
    LODWORD(v81) = v9[14];
    LODWORD(v80) = v9[15];
    v79 = *((_QWORD *)v9 + 2);
    LODWORD(v78) = v9[24];
    v77 = v9[25];
    v76 = *((_QWORD *)v9 + 4);
    v75 = v9[40];
    v74 = v9[41];
    v73 = *((_QWORD *)v9 + 6);
    v72 = v9[56];
    v71 = v9[57];
    v70 = v9[58];
    v69 = v9[59];
    v68 = v9[60];
    v67 = v9[61];
    HIDWORD(v66) = v9[62];
    v15 = &type metadata for IntelligenceFragment.LocalContext;
    v16 = &protocol witness table for IntelligenceFragment.LocalContext;
    v91 = &type metadata for IntelligenceFragment.LocalContext;
    v92 = &protocol witness table for IntelligenceFragment.LocalContext;
    v22 = swift_allocObject();
    v90[0] = v22;
    *(_QWORD *)(v22 + 16) = *(_QWORD *)v9;
    *(_BYTE *)(v22 + 24) = v17;
    *(_BYTE *)(v22 + 25) = v18;
    *(_BYTE *)(v22 + 26) = v19;
    *(_BYTE *)(v22 + 27) = v20;
    *(_BYTE *)(v22 + 28) = v21;
    a1 = v85;
    *(_BYTE *)(v22 + 29) = v82;
    *(_BYTE *)(v22 + 30) = v81;
    *(_BYTE *)(v22 + 31) = v80;
    *(_QWORD *)(v22 + 32) = v79;
    *(_BYTE *)(v22 + 40) = v78;
    *(_BYTE *)(v22 + 41) = v77;
    *(_QWORD *)(v22 + 48) = v76;
    *(_BYTE *)(v22 + 56) = v75;
    *(_BYTE *)(v22 + 57) = v74;
    *(_QWORD *)(v22 + 64) = v73;
    *(_BYTE *)(v22 + 72) = v72;
    *(_BYTE *)(v22 + 73) = v71;
    *(_BYTE *)(v22 + 74) = v70;
    *(_BYTE *)(v22 + 75) = v69;
    *(_BYTE *)(v22 + 76) = v68;
    *(_BYTE *)(v22 + 77) = v67;
    *(_BYTE *)(v22 + 78) = BYTE4(v66);
  }
  __swift_project_boxed_opaque_existential_1(v90, (uint64_t)v15);
  ((void (*)(uint64_t *__return_ptr, ValueMetadata *, _UNKNOWN **))v16[1])(&v86, v15, v16);
  v24 = v86;
  v23 = HIDWORD(v86);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  v25 = sub_24965B754(v24 | (v23 << 32), *a1);
  if (!v25)
  {
    v42 = v23;
    if (qword_25786B050 != -1)
      swift_once();
    v43 = sub_2496763D8();
    __swift_project_value_buffer(v43, (uint64_t)qword_25786B038);
    v44 = sub_2496763C0();
    v45 = sub_249676648();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v86 = v47;
      *(_DWORD *)v46 = 136446210;
      v90[0] = __PAIR64__(v42, v24);
      v48 = RequestID.debugDescription.getter();
      v90[0] = sub_249652C48(v48, v49, &v86);
      sub_2496766E4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249630000, v44, v45, "ignoring finished collection for untracked request: %{public}s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BCF4E7C](v47, -1, -1);
      MEMORY[0x24BCF4E7C](v46, -1, -1);
    }

    v50 = v84;
    *v84 = 0u;
    v50[1] = 0u;
    return;
  }
  v86 = v25;
  v87 = v26;
  v88 = v27;
  v89 = v28;
  v29 = sub_24965E25C(a2);
  swift_release();
  if (!v29)
  {
    __break(1u);
    goto LABEL_27;
  }
  v30 = swift_retain();
  MEMORY[0x24BCF4594](v30);
  if (*(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_27:
    sub_2496765F4();
  v81 = v24;
  v82 = v24 | (v23 << 32);
  sub_249676600();
  sub_2496765E8();
  if (qword_25786B050 != -1)
    swift_once();
  v31 = sub_2496763D8();
  __swift_project_value_buffer(v31, (uint64_t)qword_25786B038);
  v33 = v86;
  v32 = v87;
  swift_unknownObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v34 = sub_2496763C0();
  v35 = sub_24967663C();
  if (os_log_type_enabled(v34, (os_log_type_t)v35))
  {
    LODWORD(v79) = v35;
    v80 = v32;
    v36 = swift_slowAlloc();
    v78 = swift_slowAlloc();
    v90[0] = v78;
    *(_DWORD *)v36 = 136446722;
    v37 = sub_24965BCA8();
    v93 = sub_249652C48(v37, v38, v90);
    sub_2496766E4();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2082;
    v93 = __PAIR64__(v23, v81);
    v39 = RequestID.debugDescription.getter();
    v93 = sub_249652C48(v39, v40, v90);
    sub_2496766E4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 22) = 2050;
    if ((v33 & 0xC000000000000001) != 0)
      v41 = sub_249676744();
    else
      v41 = *(_QWORD *)(v33 + 16);
    v51 = v79;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    v93 = v41;
    sub_2496766E4();
    swift_unknownObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249630000, v34, v51, "finished %{public}s for %{public}s, still pending: %{public}ld", (uint8_t *)v36, 0x20u);
    v52 = v78;
    swift_arrayDestroy();
    MEMORY[0x24BCF4E7C](v52, -1, -1);
    MEMORY[0x24BCF4E7C](v36, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_unknownObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v53 = v85;
  v54 = v84;
  if ((v86 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v55 = sub_249676744();
    swift_bridgeObjectRelease();
    if (v55)
    {
LABEL_23:
      v56 = v86;
      v57 = v87;
      v58 = v88;
      v59 = v89;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v93 = *v53;
      *v53 = 0x8000000000000000;
      sub_24963D854(v56, v57, v58, v59, v82, isUniquelyReferenced_nonNull_native);
      *v53 = v93;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
      *v54 = 0u;
      v54[1] = 0u;
      return;
    }
  }
  else if (*(_QWORD *)(v86 + 16))
  {
    goto LABEL_23;
  }
  v61 = sub_24965D484(v82);
  sub_24965E3DC(v61);
  v62 = v53[1];
  v64 = v87;
  v63 = v88;
  v65 = v89;
  swift_retain();
  swift_bridgeObjectRelease();
  *(_QWORD *)v54 = v62;
  *((_QWORD *)v54 + 1) = v63;
  *((_QWORD *)v54 + 2) = v64;
  *((_QWORD *)v54 + 3) = v65;
}

uint64_t sub_24965CB08()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_24965CB44()
{
  uint64_t v0;

  sub_24965CBF4(*(_QWORD *)(v0 + 16), *(os_unfair_lock_s **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_24965CB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24965CBB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24965CBF4(uint64_t a1, os_unfair_lock_s *a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v9 = type metadata accessor for IntelligenceFragment();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a3;
  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain_n();
    a3 = v30;
    v13 = sub_2496767F8();
    swift_bridgeObjectRelease();
    if (v13)
      goto LABEL_3;
  }
  else
  {
    v13 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
    {
LABEL_3:
      v31 = MEMORY[0x24BEE4AF8];
      sub_249655428(0, v13 & ~(v13 >> 63), 0);
      if ((v13 & 0x8000000000000000) == 0)
      {
        v26 = a1;
        v27 = a2;
        v14 = 0;
        a1 = 0;
        v4 = v31;
        v28 = a4;
        v29 = a3 & 0xC000000000000001;
        do
        {
          if (v13 == v14)
          {
            __break(1u);
            goto LABEL_17;
          }
          if (v29)
          {
            v15 = MEMORY[0x24BCF4774](v14, a3);
          }
          else
          {
            v15 = *(_QWORD *)(a3 + 8 * v14 + 32);
            swift_retain();
          }
          v16 = *(_QWORD *)(v15 + 16);
          v17 = v16 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v16 + 16);
          a2 = (os_unfair_lock_s *)(v16 + ((*(unsigned int *)(*(_QWORD *)v16 + 48) + 3) & 0x1FFFFFFFCLL));
          swift_retain();
          os_unfair_lock_lock(a2);
          sub_24964D34C(v17, (uint64_t)v12);
          os_unfair_lock_unlock(a2);
          swift_release();
          swift_release();
          v31 = v4;
          a4 = *(_QWORD *)(v4 + 16);
          v18 = *(_QWORD *)(v4 + 24);
          if (a4 >= v18 >> 1)
          {
            sub_249655428(v18 > 1, a4 + 1, 1);
            v4 = v31;
          }
          ++v14;
          *(_QWORD *)(v4 + 16) = a4 + 1;
          sub_24963E94C((uint64_t)v12, v4+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * a4, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFragment);
          a3 = v30;
        }
        while (v13 != v14);
        swift_bridgeObjectRelease();
        a4 = v28;
        a1 = v26;
        if (!v27)
          goto LABEL_19;
LABEL_13:
        swift_retain();
        sub_249650BE0(v4);
        swift_bridgeObjectRelease();
        sub_249650888();
        swift_release();
        if (!a4)
          return;
        goto LABEL_14;
      }
      __break(1u);
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  v4 = MEMORY[0x24BEE4AF8];
  if (a2)
    goto LABEL_13;
LABEL_19:
  if (!a1)
  {
    if (qword_25786B050 == -1)
    {
LABEL_23:
      v21 = sub_2496763D8();
      __swift_project_value_buffer(v21, (uint64_t)qword_25786B038);
      v22 = sub_2496763C0();
      v23 = sub_249676648();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_249630000, v22, v23, "missing both remote and primary connections; creating temporary connection as fallback",
          v24,
          2u);
        MEMORY[0x24BCF4E7C](v24, -1, -1);
      }

      type metadata accessor for IntelligenceSupportAgentXPCConnection();
      swift_allocObject();
      sub_2496505B8();
      goto LABEL_13;
    }
LABEL_27:
    swift_once();
    goto LABEL_23;
  }
  swift_retain();
  sub_249650BE0(v4);
  swift_release();
  swift_bridgeObjectRelease();
  if (a4)
  {
LABEL_14:
    v19 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v20 = objc_msgSend(v19, sel_processInfo);
    objc_msgSend(v20, sel_endActivity_, a4);
    swift_unknownObjectRelease();

  }
}

uint64_t sub_24965CFC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_24965B754(a2, *a1);
  if (v6)
  {
    v10 = v7;
    v11 = v8;
    v12 = v9;
  }
  else
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v14 = (void *)sub_2496764E0();
    v12 = objc_msgSend(v13, sel_beginActivityWithOptions_reason_, 0xFFFFFFLL, v14);

    v11 = 0;
    v10 = MEMORY[0x24BEE4AF8];
    v6 = MEMORY[0x24BEE4B08];
  }
  v19 = v6;
  swift_retain();
  sub_24965D548(&v18, a3);
  swift_release();
  v15 = v19;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *a1;
  *a1 = 0x8000000000000000;
  sub_24963D854(v15, v10, v11, (uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
  *a1 = v18;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24965D16C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8) != 0;
  return result;
}

uint64_t sub_24965D180(uint64_t result, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = result;
  v5 = *(_QWORD *)(result + 8);
  if ((a2 & 1) != 0)
  {
    if (v5)
      return result;
    type metadata accessor for IntelligenceSupportAgentXPCConnection();
    swift_allocObject();
    v7 = sub_2496505B8();
    *(_QWORD *)(v7 + 24) = a4;
    swift_unknownObjectWeakAssign();
    result = swift_release();
  }
  else
  {
    if (!v5)
      return result;
    swift_retain();
    sub_249650888();
    result = swift_release_n();
    v7 = 0;
  }
  *(_QWORD *)(v4 + 8) = v7;
  return result;
}

uint64_t IntelligenceCollectionCoordinator.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t IntelligenceCollectionCoordinator.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24965D2A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), 0);
}

uint64_t type metadata accessor for IntelligenceCollectionCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for IntelligenceCollectionCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for IntelligenceCollectionCoordinator.State()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s21UIIntelligenceSupport33IntelligenceCollectionCoordinatorC5StateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for IntelligenceCollectionCoordinator.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for IntelligenceCollectionCoordinator.State(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceCollectionCoordinator.State(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceCollectionCoordinator.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionCoordinator.State()
{
  return &type metadata for IntelligenceCollectionCoordinator.State;
}

uint64_t sub_24965D484(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_24963CABC(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24963DC98();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 32 * v5);
  sub_24963D53C(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_24965D548(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain();
    v8 = sub_249676750();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for IntelligenceFragmentCollector(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v19;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_249676744();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v17 = sub_24965D78C(v7, result + 1);
    v21 = v17;
    if (*(_QWORD *)(v17 + 24) <= *(_QWORD *)(v17 + 16))
    {
      swift_retain();
      sub_24965D990();
      v18 = v21;
    }
    else
    {
      v18 = v17;
      swift_retain();
    }
    sub_24965DC38(a2, v18);
    *v3 = v18;
  }
  else
  {
    sub_2496769A8();
    sub_2496769B4();
    v10 = sub_2496769E4();
    v11 = -1 << *(_BYTE *)(v6 + 32);
    v12 = v10 & ~v11;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
    {
      v13 = *(_QWORD *)(v6 + 48);
      if (*(_QWORD *)(v13 + 8 * v12) == a2)
      {
LABEL_12:
        swift_release();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
      v14 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v14;
        if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        if (*(_QWORD *)(v13 + 8 * v12) == a2)
          goto LABEL_12;
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v2;
    *v2 = 0x8000000000000000;
    v16 = swift_retain();
    sub_24965DCD8(v16, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v20;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_24965D78C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B078);
    v2 = sub_24967678C();
    v14 = v2;
    sub_249676738();
    if (sub_24967675C())
    {
      type metadata accessor for IntelligenceFragmentCollector(0);
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_24965D990();
          v2 = v14;
        }
        sub_2496769A8();
        sub_2496769B4();
        result = sub_2496769E4();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_24967675C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_24965D990()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B078);
  result = sub_249676780();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_2496769A8();
      sub_2496769B4();
      result = sub_2496769E4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_24965DC38(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_2496769A8();
  sub_2496769B4();
  sub_2496769E4();
  result = sub_24967672C();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_24965DCD8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    sub_24965D990();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_24965DE24();
      goto LABEL_13;
    }
    sub_24965DFCC();
  }
  v8 = *v3;
  sub_2496769A8();
  sub_2496769B4();
  result = sub_2496769E4();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    result = type metadata accessor for IntelligenceFragmentCollector(0);
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_12:
      result = sub_249676984();
      __break(1u);
    }
    else
    {
      while (1)
      {
        a2 = (a2 + 1) & ~v9;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_12;
      }
    }
  }
LABEL_13:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    *(_QWORD *)(v11 + 16) = v14;
  return result;
}

void *sub_24965DE24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B078);
  v2 = *v0;
  v3 = sub_249676774();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24965DFCC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B078);
  result = sub_249676780();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_2496769A8();
    sub_2496769B4();
    result = sub_2496769E4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
    result = swift_retain();
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24965E24C()
{
  return swift_deallocObject();
}

unint64_t sub_24965E25C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v15;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v1;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v5 = sub_249676768();
    swift_release();
    if ((v5 & 1) != 0)
    {
      v6 = sub_24965E428(v4, a1);
      swift_bridgeObjectRelease();
      return v6;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_2496769A8();
  sub_2496769B4();
  v7 = sub_2496769E4();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    return 0;
  v10 = *(_QWORD *)(v3 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a1)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v1;
  v15 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24965DE24();
    v13 = v15;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v9);
  sub_24965E528(v9);
  *v1 = v15;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_24965E3DC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_24965E428(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = sub_249676744();
  v5 = swift_unknownObjectRetain();
  v6 = sub_24965D78C(v5, v4);
  sub_2496769A8();
  sub_2496769B4();
  v7 = sub_2496769E4();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  result = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v10 = *(_QWORD *)(v6 + 48);
    if (*(_QWORD *)(v10 + 8 * result) == a2)
    {
LABEL_6:
      sub_24965E528(result);
      *v2 = v6;
      return a2;
    }
    v11 = ~v8;
    while (1)
    {
      result = (result + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        break;
      if (*(_QWORD *)(v10 + 8 * result) == a2)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_24965E528(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_249676720();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_2496769A8();
        sub_2496769B4();
        v10 = sub_2496769E4() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_QWORD *)(v11 + 8 * v2);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t destroy for IntelligenceCollectionCoordinator.CollectionState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_unknownObjectRelease();
}

_QWORD *initializeWithCopy for IntelligenceCollectionCoordinator.CollectionState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IntelligenceCollectionCoordinator.CollectionState(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *assignWithTake for IntelligenceCollectionCoordinator.CollectionState(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_release();
  a1[1] = a2[1];
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceCollectionCoordinator.CollectionState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceCollectionCoordinator.CollectionState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCollectionCoordinator.CollectionState()
{
  return &type metadata for IntelligenceCollectionCoordinator.CollectionState;
}

uint64_t sub_24965E8E4(uint64_t a1)
{
  return sub_24965EA14(a1, qword_25786B020);
}

uint64_t static Logger.client.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24965E954(&qword_25786AC58, (uint64_t)qword_25786B020, a1);
}

uint64_t sub_24965E91C(uint64_t a1)
{
  return sub_24965EA14(a1, qword_25786A8B0);
}

uint64_t static Logger.agent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24965E954(&qword_25786A8C8, (uint64_t)qword_25786A8B0, a1);
}

uint64_t sub_24965E954@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_2496763D8();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_24965E9BC(uint64_t a1)
{
  return sub_24965EA14(a1, qword_2544AE3D8);
}

uint64_t static Logger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24965E954(&qword_2544AE3D0, (uint64_t)qword_2544AE3D8, a1);
}

uint64_t sub_24965E9F0(uint64_t a1)
{
  return sub_24965EA14(a1, qword_25786B038);
}

uint64_t sub_24965EA14(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2496763D8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_2496763CC();
}

uint64_t static Logger.collector.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24965E954(&qword_25786B050, (uint64_t)qword_25786B038, a1);
}

void Logger.error(public:error:)(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(void))
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;

  v4 = (void *)a3();
  v5 = (void *)sub_2496762AC();

  v6 = objc_msgSend(v5, sel_localizedDescription);
  v7 = sub_2496764EC();
  v9 = v8;

  v10 = a1();
  if (v11)
  {
    v12 = v10;
    v13 = v11;
    v30 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_2496763C0();
    v15 = sub_249676648();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v31 = v29;
      *(_DWORD *)v16 = 136446979;
      swift_bridgeObjectRetain();
      sub_249652C48(v12, v13, &v31);
      sub_2496766E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2082;
      v17 = objc_msgSend(v30, sel_domain);
      v18 = v7;
      v19 = sub_2496764EC();
      v21 = v20;

      sub_249652C48(v19, v21, &v31);
      sub_2496766E4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2048;
      objc_msgSend(v30, sel_code);

      sub_2496766E4();
      *(_WORD *)(v16 + 32) = 2081;
      swift_bridgeObjectRetain();
      sub_249652C48(v18, v9, &v31);
      sub_2496766E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249630000, v14, v15, "%{public}s: %{public}s (%ld) %{private}s", (uint8_t *)v16, 0x2Au);
      swift_arrayDestroy();
      v22 = v29;
LABEL_6:
      MEMORY[0x24BCF4E7C](v22, -1, -1);
      MEMORY[0x24BCF4E7C](v16, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v30 = v5;
    swift_bridgeObjectRetain();
    v14 = sub_2496763C0();
    v23 = sub_249676648();
    if (os_log_type_enabled(v14, v23))
    {
      v16 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v31 = v24;
      *(_DWORD *)v16 = 136446723;
      v25 = objc_msgSend(v30, sel_domain);
      v26 = sub_2496764EC();
      v28 = v27;

      sub_249652C48(v26, v28, &v31);
      sub_2496766E4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2048;
      objc_msgSend(v30, sel_code);

      sub_2496766E4();
      *(_WORD *)(v16 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_249652C48(v7, v9, &v31);
      sub_2496766E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249630000, v14, v23, "%{public}s (%ld) %{private}s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      v22 = v24;
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease_n();

}

void *sub_24965EFA8(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_249676828();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_24965F03C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t UIIntelligenceElementCollector.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249635EDC(v1 + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_context, a1);
}

id UIIntelligenceElementCollector.__allocating_init(context:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  id v5;
  objc_super v7;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_contentCollectionResults] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_elementCollectionResults] = v4;
  *(_QWORD *)&v3[OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_elementArrayCollectionResults] = v4;
  sub_249635EDC(a1, (uint64_t)&v3[OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_context]);
  v7.receiver = v3;
  v7.super_class = v1;
  v5 = objc_msgSendSuper2(&v7, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

id UIIntelligenceElementCollector.init(context:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_contentCollectionResults] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_elementCollectionResults] = v4;
  *(_QWORD *)&v1[OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_elementArrayCollectionResults] = v4;
  sub_249635EDC(a1, (uint64_t)&v1[OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_context]);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

uint64_t UIIntelligenceElementCollector.createRemoteContext()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_context + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_context + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_context), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t UIIntelligenceElementCollector.createRemoteContext(boundingBoxTransform:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_context + 24);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_context + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_context), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
}

uint64_t UIIntelligenceElementCollector.performCollection(_:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ACE8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v27 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - v12;
  v14 = type metadata accessor for IntelligenceElement.Content();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (unint64_t *)(v2
                           + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_contentCollectionResults);
  swift_beginAccess();
  v16 = *v15;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v15 = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_249632C10(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
    *v15 = v16;
  }
  v19 = *(_QWORD *)(v16 + 16);
  v18 = *(_QWORD *)(v16 + 24);
  if (v19 >= v18 >> 1)
  {
    v16 = sub_249632C10(v18 > 1, v19 + 1, 1, v16);
    *v15 = v16;
  }
  *(_QWORD *)(v16 + 16) = v19 + 1;
  v20 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v21 = *(_QWORD *)(v5 + 72);
  sub_24965FE60((uint64_t)v13, v16 + v20 + v21 * v19, &qword_25786ACE8);
  v22 = swift_endAccess();
  a1(v22);
  swift_beginAccess();
  v23 = *v15;
  if (!*(_QWORD *)(*v15 + 16))
  {
    __break(1u);
LABEL_10:
    result = sub_24965FE38(v23);
    v23 = result;
    v25 = *(_QWORD *)(result + 16);
    if (v25)
      goto LABEL_8;
    goto LABEL_11;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_10;
  v25 = *(_QWORD *)(v23 + 16);
  if (v25)
  {
LABEL_8:
    v26 = v25 - 1;
    sub_24965FE60(v23 + v20 + (v25 - 1) * v21, (uint64_t)v8, &qword_25786ACE8);
    *(_QWORD *)(v23 + 16) = v26;
    *v15 = v23;
    sub_24965FE60((uint64_t)v8, (uint64_t)v11, &qword_25786ACE8);
    swift_endAccess();
    return sub_24965FE60((uint64_t)v11, v27, &qword_2544ADF70);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t UIIntelligenceElementCollector.collect(_:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ACE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADF70);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (unint64_t *)(v1
                           + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_contentCollectionResults);
  swift_beginAccess();
  v13 = *v12;
  v14 = *(_QWORD *)(*v12 + 16);
  if (v14)
  {
    v19 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v3 = *(_QWORD *)(v6 + 72) * (v14 - 1);
    sub_249644C08(v13 + v19 + v3, (uint64_t)v11, &qword_2544ADF70);
    v15 = type metadata accessor for IntelligenceElement.Content();
    v2 = *(_QWORD *)(v15 - 8);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v11, 1, v15);
    sub_24963EB88((uint64_t)v11, &qword_2544ADF70);
    if (v16 == 1)
    {
      sub_249634958(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v8, 0, 1, v15);
      swift_beginAccess();
      v2 = *v12;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v12 = v2;
      if ((result & 1) != 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_8:
  result = sub_24965FE38(v2);
  v2 = result;
  *v12 = result;
LABEL_4:
  if (v14 > *(_QWORD *)(v2 + 16))
  {
    __break(1u);
  }
  else
  {
    sub_24965FEA4((uint64_t)v8, v2 + v19 + v3, &qword_25786ACE8);
    return swift_endAccess();
  }
  return result;
}

{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ACF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25786AF78);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (unint64_t *)(v1
                           + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_elementCollectionResults);
  swift_beginAccess();
  v13 = *v12;
  v14 = *(_QWORD *)(*v12 + 16);
  if (v14)
  {
    v19 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v3 = *(_QWORD *)(v6 + 72) * (v14 - 1);
    sub_249644C08(v13 + v19 + v3, (uint64_t)v11, (uint64_t *)&unk_25786AF78);
    v15 = type metadata accessor for IntelligenceElement();
    v2 = *(_QWORD *)(v15 - 8);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v11, 1, v15);
    sub_24963EB88((uint64_t)v11, (uint64_t *)&unk_25786AF78);
    if (v16 == 1)
    {
      sub_249634958(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v8, 0, 1, v15);
      swift_beginAccess();
      v2 = *v12;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v12 = v2;
      if ((result & 1) != 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_8:
  result = sub_24965FE4C(v2);
  v2 = result;
  *v12 = result;
LABEL_4:
  if (v14 > *(_QWORD *)(v2 + 16))
  {
    __break(1u);
  }
  else
  {
    sub_24965FEA4((uint64_t)v8, v2 + v19 + v3, &qword_25786ACF0);
    return swift_endAccess();
  }
  return result;
}

uint64_t UIIntelligenceElementCollector.performElementCollection(_:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ACF0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v27 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - v12;
  v14 = type metadata accessor for IntelligenceElement();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (unint64_t *)(v2
                           + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_elementCollectionResults);
  swift_beginAccess();
  v16 = *v15;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v15 = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_249632C24(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
    *v15 = v16;
  }
  v19 = *(_QWORD *)(v16 + 16);
  v18 = *(_QWORD *)(v16 + 24);
  if (v19 >= v18 >> 1)
  {
    v16 = sub_249632C24(v18 > 1, v19 + 1, 1, v16);
    *v15 = v16;
  }
  *(_QWORD *)(v16 + 16) = v19 + 1;
  v20 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v21 = *(_QWORD *)(v5 + 72);
  sub_24965FE60((uint64_t)v13, v16 + v20 + v21 * v19, &qword_25786ACF0);
  v22 = swift_endAccess();
  a1(v22);
  swift_beginAccess();
  v23 = *v15;
  if (!*(_QWORD *)(*v15 + 16))
  {
    __break(1u);
LABEL_10:
    result = sub_24965FE4C(v23);
    v23 = result;
    v25 = *(_QWORD *)(result + 16);
    if (v25)
      goto LABEL_8;
    goto LABEL_11;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_10;
  v25 = *(_QWORD *)(v23 + 16);
  if (v25)
  {
LABEL_8:
    v26 = v25 - 1;
    sub_24965FE60(v23 + v20 + (v25 - 1) * v21, (uint64_t)v8, &qword_25786ACF0);
    *(_QWORD *)(v23 + 16) = v26;
    *v15 = v23;
    sub_24965FE60((uint64_t)v8, (uint64_t)v11, &qword_25786ACF0);
    swift_endAccess();
    return sub_24965FE60((uint64_t)v11, v27, (uint64_t *)&unk_25786AF78);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t UIIntelligenceElementCollector.performElementArrayCollection(_:)(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v1 + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_elementArrayCollectionResults;
  swift_beginAccess();
  v4 = *(_QWORD **)v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_249632C38(0, v4[2] + 1, 1, v4);
    *(_QWORD *)v3 = v4;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    v4 = sub_249632C38((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    *(_QWORD *)v3 = v4;
  }
  v4[2] = v7 + 1;
  v4[v7 + 4] = MEMORY[0x24BEE4AF8];
  v8 = swift_endAccess();
  a1(v8);
  swift_beginAccess();
  v9 = *(_QWORD **)v3;
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    __break(1u);
LABEL_10:
    result = (uint64_t)sub_24965FEE8(v9);
    v9 = (_QWORD *)result;
    v11 = *(_QWORD *)(result + 16);
    if (v11)
      goto LABEL_8;
    goto LABEL_11;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_10;
  v11 = v9[2];
  if (v11)
  {
LABEL_8:
    v12 = v11 - 1;
    v13 = v9[v12 + 4];
    v9[2] = v12;
    *(_QWORD *)v3 = v9;
    swift_endAccess();
    return v13;
  }
LABEL_11:
  __break(1u);
  return result;
}

Swift::Void __swiftcall UIIntelligenceElementCollector.collect(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  char isUniquelyReferenced_nonNull_native;

  v5 = v1 + OBJC_IVAR____TtC21UIIntelligenceSupport30UIIntelligenceElementCollector_elementArrayCollectionResults;
  swift_beginAccess();
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (v6)
  {
    v3 = v6 - 1;
    if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v5 + 8 * (v6 - 1) + 32) + 16))
    {
      swift_beginAccess();
      v2 = *(_QWORD **)v5;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v5 = v2;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_8:
  v2 = sub_24965FEE8(v2);
  *(_QWORD *)v5 = v2;
LABEL_4:
  if (v6 > v2[2])
  {
    __break(1u);
  }
  else
  {
    v2[v3 + 4] = a1._rawValue;
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
}

id UIIntelligenceElementCollector.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void UIIntelligenceElementCollector.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id UIIntelligenceElementCollector.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24965FE38(unint64_t a1)
{
  return sub_249632C10(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_24965FE4C(unint64_t a1)
{
  return sub_249632C24(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_24965FE60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24965FEA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

_QWORD *sub_24965FEE8(_QWORD *a1)
{
  return sub_249632C38(0, a1[2], 0, a1);
}

uint64_t type metadata accessor for UIIntelligenceElementCollector()
{
  return objc_opt_self();
}

uint64_t method lookup function for UIIntelligenceElementCollector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIIntelligenceElementCollector.__allocating_init(context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_24965FF30()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24965FF38()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24965FFA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_249660014(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_249660024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_249660054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_249660084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_2496600B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_2496600E4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_249660194 + 4 * byte_249679FC0[(v7 - 1)]))();
}

void sub_2496601E4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for UIIntelligenceElementCollector.CollectionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UIIntelligenceElementCollector.CollectionResult);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24BCF4D8C](a1, v6, a5);
}

unint64_t static IntelligenceSupportAgentXPCConstants.machService.getter()
{
  return 0xD000000000000025;
}

uint64_t XPCClientMessage.TransferFragments.fragments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t XPCClientMessage.TransferFragments.fragments.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*XPCClientMessage.TransferFragments.fragments.modify())()
{
  return nullsub_1;
}

uint64_t XPCClientMessage.TransferFragments.signpostState.getter()
{
  return swift_retain();
}

uint64_t XPCClientMessage.TransferFragments.signpostState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*XPCClientMessage.TransferFragments.signpostState.modify())()
{
  return nullsub_1;
}

uint64_t sub_249660468()
{
  _BYTE *v0;

  if (*v0)
    return 0x74736F706E676973;
  else
    return 0x746E656D67617266;
}

uint64_t sub_2496604B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249663088(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2496604D8()
{
  sub_24966158C();
  return sub_249676A20();
}

uint64_t sub_249660500()
{
  sub_24966158C();
  return sub_249676A2C();
}

uint64_t sub_249660528()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x655368636E75616CLL;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x696C616974696E69;
}

uint64_t sub_249660598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2496631A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2496605BC()
{
  sub_249660D9C();
  return sub_249676A20();
}

uint64_t sub_2496605E4()
{
  sub_249660D9C();
  return sub_249676A2C();
}

uint64_t sub_24966060C()
{
  sub_249660EDC();
  return sub_249676A20();
}

uint64_t sub_249660634()
{
  sub_249660EDC();
  return sub_249676A2C();
}

uint64_t sub_24966065C()
{
  sub_249660E98();
  return sub_249676A20();
}

uint64_t sub_249660684()
{
  sub_249660E98();
  return sub_249676A2C();
}

uint64_t sub_2496606AC()
{
  sub_249660DE0();
  return sub_249676A20();
}

uint64_t sub_2496606D4()
{
  sub_249660DE0();
  return sub_249676A2C();
}

double XPCAgentMessage.RequestFragments.request.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  double result;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  v4 = *(_BYTE *)(v1 + 10);
  v5 = *(_BYTE *)(v1 + 11);
  v6 = *(_BYTE *)(v1 + 12);
  v7 = *(_BYTE *)(v1 + 13);
  v8 = *(_BYTE *)(v1 + 14);
  v9 = *(_BYTE *)(v1 + 15);
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_BYTE *)(v1 + 24);
  v12 = *(_BYTE *)(v1 + 25);
  v13 = *(_QWORD *)(v1 + 32);
  v14 = *(_BYTE *)(v1 + 40);
  v15 = *(_BYTE *)(v1 + 41);
  v16 = *(_QWORD *)(v1 + 48);
  v17 = *(_BYTE *)(v1 + 56);
  v18 = *(_BYTE *)(v1 + 57);
  v19 = *(_BYTE *)(v1 + 58);
  v20 = *(_BYTE *)(v1 + 59);
  v21 = *(_BYTE *)(v1 + 60);
  v22 = *(_BYTE *)(v1 + 61);
  v23 = *(_BYTE *)(v1 + 62);
  result = *(double *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  *(_BYTE *)(a1 + 10) = v4;
  *(_BYTE *)(a1 + 11) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  *(_BYTE *)(a1 + 13) = v7;
  *(_BYTE *)(a1 + 14) = v8;
  *(_BYTE *)(a1 + 15) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 25) = v12;
  *(_QWORD *)(a1 + 32) = v13;
  *(_BYTE *)(a1 + 40) = v14;
  *(_BYTE *)(a1 + 41) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  *(_BYTE *)(a1 + 56) = v17;
  *(_BYTE *)(a1 + 57) = v18;
  *(_BYTE *)(a1 + 58) = v19;
  *(_BYTE *)(a1 + 59) = v20;
  *(_BYTE *)(a1 + 60) = v21;
  *(_BYTE *)(a1 + 61) = v22;
  *(_BYTE *)(a1 + 62) = v23;
  return result;
}

double XPCAgentMessage.RequestFragments.request.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  double result;

  v2 = *(_BYTE *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 9);
  v4 = *(_BYTE *)(a1 + 10);
  v5 = *(_BYTE *)(a1 + 11);
  v6 = *(_BYTE *)(a1 + 12);
  v7 = *(_BYTE *)(a1 + 13);
  v8 = *(_BYTE *)(a1 + 14);
  v9 = *(_BYTE *)(a1 + 15);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 25);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 40);
  v15 = *(_BYTE *)(a1 + 41);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_BYTE *)(a1 + 56);
  v18 = *(_BYTE *)(a1 + 57);
  v19 = *(_BYTE *)(a1 + 58);
  v20 = *(_BYTE *)(a1 + 59);
  v21 = *(_BYTE *)(a1 + 60);
  v22 = *(_BYTE *)(a1 + 61);
  v23 = *(_BYTE *)(a1 + 62);
  result = *(double *)a1;
  *(_QWORD *)v1 = *(_QWORD *)a1;
  *(_BYTE *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 9) = v3;
  *(_BYTE *)(v1 + 10) = v4;
  *(_BYTE *)(v1 + 11) = v5;
  *(_BYTE *)(v1 + 12) = v6;
  *(_BYTE *)(v1 + 13) = v7;
  *(_BYTE *)(v1 + 14) = v8;
  *(_BYTE *)(v1 + 15) = v9;
  *(_QWORD *)(v1 + 16) = v10;
  *(_BYTE *)(v1 + 24) = v11;
  *(_BYTE *)(v1 + 25) = v12;
  *(_QWORD *)(v1 + 32) = v13;
  *(_BYTE *)(v1 + 40) = v14;
  *(_BYTE *)(v1 + 41) = v15;
  *(_QWORD *)(v1 + 48) = v16;
  *(_BYTE *)(v1 + 56) = v17;
  *(_BYTE *)(v1 + 57) = v18;
  *(_BYTE *)(v1 + 58) = v19;
  *(_BYTE *)(v1 + 59) = v20;
  *(_BYTE *)(v1 + 60) = v21;
  *(_BYTE *)(v1 + 61) = v22;
  *(_BYTE *)(v1 + 62) = v23;
  return result;
}

uint64_t (*XPCAgentMessage.RequestFragments.request.modify())()
{
  return nullsub_1;
}

double XPCAgentMessage.RequestFragments.init(request:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  double result;

  v2 = *(_BYTE *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 9);
  v4 = *(_BYTE *)(a1 + 10);
  v5 = *(_BYTE *)(a1 + 11);
  v6 = *(_BYTE *)(a1 + 12);
  v7 = *(_BYTE *)(a1 + 13);
  v8 = *(_BYTE *)(a1 + 14);
  v9 = *(_BYTE *)(a1 + 15);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 25);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 40);
  v15 = *(_BYTE *)(a1 + 41);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_BYTE *)(a1 + 56);
  v18 = *(_BYTE *)(a1 + 57);
  v19 = *(_BYTE *)(a1 + 58);
  v20 = *(_BYTE *)(a1 + 59);
  v21 = *(_BYTE *)(a1 + 60);
  v22 = *(_BYTE *)(a1 + 61);
  v23 = *(_BYTE *)(a1 + 62);
  result = *(double *)a1;
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_BYTE *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 9) = v3;
  *(_BYTE *)(a2 + 10) = v4;
  *(_BYTE *)(a2 + 11) = v5;
  *(_BYTE *)(a2 + 12) = v6;
  *(_BYTE *)(a2 + 13) = v7;
  *(_BYTE *)(a2 + 14) = v8;
  *(_BYTE *)(a2 + 15) = v9;
  *(_QWORD *)(a2 + 16) = v10;
  *(_BYTE *)(a2 + 24) = v11;
  *(_BYTE *)(a2 + 25) = v12;
  *(_QWORD *)(a2 + 32) = v13;
  *(_BYTE *)(a2 + 40) = v14;
  *(_BYTE *)(a2 + 41) = v15;
  *(_QWORD *)(a2 + 48) = v16;
  *(_BYTE *)(a2 + 56) = v17;
  *(_BYTE *)(a2 + 57) = v18;
  *(_BYTE *)(a2 + 58) = v19;
  *(_BYTE *)(a2 + 59) = v20;
  *(_BYTE *)(a2 + 60) = v21;
  *(_BYTE *)(a2 + 61) = v22;
  *(_BYTE *)(a2 + 62) = v23;
  return result;
}

uint64_t sub_249660988()
{
  sub_249662238();
  return sub_249676A20();
}

uint64_t sub_2496609B0()
{
  sub_249662238();
  return sub_249676A2C();
}

unint64_t sub_2496609D8()
{
  return 0xD000000000000010;
}

uint64_t sub_2496609F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249663328(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_249660A1C()
{
  sub_249661B5C();
  return sub_249676A20();
}

uint64_t sub_249660A44()
{
  sub_249661B5C();
  return sub_249676A2C();
}

uint64_t sub_249660A6C()
{
  sub_249661BA0();
  return sub_249676A20();
}

uint64_t sub_249660A94()
{
  sub_249661BA0();
  return sub_249676A2C();
}

unint64_t XPCClientMessage.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE3C8);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE3C0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE3B8);
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE3B0);
  v29 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v23 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249660D9C();
  sub_249676A14();
  if (!v14)
  {
    LOBYTE(v31) = 0;
    sub_249660EDC();
    v15 = v30;
    sub_2496768DC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, v15);
  }
  if (v14 == 1)
  {
    LOBYTE(v31) = 1;
    sub_249660E98();
    v15 = v30;
    sub_2496768DC();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, v15);
  }
  LOBYTE(v31) = 2;
  sub_249660DE0();
  swift_bridgeObjectRetain();
  v17 = v23;
  swift_retain();
  v18 = v26;
  v19 = v30;
  sub_2496768DC();
  v31 = v14;
  v32 = v17;
  sub_249660E24();
  v20 = v28;
  sub_24967693C();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v20);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v19);
  return sub_249660E68(v14);
}

unint64_t sub_249660D9C()
{
  unint64_t result;

  result = qword_2544AE358;
  if (!qword_2544AE358)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967AA2C, &type metadata for XPCClientMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544AE358);
  }
  return result;
}

unint64_t sub_249660DE0()
{
  unint64_t result;

  result = qword_2544ADF38;
  if (!qword_2544ADF38)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A9DC, &type metadata for XPCClientMessage.TransferFragmentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADF38);
  }
  return result;
}

unint64_t sub_249660E24()
{
  unint64_t result;

  result = qword_25786AD08;
  if (!qword_25786AD08)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for XPCClientMessage.TransferFragments, &type metadata for XPCClientMessage.TransferFragments);
    atomic_store(result, (unint64_t *)&qword_25786AD08);
  }
  return result;
}

unint64_t sub_249660E68(unint64_t result)
{
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_249660E98()
{
  unint64_t result;

  result = qword_25786A7D8;
  if (!qword_25786A7D8)
  {
    result = MEMORY[0x24BCF4DE0]("MQB\b0V", &type metadata for XPCClientMessage.LaunchSentinelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786A7D8);
  }
  return result;
}

unint64_t sub_249660EDC()
{
  unint64_t result;

  result = qword_2544AE370;
  if (!qword_2544AE370)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A93C, &type metadata for XPCClientMessage.InitializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544AE370);
  }
  return result;
}

uint64_t XPCClientMessage.init(from:)@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  __int128 *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  __int128 v42;
  uint64_t v43;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A958);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A950);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A948);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A938);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_249660D9C();
  v17 = v43;
  sub_2496769FC();
  if (v17)
    goto LABEL_9;
  v33 = v9;
  v43 = v8;
  v18 = v39;
  v19 = v40;
  v20 = v13;
  v21 = sub_2496768D0();
  v22 = v12;
  if (*(_QWORD *)(v21 + 16) != 1)
  {
    v25 = sub_2496767C8();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B240);
    *v27 = &type metadata for XPCClientMessage;
    sub_24967684C();
    sub_2496767BC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v12);
LABEL_9:
    v31 = (uint64_t)v41;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  v23 = v20;
  if (!*(_BYTE *)(v21 + 32))
  {
    LOBYTE(v42) = 0;
    sub_249660EDC();
    sub_249676840();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v43);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v22);
    v24 = 0uLL;
    goto LABEL_11;
  }
  if (*(_BYTE *)(v21 + 32) == 1)
  {
    LOBYTE(v42) = 1;
    sub_249660E98();
    sub_249676840();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v22);
    v24 = xmmword_249679330;
LABEL_11:
    v31 = (uint64_t)v41;
    *v38 = v24;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  v43 = v21;
  LOBYTE(v42) = 2;
  sub_249660DE0();
  sub_249676840();
  v28 = v38;
  sub_249661388();
  v30 = v36;
  sub_2496768B8();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v30);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v22);
  v31 = (uint64_t)v41;
  *v28 = v42;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

unint64_t sub_249661388()
{
  unint64_t result;

  result = qword_25786A7D0;
  if (!qword_25786A7D0)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for XPCClientMessage.TransferFragments, &type metadata for XPCClientMessage.TransferFragments);
    atomic_store(result, (unint64_t *)&qword_25786A7D0);
  }
  return result;
}

uint64_t sub_2496613CC@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return XPCClientMessage.init(from:)(a1, a2);
}

unint64_t sub_2496613E0(_QWORD *a1)
{
  return XPCClientMessage.encode(to:)(a1);
}

uint64_t XPCClientMessage.TransferFragments.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B0B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24966158C();
  sub_249676A14();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE030);
  sub_2496617D8(&qword_25786B068, &qword_25786AF90, (uint64_t)&protocol conformance descriptor for IntelligenceFragment, MEMORY[0x24BEE12A0]);
  sub_24967693C();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_2496763B4();
    sub_24963EC48(&qword_25786B018, (uint64_t (*)(uint64_t))MEMORY[0x24BEE7870], MEMORY[0x24BEE7888]);
    sub_24967693C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24966158C()
{
  unint64_t result;

  result = qword_2544ADF20;
  if (!qword_2544ADF20)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A8EC, &type metadata for XPCClientMessage.TransferFragments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADF20);
  }
  return result;
}

uint64_t XPCClientMessage.TransferFragments.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A940);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24966158C();
  sub_2496769FC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE030);
  v13 = 0;
  sub_2496617D8(&qword_25786A8F0, &qword_25786A858, (uint64_t)&protocol conformance descriptor for IntelligenceFragment, MEMORY[0x24BEE12D0]);
  sub_2496768B8();
  v9 = v14;
  sub_2496763B4();
  v13 = 1;
  sub_24963EC48(&qword_25786A8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE7870], MEMORY[0x24BEE7890]);
  swift_bridgeObjectRetain();
  sub_2496768B8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496617D8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2544AE030);
    v10 = sub_24963EC48(a2, (uint64_t (*)(uint64_t))type metadata accessor for IntelligenceFragment, a3);
    result = MEMORY[0x24BCF4DE0](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24966185C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return XPCClientMessage.TransferFragments.init(from:)(a1, a2);
}

uint64_t sub_249661870(_QWORD *a1)
{
  return XPCClientMessage.TransferFragments.encode(to:)(a1);
}

uint64_t XPCAgentMessage.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  _BYTE v19[4];
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA78);
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA68);
  v41 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *((_BYTE *)v2 + 8);
  v11 = *((unsigned __int8 *)v2 + 9);
  v39 = *((unsigned __int8 *)v2 + 10);
  v40 = v11;
  v12 = *((unsigned __int8 *)v2 + 11);
  v37 = *((unsigned __int8 *)v2 + 12);
  v38 = v12;
  v13 = *((unsigned __int8 *)v2 + 13);
  v35 = *((unsigned __int8 *)v2 + 14);
  v36 = v13;
  v34 = *((unsigned __int8 *)v2 + 15);
  v33 = v2[2];
  v14 = *((unsigned __int8 *)v2 + 24);
  v31 = *((unsigned __int8 *)v2 + 25);
  v32 = v14;
  v30 = v2[4];
  v15 = *((unsigned __int8 *)v2 + 40);
  v28 = *((unsigned __int8 *)v2 + 41);
  v29 = v15;
  v27 = v2[6];
  v16 = *((unsigned __int8 *)v2 + 56);
  v25 = *((unsigned __int8 *)v2 + 57);
  v26 = v16;
  v17 = *((unsigned __int8 *)v2 + 58);
  v23 = *((unsigned __int8 *)v2 + 59);
  v24 = v17;
  v22 = *((unsigned __int8 *)v2 + 60);
  v21 = *((unsigned __int8 *)v2 + 61);
  v20 = *((unsigned __int8 *)v2 + 62);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249661B5C();
  sub_249676A14();
  sub_249661BA0();
  sub_2496768DC();
  v43 = *v2;
  v44 = v10;
  v45 = v40;
  v46 = v39;
  v47 = v38;
  v48 = v37;
  v49 = v36;
  v50 = v35;
  v51 = v34;
  v52 = v33;
  v53 = v32;
  v54 = v31;
  v55 = v30;
  v56 = v29;
  v57 = v28;
  v58 = v27;
  v59 = v26;
  v60 = v25;
  v61 = v24;
  v62 = v23;
  v63 = v22;
  v64 = v21;
  v65 = v20;
  sub_249661BE4();
  sub_24967693C();
  (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v6, v4);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v41 + 8))(v9, v7);
}

unint64_t sub_249661B5C()
{
  unint64_t result;

  result = qword_2544ADED8;
  if (!qword_2544ADED8)
  {
    result = MEMORY[0x24BCF4DE0]("=RB\blV", &type metadata for XPCAgentMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADED8);
  }
  return result;
}

unint64_t sub_249661BA0()
{
  unint64_t result;

  result = qword_2544ADF08;
  if (!qword_2544ADF08)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A84C, &type metadata for XPCAgentMessage.RequestFragmentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADF08);
  }
  return result;
}

unint64_t sub_249661BE4()
{
  unint64_t result;

  result = qword_25786A7C8;
  if (!qword_25786A7C8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for XPCAgentMessage.RequestFragments, &type metadata for XPCAgentMessage.RequestFragments);
    atomic_store(result, (unint64_t *)&qword_25786A7C8);
  }
  return result;
}

uint64_t XPCAgentMessage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  uint64_t v71;

  v45 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B0A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B090);
  v7 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249661B5C();
  v47 = v9;
  v10 = v71;
  sub_2496769FC();
  if (v10)
    goto LABEL_5;
  v43 = v4;
  v44 = a1;
  v71 = v7;
  v12 = v45;
  v11 = v46;
  if (*(_QWORD *)(sub_2496768D0() + 16) != 1)
  {
    v14 = v11;
    v15 = sub_2496767C8();
    swift_allocError();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B240);
    *v17 = &type metadata for XPCAgentMessage;
    v18 = v47;
    sub_24967684C();
    sub_2496767BC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x24BEE26D0], v15);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v18, v14);
    a1 = v44;
LABEL_5:
    v41 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v41);
  }
  sub_249661BA0();
  sub_249676840();
  v13 = v71;
  sub_249661F94();
  sub_2496768B8();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v47, v11);
  v20 = v49;
  v21 = v50;
  v22 = v51;
  v23 = v52;
  v24 = v53;
  v25 = v54;
  v26 = v55;
  v27 = v56;
  v28 = v57;
  v29 = v58;
  v30 = v59;
  v31 = v60;
  v32 = v61;
  v33 = v62;
  v34 = v63;
  v35 = v64;
  v36 = v65;
  v37 = v66;
  v38 = v67;
  v39 = v68;
  LOBYTE(v13) = v69;
  v40 = v70;
  *(_QWORD *)v12 = v48;
  *(_BYTE *)(v12 + 8) = v20;
  *(_BYTE *)(v12 + 9) = v21;
  *(_BYTE *)(v12 + 10) = v22;
  *(_BYTE *)(v12 + 11) = v23;
  *(_BYTE *)(v12 + 12) = v24;
  *(_BYTE *)(v12 + 13) = v25;
  *(_BYTE *)(v12 + 14) = v26;
  *(_BYTE *)(v12 + 15) = v27;
  *(_QWORD *)(v12 + 16) = v28;
  *(_BYTE *)(v12 + 24) = v29;
  *(_BYTE *)(v12 + 25) = v30;
  *(_QWORD *)(v12 + 32) = v31;
  *(_BYTE *)(v12 + 40) = v32;
  *(_BYTE *)(v12 + 41) = v33;
  *(_QWORD *)(v12 + 48) = v34;
  *(_BYTE *)(v12 + 56) = v35;
  *(_BYTE *)(v12 + 57) = v36;
  *(_BYTE *)(v12 + 58) = v37;
  *(_BYTE *)(v12 + 59) = v38;
  *(_BYTE *)(v12 + 60) = v39;
  *(_BYTE *)(v12 + 61) = v13;
  *(_BYTE *)(v12 + 62) = v40;
  v41 = (uint64_t)v44;
  return __swift_destroy_boxed_opaque_existential_1(v41);
}

unint64_t sub_249661F94()
{
  unint64_t result;

  result = qword_25786AD00;
  if (!qword_25786AD00)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for XPCAgentMessage.RequestFragments, &type metadata for XPCAgentMessage.RequestFragments);
    atomic_store(result, (unint64_t *)&qword_25786AD00);
  }
  return result;
}

uint64_t sub_249661FD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return XPCAgentMessage.init(from:)(a1, a2);
}

uint64_t sub_249661FEC(_QWORD *a1)
{
  return XPCAgentMessage.encode(to:)(a1);
}

uint64_t XPCAgentMessage.RequestFragments.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  char v8;
  char v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA70);
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *((_BYTE *)v2 + 8);
  v8 = *((_BYTE *)v2 + 9);
  v9 = *((_BYTE *)v2 + 10);
  v10 = *((unsigned __int8 *)v2 + 11);
  v35 = *((unsigned __int8 *)v2 + 12);
  v36 = v10;
  v11 = *((unsigned __int8 *)v2 + 13);
  v33 = *((unsigned __int8 *)v2 + 14);
  v34 = v11;
  v32 = *((unsigned __int8 *)v2 + 15);
  v31 = v2[2];
  v12 = *((unsigned __int8 *)v2 + 24);
  v29 = *((unsigned __int8 *)v2 + 25);
  v30 = v12;
  v28 = v2[4];
  v13 = *((unsigned __int8 *)v2 + 40);
  v26 = *((unsigned __int8 *)v2 + 41);
  v27 = v13;
  v25 = v2[6];
  v14 = *((unsigned __int8 *)v2 + 56);
  v23 = *((unsigned __int8 *)v2 + 57);
  v24 = v14;
  v15 = *((unsigned __int8 *)v2 + 58);
  v21 = *((unsigned __int8 *)v2 + 59);
  v22 = v15;
  v16 = *((unsigned __int8 *)v2 + 60);
  v19 = *((unsigned __int8 *)v2 + 61);
  v20 = v16;
  HIDWORD(v18) = *((unsigned __int8 *)v2 + 62);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249662238();
  sub_249676A14();
  v38 = *v2;
  v39 = v7;
  v40 = v8;
  v41 = v9;
  v42 = v36;
  v43 = v35;
  v44 = v34;
  v45 = v33;
  v46 = v32;
  v47 = v31;
  v48 = v30;
  v49 = v29;
  v50 = v28;
  v51 = v27;
  v52 = v26;
  v53 = v25;
  v54 = v24;
  v55 = v23;
  v56 = v22;
  v57 = v21;
  v58 = v20;
  v59 = v19;
  v60 = BYTE4(v18);
  sub_249649054();
  sub_24967693C();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v6, v4);
}

unint64_t sub_249662238()
{
  unint64_t result;

  result = qword_2544ADEF0;
  if (!qword_2544ADEF0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A7FC, &type metadata for XPCAgentMessage.RequestFragments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADEF0);
  }
  return result;
}

uint64_t XPCAgentMessage.RequestFragments.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B098);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249662238();
  sub_2496769FC();
  if (!v2)
  {
    sub_249649098();
    sub_2496768B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v33;
    v10 = v34;
    v11 = v35;
    v12 = v36;
    v13 = v37;
    v14 = v38;
    v15 = v39;
    v16 = v40;
    v17 = v41;
    v18 = v42;
    v19 = v43;
    v20 = v44;
    v21 = v45;
    v22 = v46;
    v23 = v47;
    v24 = v48;
    v25 = v49;
    v26 = v50;
    v27 = v51;
    v28 = v52;
    v29 = v53;
    v30 = v54;
    *(_QWORD *)a2 = v32;
    *(_BYTE *)(a2 + 8) = v9;
    *(_BYTE *)(a2 + 9) = v10;
    *(_BYTE *)(a2 + 10) = v11;
    *(_BYTE *)(a2 + 11) = v12;
    *(_BYTE *)(a2 + 12) = v13;
    *(_BYTE *)(a2 + 13) = v14;
    *(_BYTE *)(a2 + 14) = v15;
    *(_BYTE *)(a2 + 15) = v16;
    *(_QWORD *)(a2 + 16) = v17;
    *(_BYTE *)(a2 + 24) = v18;
    *(_BYTE *)(a2 + 25) = v19;
    *(_QWORD *)(a2 + 32) = v20;
    *(_BYTE *)(a2 + 40) = v21;
    *(_BYTE *)(a2 + 41) = v22;
    *(_QWORD *)(a2 + 48) = v23;
    *(_BYTE *)(a2 + 56) = v24;
    *(_BYTE *)(a2 + 57) = v25;
    *(_BYTE *)(a2 + 58) = v26;
    *(_BYTE *)(a2 + 59) = v27;
    *(_BYTE *)(a2 + 60) = v28;
    *(_BYTE *)(a2 + 61) = v29;
    *(_BYTE *)(a2 + 62) = v30;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24966244C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return XPCAgentMessage.RequestFragments.init(from:)(a1, a2);
}

uint64_t sub_249662460(_QWORD *a1)
{
  return XPCAgentMessage.RequestFragments.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for IntelligenceSupportAgentXPCConstants()
{
  return &type metadata for IntelligenceSupportAgentXPCConstants;
}

unint64_t destroy for XPCClientMessage(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t _s21UIIntelligenceSupport16XPCClientMessageOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  return a1;
}

unint64_t *assignWithCopy for XPCClientMessage(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for XPCClientMessage(_QWORD *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCClientMessage(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for XPCClientMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_2496626F4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_24966270C(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for XPCClientMessage()
{
  return &type metadata for XPCClientMessage;
}

_QWORD *assignWithCopy for XPCClientMessage.TransferFragments(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for XPCClientMessage.TransferFragments()
{
  return &type metadata for XPCClientMessage.TransferFragments;
}

ValueMetadata *type metadata accessor for XPCAgentMessage()
{
  return &type metadata for XPCAgentMessage;
}

ValueMetadata *type metadata accessor for XPCAgentMessage.RequestFragments()
{
  return &type metadata for XPCAgentMessage.RequestFragments;
}

ValueMetadata *type metadata accessor for XPCAgentMessage.RequestFragments.CodingKeys()
{
  return &type metadata for XPCAgentMessage.RequestFragments.CodingKeys;
}

ValueMetadata *type metadata accessor for XPCAgentMessage.CodingKeys()
{
  return &type metadata for XPCAgentMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for XPCAgentMessage.RequestFragmentsCodingKeys()
{
  return &type metadata for XPCAgentMessage.RequestFragmentsCodingKeys;
}

uint64_t storeEnumTagSinglePayload for XPCClientMessage.TransferFragments.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249662850 + 4 * byte_24967A055[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249662884 + 4 * byte_24967A050[v4]))();
}

uint64_t sub_249662884(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24966288C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249662894);
  return result;
}

uint64_t sub_2496628A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496628A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2496628AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496628B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCClientMessage.TransferFragments.CodingKeys()
{
  return &type metadata for XPCClientMessage.TransferFragments.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for XPCClientMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24966291C + 4 * byte_24967A05F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249662950 + 4 * byte_24967A05A[v4]))();
}

uint64_t sub_249662950(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249662958(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249662960);
  return result;
}

uint64_t sub_24966296C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249662974);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249662978(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249662980(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCClientMessage.CodingKeys()
{
  return &type metadata for XPCClientMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for XPCClientMessage.InitializeCodingKeys()
{
  return &type metadata for XPCClientMessage.InitializeCodingKeys;
}

ValueMetadata *type metadata accessor for XPCClientMessage.LaunchSentinelCodingKeys()
{
  return &type metadata for XPCClientMessage.LaunchSentinelCodingKeys;
}

uint64_t _s21UIIntelligenceSupport15XPCAgentMessageO16RequestFragmentsV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2496629FC + 4 * byte_24967A064[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249662A1C + 4 * byte_24967A069[v4]))();
}

_BYTE *sub_2496629FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249662A1C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249662A24(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249662A2C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249662A34(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249662A3C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for XPCClientMessage.TransferFragmentsCodingKeys()
{
  return &type metadata for XPCClientMessage.TransferFragmentsCodingKeys;
}

unint64_t sub_249662A5C()
{
  unint64_t result;

  result = qword_25786B618;
  if (!qword_25786B618)
  {
    result = MEMORY[0x24BCF4DE0]("-WB\bD\\", &type metadata for XPCClientMessage.TransferFragmentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B618);
  }
  return result;
}

unint64_t sub_249662AA4()
{
  unint64_t result;

  result = qword_25786B620;
  if (!qword_25786B620)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A4F4, &type metadata for XPCClientMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B620);
  }
  return result;
}

unint64_t sub_249662AEC()
{
  unint64_t result;

  result = qword_25786B628;
  if (!qword_25786B628)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A5AC, &type metadata for XPCClientMessage.TransferFragments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B628);
  }
  return result;
}

unint64_t sub_249662B34()
{
  unint64_t result;

  result = qword_25786B630;
  if (!qword_25786B630)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A664, &type metadata for XPCAgentMessage.RequestFragmentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B630);
  }
  return result;
}

unint64_t sub_249662B7C()
{
  unint64_t result;

  result = qword_25786B638;
  if (!qword_25786B638)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A71C, &type metadata for XPCAgentMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B638);
  }
  return result;
}

unint64_t sub_249662BC4()
{
  unint64_t result;

  result = qword_25786B640;
  if (!qword_25786B640)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A7D4, &type metadata for XPCAgentMessage.RequestFragments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B640);
  }
  return result;
}

unint64_t sub_249662C0C()
{
  unint64_t result;

  result = qword_2544ADF00;
  if (!qword_2544ADF00)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A744, &type metadata for XPCAgentMessage.RequestFragments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADF00);
  }
  return result;
}

unint64_t sub_249662C54()
{
  unint64_t result;
  const void *vars0;

  result = qword_2544ADEF8;
  if (!qword_2544ADEF8)
  {
    result = MEMORY[0x24BCF4DE0]("%SB\bxW", vars0);
    atomic_store(result, (unint64_t *)&qword_2544ADEF8);
  }
  return result;
}

unint64_t sub_249662C9C()
{
  unint64_t result;

  result = qword_2544ADF18;
  if (!qword_2544ADF18)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A5D4, &type metadata for XPCAgentMessage.RequestFragmentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADF18);
  }
  return result;
}

unint64_t sub_249662CE4()
{
  unint64_t result;

  result = qword_2544ADF10;
  if (!qword_2544ADF10)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A5FC, &type metadata for XPCAgentMessage.RequestFragmentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADF10);
  }
  return result;
}

unint64_t sub_249662D2C()
{
  unint64_t result;

  result = qword_2544ADEE8;
  if (!qword_2544ADEE8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A68C, &type metadata for XPCAgentMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADEE8);
  }
  return result;
}

unint64_t sub_249662D74()
{
  unint64_t result;

  result = qword_2544ADEE0;
  if (!qword_2544ADEE0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A6B4, &type metadata for XPCAgentMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADEE0);
  }
  return result;
}

unint64_t sub_249662DBC()
{
  unint64_t result;

  result = qword_2544ADF30;
  if (!qword_2544ADF30)
  {
    result = MEMORY[0x24BCF4DE0]("eUB\b4Z", &type metadata for XPCClientMessage.TransferFragments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADF30);
  }
  return result;
}

unint64_t sub_249662E04()
{
  unint64_t result;

  result = qword_2544ADF28;
  if (!qword_2544ADF28)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A544, &type metadata for XPCClientMessage.TransferFragments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544ADF28);
  }
  return result;
}

unint64_t sub_249662E4C()
{
  unint64_t result;

  result = qword_2544AE380;
  if (!qword_2544AE380)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A414, &type metadata for XPCClientMessage.InitializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544AE380);
  }
  return result;
}

unint64_t sub_249662E94()
{
  unint64_t result;

  result = qword_2544AE378;
  if (!qword_2544AE378)
  {
    result = MEMORY[0x24BCF4DE0]("UVB\b\\[", &type metadata for XPCClientMessage.InitializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544AE378);
  }
  return result;
}

unint64_t sub_249662EDC()
{
  unint64_t result;

  result = qword_2544AE390;
  if (!qword_2544AE390)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A3C4, &type metadata for XPCClientMessage.LaunchSentinelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544AE390);
  }
  return result;
}

unint64_t sub_249662F24()
{
  unint64_t result;

  result = qword_2544AE388;
  if (!qword_2544AE388)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A3EC, &type metadata for XPCClientMessage.LaunchSentinelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544AE388);
  }
  return result;
}

unint64_t sub_249662F6C()
{
  unint64_t result;

  result = qword_2544AE3A0;
  if (!qword_2544AE3A0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A30C, &type metadata for XPCClientMessage.TransferFragmentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544AE3A0);
  }
  return result;
}

unint64_t sub_249662FB4()
{
  unint64_t result;

  result = qword_2544AE398;
  if (!qword_2544AE398)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A334, &type metadata for XPCClientMessage.TransferFragmentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544AE398);
  }
  return result;
}

unint64_t sub_249662FFC()
{
  unint64_t result;

  result = qword_2544AE368;
  if (!qword_2544AE368)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A464, &type metadata for XPCClientMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544AE368);
  }
  return result;
}

unint64_t sub_249663044()
{
  unint64_t result;

  result = qword_2544AE360;
  if (!qword_2544AE360)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967A48C, &type metadata for XPCClientMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544AE360);
  }
  return result;
}

uint64_t sub_249663088(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E656D67617266 && a2 == 0xE900000000000073;
  if (v2 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736F706E676973 && a2 == 0xED00006574617453)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2496631A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696C616974696E69 && a2 == 0xEA0000000000657ALL;
  if (v2 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x655368636E75616CLL && a2 == 0xEE006C656E69746ELL || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024967DC60)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_249663328(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000024967DC80)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_249676960();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2496633B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2496633DC + 4 * byte_24967AA80[a1]))(1702060386, 0xE400000000000000);
}

unint64_t sub_2496633DC()
{
  return 0xD000000000000016;
}

uint64_t sub_2496633F8()
{
  return 0x6E6565726373;
}

uint64_t sub_24966340C()
{
  return 0x776F646E6977;
}

uint64_t sub_249663420()
{
  return 0x65746F6D6572;
}

uint64_t sub_249663434()
{
  return 0x725065746F6D6572;
}

uint64_t sub_249663458()
{
  return 1954047348;
}

uint64_t sub_249663464()
{
  return 0x6567616D69;
}

uint64_t sub_249663478()
{
  sub_249666028();
  return sub_249676A20();
}

uint64_t sub_2496634A0()
{
  sub_249666028();
  return sub_249676A2C();
}

uint64_t sub_2496634C8()
{
  unsigned __int8 *v0;

  return sub_2496633B0(*v0);
}

uint64_t sub_2496634D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249667B0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2496634F4()
{
  sub_249665CF8();
  return sub_249676A20();
}

uint64_t sub_24966351C()
{
  sub_249665CF8();
  return sub_249676A2C();
}

uint64_t sub_249663544()
{
  sub_249665D80();
  return sub_249676A20();
}

uint64_t sub_24966356C()
{
  sub_249665D80();
  return sub_249676A2C();
}

uint64_t sub_249663594()
{
  sub_249665E90();
  return sub_249676A20();
}

uint64_t sub_2496635BC()
{
  sub_249665E90();
  return sub_249676A2C();
}

uint64_t sub_2496635E4()
{
  sub_249665E4C();
  return sub_249676A20();
}

uint64_t sub_24966360C()
{
  sub_249665E4C();
  return sub_249676A2C();
}

uint64_t sub_249663634()
{
  sub_249665F5C();
  return sub_249676A20();
}

uint64_t sub_24966365C()
{
  sub_249665F5C();
  return sub_249676A2C();
}

uint64_t sub_249663684()
{
  sub_249665E08();
  return sub_249676A20();
}

uint64_t sub_2496636AC()
{
  sub_249665E08();
  return sub_249676A2C();
}

uint64_t sub_2496636D4()
{
  sub_249665FE4();
  return sub_249676A20();
}

uint64_t sub_2496636FC()
{
  sub_249665FE4();
  return sub_249676A2C();
}

uint64_t sub_249663724()
{
  sub_249665ED4();
  return sub_249676A20();
}

uint64_t sub_24966374C()
{
  sub_249665ED4();
  return sub_249676A2C();
}

void IntelligenceElement.Content.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABE0);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABD8);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for IntelligenceElement.Text();
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AC00);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v36 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for IntelligenceElement.RemoteProcess();
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABE8);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v31 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABF8);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v26 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABF0);
  v24 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v23 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AC08);
  v21 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABD0);
  MEMORY[0x24BDAC7A8](v20);
  v13 = type metadata accessor for IntelligenceElement.Content();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABC8);
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249665CF8();
  v48 = v17;
  sub_249676A14();
  sub_249665D3C(v49, (uint64_t)v15);
  v18 = (char *)sub_249663B9C + 4 * word_24967AA88[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_249663B9C()
{
  char *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *v0;
  *(_DWORD *)(v1 - 184) = v0[1];
  v4 = *((_QWORD *)v0 + 1);
  v3 = *((_QWORD *)v0 + 2);
  v5 = *((_QWORD *)v0 + 3);
  v6 = *((_QWORD *)v0 + 4);
  *(_BYTE *)(v1 - 176) = 2;
  sub_249665F5C();
  v7 = *(_QWORD *)(v1 - 400);
  v8 = *(_QWORD *)(v1 - 72);
  v9 = *(_QWORD *)(v1 - 200);
  sub_2496768DC();
  *(_BYTE *)(v1 - 176) = v2;
  *(_BYTE *)(v1 - 175) = *(_DWORD *)(v1 - 184);
  *(_QWORD *)(v1 - 168) = v4;
  *(_QWORD *)(v1 - 160) = v3;
  *(_QWORD *)(v1 - 152) = v5;
  *(_QWORD *)(v1 - 144) = v6;
  sub_249665FA0();
  v10 = *(_QWORD *)(v1 - 384);
  sub_24967693C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 392) + 8))(v7, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 208) + 8))(v9, v8);
  swift_bridgeObjectRelease();
  return sub_24963DC84(v5, v6);
}

uint64_t IntelligenceElement.Content.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  _QWORD v40[8];
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;

  v68 = a2;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA30);
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v62 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA28);
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v61 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA50);
  v51 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v58 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA38);
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v60 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA48);
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v59 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA40);
  v45 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v57 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA58);
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v64 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA20);
  v40[7] = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v56 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA18);
  v63 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for IntelligenceElement.Content();
  v13 = MEMORY[0x24BDAC7A8](v67);
  v40[6] = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v42 = (char *)v40 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v40 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)v40 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)v40 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)v40 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v40 - v29;
  v31 = a1[3];
  v70 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v31);
  sub_249665CF8();
  v66 = v12;
  v32 = v71;
  sub_2496769FC();
  if (!v32)
  {
    v40[2] = v28;
    v40[3] = v25;
    v40[4] = v22;
    v40[5] = v19;
    v71 = v30;
    v33 = v69;
    v34 = v66;
    v35 = sub_2496768D0();
    if (*(_QWORD *)(v35 + 16) == 1)
    {
      v40[1] = v35;
      __asm { BR              X10 }
    }
    v36 = sub_2496767C8();
    swift_allocError();
    v38 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B240);
    *v38 = v67;
    sub_24967684C();
    sub_2496767BC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *MEMORY[0x24BEE26D0], v36);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v34, v33);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
}

uint64_t sub_249664ED4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceElement.Content.init(from:)(a1, a2);
}

void sub_249664EE8(_QWORD *a1)
{
  IntelligenceElement.Content.encode(to:)(a1);
}

void IntelligenceElement.Content.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for IntelligenceElement.Text();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for IntelligenceElement.RemoteProcess();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for IntelligenceElement.Content();
  MEMORY[0x24BDAC7A8](v4);
  sub_249665D3C(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_249665034 + 4 * byte_24967AAA8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

char *sub_249665034()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;

  v2 = *(_BYTE *)(v0 + 1);
  v3 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  *(_BYTE *)(v1 - 168) = *(_BYTE *)v0;
  *(_BYTE *)(v1 - 167) = v2;
  *(_QWORD *)(v1 - 160) = v3;
  *(_QWORD *)(v1 - 152) = v4;
  *(_QWORD *)(v1 - 144) = v5;
  *(_QWORD *)(v1 - 136) = v6;
  v7 = IntelligenceElement.Screen.description.getter();
  swift_bridgeObjectRelease();
  sub_24963DC84(v5, v6);
  return v7;
}

void _s21UIIntelligenceSupport19IntelligenceElementV7ContentO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  char *v17;
  _BYTE v18[64];
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;

  v22 = a2;
  v3 = type metadata accessor for IntelligenceElement.Text();
  MEMORY[0x24BDAC7A8](v3);
  v21 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for IntelligenceElement.RemoteProcess();
  MEMORY[0x24BDAC7A8](v5);
  v20 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for IntelligenceFragment.RemoteContext(0);
  MEMORY[0x24BDAC7A8](v19);
  v7 = type metadata accessor for IntelligenceElement.Content();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADF78);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = &v18[*(int *)(v14 + 48) - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_249665D3C(a1, (uint64_t)&v18[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_249665D3C(v22, (uint64_t)v16);
  v17 = (char *)sub_24966547C + 4 * word_24967AAB0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24966547C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  sub_249665D3C(v2, v1);
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_24963DC84(v4, v6);
    sub_249667E30(v2);
    v7 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v1 + 8);
    v9 = *(_BYTE *)(v1 + 1);
    v10 = *v0;
    v11 = v0[1];
    v12 = *((_QWORD *)v0 + 1);
    v13 = *((_QWORD *)v0 + 2);
    v15 = *((_QWORD *)v0 + 3);
    v14 = *((_QWORD *)v0 + 4);
    *(_BYTE *)(v3 - 176) = *(_BYTE *)v1;
    *(_BYTE *)(v3 - 175) = v9;
    *(_QWORD *)(v3 - 168) = v8;
    *(_QWORD *)(v3 - 160) = v5;
    *(_QWORD *)(v3 - 152) = v4;
    *(_QWORD *)(v3 - 144) = v6;
    *(_BYTE *)(v3 - 272) = v10;
    *(_BYTE *)(v3 - 271) = v11;
    *(_QWORD *)(v3 - 264) = v12;
    *(_QWORD *)(v3 - 256) = v13;
    *(_QWORD *)(v3 - 248) = v15;
    *(_QWORD *)(v3 - 240) = v14;
    v7 = _s21UIIntelligenceSupport19IntelligenceElementV6ScreenV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)(v3 - 176), (unsigned __int8 *)(v3 - 272));
    swift_bridgeObjectRelease();
    sub_24963DC84(v15, v14);
    swift_bridgeObjectRelease();
    sub_24963DC84(v4, v6);
    sub_24963499C(v2, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
  }
  return v7 & 1;
}

uint64_t type metadata accessor for IntelligenceElement.Content()
{
  uint64_t result;

  result = qword_2544ADF60;
  if (!qword_2544ADF60)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_249665CF8()
{
  unint64_t result;

  result = qword_25786AEC8;
  if (!qword_25786AEC8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B510, &_s7ContentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AEC8);
  }
  return result;
}

uint64_t sub_249665D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntelligenceElement.Content();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_249665D80()
{
  unint64_t result;

  result = qword_25786AF00;
  if (!qword_25786AF00)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B4C0, &_s7ContentO15ImageCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF00);
  }
  return result;
}

unint64_t sub_249665DC4()
{
  unint64_t result;

  result = qword_25786AAC8;
  if (!qword_25786AAC8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Image, &type metadata for IntelligenceElement.Image);
    atomic_store(result, (unint64_t *)&qword_25786AAC8);
  }
  return result;
}

unint64_t sub_249665E08()
{
  unint64_t result;

  result = qword_25786AC48;
  if (!qword_25786AC48)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B470, &_s7ContentO14TextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AC48);
  }
  return result;
}

unint64_t sub_249665E4C()
{
  unint64_t result;

  result = qword_25786B648;
  if (!qword_25786B648)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B420, &_s7ContentO23RemoteProcessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B648);
  }
  return result;
}

unint64_t sub_249665E90()
{
  unint64_t result;

  result = qword_25786B658;
  if (!qword_25786B658)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B3D0, &_s7ContentO16RemoteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B658);
  }
  return result;
}

unint64_t sub_249665ED4()
{
  unint64_t result;

  result = qword_25786AF40;
  if (!qword_25786AF40)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B380, &_s7ContentO16WindowCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF40);
  }
  return result;
}

unint64_t sub_249665F18()
{
  unint64_t result;

  result = qword_25786AAE0;
  if (!qword_25786AAE0)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Window, &type metadata for IntelligenceElement.Window);
    atomic_store(result, (unint64_t *)&qword_25786AAE0);
  }
  return result;
}

unint64_t sub_249665F5C()
{
  unint64_t result;

  result = qword_25786AF28;
  if (!qword_25786AF28)
  {
    result = MEMORY[0x24BCF4DE0]("aHB\bhM", &_s7ContentO16ScreenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF28);
  }
  return result;
}

unint64_t sub_249665FA0()
{
  unint64_t result;

  result = qword_25786AAD8;
  if (!qword_25786AAD8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Screen, &type metadata for IntelligenceElement.Screen);
    atomic_store(result, (unint64_t *)&qword_25786AAD8);
  }
  return result;
}

unint64_t sub_249665FE4()
{
  unint64_t result;

  result = qword_25786B660;
  if (!qword_25786B660)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B2E0, &_s7ContentO32VirtualCoordinateSpaceCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B660);
  }
  return result;
}

unint64_t sub_249666028()
{
  unint64_t result;

  result = qword_25786B668;
  if (!qword_25786B668)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B290, &_s7ContentO14BaseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B668);
  }
  return result;
}

unint64_t sub_24966606C()
{
  unint64_t result;

  result = qword_25786A808;
  if (!qword_25786A808)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Image, &type metadata for IntelligenceElement.Image);
    atomic_store(result, (unint64_t *)&qword_25786A808);
  }
  return result;
}

unint64_t sub_2496660B0()
{
  unint64_t result;

  result = qword_25786A828;
  if (!qword_25786A828)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Window, &type metadata for IntelligenceElement.Window);
    atomic_store(result, (unint64_t *)&qword_25786A828);
  }
  return result;
}

unint64_t sub_2496660F4()
{
  unint64_t result;

  result = qword_25786A820;
  if (!qword_25786A820)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Screen, &type metadata for IntelligenceElement.Screen);
    atomic_store(result, (unint64_t *)&qword_25786A820);
  }
  return result;
}

char *_s7ContentOwCP(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  uint64_t v50;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        v7 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v7;
        v8 = a2 + 24;
        v9 = *((_QWORD *)a2 + 4);
        swift_bridgeObjectRetain();
        if (v9 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 24) = *v8;
        }
        else
        {
          v38 = *(_QWORD *)v8;
          sub_24963DC2C(v38, v9);
          *((_QWORD *)a1 + 3) = v38;
          *((_QWORD *)a1 + 4) = v9;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v32 = *((_QWORD *)a2 + 7);
        v33 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v33;
        if (v32 == 1)
        {
          v34 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v34;
        }
        else
        {
          a1[32] = a2[32];
          *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = v32;
          swift_bridgeObjectRetain();
        }
        v50 = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = v50;
        a1[80] = a2[80];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v12 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v12;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 47) = *(_OWORD *)(a2 + 47);
        v13 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v13;
        *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
        v14 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v15 = &a1[v14];
        v16 = &a2[v14];
        v17 = sub_24967633C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v18 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v18;
        a1[32] = a2[32];
        *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
        v19 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v19;
        v20 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
        v21 = &a1[v20];
        v22 = &a2[v20];
        v23 = *(_OWORD *)&a2[v20 + 16];
        *(_OWORD *)v21 = *(_OWORD *)&a2[v20];
        *((_OWORD *)v21 + 1) = v23;
        *((_OWORD *)v21 + 2) = *(_OWORD *)&a2[v20 + 32];
        *(_OWORD *)(v21 + 47) = *(_OWORD *)&a2[v20 + 47];
        v24 = *(_OWORD *)&a2[v20 + 80];
        *((_OWORD *)v21 + 4) = *(_OWORD *)&a2[v20 + 64];
        *((_OWORD *)v21 + 5) = v24;
        *((_OWORD *)v21 + 6) = *(_OWORD *)&a2[v20 + 96];
        v25 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v26 = &v21[v25];
        v27 = &v22[v25];
        v28 = sub_24967633C();
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v29(v26, v27, v28);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(_WORD *)a1 = *(_WORD *)a2;
        v30 = *((_QWORD *)a2 + 2);
        if (v30 == 1)
        {
          v31 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          *(_OWORD *)(a1 + 24) = v31;
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
        }
        else
        {
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = v30;
          v39 = *((_QWORD *)a2 + 4);
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = v39;
          v40 = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
          *((_QWORD *)a1 + 6) = v40;
          *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v41 = type metadata accessor for IntelligenceElement.Text();
        v42 = *(int *)(v41 + 28);
        v43 = &a1[v42];
        v44 = &a2[v42];
        v45 = sub_24967621C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
        v46 = *(int *)(v41 + 32);
        v47 = &a1[v46];
        v48 = &a2[v46];
        v49 = *((_OWORD *)v48 + 1);
        *(_OWORD *)v47 = *(_OWORD *)v48;
        *((_OWORD *)v47 + 1) = v49;
        *(_OWORD *)(v47 + 26) = *(_OWORD *)(v48 + 26);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v35 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v35;
        v36 = *((_QWORD *)a2 + 2);
        v37 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = v36;
        *((_QWORD *)a1 + 3) = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s7ContentOwxx(_QWORD *a1)
{
  uint64_t result;
  unint64_t v3;
  char *v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      result = swift_bridgeObjectRelease();
      v3 = a1[4];
      if (v3 >> 60 != 15)
        return sub_24963DBE8(a1[3], v3);
      return result;
    case 1:
      if (a1[7] != 1)
        swift_bridgeObjectRelease();
      goto LABEL_14;
    case 2:
      goto LABEL_8;
    case 3:
      swift_bridgeObjectRelease();
      a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20));
LABEL_8:
      v4 = (char *)a1 + *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v5 = sub_24967633C();
      goto LABEL_12;
    case 4:
      if (a1[2] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v4 = (char *)a1 + *(int *)(type metadata accessor for IntelligenceElement.Text() + 28);
      v5 = sub_24967621C();
LABEL_12:
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    case 5:
      swift_bridgeObjectRelease();
LABEL_14:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *_s7ContentOwcp(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      a1[1] = a2[1];
      v6 = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = v6;
      v7 = a2 + 24;
      v8 = *((_QWORD *)a2 + 4);
      swift_bridgeObjectRetain();
      if (v8 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 24) = *v7;
      }
      else
      {
        v35 = *(_QWORD *)v7;
        sub_24963DC2C(v35, v8);
        *((_QWORD *)a1 + 3) = v35;
        *((_QWORD *)a1 + 4) = v8;
      }
      goto LABEL_17;
    case 1u:
      v9 = *((_QWORD *)a2 + 7);
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v10;
      if (v9 == 1)
      {
        v11 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v11;
      }
      else
      {
        a1[32] = a2[32];
        *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v9;
        swift_bridgeObjectRetain();
      }
      v36 = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 9) = v36;
      a1[80] = a2[80];
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 2u:
      v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v12;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 47) = *(_OWORD *)(a2 + 47);
      v13 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v13;
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      v14 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_24967633C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      goto LABEL_17;
    case 3u:
      v18 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v18;
      a1[32] = a2[32];
      *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
      v19 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v19;
      v20 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = *(_OWORD *)&a2[v20 + 16];
      *(_OWORD *)v21 = *(_OWORD *)&a2[v20];
      *((_OWORD *)v21 + 1) = v23;
      *((_OWORD *)v21 + 2) = *(_OWORD *)&a2[v20 + 32];
      *(_OWORD *)(v21 + 47) = *(_OWORD *)&a2[v20 + 47];
      v24 = *(_OWORD *)&a2[v20 + 80];
      *((_OWORD *)v21 + 4) = *(_OWORD *)&a2[v20 + 64];
      *((_OWORD *)v21 + 5) = v24;
      *((_OWORD *)v21 + 6) = *(_OWORD *)&a2[v20 + 96];
      v25 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v26 = &v21[v25];
      v27 = &v22[v25];
      v28 = sub_24967633C();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      goto LABEL_17;
    case 4u:
      *(_WORD *)a1 = *(_WORD *)a2;
      v30 = *((_QWORD *)a2 + 2);
      if (v30 == 1)
      {
        v31 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = v31;
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
      }
      else
      {
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v30;
        v37 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v37;
        v38 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v38;
        *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v39 = type metadata accessor for IntelligenceElement.Text();
      v40 = *(int *)(v39 + 28);
      v41 = &a1[v40];
      v42 = &a2[v40];
      v43 = sub_24967621C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
      v44 = *(int *)(v39 + 32);
      v45 = &a1[v44];
      v46 = &a2[v44];
      v47 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v47;
      *(_OWORD *)(v45 + 26) = *(_OWORD *)(v46 + 26);
      goto LABEL_17;
    case 5u:
      v32 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v32;
      v33 = *((_QWORD *)a2 + 2);
      v34 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = v33;
      *((_QWORD *)a1 + 3) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *_s7ContentOwca(char *a1, char *a2, uint64_t a3)
{
  _OWORD *v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  __int128 v48;

  if (a1 != a2)
  {
    sub_24963499C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v6 = a2 + 24;
        v7 = *((_QWORD *)a2 + 4);
        swift_bridgeObjectRetain();
        if (v7 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 24) = *v6;
        }
        else
        {
          v38 = *(_QWORD *)v6;
          sub_24963DC2C(v38, v7);
          *((_QWORD *)a1 + 3) = v38;
          *((_QWORD *)a1 + 4) = v7;
        }
        goto LABEL_18;
      case 1u:
        v8 = *(_OWORD *)a2;
        v9 = *((_OWORD *)a2 + 1);
        if (*((_QWORD *)a2 + 7) == 1)
        {
          v10 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v10;
          *(_OWORD *)a1 = v8;
          *((_OWORD *)a1 + 1) = v9;
        }
        else
        {
          a1[32] = a2[32];
          *(_OWORD *)a1 = v8;
          *((_OWORD *)a1 + 1) = v9;
          *((_DWORD *)a1 + 9) = *((_DWORD *)a2 + 9);
          *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          swift_bridgeObjectRetain();
        }
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        a1[80] = a2[80];
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 2u:
        v11 = *(_OWORD *)a2;
        v12 = *((_OWORD *)a2 + 1);
        v13 = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 47) = *(_OWORD *)(a2 + 47);
        *((_OWORD *)a1 + 1) = v12;
        *((_OWORD *)a1 + 2) = v13;
        *(_OWORD *)a1 = v11;
        v14 = *((_OWORD *)a2 + 4);
        v15 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v15;
        *((_OWORD *)a1 + 4) = v14;
        v16 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_24967633C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        goto LABEL_18;
      case 3u:
        v20 = *(_OWORD *)a2;
        v21 = *((_OWORD *)a2 + 1);
        a1[32] = a2[32];
        *(_OWORD *)a1 = v20;
        *((_OWORD *)a1 + 1) = v21;
        *((_DWORD *)a1 + 9) = *((_DWORD *)a2 + 9);
        *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        v22 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
        v23 = &a1[v22];
        v24 = &a2[v22];
        v25 = *(_OWORD *)&a2[v22 + 47];
        v27 = *(_OWORD *)&a2[v22 + 16];
        v26 = *(_OWORD *)&a2[v22 + 32];
        *(_OWORD *)v23 = *(_OWORD *)&a2[v22];
        *((_OWORD *)v23 + 1) = v27;
        *((_OWORD *)v23 + 2) = v26;
        *(_OWORD *)(v23 + 47) = v25;
        v28 = *(_OWORD *)&a2[v22 + 64];
        v29 = *(_OWORD *)&a2[v22 + 96];
        *((_OWORD *)v23 + 5) = *(_OWORD *)&a2[v22 + 80];
        *((_OWORD *)v23 + 6) = v29;
        *((_OWORD *)v23 + 4) = v28;
        v30 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v31 = &v23[v30];
        v32 = &v24[v30];
        v33 = sub_24967633C();
        v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        goto LABEL_18;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        if (*((_QWORD *)a2 + 2) == 1)
        {
          v35 = *(_OWORD *)(a2 + 8);
          v36 = *(_OWORD *)(a2 + 24);
          v37 = *(_OWORD *)(a2 + 40);
          *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
          *(_OWORD *)(a1 + 24) = v36;
          *(_OWORD *)(a1 + 40) = v37;
          *(_OWORD *)(a1 + 8) = v35;
        }
        else
        {
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          a1[56] = a2[56];
          a1[57] = a2[57];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v39 = type metadata accessor for IntelligenceElement.Text();
        v40 = *(int *)(v39 + 28);
        v41 = &a1[v40];
        v42 = &a2[v40];
        v43 = sub_24967621C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
        v44 = *(int *)(v39 + 32);
        v45 = &a1[v44];
        v46 = &a2[v44];
        v47 = *(_OWORD *)v46;
        v48 = *((_OWORD *)v46 + 1);
        *(_OWORD *)(v45 + 26) = *(_OWORD *)(v46 + 26);
        *(_OWORD *)v45 = v47;
        *((_OWORD *)v45 + 1) = v48;
        goto LABEL_18;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *_s7ContentOwtk(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 4:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
      v13 = type metadata accessor for IntelligenceElement.Text();
      v14 = *(int *)(v13 + 28);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_24967621C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      v18 = *(int *)(v13 + 32);
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      *(_OWORD *)(v19 + 26) = *(_OWORD *)(v20 + 26);
      swift_storeEnumTagMultiPayload();
      break;
    case 3:
      v22 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v22;
      v23 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v23;
      v24 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = *(_OWORD *)&a2[v24 + 16];
      *(_OWORD *)v25 = *(_OWORD *)&a2[v24];
      *((_OWORD *)v25 + 1) = v27;
      *((_OWORD *)v25 + 2) = *(_OWORD *)&a2[v24 + 32];
      *(_OWORD *)(v25 + 47) = *(_OWORD *)&a2[v24 + 47];
      v28 = *(_OWORD *)&a2[v24 + 80];
      *((_OWORD *)v25 + 4) = *(_OWORD *)&a2[v24 + 64];
      *((_OWORD *)v25 + 5) = v28;
      *((_OWORD *)v25 + 6) = *(_OWORD *)&a2[v24 + 96];
      v29 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v30 = &v25[v29];
      v31 = &v26[v29];
      v32 = sub_24967633C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v7;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 47) = *(_OWORD *)(a2 + 47);
      v8 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v8;
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      v9 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_24967633C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *_s7ContentOwta(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  if (a1 != a2)
  {
    sub_24963499C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceElement.Content);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 4:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
        v13 = type metadata accessor for IntelligenceElement.Text();
        v14 = *(int *)(v13 + 28);
        v15 = &a1[v14];
        v16 = &a2[v14];
        v17 = sub_24967621C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        v18 = *(int *)(v13 + 32);
        v19 = &a1[v18];
        v20 = &a2[v18];
        v21 = *((_OWORD *)v20 + 1);
        *(_OWORD *)v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v21;
        *(_OWORD *)(v19 + 26) = *(_OWORD *)(v20 + 26);
        swift_storeEnumTagMultiPayload();
        break;
      case 3:
        v22 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v22;
        v23 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v23;
        v24 = *(int *)(type metadata accessor for IntelligenceElement.RemoteProcess() + 20);
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = *(_OWORD *)&a2[v24 + 16];
        *(_OWORD *)v25 = *(_OWORD *)&a2[v24];
        *((_OWORD *)v25 + 1) = v27;
        *((_OWORD *)v25 + 2) = *(_OWORD *)&a2[v24 + 32];
        *(_OWORD *)(v25 + 47) = *(_OWORD *)&a2[v24 + 47];
        v28 = *(_OWORD *)&a2[v24 + 80];
        *((_OWORD *)v25 + 4) = *(_OWORD *)&a2[v24 + 64];
        *((_OWORD *)v25 + 5) = v28;
        *((_OWORD *)v25 + 6) = *(_OWORD *)&a2[v24 + 96];
        v29 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v30 = &v25[v29];
        v31 = &v26[v29];
        v32 = sub_24967633C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v7 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v7;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 47) = *(_OWORD *)(a2 + 47);
        v8 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v8;
        *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
        v9 = *(int *)(type metadata accessor for IntelligenceFragment.RemoteContext(0) + 24);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = sub_24967633C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_249667170()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for IntelligenceFragment.RemoteContext(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for IntelligenceElement.RemoteProcess();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for IntelligenceElement.Text();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t _s7ContentO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_249667274 + 4 * byte_24967AADD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2496672A8 + 4 * byte_24967AAD8[v4]))();
}

uint64_t sub_2496672A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496672B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496672B8);
  return result;
}

uint64_t sub_2496672C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496672CCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2496672D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496672D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7ContentO10CodingKeysOMa()
{
  return &_s7ContentO10CodingKeysON;
}

ValueMetadata *_s7ContentO14BaseCodingKeysOMa()
{
  return &_s7ContentO14BaseCodingKeysON;
}

ValueMetadata *_s7ContentO32VirtualCoordinateSpaceCodingKeysOMa()
{
  return &_s7ContentO32VirtualCoordinateSpaceCodingKeysON;
}

ValueMetadata *_s7ContentO16ScreenCodingKeysOMa()
{
  return &_s7ContentO16ScreenCodingKeysON;
}

ValueMetadata *_s7ContentO16WindowCodingKeysOMa()
{
  return &_s7ContentO16WindowCodingKeysON;
}

ValueMetadata *_s7ContentO16RemoteCodingKeysOMa()
{
  return &_s7ContentO16RemoteCodingKeysON;
}

ValueMetadata *_s7ContentO23RemoteProcessCodingKeysOMa()
{
  return &_s7ContentO23RemoteProcessCodingKeysON;
}

ValueMetadata *_s7ContentO14TextCodingKeysOMa()
{
  return &_s7ContentO14TextCodingKeysON;
}

uint64_t _s7ContentO16ScreenCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2496673A8 + 4 * byte_24967AAE2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2496673C8 + 4 * byte_24967AAE7[v4]))();
}

_BYTE *sub_2496673A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2496673C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2496673D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2496673D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2496673E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2496673E8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s7ContentO15ImageCodingKeysOMa()
{
  return &_s7ContentO15ImageCodingKeysON;
}

unint64_t sub_249667408()
{
  unint64_t result;

  result = qword_25786B678;
  if (!qword_25786B678)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967AD78, &_s7ContentO15ImageCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B678);
  }
  return result;
}

unint64_t sub_249667450()
{
  unint64_t result;

  result = qword_25786B680;
  if (!qword_25786B680)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967AE30, &_s7ContentO14TextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B680);
  }
  return result;
}

unint64_t sub_249667498()
{
  unint64_t result;

  result = qword_25786B688;
  if (!qword_25786B688)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967AEE8, &_s7ContentO23RemoteProcessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B688);
  }
  return result;
}

unint64_t sub_2496674E0()
{
  unint64_t result;

  result = qword_25786B690;
  if (!qword_25786B690)
  {
    result = MEMORY[0x24BCF4DE0]("qKB\b@Q", &_s7ContentO16RemoteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B690);
  }
  return result;
}

unint64_t sub_249667528()
{
  unint64_t result;

  result = qword_25786B698;
  if (!qword_25786B698)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B058, &_s7ContentO16WindowCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B698);
  }
  return result;
}

unint64_t sub_249667570()
{
  unint64_t result;

  result = qword_25786B6A0;
  if (!qword_25786B6A0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B110, &_s7ContentO16ScreenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B6A0);
  }
  return result;
}

unint64_t sub_2496675B8()
{
  unint64_t result;

  result = qword_25786B6A8;
  if (!qword_25786B6A8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B268, &_s7ContentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B6A8);
  }
  return result;
}

unint64_t sub_249667600()
{
  unint64_t result;

  result = qword_25786AEE8;
  if (!qword_25786AEE8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B188, &_s7ContentO14BaseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AEE8);
  }
  return result;
}

unint64_t sub_249667648()
{
  unint64_t result;

  result = qword_25786AEE0;
  if (!qword_25786AEE0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B1B0, &_s7ContentO14BaseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AEE0);
  }
  return result;
}

unint64_t sub_249667690()
{
  unint64_t result;

  result = qword_25786AF70;
  if (!qword_25786AF70)
  {
    result = MEMORY[0x24BCF4DE0]("!JB\b<O", &_s7ContentO32VirtualCoordinateSpaceCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF70);
  }
  return result;
}

unint64_t sub_2496676D8()
{
  unint64_t result;

  result = qword_25786AF68;
  if (!qword_25786AF68)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B160, &_s7ContentO32VirtualCoordinateSpaceCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF68);
  }
  return result;
}

unint64_t sub_249667720()
{
  unint64_t result;

  result = qword_25786AF38;
  if (!qword_25786AF38)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B080, &_s7ContentO16ScreenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF38);
  }
  return result;
}

unint64_t sub_249667768()
{
  unint64_t result;

  result = qword_25786AF30;
  if (!qword_25786AF30)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B0A8, &_s7ContentO16ScreenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF30);
  }
  return result;
}

unint64_t sub_2496677B0()
{
  unint64_t result;

  result = qword_25786AF50;
  if (!qword_25786AF50)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967AFC8, &_s7ContentO16WindowCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF50);
  }
  return result;
}

unint64_t sub_2496677F8()
{
  unint64_t result;

  result = qword_25786AF48;
  if (!qword_25786AF48)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967AFF0, &_s7ContentO16WindowCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF48);
  }
  return result;
}

unint64_t sub_249667840()
{
  unint64_t result;

  result = qword_25786AF20;
  if (!qword_25786AF20)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967AF10, &_s7ContentO16RemoteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF20);
  }
  return result;
}

unint64_t sub_249667888()
{
  unint64_t result;

  result = qword_25786AF18;
  if (!qword_25786AF18)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967AF38, &_s7ContentO16RemoteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF18);
  }
  return result;
}

unint64_t sub_2496678D0()
{
  unint64_t result;

  result = qword_25786AF60;
  if (!qword_25786AF60)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967AE58, &_s7ContentO23RemoteProcessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF60);
  }
  return result;
}

unint64_t sub_249667918()
{
  unint64_t result;

  result = qword_25786AF58;
  if (!qword_25786AF58)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967AE80, &_s7ContentO23RemoteProcessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF58);
  }
  return result;
}

unint64_t sub_249667960()
{
  unint64_t result;

  result = qword_25786AEF8;
  if (!qword_25786AEF8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967ADA0, &_s7ContentO14TextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AEF8);
  }
  return result;
}

unint64_t sub_2496679A8()
{
  unint64_t result;

  result = qword_25786AEF0;
  if (!qword_25786AEF0)
  {
    atomic_store(result, (unint64_t *)&qword_25786AEF0);
  }
  return result;
}

unint64_t sub_2496679F0()
{
  unint64_t result;

  result = qword_25786AF10;
  if (!qword_25786AF10)
  {
    result = MEMORY[0x24BCF4DE0]("qNB\bdT", &_s7ContentO15ImageCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF10);
  }
  return result;
}

unint64_t sub_249667A38()
{
  unint64_t result;

  result = qword_25786AF08;
  if (!qword_25786AF08)
  {
    result = MEMORY[0x24BCF4DE0]("1NB\b<T", &_s7ContentO15ImageCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AF08);
  }
  return result;
}

unint64_t sub_249667A80()
{
  unint64_t result;

  result = qword_25786AED8;
  if (!qword_25786AED8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967B1D8, &_s7ContentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AED8);
  }
  return result;
}

unint64_t sub_249667AC8()
{
  unint64_t result;

  result = qword_25786AED0;
  if (!qword_25786AED0)
  {
    result = MEMORY[0x24BCF4DE0]("AIB\b,N", &_s7ContentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AED0);
  }
  return result;
}

uint64_t sub_249667B0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702060386 && a2 == 0xE400000000000000;
  if (v2 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024967DCC0 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6565726373 && a2 == 0xE600000000000000 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x776F646E6977 && a2 == 0xE600000000000000 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x725065746F6D6572 && a2 == 0xED0000737365636FLL || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6567616D69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_249667E30(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544ADF78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t IntelligenceElement.Text.text.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v0 = sub_249676120();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290];
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for IntelligenceElement.Text();
  sub_249676108();
  sub_24963EC48(&qword_25786B290, v1, MEMORY[0x24BDCC2A8]);
  return sub_2496765A0();
}

uint64_t IntelligenceElement.Text.isTruncated.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t IntelligenceElement.Text.isWhitespaceTrimmed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

unint64_t IntelligenceElement.Text.links.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t KeyPath;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6B0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_2496761C8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for IntelligenceElement.Text();
  sub_2496761E0();
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24966C578();
  sub_2496761D4();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v0;
  v9 = sub_24966C5C4((uint64_t)v4, (void (*)(char *, char *))sub_24966C5BC, (uint64_t)v11);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return v9;
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return sub_2496762A0();
}

uint64_t sub_2496680A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v26 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6D0);
  MEMORY[0x24BDAC7A8](v7);
  v25 = sub_249676120();
  v8 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6C0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_249676300();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24966E06C(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_24963EB88((uint64_t)v13, &qword_25786B6C0);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B160);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a4, 1, 1, v18);
  }
  else
  {
    v24[1] = a2;
    v20 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v20(v17, v13, v14);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B160);
    v22 = (char *)a4 + *(int *)(v21 + 48);
    type metadata accessor for IntelligenceElement.Text();
    sub_249676108();
    sub_24967612C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
    *a4 = sub_249676504();
    a4[1] = v23;
    v20(v22, v17, v14);
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a4, 0, 1, v21);
  }
}

uint64_t IntelligenceElement.Text.hasLinks.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, _QWORD);
  char *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char *v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58[32];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6C0);
  MEMORY[0x24BDAC7A8](v0);
  v46 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_2496761B0();
  v49 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v45 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_2496761BC();
  v4 = *(_QWORD *)(v52 - 8);
  v5 = MEMORY[0x24BDAC7A8](v52);
  v54 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v53 = (char *)&v44 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A710);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A7B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2496761C8();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8];
  v15 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v44 - v19;
  type metadata accessor for IntelligenceElement.Text();
  sub_2496761E0();
  v56 = v15;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v44 = v20;
  v47 = v21;
  v21(v18, (uint64_t)v20, v13);
  sub_24963EC48(&qword_25786A720, v14, MEMORY[0x24BDCC4C0]);
  v48 = v18;
  sub_2496765C4();
  v22 = *(int *)(v10 + 36);
  v57 = v12;
  v23 = &v12[v22];
  v55 = v4;
  v51 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  while (1)
  {
    v24 = v52;
    v25 = v53;
    v51(v53, v23, v52);
    sub_24963EC48(&qword_25786A728, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8], MEMORY[0x24BDCC4C8]);
    v26 = v54;
    v27 = (uint64_t)v57;
    sub_249676618();
    sub_24963EC48(&qword_25786A718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC498], MEMORY[0x24BDCC4A0]);
    v28 = sub_2496764D4();
    v29 = *(void (**)(char *, uint64_t))(v55 + 8);
    v29(v26, v24);
    v29(v25, v24);
    if ((v28 & 1) != 0)
      break;
    v30 = (void (*)(char *, _QWORD))sub_249676630();
    v32 = v49;
    v31 = v50;
    (*(void (**)(char *))(v49 + 16))(v50);
    v30(v58, 0);
    v33 = v48;
    v47(v48, v27, v13);
    sub_249676624();
    v34 = *(void (**)(char *, uint64_t))(v56 + 8);
    v34(v33, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v31, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v31, 1, v2) == 1)
      goto LABEL_7;
    v35 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v36 = v32;
    v37 = v45;
    v35(v45, v31, v2);
    KeyPath = swift_getKeyPath();
    *(&v44 - 2) = (char *)MEMORY[0x24BDAC7A8](KeyPath);
    swift_getKeyPath();
    sub_24966C578();
    v39 = (uint64_t)v46;
    sub_2496761A4();
    swift_release();
    v40 = sub_249676300();
    v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40);
    sub_24963EB88(v39, &qword_25786B6C0);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v2);
    if (v41 != 1)
    {
      sub_24963EB88((uint64_t)v57, &qword_25786A7B0);
      v42 = 1;
      goto LABEL_8;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, 1, 1, v2);
LABEL_7:
  sub_24963EB88(v27, &qword_25786A7B0);
  v42 = 0;
  v34 = *(void (**)(char *, uint64_t))(v56 + 8);
LABEL_8:
  v34(v44, v13);
  return v42;
}

_QWORD *IntelligenceElement.Text.selections.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t KeyPath;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6C8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_2496761C8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for IntelligenceElement.Text();
  sub_2496761E0();
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24966CA30();
  sub_2496761D4();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v0;
  v9 = sub_24966CA7C((uint64_t)v4, (uint64_t (*)(_QWORD, unsigned __int8 *))sub_24966CA74, (uint64_t)v11);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return v9;
}

uint64_t sub_249668928(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6D0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_249676120();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = 0;
  if ((a1 & 1) != 0)
  {
    type metadata accessor for IntelligenceElement.Text();
    sub_249676108();
    sub_24967612C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_249676504();
  }
  return result;
}

uint64_t IntelligenceElement.Text.hasSelections.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, _QWORD);
  void (*v29)(char *);
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t KeyPath;
  char v37;
  uint64_t v38;
  char *v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char v52[32];

  v0 = sub_2496761B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_2496761BC();
  v51 = *(_QWORD *)(v47 - 8);
  v4 = MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v40 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A710);
  MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A7B0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2496761C8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v40 - v17;
  type metadata accessor for IntelligenceElement.Text();
  sub_2496761E0();
  v50 = v13;
  v19 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v40 = v18;
  v42 = v19;
  v19(v16, v18, v12);
  sub_24963EC48(&qword_25786A720, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8], MEMORY[0x24BDCC4C0]);
  v43 = v16;
  sub_2496765C4();
  v20 = &v11[*(int *)(v9 + 36)];
  v46 = *(void (**)(char *))(v51 + 16);
  v41 = v3;
  v44 = v0;
  while (1)
  {
    v21 = v1;
    v23 = v47;
    v22 = v48;
    v24 = v20;
    v46(v48);
    sub_24963EC48(&qword_25786A728, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8], MEMORY[0x24BDCC4C8]);
    v25 = v49;
    sub_249676618();
    sub_24963EC48(&qword_25786A718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC498], MEMORY[0x24BDCC4A0]);
    v26 = sub_2496764D4();
    v27 = *(void (**)(char *, uint64_t))(v51 + 8);
    v27(v25, v23);
    v27(v22, v23);
    if ((v26 & 1) != 0)
      break;
    v28 = (void (*)(char *, _QWORD))sub_249676630();
    v1 = v21;
    v29 = *(void (**)(char *))(v21 + 16);
    v30 = v44;
    v31 = v45;
    v29(v45);
    v28(v52, 0);
    v32 = v43;
    v42(v43, v11, v12);
    v33 = v24;
    sub_249676624();
    v34 = *(void (**)(char *, uint64_t))(v50 + 8);
    v34(v32, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v31, 0, 1, v30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v31, 1, v30) == 1)
      goto LABEL_9;
    v35 = v41;
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v41, v31, v30);
    KeyPath = swift_getKeyPath();
    *(&v40 - 2) = (char *)MEMORY[0x24BDAC7A8](KeyPath);
    swift_getKeyPath();
    sub_24966CA30();
    sub_2496761A4();
    swift_release();
    v37 = v52[0];
    if (v52[0] == 2)
    {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v35, v30);
      v20 = v33;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v35, v30);
      v20 = v33;
      if ((v37 & 1) != 0)
      {
        sub_24963EB88((uint64_t)v11, &qword_25786A7B0);
        v38 = 1;
        goto LABEL_10;
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v45, 1, 1, v44);
LABEL_9:
  sub_24963EB88((uint64_t)v11, &qword_25786A7B0);
  v38 = 0;
  v34 = *(void (**)(char *, uint64_t))(v50 + 8);
LABEL_10:
  v34(v40, v12);
  return v38;
}

uint64_t IntelligenceElement.Text.averageFontSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;

  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6D0);
  MEMORY[0x24BDAC7A8](v33);
  v32 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_249676120();
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A7A0);
  MEMORY[0x24BDAC7A8](v34);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6D8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6E0);
  v36 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_2496761C8();
  v12 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6E8);
  v37 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v0 + *(int *)(type metadata accessor for IntelligenceElement.Text() + 28);
  sub_2496761E0();
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24966CE00();
  sub_2496761D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v35);
  MEMORY[0x24BCF4150](v9);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
  sub_249676198();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v8, 1, v18) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v15);
LABEL_10:
    *(double *)&result = 0.0;
    return result;
  }
  v19 = MEMORY[0x24BDCC508];
  v20 = 0.0;
  v21 = 0.0;
  do
  {
    while (1)
    {
      v22 = *(double *)v8;
      v23 = v8[8];
      sub_24965FE60((uint64_t)&v8[*(int *)(v18 + 48)], (uint64_t)v5, &qword_25786A7A0);
      if ((v23 & 1) == 0)
      {
        sub_2496761F8();
        sub_24963EC48(&qword_25786B6F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], v19);
        if ((sub_2496764D4() & 1) == 0)
          break;
      }
      sub_24963EB88((uint64_t)v5, &qword_25786A7A0);
      sub_249676198();
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6F0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v8, 1, v18) == 1)
        goto LABEL_9;
    }
    v24 = v29;
    sub_249676108();
    v25 = (uint64_t)v32;
    sub_24967612C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v31);
    v36 = v25 + *(int *)(v33 + 40);
    sub_24963EC48(&qword_25786B700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
    v26 = sub_24967660C();
    sub_24963EB88(v25, &qword_25786B6D0);
    sub_24963EB88((uint64_t)v5, &qword_25786A7A0);
    v20 = v20 + v22 * (double)v26;
    v21 = v21 + (double)v26;
    sub_249676198();
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6F0);
  }
  while ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v8, 1, v18) != 1);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v15);
  if (v21 <= 0.0)
    goto LABEL_10;
  *(double *)&result = v20 / v21;
  return result;
}

uint64_t sub_249669398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_2496764D4() & 1;
}

uint64_t IntelligenceElement.Text.attributedText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IntelligenceElement.Text() + 28);
  v4 = sub_24967621C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IntelligenceElement.Text.Editable.label.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntelligenceElement.Text.Editable.label.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IntelligenceElement.Text.Editable.label.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Text.Editable.prompt.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntelligenceElement.Text.Editable.prompt.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*IntelligenceElement.Text.Editable.prompt.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Text.Editable.contentType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntelligenceElement.Text.Editable.contentType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*IntelligenceElement.Text.Editable.contentType.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Text.Editable.isSecure.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t IntelligenceElement.Text.Editable.isSecure.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*IntelligenceElement.Text.Editable.isSecure.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Text.Editable.isFocused.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t IntelligenceElement.Text.Editable.isFocused.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = result;
  return result;
}

uint64_t (*IntelligenceElement.Text.Editable.isFocused.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Text.Editable.init(label:prompt:contentType:isSecure:isFocused:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 49) = a8;
  return result;
}

uint64_t IntelligenceElement.Text.editable.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_WORD *)(a1 + 48) = *(_WORD *)(v1 + 56);
  return sub_24966CE44(v2, v3);
}

__n128 IntelligenceElement.Text.editable.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v6 = (__n128)a1[1];
  v7 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_WORD *)a1 + 24);
  sub_24966CE84(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  *(_OWORD *)(v1 + 8) = v7;
  result = v6;
  *(__n128 *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  *(_WORD *)(v1 + 56) = v4;
  return result;
}

uint64_t (*IntelligenceElement.Text.editable.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Text.init(text:editable:textOptions:)@<X0>(__int128 *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  __int128 v17;
  __int128 v18;

  v6 = sub_249676264();
  MEMORY[0x24BDAC7A8](v6);
  v17 = a1[1];
  v18 = *a1;
  v8 = *((_QWORD *)a1 + 4);
  v7 = *((_QWORD *)a1 + 5);
  LOWORD(a1) = *((_WORD *)a1 + 24);
  v9 = a2[1];
  v12 = *a2;
  v13 = a2[2];
  v14 = a2[3];
  v15 = a2[4];
  v16 = *((_WORD *)a2 + 20);
  *(_WORD *)a3 = 0;
  v10 = a3 + *(int *)(type metadata accessor for IntelligenceElement.Text() + 32);
  *(_QWORD *)v10 = 1000000;
  *(_WORD *)(v10 + 8) = 256;
  *(_QWORD *)(v10 + 16) = 100000;
  *(_WORD *)(v10 + 24) = 256;
  *(_QWORD *)(v10 + 32) = 10000;
  *(_WORD *)(v10 + 40) = 256;
  sub_249676258();
  result = sub_249676228();
  *(_OWORD *)(a3 + 8) = v18;
  *(_OWORD *)(a3 + 24) = v17;
  *(_QWORD *)(a3 + 40) = v8;
  *(_QWORD *)(a3 + 48) = v7;
  *(_WORD *)(a3 + 56) = (_WORD)a1;
  if ((v9 & 0xFF00) != 0x200)
  {
    *(_QWORD *)v10 = v12;
    *(_BYTE *)(v10 + 8) = v9 & 1;
    *(_BYTE *)(v10 + 9) = BYTE1(v9) & 1;
    *(_QWORD *)(v10 + 16) = v13;
    *(_BYTE *)(v10 + 24) = v14 & 1;
    *(_BYTE *)(v10 + 25) = BYTE1(v14) & 1;
    *(_QWORD *)(v10 + 32) = v15;
    *(_BYTE *)(v10 + 40) = v16 & 1;
    *(_BYTE *)(v10 + 41) = HIBYTE(v16) & 1;
  }
  return result;
}

double IntelligenceElement.Text.init(text:editable:)@<D0>(__int128 *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  double result;
  __int128 v10;
  __int128 v11;

  v4 = sub_249676264();
  MEMORY[0x24BDAC7A8](v4);
  v10 = a1[1];
  v11 = *a1;
  v5 = *((_QWORD *)a1 + 4);
  v6 = *((_QWORD *)a1 + 5);
  v7 = *((_WORD *)a1 + 24);
  *(_WORD *)a2 = 0;
  v8 = a2 + *(int *)(type metadata accessor for IntelligenceElement.Text() + 32);
  *(_QWORD *)v8 = 1000000;
  *(_WORD *)(v8 + 8) = 256;
  *(_QWORD *)(v8 + 16) = 100000;
  *(_WORD *)(v8 + 24) = 256;
  *(_QWORD *)(v8 + 32) = 10000;
  *(_WORD *)(v8 + 40) = 256;
  sub_249676258();
  sub_249676228();
  *(_OWORD *)(a2 + 8) = v11;
  result = *(double *)&v10;
  *(_OWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  *(_WORD *)(a2 + 56) = v7;
  return result;
}

uint64_t IntelligenceElement.Text.init(attributedText:editable:textOptions:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  __int16 v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  int v36;

  v8 = sub_24967621C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v26 - v13;
  v15 = *a2;
  v34 = a2[1];
  v35 = v15;
  v16 = *((_QWORD *)a2 + 4);
  v32 = *((_QWORD *)a2 + 5);
  v33 = v16;
  v36 = *((unsigned __int16 *)a2 + 24);
  v17 = *a3;
  v31 = a3[1];
  v18 = a3[2];
  v26 = v17;
  v27 = v18;
  v19 = a3[4];
  v28 = a3[3];
  v29 = v19;
  v30 = *((unsigned __int16 *)a3 + 20);
  *(_WORD *)a4 = 0;
  *(_OWORD *)(a4 + 8) = xmmword_24967B560;
  v20 = type metadata accessor for IntelligenceElement.Text();
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(_WORD *)(a4 + 56) = 0;
  v21 = a4 + *(int *)(v20 + 32);
  *(_QWORD *)v21 = 1000000;
  *(_WORD *)(v21 + 8) = 256;
  *(_QWORD *)(v21 + 16) = 100000;
  *(_WORD *)(v21 + 24) = 256;
  *(_QWORD *)(v21 + 32) = 10000;
  *(_WORD *)(v21 + 40) = 256;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  swift_getKeyPath();
  sub_24966CED4();
  sub_24963EC48(&qword_25786A740, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
  sub_249676234();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4 + *(int *)(v20 + 28), v14, v8);
  result = sub_24966CE84(*(_QWORD *)(a4 + 8), *(_QWORD *)(a4 + 16));
  *(_OWORD *)(a4 + 8) = v35;
  *(_OWORD *)(a4 + 24) = v34;
  v24 = v31;
  v23 = v32;
  *(_QWORD *)(a4 + 40) = v33;
  *(_QWORD *)(a4 + 48) = v23;
  *(_WORD *)(a4 + 56) = v36;
  if ((v24 & 0xFF00) != 0x200)
  {
    *(_QWORD *)v21 = v26;
    *(_BYTE *)(v21 + 8) = v24 & 1;
    *(_BYTE *)(v21 + 9) = HIBYTE(v24) & 1;
    v25 = v28;
    *(_QWORD *)(v21 + 16) = v27;
    *(_BYTE *)(v21 + 24) = v25 & 1;
    *(_BYTE *)(v21 + 25) = HIBYTE(v25) & 1;
    *(_QWORD *)(v21 + 32) = v29;
    HIBYTE(v25) = BYTE1(v30);
    *(_BYTE *)(v21 + 40) = v30 & 1;
    *(_BYTE *)(v21 + 41) = HIBYTE(v25) & 1;
  }
  return result;
}

uint64_t IntelligenceElement.Text.init(attributedText:editable:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  __int128 v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  _BYTE v25[12];
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v31 = a3;
  v5 = type metadata accessor for IntelligenceElement.Text();
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_24967621C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = &v25[-v14];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v25[-v16];
  v18 = *a2;
  v29 = a2[1];
  v30 = v18;
  v19 = *((_QWORD *)a2 + 4);
  v27 = *((_QWORD *)a2 + 5);
  v28 = v19;
  v26 = *((unsigned __int16 *)a2 + 24);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
  v20(&v25[-v16], a1, v8);
  *(_WORD *)v7 = 0;
  *(_OWORD *)(v7 + 8) = xmmword_24967B560;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *((_WORD *)v7 + 28) = 0;
  v21 = &v7[*(int *)(v5 + 32)];
  *(_QWORD *)v21 = 1000000;
  *((_WORD *)v21 + 4) = 256;
  *((_QWORD *)v21 + 2) = 100000;
  *((_WORD *)v21 + 12) = 256;
  *((_QWORD *)v21 + 4) = 10000;
  *((_WORD *)v21 + 20) = 256;
  v20(v12, (uint64_t)v17, v8);
  swift_getKeyPath();
  sub_24966CED4();
  sub_24963EC48(&qword_25786A740, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
  sub_249676234();
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  v22((uint64_t)v17, v8);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(&v7[*(int *)(v5 + 28)], v15, v8);
  sub_24966CE84(*((_QWORD *)v7 + 1), *((_QWORD *)v7 + 2));
  *(_OWORD *)(v7 + 8) = v30;
  *(_OWORD *)(v7 + 24) = v29;
  v23 = v27;
  *((_QWORD *)v7 + 5) = v28;
  *((_QWORD *)v7 + 6) = v23;
  *((_WORD *)v7 + 28) = v26;
  sub_24966CF18((uint64_t)v7, v31);
  return v22(a1, v8);
}

void sub_249669E00(char *a1)
{
  sub_249674534(*a1);
}

void sub_249669E0C()
{
  char *v0;

  sub_24966E44C(*v0);
}

void sub_249669E14()
{
  __asm { BR              X10 }
}

uint64_t sub_249669E50()
{
  sub_249676534();
  return swift_bridgeObjectRelease();
}

void sub_249669EB8(uint64_t a1)
{
  char *v1;

  sub_24966E6C0(a1, *v1);
}

uint64_t sub_249669EC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24966DF9C();
  *a1 = result;
  return result;
}

uint64_t sub_249669EEC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_249669F1C + 4 * byte_24967B574[*v0]))();
}

void sub_249669F1C(_QWORD *a1@<X8>)
{
  *a1 = 0x656C626174696465;
  a1[1] = 0xE800000000000000;
}

void sub_249669F38(_QWORD *a1@<X8>)
{
  *a1 = 0x61636E7572547369;
  a1[1] = 0xEB00000000646574;
}

void sub_249669F5C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000024967D0D0;
}

uint64_t sub_249669F7C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249669FAC + 4 * byte_24967B578[*v0]))(0x656761726F7473, 0xE700000000000000);
}

uint64_t sub_249669FAC()
{
  return 0x656C626174696465;
}

uint64_t sub_249669FC4()
{
  return 0x61636E7572547369;
}

unint64_t sub_249669FE4()
{
  return 0xD000000000000013;
}

uint64_t sub_24966A000@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24966DF9C();
  *a1 = result;
  return result;
}

uint64_t sub_24966A024()
{
  sub_24966CF5C();
  return sub_249676A20();
}

uint64_t sub_24966A04C()
{
  sub_24966CF5C();
  return sub_249676A2C();
}

uint64_t IntelligenceElement.Text.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int16 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  Swift::Int_optional *v31;
  Swift::Bool *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _BOOL4 v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int16 v57;
  char v58;

  v2 = v1;
  v4 = sub_24967621C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v41 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A7B8);
  v48 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24966CF5C();
  v50 = v12;
  sub_249676A14();
  v13 = type metadata accessor for IntelligenceElement.Text();
  v14 = v2 + *(int *)(v13 + 28);
  v51 = v5;
  v52 = v9;
  v15 = v9;
  v16 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, v14, v4);
  v17 = *(_OWORD *)(v2 + 16);
  if (*(_QWORD *)(v2 + 16) == 1)
  {
    v18 = v10;
    v19 = v49;
  }
  else
  {
    v20 = v47;
    v45 = v10;
    v46 = v16;
    v21 = *(_QWORD *)(v2 + 8);
    v22 = *(_OWORD *)(v2 + 32);
    v23 = *(_QWORD *)(v2 + 48);
    v24 = *(_WORD *)(v2 + 56);
    if ((v24 & 1) != 0)
    {
      v42 = *(_QWORD *)(v2 + 48);
      v43 = v22;
      v44 = v17;
      sub_249676210();
      v26 = v51;
      v25 = v52;
      v27 = v46;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v46);
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v25, v20, v27);
      v23 = v42;
      v22 = v43;
      v17 = v44;
    }
    v53 = v21;
    v54 = v17;
    v55 = v22;
    v56 = v23;
    v57 = v24 & 0x101;
    v58 = 1;
    sub_24966CFE4();
    v18 = v45;
    v29 = v49;
    v28 = v50;
    sub_24967693C();
    v19 = v29;
    if (v29)
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v28, v18);
    }
    v16 = v46;
  }
  if ((IntelligenceElement.Text.hasSelections.getter() & 1) != 0)
  {
    v31 = (Swift::Int_optional *)(v2 + *(int *)(v13 + 32));
    v32 = (Swift::Bool *)&v31[1];
  }
  else if (*(_QWORD *)(v2 + 16) != 1 && (*(_WORD *)(v2 + 56) & 0x100) != 0)
  {
    v34 = v2 + *(int *)(v13 + 32);
    v31 = (Swift::Int_optional *)(v34 + 16);
    v32 = (Swift::Bool *)(v34 + 25);
  }
  else
  {
    v33 = v2 + *(int *)(v13 + 32);
    v31 = (Swift::Int_optional *)(v33 + 32);
    v32 = (Swift::Bool *)(v33 + 41);
  }
  v35 = v50;
  v36 = *v32;
  if (!AttributedString.trim(maximumLength:trimWhitespace:)(*v31, *v32) || (LOBYTE(v53) = 2, sub_249676918(), !v19))
  {
    if (!v36 || (LOBYTE(v53) = 3, sub_249676918(), !v19))
    {
      sub_249676078();
      swift_allocObject();
      sub_24967606C();
      sub_24966CFA0();
      v37 = sub_249676060();
      if (!v19)
      {
        v39 = v37;
        v40 = v38;
        swift_release();
        v53 = v39;
        *(_QWORD *)&v54 = v40;
        v58 = 0;
        sub_249641CEC();
        sub_24967693C();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v16);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v18);
        return sub_24963DBE8(v39, v40);
      }
      swift_release();
    }
  }
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v35, v18);
}

uint64_t IntelligenceElement.Text.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  char v35;

  v25 = a2;
  *(_QWORD *)&v29 = sub_24967621C();
  *(_QWORD *)&v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9D8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IntelligenceElement.Text();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)v13 = 0;
  *(_OWORD *)(v13 + 8) = xmmword_24967B560;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  *((_WORD *)v13 + 28) = 0;
  v26 = v11;
  v14 = &v13[*(int *)(v11 + 32)];
  *(_QWORD *)v14 = 1000000;
  *((_WORD *)v14 + 4) = 256;
  *((_QWORD *)v14 + 2) = 100000;
  *((_WORD *)v14 + 12) = 256;
  *((_QWORD *)v14 + 4) = 10000;
  *((_WORD *)v14 + 20) = 256;
  v15 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_24966CF5C();
  sub_2496769FC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    return sub_24966CE84(*((_QWORD *)v13 + 1), *((_QWORD *)v13 + 2));
  }
  else
  {
    v24 = v7;
    v35 = 0;
    sub_249641DFC();
    sub_2496768B8();
    v16 = v30;
    sub_249676054();
    swift_allocObject();
    sub_249676048();
    sub_24966D028();
    v17 = v29;
    sub_24967603C();
    v23 = v16;
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v13[*(int *)(v26 + 28)], v5, v17);
    LOBYTE(v30) = 2;
    *v13 = sub_249676864() & 1;
    LOBYTE(v30) = 3;
    v13[1] = sub_249676864() & 1;
    v35 = 1;
    sub_24966D06C();
    sub_249676888();
    v18 = v23;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
    sub_24963DBE8(v18, *((unint64_t *)&v16 + 1));
    v29 = v30;
    v27 = v31;
    v19 = v32;
    v20 = v33;
    v21 = v34;
    sub_24966CE84(*((_QWORD *)v13 + 1), *((_QWORD *)v13 + 2));
    *(_OWORD *)(v13 + 8) = v29;
    *(_OWORD *)(v13 + 24) = v27;
    *((_QWORD *)v13 + 5) = v19;
    *((_QWORD *)v13 + 6) = v20;
    *((_WORD *)v13 + 28) = v21;
    sub_24966D0B0((uint64_t)v13, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    return sub_24966D0F4((uint64_t)v13);
  }
}

uint64_t sub_24966A8E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceElement.Text.init(from:)(a1, a2);
}

uint64_t sub_24966A8F4(_QWORD *a1)
{
  return IntelligenceElement.Text.encode(to:)(a1);
}

void sub_24966A908(char *a1)
{
  sub_24967439C(*a1);
}

void sub_24966A914()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2496769A8();
  __asm { BR              X9 }
}

uint64_t sub_24966A95C()
{
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

void sub_24966A9EC()
{
  __asm { BR              X10 }
}

uint64_t sub_24966AA24()
{
  sub_249676534();
  return swift_bridgeObjectRelease();
}

void sub_24966AAA0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2496769A8();
  __asm { BR              X9 }
}

uint64_t sub_24966AAE4()
{
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_24966AB74@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24966DFE4();
  *a1 = result;
  return result;
}

uint64_t sub_24966ABA0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_24966ABCC + 4 * byte_24967B58B[*v0]))();
}

void sub_24966ABCC(_QWORD *a1@<X8>)
{
  *a1 = 0x74706D6F7270;
  a1[1] = 0xE600000000000000;
}

void sub_24966ABE4(_QWORD *a1@<X8>)
{
  *a1 = 0x54746E65746E6F63;
  a1[1] = 0xEB00000000657079;
}

void sub_24966AC08(_QWORD *a1@<X8>)
{
  *a1 = 0x6572756365537369;
  a1[1] = 0xE800000000000000;
}

void sub_24966AC24(_QWORD *a1@<X8>)
{
  *a1 = 0x657375636F467369;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_24966AC44()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24966AC70 + 4 * byte_24967B590[*v0]))(0x6C6562616CLL, 0xE500000000000000);
}

uint64_t sub_24966AC70()
{
  return 0x74706D6F7270;
}

uint64_t sub_24966AC84()
{
  return 0x54746E65746E6F63;
}

uint64_t sub_24966ACA4()
{
  return 0x6572756365537369;
}

uint64_t sub_24966ACBC()
{
  return 0x657375636F467369;
}

uint64_t sub_24966ACD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24966DFE4();
  *a1 = result;
  return result;
}

uint64_t sub_24966ACFC()
{
  sub_24966D130();
  return sub_249676A20();
}

uint64_t sub_24966AD24()
{
  sub_24966D130();
  return sub_249676A2C();
}

uint64_t IntelligenceElement.Text.Editable.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B710);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v17 = *(_QWORD *)(v1 + 24);
  v18 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v15 = *(_QWORD *)(v1 + 40);
  v16 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 48);
  v13 = *(unsigned __int8 *)(v1 + 49);
  v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24966D130();
  sub_249676A14();
  v24 = 0;
  v9 = v19;
  sub_2496768E8();
  if (!v9)
  {
    v10 = v13;
    v11 = v14;
    v23 = 1;
    sub_2496768E8();
    v22 = 2;
    sub_2496768E8();
    if (v11)
    {
      v20 = 3;
      sub_249676918();
    }
    if (v10)
    {
      v21 = 4;
      sub_249676918();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IntelligenceElement.Text.Editable.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B720);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24966D130();
  sub_2496769FC();
  if (!v2)
  {
    v31 = 0;
    v9 = sub_249676858();
    v12 = v11;
    v26 = v9;
    v30 = 1;
    swift_bridgeObjectRetain();
    v13 = sub_249676858();
    v15 = v14;
    v24 = v13;
    v25 = a2;
    v29 = 2;
    swift_bridgeObjectRetain();
    v16 = sub_249676858();
    v18 = v17;
    v23 = v16;
    v28 = 3;
    swift_bridgeObjectRetain();
    v22 = sub_249676864();
    v27 = 4;
    v19 = sub_249676864();
    v22 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v20 = v25;
    *v25 = v26;
    v20[1] = v12;
    v20[2] = v24;
    v20[3] = v15;
    v20[4] = v23;
    v20[5] = v18;
    *((_BYTE *)v20 + 48) = v22;
    *((_BYTE *)v20 + 49) = v19 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24966B1F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IntelligenceElement.Text.Editable.init(from:)(a1, a2);
}

uint64_t sub_24966B204(_QWORD *a1)
{
  return IntelligenceElement.Text.Editable.encode(to:)(a1);
}

unint64_t static IntelligenceElement.Text.Attributes.SelectedAttribute.name.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_24966B238()
{
  return sub_2496762E8();
}

uint64_t sub_24966B254()
{
  return sub_2496762F4();
}

unint64_t sub_24966B270()
{
  return 0xD000000000000014;
}

unint64_t static IntelligenceElement.Text.Attributes.FontSizeAttribute.name.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_24966B2B8()
{
  return sub_2496762E8();
}

uint64_t sub_24966B2D4()
{
  return sub_2496762F4();
}

unint64_t sub_24966B2F0()
{
  return 0xD000000000000014;
}

void sub_24966B318()
{
  sub_24966CED4();
  JUMPOUT(0x24BCF40B4);
}

void sub_24966B350()
{
  sub_24966CED4();
  JUMPOUT(0x24BCF40C0);
}

uint64_t IntelligenceElement.Text.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  __int16 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  uint64_t v92;
  uint64_t (*v93)(char *, uint64_t);
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD v103[2];

  v1 = v0;
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6C8);
  v2 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v98 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6B0);
  v96 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v97 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_2496761C8();
  v99 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_249676120();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290];
  MEMORY[0x24BDAC7A8](v8);
  v10 = v0 + *(int *)(type metadata accessor for IntelligenceElement.Text() + 28);
  sub_249676108();
  sub_24963EC48(&qword_25786B290, v9, MEMORY[0x24BDCC2A8]);
  v11 = sub_2496765A0();
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = v11 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    strcpy((char *)v103, "text: \"");
    v103[1] = 0xE700000000000000;
    sub_249676108();
    sub_2496765A0();
    sub_24967654C();
    swift_bridgeObjectRelease();
    sub_24967654C();
    v15 = v103[0];
    v16 = v103[1];
    v17 = sub_2496325A0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v19 = v17[2];
    v18 = v17[3];
    if (v19 >= v18 >> 1)
      v17 = sub_2496325A0((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
    v17[2] = v19 + 1;
    v20 = &v17[2 * v19];
    v20[4] = v15;
    v20[5] = v16;
  }
  else
  {
    v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if (*(_BYTE *)v1 == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_2496325A0(0, v17[2] + 1, 1, v17);
    v22 = v17[2];
    v21 = v17[3];
    if (v22 >= v21 >> 1)
      v17 = sub_2496325A0((_QWORD *)(v21 > 1), v22 + 1, 1, v17);
    v17[2] = v22 + 1;
    v23 = &v17[2 * v22];
    v23[4] = 0xD000000000000011;
    v23[5] = 0x800000024967DD40;
  }
  v24 = IntelligenceElement.Text.averageFontSize.getter();
  if ((v25 & 1) == 0)
  {
    v26 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B1C0);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_2496786E0;
    v28 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v27 + 56) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(v27 + 64) = v28;
    *(_QWORD *)(v27 + 32) = v26;
    v29 = sub_2496764F8();
    v31 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_2496325A0(0, v17[2] + 1, 1, v17);
    v33 = v17[2];
    v32 = v17[3];
    if (v33 >= v32 >> 1)
      v17 = sub_2496325A0((_QWORD *)(v32 > 1), v33 + 1, 1, v17);
    v17[2] = v33 + 1;
    v34 = &v17[2 * v33];
    v34[4] = v29;
    v34[5] = v31;
  }
  if ((IntelligenceElement.Text.hasLinks.getter() & 1) != 0)
  {
    v95 = v2;
    v103[0] = 0;
    v103[1] = 0xE000000000000000;
    sub_249676798();
    swift_bridgeObjectRelease();
    strcpy((char *)v103, "contains ");
    WORD1(v103[1]) = 0;
    HIDWORD(v103[1]) = -385875968;
    sub_2496761E0();
    KeyPath = swift_getKeyPath();
    *(&v92 - 2) = MEMORY[0x24BDAC7A8](KeyPath);
    swift_getKeyPath();
    v36 = v4;
    v94 = sub_24966C578();
    v37 = (uint64_t)v97;
    sub_2496761D4();
    swift_release();
    v93 = *(uint64_t (**)(char *, uint64_t))(v99 + 8);
    v38 = v93(v7, v101);
    MEMORY[0x24BDAC7A8](v38);
    *(&v92 - 2) = v1;
    v39 = sub_24966C5C4(v37, (void (*)(char *, char *))sub_24966E0D0, (uint64_t)(&v92 - 4));
    v40 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
    v40(v37, v36);
    v41 = *(_QWORD **)(v39 + 16);
    swift_bridgeObjectRelease();
    v102 = v41;
    sub_249676954();
    sub_24967654C();
    swift_bridgeObjectRelease();
    sub_24967654C();
    v96 = v10;
    sub_2496761E0();
    v42 = swift_getKeyPath();
    *(&v92 - 2) = MEMORY[0x24BDAC7A8](v42);
    swift_getKeyPath();
    sub_2496761D4();
    swift_release();
    v94 = (unint64_t)v7;
    v43 = v93(v7, v101);
    MEMORY[0x24BDAC7A8](v43);
    *(&v92 - 2) = v1;
    sub_24966C5C4(v37, (void (*)(char *, char *))sub_24966E0D0, (uint64_t)(&v92 - 4));
    v40(v37, v36);
    swift_bridgeObjectRelease();
    sub_24967654C();
    swift_bridgeObjectRelease();
    v44 = v103[0];
    v45 = v103[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_2496325A0(0, v17[2] + 1, 1, v17);
    v47 = v17[2];
    v46 = v17[3];
    v48 = v100;
    v7 = (char *)v94;
    v2 = v95;
    if (v47 >= v46 >> 1)
      v17 = sub_2496325A0((_QWORD *)(v46 > 1), v47 + 1, 1, v17);
    v17[2] = v47 + 1;
    v49 = &v17[2 * v47];
    v49[4] = v44;
    v49[5] = v45;
  }
  else
  {
    v48 = v100;
  }
  if ((IntelligenceElement.Text.hasSelections.getter() & 1) != 0)
  {
    strcpy((char *)v103, "selections: ");
    BYTE5(v103[1]) = 0;
    HIWORD(v103[1]) = -5120;
    sub_2496761E0();
    v50 = swift_getKeyPath();
    *(&v92 - 2) = MEMORY[0x24BDAC7A8](v50);
    swift_getKeyPath();
    sub_24966CA30();
    v51 = (uint64_t)v98;
    sub_2496761D4();
    swift_release();
    v52 = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v7, v101);
    MEMORY[0x24BDAC7A8](v52);
    *(&v92 - 2) = v1;
    v53 = sub_24966CA7C(v51, (uint64_t (*)(_QWORD, unsigned __int8 *))sub_24966E0B4, (uint64_t)(&v92 - 4));
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v51, v48);
    MEMORY[0x24BCF45A0](v53, MEMORY[0x24BEE0D00]);
    sub_24967654C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v54 = v103[0];
    v55 = v103[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_2496325A0(0, v17[2] + 1, 1, v17);
    v57 = v17[2];
    v56 = v17[3];
    if (v57 >= v56 >> 1)
      v17 = sub_2496325A0((_QWORD *)(v56 > 1), v57 + 1, 1, v17);
    v17[2] = v57 + 1;
    v58 = &v17[2 * v57];
    v58[4] = v54;
    v58[5] = v55;
  }
  v59 = *(_QWORD *)(v1 + 16);
  if (v59 == 1)
  {
    v60 = 0xE400000000000000;
    v61 = 1954047316;
  }
  else
  {
    v62 = *(_QWORD *)(v1 + 24);
    v63 = *(_QWORD *)(v1 + 32);
    v64 = *(_QWORD *)(v1 + 40);
    v65 = *(_QWORD *)(v1 + 48);
    v66 = *(_WORD *)(v1 + 56);
    if (v59)
    {
      v67 = HIBYTE(v59) & 0xF;
      if ((v59 & 0x2000000000000000) == 0)
        v67 = *(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFLL;
      if (v67)
      {
        strcpy((char *)v103, "label: \"");
        BYTE1(v103[1]) = 0;
        WORD1(v103[1]) = 0;
        HIDWORD(v103[1]) = -402653184;
        sub_24967654C();
        sub_24967654C();
        v68 = v103[0];
        v69 = v103[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_2496325A0(0, v17[2] + 1, 1, v17);
        v71 = v17[2];
        v70 = v17[3];
        if (v71 >= v70 >> 1)
          v17 = sub_2496325A0((_QWORD *)(v70 > 1), v71 + 1, 1, v17);
        v17[2] = v71 + 1;
        v72 = &v17[2 * v71];
        v72[4] = v68;
        v72[5] = v69;
      }
    }
    if (v63)
    {
      v73 = HIBYTE(v63) & 0xF;
      if ((v63 & 0x2000000000000000) == 0)
        v73 = v62 & 0xFFFFFFFFFFFFLL;
      if (v73)
      {
        strcpy((char *)v103, "prompt: \"");
        WORD1(v103[1]) = 0;
        HIDWORD(v103[1]) = -385875968;
        sub_24967654C();
        sub_24967654C();
        v74 = v103[0];
        v75 = v103[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_2496325A0(0, v17[2] + 1, 1, v17);
        v77 = v17[2];
        v76 = v17[3];
        if (v77 >= v76 >> 1)
          v17 = sub_2496325A0((_QWORD *)(v76 > 1), v77 + 1, 1, v17);
        v17[2] = v77 + 1;
        v78 = &v17[2 * v77];
        v78[4] = v74;
        v78[5] = v75;
      }
    }
    if (v65)
    {
      v79 = HIBYTE(v65) & 0xF;
      if ((v65 & 0x2000000000000000) == 0)
        v79 = v64 & 0xFFFFFFFFFFFFLL;
      if (v79)
      {
        v103[0] = 0;
        v103[1] = 0xE000000000000000;
        sub_249676798();
        swift_bridgeObjectRelease();
        strcpy((char *)v103, "contentType: \"");
        HIBYTE(v103[1]) = -18;
        sub_24967654C();
        sub_24967654C();
        v80 = v103[0];
        v81 = v103[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_2496325A0(0, v17[2] + 1, 1, v17);
        v83 = v17[2];
        v82 = v17[3];
        if (v83 >= v82 >> 1)
          v17 = sub_2496325A0((_QWORD *)(v82 > 1), v83 + 1, 1, v17);
        v17[2] = v83 + 1;
        v84 = &v17[2 * v83];
        v84[4] = v80;
        v84[5] = v81;
      }
    }
    if ((v66 & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_2496325A0(0, v17[2] + 1, 1, v17);
      v86 = v17[2];
      v85 = v17[3];
      if (v86 >= v85 >> 1)
        v17 = sub_2496325A0((_QWORD *)(v85 > 1), v86 + 1, 1, v17);
      v17[2] = v86 + 1;
      v87 = (char *)&v17[2 * v86];
      strcpy(v87 + 32, "isSecure: true");
      v87[47] = -18;
    }
    v60 = 0xEC00000074786554;
    if ((v66 & 0x100) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_2496325A0(0, v17[2] + 1, 1, v17);
      v89 = v17[2];
      v88 = v17[3];
      if (v89 >= v88 >> 1)
        v17 = sub_2496325A0((_QWORD *)(v88 > 1), v89 + 1, 1, v17);
      v17[2] = v89 + 1;
      v90 = &v17[2 * v89];
      v90[4] = 0x657375636F467369;
      v90[5] = 0xEF65757274203A64;
    }
    v61 = 0x656C626174696445;
  }
  v103[0] = v61;
  v103[1] = v60;
  sub_24967654C();
  v102 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  sub_24966E02C((unint64_t *)&qword_25786A900, &qword_25786A8F8, MEMORY[0x24BEE12B0]);
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return v103[0];
}

uint64_t _s21UIIntelligenceSupport19IntelligenceElementV4TextV8EditableV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t result;
  int v26;
  uint64_t v27;
  char v28;
  char v29;
  int v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(unsigned __int8 *)(a1 + 48);
  v9 = *(unsigned __int8 *)(a1 + 49);
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v15 = *(unsigned __int8 *)(a2 + 48);
  v16 = *(unsigned __int8 *)(a2 + 49);
  if (!v3)
  {
    if (v10)
      return 0;
    goto LABEL_8;
  }
  if (!v10)
    return 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v10)
    goto LABEL_8;
  v32 = *(_QWORD *)(a1 + 40);
  v33 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(unsigned __int8 *)(a2 + 48);
  v19 = *(unsigned __int8 *)(a1 + 48);
  v20 = *(unsigned __int8 *)(a2 + 49);
  v21 = *(unsigned __int8 *)(a1 + 49);
  v22 = *(_QWORD *)(a2 + 32);
  v23 = sub_249676960();
  v12 = v22;
  v9 = v21;
  v16 = v20;
  v8 = v19;
  v15 = v18;
  v5 = v17;
  v7 = v32;
  v14 = v33;
  v24 = v23;
  result = 0;
  if ((v24 & 1) != 0)
  {
LABEL_8:
    if (v6)
    {
      if (!v13)
        return 0;
      if (v4 != v11 || v6 != v13)
      {
        v26 = v9;
        v27 = v12;
        v28 = sub_249676960();
        v12 = v27;
        v9 = v26;
        v29 = v28;
        result = 0;
        if ((v29 & 1) == 0)
          return result;
      }
    }
    else if (v13)
    {
      return 0;
    }
    if (!v7)
    {
      result = 0;
      if (v14 || ((v8 ^ v15) & 1) != 0)
        return result;
      return v9 ^ v16 ^ 1u;
    }
    if (v14)
    {
      if (v5 == v12 && v7 == v14)
      {
        if (v8 != v15)
          return 0;
      }
      else
      {
        v30 = v9;
        v31 = sub_249676960();
        result = 0;
        if ((v31 & 1) == 0)
          return result;
        v9 = v30;
        if (((v8 ^ v15) & 1) != 0)
          return result;
      }
      return v9 ^ v16 ^ 1u;
    }
    return 0;
  }
  return result;
}

uint64_t _s21UIIntelligenceSupport19IntelligenceElementV4TextV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  _QWORD v37[6];
  __int16 v38;
  _QWORD v39[6];
  unsigned __int16 v40;

  v4 = type metadata accessor for IntelligenceElement.Text();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v30 - v8;
  v10 = sub_249676180();
  sub_24966D0B0(a1, (uint64_t)v9);
  sub_24966D0B0(a2, (uint64_t)v7);
  if ((v10 & 1) != 0)
  {
    v11 = *((_QWORD *)v9 + 1);
    v12 = *((_QWORD *)v9 + 2);
    v14 = *((_QWORD *)v9 + 3);
    v13 = *((_QWORD *)v9 + 4);
    v15 = *((_QWORD *)v9 + 5);
    v16 = *((_QWORD *)v9 + 6);
    v17 = *((_WORD *)v9 + 28);
    v18 = *((_QWORD *)v7 + 1);
    v19 = *((_QWORD *)v7 + 2);
    v21 = *((_QWORD *)v7 + 3);
    v20 = *((_QWORD *)v7 + 4);
    v23 = *((_QWORD *)v7 + 5);
    v22 = *((_QWORD *)v7 + 6);
    v24 = *((_WORD *)v7 + 28);
    v35 = v17;
    v34 = v15;
    v36 = v13;
    if (v12 == 1)
    {
      v32 = v11;
      v33 = v14;
      v31 = v18;
      sub_24966CE44(v18, v19);
      sub_24966D0F4((uint64_t)v7);
      sub_24966D0F4((uint64_t)v9);
      if (v19 == 1)
      {
        v25 = 1;
        v26 = v32;
        v27 = 1;
LABEL_11:
        sub_24966CE84(v26, v27);
        return v25 & 1;
      }
    }
    else
    {
      v39[0] = v11;
      v39[1] = v12;
      v39[2] = v14;
      v39[3] = v13;
      v39[4] = v15;
      v39[5] = v16;
      v40 = v17;
      if (v19 != 1)
      {
        v37[0] = v18;
        v37[1] = v19;
        v37[2] = v21;
        v37[3] = v20;
        v37[4] = v23;
        v37[5] = v22;
        v38 = v24 & 0x101;
        v28 = v11;
        v25 = _s21UIIntelligenceSupport19IntelligenceElementV4TextV8EditableV2eeoiySbAG_AGtFZ_0((uint64_t)v39, (uint64_t)v37);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_24966D0F4((uint64_t)v7);
        sub_24966D0F4((uint64_t)v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = v28;
        v27 = v12;
        goto LABEL_11;
      }
      v32 = v11;
      v33 = v14;
      v31 = v18;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v30 = v22;
      swift_bridgeObjectRetain_n();
      sub_24966D0F4((uint64_t)v7);
      sub_24966D0F4((uint64_t)v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24966CE84(v32, v12);
    sub_24966CE84(v31, v19);
  }
  else
  {
    sub_24966D0F4((uint64_t)v7);
    sub_24966D0F4((uint64_t)v9);
  }
  v25 = 0;
  return v25 & 1;
}

uint64_t type metadata accessor for IntelligenceElement.Text()
{
  uint64_t result;

  result = qword_2544ADF50;
  if (!qword_2544ADF50)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24966C4FC()
{
  sub_24966C578();
  sub_2496762A0();
  __break(1u);
}

uint64_t sub_24966C520()
{
  return 8;
}

uint64_t sub_24966C52C()
{
  return swift_release();
}

uint64_t sub_24966C534(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_24966C540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249669398(a1, a2, a3, &qword_25786B7B0) & 1;
}

uint64_t sub_24966C560(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_25786B7B0);
}

_QWORD *sub_24966C56C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_24966C578()
{
  unint64_t result;

  result = qword_25786B6B8;
  if (!qword_25786B6B8)
  {
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BDCC090], MEMORY[0x24BDCC0A0]);
    atomic_store(result, (unint64_t *)&qword_25786B6B8);
  }
  return result;
}

uint64_t sub_24966C5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_2496680A4(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

unint64_t sub_24966C5C4(uint64_t a1, void (*a2)(char *, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *);
  char *v38;
  uint64_t v39;

  v32 = a3;
  v37 = a2;
  v39 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B780);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B160);
  v34 = *(_QWORD *)(v36 - 8);
  v6 = MEMORY[0x24BDAC7A8](v36);
  v35 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v31 = (uint64_t)&v30 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B788);
  v33 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B790);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6B0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B798);
  v30 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v39, v15);
  sub_24966E02C(&qword_25786B7A0, &qword_25786B6B0, MEMORY[0x24BDCC430]);
  sub_2496765C4();
  v22 = sub_24966E02C(&qword_25786B7A8, &qword_25786B798, MEMORY[0x24BDCC420]);
  v38 = v21;
  v39 = v19;
  sub_2496766D8();
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v23(v14, 1, v9) == 1)
  {
    v24 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v33 = v22;
    v24 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_24965FE60((uint64_t)v14, (uint64_t)v11, &qword_25786B788);
      v37(v11, &v11[*(int *)(v9 + 48)]);
      sub_24963EB88((uint64_t)v11, &qword_25786B788);
      v26 = v34;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v5, 1, v36) == 1)
      {
        sub_24963EB88((uint64_t)v5, &qword_25786B780);
      }
      else
      {
        v27 = v31;
        sub_24965FE60((uint64_t)v5, v31, &qword_25786B160);
        sub_24965FE60(v27, v35, &qword_25786B160);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = sub_2496326AC(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
        v29 = *(_QWORD *)(v24 + 16);
        v28 = *(_QWORD *)(v24 + 24);
        if (v29 >= v28 >> 1)
          v24 = sub_2496326AC(v28 > 1, v29 + 1, 1, v24);
        *(_QWORD *)(v24 + 16) = v29 + 1;
        sub_24965FE60(v35, v24+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v29, &qword_25786B160);
      }
      sub_2496766D8();
    }
    while (v23(v14, 1, v9) != 1);
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v38, v39);
  return v24;
}

uint64_t sub_24966C9D4()
{
  sub_24966CA30();
  return sub_2496762A0();
}

uint64_t sub_24966C9F8()
{
  return 8;
}

uint64_t sub_24966CA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249669398(a1, a2, a3, &qword_25786B778) & 1;
}

uint64_t sub_24966CA24(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_25786B778);
}

unint64_t sub_24966CA30()
{
  unint64_t result;

  result = qword_25786A770;
  if (!qword_25786A770)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Text.Attributes.SelectedAttribute, &type metadata for IntelligenceElement.Text.Attributes.SelectedAttribute);
    atomic_store(result, (unint64_t *)&qword_25786A770);
  }
  return result;
}

uint64_t sub_24966CA74(char a1)
{
  return sub_249668928(a1);
}

_QWORD *sub_24966CA7C(uint64_t a1, uint64_t (*a2)(_QWORD, unsigned __int8 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  _QWORD *v18;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD, unsigned __int8 *);
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v30 = a2;
  v31 = a3;
  v33 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B750);
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (unsigned __int8 *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B758);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6C8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B760);
  v27 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v33, v9);
  sub_24966E02C(&qword_25786B768, &qword_25786B6C8, MEMORY[0x24BDCC430]);
  sub_2496765C4();
  v16 = sub_24966E02C(&qword_25786B770, &qword_25786B760, MEMORY[0x24BDCC420]);
  v32 = v15;
  v33 = v13;
  v29 = v16;
  sub_2496766D8();
  v28 = *(_QWORD *)(v28 + 48);
  v17 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v8, 1, v3);
  v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v17 != 1)
  {
    do
    {
      sub_24965FE60((uint64_t)v8, (uint64_t)v5, &qword_25786B750);
      v21 = v30(*v5, &v5[*(int *)(v3 + 48)]);
      v23 = v22;
      sub_24963EB88((uint64_t)v5, &qword_25786B750);
      if (v23)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_2496325A0(0, v18[2] + 1, 1, v18);
        v25 = v18[2];
        v24 = v18[3];
        if (v25 >= v24 >> 1)
          v18 = sub_2496325A0((_QWORD *)(v24 > 1), v25 + 1, 1, v18);
        v18[2] = v25 + 1;
        v20 = &v18[2 * v25];
        v20[4] = v21;
        v20[5] = v23;
      }
      sub_2496766D8();
    }
    while (((unsigned int (*)(char *, uint64_t, uint64_t))v28)(v8, 1, v3) != 1);
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v33);
  return v18;
}

uint64_t sub_24966CD64()
{
  sub_24966CE00();
  return sub_2496762A0();
}

uint64_t sub_24966CD88()
{
  return 8;
}

uint64_t sub_24966CD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249669398(a1, a2, a3, &qword_25786B748) & 1;
}

uint64_t sub_24966CDB4(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_25786B748);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_2496764A4();
}

unint64_t sub_24966CE00()
{
  unint64_t result;

  result = qword_25786AC10;
  if (!qword_25786AC10)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Text.Attributes.FontSizeAttribute, &type metadata for IntelligenceElement.Text.Attributes.FontSizeAttribute);
    atomic_store(result, (unint64_t *)&qword_25786AC10);
  }
  return result;
}

uint64_t sub_24966CE44(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24966CE84(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24966CEC4(_QWORD *a1@<X8>)
{
  *a1 = &type metadata for IntelligenceElement.Text.Attributes;
}

unint64_t sub_24966CED4()
{
  unint64_t result;

  result = qword_25786AC18;
  if (!qword_25786AC18)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Text.Attributes, &type metadata for IntelligenceElement.Text.Attributes);
    atomic_store(result, (unint64_t *)&qword_25786AC18);
  }
  return result;
}

uint64_t sub_24966CF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntelligenceElement.Text();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24966CF5C()
{
  unint64_t result;

  result = qword_25786AC30;
  if (!qword_25786AC30)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967BCF0, &_s4TextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AC30);
  }
  return result;
}

unint64_t sub_24966CFA0()
{
  unint64_t result;

  result = qword_25786AC28;
  if (!qword_25786AC28)
  {
    result = MEMORY[0x24BCF4DE0]("}CB\b(H", &type metadata for IntelligenceElement.Text.Attributes);
    atomic_store(result, (unint64_t *)&qword_25786AC28);
  }
  return result;
}

unint64_t sub_24966CFE4()
{
  unint64_t result;

  result = qword_25786B708;
  if (!qword_25786B708)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Text.Editable, &type metadata for IntelligenceElement.Text.Editable);
    atomic_store(result, (unint64_t *)&qword_25786B708);
  }
  return result;
}

unint64_t sub_24966D028()
{
  unint64_t result;

  result = qword_25786AC20;
  if (!qword_25786AC20)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Text.Attributes, &type metadata for IntelligenceElement.Text.Attributes);
    atomic_store(result, (unint64_t *)&qword_25786AC20);
  }
  return result;
}

unint64_t sub_24966D06C()
{
  unint64_t result;

  result = qword_25786A7F8;
  if (!qword_25786A7F8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Text.Editable, &type metadata for IntelligenceElement.Text.Editable);
    atomic_store(result, (unint64_t *)&qword_25786A7F8);
  }
  return result;
}

uint64_t sub_24966D0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntelligenceElement.Text();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24966D0F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IntelligenceElement.Text();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24966D130()
{
  unint64_t result;

  result = qword_25786B718;
  if (!qword_25786B718)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967BCA0, &_s4TextV8EditableV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B718);
  }
  return result;
}

uint64_t sub_24966D178()
{
  return MEMORY[0x24BEE1338];
}

uint64_t sub_24966D188()
{
  return MEMORY[0x24BEE13E8];
}

_WORD *_s4TextVwCP(_WORD *a1, uint64_t *a2, uint64_t a3)
{
  _WORD *v4;
  int v5;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_WORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v7 = a1 + 4;
    v8 = a2[2];
    if (v8 == 1)
    {
      v9 = *(_OWORD *)(a2 + 3);
      *v7 = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(v4 + 12) = v9;
      *(_OWORD *)(v4 + 20) = *(_OWORD *)(a2 + 5);
      v4[28] = *((_WORD *)a2 + 28);
    }
    else
    {
      *((_QWORD *)v4 + 1) = a2[1];
      *((_QWORD *)v4 + 2) = v8;
      v11 = a2[4];
      *((_QWORD *)v4 + 3) = a2[3];
      *((_QWORD *)v4 + 4) = v11;
      v12 = a2[6];
      *((_QWORD *)v4 + 5) = a2[5];
      *((_QWORD *)v4 + 6) = v12;
      v4[28] = *((_WORD *)a2 + 28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v13 = *(int *)(a3 + 28);
    v14 = (char *)v4 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = sub_24967621C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = *(int *)(a3 + 32);
    v18 = (_OWORD *)((char *)v4 + v17);
    v19 = (_OWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(_OWORD *)((char *)v18 + 26) = *(_OWORD *)((char *)v19 + 26);
  }
  return v4;
}

uint64_t _s4TextVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_24967621C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t _s4TextVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = a1 + 8;
  v7 = *(_QWORD *)(a2 + 16);
  if (v7 == 1)
  {
    v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)v6 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(v6 + 16) = v8;
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(a2 + 40);
    *(_WORD *)(v6 + 48) = *(_WORD *)(a2 + 56);
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v7;
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v9;
    v10 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v10;
    *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_24967621C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = *(int *)(a3 + 32);
  v16 = (_OWORD *)(a1 + v15);
  v17 = (_OWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *(_OWORD *)((char *)v16 + 26) = *(_OWORD *)((char *)v17 + 26);
  return a1;
}

uint64_t _s4TextVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = a1 + 8;
  v7 = (__int128 *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 24);
      v11 = *(_OWORD *)(a2 + 40);
      *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v10;
      *(_OWORD *)(a1 + 40) = v11;
      *(_OWORD *)v6 = v9;
    }
    else
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_24966D5F4(a1 + 8);
    v13 = v7[1];
    v12 = v7[2];
    v14 = *v7;
    *(_WORD *)(v6 + 48) = *((_WORD *)v7 + 24);
    *(_OWORD *)(v6 + 16) = v13;
    *(_OWORD *)(v6 + 32) = v12;
    *(_OWORD *)v6 = v14;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  }
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_24967621C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = *(int *)(a3 + 32);
  v20 = a1 + v19;
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 8) = *((_BYTE *)v21 + 8);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 9) = *((_BYTE *)v21 + 9);
  LOBYTE(v22) = *((_BYTE *)v21 + 24);
  *(_QWORD *)(v20 + 16) = v21[2];
  *(_BYTE *)(v20 + 24) = v22;
  *(_BYTE *)(v20 + 25) = *((_BYTE *)v21 + 25);
  LOBYTE(v22) = *((_BYTE *)v21 + 40);
  *(_QWORD *)(v20 + 32) = v21[4];
  *(_BYTE *)(v20 + 40) = v22;
  *(_BYTE *)(v20 + 41) = *((_BYTE *)v21 + 41);
  return a1;
}

uint64_t sub_24966D5F4(uint64_t a1)
{
  _s4TextV8EditableVwxx();
  return a1;
}

uint64_t _s4TextVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24967621C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 32);
  v11 = (_OWORD *)(a1 + v10);
  v12 = (_OWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  *(_OWORD *)((char *)v11 + 26) = *(_OWORD *)((char *)v12 + 26);
  return a1;
}

uint64_t _s4TextVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = a1 + 8;
  v7 = a2 + 8;
  if (*(_QWORD *)(a1 + 16) != 1)
  {
    v8 = *(_QWORD *)(a2 + 16);
    if (v8 != 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v8;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v11;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
      goto LABEL_6;
    }
    sub_24966D5F4(v6);
  }
  v9 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)v6 = *(_OWORD *)v7;
  *(_OWORD *)(v6 + 16) = v9;
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(v7 + 32);
  *(_WORD *)(v6 + 48) = *(_WORD *)(v7 + 48);
LABEL_6:
  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_24967621C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(a3 + 32);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_BYTE *)(v17 + 9) = *(_BYTE *)(v18 + 9);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_BYTE *)(v17 + 25) = *(_BYTE *)(v18 + 25);
  *(_BYTE *)(v17 + 40) = *(_BYTE *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_BYTE *)(v17 + 41) = *(_BYTE *)(v18 + 41);
  return a1;
}

uint64_t _s4TextVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24966D81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 2147483645)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return ((_DWORD)v4 - 1) & ~(((int)v4 - 1) >> 31);
  }
  else
  {
    v8 = sub_24967621C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t _s4TextVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24966D8AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483645)
  {
    *(_QWORD *)(result + 16) = (a2 + 1);
  }
  else
  {
    v7 = sub_24967621C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_24966D924()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24967621C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s4TextV8EditableVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s4TextV8EditableVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4TextV8EditableVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s4TextV8EditableVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

uint64_t _s4TextV8EditableVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 50))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s4TextV8EditableVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 50) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceElement.Text.Editable()
{
  return &type metadata for IntelligenceElement.Text.Editable;
}

ValueMetadata *type metadata accessor for IntelligenceElement.Text.Attributes()
{
  return &type metadata for IntelligenceElement.Text.Attributes;
}

ValueMetadata *type metadata accessor for IntelligenceElement.Text.Attributes.SelectedAttribute()
{
  return &type metadata for IntelligenceElement.Text.Attributes.SelectedAttribute;
}

ValueMetadata *type metadata accessor for IntelligenceElement.Text.Attributes.FontSizeAttribute()
{
  return &type metadata for IntelligenceElement.Text.Attributes.FontSizeAttribute;
}

uint64_t _s4TextV8EditableV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_24966DCA0 + 4 * byte_24967B59A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_24966DCD4 + 4 * byte_24967B595[v4]))();
}

uint64_t sub_24966DCD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24966DCDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24966DCE4);
  return result;
}

uint64_t sub_24966DCF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24966DCF8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_24966DCFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24966DD04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4TextV8EditableV10CodingKeysOMa()
{
  return &_s4TextV8EditableV10CodingKeysON;
}

uint64_t _s4TextV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24966DD6C + 4 * byte_24967B5A4[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24966DDA0 + 4 * byte_24967B59F[v4]))();
}

uint64_t sub_24966DDA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24966DDA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24966DDB0);
  return result;
}

uint64_t sub_24966DDBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24966DDC4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24966DDC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24966DDD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4TextV10CodingKeysOMa()
{
  return &_s4TextV10CodingKeysON;
}

unint64_t sub_24966DDF0()
{
  unint64_t result;

  result = qword_25786B728;
  if (!qword_25786B728)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967BB88, &_s4TextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B728);
  }
  return result;
}

unint64_t sub_24966DE38()
{
  unint64_t result;

  result = qword_25786B730;
  if (!qword_25786B730)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967BC78, &_s4TextV8EditableV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B730);
  }
  return result;
}

unint64_t sub_24966DE80()
{
  unint64_t result;

  result = qword_25786B738;
  if (!qword_25786B738)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967BBB0, &_s4TextV8EditableV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B738);
  }
  return result;
}

unint64_t sub_24966DEC8()
{
  unint64_t result;

  result = qword_25786B740;
  if (!qword_25786B740)
  {
    result = MEMORY[0x24BCF4DE0]("AAB\b0F", &_s4TextV8EditableV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B740);
  }
  return result;
}

unint64_t sub_24966DF10()
{
  unint64_t result;

  result = qword_25786AC40;
  if (!qword_25786AC40)
  {
    result = MEMORY[0x24BCF4DE0]("qBB\blG", &_s4TextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AC40);
  }
  return result;
}

unint64_t sub_24966DF58()
{
  unint64_t result;

  result = qword_25786AC38;
  if (!qword_25786AC38)
  {
    result = MEMORY[0x24BCF4DE0]("1BB\bDG", &_s4TextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AC38);
  }
  return result;
}

uint64_t sub_24966DF9C()
{
  unint64_t v0;

  v0 = sub_249676834();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_24966DFE4()
{
  unint64_t v0;

  v0 = sub_249676834();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_24966E02C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BCF4DE0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24966E06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B6C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24966E0DC()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t IntelligenceSubelementProviding.intelligenceSubelements()()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_24966E0F4()
{
  return 0;
}

uint64_t IntelligenceAppIntentsPayloadProviding.intelligenceAppIntentsPayload()()
{
  return 0;
}

uint64_t IntelligenceAppIntentsPayloadProviding.intelligenceAppIntentsPayloadDebugDescription()()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t _s21UIIntelligenceSupport31IntelligenceSubelementProvidingPAAE23intelligenceSubelements2in6boundsSayAA0C7ElementVGSo6CGRectV_AKtF_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of IntelligenceSubelementProviding.intelligenceSubelements(in:bounds:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IntelligenceSubelementProviding.intelligenceSubelements()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of IntelligenceAppIntentsPayloadProviding.intelligenceAppIntentsPayload()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24966E13C(uint64_t a1)
{
  return sub_24966E248(a1, qword_25786B000, &qword_25786AC58, (uint64_t)qword_25786B020);
}

uint64_t static OSSignposter.client.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24966E1BC(&qword_25786AC50, (uint64_t)qword_25786B000, a1);
}

uint64_t sub_24966E17C(uint64_t a1)
{
  return sub_24966E248(a1, qword_25786A888, &qword_25786A8C8, (uint64_t)qword_25786A8B0);
}

uint64_t static OSSignposter.agent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24966E1BC(&qword_25786A8A0, (uint64_t)qword_25786A888, a1);
}

uint64_t sub_24966E1BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_249676390();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_24966E224(uint64_t a1)
{
  return sub_24966E248(a1, qword_2544AE010, &qword_2544AE3D0, (uint64_t)qword_2544AE3D8);
}

uint64_t sub_24966E248(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = sub_2496763D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_249676390();
  __swift_allocate_value_buffer(v11, a2);
  __swift_project_value_buffer(v11, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v7, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  return sub_249676378();
}

uint64_t static OSSignposter.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24966E1BC(&qword_2544AE028, (uint64_t)qword_2544AE010, a1);
}

void sub_24966E34C(char a1)
{
  sub_2496769A8();
  __asm { BR              X10 }
}

uint64_t sub_24966E3A0()
{
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

void sub_24966E44C(char a1)
{
  sub_2496769A8();
  __asm { BR              X10 }
}

uint64_t sub_24966E49C()
{
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

void sub_24966E518(char a1)
{
  sub_2496769A8();
  __asm { BR              X10 }
}

uint64_t sub_24966E560()
{
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

void sub_24966E5E4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24966E628()
{
  sub_249676534();
  return swift_bridgeObjectRelease();
}

void sub_24966E6C0(uint64_t a1, char a2)
{
  sub_2496769A8();
  __asm { BR              X10 }
}

uint64_t sub_24966E70C()
{
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

void sub_24966E788(uint64_t a1, char a2)
{
  sub_2496769A8();
  __asm { BR              X10 }
}

uint64_t sub_24966E7CC()
{
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

void sub_24966E850(uint64_t a1, char a2)
{
  sub_2496769A8();
  __asm { BR              X10 }
}

uint64_t sub_24966E8A0()
{
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t IntelligenceElement.Screen.DisplayType.hash(into:)()
{
  return sub_2496769B4();
}

BOOL static IntelligenceElement.Screen.DisplayType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24966E990()
{
  sub_2496707A8();
  return sub_249676A20();
}

uint64_t sub_24966E9B8()
{
  sub_2496707A8();
  return sub_249676A2C();
}

uint64_t sub_24966E9E0()
{
  _BYTE *v0;

  if (*v0)
    return 0x79616C50726163;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_24966EA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249671548(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24966EA38()
{
  sub_249670764();
  return sub_249676A20();
}

uint64_t sub_24966EA60()
{
  sub_249670764();
  return sub_249676A2C();
}

uint64_t sub_24966EA88()
{
  sub_2496707EC();
  return sub_249676A20();
}

uint64_t sub_24966EAB0()
{
  sub_2496707EC();
  return sub_249676A2C();
}

uint64_t IntelligenceElement.Screen.DisplayType.hashValue.getter()
{
  sub_2496769A8();
  sub_2496769B4();
  return sub_2496769E4();
}

void IntelligenceElement.Screen.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *IntelligenceElement.Screen.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*IntelligenceElement.Screen.type.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Screen.ConnectionType.hash(into:)()
{
  return sub_2496769B4();
}

BOOL static IntelligenceElement.Screen.ConnectionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24966EB80()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465646465626D65;
  if (*v0 != 1)
    v1 = 0x6C616E7265747865;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_24966EBDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249671638(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24966EC00()
{
  sub_249670830();
  return sub_249676A20();
}

uint64_t sub_24966EC28()
{
  sub_249670830();
  return sub_249676A2C();
}

uint64_t sub_24966EC50()
{
  sub_2496708B8();
  return sub_249676A20();
}

uint64_t sub_24966EC78()
{
  sub_2496708B8();
  return sub_249676A2C();
}

uint64_t sub_24966ECA0()
{
  sub_249670874();
  return sub_249676A20();
}

uint64_t sub_24966ECC8()
{
  sub_249670874();
  return sub_249676A2C();
}

uint64_t sub_24966ECF0()
{
  sub_2496708FC();
  return sub_249676A20();
}

uint64_t sub_24966ED18()
{
  sub_2496708FC();
  return sub_249676A2C();
}

uint64_t IntelligenceElement.Screen.ConnectionType.hashValue.getter()
{
  sub_2496769A8();
  sub_2496769B4();
  return sub_2496769E4();
}

void IntelligenceElement.Screen.connectionType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *IntelligenceElement.Screen.connectionType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*IntelligenceElement.Screen.connectionType.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Screen.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntelligenceElement.Screen.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*IntelligenceElement.Screen.identifier.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Screen.encodedFBSDisplayIdentity.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_24963DC70(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t IntelligenceElement.Screen.encodedFBSDisplayIdentity.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_24963DC84(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*IntelligenceElement.Screen.encodedFBSDisplayIdentity.modify())()
{
  return nullsub_1;
}

double IntelligenceElement.Screen.init(type:connectionType:identifier:)@<D0>(_BYTE *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  double result;

  v5 = *a2;
  *(_BYTE *)a5 = *a1;
  *(_BYTE *)(a5 + 1) = v5;
  *(_QWORD *)(a5 + 8) = a3;
  *(_QWORD *)(a5 + 16) = a4;
  result = 0.0;
  *(_OWORD *)(a5 + 24) = xmmword_24967C760;
  return result;
}

double IntelligenceElement.Screen.init(type:identifier:)@<D0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double result;

  *(_BYTE *)a4 = *a1;
  *(_BYTE *)(a4 + 1) = 0;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  result = 0.0;
  *(_OWORD *)(a4 + 24) = xmmword_24967C760;
  return result;
}

void sub_24966EED8(char *a1)
{
  sub_249674228(*a1);
}

void sub_24966EEE4()
{
  char *v0;

  sub_24966E518(*v0);
}

void sub_24966EEEC()
{
  __asm { BR              X10 }
}

uint64_t sub_24966EF20()
{
  sub_249676534();
  return swift_bridgeObjectRelease();
}

void sub_24966EF90(uint64_t a1)
{
  char *v1;

  sub_24966E788(a1, *v1);
}

uint64_t sub_24966EF98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24967178C();
  *a1 = result;
  return result;
}

uint64_t sub_24966EFC4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_24966EFEC + 4 * byte_24967BDD6[*v0]))();
}

void sub_24966EFEC(char *a1@<X8>)
{
  strcpy(a1, "connectionType");
  a1[15] = -18;
}

void sub_24966F014(_QWORD *a1@<X8>)
{
  *a1 = 0x696669746E656469;
  a1[1] = 0xEA00000000007265;
}

void sub_24966F034(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x800000024967D130;
}

uint64_t sub_24966F054()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24966F07C + 4 * byte_24967BDDA[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_24966F07C()
{
  return 0x697463656E6E6F63;
}

uint64_t sub_24966F0A0()
{
  return 0x696669746E656469;
}

unint64_t sub_24966F0BC()
{
  return 0xD000000000000019;
}

uint64_t sub_24966F0D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24967178C();
  *a1 = result;
  return result;
}

uint64_t sub_24966F0FC()
{
  sub_249670610();
  return sub_249676A20();
}

uint64_t sub_24966F124()
{
  sub_249670610();
  return sub_249676A2C();
}

uint64_t IntelligenceElement.Screen.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AB98);
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = *((_QWORD *)v1 + 2);
  v15 = *((_QWORD *)v1 + 1);
  v16 = v9;
  v14 = *((_QWORD *)v1 + 3);
  v17 = *((_QWORD *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249670610();
  sub_249676A14();
  if (v7 == 1)
  {
    LOBYTE(v19) = 1;
    v21 = 0;
    sub_249670654();
    sub_24967693C();
    if (v2)
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  }
  if (v8)
  {
    LOBYTE(v19) = v8;
    v21 = 1;
    sub_249670698();
    sub_24967693C();
    if (v2)
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  }
  v10 = v17;
  if (v16)
  {
    LOBYTE(v19) = 2;
    sub_24967690C();
    if (v2)
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  }
  if (v10 >> 60 == 15)
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  v12 = v14;
  v19 = v14;
  v20 = v10;
  v21 = 3;
  sub_24963DC2C(v14, v10);
  sub_249641CEC();
  sub_24967693C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  return sub_24963DC84(v12, v10);
}

uint64_t IntelligenceElement.Screen.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249670610();
  sub_2496769FC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    v18 = 0;
    v19 = 0xF000000000000000;
  }
  else
  {
    v25 = 0;
    sub_2496706DC();
    sub_249676888();
    v9 = v22;
    v25 = 1;
    sub_249670720();
    sub_249676888();
    v24 = v9;
    if (v22 == 3)
      v10 = 0;
    else
      v10 = v22;
    LOBYTE(v22) = 2;
    v11 = sub_249676858();
    v14 = v13;
    v20 = v11;
    v21 = v10;
    v25 = 3;
    sub_249641DFC();
    swift_bridgeObjectRetain();
    sub_249676888();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = v24 & 1;
    v16 = v22;
    v17 = v23;
    sub_24963DC70(v22, v23);
    sub_24963DC84(0, 0xF000000000000000);
    swift_bridgeObjectRetain();
    sub_24963DC70(v16, v17);
    sub_24963DC84(v16, v17);
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v15;
    *(_BYTE *)(a2 + 1) = v21;
    *(_QWORD *)(a2 + 8) = v20;
    *(_QWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v16;
    *(_QWORD *)(a2 + 32) = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    v18 = v16;
    v19 = v17;
  }
  return sub_24963DC84(v18, v19);
}

uint64_t sub_24966F610@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceElement.Screen.init(from:)(a1, a2);
}

uint64_t sub_24966F624(_QWORD *a1)
{
  return IntelligenceElement.Screen.encode(to:)(a1);
}

uint64_t IntelligenceElement.Screen.DisplayType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B7C0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B7C8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B7D0);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249670764();
  sub_249676A14();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_2496707A8();
    sub_2496768DC();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_2496707EC();
    sub_2496768DC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t IntelligenceElement.Screen.DisplayType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B7F0);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B7F8);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B800);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249670764();
  v11 = v33;
  sub_2496769FC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_2496768D0();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_2496767C8();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B240);
    *v21 = &type metadata for IntelligenceElement.Screen.DisplayType;
    sub_24967684C();
    sub_2496767BC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_2496707A8();
    sub_249676840();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_2496707EC();
    v22 = v6;
    sub_249676840();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_24966FB64@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return IntelligenceElement.Screen.DisplayType.init(from:)(a1, a2);
}

uint64_t sub_24966FB78(_QWORD *a1)
{
  return IntelligenceElement.Screen.DisplayType.encode(to:)(a1);
}

uint64_t IntelligenceElement.Screen.ConnectionType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABB8);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABB0);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABA8);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABA0);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249670830();
  sub_249676A14();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_2496708B8();
      sub_2496768DC();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_249670874();
      v16 = v21;
      sub_2496768DC();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_2496708FC();
    sub_2496768DC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t IntelligenceElement.Screen.ConnectionType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA08);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA00);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9F8);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786A9F0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249670830();
  v13 = v41;
  sub_2496769FC();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_2496768D0();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_2496767C8();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25786B240);
    *v25 = &type metadata for IntelligenceElement.Screen.ConnectionType;
    sub_24967684C();
    sub_2496767BC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_2496708B8();
      v20 = v9;
      sub_249676840();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_249670874();
      v28 = v15;
      sub_249676840();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_2496708FC();
    sub_249676840();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_249670234@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return IntelligenceElement.Screen.ConnectionType.init(from:)(a1, a2);
}

uint64_t sub_249670248(_QWORD *a1)
{
  return IntelligenceElement.Screen.ConnectionType.encode(to:)(a1);
}

char *IntelligenceElement.Screen.description.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD v18[2];

  v1 = *(unsigned __int8 *)(v0 + 1);
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)v0 != 1)
  {
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!*(_BYTE *)(v0 + 1))
      goto LABEL_12;
    goto LABEL_7;
  }
  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  sub_24967654C();
  sub_2496767E0();
  v4 = sub_2496325A0(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v6 = v4[2];
  v5 = v4[3];
  if (v6 >= v5 >> 1)
    v4 = sub_2496325A0((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
  v4[2] = v6 + 1;
  v7 = &v4[2 * v6];
  v7[4] = 0;
  v7[5] = 0xE000000000000000;
  if (v1)
  {
LABEL_7:
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    sub_249676798();
    sub_24967654C();
    sub_2496767E0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_2496325A0(0, v4[2] + 1, 1, v4);
    v9 = v4[2];
    v8 = v4[3];
    if (v9 >= v8 >> 1)
      v4 = sub_2496325A0((_QWORD *)(v8 > 1), v9 + 1, 1, v4);
    v4[2] = v9 + 1;
    v10 = &v4[2 * v9];
    v10[4] = 0;
    v10[5] = 0xE000000000000000;
  }
LABEL_12:
  if (v3)
  {
    v11 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v11 = v2 & 0xFFFFFFFFFFFFLL;
    if (v11)
    {
      sub_249676798();
      swift_bridgeObjectRelease();
      strcpy((char *)v18, "identifier: \"");
      HIWORD(v18[1]) = -4864;
      sub_24967654C();
      sub_24967654C();
      v12 = v18[0];
      v13 = v18[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_2496325A0(0, v4[2] + 1, 1, v4);
      v15 = v4[2];
      v14 = v4[3];
      if (v15 >= v14 >> 1)
        v4 = sub_2496325A0((_QWORD *)(v14 > 1), v15 + 1, 1, v4);
      v4[2] = v15 + 1;
      v16 = &v4[2 * v15];
      v16[4] = v12;
      v16[5] = v13;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  sub_249632EBC();
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return strcpy((char *)v18, "Screen(");
}

uint64_t _s21UIIntelligenceSupport19IntelligenceElementV6ScreenV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  BOOL v8;

  if (*a1 != *a2 || a1[1] != a2[1])
    return 0;
  v5 = *((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a2 + 2);
  v7 = (v5 | v6) == 0;
  if (v5)
    v8 = v6 == 0;
  else
    v8 = 1;
  if (!v8)
  {
    if (*((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1) || v5 != v6)
      return sub_249676960();
    return 1;
  }
  return v7;
}

unint64_t sub_249670610()
{
  unint64_t result;

  result = qword_25786AE48;
  if (!qword_25786AE48)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C704, &_s6ScreenV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE48);
  }
  return result;
}

unint64_t sub_249670654()
{
  unint64_t result;

  result = qword_25786B7B8;
  if (!qword_25786B7B8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Screen.DisplayType, &type metadata for IntelligenceElement.Screen.DisplayType);
    atomic_store(result, (unint64_t *)&qword_25786B7B8);
  }
  return result;
}

unint64_t sub_249670698()
{
  unint64_t result;

  result = qword_25786AAD0;
  if (!qword_25786AAD0)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Screen.ConnectionType, &type metadata for IntelligenceElement.Screen.ConnectionType);
    atomic_store(result, (unint64_t *)&qword_25786AAD0);
  }
  return result;
}

unint64_t sub_2496706DC()
{
  unint64_t result;

  result = qword_25786A810;
  if (!qword_25786A810)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Screen.DisplayType, &type metadata for IntelligenceElement.Screen.DisplayType);
    atomic_store(result, (unint64_t *)&qword_25786A810);
  }
  return result;
}

unint64_t sub_249670720()
{
  unint64_t result;

  result = qword_25786A818;
  if (!qword_25786A818)
  {
    result = MEMORY[0x24BCF4DE0]("e>B\b<C", &type metadata for IntelligenceElement.Screen.ConnectionType);
    atomic_store(result, (unint64_t *)&qword_25786A818);
  }
  return result;
}

unint64_t sub_249670764()
{
  unint64_t result;

  result = qword_25786B7D8;
  if (!qword_25786B7D8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C6B4, &_s6ScreenV11DisplayTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B7D8);
  }
  return result;
}

unint64_t sub_2496707A8()
{
  unint64_t result;

  result = qword_25786B7E0;
  if (!qword_25786B7E0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C664, &_s6ScreenV11DisplayTypeO17CarPlayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B7E0);
  }
  return result;
}

unint64_t sub_2496707EC()
{
  unint64_t result;

  result = qword_25786B7E8;
  if (!qword_25786B7E8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C614, &_s6ScreenV11DisplayTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B7E8);
  }
  return result;
}

unint64_t sub_249670830()
{
  unint64_t result;

  result = qword_25786AE60;
  if (!qword_25786AE60)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C5C4, &_s6ScreenV14ConnectionTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE60);
  }
  return result;
}

unint64_t sub_249670874()
{
  unint64_t result;

  result = qword_25786B808;
  if (!qword_25786B808)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C574, &_s6ScreenV14ConnectionTypeO18ExternalCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B808);
  }
  return result;
}

unint64_t sub_2496708B8()
{
  unint64_t result;

  result = qword_25786AE88;
  if (!qword_25786AE88)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C524, &_s6ScreenV14ConnectionTypeO18EmbeddedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE88);
  }
  return result;
}

unint64_t sub_2496708FC()
{
  unint64_t result;

  result = qword_25786B810;
  if (!qword_25786B810)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C4D4, &_s6ScreenV14ConnectionTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B810);
  }
  return result;
}

unint64_t sub_249670944()
{
  unint64_t result;

  result = qword_25786B818;
  if (!qword_25786B818)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceElement.Screen.DisplayType, &type metadata for IntelligenceElement.Screen.DisplayType);
    atomic_store(result, (unint64_t *)&qword_25786B818);
  }
  return result;
}

unint64_t sub_24967098C()
{
  unint64_t result;

  result = qword_25786B820;
  if (!qword_25786B820)
  {
    result = MEMORY[0x24BCF4DE0]("E?B\b,D", &type metadata for IntelligenceElement.Screen.ConnectionType);
    atomic_store(result, (unint64_t *)&qword_25786B820);
  }
  return result;
}

uint64_t _s6ScreenVwxx(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >> 60 != 15)
    return sub_24963DBE8(*(_QWORD *)(a1 + 24), v3);
  return result;
}

uint64_t _s6ScreenVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = (_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v4;
  }
  else
  {
    v6 = *(_QWORD *)v4;
    sub_24963DC2C(v6, v5);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t _s6ScreenVwca(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_24963DC2C(*v4, v5);
      v8 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v5;
      sub_24963DBE8(v8, v9);
      return a1;
    }
    sub_249670B68(a1 + 24);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_24963DC2C(*v4, v5);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  return a1;
}

uint64_t sub_249670B68(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s6ScreenVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      v8 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v5;
      *(_QWORD *)(a1 + 32) = v7;
      sub_24963DBE8(v8, v6);
      return a1;
    }
    sub_249670B68(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
  return a1;
}

uint64_t _s6ScreenVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s6ScreenVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceElement.Screen()
{
  return &type metadata for IntelligenceElement.Screen;
}

ValueMetadata *type metadata accessor for IntelligenceElement.Screen.DisplayType()
{
  return &type metadata for IntelligenceElement.Screen.DisplayType;
}

ValueMetadata *type metadata accessor for IntelligenceElement.Screen.ConnectionType()
{
  return &type metadata for IntelligenceElement.Screen.ConnectionType;
}

uint64_t _s6ScreenV14ConnectionTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249670D88 + 4 * byte_24967BDE3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249670DBC + 4 * byte_24967BDDE[v4]))();
}

uint64_t sub_249670DBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249670DC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249670DCCLL);
  return result;
}

uint64_t sub_249670DD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249670DE0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249670DE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249670DEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ScreenV14ConnectionTypeO10CodingKeysOMa()
{
  return &_s6ScreenV14ConnectionTypeO10CodingKeysON;
}

ValueMetadata *_s6ScreenV14ConnectionTypeO17UnknownCodingKeysOMa()
{
  return &_s6ScreenV14ConnectionTypeO17UnknownCodingKeysON;
}

ValueMetadata *_s6ScreenV14ConnectionTypeO18EmbeddedCodingKeysOMa()
{
  return &_s6ScreenV14ConnectionTypeO18EmbeddedCodingKeysON;
}

ValueMetadata *_s6ScreenV14ConnectionTypeO18ExternalCodingKeysOMa()
{
  return &_s6ScreenV14ConnectionTypeO18ExternalCodingKeysON;
}

uint64_t _s6ScreenV11DisplayTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249670E84 + 4 * byte_24967BDED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249670EB8 + 4 * byte_24967BDE8[v4]))();
}

uint64_t sub_249670EB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249670EC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249670EC8);
  return result;
}

uint64_t sub_249670ED4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249670EDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249670EE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249670EE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ScreenV11DisplayTypeO10CodingKeysOMa()
{
  return &_s6ScreenV11DisplayTypeO10CodingKeysON;
}

ValueMetadata *_s6ScreenV11DisplayTypeO17UnknownCodingKeysOMa()
{
  return &_s6ScreenV11DisplayTypeO17UnknownCodingKeysON;
}

ValueMetadata *_s6ScreenV11DisplayTypeO17CarPlayCodingKeysOMa()
{
  return &_s6ScreenV11DisplayTypeO17CarPlayCodingKeysON;
}

uint64_t _s6ScreenV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_249670F70 + 4 * byte_24967BDF7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_249670FA4 + 4 * byte_24967BDF2[v4]))();
}

uint64_t sub_249670FA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249670FAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249670FB4);
  return result;
}

uint64_t sub_249670FC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249670FC8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_249670FCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249670FD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ScreenV10CodingKeysOMa()
{
  return &_s6ScreenV10CodingKeysON;
}

unint64_t sub_249670FF4()
{
  unint64_t result;

  result = qword_25786B828;
  if (!qword_25786B828)
  {
    result = MEMORY[0x24BCF4DE0]("=<B\bDB", &_s6ScreenV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B828);
  }
  return result;
}

unint64_t sub_24967103C()
{
  unint64_t result;

  result = qword_25786B830;
  if (!qword_25786B830)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C304, &_s6ScreenV11DisplayTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B830);
  }
  return result;
}

unint64_t sub_249671084()
{
  unint64_t result;

  result = qword_25786B838;
  if (!qword_25786B838)
  {
    result = MEMORY[0x24BCF4DE0]("=9B\bH>", &_s6ScreenV14ConnectionTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B838);
  }
  return result;
}

unint64_t sub_2496710CC()
{
  unint64_t result;

  result = qword_25786AE80;
  if (!qword_25786AE80)
  {
    result = MEMORY[0x24BCF4DE0]("e:B\bL?", &_s6ScreenV14ConnectionTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE80);
  }
  return result;
}

unint64_t sub_249671114()
{
  unint64_t result;

  result = qword_25786AE78;
  if (!qword_25786AE78)
  {
    result = MEMORY[0x24BCF4DE0]("%:B\b$?", &_s6ScreenV14ConnectionTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE78);
  }
  return result;
}

unint64_t sub_24967115C()
{
  unint64_t result;

  result = qword_25786AE98;
  if (!qword_25786AE98)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C37C, &_s6ScreenV14ConnectionTypeO18EmbeddedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE98);
  }
  return result;
}

unint64_t sub_2496711A4()
{
  unint64_t result;

  result = qword_25786AE90;
  if (!qword_25786AE90)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C3A4, &_s6ScreenV14ConnectionTypeO18EmbeddedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE90);
  }
  return result;
}

unint64_t sub_2496711EC()
{
  unint64_t result;

  result = qword_25786AEA8;
  if (!qword_25786AEA8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C32C, &_s6ScreenV14ConnectionTypeO18ExternalCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AEA8);
  }
  return result;
}

unint64_t sub_249671234()
{
  unint64_t result;

  result = qword_25786AEA0;
  if (!qword_25786AEA0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C354, &_s6ScreenV14ConnectionTypeO18ExternalCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AEA0);
  }
  return result;
}

unint64_t sub_24967127C()
{
  unint64_t result;

  result = qword_25786AE70;
  if (!qword_25786AE70)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C41C, &_s6ScreenV14ConnectionTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE70);
  }
  return result;
}

unint64_t sub_2496712C4()
{
  unint64_t result;

  result = qword_25786AE68;
  if (!qword_25786AE68)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C444, &_s6ScreenV14ConnectionTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE68);
  }
  return result;
}

unint64_t sub_24967130C()
{
  unint64_t result;

  result = qword_25786B840;
  if (!qword_25786B840)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C224, &_s6ScreenV11DisplayTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B840);
  }
  return result;
}

unint64_t sub_249671354()
{
  unint64_t result;

  result = qword_25786B848;
  if (!qword_25786B848)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C24C, &_s6ScreenV11DisplayTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B848);
  }
  return result;
}

unint64_t sub_24967139C()
{
  unint64_t result;

  result = qword_25786B850;
  if (!qword_25786B850)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C1D4, &_s6ScreenV11DisplayTypeO17CarPlayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B850);
  }
  return result;
}

unint64_t sub_2496713E4()
{
  unint64_t result;

  result = qword_25786B858;
  if (!qword_25786B858)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C1FC, &_s6ScreenV11DisplayTypeO17CarPlayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B858);
  }
  return result;
}

unint64_t sub_24967142C()
{
  unint64_t result;

  result = qword_25786B860;
  if (!qword_25786B860)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C274, &_s6ScreenV11DisplayTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B860);
  }
  return result;
}

unint64_t sub_249671474()
{
  unint64_t result;

  result = qword_25786B868;
  if (!qword_25786B868)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C29C, &_s6ScreenV11DisplayTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B868);
  }
  return result;
}

unint64_t sub_2496714BC()
{
  unint64_t result;

  result = qword_25786AE58;
  if (!qword_25786AE58)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C0E4, &_s6ScreenV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE58);
  }
  return result;
}

unint64_t sub_249671504()
{
  unint64_t result;

  result = qword_25786AE50;
  if (!qword_25786AE50)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C10C, &_s6ScreenV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AE50);
  }
  return result;
}

uint64_t sub_249671548(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79616C50726163 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249671638(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465646465626D65 && a2 == 0xE800000000000000 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C616E7265747865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_24967178C()
{
  unint64_t v0;

  v0 = sub_249676834();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t IntelligenceCommand.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntelligenceCommand.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IntelligenceCommand.title.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCommand.standaloneTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntelligenceCommand.standaloneTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*IntelligenceCommand.standaloneTitle.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCommand.menuHierarchyComponents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IntelligenceCommand.menuHierarchyComponents.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*IntelligenceCommand.menuHierarchyComponents.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceCommand.isPerformable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t IntelligenceCommand.isPerformable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*IntelligenceCommand.isPerformable.modify())()
{
  return nullsub_1;
}

void IntelligenceCommand.identifier.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
}

uint64_t sub_249671924()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25786B900);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = 0;
  off_25786B870 = (_UNKNOWN *)result;
  return result;
}

UIIntelligenceSupport::IntelligenceCommand::Identifier_optional __swiftcall IntelligenceCommand.Identifier.init(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t object;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  _QWORD v24[3];

  object = (uint64_t)a1._object;
  v3 = v1;
  v4 = HIBYTE(a1._object) & 0xF;
  a1._object = (void *)(a1._countAndFlagsBits & 0xFFFFFFFFFFFFLL);
  if ((object & 0x2000000000000000) != 0)
    v5 = v4;
  else
    v5 = a1._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    if ((object & 0x1000000000000000) != 0)
    {
      v6 = sub_24964AD78(a1._countAndFlagsBits, object, 10);
      v8 = v23;
LABEL_44:
      a1._countAndFlagsBits = swift_bridgeObjectRelease();
      v18 = v8 & 1;
      if ((v8 & 1) != 0)
        v19 = 0;
      else
        v19 = v6;
      goto LABEL_47;
    }
    if ((object & 0x2000000000000000) == 0)
    {
      if ((a1._countAndFlagsBits & 0x1000000000000000) != 0)
        a1._countAndFlagsBits = (object & 0xFFFFFFFFFFFFFFFLL) + 32;
      else
        a1._countAndFlagsBits = sub_2496767D4();
      v6 = (uint64_t)sub_24964AC74((unsigned __int8 *)a1._countAndFlagsBits, (uint64_t)a1._object, 10);
      v8 = v7 & 1;
      goto LABEL_44;
    }
    v24[0] = a1._countAndFlagsBits;
    v24[1] = object & 0xFFFFFFFFFFFFFFLL;
    if (LOBYTE(a1._countAndFlagsBits) == 43)
    {
      if (!v4)
        goto LABEL_58;
      if (v4 == 1 || (BYTE1(a1._countAndFlagsBits) - 48) > 9u)
        goto LABEL_31;
      v6 = (BYTE1(a1._countAndFlagsBits) - 48);
      if (v4 != 2)
      {
        if ((BYTE2(a1._countAndFlagsBits) - 48) > 9u)
          goto LABEL_31;
        v6 = 10 * (BYTE1(a1._countAndFlagsBits) - 48)
           + (BYTE2(a1._countAndFlagsBits) - 48);
        v9 = v4 - 3;
        if (v9)
        {
          v10 = (unsigned __int8 *)v24 + 3;
          while (1)
          {
            v11 = *v10 - 48;
            if (v11 > 9)
              goto LABEL_31;
            v12 = 10 * v6;
            if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63)
              goto LABEL_31;
            v6 = v12 + v11;
            if (__OFADD__(v12, v11))
              goto LABEL_31;
            v8 = 0;
            ++v10;
            if (!--v9)
              goto LABEL_44;
          }
        }
      }
    }
    else
    {
      if (LOBYTE(a1._countAndFlagsBits) == 45)
      {
        if (v4)
        {
          if (v4 != 1 && (BYTE1(a1._countAndFlagsBits) - 48) <= 9u)
          {
            if (v4 == 2)
            {
              v8 = 0;
              v6 = -(uint64_t)(BYTE1(a1._countAndFlagsBits) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(a1._countAndFlagsBits) - 48) <= 9u)
            {
              v6 = -10 * (BYTE1(a1._countAndFlagsBits) - 48)
                 - (BYTE2(a1._countAndFlagsBits) - 48);
              v17 = v4 - 3;
              if (!v17)
                goto LABEL_43;
              v20 = (unsigned __int8 *)v24 + 3;
              while (1)
              {
                v21 = *v20 - 48;
                if (v21 > 9)
                  break;
                v22 = 10 * v6;
                if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63)
                  break;
                v6 = v22 - v21;
                if (__OFSUB__(v22, v21))
                  break;
                v8 = 0;
                ++v20;
                if (!--v17)
                  goto LABEL_44;
              }
            }
          }
LABEL_31:
          v6 = 0;
          v8 = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_58:
        __break(1u);
        return *(UIIntelligenceSupport::IntelligenceCommand::Identifier_optional *)&a1._countAndFlagsBits;
      }
      if (!v4 || (LOBYTE(a1._countAndFlagsBits) - 48) > 9u)
        goto LABEL_31;
      v6 = (LOBYTE(a1._countAndFlagsBits) - 48);
      if (v4 != 1)
      {
        if ((BYTE1(a1._countAndFlagsBits) - 48) > 9u)
          goto LABEL_31;
        v6 = 10 * (LOBYTE(a1._countAndFlagsBits) - 48)
           + (BYTE1(a1._countAndFlagsBits) - 48);
        v13 = v4 - 2;
        if (v13)
        {
          v14 = (unsigned __int8 *)v24 + 2;
          while (1)
          {
            v15 = *v14 - 48;
            if (v15 > 9)
              goto LABEL_31;
            v16 = 10 * v6;
            if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63)
              goto LABEL_31;
            v6 = v16 + v15;
            if (__OFADD__(v16, v15))
              goto LABEL_31;
            v8 = 0;
            ++v14;
            if (!--v13)
              goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    v8 = 0;
    goto LABEL_44;
  }
  a1._countAndFlagsBits = swift_bridgeObjectRelease();
  v19 = 0;
  v18 = 1;
LABEL_47:
  *(_QWORD *)v3 = v19;
  *(_BYTE *)(v3 + 8) = v18 & 1;
  return *(UIIntelligenceSupport::IntelligenceCommand::Identifier_optional *)&a1._countAndFlagsBits;
}

uint64_t IntelligenceCommand.Identifier.description.getter()
{
  sub_249672DC4();
  return sub_2496766FC();
}

uint64_t IntelligenceCommand.Identifier.hash(into:)()
{
  return sub_2496769B4();
}

BOOL static IntelligenceCommand.Identifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_249671CB0()
{
  sub_249672E08();
  return sub_249676A20();
}

uint64_t sub_249671CD8()
{
  sub_249672E08();
  return sub_249676A2C();
}

uint64_t IntelligenceCommand.Identifier.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B880);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249672E08();
  sub_249676A14();
  sub_249676930();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t IntelligenceCommand.Identifier.hashValue.getter()
{
  sub_2496769A8();
  sub_2496769B4();
  return sub_2496769E4();
}

uint64_t IntelligenceCommand.Identifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B890);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249672E08();
  sub_2496769FC();
  if (!v2)
  {
    v9 = sub_2496768AC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_249671F30@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IntelligenceCommand.Identifier.init(from:)(a1, a2);
}

uint64_t sub_249671F44(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B880);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249672E08();
  sub_249676A14();
  sub_249676930();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_249672030()
{
  sub_249672DC4();
  return sub_2496766FC();
}

void __swiftcall IntelligenceCommand.init(title:standaloneTitle:menuHierarchyComponents:)(UIIntelligenceSupport::IntelligenceCommand *__return_ptr retstr, Swift::String title, Swift::String standaloneTitle, Swift::OpaquePointer menuHierarchyComponents)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v7;
  uint64_t v8;
  _QWORD *v10;
  os_unfair_lock_s *v11;
  Swift::Int v12;

  object = standaloneTitle._object;
  countAndFlagsBits = standaloneTitle._countAndFlagsBits;
  v7 = title._object;
  v8 = title._countAndFlagsBits;
  if (qword_25786B0E8 != -1)
    swift_once();
  v10 = off_25786B870;
  v11 = (os_unfair_lock_s *)((char *)off_25786B870 + 24);
  swift_retain();
  os_unfair_lock_lock(v11);
  v12 = v10[2];
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    v10[2] = v12 + 1;
    os_unfair_lock_unlock(v11);
    swift_release();
    retstr->title._countAndFlagsBits = v8;
    retstr->title._object = v7;
    retstr->standaloneTitle._countAndFlagsBits = countAndFlagsBits;
    retstr->standaloneTitle._object = object;
    retstr->menuHierarchyComponents = menuHierarchyComponents;
    retstr->isPerformable = 1;
    retstr->identifier.id = v12;
  }
}

void __swiftcall IntelligenceCommand.init(title:standaloneTitle:menuHierarchyComponents:isPerformable:)(UIIntelligenceSupport::IntelligenceCommand *__return_ptr retstr, Swift::String title, Swift::String standaloneTitle, Swift::OpaquePointer menuHierarchyComponents, Swift::Bool isPerformable)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v9;
  uint64_t v10;
  _QWORD *v12;
  os_unfair_lock_s *v13;
  Swift::Int v14;

  object = standaloneTitle._object;
  countAndFlagsBits = standaloneTitle._countAndFlagsBits;
  v9 = title._object;
  v10 = title._countAndFlagsBits;
  if (qword_25786B0E8 != -1)
    swift_once();
  v12 = off_25786B870;
  v13 = (os_unfair_lock_s *)((char *)off_25786B870 + 24);
  swift_retain();
  os_unfair_lock_lock(v13);
  v14 = v12[2];
  if (__OFADD__(v14, 1))
  {
    __break(1u);
  }
  else
  {
    v12[2] = v14 + 1;
    os_unfair_lock_unlock(v13);
    swift_release();
    retstr->title._countAndFlagsBits = v10;
    retstr->title._object = v9;
    retstr->standaloneTitle._countAndFlagsBits = countAndFlagsBits;
    retstr->standaloneTitle._object = object;
    retstr->menuHierarchyComponents = menuHierarchyComponents;
    retstr->isPerformable = isPerformable;
    retstr->identifier.id = v14;
  }
}

uint64_t sub_24967221C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249672248 + 4 * byte_24967C770[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_249672248()
{
  return 0x6F6C61646E617473;
}

unint64_t sub_24967226C()
{
  return 0xD000000000000017;
}

uint64_t sub_249672288()
{
  return 0x726F667265507369;
}

uint64_t sub_2496722AC()
{
  return 0x696669746E656469;
}

uint64_t sub_2496722C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2496735FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2496722EC()
{
  sub_249672F2C();
  return sub_249676A20();
}

uint64_t sub_249672314()
{
  sub_249672F2C();
  return sub_249676A2C();
}

uint64_t IntelligenceCommand.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B898);
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = *v1;
  v7 = v1[1];
  v8 = v1[2];
  v9 = v1[3];
  v18 = v1[4];
  v19 = v8;
  v17 = *((unsigned __int8 *)v1 + 40);
  v16 = v1[6];
  v10 = a1[3];
  v11 = a1;
  v12 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_249672F2C();
  sub_249676A14();
  v13 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v13 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v13 || (LOBYTE(v22) = 0, sub_24967690C(), !v2))
  {
    v14 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v14 = v19 & 0xFFFFFFFFFFFFLL;
    if (!v14 || (LOBYTE(v22) = 1, sub_24967690C(), !v2))
    {
      if (!*(_QWORD *)(v18 + 16)
        || (v22 = v18,
            v21 = 2,
            __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8),
            sub_249641EA0(&qword_25786B238, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]),
            sub_24967693C(),
            !v2))
      {
        if ((v17 & 1) != 0 || (LOBYTE(v22) = 3, sub_249676918(), !v2))
        {
          v22 = v16;
          v21 = 4;
          sub_249672F70();
          sub_24967693C();
        }
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v4);
}

uint64_t IntelligenceCommand.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786B8B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249672F2C();
  sub_2496769FC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v31) = 0;
  v9 = sub_249676858();
  if (v10)
    v12 = v9;
  else
    v12 = 0;
  if (v10)
    v13 = v10;
  else
    v13 = 0xE000000000000000;
  LOBYTE(v31) = 1;
  swift_bridgeObjectRetain();
  v14 = sub_249676858();
  v27 = v12;
  v29 = v13;
  if (v15)
    v16 = v14;
  else
    v16 = 0;
  if (v15)
    v17 = v15;
  else
    v17 = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  v30 = 2;
  sub_249641EA0(&qword_25786B250, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  v28 = 0;
  sub_2496768B8();
  v25 = v16;
  v26 = v17;
  v18 = v31;
  LOBYTE(v31) = 3;
  swift_bridgeObjectRetain();
  v24 = sub_249676864();
  v30 = 4;
  sub_249672FB4();
  sub_2496768B8();
  v19 = v29;
  v20 = (v24 == 2) | v24 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v21 = v31;
  v22 = v26;
  *(_QWORD *)a2 = v27;
  *(_QWORD *)(a2 + 8) = v19;
  *(_QWORD *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v22;
  *(_QWORD *)(a2 + 32) = v18;
  *(_BYTE *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249672934@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceCommand.init(from:)(a1, a2);
}

uint64_t sub_249672948(_QWORD *a1)
{
  return IntelligenceCommand.encode(to:)(a1);
}

unint64_t IntelligenceCommand.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD v27[2];

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 40);
  v5 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v5 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    strcpy((char *)v27, "title: ");
    v27[1] = 0xE700000000000000;
    swift_bridgeObjectRetain();
    sub_24967654C();
    swift_bridgeObjectRelease();
    v6 = v27[0];
    v7 = sub_2496325A0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v9 = v7[2];
    v8 = v7[3];
    if (v9 >= v8 >> 1)
      v7 = sub_2496325A0((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
    v7[2] = v9 + 1;
    v10 = &v7[2 * v9];
    v10[4] = v6;
    v10[5] = 0xE700000000000000;
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v11 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v11 = v3 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    sub_249676798();
    swift_bridgeObjectRelease();
    v27[0] = 0xD000000000000011;
    v27[1] = 0x800000024967DD80;
    swift_bridgeObjectRetain();
    sub_24967654C();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_2496325A0(0, v7[2] + 1, 1, v7);
    v13 = v7[2];
    v12 = v7[3];
    if (v13 >= v12 >> 1)
      v7 = sub_2496325A0((_QWORD *)(v12 > 1), v13 + 1, 1, v7);
    v7[2] = v13 + 1;
    v14 = &v7[2 * v13];
    v14[4] = 0xD000000000000011;
    v14[5] = 0x800000024967DD80;
  }
  sub_249676798();
  swift_bridgeObjectRelease();
  v27[0] = 0xD000000000000019;
  v27[1] = 0x800000024967DDA0;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  sub_249632EBC();
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_2496325A0(0, v7[2] + 1, 1, v7);
  v16 = v7[2];
  v15 = v7[3];
  v17 = v16 + 1;
  if (v16 >= v15 >> 1)
    v7 = sub_2496325A0((_QWORD *)(v15 > 1), v16 + 1, 1, v7);
  v7[2] = v17;
  v18 = &v7[2 * v16];
  v18[4] = 0xD000000000000019;
  v18[5] = 0x800000024967DDA0;
  if ((v4 & 1) == 0)
  {
    v19 = v7[3];
    if (v17 >= v19 >> 1)
      v7 = sub_2496325A0((_QWORD *)(v19 > 1), v16 + 2, 1, v7);
    v7[2] = v16 + 2;
    v20 = &v7[2 * v17];
    v20[4] = 0x6672657020746F6ELL;
    v20[5] = 0xEF656C62616D726FLL;
  }
  strcpy((char *)v27, "identifier: ");
  BYTE5(v27[1]) = 0;
  HIWORD(v27[1]) = -5120;
  sub_249672DC4();
  sub_2496766FC();
  sub_24967654C();
  swift_bridgeObjectRelease();
  v21 = v27[0];
  v22 = v27[1];
  v24 = v7[2];
  v23 = v7[3];
  if (v24 >= v23 >> 1)
    v7 = sub_2496325A0((_QWORD *)(v23 > 1), v24 + 1, 1, v7);
  v7[2] = v24 + 1;
  v25 = &v7[2 * v24];
  v25[4] = v21;
  v25[5] = v22;
  sub_249676798();
  swift_bridgeObjectRelease();
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return 0xD000000000000014;
}

unint64_t sub_249672DC4()
{
  unint64_t result;

  result = qword_25786B878;
  if (!qword_25786B878)
  {
    result = MEMORY[0x24BCF4DE0](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25786B878);
  }
  return result;
}

unint64_t sub_249672E08()
{
  unint64_t result;

  result = qword_25786B888;
  if (!qword_25786B888)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967CB6C, &type metadata for IntelligenceCommand.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B888);
  }
  return result;
}

uint64_t _s21UIIntelligenceSupport19IntelligenceCommandV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD **)(a2 + 32);
  v10 = *(unsigned __int8 *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_249676960(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8)
      return sub_249639D7C(v3, v9) & ~(v5 ^ v10) & (v6 == v11);
    v14 = sub_249676960();
    result = 0;
    if ((v14 & 1) != 0)
      return sub_249639D7C(v3, v9) & ~(v5 ^ v10) & (v6 == v11);
  }
  return result;
}

unint64_t sub_249672F2C()
{
  unint64_t result;

  result = qword_25786B8A0;
  if (!qword_25786B8A0)
  {
    result = MEMORY[0x24BCF4DE0]("\r4B\b09", &type metadata for IntelligenceCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B8A0);
  }
  return result;
}

unint64_t sub_249672F70()
{
  unint64_t result;

  result = qword_25786B8A8;
  if (!qword_25786B8A8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCommand.Identifier, &type metadata for IntelligenceCommand.Identifier);
    atomic_store(result, (unint64_t *)&qword_25786B8A8);
  }
  return result;
}

unint64_t sub_249672FB4()
{
  unint64_t result;

  result = qword_25786B8B8;
  if (!qword_25786B8B8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCommand.Identifier, &type metadata for IntelligenceCommand.Identifier);
    atomic_store(result, (unint64_t *)&qword_25786B8B8);
  }
  return result;
}

unint64_t sub_249672FFC()
{
  unint64_t result;

  result = qword_25786B8C0;
  if (!qword_25786B8C0)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCommand.Identifier, &type metadata for IntelligenceCommand.Identifier);
    atomic_store(result, (unint64_t *)&qword_25786B8C0);
  }
  return result;
}

unint64_t sub_249673044()
{
  unint64_t result;

  result = qword_25786B8C8;
  if (!qword_25786B8C8)
  {
    result = MEMORY[0x24BCF4DE0](&protocol conformance descriptor for IntelligenceCommand.Identifier, &type metadata for IntelligenceCommand.Identifier);
    atomic_store(result, (unint64_t *)&qword_25786B8C8);
  }
  return result;
}

uint64_t destroy for IntelligenceCommand()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IntelligenceCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IntelligenceCommand(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for IntelligenceCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceCommand(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCommand()
{
  return &type metadata for IntelligenceCommand;
}

ValueMetadata *type metadata accessor for IntelligenceCommand.Identifier()
{
  return &type metadata for IntelligenceCommand.Identifier;
}

uint64_t storeEnumTagSinglePayload for IntelligenceCommand.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_249673330 + 4 * byte_24967C77A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_249673364 + 4 * byte_24967C775[v4]))();
}

uint64_t sub_249673364(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24967336C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249673374);
  return result;
}

uint64_t sub_249673380(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249673388);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_24967338C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249673394(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCommand.CodingKeys()
{
  return &type metadata for IntelligenceCommand.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for IntelligenceCommand.Identifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2496733F0 + 4 * byte_24967C77F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249673410 + 4 * byte_24967C784[v4]))();
}

_BYTE *sub_2496733F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249673410(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249673418(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249673420(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249673428(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249673430(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceCommand.Identifier.CodingKeys()
{
  return &type metadata for IntelligenceCommand.Identifier.CodingKeys;
}

unint64_t sub_249673450()
{
  unint64_t result;

  result = qword_25786B8D0;
  if (!qword_25786B8D0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967CA3C, &type metadata for IntelligenceCommand.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B8D0);
  }
  return result;
}

unint64_t sub_249673498()
{
  unint64_t result;

  result = qword_25786B8D8;
  if (!qword_25786B8D8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967CAF4, &type metadata for IntelligenceCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B8D8);
  }
  return result;
}

unint64_t sub_2496734E0()
{
  unint64_t result;

  result = qword_25786B8E0;
  if (!qword_25786B8E0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967CA64, &type metadata for IntelligenceCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B8E0);
  }
  return result;
}

unint64_t sub_249673528()
{
  unint64_t result;

  result = qword_25786B8E8;
  if (!qword_25786B8E8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967CA8C, &type metadata for IntelligenceCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B8E8);
  }
  return result;
}

unint64_t sub_249673570()
{
  unint64_t result;

  result = qword_25786B8F0;
  if (!qword_25786B8F0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C9AC, &type metadata for IntelligenceCommand.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B8F0);
  }
  return result;
}

unint64_t sub_2496735B8()
{
  unint64_t result;

  result = qword_25786B8F8;
  if (!qword_25786B8F8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967C9D4, &type metadata for IntelligenceCommand.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25786B8F8);
  }
  return result;
}

uint64_t sub_2496735FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C61646E617473 && a2 == 0xEF656C746954656ELL || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024967DDE0 || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F667265507369 && a2 == 0xED0000656C62616DLL || (sub_249676960() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_249676960();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

ValueMetadata *type metadata accessor for IntelligenceCommand.Identifier.State()
{
  return &type metadata for IntelligenceCommand.Identifier.State;
}

void sub_24967386C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_249676468();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249673C98();
  sub_249653234();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5480], v2);
  v6 = sub_249676690();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v7 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_249673DE0;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249673AEC;
  aBlock[3] = &block_descriptor_2;
  v8 = _Block_copy(aBlock);
  swift_release();
  v9 = sub_24967651C();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  notify_register_dispatch((const char *)(v9 + 32), (int *)(v1 + 56), v6, v8);
  swift_endAccess();
  swift_release();
  _Block_release(v8);

}

uint64_t sub_249673A04()
{
  uint64_t v0;
  int v1;

  swift_beginAccess();
  v1 = *(_DWORD *)(v0 + 56);
  if (v1 != -1)
  {
    notify_cancel(v1);
    *(_DWORD *)(v0 + 56) = -1;
  }
  sub_249673D7C(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_249673A6C()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = (_QWORD *)(result + 16);
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 40);
    if (v3)
    {
      __swift_project_boxed_opaque_existential_1(v2, v3);
      sub_249653658();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_249673AEC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t XPCRelaunchNotificationPoster.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_DWORD *)(v0 + 16) = -1;
  sub_249673C98();
  sub_24967651C();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  notify_register_plain();
  swift_endAccess();
  swift_release();
  return v0;
}

uint64_t XPCRelaunchNotificationPoster.init()()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 16) = -1;
  sub_249673C98();
  sub_24967651C();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  notify_register_plain();
  swift_endAccess();
  swift_release();
  return v0;
}

Swift::Void __swiftcall XPCRelaunchNotificationPoster.post()()
{
  uint64_t v0;

  sub_249673C98();
  v0 = sub_24967651C();
  swift_bridgeObjectRelease();
  notify_post((const char *)(v0 + 32));
  swift_release();
}

uint64_t XPCRelaunchNotificationPoster.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t XPCRelaunchNotificationPoster.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_249673C98()
{
  sub_249676798();
  swift_bridgeObjectRelease();
  getuid();
  sub_249676954();
  sub_24967654C();
  swift_bridgeObjectRelease();
  return 0xD000000000000030;
}

uint64_t type metadata accessor for XPCRelaunchNotificationHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCRelaunchNotificationPoster()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCRelaunchNotificationPoster()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCRelaunchNotificationPoster.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_249673D7C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544AE320);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249673DBC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_249673DE0()
{
  return sub_249673A6C();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_249673E00(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6973726576646970;
    else
      v3 = 0xD000000000000010;
    if (v2 == 1)
      v4 = 0xEA00000000006E6FLL;
    else
      v4 = 0x800000024967CF20;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6973726576646970;
      else
        v6 = 0xD000000000000010;
      if (v5 == 1)
        v7 = 0xEA00000000006E6FLL;
      else
        v7 = 0x800000024967CF20;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE300000000000000;
    v3 = 6580592;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE300000000000000;
  if (v3 != 6580592)
  {
LABEL_21:
    v8 = sub_249676960();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_249673F10(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_249673F6C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_249674008 + 4 * byte_24967CC86[a2]))(0x444965746F6D6572);
}

uint64_t sub_249674008(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x444965746F6D6572 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_249676960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2496740F8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE006F666E497373;
  v3 = 0x65636F7250707061;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x696669746E656469;
    else
      v5 = 0x6576697463417369;
    if (v4 == 1)
      v6 = 0xEA00000000007265;
    else
      v6 = 0xE800000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x65636F7250707061;
  v6 = 0xEE006F666E497373;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x696669746E656469;
    else
      v3 = 0x6576697463417369;
    if (v7 == 1)
      v2 = 0xEA00000000007265;
    else
      v2 = 0xE800000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_249676960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_249674228(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_249674268(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2496742E0 + 4 * byte_24967CC90[a2]))(0x697463656E6E6F63);
}

uint64_t sub_2496742E0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x697463656E6E6F63 && v1 == 0xEE00657079546E6FLL)
    v2 = 1;
  else
    v2 = sub_249676960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_24967439C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2496743E4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_249674468 + 4 * byte_24967CC99[a2]))(0x74706D6F7270);
}

uint64_t sub_249674468(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x74706D6F7270 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_249676960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_249674534(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_249674584(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2496745F4 + 4 * byte_24967CCA2[a2]))(0x656C626174696465);
}

uint64_t sub_2496745F4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C626174696465 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_249676960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2496746A8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6F4365746F6D6572;
  else
    v3 = 0x49737365636F7270;
  if (v2)
    v4 = 0xEB000000006F666ELL;
  else
    v4 = 0xED0000747865746ELL;
  if ((a2 & 1) != 0)
    v5 = 0x6F4365746F6D6572;
  else
    v5 = 0x49737365636F7270;
  if ((a2 & 1) != 0)
    v6 = 0xED0000747865746ELL;
  else
    v6 = 0xEB000000006F666ELL;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_249676960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_249674760(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2496747B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_249674844 + 4 * byte_24967CCAB[a2]))(0x676E69646E756F62);
}

uint64_t sub_249674844(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x676E69646E756F62 && v1 == 0xEB00000000786F42)
    v2 = 1;
  else
    v2 = sub_249676960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_249674920(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6373654474786574;
  else
    v3 = 1701667182;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xEF6E6F6974706972;
  if ((a2 & 1) != 0)
    v5 = 0x6373654474786574;
  else
    v5 = 1701667182;
  if ((a2 & 1) != 0)
    v6 = 0xEF6E6F6974706972;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_249676960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t IntelligenceElement.Window.appBundleIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[7];
  if (v1 == 1)
    v2 = 0;
  else
    v2 = v0[6];
  sub_24963E990(*v0, v0[1], v0[2], v0[3], v0[4], v0[5], v0[6], v1);
  return v2;
}

uint64_t sub_249674A0C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  if (v9 == 1)
    v10 = 0;
  else
    v10 = a1[6];
  if (v9 == 1)
    v11 = 0;
  else
    v11 = a1[7];
  *a2 = v10;
  a2[1] = v11;
  return sub_24963E990(v3, v2, v4, v5, v6, v7, v8, v9);
}

uint64_t *sub_249674A34(uint64_t *result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(a2 + 56) != 1)
  {
    v4 = *result;
    v3 = result[1];
    swift_bridgeObjectRetain();
    result = (uint64_t *)swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 48) = v4;
    *(_QWORD *)(a2 + 56) = v3;
  }
  return result;
}

uint64_t IntelligenceElement.Window.appBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (*(_QWORD *)(v2 + 56) == 1)
    return swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*IntelligenceElement.Window.appBundleIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  a1[2] = (uint64_t)v1;
  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = v1[7];
  if (v10 == 1)
    v11 = 0;
  else
    v11 = v1[6];
  if (v10 == 1)
    v12 = 0;
  else
    v12 = v1[7];
  *a1 = v11;
  a1[1] = v12;
  sub_24963E990(v3, v4, v5, v6, v7, v8, v9, v10);
  return sub_249674B1C;
}

uint64_t sub_249674B1C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[2];
  if ((a2 & 1) != 0)
  {
    if (*(_QWORD *)(v2 + 56) != 1)
    {
      v7 = *a1;
      v6 = a1[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v2 + 48) = v7;
      *(_QWORD *)(v2 + 56) = v6;
    }
  }
  else
  {
    v3 = a1[1];
    if (*(_QWORD *)(v2 + 56) != 1)
    {
      v4 = *a1;
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v2 + 48) = v4;
      *(_QWORD *)(v2 + 56) = v3;
      return result;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t IntelligenceElement.Window.appProcessInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_24963E990(v2, v3, v4, v5, v6, v7, v8, v9);
}

__n128 IntelligenceElement.Window.appProcessInfo.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  sub_24963E9A4(*v1, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
  *(_OWORD *)v1 = v7;
  *((_OWORD *)v1 + 1) = v6;
  result = v5;
  *((__n128 *)v1 + 2) = v5;
  v1[6] = v2;
  v1[7] = v3;
  return result;
}

uint64_t (*IntelligenceElement.Window.appProcessInfo.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Window.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntelligenceElement.Window.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*IntelligenceElement.Window.identifier.modify())()
{
  return nullsub_1;
}

uint64_t IntelligenceElement.Window.isActive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t IntelligenceElement.Window.isActive.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = result;
  return result;
}

uint64_t (*IntelligenceElement.Window.isActive.modify())()
{
  return nullsub_1;
}

double IntelligenceElement.Window.init(identifier:isActive:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = 1;
  *(_QWORD *)(a4 + 64) = a1;
  *(_QWORD *)(a4 + 72) = a2;
  *(_BYTE *)(a4 + 80) = a3;
  return result;
}

__n128 IntelligenceElement.Window.init(appProcessInfo:identifier:isActive:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  __int128 v5;
  __n128 result;
  __int128 v7;

  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v5;
  result = *(__n128 *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a5 + 32) = result;
  *(_OWORD *)(a5 + 48) = v7;
  *(_QWORD *)(a5 + 64) = a2;
  *(_QWORD *)(a5 + 72) = a3;
  *(_BYTE *)(a5 + 80) = a4;
  return result;
}

double IntelligenceElement.Window.init(appBundleIdentifier:identifier:isActive:)@<D0>(uint64_t a1@<X2>, uint64_t a2@<X3>, char a3@<W4>, uint64_t a4@<X8>)
{
  double result;

  swift_bridgeObjectRelease();
  result = 0.0;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = 1;
  *(_QWORD *)(a4 + 64) = a1;
  *(_QWORD *)(a4 + 72) = a2;
  *(_BYTE *)(a4 + 80) = a3;
  return result;
}

uint64_t sub_249674D68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2496740F8(*a1, *a2);
}

uint64_t sub_249674D74()
{
  sub_2496769A8();
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_249674E24()
{
  sub_249676534();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249674EB0()
{
  sub_2496769A8();
  sub_249676534();
  swift_bridgeObjectRelease();
  return sub_2496769E4();
}

uint64_t sub_249674F5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249675FF4();
  *a1 = result;
  return result;
}

void sub_249674F88(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE006F666E497373;
  v4 = 0xEA00000000007265;
  v5 = 0x696669746E656469;
  if (v2 != 1)
  {
    v5 = 0x6576697463417369;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x65636F7250707061;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_249674FF8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696669746E656469;
  if (*v0 != 1)
    v1 = 0x6576697463417369;
  if (*v0)
    return v1;
  else
    return 0x65636F7250707061;
}

uint64_t sub_249675064@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249675FF4();
  *a1 = result;
  return result;
}

uint64_t sub_249675088()
{
  sub_249675AB0();
  return sub_249676A20();
}

uint64_t sub_2496750B0()
{
  sub_249675AB0();
  return sub_249676A2C();
}

uint64_t IntelligenceElement.Window.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _QWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786ABC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v16 = v1[1];
  v17 = v7;
  v15 = v1[2];
  v9 = *((_QWORD *)v1 + 6);
  v8 = *((_QWORD *)v1 + 7);
  v10 = *((_QWORD *)v1 + 8);
  v14[0] = *((_QWORD *)v1 + 9);
  v14[1] = v10;
  v24 = *((unsigned __int8 *)v1 + 80);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249675AB0();
  sub_249676A14();
  v19 = v17;
  v20 = v16;
  v21 = v15;
  v22 = v9;
  v23 = v8;
  v25 = 0;
  sub_249634890();
  v11 = v18;
  sub_249676900();
  if (!v11)
  {
    v12 = v24;
    LOBYTE(v19) = 1;
    sub_2496768E8();
    if (v12)
    {
      LOBYTE(v19) = 2;
      sub_249676918();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IntelligenceElement.Window.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char v56;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25786AA10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249675AB0();
  sub_2496769FC();
  if (v2)
  {
    v45 = 0;
    v46 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v29 = 0;
    v30 = 0;
    v31 = v46;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 1;
  }
  else
  {
    v56 = 0;
    sub_2496348D4();
    sub_249676888();
    v40 = a2;
    v10 = v47;
    v11 = v54;
    LOBYTE(v47) = 1;
    v12 = v10;
    v13 = v48;
    v46 = v49;
    v42 = v50;
    v43 = v51;
    v41 = v52;
    v44 = v53;
    sub_24963E990(v10, v48, v49, v50, v51, v52, v53, v54);
    v37 = sub_249676858();
    v38 = v13;
    v39 = v11;
    LOBYTE(v47) = 2;
    v45 = v14;
    swift_bridgeObjectRetain();
    v15 = sub_249676864();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v55 = v15 & 1;
    v16 = v12;
    v17 = v12;
    v19 = v38;
    v18 = v39;
    v20 = v46;
    v21 = v42;
    v22 = v43;
    v23 = v41;
    sub_24963E990(v17, v38, v46, v42, v43, v41, v44, v39);
    v24 = v22;
    v25 = v44;
    sub_24963E9A4(v16, v19, v20, v21, v24, v23, v44, v18);
    v26 = v40;
    *v40 = v16;
    v26[1] = v19;
    v26[2] = v20;
    v26[3] = v21;
    v27 = v43;
    v26[4] = v43;
    v26[5] = v23;
    v26[6] = v25;
    v26[7] = v18;
    v28 = v45;
    v26[8] = v37;
    v26[9] = v28;
    *((_BYTE *)v26 + 80) = v55;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v29 = v16;
    v30 = v19;
    v31 = v20;
    v32 = v42;
    v33 = v27;
    v34 = v23;
    v35 = v25;
    v36 = v18;
  }
  sub_24963E9A4(v29, v30, v31, v32, v33, v34, v35, v36);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496755CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IntelligenceElement.Window.init(from:)(a1, a2);
}

uint64_t sub_2496755E0(_QWORD *a1)
{
  return IntelligenceElement.Window.encode(to:)(a1);
}

uint64_t IntelligenceElement.Window.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD v16[2];
  char v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  if (v1 == 1)
  {
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!v3)
      goto LABEL_15;
    goto LABEL_7;
  }
  v22 = 0x203A707061;
  v23 = 0xE500000000000000;
  v16[0] = *(_OWORD *)v0;
  v16[1] = *(_OWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 32) & 1;
  v18 = HIDWORD(*(_QWORD *)(v0 + 32));
  v19 = *(_QWORD *)(v0 + 40);
  v20 = *(_QWORD *)(v0 + 48);
  v21 = v1;
  IntelligenceProcessInfo.description.getter();
  sub_24967654C();
  swift_bridgeObjectRelease();
  v4 = sub_2496325A0(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v6 = v4[2];
  v5 = v4[3];
  if (v6 >= v5 >> 1)
    v4 = sub_2496325A0((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
  v4[2] = v6 + 1;
  v7 = &v4[2 * v6];
  v7[4] = 0x203A707061;
  v7[5] = 0xE500000000000000;
  if (v3)
  {
LABEL_7:
    v8 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v8 = v2 & 0xFFFFFFFFFFFFLL;
    if (v8)
    {
      sub_249676798();
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "identifier: \"");
      HIWORD(v16[0]) = -4864;
      sub_24967654C();
      sub_24967654C();
      v9 = v16[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_2496325A0(0, v4[2] + 1, 1, v4);
      v11 = v4[2];
      v10 = v4[3];
      if (v11 >= v10 >> 1)
        v4 = sub_2496325A0((_QWORD *)(v10 > 1), v11 + 1, 1, v4);
      v4[2] = v11 + 1;
      *(_OWORD *)&v4[2 * v11 + 4] = v9;
    }
  }
LABEL_15:
  *(_QWORD *)&v16[0] = 0x6576697463417369;
  *((_QWORD *)&v16[0] + 1) = 0xEA0000000000203ALL;
  sub_24967654C();
  swift_bridgeObjectRelease();
  v12 = v16[0];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_2496325A0(0, v4[2] + 1, 1, v4);
  v14 = v4[2];
  v13 = v4[3];
  if (v14 >= v13 >> 1)
    v4 = sub_2496325A0((_QWORD *)(v13 > 1), v14 + 1, 1, v4);
  v4[2] = v14 + 1;
  *(_OWORD *)&v4[2 * v14 + 4] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25786A8F8);
  sub_249632EBC();
  sub_2496764B0();
  swift_bridgeObjectRelease();
  sub_24967654C();
  swift_bridgeObjectRelease();
  sub_24967654C();
  return 0x28776F646E6957;
}

uint64_t _s21UIIntelligenceSupport19IntelligenceElementV6WindowV2eeoiySbAE_AEtFZ_0(__int128 *a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v25;
  int v26;
  char v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[2];
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((_QWORD *)a1 + 4);
  v7 = *(__int128 *)((char *)a1 + 40);
  v9 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v10 = *((_QWORD *)a1 + 9);
  v11 = *((unsigned __int8 *)a1 + 80);
  v12 = *(_QWORD *)a2;
  v13 = *(_QWORD *)(a2 + 8);
  v14 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 32);
  v16 = *(_QWORD *)(a2 + 40);
  v18 = *(_QWORD *)(a2 + 48);
  v19 = *(_QWORD *)(a2 + 56);
  v20 = *(_QWORD *)(a2 + 64);
  v21 = *(_QWORD *)(a2 + 72);
  v22 = *(unsigned __int8 *)(a2 + 80);
  if (v9 == 1)
  {
    if (v19 == 1)
      goto LABEL_10;
LABEL_6:
    v31[0] = v4;
    v31[1] = v5;
    v32 = v6;
    v33 = v7;
    v34 = v9;
    v35 = v12;
    v36 = v13;
    v37 = v14;
    v38 = v15;
    v39 = v17;
    v40 = v16;
    v41 = v18;
    v42 = v19;
    sub_24963E990(v12, v13, v14, v15, v17, v16, v18, v19);
    sub_249656C18((uint64_t *)v31);
    return 0;
  }
  if (v19 == 1)
  {
    v29 = v4;
    v30 = v7;
    v28 = v5;
    swift_bridgeObjectRetain();
    v5 = v28;
    v4 = v29;
    v7 = v30;
    goto LABEL_6;
  }
  v23 = 0;
  if (__PAIR64__(v7, (*(unsigned int *)((char *)a1 + 33) | ((unint64_t)(*(unsigned __int16 *)((char *)a1 + 37) | (*((unsigned __int8 *)a1 + 39) << 16)) << 32)) >> 24) != __PAIR64__(v16, HIDWORD(v17)))return v23;
LABEL_10:
  if (!v10)
  {
    if (!v21)
      return v11 ^ v22 ^ 1u;
    return 0;
  }
  if (!v21)
    return 0;
  if (v8 == v20 && v10 == v21)
    return v11 ^ v22 ^ 1u;
  v25 = *((unsigned __int8 *)a1 + 80);
  v26 = v22;
  v27 = sub_249676960();
  v22 = v26;
  v11 = v25;
  v23 = 0;
  if ((v27 & 1) != 0)
    return v11 ^ v22 ^ 1u;
  return v23;
}

unint64_t sub_249675AB0()
{
  unint64_t result;

  result = qword_25786AEB0;
  if (!qword_25786AEB0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967CE70, &_s6WindowV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AEB0);
  }
  return result;
}

uint64_t _s6WindowVwxx(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 56) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s6WindowVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  if (v4 == 1)
  {
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  else
  {
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v4;
    swift_bridgeObjectRetain();
  }
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6WindowVwca(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *((_QWORD *)a2 + 7);
  if (*(_QWORD *)(a1 + 56) == 1)
  {
    v5 = *a2;
    v6 = a2[1];
    if (v4 == 1)
    {
      v7 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
    }
    else
    {
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 == 1)
  {
    sub_24964F420(a1);
    v8 = a2[3];
    v10 = *a2;
    v9 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    v11 = *a2;
    v12 = a2[1];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v12;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s6WindowVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  if (*(_QWORD *)(a1 + 56) != 1)
  {
    v4 = *(_QWORD *)(a2 + 56);
    if (v4 != 1)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24964F420(a1);
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
LABEL_6:
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t _s6WindowVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s6WindowVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_QWORD *)(result + 72) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceElement.Window()
{
  return &type metadata for IntelligenceElement.Window;
}

uint64_t _s6WindowV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249675E9C + 4 * byte_24967CCB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249675ED0 + 4 * byte_24967CCB0[v4]))();
}

uint64_t sub_249675ED0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249675ED8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249675EE0);
  return result;
}

uint64_t sub_249675EEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249675EF4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249675EF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249675F00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6WindowV10CodingKeysOMa()
{
  return &_s6WindowV10CodingKeysON;
}

unint64_t sub_249675F20()
{
  unint64_t result;

  result = qword_25786B908;
  if (!qword_25786B908)
  {
    result = MEMORY[0x24BCF4DE0]("Q1B\b$7", &_s6WindowV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786B908);
  }
  return result;
}

unint64_t sub_249675F68()
{
  unint64_t result;

  result = qword_25786AEC0;
  if (!qword_25786AEC0)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967CD80, &_s6WindowV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AEC0);
  }
  return result;
}

unint64_t sub_249675FB0()
{
  unint64_t result;

  result = qword_25786AEB8;
  if (!qword_25786AEB8)
  {
    result = MEMORY[0x24BCF4DE0](&unk_24967CDA8, &_s6WindowV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25786AEB8);
  }
  return result;
}

uint64_t sub_249675FF4()
{
  unint64_t v0;

  v0 = sub_249676834();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_24967603C()
{
  return MEMORY[0x24BDCB218]();
}

uint64_t sub_249676048()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_249676054()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_249676060()
{
  return MEMORY[0x24BDCB3B0]();
}

uint64_t sub_24967606C()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_249676078()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_249676084()
{
  return MEMORY[0x24BDCB610]();
}

uint64_t sub_249676090()
{
  return MEMORY[0x24BDCB688]();
}

uint64_t sub_24967609C()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_2496760A8()
{
  return MEMORY[0x24BDCB6F0]();
}

uint64_t sub_2496760B4()
{
  return MEMORY[0x24BDCB710]();
}

uint64_t sub_2496760C0()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_2496760CC()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_2496760D8()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_2496760E4()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_2496760F0()
{
  return MEMORY[0x24BDCBC18]();
}

uint64_t sub_2496760FC()
{
  return MEMORY[0x24BDCBC20]();
}

uint64_t sub_249676108()
{
  return MEMORY[0x24BDCC268]();
}

uint64_t sub_249676114()
{
  return MEMORY[0x24BDCC270]();
}

uint64_t sub_249676120()
{
  return MEMORY[0x24BDCC290]();
}

uint64_t sub_24967612C()
{
  return MEMORY[0x24BDCC2C8]();
}

uint64_t sub_249676138()
{
  return MEMORY[0x24BDCC300]();
}

uint64_t sub_249676144()
{
  return MEMORY[0x24BDCC308]();
}

uint64_t sub_249676150()
{
  return MEMORY[0x24BDCC338]();
}

uint64_t sub_24967615C()
{
  return MEMORY[0x24BDCC340]();
}

uint64_t sub_249676168()
{
  return MEMORY[0x24BDCC348]();
}

uint64_t sub_249676174()
{
  return MEMORY[0x24BDCC350]();
}

uint64_t sub_249676180()
{
  return MEMORY[0x24BDCC3F8]();
}

uint64_t sub_24967618C()
{
  return MEMORY[0x24BDCC408]();
}

uint64_t sub_249676198()
{
  return MEMORY[0x24BDCC410]();
}

uint64_t sub_2496761A4()
{
  return MEMORY[0x24BDCC468]();
}

uint64_t sub_2496761B0()
{
  return MEMORY[0x24BDCC480]();
}

uint64_t sub_2496761BC()
{
  return MEMORY[0x24BDCC498]();
}

uint64_t sub_2496761C8()
{
  return MEMORY[0x24BDCC4A8]();
}

uint64_t sub_2496761D4()
{
  return MEMORY[0x24BDCC4D0]();
}

uint64_t sub_2496761E0()
{
  return MEMORY[0x24BDCC4E0]();
}

uint64_t sub_2496761EC()
{
  return MEMORY[0x24BDCC4E8]();
}

uint64_t sub_2496761F8()
{
  return MEMORY[0x24BDCC4F0]();
}

uint64_t sub_249676204()
{
  return MEMORY[0x24BDCC528]();
}

uint64_t sub_249676210()
{
  return MEMORY[0x24BDCC5A0]();
}

uint64_t sub_24967621C()
{
  return MEMORY[0x24BDCC5A8]();
}

uint64_t sub_249676228()
{
  return MEMORY[0x24BDCC5D8]();
}

uint64_t sub_249676234()
{
  return MEMORY[0x24BDCC5F8]();
}

uint64_t sub_249676240()
{
  return MEMORY[0x24BDCC610]();
}

uint64_t sub_24967624C()
{
  return MEMORY[0x24BDCC620]();
}

uint64_t sub_249676258()
{
  return MEMORY[0x24BDCC890]();
}

uint64_t sub_249676264()
{
  return MEMORY[0x24BDCC898]();
}

uint64_t sub_249676270()
{
  return MEMORY[0x24BDCC948]();
}

uint64_t sub_24967627C()
{
  return MEMORY[0x24BDCC950]();
}

uint64_t sub_249676288()
{
  return MEMORY[0x24BDCC958]();
}

uint64_t sub_249676294()
{
  return MEMORY[0x24BDCC9A8]();
}

uint64_t sub_2496762A0()
{
  return MEMORY[0x24BDCD2E0]();
}

uint64_t sub_2496762AC()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_2496762B8()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_2496762C4()
{
  return MEMORY[0x24BDCD3D8]();
}

uint64_t sub_2496762D0()
{
  return MEMORY[0x24BDCD3E0]();
}

uint64_t sub_2496762DC()
{
  return MEMORY[0x24BDCD3E8]();
}

uint64_t sub_2496762E8()
{
  return MEMORY[0x24BDCD5B0]();
}

uint64_t sub_2496762F4()
{
  return MEMORY[0x24BDCD5B8]();
}

uint64_t sub_249676300()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_24967630C()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_249676318()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t _s21UIIntelligenceSupport20IntelligenceFragmentV8RemoteIDV2eeoiySbAE_AEtFZ_0()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_249676330()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_24967633C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_249676348()
{
  return MEMORY[0x24BEE7710]();
}

uint64_t sub_249676354()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_249676360()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_24967636C()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_249676378()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_249676384()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_249676390()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_24967639C()
{
  return MEMORY[0x24BEE7840]();
}

uint64_t sub_2496763A8()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_2496763B4()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_2496763C0()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2496763CC()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_2496763D8()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2496763E4()
{
  return MEMORY[0x24BEE6500]();
}

uint64_t sub_2496763F0()
{
  return MEMORY[0x24BEE6508]();
}

uint64_t sub_2496763FC()
{
  return MEMORY[0x24BEE6520]();
}

uint64_t sub_249676408()
{
  return MEMORY[0x24BEE6530]();
}

uint64_t sub_249676414()
{
  return MEMORY[0x24BEE6570]();
}

uint64_t sub_249676420()
{
  return MEMORY[0x24BEE6578]();
}

uint64_t sub_24967642C()
{
  return MEMORY[0x24BEE65A8]();
}

uint64_t sub_249676438()
{
  return MEMORY[0x24BEE6678]();
}

uint64_t sub_249676444()
{
  return MEMORY[0x24BEE66A8]();
}

uint64_t sub_249676450()
{
  return MEMORY[0x24BEE6750]();
}

uint64_t sub_24967645C()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_249676468()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_249676474()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_249676480()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_24967648C()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_249676498()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2496764A4()
{
  return MEMORY[0x24BEE0620]();
}

uint64_t sub_2496764B0()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_2496764BC()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_2496764C8()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_2496764D4()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2496764E0()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2496764EC()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_2496764F8()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_249676504()
{
  return MEMORY[0x24BDCFB38]();
}

uint64_t sub_249676510()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_24967651C()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_249676528()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_249676534()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_249676540()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_24967654C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_249676558()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_249676564()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_249676570()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_24967657C()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_249676588()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_249676594()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_2496765A0()
{
  return MEMORY[0x24BEE0DC8]();
}

uint64_t sub_2496765AC()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_2496765B8()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_2496765C4()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_2496765D0()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_2496765DC()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_2496765E8()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2496765F4()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_249676600()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_24967660C()
{
  return MEMORY[0x24BEE1908]();
}

uint64_t sub_249676618()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_249676624()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_249676630()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_24967663C()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_249676648()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_249676654()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_249676660()
{
  return MEMORY[0x24BDCFF70]();
}

uint64_t sub_24967666C()
{
  return MEMORY[0x24BDBD808]();
}

uint64_t sub_249676678()
{
  return MEMORY[0x24BDCFFA0]();
}

uint64_t sub_249676684()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_249676690()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_24967669C()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_2496766A8()
{
  return MEMORY[0x24BEE7958]();
}

uint64_t sub_2496766B4()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_2496766C0()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_2496766CC()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2496766D8()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_2496766E4()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2496766F0()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2496766FC()
{
  return MEMORY[0x24BEE2090]();
}

uint64_t sub_249676708()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_249676714()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_249676720()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_24967672C()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_249676738()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_249676744()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_249676750()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_24967675C()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_249676768()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_249676774()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_249676780()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_24967678C()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_249676798()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2496767A4()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2496767B0()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2496767BC()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_2496767C8()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_2496767D4()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2496767E0()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_2496767EC()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2496767F8()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_249676804()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_249676810()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_24967681C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_249676828()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_249676834()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_249676840()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_24967684C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_249676858()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_249676864()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_249676870()
{
  return MEMORY[0x24BEE32E8]();
}

uint64_t sub_24967687C()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_249676888()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_249676894()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_2496768A0()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_2496768AC()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_2496768B8()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_2496768C4()
{
  return MEMORY[0x24BEE3398]();
}

uint64_t sub_2496768D0()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_2496768DC()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_2496768E8()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_2496768F4()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_249676900()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_24967690C()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_249676918()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_249676924()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_249676930()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_24967693C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_249676948()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_249676954()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_249676960()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_24967696C()
{
  return MEMORY[0x24BEE3AC0]();
}

uint64_t sub_249676978()
{
  return MEMORY[0x24BEE3B60]();
}

uint64_t sub_249676984()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_249676990()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_24967699C()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_2496769A8()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2496769B4()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2496769C0()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2496769CC()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_2496769D8()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_2496769E4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2496769F0()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_2496769FC()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_249676A08()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_249676A14()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_249676A20()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_249676A2C()
{
  return MEMORY[0x24BEE4A10]();
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x24BDBC300]();
}

void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void *block)
{
  MEMORY[0x24BDBC338](rl, mode, block);
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
  MEMORY[0x24BDBC3B8](rl);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x24BDBEFE0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x24BDBF060]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x24BDAE6D0]();
}

uid_t getuid(void)
{
  return MEMORY[0x24BDAE788]();
}

uint64_t mach_continuous_time(void)
{
  return MEMORY[0x24BDAEB48]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x24BDAF138](*(_QWORD *)&token);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x24BDAF160](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x24BDAF170](name, out_token, queue, handler);
}

uint64_t notify_register_plain()
{
  return MEMORY[0x24BDAF180]();
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x24BEE4F28]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x24BDB0740](name, targetq, flags);
}

