void setPropertyIMP(void *a1, const char *a2, void *a3)
{
  _QWORD *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  objc_class *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  objc_class *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  _QWORD *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a3;
  v7 = (void *)MEMORY[0x1D17BA0A0]();
  keyFromSelector(a2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v5, "propertyIsReadOnly:", v8))
  {
    objc_msgSend((id)objc_opt_class(), "properties");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "objectForKey:", v8);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (objc_class *)objc_msgSend(v15, "classObj");

    if (v6 && (objc_opt_isKindOfClass() & 1) == 0)
    {
      v21 = (void *)MEMORY[0x1E0C99DA0];
      v22 = *MEMORY[0x1E0C99768];
      v23 = (void *)MEMORY[0x1E0CB3940];
      v24 = (objc_class *)objc_opt_class();
      NSStringFromClass(v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      NSStringFromClass(v16);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "stringWithFormat:", CFSTR("Property for parameter %@ was supplied as %@, but was expected to be %@."), v8, v25, v26);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "exceptionWithName:reason:userInfo:", v22, v27, 0);
      v28 = (id)objc_claimAutoreleasedReturnValue();

      objc_exception_throw(v28);
    }
    if (v5[1])
    {
      if (v6)
      {
LABEL_9:
        v17 = (void *)v5[1];
        objc_msgSend(v8, "hmf_stringWithSmallestEncoding");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "setValue:forKey:", v6, v18);

        goto LABEL_10;
      }
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = (void *)v5[1];
      v5[1] = v19;

      if (v6)
        goto LABEL_9;
    }
    objc_msgSend(MEMORY[0x1E0C99E38], "null");
    v6 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_9;
  }
  v9 = (void *)MEMORY[0x1D17BA0A0]();
  v10 = v5;
  HMFGetOSLogHandle();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    HMFGetLogIdentifier();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDBackingStoreSingleton dataVersion](HMDBackingStoreSingleton, "dataVersion");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138544130;
    v30 = v12;
    v31 = 2112;
    v32 = v8;
    v33 = 2112;
    v34 = v10;
    v35 = 2112;
    v36 = v13;
    _os_log_impl(&dword_1CD062000, v11, OS_LOG_TYPE_ERROR, "%{public}@Attempting to write property %@ from %@, unwritable in homed data version %@.", buf, 0x2Au);

  }
  objc_autoreleasePoolPop(v9);
LABEL_10:

  objc_autoreleasePoolPop(v7);
}

uint64_t isEqualDeepCompare(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[128];
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v5 = objc_msgSend(v3, "count");
      if (v5 == objc_msgSend(v4, "count"))
      {
        v31 = 0u;
        v32 = 0u;
        v29 = 0u;
        v30 = 0u;
        v6 = v3;
        v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v29, v34, 16);
        if (v7)
        {
          v8 = v7;
          v9 = *(_QWORD *)v30;
          while (2)
          {
            for (i = 0; i != v8; ++i)
            {
              if (*(_QWORD *)v30 != v9)
                objc_enumerationMutation(v6);
              v11 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 8 * i);
              objc_msgSend(v6, "objectForKey:", v11);
              v12 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v4, "objectForKey:", v11);
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              if (!v13 || !isEqualDeepCompare(v12, v13))
              {

                v14 = 0;
                goto LABEL_34;
              }

            }
            v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v29, v34, 16);
            v14 = 1;
            if (v8)
              continue;
            goto LABEL_34;
          }
        }
LABEL_25:
        v14 = 1;
LABEL_34:

        goto LABEL_35;
      }
LABEL_31:
      v14 = 0;
      goto LABEL_35;
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v15 = objc_msgSend(v3, "count");
      if (v15 == objc_msgSend(v4, "count"))
      {
        v27 = 0u;
        v28 = 0u;
        v25 = 0u;
        v26 = 0u;
        v6 = v3;
        v16 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
        if (v16)
        {
          v17 = v16;
          v18 = 0;
          v19 = *(_QWORD *)v26;
LABEL_19:
          v20 = 0;
          while (1)
          {
            if (*(_QWORD *)v26 != v19)
              objc_enumerationMutation(v6);
            v21 = *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * v20);
            objc_msgSend(v4, "objectAtIndex:", v18 + v20, (_QWORD)v25);
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            v14 = isEqualDeepCompare(v21, v22);

            if (!(_DWORD)v14)
              goto LABEL_34;
            if (v17 == ++v20)
            {
              v18 += v20;
              v17 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
              if (v17)
                goto LABEL_19;
              goto LABEL_25;
            }
          }
        }
        goto LABEL_25;
      }
      goto LABEL_31;
    }
  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    if (v3 == v4)
    {
      v14 = 1;
      goto LABEL_35;
    }
    v23 = objc_msgSend(v3, "isBackingStorageEqual:", v4);
  }
  else
  {
    v23 = HMFEqualObjects();
  }
  v14 = v23;
LABEL_35:

  return v14;
}

id keyFromSelector(const char *a1)
{
  void *v1;
  void *v2;
  void *v3;
  int v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;

  NSStringFromSelector(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v1, "hasPrefix:", CFSTR("set")) || objc_msgSend(v1, "length") == 3)
    goto LABEL_6;
  objc_msgSend(v1, "substringWithRange:", 3, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "lowercaseString");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "isEqualToString:", v3);

  if (!v4)
  {
    objc_msgSend(v2, "lowercaseString");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "substringWithRange:", 4, objc_msgSend(v1, "length") - 5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "stringByAppendingString:", v7);
    v8 = objc_claimAutoreleasedReturnValue();

    v1 = (void *)v8;
LABEL_6:
    v5 = v1;
    goto LABEL_7;
  }
  v5 = v1;

LABEL_7:
  return v5;
}

void sub_1CD0686EC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD068824(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0697B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD06A554(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD06D348(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&_lock);
  _Unwind_Resume(a1);
}

void sub_1CD06DF6C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD06F164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD06FCB0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

uint64_t shouldSkipLocalAccessoryNotificationRegistration(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  uint64_t v11;

  v5 = a1;
  v6 = a2;
  if ((objc_msgSend(a3, "hmf_isEmpty") & 1) != 0)
  {
    v7 = 1;
  }
  else
  {
    if (!objc_msgSend(v5, "isResidentFirstAccessoryCommunicationEnabled"))
      goto LABEL_9;
    +[HMDDeviceCapabilities deviceCapabilities](HMDDeviceCapabilities, "deviceCapabilities");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "isResidentCapable");

    if ((v9 & 1) != 0
      || (objc_msgSend(v5, "enabledResidents"),
          v10 = (void *)objc_claimAutoreleasedReturnValue(),
          v11 = objc_msgSend(v10, "count"),
          v10,
          !v11)
      || objc_msgSend(v6, "hasBTLELink") && (objc_msgSend(v6, "reachableTransports") & 2) != 0)
    {
LABEL_9:
      v7 = 0;
    }
    else
    {
      v7 = objc_msgSend(v6, "isSecureSessionEstablished") ^ 1;
    }
  }

  return v7;
}

void sub_1CD0719E4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL isAppleTV()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productClass") == 4;

  return v1;
}

BOOL isWatch()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productClass") == 5;

  return v1;
}

void sub_1CD071BE8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD073718(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

id propertyIMP(void *a1, const char *a2)
{
  id *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  id *v15;
  NSObject *v16;
  void *v17;
  uint64_t v18;
  int v20;
  void *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  id *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = (void *)MEMORY[0x1D17BA0A0]();
  NSStringFromSelector(a2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v3, "propertyIsAvailable:", v5) & 1) != 0)
  {
    objc_msgSend((id)objc_opt_class(), "properties");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKey:", v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (v7)
    {
      objc_msgSend(v3[1], "objectForKey:", v5);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        if (v8)
        {

          objc_autoreleasePoolPop(v4);
          goto LABEL_14;
        }
        objc_msgSend(v7, "defaultValue");
        v18 = objc_claimAutoreleasedReturnValue();
LABEL_13:

        objc_autoreleasePoolPop(v4);
        v8 = (void *)v18;
        goto LABEL_14;
      }
    }
    else
    {
      v14 = (void *)MEMORY[0x1D17BA0A0]();
      v15 = v3;
      HMFGetOSLogHandle();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = 138543874;
        v21 = v17;
        v22 = 2112;
        v23 = v5;
        v24 = 2112;
        v25 = v15;
        _os_log_impl(&dword_1CD062000, v16, OS_LOG_TYPE_ERROR, "%{public}@Attempting to read property %@ from %@, does not appear defined.", (uint8_t *)&v20, 0x20u);

      }
      objc_autoreleasePoolPop(v14);
      v8 = 0;
    }
    v18 = 0;
    goto LABEL_13;
  }
  v9 = (void *)MEMORY[0x1D17BA0A0]();
  v10 = v3;
  HMFGetOSLogHandle();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    HMFGetLogIdentifier();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDBackingStoreSingleton dataVersion](HMDBackingStoreSingleton, "dataVersion");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = 138544130;
    v21 = v12;
    v22 = 2112;
    v23 = v5;
    v24 = 2112;
    v25 = v10;
    v26 = 2112;
    v27 = v13;
    _os_log_impl(&dword_1CD062000, v11, OS_LOG_TYPE_ERROR, "%{public}@Attempting to read property %@ from %@, unavailable in homed data version %@ (returning nil).", (uint8_t *)&v20, 0x2Au);

  }
  objc_autoreleasePoolPop(v9);

  objc_autoreleasePoolPop(v4);
  v8 = 0;
LABEL_14:

  return v8;
}

void logAndPostNotification(void *a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v5 = (void *)MEMORY[0x1E0CB37D0];
  v6 = a3;
  v7 = a2;
  v8 = a1;
  objc_msgSend(v5, "defaultCenter");
  v9 = (id)objc_claimAutoreleasedReturnValue();
  logAndPostNotificationWithNotificationCenter(v9, v8, v7, v6);

}

void logAndPostNotificationWithNotificationCenter(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  objc_msgSend(v9, "description");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)MEMORY[0x1D17BA0A0]();
  HMFGetOSLogHandle();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = 138543874;
    v19 = v14;
    v20 = 2112;
    v21 = v8;
    v22 = 2112;
    v23 = v11;
    _os_log_impl(&dword_1CD062000, v13, OS_LOG_TYPE_INFO, "%{public}@Sending notification %@ with object %@", (uint8_t *)&v18, 0x20u);

  }
  objc_autoreleasePoolPop(v12);
  v15 = (void *)MEMORY[0x1D17BA0A0]();
  HMFGetOSLogHandle();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
  {
    HMFGetLogIdentifier();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = 138544130;
    v19 = v17;
    v20 = 2112;
    v21 = v8;
    v22 = 2112;
    v23 = v11;
    v24 = 2112;
    v25 = v10;
    _os_log_impl(&dword_1CD062000, v16, OS_LOG_TYPE_DEBUG, "%{public}@Sending notification %@ with object %@ and userInfo %@", (uint8_t *)&v18, 0x2Au);

  }
  objc_autoreleasePoolPop(v15);
  objc_msgSend(v7, "postNotificationName:object:userInfo:", v8, v9, v10);

}

void sub_1CD076548(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

id EpochIntervalFromDate(void *a1)
{
  void *v1;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend(a1, "timeIntervalSince1970");
    objc_msgSend(v1, "numberWithDouble:");
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

void sub_1CD078AE0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD07A724(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 240));
  _Unwind_Resume(a1);
}

void sub_1CD07B404(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1CD07B578(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD07DC68(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 224));
  _Unwind_Resume(a1);
}

void sub_1CD07EECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id reportContextFromMessage(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  BOOL v6;
  void *v7;
  void *v8;
  void *v9;
  float v10;
  void *v11;

  v1 = a1;
  objc_msgSend(v1, "messagePayload");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "hmf_stringForKey:", *MEMORY[0x1E0CB91D0]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "messagePayload");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "hmf_dataForKey:", *MEMORY[0x1E0CB91E0]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
    v6 = v5 == 0;
  else
    v6 = 1;
  if (v6)
  {
    v11 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CBA6F0], "reportContextWithDomain:requestInfo:", v3, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "messagePayload");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "hmf_numberForKey:", *MEMORY[0x1E0CB91D8]);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "floatValue");
    objc_msgSend(v7, "setReportTimeout:", v10);

    v11 = (void *)objc_msgSend(v7, "copy");
  }

  return v11;
}

void sub_1CD0806FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD080CEC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t validateEntitlementForConnection(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v4
    && ((objc_msgSend(v4, "valueForEntitlement:", v3),
         v6 = (void *)objc_claimAutoreleasedReturnValue(),
         objc_opt_class(),
         (objc_opt_isKindOfClass() & 1) == 0)
      ? (v7 = 0)
      : (v7 = v6),
        v8 = v7,
        v6,
        v8))
  {
    v9 = objc_msgSend(v8, "BOOLValue");

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

id accessoryToEncodeForXPCTransportForAccessory(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = a1;
  objc_msgSend(v1, "hostAccessory");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v2;
  else
    v3 = 0;
  v4 = v3;

  if (v4)
    v5 = v4;
  else
    v5 = v1;
  v6 = v5;

  return v6;
}

void sub_1CD084090(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD084814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1CD085E24(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD086ABC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t isPersistedConnectionRequiredForAccessory(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void (**v9)(_QWORD);
  void *v10;
  void *v11;
  NSObject *v12;
  id v13;
  void *v14;
  void *v15;
  NSObject *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  _QWORD v22[5];
  _QWORD aBlock[4];
  id v24;
  __int128 *p_buf;
  uint8_t v26[4];
  id v27;
  __int16 v28;
  void *v29;
  _BYTE v30[24];
  id v31;
  __int16 v32;
  void *v33;
  __int128 buf;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "home");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v2, "isCurrentDevicePrimaryResident"))
  {
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v35 = 0x3032000000;
    v36 = __Block_byref_object_copy__50268;
    v37 = __Block_byref_object_dispose__50269;
    v7 = MEMORY[0x1E0C809B0];
    v38 = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __isPersistedConnectionRequiredForAccessory_block_invoke;
    aBlock[3] = &unk_1E89ABE00;
    p_buf = &buf;
    v8 = v1;
    v24 = v8;
    v9 = (void (**)(_QWORD))_Block_copy(aBlock);
    if (objc_msgSend(v2, "isCurrentDeviceAvailableResident") && !isiPadDevice() && !isAppleTV()
      || (objc_msgSend(v2, "areAllResidentsUnreachable") & 1) == 0
      && (objc_msgSend(v2, "isResidentFirstAccessoryCommunicationEnabled") & 1) != 0)
    {
      if (objc_msgSend(v2, "isCurrentDeviceAvailableResident"))
      {
        *(_QWORD *)v30 = 0;
        *(_QWORD *)&v30[8] = v30;
        *(_QWORD *)&v30[16] = 0x2020000000;
        LOBYTE(v31) = 0;
        v9[2](v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v22[0] = v7;
        v22[1] = 3221225472;
        v22[2] = __isPersistedConnectionRequiredForAccessory_block_invoke_680;
        v22[3] = &unk_1E89ABE28;
        v22[4] = v30;
        objc_msgSend(v10, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v22);

        if (*(_BYTE *)(*(_QWORD *)&v30[8] + 24))
        {
          v11 = (void *)MEMORY[0x1D17BA0A0]();
          HMFGetOSLogHandle();
          v12 = (id)objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
          {
            HMFGetLogIdentifier();
            v13 = (id)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v8, "shortDescription");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)v26 = 138543618;
            v27 = v13;
            v28 = 2112;
            v29 = v14;
            _os_log_impl(&dword_1CD062000, v12, OS_LOG_TYPE_INFO, "%{public}@Require persisted connection for Siri Remote accessory %@ for all residents", v26, 0x16u);

          }
          objc_autoreleasePoolPop(v11);
          _Block_object_dispose(v30, 8);
LABEL_18:
          v6 = 1;
LABEL_21:

          _Block_object_dispose(&buf, 8);
          goto LABEL_22;
        }
        _Block_object_dispose(v30, 8);
      }
      v6 = 0;
      goto LABEL_21;
    }
    v15 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v16 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v17 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "shortDescription");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "isResidentFirstAccessoryCommunicationEnabled");
      HMFBooleanToString();
      v19 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "areAllResidentsUnreachable");
      HMFBooleanToString();
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)v30 = 138544130;
      *(_QWORD *)&v30[4] = v17;
      *(_WORD *)&v30[12] = 2112;
      *(_QWORD *)&v30[14] = v18;
      *(_WORD *)&v30[22] = 2112;
      v31 = v19;
      v32 = 2112;
      v33 = v20;
      _os_log_impl(&dword_1CD062000, v16, OS_LOG_TYPE_INFO, "%{public}@Require persisted connection for accessory %@: isResidentFirstAccessoryCommunicationEnabled = %@, areAllResidentsUnreachable = %@", v30, 0x2Au);

    }
    objc_autoreleasePoolPop(v15);
    goto LABEL_18;
  }
  v3 = (void *)MEMORY[0x1D17BA0A0]();
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(buf) = 138543362;
    *(_QWORD *)((char *)&buf + 4) = v5;
    _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_DEBUG, "%{public}@Current device is primary resident, always require persisted connection with accessories", (uint8_t *)&buf, 0xCu);

  }
  objc_autoreleasePoolPop(v3);
  v6 = 1;
LABEL_22:

  return v6;
}

void sub_1CD0870E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

uint64_t shouldDisconnectOnIdleForAccessory(void *a1)
{
  id v1;
  void *v2;
  char v3;
  uint64_t ShouldDisconnectOnIdleForHome;

  v1 = a1;
  objc_msgSend(v1, "home");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = isPersistedConnectionRequiredForAccessory(v1);

  if ((v3 & 1) != 0)
    ShouldDisconnectOnIdleForHome = 0;
  else
    ShouldDisconnectOnIdleForHome = defaultAccessoryShouldDisconnectOnIdleForHome(v2);

  return ShouldDisconnectOnIdleForHome;
}

uint64_t HMDShouldRedactBundleIdForBuildType(void *a1, char a2)
{
  id v3;
  uint64_t v4;

  v3 = a1;
  if (HMDShouldRedactBundleIdForBuildType_onceToken != -1)
    dispatch_once(&HMDShouldRedactBundleIdForBuildType_onceToken, &__block_literal_global_449);
  v4 = 0;
  if (v3 && (a2 & 1) == 0)
  {
    if ((objc_msgSend(v3, "hasPrefix:", CFSTR("com.apple.")) & 1) != 0
      || (objc_msgSend(v3, "hasPrefix:", CFSTR("apple.")) & 1) != 0)
    {
      v4 = 0;
    }
    else
    {
      v4 = objc_msgSend((id)HMDShouldRedactBundleIdForBuildType_knownBundleIdentifiers, "containsObject:", v3) ^ 1;
    }
  }

  return v4;
}

void sub_1CD088084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD088F8C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t HMDUserPrivilegeCompare(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  BOOL v6;

  v2 = 3;
  if (a1 == 1)
    v3 = 3;
  else
    v3 = a1;
  if (a2 != 1)
    v2 = a2;
  if (v3 == v2)
    return 0;
  if (v3 == 3 || v2 == 3)
  {
    v6 = v3 == 3;
    goto LABEL_20;
  }
  if (v3 == 4 || v2 == 4)
  {
    v6 = v3 == 4;
LABEL_20:
    if (v6)
      return 1;
    else
      return -1;
  }
  if (v2)
    v5 = 0;
  else
    v5 = -1;
  if (v3)
    return v5;
  else
    return 1;
}

void sub_1CD089E78(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD08A910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD08AEE8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

_QWORD *__HMDProcessMonitorProcessInfoForPID(_QWORD *a1, int a2)
{
  void *v2;
  _QWORD v4[4];
  int v5;

  if (a1)
  {
    v2 = (void *)a1[3];
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = ____HMDProcessMonitorProcessInfoForPID_block_invoke;
    v4[3] = &__block_descriptor_36_e24_B16__0__HMDProcessInfo_8l;
    v5 = a2;
    objc_msgSend(v2, "na_firstObjectPassingTest:", v4);
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

void sub_1CD08B588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL shouldSkipRemoteAccessoryNotificationRegistration(void *a1, void *a2)
{
  id v3;
  id v4;
  _BOOL8 v5;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "isCurrentDeviceAvailableResident")
    && objc_msgSend(v4, "hasIPLink")
    && (objc_msgSend(v4, "hasBTLELink") & 1) == 0
    && !isiPadDevice()
    && (!isAppleTV() || objc_msgSend(v3, "isCurrentDeviceConfirmedPrimaryResident"));

  return v5;
}

void sub_1CD08DEC4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD08E260(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id encodeRootObjectForIncomingXPCMessage(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;

  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D28628]), "initWithName:", CFSTR("com.apple.homed.hmdutil.encode-incoming-xpc."));
  v7 = -[HMDXPCKeyedArchiver initForWritingWithMessage:]([HMDXPCKeyedArchiver alloc], "initForWritingWithMessage:", v4);
  objc_msgSend(v7, "encodeObject:forKey:", v3, *MEMORY[0x1E0CB2CD0]);
  objc_msgSend(v7, "finishEncoding");
  objc_msgSend(v7, "encodedData");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v5);
  v9 = (void *)objc_msgSend(v8, "copy");

  return v9;
}

id spiClientIdentifierForUUID(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  +[HMDProcessInfo privateClientIdentifierSalt](HMDProcessInfo, "privateClientIdentifierSalt");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3A28], "hm_deriveUUIDFromBaseUUID:identifierSalt:", v1, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1CD090F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD09241C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD09289C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

double getDiscoveryBackoffPeriod()
{
  void *v0;
  void *v1;
  void *v2;
  double v3;
  double v4;

  objc_msgSend(MEMORY[0x1E0D28678], "sharedPreferences");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "preferenceForKey:", CFSTR("DiscoveryBackoffInSeconds"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "numberValue");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "doubleValue");
  v4 = v3;

  return v4;
}

id anonymizeUnknownVendorString(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  if (v1)
  {
    if (anonymizeUnknownVendorString_onceToken != -1)
      dispatch_once(&anonymizeUnknownVendorString_onceToken, &__block_literal_global_63126);
    if ((objc_msgSend((id)anonymizeUnknownVendorString_allowedNames, "containsObject:", v1) & 1) != 0
      || (unint64_t)objc_msgSend(v1, "length") <= 2)
    {
      v3 = v1;
    }
    else
    {
      objc_msgSend(v1, "substringToIndex:", 2);
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(CFSTR("unknown: "), "stringByAppendingString:", v2);
      v3 = (id)objc_claimAutoreleasedReturnValue();

    }
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void sub_1CD093148(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD094004(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id hds_log()
{
  if (hds_log__hmf_once_t0 != -1)
    dispatch_once(&hds_log__hmf_once_t0, &__block_literal_global_35237);
  return (id)hds_log__hmf_once_v1;
}

void sub_1CD094C88(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD094CF0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD094D58(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD095ACC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD096104(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD0962AC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD096AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id a23,id a24)
{
  id *v24;
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(location);
  objc_destroyWeak(&a23);
  objc_destroyWeak(&a24);
  _Unwind_Resume(a1);
}

void sub_1CD097694(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0978E4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD097AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __HMDProcessInfoBoolForEntitlement(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (!a1 || !a2)
    return 0;
  objc_msgSend(a1, "valueForEntitlement:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v2;
  else
    v3 = 0;
  v4 = v3;

  v5 = objc_msgSend(v4, "BOOLValue");
  return v5;
}

void sub_1CD097FB4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD098188(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1CD098268(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDApplicationRegistryHandleAddedApplicationInfo(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a2;
  if (a1 && v3)
  {
    v8 = v3;
    v4 = objc_msgSend(v3, "isEntitledForSPIAccess");
    objc_msgSend(v8, "vendorIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      +[HMDApplicationVendorIDStore sharedStore](HMDApplicationVendorIDStore, "sharedStore");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "bundleIdentifier");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "addVendorID:applicationBundleId:spiClient:", v5, v7, v4);

    }
    v3 = v8;
  }

}

id *__HMDApplicationRegistryApplicationForBundleURL(id *a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD v6[4];
  id v7;

  v3 = a2;
  if (a1)
  {
    objc_msgSend(a1[2], "allObjects");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = ____HMDApplicationRegistryApplicationForBundleURL_block_invoke;
    v6[3] = &unk_1E89B3A98;
    v7 = v3;
    objc_msgSend(v4, "hmf_objectPassingTest:", v6);
    a1 = (id *)objc_claimAutoreleasedReturnValue();

  }
  return a1;
}

void sub_1CD098C4C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD09B8AC(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD09BED4(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

BOOL isiOSDevice()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productPlatform") == 2;

  return v1;
}

void sub_1CD09CA30(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD09D324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD09E8EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD09F1CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD09F254(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD09F6FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD0A34AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0A485C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Block_object_dispose(&STACK[0x2D8], 8);
  _Block_object_dispose(&STACK[0x308], 8);
  _Block_object_dispose(&STACK[0x338], 8);
  _Block_object_dispose(&STACK[0x358], 8);
  objc_destroyWeak((id *)&STACK[0x378]);
  _Unwind_Resume(a1);
}

void sub_1CD0A4FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD0A5DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD0A6208(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0A686C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0A6C18(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0A72D0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0A8A3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1CD0A8CD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0A91FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0A9E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,id a21)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a21);
  _Unwind_Resume(a1);
}

BOOL isDeviceLocked()
{
  int v0;
  void *v1;
  NSObject *v2;
  void *v3;
  void *v6;
  NSObject *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (+[HMDDeviceCapabilities supportsDeviceLock](HMDDeviceCapabilities, "supportsDeviceLock"))
  {
    v0 = MKBGetDeviceLockState();
    v1 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = 138543618;
      v10 = v3;
      v11 = 2048;
      v12 = v0;
      _os_log_impl(&dword_1CD062000, v2, OS_LOG_TYPE_INFO, "%{public}@Device lock state (locked): %ld", (uint8_t *)&v9, 0x16u);

    }
    objc_autoreleasePoolPop(v1);
    return v0 != 3 && v0 != 0;
  }
  else
  {
    v6 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = 138543362;
      v10 = v8;
      _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_INFO, "%{public}@Device does not support device lock (locked).", (uint8_t *)&v9, 0xCu);

    }
    objc_autoreleasePoolPop(v6);
    return 1;
  }
}

uint64_t parseMessageSource(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v2 = v1;
  else
    v2 = 0;
  v3 = v2;
  v4 = v3;
  if (!v3 || objc_msgSend(v3, "type"))
  {
    objc_msgSend(v1, "numberForKey:", CFSTR("sourceType"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5;
    if (v5)
    {
      v7 = (int)objc_msgSend(v5, "intValue");
    }
    else
    {
      objc_msgSend(v1, "applicationBundleIdentifier");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v8, "isEqualToString:", CFSTR("com.apple.Siri")))
      {

      }
      else
      {
        objc_msgSend(v1, "applicationBundleIdentifier");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v9, "isEqualToString:", CFSTR("assistant_service"));

        if ((v10 & 1) == 0)
        {
          if (objc_msgSend(v1, "isEntitledForSPIAccess"))
            v7 = 5;
          else
            v7 = 6;
          goto LABEL_16;
        }
      }
      v7 = 1;
    }
LABEL_16:

    goto LABEL_17;
  }
  v7 = 8;
LABEL_17:

  return v7;
}

void sub_1CD0AC284(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD0ACDF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD0AD15C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0AD4CC(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD0AFE3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL isHomePod()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productClass") == 6;

  return v1;
}

void sub_1CD0B0D4C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD0B1750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD0B2358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

__CFString *HMDStreamingTierTypeAsString(unint64_t a1)
{
  if (a1 < 5)
    return off_1E89B2078[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDStreamingTierType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

BOOL isMostRecentSnapshotValid(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _BOOL8 v6;

  v1 = a1;
  objc_msgSend(v1, "slotIdentifier");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(v1, "filePath");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      objc_msgSend(v1, "snapshotTimestamp");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      if (v4)
      {
        objc_msgSend(v1, "aspectRatio");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        v6 = v5 != 0;

      }
      else
      {
        v6 = 0;
      }

    }
    else
    {
      v6 = 0;
    }

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

BOOL isiPadDevice()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productClass") == 3;

  return v1;
}

void sub_1CD0B4330(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

id HMDCreateHomeKitDaemonCacheDirectory()
{
  void *v0;
  unint64_t v1;
  void *v2;
  char v3;
  id v4;
  id v5;
  void *v6;
  NSObject *v7;
  void *v8;
  uid_t v9;
  uint64_t v10;
  __CFString *v11;
  uint64_t v12;
  __CFString *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  unint64_t v22;
  void *v23;
  int v24;
  void *v25;
  NSObject *v26;
  void *v27;
  id v29;
  void *v30;
  uint64_t v31;
  id obj;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  id v43;
  uint8_t buf[4];
  void *v45;
  __int16 v46;
  _BYTE v47[24];
  __int16 v48;
  void *v49;
  _BYTE v50[128];
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  HMCacheSubdirectoryWithRelativePath();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = 0x1E0CB3000uLL;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = 0;
  v3 = objc_msgSend(v2, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v0, 1, 0, &v43);
  v4 = v43;

  if ((v3 & 1) != 0)
  {
    v5 = v0;
  }
  else
  {
    v6 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = getuid();
      *(_DWORD *)buf = 138544130;
      v45 = v8;
      v46 = 1024;
      *(_DWORD *)v47 = v9;
      *(_WORD *)&v47[4] = 2114;
      *(_QWORD *)&v47[6] = v0;
      *(_WORD *)&v47[14] = 2114;
      *(_QWORD *)&v47[16] = v4;
      _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_ERROR, "%{public}@Failed to create HomeKit daemon cache directory for user %d at %{public}@: %{public}@", buf, 0x26u);

    }
    v29 = v4;

    objc_autoreleasePoolPop(v6);
    v41 = 0u;
    v42 = 0u;
    v39 = 0u;
    v40 = 0u;
    v30 = v0;
    objc_msgSend(v0, "pathComponents");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v36 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
    if (v36)
    {
      v10 = *(_QWORD *)v40;
      v35 = *MEMORY[0x1E0CB2AA8];
      v34 = *MEMORY[0x1E0CB2A90];
      v33 = *MEMORY[0x1E0CB2A50];
      v11 = &stru_1E89C3E38;
      v31 = *(_QWORD *)v40;
      do
      {
        v12 = 0;
        v13 = v11;
        do
        {
          if (*(_QWORD *)v40 != v10)
            objc_enumerationMutation(obj);
          -[__CFString stringByAppendingPathComponent:](v13, "stringByAppendingPathComponent:", *(_QWORD *)(*((_QWORD *)&v39 + 1) + 8 * v12), v29);
          v11 = (__CFString *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(*(id *)(v1 + 1568), "defaultManager");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v38 = 0;
          objc_msgSend(v14, "attributesOfItemAtPath:error:", v11, &v38);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = v38;

          if (v15)
          {
            v37 = v16;
            objc_msgSend(v15, "objectForKeyedSubscript:", v35);
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "objectForKeyedSubscript:", v34);
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "objectForKeyedSubscript:", v33);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            v20 = (void *)MEMORY[0x1D17BA0A0]();
            HMFGetOSLogHandle();
            v21 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              HMFGetLogIdentifier();
              v22 = v1;
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              v24 = objc_msgSend(v17, "shortValue");
              *(_DWORD *)buf = 138544386;
              v45 = v23;
              v46 = 2112;
              *(_QWORD *)v47 = v11;
              *(_WORD *)&v47[8] = 1024;
              *(_DWORD *)&v47[10] = v24;
              *(_WORD *)&v47[14] = 2112;
              *(_QWORD *)&v47[16] = v18;
              v48 = 2112;
              v49 = v19;
              _os_log_impl(&dword_1CD062000, v21, OS_LOG_TYPE_ERROR, "%{public}@Path: %@, permissions: %o, owner uid: %@, owner gid: %@", buf, 0x30u);

              v1 = v22;
              v10 = v31;
            }

            objc_autoreleasePoolPop(v20);
            v16 = v37;
          }
          else
          {
            v25 = (void *)MEMORY[0x1D17BA0A0]();
            HMFGetOSLogHandle();
            v26 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              HMFGetLogIdentifier();
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138543874;
              v45 = v27;
              v46 = 2112;
              *(_QWORD *)v47 = v11;
              *(_WORD *)&v47[8] = 2112;
              *(_QWORD *)&v47[10] = v16;
              _os_log_impl(&dword_1CD062000, v26, OS_LOG_TYPE_ERROR, "%{public}@Failed to get attributes for path %@: %@", buf, 0x20u);

            }
            objc_autoreleasePoolPop(v25);
          }

          ++v12;
          v13 = v11;
        }
        while (v36 != v12);
        v36 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
      }
      while (v36);
    }
    else
    {
      v11 = &stru_1E89C3E38;
    }

    v5 = 0;
    v4 = v29;
    v0 = v30;
  }

  return v5;
}

void sub_1CD0B897C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0B8A90(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0B8C18(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0B8E7C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD0B910C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD0B9B40(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0B9C3C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0BA2D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD0BC604(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

__CFString *locationAsString(void *a1)
{
  id v1;
  __CFString *v2;

  v1 = a1;
  if (v1)
  {
    if (isInternalBuild())
    {
      objc_msgSend(v1, "description");
      v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v2 = CFSTR("[]");
    }
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

__CFString *HMDVideoResolutionTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 0x1D)
    return off_1E89B20D8[a1 - 1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDVideoResolutionType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1CD0BF8DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  id *v32;

  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD0BFCC0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD0BFFB0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD0C0028(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD0C03D8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD0C1158(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD0C1FF0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&sharedSubmitterLock);
  _Unwind_Resume(a1);
}

void sub_1CD0C20C8()
{
  qword_1ED8C4408 = 0x4122750000000000;
}

uint64_t static HMDTTRManager.defaultFilter.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  sub_1CDAB83E8();
  swift_allocObject();
  v1 = sub_1CDAB83DC();
  v2 = sub_1CD0C26DC(v0, v1);
  swift_release();

  return v2;
}

uint64_t variable initialization expression of AccessoryInfoFetchController.messageDispatcher()
{
  return 0;
}

uint64_t variable initialization expression of AccessoryInfoFetchController.remoteEventRouterClientController()
{
  return 0;
}

uint64_t variable initialization expression of DiscoveryController.queue()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v6[2];

  v0 = sub_1CDAB861C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78]();
  v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDAB8604();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78]();
  sub_1CDAB8430();
  MEMORY[0x1E0C80A78]();
  sub_1CD0C2938();
  sub_1CDAB8424();
  v6[1] = MEMORY[0x1E0DEE9D8];
  sub_1CD0C2AAC(&qword_1ED8C4090, v4, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4080);
  sub_1CD0C29B4();
  sub_1CDAB86A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  return sub_1CDAB8634();
}

uint64_t variable initialization expression of DiscoveryController.logger()
{
  return sub_1CD0C2480();
}

uint64_t variable initialization expression of DiscoveryController.isDiscoveryAsserted()
{
  return 0;
}

uint64_t variable initialization expression of DiscoveryController.visibleSFDevices()
{
  return sub_1CD0C2430(&qword_1ED8C43C0, MEMORY[0x1E0DEE9E0]);
}

uint64_t variable initialization expression of DiscoveryController.assertions()
{
  return sub_1CD0C2430(&qword_1ED8C43C8, MEMORY[0x1E0DEE9E8]);
}

uint64_t sub_1CD0C2430(uint64_t *a1, uint64_t a2)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(a1);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = a2;
  return result;
}

uint64_t variable initialization expression of NetworkInfoController.logger()
{
  return sub_1CD0C2480();
}

uint64_t sub_1CD0C2480()
{
  sub_1CDAB84C0();
  return sub_1CDAB8400();
}

uint64_t variable initialization expression of NetworkInfoController.store()
{
  return 0;
}

uint64_t variable initialization expression of Account.ChangeObserver.delegate()
{
  return 0;
}

_QWORD *sub_1CD0C24D8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1CD0C24EC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1CD0C251C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1CD0C2530(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

void sub_1CD0C2544(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1CD0C254C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1CD0C2560@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1CD0C2574@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1CD0C25A0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1CD0C25C4(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1CD0C25D8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1CD0C25EC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1CD0C2600(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1CD0C2614(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1CD0C2628()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1CD0C2638()
{
  return sub_1CDAB8694();
}

_QWORD *sub_1CD0C2650(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_1CD0C2664@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_1CD0C2670(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1CD0C2684@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1CD0C2B70(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *sub_1CD0C26C0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1CD0C26D0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1CD0C26DC(void *a1, uint64_t a2)
{
  uint64_t v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  _BYTE v19[40];
  _QWORD v20[5];

  v20[3] = sub_1CDAB83E8();
  v20[4] = MEMORY[0x1E0D333F8];
  v20[0] = a2;
  v4 = qword_1ED8C4190;
  swift_retain();
  if (v4 != -1)
    swift_once();
  sub_1CD0C2BA8((uint64_t)v20, (uint64_t)v19);
  v5 = (objc_class *)sub_1CDAB83D0();
  v6 = objc_allocWithZone(v5);
  swift_retain();
  v7 = (void *)sub_1CDAB83C4();
  v8 = objc_allocWithZone((Class)sub_1CDAB83B8());
  v9 = v7;
  v10 = sub_1CDAB83A0();
  v11 = (void *)sub_1CDAB84A8();
  v12 = objc_msgSend(a1, sel_preferenceForKey_, v11);

  v13 = objc_msgSend(v12, sel_numberValue);
  if (v13)
  {
    objc_msgSend(v13, sel_doubleValue);
    sub_1CD0C2BA8((uint64_t)v20, (uint64_t)v19);
    v14 = objc_allocWithZone(v5);
    swift_retain();
    v15 = (void *)sub_1CDAB83C4();
    sub_1CDAB84C0();
    v16 = v15;
    sub_1CDAB83AC();

    swift_bridgeObjectRelease();
  }
  v17 = objc_msgSend(objc_allocWithZone((Class)sub_1CDAB8394()), sel_init);
  sub_1CDAB84C0();
  sub_1CDAB83AC();

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v10;
}

unint64_t sub_1CD0C2938()
{
  unint64_t result;

  result = qword_1ED8C4098[0];
  if (!qword_1ED8C4098[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1ED8C4098);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D17BA820]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1CD0C29B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8C4088;
  if (!qword_1ED8C4088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8C4080);
    result = MEMORY[0x1D17BA838](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8C4088);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D17BA82C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void type metadata accessor for HMMCoreAnalyticsEventOptions(uint64_t a1)
{
  sub_1CD0C2C34(a1, &qword_1EFA45968);
}

void type metadata accessor for SCDynamicStore(uint64_t a1)
{
  sub_1CD0C2C34(a1, &qword_1EFA45970);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1CD0C2C34(a1, &qword_1ED8C4198);
}

uint64_t sub_1CD0C2A80()
{
  return sub_1CD0C2AAC(&qword_1EFA45978, (uint64_t (*)(uint64_t))type metadata accessor for HMMCoreAnalyticsEventOptions, (uint64_t)&unk_1CDB7E5E4);
}

uint64_t sub_1CD0C2AAC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D17BA838](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CD0C2AEC()
{
  return sub_1CD0C2AAC(&qword_1EFA45980, (uint64_t (*)(uint64_t))type metadata accessor for HMMCoreAnalyticsEventOptions, (uint64_t)&unk_1CDB7E5B0);
}

uint64_t sub_1CD0C2B18()
{
  return sub_1CD0C2AAC(&qword_1EFA45988, (uint64_t (*)(uint64_t))type metadata accessor for HMMCoreAnalyticsEventOptions, (uint64_t)&unk_1CDB7E610);
}

uint64_t sub_1CD0C2B44()
{
  return sub_1CD0C2AAC(&qword_1EFA45990, (uint64_t (*)(uint64_t))type metadata accessor for HMMCoreAnalyticsEventOptions, (uint64_t)&unk_1CDB7E64C);
}

uint64_t sub_1CD0C2B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1CD0C2BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void type metadata accessor for SCNetworkInterface(uint64_t a1)
{
  sub_1CD0C2C34(a1, &qword_1EFA45998);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1CD0C2C34(a1, &qword_1EFA459A0);
}

void sub_1CD0C2C34(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1CD0C2C90(uint64_t a1, uint64_t a2)
{
  sub_1CDAB84C0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  return sub_1CDAB8400();
}

uint64_t sub_1CD0C2D00()
{
  swift_getMetatypeMetadata();
  return sub_1CDAB84CC();
}

uint64_t sub_1CD0C2D2C()
{
  return sub_1CD0C2D00();
}

uint64_t AccessoryInfoFetchController.messageTargetUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageTargetUUID;
  swift_beginAccess();
  v4 = sub_1CDAB822C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AccessoryInfoFetchController.messageTargetUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageTargetUUID;
  swift_beginAccess();
  v4 = sub_1CDAB822C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*AccessoryInfoFetchController.messageTargetUUID.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id AccessoryInfoFetchController.messageReceiveQueue.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageReceiveQueue);
  swift_beginAccess();
  return *v1;
}

void AccessoryInfoFetchController.messageReceiveQueue.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageReceiveQueue);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*AccessoryInfoFetchController.messageReceiveQueue.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id AccessoryInfoFetchController.__allocating_init(homeUUID:workQueue:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___HMDAccessoryInfoFetchController_messageDispatcher] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___HMDAccessoryInfoFetchController_remoteEventRouterClientController] = 0;
  v6 = &v5[OBJC_IVAR___HMDAccessoryInfoFetchController_messageTargetUUID];
  v7 = sub_1CDAB822C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  *(_QWORD *)&v5[OBJC_IVAR___HMDAccessoryInfoFetchController_messageReceiveQueue] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

id AccessoryInfoFetchController.init(homeUUID:workQueue:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v2[OBJC_IVAR___HMDAccessoryInfoFetchController_messageDispatcher] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___HMDAccessoryInfoFetchController_remoteEventRouterClientController] = 0;
  v5 = &v2[OBJC_IVAR___HMDAccessoryInfoFetchController_messageTargetUUID];
  v6 = sub_1CDAB822C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  *(_QWORD *)&v2[OBJC_IVAR___HMDAccessoryInfoFetchController_messageReceiveQueue] = a2;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for AccessoryInfoFetchController();
  v8 = objc_msgSendSuper2(&v10, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t type metadata accessor for AccessoryInfoFetchController()
{
  uint64_t result;

  result = qword_1ED8C4178;
  if (!qword_1ED8C4178)
    return swift_getSingletonMetadata();
  return result;
}

Swift::Void __swiftcall AccessoryInfoFetchController.configure(with:remoteEventRouterClientController:)(HMFMessageDispatcher *with, HMDHomeRemoteEventRouterClientController *remoteEventRouterClientController)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  HMFMessageDispatcher *v6;
  void *v7;
  HMDHomeRemoteEventRouterClientController *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  v3 = v2;
  v5 = *(void **)(v3 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageDispatcher);
  *(_QWORD *)(v3 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageDispatcher) = with;
  v6 = with;

  v7 = *(void **)(v3 + OBJC_IVAR___HMDAccessoryInfoFetchController_remoteEventRouterClientController);
  *(_QWORD *)(v3 + OBJC_IVAR___HMDAccessoryInfoFetchController_remoteEventRouterClientController) = remoteEventRouterClientController;
  v8 = remoteEventRouterClientController;

  v9 = objc_msgSend((id)objc_opt_self(), sel_policyWithEntitlements_, 5);
  v10 = *MEMORY[0x1E0CB7C98];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C41A0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1CDB7E7E0;
  *(_QWORD *)(v11 + 32) = v9;
  sub_1CDAB8538();
  sub_1CD0C3540();
  v12 = v9;
  v13 = (id)sub_1CDAB8508();
  swift_bridgeObjectRelease();
  -[HMFMessageDispatcher registerForMessage:receiver:policies:selector:](v6, sel_registerForMessage_receiver_policies_selector_, v10, v3, v13, sel_handleFetchWithMessage_);

}

unint64_t sub_1CD0C3540()
{
  unint64_t result;

  result = qword_1ED8C4398;
  if (!qword_1ED8C4398)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8C4398);
  }
  return result;
}

id AccessoryInfoFetchController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AccessoryInfoFetchController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AccessoryInfoFetchController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessoryInfoFetchController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CD0C3710()
{
  return type metadata accessor for AccessoryInfoFetchController();
}

uint64_t sub_1CD0C3718()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CDAB822C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1CD0C37A0(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setDispatchQueue_, a1);

}

id sub_1CD0C37D8(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setDiscoveryFlags_, a1);
}

void sub_1CD0C37EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CD0C3828(a1, a2, a3, a4, (uint64_t)sub_1CD0C3808, (uint64_t)&block_descriptor_62, (SEL *)&selRef_setDeviceFoundHandler_);
}

void sub_1CD0C380C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CD0C3828(a1, a2, a3, a4, (uint64_t)sub_1CD0C3808, (uint64_t)&block_descriptor_59, (SEL *)&selRef_setDeviceLostHandler_);
}

void sub_1CD0C3828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  void *v7;
  void *v9;
  _QWORD v10[6];

  if (a1)
  {
    v10[4] = a1;
    v10[5] = a2;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 1107296256;
    v10[2] = a5;
    v10[3] = a6;
    v9 = _Block_copy(v10);
    swift_release();
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v7, *a7, v9);
  _Block_release(v9);
}

void sub_1CD0C38AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CD0C3828(a1, a2, a3, a4, (uint64_t)sub_1CD0C38C8, (uint64_t)&block_descriptor_56, (SEL *)&selRef_setDeviceChangedHandler_);
}

void sub_1CD0C38CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CD0C3B08(a1, a2, a3, a4, (uint64_t)&block_descriptor_53);
}

void sub_1CD0C38D8(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

id sub_1CD0C392C()
{
  void *v0;

  return objc_msgSend(v0, sel_invalidate);
}

id sub_1CD0C393C()
{
  void *v0;

  return objc_msgSend(v0, sel_controlFlags);
}

id sub_1CD0C394C(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setControlFlags_, a1);
}

uint64_t sub_1CD0C3960()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_activeDevices);
  sub_1CD0C9A74(0, &qword_1ED8C43A0);
  v2 = sub_1CDAB8520();

  return v2;
}

void sub_1CD0C39C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CD0C3828(a1, a2, a3, a4, (uint64_t)sub_1CD0C37D4, (uint64_t)&block_descriptor_50, (SEL *)&selRef_setInterruptionHandler_);
}

void sub_1CD0C39E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CD0C3828(a1, a2, a3, a4, (uint64_t)sub_1CD0C37D4, (uint64_t)&block_descriptor_47, (SEL *)&selRef_setInvalidationHandler_);
}

void sub_1CD0C39FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CD0C3828(a1, a2, a3, a4, (uint64_t)sub_1CD0C3808, (uint64_t)&block_descriptor_44, (SEL *)&selRef_setDeviceFoundHandler_);
}

void sub_1CD0C3A18(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1CD0C3A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CD0C3828(a1, a2, a3, a4, (uint64_t)sub_1CD0C3808, (uint64_t)&block_descriptor_41, (SEL *)&selRef_setDeviceLostHandler_);
}

void sub_1CD0C3A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CD0C3828(a1, a2, a3, a4, (uint64_t)sub_1CD0C38C8, (uint64_t)&block_descriptor_38, (SEL *)&selRef_setDeviceChangedHandler_);
}

void sub_1CD0C3AA0(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1CD0C3AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CD0C3B08(a1, a2, a3, a4, (uint64_t)&block_descriptor_35);
}

void sub_1CD0C3B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  _QWORD v7[6];

  if (a1)
  {
    v7[4] = a1;
    v7[5] = a2;
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 1107296256;
    v7[2] = sub_1CD0C38D8;
    v7[3] = a5;
    v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v5, sel_activateWithCompletion_, v6);
  _Block_release(v6);
}

uint64_t sub_1CD0C3BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC19HomeKitDaemonLegacy15AssertionHandle9Assertion_uuid;
  v2 = sub_1CDAB822C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CD0C3C08()
{
  sub_1CDAB87FC();
  sub_1CDAB822C();
  sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1CDAB8490();
  return sub_1CDAB8814();
}

uint64_t sub_1CD0C3C84()
{
  sub_1CDAB822C();
  sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1CDAB8490();
}

uint64_t sub_1CD0C3CF0()
{
  sub_1CDAB87FC();
  sub_1CDAB822C();
  sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1CDAB8490();
  return sub_1CDAB8814();
}

uint64_t sub_1CD0C3D68()
{
  return sub_1CDAB8208();
}

uint64_t sub_1CD0C3D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  _BOOL4 v4;
  BOOL v6;

  v1 = MEMORY[0x1D17BA964](v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR___HMDDiscoveryController_assertions);
    swift_retain();
    os_unfair_lock_lock(v3 + 6);
    sub_1CD0C3EFC((uint64_t)&v3[4], &v6);
    os_unfair_lock_unlock(v3 + 6);
    v4 = v6;
    swift_release();
    sub_1CD0C6F60(v2);
    if (v4)
      sub_1CD0C6B48();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(v0 + 32) = 0;
  swift_unknownObjectWeakAssign();
  swift_release();
  sub_1CD0C9A48(v0 + 24);
  return v0;
}

uint64_t sub_1CD0C3E64()
{
  sub_1CD0C3D84();
  return swift_deallocClassInstance();
}

uint64_t sub_1CD0C3E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;

  swift_retain();
  sub_1CD0DE070(&v7, a2);
  swift_release();
  if ((*(_QWORD *)a1 & 0xC000000000000001) != 0)
    result = sub_1CDAB86D0();
  else
    result = *(_QWORD *)(*(_QWORD *)a1 + 16);
  *a3 = result;
  return result;
}

uint64_t sub_1CD0C3EFC@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result;

  sub_1CD0C7C48();
  swift_release();
  if ((*(_QWORD *)a1 & 0xC000000000000001) != 0)
    result = sub_1CDAB86D0();
  else
    result = *(_QWORD *)(*(_QWORD *)a1 + 16);
  *a2 = result == 0;
  return result;
}

id DiscoveryController.__allocating_init(discoveryNeedsAssertion:)(int a1)
{
  objc_class *v1;
  id v3;
  id v4;
  id v5;

  v3 = objc_allocWithZone(v1);
  v4 = objc_allocWithZone((Class)type metadata accessor for DiscoveryController(0));
  v5 = sub_1CD0C92F4(a1, (uint64_t (*)(void))sub_1CD0C408C, 0, (uint64_t (*)(void))sub_1CD0C40BC, 0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

id DiscoveryController.init(discoveryNeedsAssertion:)(int a1)
{
  id v2;
  id v3;

  v2 = objc_allocWithZone((Class)type metadata accessor for DiscoveryController(0));
  v3 = sub_1CD0C92F4(a1, (uint64_t (*)(void))sub_1CD0C408C, 0, (uint64_t (*)(void))sub_1CD0C40BC, 0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

id sub_1CD0C408C()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83900]), sel_init);
}

id sub_1CD0C40BC()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D97450]), sel_init);
}

uint64_t type metadata accessor for DiscoveryController(uint64_t a1)
{
  return sub_1CD0C97A0(a1, (uint64_t *)&unk_1ED8C4038);
}

uint64_t sub_1CD0C4190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  void (*v5)(void (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void (*)(void *), uint64_t, uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient + 8);
  ObjectType = swift_getObjectType();
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v2 + 112);
  swift_unknownObjectRetain();
  swift_retain();
  v5(sub_1CD0C9A08, v4, ObjectType, v2);
  swift_unknownObjectRelease();
  swift_release();
  v6 = *(_QWORD *)(v1 + 8);
  v7 = swift_getObjectType();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = *(void (**)(void (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t))(v6 + 160);
  swift_unknownObjectRetain();
  swift_retain();
  v9(sub_1CD0C9A24, v8, v7, v6);
  swift_unknownObjectRelease();
  swift_release();
  v10 = *(_QWORD *)(v1 + 8);
  v11 = swift_getObjectType();
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v10 + 136);
  swift_unknownObjectRetain();
  swift_retain();
  v13(sub_1CD0C9A2C, v12, v11, v10);
  swift_unknownObjectRelease();
  return swift_release();
}

void sub_1CD0C4318(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1D17BA964](v4);
  if (v5)
  {
    v6 = (void *)v5;
    sub_1CD0C5788(2u, a1);

  }
}

void sub_1CD0C4374(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1D17BA964](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1CD0C5788(a3, a1);

  }
}

void sub_1CD0C43E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1D17BA964](v3);
  if (v4)
  {
    v5 = (void *)v4;
    swift_beginAccess();
    v6 = MEMORY[0x1D17BA964](a2 + 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)(a2 + 24);
      v9 = sub_1CDAB83F4();
      v10 = sub_1CDAB85D4();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_1CD062000, v9, v10, "Queue setup after invalidation.", v11, 2u);
        MEMORY[0x1D17BA8C8](v11, -1, -1);
      }

      sub_1CD0C6320(v7, v8, 120.0);
      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void sub_1CD0C450C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1D17BA964](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_1CDAB83F4();
    v5 = sub_1CDAB85D4();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1CD062000, v4, v5, "RPClient was interrupted", v6, 2u);
      MEMORY[0x1D17BA8C8](v6, -1, -1);
    }

  }
}

void sub_1CD0C45D8(void *a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  char *format;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1D17BA964](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = a1;
    v9 = sub_1CDAB83F4();
    v10 = sub_1CDAB85E0();
    if (os_log_type_enabled(v9, v10))
    {
      format = a3;
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v13 = v8;
      sub_1CDAB8664();
      *v12 = v8;

      _os_log_impl(&dword_1CD062000, v9, v10, format, v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45A88);
      swift_arrayDestroy();
      MEMORY[0x1D17BA8C8](v12, -1, -1);
      MEMORY[0x1D17BA8C8](v11, -1, -1);
    }
    else
    {

    }
  }
}

void sub_1CD0C4760(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1D17BA964](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = a1;
    v8 = sub_1CDAB83F4();
    v9 = sub_1CDAB85D4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = v7;
      sub_1CDAB8664();
      *v11 = v7;

      _os_log_impl(&dword_1CD062000, v8, v9, "device changed from RPClient: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45A88);
      swift_arrayDestroy();
      MEMORY[0x1D17BA8C8](v11, -1, -1);
      MEMORY[0x1D17BA8C8](v10, -1, -1);
    }
    else
    {

    }
  }
}

Swift::Void __swiftcall DiscoveryController.start()()
{
  sub_1CD0C67BC((uint64_t)&unk_1E899BF40, (uint64_t)sub_1CD0C9744, (uint64_t)&block_descriptor);
}

uint64_t sub_1CD0C4900(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1CDAB8454();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(a1 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) & 1) == 0)
  {
    v7 = *(void **)(a1 + OBJC_IVAR___HMDDiscoveryController_queue);
    *v6 = v7;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2);
    v8 = v7;
    LOBYTE(v7) = sub_1CDAB846C();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
    if ((v7 & 1) != 0)
    {
      v9 = a1 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
      swift_beginAccess();
      v10 = *(_QWORD *)(v9 + 8);
      v11 = swift_unknownObjectRetain();
      sub_1CD0C5E58(v11, v10);
      swift_unknownObjectRelease();
      return sub_1CD0C52A0();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1CD0C4A10(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1CD0C4A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  unint64_t v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4030);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CDAB82BC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v35 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v31 = (char *)&v30 - v8;
  v9 = v0 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
  swift_beginAccess();
  v10 = *(_QWORD *)(v9 + 8);
  ObjectType = swift_getObjectType();
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 56);
  swift_unknownObjectRetain();
  v13 = v12(ObjectType, v10);
  swift_unknownObjectRelease();
  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_3;
LABEL_22:
    v36 = MEMORY[0x1E0DEE9D8];
LABEL_23:
    swift_bridgeObjectRelease_n();
    return v36;
  }
  swift_bridgeObjectRetain();
  result = sub_1CDAB8778();
  v14 = result;
  if (!result)
    goto LABEL_22;
LABEL_3:
  if (v14 >= 1)
  {
    v16 = 0;
    v34 = v13 & 0xC000000000000001;
    v36 = MEMORY[0x1E0DEE9D8];
    v32 = v14;
    v33 = v4;
    do
    {
      if (v34)
        v17 = (id)MEMORY[0x1D17B8504](v16, v13);
      else
        v17 = *(id *)(v13 + 8 * v16 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_idsDeviceIdentifier);
      if (v19)
      {
        v20 = v19;
        sub_1CDAB84C0();

        v21 = objc_msgSend(v18, sel_mediaRouteIdentifier);
        if (v21)
        {
          v22 = v21;
          sub_1CDAB84C0();

        }
        sub_1CDAB8298();
        v23 = 0;
        v14 = v32;
        v4 = v33;
      }
      else
      {
        v23 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v23, 1, v4);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        sub_1CD0C9BBC((uint64_t)v3, &qword_1ED8C4030);
      }
      else
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v25 = v31;
        v24(v31, v3, v4);
        v24(v35, v25, v4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v36 = sub_1CD0D1BE0(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
        v27 = *(_QWORD *)(v36 + 16);
        v26 = *(_QWORD *)(v36 + 24);
        if (v27 >= v26 >> 1)
          v36 = sub_1CD0D1BE0(v26 > 1, v27 + 1, 1, v36);
        v28 = v35;
        v29 = v36;
        *(_QWORD *)(v36 + 16) = v27 + 1;
        v24((char *)(v29+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v27), v28, v4);
      }
      ++v16;
    }
    while (v14 != v16);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CD0C4DF0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t DiscoveryController.obtainNetworkVisibleDevicesProto()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(char *, unint64_t, uint64_t);
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_1CDAB82BC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CD0C4A70();
  v5 = MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v8 = *(_QWORD *)(v1 + 72);
    v9 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v17 = v4;
    swift_bridgeObjectRetain();
    do
    {
      v9(v3, v7, v0);
      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBA228]), sel_init);
      if (v10)
      {
        v11 = v10;
        sub_1CDAB82A4();
        v12 = (void *)sub_1CDAB84A8();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_setIdsIdentifierString_, v12);

        sub_1CDAB82B0();
        if (v13)
        {
          v14 = (void *)sub_1CDAB84A8();
          swift_bridgeObjectRelease();
          objc_msgSend(v11, sel_setMediaRouteIdString_, v14);

        }
        v15 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        MEMORY[0x1D17B82C4](v15);
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CDAB8544();
        sub_1CDAB8550();
        sub_1CDAB8538();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      }
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v5 = v18;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t DiscoveryController.obtainSFVisibleDevicesProto()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  void (*v12)(char *, size_t, uint64_t);
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  size_t v20;
  uint64_t v21;

  v1 = sub_1CDAB82BC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR___HMDDiscoveryController_visibleSFDevices);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  swift_release();
  v7 = sub_1CD0C8868(v6);
  swift_bridgeObjectRelease();
  v8 = MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    v10 = v7 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v11 = *(_QWORD *)(v2 + 72);
    v12 = *(void (**)(char *, size_t, uint64_t))(v2 + 16);
    v20 = v7;
    swift_retain();
    do
    {
      v12(v4, v10, v1);
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBA228]), sel_init);
      if (v13)
      {
        v14 = v13;
        sub_1CDAB82A4();
        v15 = (void *)sub_1CDAB84A8();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setIdsIdentifierString_, v15);

        sub_1CDAB82B0();
        if (v16)
        {
          v17 = (void *)sub_1CDAB84A8();
          swift_bridgeObjectRelease();
          objc_msgSend(v14, sel_setMediaRouteIdString_, v17);

        }
        v18 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        MEMORY[0x1D17B82C4](v18);
        if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CDAB8544();
        sub_1CDAB8550();
        sub_1CDAB8538();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_release();
    v8 = v21;
  }
  swift_release();
  return v8;
}

id sub_1CD0C523C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  sub_1CD0C9A74(0, &qword_1EFA45A90);
  v5 = (void *)sub_1CDAB8508();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1CD0C52A0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  void (*v11)(void (*)(void *), uint64_t, uint64_t, uint64_t);
  char *v12;
  uint64_t v13;

  v1 = sub_1CDAB8454();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)&v0[OBJC_IVAR___HMDDiscoveryController_queue];
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v6 = v5;
  LOBYTE(v5) = sub_1CDAB846C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (v0[OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion] != 1
      || v0[OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted] == 1)
    {
      v8 = *(_QWORD *)&v0[OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient + 8];
      ObjectType = swift_getObjectType();
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = v0;
      v11 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v8 + 176);
      swift_unknownObjectRetain();
      v12 = v0;
      v11(sub_1CD0C9A00, v10, ObjectType, v8);
      swift_unknownObjectRelease();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1CD0C53F4(void *a1)
{
  id v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  os_log_type_t v10;
  uint8_t *v11;
  NSObject *oslog;
  uint64_t v13;

  if (a1)
  {
    v2 = a1;
    v3 = a1;
    v4 = a1;
    v5 = sub_1CDAB83F4();
    v6 = sub_1CDAB85EC();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v9 = a1;
      v13 = _swift_stdlib_bridgeErrorToNSError();
      sub_1CDAB8664();
      *v8 = v13;

      _os_log_impl(&dword_1CD062000, v5, v6, "Unable to start sfDiscovery %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45A88);
      swift_arrayDestroy();
      MEMORY[0x1D17BA8C8](v8, -1, -1);
      MEMORY[0x1D17BA8C8](v7, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    oslog = sub_1CDAB83F4();
    v10 = sub_1CDAB85D4();
    if (os_log_type_enabled(oslog, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1CD062000, oslog, v10, "Started sfDiscovery", v11, 2u);
      MEMORY[0x1D17BA8C8](v11, -1, -1);
    }

  }
}

uint64_t sub_1CD0C5624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  char v8;
  uint64_t result;
  uint64_t *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = sub_1CDAB8454();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR___HMDDiscoveryController_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  v8 = sub_1CDAB846C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) != 0)
  {
    v10 = (uint64_t *)(v1 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient);
    v11 = *(_QWORD *)(v1 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient + 8);
    ObjectType = swift_getObjectType();
    v13 = *(void (**)(uint64_t, uint64_t))(v11 + 184);
    swift_unknownObjectRetain();
    v13(ObjectType, v11);
    v14 = swift_unknownObjectRelease();
    v15 = (*(uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___HMDDiscoveryController_sharingDiscoveryClientFactory))(v14);
    v17 = v16;
    v18 = swift_getObjectType();
    (*(void (**)(id, uint64_t, uint64_t))(v17 + 16))(v7, v18, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 88))(1, v18, v17);
    *v10 = v15;
    v10[1] = v17;
    swift_unknownObjectRelease();
    return sub_1CD0C4190();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1CD0C5788(unsigned __int8 a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id result;
  void *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  _BYTE v23[16];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4030);
  MEMORY[0x1E0C80A78]();
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1CDAB8454();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78]();
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(void **)(v2 + OBJC_IVAR___HMDDiscoveryController_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v12 = v11;
  LOBYTE(v11) = sub_1CDAB846C();
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    result = objc_msgSend(a2, sel_idsIdentifier);
    if (result)
    {
      v14 = result;
      v15 = a1;
      v16 = sub_1CDAB84C0();
      v18 = v17;

      v19 = objc_msgSend(a2, sel_mediaRouteID);
      if (v19)
      {
        v20 = v19;
        sub_1CDAB84C0();

      }
      if ((v15 - 1) > 1)
      {
        swift_bridgeObjectRelease();
        v22 = *(_QWORD *)(v2 + OBJC_IVAR___HMDDiscoveryController_visibleSFDevices);
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
        sub_1CD0C59E8((uint64_t *)(v22 + 16), v16, v18, (uint64_t)v6);
        os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
        swift_release();
        swift_bridgeObjectRelease();
        return (id)sub_1CD0C9BBC((uint64_t)v6, &qword_1ED8C4030);
      }
      else
      {
        v21 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR___HMDDiscoveryController_visibleSFDevices);
        swift_retain();
        os_unfair_lock_lock(v21 + 6);
        sub_1CD0C5B24((uint64_t)&v21[4], v16, v18);
        os_unfair_lock_unlock(v21 + 6);
        swift_release();
        swift_bridgeObjectRelease();
        return (id)swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CD0C59E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  swift_bridgeObjectRetain();
  v8 = sub_1CD0D2084(a2, a3);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *a1;
    v17 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CD0D6DFC();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_1CDAB82BC();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a4, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_1CD0C8484(v8, v11);
    *a1 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
  }
  else
  {
    v16 = sub_1CDAB82BC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a4, 1, 1, v16);
  }
}

uint64_t sub_1CD0C5B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4030);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1CDAB8298();
  v7 = sub_1CDAB82BC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  return sub_1CD0C5C10((uint64_t)v6, a2, a3);
}

uint64_t sub_1CD0C5C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4030);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CDAB82BC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78]();
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10) == 1)
  {
    sub_1CD0C9BBC(a1, &qword_1ED8C4030);
    sub_1CD0C825C(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1CD0C9BBC((uint64_t)v9, &qword_1ED8C4030);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, a1, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v4;
    *v4 = 0x8000000000000000;
    sub_1CD0D7874((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v17;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CD0C5D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1CD0C9BF8((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CD0D7B0C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CD0C9BBC(a1, &qword_1EFA45AA8);
    sub_1CD0C838C(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1CD0C9BBC((uint64_t)v9, &qword_1EFA45AA8);
  }
}

uint64_t sub_1CD0C5E58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(void (*)(void *), _QWORD *, uint64_t, uint64_t);
  _QWORD v21[2];

  v3 = v2;
  v6 = sub_1CDAB8454();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78]();
  v9 = (_QWORD *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + OBJC_IVAR___HMDDiscoveryController_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v11 = v10;
  LOBYTE(v10) = sub_1CDAB846C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    if (*(_BYTE *)(v3 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) != 1
      || *(_BYTE *)(v3 + OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted) == 1)
    {
      swift_unknownObjectRetain();
      v13 = sub_1CDAB83F4();
      v14 = sub_1CDAB85D4();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v15 = 134217984;
        ObjectType = swift_getObjectType();
        v21[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
        sub_1CDAB8664();
        swift_unknownObjectRelease();
        _os_log_impl(&dword_1CD062000, v13, v14, "Set up the companion link client, controlFlags = %llu", v15, 0xCu);
        MEMORY[0x1D17BA8C8](v15, -1, -1);
      }
      else
      {
        swift_unknownObjectRelease();
      }

      v17 = swift_getObjectType();
      v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v19 = (_QWORD *)swift_allocObject();
      v19[2] = v18;
      v19[3] = a1;
      v19[4] = a2;
      v20 = *(void (**)(void (*)(void *), _QWORD *, uint64_t, uint64_t))(a2 + 184);
      swift_unknownObjectRetain();
      swift_retain();
      v20(sub_1CD0C99F4, v19, v17, a2);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1CD0C60C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1D17BA964](v7);
  if (v8)
  {
    v9 = (void *)v8;
    if (a1)
    {
      v10 = a1;
      v11 = a1;
      v12 = a1;
      v13 = sub_1CDAB83F4();
      v14 = sub_1CDAB85EC();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v16 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v15 = 138412290;
        v17 = a1;
        v21 = _swift_stdlib_bridgeErrorToNSError();
        sub_1CDAB8664();
        *v16 = v21;

        _os_log_impl(&dword_1CD062000, v13, v14, "Error activating RPClient: '%@'", v15, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45A88);
        swift_arrayDestroy();
        MEMORY[0x1D17BA8C8](v16, -1, -1);
        MEMORY[0x1D17BA8C8](v15, -1, -1);

      }
      else
      {

      }
      sub_1CD0C6320(a3, a4, 120.0);

    }
    else
    {
      v18 = sub_1CDAB83F4();
      v19 = sub_1CDAB85D4();
      if (os_log_type_enabled(v18, (os_log_type_t)v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_1CD062000, v18, (os_log_type_t)v19, "RPClient activated successfully", v20, 2u);
        MEMORY[0x1D17BA8C8](v20, -1, -1);
      }

    }
  }
}

uint64_t sub_1CD0C6320(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD v24[2];
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v7 = sub_1CDAB8418();
  v29 = *(_QWORD *)(v7 - 8);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CDAB8430();
  v27 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CDAB8448();
  v14 = *(_QWORD *)(v13 - 8);
  v26 = v13;
  v15 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v24 - v18;
  v24[1] = *(_QWORD *)(v3 + OBJC_IVAR___HMDDiscoveryController_queue);
  sub_1CDAB843C();
  MEMORY[0x1D17B8228](v17, a3);
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v17, v13);
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v20;
  v21[3] = a1;
  v21[4] = a2;
  aBlock[4] = sub_1CD0C99D8;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CD0C37D4;
  aBlock[3] = &block_descriptor_22;
  v22 = _Block_copy(aBlock);
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_1CDAB8424();
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4068, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4070);
  sub_1CD0C9AAC((unint64_t *)&qword_1ED8C4078, &qword_1ED8C4070);
  sub_1CDAB86A0();
  MEMORY[0x1D17B83D8](v19, v12, v9, v22);
  _Block_release(v22);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
  v25(v19, v26);
  swift_release();
  return swift_release();
}

void sub_1CD0C65FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  id v16;
  uint64_t ObjectType;
  uint64_t v18;

  v6 = sub_1CDAB8454();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78]();
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v10 = MEMORY[0x1D17BA964](a1 + 16);
  if (v10)
  {
    v11 = (char *)v10;
    v12 = sub_1CDAB83F4();
    v13 = sub_1CDAB85D4();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1CD062000, v12, v13, "Restarting RPDevice discovery", v14, 2u);
      MEMORY[0x1D17BA8C8](v14, -1, -1);
    }

    v15 = *(void **)&v11[OBJC_IVAR___HMDDiscoveryController_queue];
    *v9 = v15;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
    v16 = v15;
    LOBYTE(v15) = sub_1CDAB846C();
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    if ((v15 & 1) != 0)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(a3 + 192))(ObjectType, a3);
      sub_1CD0C5E58(a2, a3);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1CD0C67A0()
{
  return sub_1CD0C67BC((uint64_t)&unk_1E899C1E8, (uint64_t)sub_1CD0C999C, (uint64_t)&block_descriptor_13);
}

uint64_t sub_1CD0C67BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v6 = sub_1CDAB8418();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CDAB8430();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)&v3[OBJC_IVAR___HMDDiscoveryController_queue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CD0C37D4;
  aBlock[3] = a3;
  v15 = _Block_copy(aBlock);
  v16 = v3;
  sub_1CDAB8424();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4068, v7, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4070);
  sub_1CD0C9AAC((unint64_t *)&qword_1ED8C4078, &qword_1ED8C4070);
  sub_1CDAB86A0();
  MEMORY[0x1D17B83F0](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_1CD0C69A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_1CDAB8454();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1CDAB83F4();
  v7 = sub_1CDAB85F8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CD062000, v6, v7, "Became asserted", v8, 2u);
    MEMORY[0x1D17BA8C8](v8, -1, -1);
  }

  *(_BYTE *)(a1 + OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted) = 1;
  if (*(_BYTE *)(a1 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) == 1)
  {
    v9 = *(void **)(a1 + OBJC_IVAR___HMDDiscoveryController_queue);
    *v5 = v9;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
    v10 = v9;
    LOBYTE(v9) = sub_1CDAB846C();
    (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v9 & 1) != 0)
    {
      v11 = a1 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
      swift_beginAccess();
      v12 = *(_QWORD *)(v11 + 8);
      v13 = swift_unknownObjectRetain();
      sub_1CD0C5E58(v13, v12);
      swift_unknownObjectRelease();
      sub_1CD0C52A0();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1CD0C6B48()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  _QWORD v15[2];
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v2 = sub_1CDAB8418();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CDAB8430();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78]();
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(_QWORD *)&v0[OBJC_IVAR___HMDDiscoveryController_queue];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v0;
  *(_QWORD *)(v11 + 24) = ObjectType;
  aBlock[4] = sub_1CD0C9994;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CD0C37D4;
  aBlock[3] = &block_descriptor_7;
  v12 = _Block_copy(aBlock);
  v13 = v0;
  sub_1CDAB8424();
  v15[1] = MEMORY[0x1E0DEE9D8];
  sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4068, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4070);
  sub_1CD0C9AAC((unint64_t *)&qword_1ED8C4078, &qword_1ED8C4070);
  sub_1CDAB86A0();
  MEMORY[0x1D17B83F0](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_1CD0C6D38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1CDAB8454();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1CDAB83F4();
  v7 = sub_1CDAB85F8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CD062000, v6, v7, "No more assertions", v8, 2u);
    MEMORY[0x1D17BA8C8](v8, -1, -1);
  }

  *(_BYTE *)(a1 + OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted) = 0;
  if (*(_BYTE *)(a1 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) == 1)
  {
    sub_1CD0C5624();
    v9 = (uint64_t *)(a1 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient);
    swift_beginAccess();
    v10 = *(void **)(a1 + OBJC_IVAR___HMDDiscoveryController_queue);
    v11 = v9[1];
    *v5 = v10;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
    swift_unknownObjectRetain();
    v12 = v10;
    v13 = sub_1CDAB846C();
    (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v13 & 1) != 0)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v11 + 192))(ObjectType, v11);
      v15 = swift_unknownObjectRelease();
      v16 = (*(uint64_t (**)(uint64_t))(a1 + OBJC_IVAR___HMDDiscoveryController_rapportDiscoveryClientFactory))(v15);
      v18 = v17;
      v19 = swift_getObjectType();
      (*(void (**)(id, uint64_t, uint64_t))(v18 + 16))(v12, v19, v18);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40))(0x60000400004, v19, v18);
      *v9 = v16;
      v9[1] = v18;
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1CD0C6F54(uint64_t a1)
{
  sub_1CD0C6F6C(a1, "Added assertion %s: %s");
}

void sub_1CD0C6F60(uint64_t a1)
{
  sub_1CD0C6F6C(a1, "Removed assertion %s: %s");
}

void sub_1CD0C6F6C(uint64_t a1, const char *a2)
{
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  swift_retain_n();
  oslog = sub_1CDAB83F4();
  v4 = sub_1CDAB85E0();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12 = v6;
    *(_DWORD *)v5 = 136315394;
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtCC19HomeKitDaemonLegacy15AssertionHandle9Assertion_reason);
    v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtCC19HomeKitDaemonLegacy15AssertionHandle9Assertion_reason + 8);
    swift_bridgeObjectRetain();
    sub_1CD0C72F0(v7, v8, &v12);
    sub_1CDAB8664();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1CDAB822C();
    sub_1CD0C2AAC(&qword_1EFA45A78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v9 = sub_1CDAB87B4();
    sub_1CD0C72F0(v9, v10, &v12);
    sub_1CDAB8664();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CD062000, oslog, v4, a2, (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17BA8C8](v6, -1, -1);
    MEMORY[0x1D17BA8C8](v5, -1, -1);

  }
  else
  {
    swift_release_n();

  }
}

id DiscoveryController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DiscoveryController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DiscoveryController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiscoveryController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CD0C72F0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1CD0C73C0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1CD0C9930((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1CD0C9930((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1CD0C73C0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1CDAB8670();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1CD0C7578(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1CDAB8748();
  if (!v8)
  {
    sub_1CDAB8760();
    __break(1u);
LABEL_17:
    result = sub_1CDAB87A8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1CD0C7578(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1CD0C760C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1CD0C77E4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1CD0C77E4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1CD0C760C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1CD0C7780(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1CDAB8730();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1CDAB8760();
      __break(1u);
LABEL_10:
      v2 = sub_1CDAB84F0();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1CDAB87A8();
    __break(1u);
LABEL_14:
    result = sub_1CDAB8760();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1CD0C7780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45A80);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1CD0C77E4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45A80);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1CDAB87A8();
  __break(1u);
  return result;
}

uint64_t sub_1CD0C7930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C43B8);
    v2 = sub_1CDAB8718();
    v15 = v2;
    sub_1CDAB86C4();
    if (sub_1CDAB86E8())
    {
      type metadata accessor for AssertionHandle.Assertion(0);
      v3 = MEMORY[0x1E0CB09C8];
      do
      {
        swift_dynamicCast();
        v2 = v15;
        if (*(_QWORD *)(v15 + 24) <= *(_QWORD *)(v15 + 16))
        {
          sub_1CD0DE510();
          v2 = v15;
        }
        sub_1CDAB87FC();
        sub_1CDAB822C();
        sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], v3);
        sub_1CDAB8490();
        result = sub_1CDAB8814();
        v5 = v2 + 56;
        v6 = -1 << *(_BYTE *)(v2 + 32);
        v7 = result & ~v6;
        v8 = v7 >> 6;
        if (((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          v9 = __clz(__rbit64((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v8 == v11;
            if (v8 == v11)
              v8 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(_QWORD *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1CDAB86E8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

unint64_t sub_1CD0C7B70(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1CDAB87FC();
  sub_1CDAB822C();
  sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1CDAB8490();
  sub_1CDAB8814();
  result = sub_1CDAB86B8();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1CD0C7C48()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v13;

  v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v2 = sub_1CDAB86F4();
    swift_release();
    if ((v2 & 1) != 0)
    {
      v3 = sub_1CD0C7E74();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1CDAB87FC();
  sub_1CDAB822C();
  sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  sub_1CDAB8490();
  v4 = sub_1CDAB8814();
  v5 = -1 << *(_BYTE *)(v1 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_12;
  swift_retain();
  v7 = sub_1CDAB8208();
  swift_release();
  if ((v7 & 1) == 0)
  {
    v8 = ~v5;
    do
    {
      v6 = (v6 + 1) & v8;
      if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        goto LABEL_12;
      swift_retain();
      v9 = sub_1CDAB8208();
      swift_release();
    }
    while ((v9 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v0;
  v13 = *v0;
  *v0 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1CD0DEE50();
    v11 = v13;
  }
  v3 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v6);
  sub_1CD0C805C(v6);
  *v0 = v13;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1CD0C7E74()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  swift_bridgeObjectRelease();
  v1 = sub_1CDAB86D0();
  v2 = swift_unknownObjectRetain();
  v3 = sub_1CD0C7930(v2, v1);
  v12 = v3;
  sub_1CDAB87FC();
  sub_1CDAB822C();
  sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  swift_retain();
  sub_1CDAB8490();
  v4 = sub_1CDAB8814();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    swift_retain();
    v7 = sub_1CDAB8208();
    swift_release();
    if ((v7 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v10 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
      sub_1CD0C805C(v6);
      if ((sub_1CDAB8208() & 1) != 0)
      {
        *v0 = v12;
        return v10;
      }
      __break(1u);
    }
    else
    {
      v8 = ~v5;
      while (1)
      {
        v6 = (v6 + 1) & v8;
        if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        swift_retain();
        v9 = sub_1CDAB8208();
        swift_release();
        if ((v9 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1CD0C805C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1CDAB86AC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1CDAB87FC();
        sub_1CDAB822C();
        sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        swift_retain();
        sub_1CDAB8490();
        v10 = sub_1CDAB8814();
        swift_release();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_QWORD *)(v12 + 8 * v2);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1CD0C825C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1CD0D2084(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1CD0D6DFC();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_1CDAB82BC();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a3, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_1CD0C8484(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = sub_1CDAB82BC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

double sub_1CD0C838C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1CD0D2084(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1CD0D7464();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1CD0C9BF8((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_1CD0C8680(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1CD0C8484(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CDAB86AC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1CDAB87FC();
        swift_bridgeObjectRetain();
        sub_1CDAB84D8();
        v9 = sub_1CDAB8814();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(sub_1CDAB82BC() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CD0C8680(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CDAB86AC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CDAB87FC();
        swift_bridgeObjectRetain();
        sub_1CDAB84D8();
        v11 = sub_1CDAB8814();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

size_t sub_1CD0C8868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45AA0);
  v3 = *(_QWORD *)(sub_1CDAB82BC() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_1CD0C8A78(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1CD0C9A6C();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_1CD0C8980(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45A98);
  v3 = *(_QWORD *)(sub_1CDAB822C() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_1CD0C8D40(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_1CD0C9A6C();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CD0C8A78(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_1CDAB82BC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 32);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 56) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CD0C8D40(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4340);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CDAB822C();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_1CD0C9BBC((uint64_t)v10, &qword_1ED8C4340);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1CD0C9090(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  ObjectType = swift_getObjectType();
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 24) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectWeakInit();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v3 + 96);
  swift_retain();
  swift_retain();
  v8(sub_1CD0C9B64, v7, ObjectType, v3);
  swift_release();
  swift_release();
  v9 = *(_QWORD *)(a2 + 8);
  v10 = swift_getObjectType();
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v9 + 72);
  swift_retain();
  v12(sub_1CD0C9B6C, v11, v10, v9);
  swift_release();
  v13 = *(_QWORD *)(a2 + 8);
  v14 = swift_getObjectType();
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v13 + 120);
  swift_retain();
  v16(sub_1CD0C9B74, v15, v14, v13);
  swift_release();
  v17 = *(_QWORD *)(a2 + 8);
  v18 = swift_getObjectType();
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v17 + 144);
  swift_retain();
  v20(sub_1CD0C9B94, v19, v18, v17);
  swift_release();
  v21 = *(_QWORD *)(a2 + 8);
  v22 = swift_getObjectType();
  v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v24 = *(void (**)(void (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t))(v21 + 168);
  swift_retain();
  v24(sub_1CD0C9BB4, v23, v22, v21);
  return swift_release();
}

id sub_1CD0C92F4(int a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (**v22)(void);
  uint64_t (*v23)(void);
  uint64_t (*v24)(void);
  uint64_t (**v25)(void);
  uint64_t (*v26)(void);
  uint64_t (*v27)(void);
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  void (*v33)(void);
  id v34;
  uint64_t *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  id v42;
  uint64_t *v43;
  objc_class *v44;
  id v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  uint64_t (*v53)(void);
  uint64_t (*v54)(void);
  int v55;
  uint64_t (*v56)(void);
  uint64_t v57;
  objc_super v58;

  v56 = a5;
  v53 = a3;
  v54 = a4;
  v52 = a2;
  v55 = a1;
  v51 = sub_1CDAB861C();
  v6 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CDAB8604();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1CDAB8430();
  MEMORY[0x1E0C80A78](v11);
  v50 = OBJC_IVAR___HMDDiscoveryController_queue;
  v48 = sub_1CD0C9A74(0, qword_1ED8C4098);
  v12 = v5;
  sub_1CDAB8424();
  v57 = MEMORY[0x1E0DEE9D8];
  sub_1CD0C2AAC(&qword_1ED8C4090, v10, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4080);
  sub_1CD0C9AAC((unint64_t *)&qword_1ED8C4088, &qword_1ED8C4080);
  sub_1CDAB86A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF8D0], v51);
  v13 = (void *)sub_1CDAB8634();
  v15 = v49;
  v14 = v50;
  *(_QWORD *)(v49 + v50) = v13;
  sub_1CDAB84C0();
  sub_1CDAB8400();
  v12[OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted] = 0;
  v16 = OBJC_IVAR___HMDDiscoveryController_visibleSFDevices;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C43C0);
  v17 = swift_allocObject();
  v18 = MEMORY[0x1E0DEE9E0];
  *(_DWORD *)(v17 + 24) = 0;
  *(_QWORD *)(v17 + 16) = v18;
  *(_QWORD *)&v12[v16] = v17;
  v19 = OBJC_IVAR___HMDDiscoveryController_assertions;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C43C8);
  v20 = swift_allocObject();
  v21 = MEMORY[0x1E0DEE9E8];
  *(_DWORD *)(v20 + 24) = 0;
  *(_QWORD *)(v20 + 16) = v21;
  *(_QWORD *)&v12[v19] = v20;
  v22 = (uint64_t (**)(void))&v12[OBJC_IVAR___HMDDiscoveryController_rapportDiscoveryClientFactory];
  v23 = v52;
  v24 = v53;
  *v22 = v52;
  v22[1] = v24;
  v25 = (uint64_t (**)(void))&v12[OBJC_IVAR___HMDDiscoveryController_sharingDiscoveryClientFactory];
  v26 = v54;
  v27 = v56;
  *v25 = v54;
  v25[1] = v27;
  v12[OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion] = v55;
  swift_retain();
  swift_retain();
  v28 = v13;
  v29 = v26();
  v31 = v30;
  ObjectType = swift_getObjectType();
  v33 = *(void (**)(void))(v31 + 16);
  v34 = v28;
  v33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 88))(1, ObjectType, v31);

  v35 = (uint64_t *)&v12[OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient];
  *v35 = v29;
  v35[1] = v31;
  v36 = *(id *)(v15 + v14);
  v37 = v23();
  v39 = v38;
  v40 = swift_getObjectType();
  v41 = *(void (**)(void))(v39 + 16);
  v42 = v36;
  v41();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 40))(0x60000400004, v40, v39);

  v43 = (uint64_t *)&v12[OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient];
  *v43 = v37;
  v43[1] = v39;

  v44 = (objc_class *)type metadata accessor for DiscoveryController(0);
  v58.receiver = v12;
  v58.super_class = v44;
  v45 = objc_msgSendSuper2(&v58, sel_init);
  sub_1CD0C4190();
  v46 = (uint64_t)v45 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
  swift_beginAccess();
  sub_1CD0C9090((uint64_t)v45, v46);
  swift_endAccess();

  return v45;
}

uint64_t sub_1CD0C9720()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CD0C9744()
{
  uint64_t v0;

  return sub_1CD0C4900(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t type metadata accessor for AssertionHandle()
{
  return objc_opt_self();
}

uint64_t sub_1CD0C9784()
{
  return type metadata accessor for AssertionHandle.Assertion(0);
}

uint64_t type metadata accessor for AssertionHandle.Assertion(uint64_t a1)
{
  return sub_1CD0C97A0(a1, (uint64_t *)&unk_1ED8C4358);
}

uint64_t sub_1CD0C97A0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CD0C97D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CDAB822C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1CD0C9848()
{
  return type metadata accessor for DiscoveryController(0);
}

uint64_t sub_1CD0C9850()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CDAB840C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1CD0C9904()
{
  return sub_1CD0C2AAC(&qword_1ED8C4350, type metadata accessor for AssertionHandle.Assertion, (uint64_t)&unk_1CDB7E9B0);
}

uint64_t sub_1CD0C9930(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1CD0C9970()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1CD0C9994()
{
  uint64_t v0;

  sub_1CD0C6D38(*(_QWORD *)(v0 + 16));
}

void sub_1CD0C999C()
{
  uint64_t v0;

  sub_1CD0C69A0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1CD0C99A4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CD0C99C8()
{
  return objectdestroy_18Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

void sub_1CD0C99D8()
{
  uint64_t *v0;

  sub_1CD0C65FC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1CD0C99E4()
{
  return objectdestroy_18Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

void sub_1CD0C99F4(void *a1)
{
  uint64_t *v1;

  sub_1CD0C60C4(a1, v1[2], v1[3], v1[4]);
}

void sub_1CD0C9A00(void *a1)
{
  sub_1CD0C53F4(a1);
}

void sub_1CD0C9A08(void *a1)
{
  uint64_t v1;

  sub_1CD0C4374(a1, v1, 1u);
}

void sub_1CD0C9A24(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CD0C4318(a1, a2, v2);
}

void sub_1CD0C9A2C(void *a1)
{
  uint64_t v1;

  sub_1CD0C4374(a1, v1, 0);
}

uint64_t sub_1CD0C9A48(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1CD0C9A6C()
{
  return swift_release();
}

uint64_t sub_1CD0C9A74(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1CD0C9AAC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D17BA838](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CD0C9AEC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CD0C9B10()
{
  return objectdestroy_18Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_18Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

void sub_1CD0C9B64()
{
  uint64_t v0;

  sub_1CD0C43E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1CD0C9B6C()
{
  uint64_t v0;

  sub_1CD0C450C(v0);
}

void sub_1CD0C9B74(void *a1)
{
  uint64_t v1;

  sub_1CD0C45D8(a1, v1, "Device Found from RPClient: %@");
}

void sub_1CD0C9B94(void *a1)
{
  uint64_t v1;

  sub_1CD0C45D8(a1, v1, "Device lost from RPClient: %@");
}

void sub_1CD0C9BB4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CD0C4760(a1, a2, v2);
}

uint64_t sub_1CD0C9BBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1CD0C9BF8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t HMDSymptomManager.updateNetworkMismatchInfo()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[23] = v0;
  v2 = sub_1CDAB8418();
  v1[24] = v2;
  v1[25] = *(_QWORD *)(v2 - 8);
  v1[26] = swift_task_alloc();
  v3 = sub_1CDAB8430();
  v1[27] = v3;
  v1[28] = *(_QWORD *)(v3 - 8);
  v1[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CD0C9D10()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = objc_msgSend(*(id *)(v0 + 184), sel_dataSource);
  *(_QWORD *)(v0 + 240) = v1;
  if (v1)
  {
    v2 = v1;
    *(_QWORD *)(v0 + 56) = v0 + 168;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1CD0C9DEC;
    v3 = swift_continuation_init();
    *(_QWORD *)(v0 + 128) = MEMORY[0x1E0C809B0];
    v4 = (_QWORD *)(v0 + 128);
    v4[1] = 0x40000000;
    v4[2] = sub_1CD0C9FD0;
    v4[3] = &block_descriptor_0;
    v4[4] = v3;
    objc_msgSend(v2, sel_fetchNearbyAccessoriesNotOnCurrentNetworkWithCompletionHandler_, v4);
    return swift_continuation_await();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CD0C9DEC()
{
  return swift_task_switch();
}

uint64_t sub_1CD0C9E38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0[29];
  v2 = v0[26];
  v12 = v0[28];
  v13 = v0[27];
  v4 = v0[24];
  v3 = v0[25];
  v5 = (void *)v0[23];
  v6 = v0[21];
  swift_unknownObjectRelease();
  v7 = objc_msgSend(v5, sel_workQueue);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v6;
  v0[14] = sub_1CD0CA0B8;
  v0[15] = v8;
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 1107296256;
  v0[12] = sub_1CD0C37D4;
  v0[13] = &block_descriptor_1;
  v9 = _Block_copy(v0 + 10);
  v10 = v5;
  sub_1CDAB8424();
  v0[22] = MEMORY[0x1E0DEE9D8];
  sub_1CD0CA0D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4070);
  sub_1CD0CA120();
  sub_1CDAB86A0();
  MEMORY[0x1D17B83F0](0, v1, v2, v9);
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1CD0C9FD0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  sub_1CDAB822C();
  **(_QWORD **)(*(_QWORD *)(v1 + 64) + 40) = sub_1CDAB8520();
  return swift_continuation_resume();
}

id sub_1CD0CA014(void *a1)
{
  id result;
  void *v3;

  result = objc_msgSend(a1, sel__isNearbyDiscoveryActive);
  if ((_DWORD)result)
  {
    sub_1CDAB822C();
    v3 = (void *)sub_1CDAB8508();
    objc_msgSend(a1, sel_setNearbyAccessoryUUIDsNotOnCurrentNetwork_, v3);

    return objc_msgSend(a1, sel__updateSymptomsForAllRegisteredAccessories);
  }
  return result;
}

uint64_t sub_1CD0CA08C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1CD0CA0B8()
{
  uint64_t v0;

  return sub_1CD0CA014(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_1CD0CA0D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8C4068;
  if (!qword_1ED8C4068)
  {
    v1 = sub_1CDAB8418();
    result = MEMORY[0x1D17BA838](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8C4068);
  }
  return result;
}

unint64_t sub_1CD0CA120()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8C4078;
  if (!qword_1ED8C4078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8C4070);
    result = MEMORY[0x1D17BA838](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8C4078);
  }
  return result;
}

uint64_t sub_1CD0CA288(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1CD0CA2E8;
  return HMDSymptomManager.updateNetworkMismatchInfo()();
}

uint64_t sub_1CD0CA2E8()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  uint64_t v4;

  v1 = *(void (***)(_QWORD))(*v0 + 24);
  v2 = *(void **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t _sSo17HMDSymptomManagerC19HomeKitDaemonLegacyE24obtainDiscoveryAssertionyXlyF_0()
{
  id v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_driver);
  v1 = (char *)sub_1CD0D3E34();

  if (v1)
  {
    type metadata accessor for AssertionHandle();
    v2 = swift_allocObject();
    sub_1CD0D384C(v1, 0xD000000000000014, 0x80000001CDB29610, v2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4368);
  v3 = sub_1CDAB8658();
  swift_release();
  return v3;
}

uint64_t _sSo17HMDSymptomManagerC19HomeKitDaemonLegacyE25releaseDiscoveryAssertion15assertionHandleyyXlSg_tF_0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  _BOOL4 v6;
  BOOL v7;

  if (result)
  {
    type metadata accessor for AssertionHandle();
    swift_unknownObjectRetain();
    v1 = swift_dynamicCastClass();
    if (v1)
    {
      v2 = v1;
      v3 = MEMORY[0x1D17BA964](v1 + 24);
      if (v3)
      {
        v4 = *(_QWORD *)(v2 + 16);
        v5 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR___HMDDiscoveryController_assertions);
        swift_retain();
        os_unfair_lock_lock(v5 + 6);
        sub_1CD0C3EFC((uint64_t)&v5[4], &v7);
        os_unfair_lock_unlock(v5 + 6);
        v6 = v7;
        swift_release();
        sub_1CD0C6F60(v4);
        if (v6)
          sub_1CD0C6B48();
        swift_unknownObjectRelease();
      }
      *(_QWORD *)(v2 + 32) = 0;
      swift_unknownObjectWeakAssign();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1CD0CA56C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1CD0CA598()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CD0CA774;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFA45AB8 + dword_1EFA45AB8))(v2, v3);
}

uint64_t sub_1CD0CA600()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1CD0CA774;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EFA45B38 + dword_1EFA45B38))(v2, v3, v4);
}

uint64_t objectdestroy_7Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CD0CA6A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CD0CA72C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EFA45B40 + dword_1EFA45B40))(a1, v4, v5, v6);
}

uint64_t sub_1CD0CA72C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id HMDWidgetMonitoredCharacteristic.characteristic.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_characteristic);
}

uint64_t HMDWidgetMonitoredCharacteristic.reachabilityMonitored.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_reachabilityMonitored);
}

id HMDWidgetMonitoredCharacteristic.__allocating_init(characteristic:reachabilityMonitored:)(uint64_t a1, char a2)
{
  objc_class *v2;
  _BYTE *v5;
  objc_super v7;

  v5 = objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_characteristic] = a1;
  v5[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_reachabilityMonitored] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id HMDWidgetMonitoredCharacteristic.init(characteristic:reachabilityMonitored:)(uint64_t a1, char a2)
{
  _BYTE *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_characteristic] = a1;
  v2[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_reachabilityMonitored] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for HMDWidgetMonitoredCharacteristic();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for HMDWidgetMonitoredCharacteristic()
{
  return objc_opt_self();
}

uint64_t HMDWidgetMonitoredCharacteristic.hash.getter()
{
  return sub_1CDAB864C();
}

uint64_t HMDWidgetMonitoredCharacteristic.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char *v9;
  _BYTE v10[24];
  uint64_t v11;

  v2 = v1;
  sub_1CD0CAA34(a1, (uint64_t)v10);
  if (!v11)
  {
    sub_1CD0CAA7C((uint64_t)v10);
    goto LABEL_7;
  }
  type metadata accessor for HMDWidgetMonitoredCharacteristic();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v7 = 0;
    return v7 & 1;
  }
  sub_1CD0CAABC();
  v3 = *(id *)&v9[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_characteristic];
  v4 = sub_1CDAB8640();

  if ((v4 & 1) == 0)
  {

    goto LABEL_7;
  }
  v5 = *(_BYTE *)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_reachabilityMonitored);
  v6 = v9[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_reachabilityMonitored];

  v7 = v5 ^ v6 ^ 1;
  return v7 & 1;
}

uint64_t sub_1CD0CAA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C41A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CD0CAA7C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C41A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CD0CAABC()
{
  unint64_t result;

  result = qword_1EFA45CF0;
  if (!qword_1EFA45CF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFA45CF0);
  }
  return result;
}

id HMDWidgetMonitoredCharacteristic.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HMDWidgetMonitoredCharacteristic.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HMDWidgetMonitoredCharacteristic.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMDWidgetMonitoredCharacteristic();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1CD0CAC24@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id result;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4340);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CDAB822C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v49 = (char *)&v45 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4380);
  MEMORY[0x1E0C80A78](v14);
  v55 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for NetworkDetectAccessory();
  v56 = *(_QWORD *)(v54 - 8);
  v16 = MEMORY[0x1E0C80A78](v54);
  v53 = (uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v48 = (uint64_t)&v45 - v18;
  result = objc_msgSend(*a1, sel_appleMediaAccessories);
  if (!result)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  v20 = result;
  sub_1CD0C9A74(0, &qword_1ED8C43A8);
  v21 = sub_1CDAB8520();

  v45 = a2;
  v46 = v2;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_1CDAB8778();
    v22 = (uint64_t)result;
    v23 = (uint64_t)v55;
    if (result)
      goto LABEL_4;
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    v23 = (uint64_t)v55;
    if (v22)
    {
LABEL_4:
      if (v22 >= 1)
      {
        v24 = 0;
        v50 = v21 & 0xC000000000000001;
        v57 = MEMORY[0x1E0DEE9D8];
        v51 = v22;
        v52 = v21;
        v47 = v7;
        while (1)
        {
          v26 = v50 ? (id)MEMORY[0x1D17B8504](v24, v21) : *(id *)(v21 + 8 * v24 + 32);
          v27 = v26;
          v28 = objc_msgSend(v26, sel_idsIdentifier, v45, v46);
          if (!v28)
            break;
          v29 = v28;
          sub_1CDAB8214();

          v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
          v30(v7, v12, v8);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
            goto LABEL_15;
          v30(v49, v7, v8);
          v31 = objc_msgSend(v27, sel_uuid);
          sub_1CDAB8214();

          v32 = objc_msgSend(v27, sel_identifier);
          v33 = sub_1CDAB84C0();
          v35 = v34;

          v30(v55, v12, v8);
          v36 = v54;
          v37 = v49;
          (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v55[*(int *)(v54 + 20)], v49, v8);
          v38 = (uint64_t *)&v55[*(int *)(v36 + 24)];
          *v38 = v33;
          v38[1] = v35;
          v7 = v47;
          v23 = (uint64_t)v55;
          (*(void (**)(char *, uint64_t))(v9 + 8))(v37, v8);
          v39 = v56;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v23, 0, 1, v36);
LABEL_16:

          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v23, 1, v36) == 1)
          {
            sub_1CD0C9BBC(v23, &qword_1ED8C4380);
            v25 = v51;
            v21 = v52;
          }
          else
          {
            v40 = v48;
            sub_1CD0CCED8(v23, v48);
            sub_1CD0CCED8(v40, v53);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v25 = v51;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v57 = sub_1CD0D1BF4(0, *(_QWORD *)(v57 + 16) + 1, 1, v57);
            v43 = *(_QWORD *)(v57 + 16);
            v42 = *(_QWORD *)(v57 + 24);
            if (v43 >= v42 >> 1)
              v57 = sub_1CD0D1BF4(v42 > 1, v43 + 1, 1, v57);
            v44 = v57;
            *(_QWORD *)(v57 + 16) = v43 + 1;
            sub_1CD0CCED8(v53, v44+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v43);
            v21 = v52;
          }
          if (v25 == ++v24)
            goto LABEL_24;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_15:
        sub_1CD0C9BBC((uint64_t)v7, &qword_1ED8C4340);
        v39 = v56;
        v36 = v54;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(v23, 1, 1, v54);
        goto LABEL_16;
      }
      __break(1u);
      goto LABEL_26;
    }
  }
  v57 = MEMORY[0x1E0DEE9D8];
LABEL_24:
  result = (id)swift_bridgeObjectRelease_n();
  *v45 = v57;
  return result;
}

uint64_t sub_1CD0CB134(unint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  char isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_36;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1CDAB8778())
  {
    v30 = v2 & 0xC000000000000001;
    v4 = MEMORY[0x1E0DEE9D8];
    v5 = 4;
    v29 = v2;
    while (1)
    {
      v6 = v30 ? (id)MEMORY[0x1D17B8504](v5 - 4, v2) : *(id *)(v2 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v32 = v6;
      sub_1CD0CAC24(&v32, &v31);
      if (v1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v4;
      }

      v9 = v31;
      v10 = *(_QWORD *)(v31 + 16);
      v11 = *(_QWORD *)(v4 + 16);
      v2 = v11 + v10;
      if (__OFADD__(v11, v10))
        goto LABEL_32;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v2 <= *(_QWORD *)(v4 + 24) >> 1)
      {
        if (*(_QWORD *)(v9 + 16))
          goto LABEL_20;
      }
      else
      {
        if (v11 <= v2)
          v13 = v11 + v10;
        else
          v13 = v11;
        v4 = sub_1CD0D1BF4(isUniquelyReferenced_nonNull_native, v13, 1, v4);
        if (*(_QWORD *)(v9 + 16))
        {
LABEL_20:
          v14 = *(_QWORD *)(v4 + 16);
          v2 = (*(_QWORD *)(v4 + 24) >> 1) - v14;
          v15 = type metadata accessor for NetworkDetectAccessory();
          if (v2 < v10)
            goto LABEL_34;
          v16 = *(_QWORD *)(v15 - 8);
          v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
          v18 = *(_QWORD *)(v16 + 72);
          v19 = v4 + v17 + v18 * v14;
          v20 = v9 + v17;
          v21 = v18 * v10;
          v22 = v19 + v21;
          v23 = v20 + v21;
          if (v20 < v22 && v19 < v23)
          {
            result = sub_1CDAB87A8();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            v25 = *(_QWORD *)(v4 + 16);
            v26 = __OFADD__(v25, v10);
            v27 = v25 + v10;
            if (v26)
              goto LABEL_35;
            *(_QWORD *)(v4 + 16) = v27;
          }
          goto LABEL_5;
        }
      }
      if (v10)
        goto LABEL_33;
LABEL_5:
      swift_bridgeObjectRelease();
      ++v5;
      v2 = v29;
      if (v8 == v3)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void sub_1CD0CB3AC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45B80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (void *)sub_1CDAB81FC();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1CD0CCE70;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CD0CB534;
  aBlock[3] = &block_descriptor_1;
  v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchSetupDiagnosticStateForAccessoryUUID_completion_, v7, v10);
  _Block_release(v10);

}

uint64_t sub_1CD0CB4F0(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45B80);
  return sub_1CDAB8574();
}

void sub_1CD0CB534(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t HMDHomeManager.networkDetectQuery()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_1CD0CB5C0()
{
  objc_super *v0;
  objc_class *v1;
  char *v2;
  _QWORD *v3;

  v1 = (objc_class *)type metadata accessor for NetworkMismatchDetector();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC19HomeKitDaemonLegacy23NetworkMismatchDetector_dataSource + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_1E899C5E8;
  swift_unknownObjectWeakAssign();
  v0[1].receiver = v2;
  v0[1].super_class = v1;
  v0[2].super_class = (Class)objc_msgSendSuper2(v0 + 1, sel_init);
  v3 = (_QWORD *)swift_task_alloc();
  v0[3].receiver = v3;
  *v3 = v0;
  v3[1] = sub_1CD0CB674;
  return sub_1CD0DD984();
}

uint64_t sub_1CD0CB674(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CD0CB6D0()
{
  uint64_t v0;
  void *v1;
  size_t v2;

  v1 = *(void **)(v0 + 40);
  v2 = sub_1CD0C8980(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(size_t))(v0 + 8))(v2);
}

uint64_t sub_1CD0CB840(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 32) = a2;
  *(_QWORD *)(v2 + 40) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_1CD0CB888()
{
  objc_super *v0;
  objc_class *v1;
  char *v2;
  objc_class *v3;

  v1 = (objc_class *)type metadata accessor for NetworkMismatchDetector();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC19HomeKitDaemonLegacy23NetworkMismatchDetector_dataSource + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_1E899C5E8;
  swift_unknownObjectWeakAssign();
  v0[1].receiver = v2;
  v0[1].super_class = v1;
  v0[3].receiver = objc_msgSendSuper2(v0 + 1, sel_init);
  v3 = (objc_class *)swift_task_alloc();
  v0[3].super_class = v3;
  *(_QWORD *)v3 = v0;
  *((_QWORD *)v3 + 1) = sub_1CD0CB93C;
  return sub_1CD0DD984();
}

uint64_t sub_1CD0CB93C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CD0CB998()
{
  uint64_t v0;
  void (**v1)(_QWORD, _QWORD);
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void (***)(_QWORD, _QWORD))(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v3 = *(void **)(v0 + 32);
  sub_1CD0C8980(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();

  sub_1CDAB822C();
  v4 = (void *)sub_1CDAB8508();
  swift_release();
  ((void (**)(_QWORD, void *))v1)[2](v1, v4);

  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HMDHomeManager.findAccessoriesNotOnWiFi(currentWiFi:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_1CD0CBA4C()
{
  objc_super *v0;
  objc_class *v1;
  char *v2;
  objc_class *v3;

  v1 = (objc_class *)type metadata accessor for NetworkMismatchDetector();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC19HomeKitDaemonLegacy23NetworkMismatchDetector_dataSource + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_1E899C5E8;
  swift_unknownObjectWeakAssign();
  v0[1].receiver = v2;
  v0[1].super_class = v1;
  v0[3].receiver = objc_msgSendSuper2(v0 + 1, sel_init);
  v3 = (objc_class *)swift_task_alloc();
  v0[3].super_class = v3;
  *(_QWORD *)v3 = v0;
  *((_QWORD *)v3 + 1) = sub_1CD0CBB00;
  return sub_1CD0DD984();
}

uint64_t sub_1CD0CBB00(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CD0CBB5C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  size_t v6;

  v1 = *(void **)(v0 + 48);
  v2 = *(void **)(v0 + 32);
  v3 = sub_1CD0E06B0(v2, *(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  v4 = v2;
  v5 = sub_1CD0CCA94(v3, v4);

  swift_bridgeObjectRelease();
  v6 = sub_1CD0C8980(v5);
  swift_release();

  return (*(uint64_t (**)(size_t))(v0 + 8))(v6);
}

uint64_t sub_1CD0CBD2C(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  id v7;
  _QWORD *v8;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  v7 = a3;
  v8 = (_QWORD *)swift_task_alloc();
  v3[5] = v8;
  *v8 = v3;
  v8[1] = sub_1CD0CBDBC;
  v8[4] = v6;
  v8[5] = v7;
  return swift_task_switch();
}

uint64_t sub_1CD0CBDBC()
{
  uint64_t *v0;
  void (**v1)(_QWORD, _QWORD);
  void *v2;
  void *v3;
  void *v4;
  uint64_t v6;

  v1 = *(void (***)(_QWORD, _QWORD))(*v0 + 32);
  v3 = *(void **)(*v0 + 16);
  v2 = *(void **)(*v0 + 24);
  v6 = *v0;
  swift_task_dealloc();

  sub_1CDAB822C();
  v4 = (void *)sub_1CDAB8508();
  swift_bridgeObjectRelease();
  ((void (**)(_QWORD, void *))v1)[2](v1, v4);

  _Block_release(v1);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1CD0CBE58()
{
  id v0;
  void *v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_driver);
  v1 = (void *)sub_1CD0D3E34();

  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = sub_1CD0C4A70();

  return v2;
}

id sub_1CD0CBEC8()
{
  void *v0;
  id result;
  void *v2;
  unint64_t v3;
  uint64_t v4;

  result = objc_msgSend(v0, sel_homes);
  if (result)
  {
    v2 = result;
    sub_1CD0C9A74(0, &qword_1ED8C43B0);
    v3 = sub_1CDAB8520();

    v4 = sub_1CD0CB134(v3);
    swift_bridgeObjectRelease();
    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CD0CBF5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1CD0CBF74()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45B78);
  *v2 = v0;
  v2[1] = sub_1CD0CC028;
  return sub_1CDAB87C0();
}

uint64_t sub_1CD0CC028()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CD0CC084()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1CD0CC08C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1CD0CA774;
  return v6();
}

uint64_t sub_1CD0CC0E0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1CD0CA774;
  return v7();
}

uint64_t sub_1CD0CC134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1CDAB85A4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1CDAB8598();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1CD0C9BBC(a1, (uint64_t *)&unk_1ED8C4388);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CDAB8568();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1CD0CC280(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CD0CC2E4;
  return v6(a1);
}

uint64_t sub_1CD0CC2E4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CD0CC330(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __int128 v49;

  v48 = sub_1CDAB822C();
  v44 = *(_QWORD *)(v48 - 8);
  v8 = MEMORY[0x1E0C80A78](v48);
  v47 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)&v39 - v10;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D40);
  result = sub_1CDAB879C();
  v12 = result;
  v40 = a1;
  v41 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *a1;
  v14 = 0;
  v15 = result + 64;
  v42 = a4;
  v16 = v48;
  while (1)
  {
    if (v13)
    {
      v45 = (v13 - 1) & v13;
      v46 = v14;
      v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v18 >= v41)
        return v12;
      v19 = v40[v18];
      v20 = v14 + 1;
      if (!v19)
      {
        v20 = v14 + 2;
        if (v14 + 2 >= v41)
          return v12;
        v19 = v40[v20];
        if (!v19)
        {
          v20 = v14 + 3;
          if (v14 + 3 >= v41)
            return v12;
          v19 = v40[v20];
          if (!v19)
          {
            v21 = v14 + 4;
            if (v14 + 4 >= v41)
              return v12;
            v19 = v40[v21];
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v20 >= v41)
                  return v12;
                v19 = v40[v20];
                ++v21;
                if (v19)
                  goto LABEL_24;
              }
            }
            v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      v45 = (v19 - 1) & v19;
      v46 = v20;
      v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    v23 = v43;
    v22 = v44;
    v24 = *(_QWORD *)(v44 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v43, a4[6] + v24 * v17, v16);
    v25 = a4[7] + 24 * v17;
    v49 = *(_OWORD *)v25;
    v26 = *(void **)(v25 + 16);
    v27 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v27(v47, v23, v16);
    sub_1CD0CCF1C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v26;
    result = sub_1CDAB8484();
    v29 = -1 << *(_BYTE *)(v12 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6))) != 0)
    {
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v35 = v31 == v34;
        if (v31 == v34)
          v31 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v15 + 8 * v31);
      }
      while (v36 == -1);
      v32 = __clz(__rbit64(~v36)) + (v31 << 6);
    }
    *(_QWORD *)(v15 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(*(_QWORD *)(v12 + 48) + v32 * v24, v47, v48);
    v37 = *(_QWORD *)(v12 + 56) + 24 * v32;
    *(_OWORD *)v37 = v49;
    *(_QWORD *)(v37 + 16) = v26;
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v42;
    v13 = v45;
    v14 = v46;
    if (!a3)
      return v12;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

size_t sub_1CD0CC69C()
{
  id v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_driver);
  v1 = (char *)sub_1CD0D3E34();

  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)&v1[OBJC_IVAR___HMDDiscoveryController_visibleSFDevices];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
  sub_1CD0C4DF0((_QWORD *)(v2 + 16), &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
  v3 = v6;
  swift_release();
  v4 = sub_1CD0C8868(v3);

  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CD0CC778(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  id v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  uint64_t v45;
  int64_t v46;

  v33 = a2;
  v43 = a4;
  v34 = a1;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4328);
  MEMORY[0x1E0C80A78](v42);
  v41 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CDAB822C();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  result = MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v44 = (_QWORD *)a3;
  v10 = *(_QWORD *)(a3 + 64);
  v35 = 0;
  v36 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v38;
  v14 = v39;
  v16 = v40;
  v17 = (uint64_t)v41;
  while (1)
  {
    if (v13)
    {
      v45 = (v13 - 1) & v13;
      v46 = v9;
      v18 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_5;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v28 >= v37)
      return sub_1CD0CC330(v34, v33, v35, v44);
    v29 = *(_QWORD *)(v36 + 8 * v28);
    v30 = v9 + 1;
    if (!v29)
    {
      v30 = v9 + 2;
      if (v9 + 2 >= v37)
        return sub_1CD0CC330(v34, v33, v35, v44);
      v29 = *(_QWORD *)(v36 + 8 * v30);
      if (!v29)
      {
        v30 = v9 + 3;
        if (v9 + 3 >= v37)
          return sub_1CD0CC330(v34, v33, v35, v44);
        v29 = *(_QWORD *)(v36 + 8 * v30);
        if (!v29)
          break;
      }
    }
LABEL_20:
    v45 = (v29 - 1) & v29;
    v46 = v30;
    v18 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_5:
    v19 = v44;
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    v20(v15, v44[6] + *(_QWORD *)(v14 + 72) * v18, v16);
    v21 = (uint64_t *)(v19[7] + 24 * v18);
    v23 = *v21;
    v22 = (_QWORD *)v21[1];
    v24 = (void *)v21[2];
    v20((char *)v17, (unint64_t)v15, v16);
    v25 = (_QWORD *)(v17 + *(int *)(v42 + 48));
    *v25 = v23;
    v25[1] = v22;
    v25[2] = v24;
    v26 = v24;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v27 = v26;
    LOBYTE(v24) = sub_1CD0E0D54(v43, v22, v24);
    sub_1CD0C9BBC(v17, &qword_1ED8C4328);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v15, v16);
    v9 = v46;
    v13 = v45;
    if ((v24 & 1) == 0)
    {
      *(unint64_t *)((char *)v34 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v35++, 1))
      {
        __break(1u);
        return sub_1CD0CC330(v34, v33, v35, v44);
      }
    }
  }
  v31 = v9 + 4;
  if (v9 + 4 >= v37)
    return sub_1CD0CC330(v34, v33, v35, v44);
  v29 = *(_QWORD *)(v36 + 8 * v31);
  if (v29)
  {
    v30 = v9 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v37)
      return sub_1CD0CC330(v34, v33, v35, v44);
    v29 = *(_QWORD *)(v36 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1CD0CCA94(uint64_t a1, void *a2)
{
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t isStackAllocationSafe;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  isStackAllocationSafe = a2;
  v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (char *)v15 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    v10 = v8;
    v11 = sub_1CD0CC778((unint64_t *)v9, v6, a1, v10);

    if (v2)
      swift_willThrow();

  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, 8 * v6);
    v13 = v8;
    v11 = sub_1CD0CC778((unint64_t *)v12, v6, a1, v13);

    MEMORY[0x1D17BA8C8](v12, -1, -1);
  }
  return v11;
}

uint64_t sub_1CD0CCC30()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1CD0CCC64()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1CD0CA774;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1EFA45B28 + dword_1EFA45B28))(v2, v3, v4);
}

uint64_t sub_1CD0CCCD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CD0CCCFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CD0CA72C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFA45B48 + dword_1EFA45B48))(a1, v4);
}

uint64_t sub_1CD0CCD6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1CD0CCD98()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CD0CA774;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFA45B58 + dword_1EFA45B58))(v2, v3);
}

void sub_1CD0CCE04(uint64_t a1)
{
  uint64_t v1;

  sub_1CD0CB3AC(a1, *(void **)(v1 + 16));
}

uint64_t sub_1CD0CCE0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45B80);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CD0CCE70(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45B80);
  return sub_1CD0CB4F0(a1);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1CD0CCED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkDetectAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CD0CCF1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8C4338;
  if (!qword_1ED8C4338)
  {
    v1 = sub_1CDAB822C();
    result = MEMORY[0x1D17BA838](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8C4338);
  }
  return result;
}

id sub_1CD0CCF64()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BB8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1CDAB82EC();
  v38 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CDAB8388();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v36 - v11;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBA268]), sel_init);
  if (v13)
  {
    v37 = v3;
    sub_1CDAB8244();
    v14 = (void *)sub_1CDAB84A8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setMacAddress_, v14);

    sub_1CDAB8274();
    v15 = (void *)sub_1CDAB84A8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setIfaceName_, v15);

    sub_1CDAB8280();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
    if (v16 == *MEMORY[0x1E0D27DD0])
    {
      v17 = v5;
      v18 = v38;
    }
    else
    {
      v17 = v5;
      if (v16 == *MEMORY[0x1E0D27DD8])
      {
        v18 = v38;
      }
      else
      {
        v18 = v38;
        if (v16 != *MEMORY[0x1E0D27DE0])
          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      }
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v19 = (void *)sub_1CDAB84A8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setType_, v19);

    sub_1CDAB8250();
    v20 = (void *)sub_1CDAB8508();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_mutableCopy);

    sub_1CDAB8688();
    swift_unknownObjectRelease();
    sub_1CD0D2F1C();
    if (swift_dynamicCast())
      v21 = v39;
    else
      v21 = 0;
    objc_msgSend(v13, sel_setIpv4Addresses_, v21);

    sub_1CDAB825C();
    v22 = (void *)sub_1CDAB8508();
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_mutableCopy);

    sub_1CDAB8688();
    swift_unknownObjectRelease();
    if (swift_dynamicCast())
      v23 = v39;
    else
      v23 = 0;
    objc_msgSend(v13, sel_setIpv6Addresses_, v23);

    sub_1CDAB8238();
    v24 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v2, 1, v37) == 1)
    {
      sub_1CD0D2F58((uint64_t)v2);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v17, v2, v24);
      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBA260]), sel_init);
      if (v25)
      {
        v26 = v25;
        v27 = sub_1CDAB82C8();
        v29 = v28;
        v30 = (void *)sub_1CDAB81D8();
        sub_1CD0D2F98(v27, v29);
        objc_msgSend(v26, sel_setSsid_, v30);

        v31 = sub_1CDAB82E0();
        v33 = v32;
        v34 = (void *)sub_1CDAB81D8();
        sub_1CD0D2F98(v31, v33);
        objc_msgSend(v26, sel_setBssid_, v34);

        objc_msgSend(v13, sel_setWifiInfo_, v26);
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v24);
    }
  }
  return v13;
}

uint64_t sub_1CD0CD448@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BB8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CDAB8388();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_ifaceName);
  if (!v11)
    goto LABEL_18;
  v12 = v11;
  v13 = sub_1CDAB84C0();

  v14 = objc_msgSend(a1, sel_type);
  if (!v14)
  {
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    v32 = sub_1CDAB828C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a2, 1, 1, v32);
  }
  v15 = v14;
  v37 = v13;
  v16 = sub_1CDAB84C0();
  v18 = v17;

  v19 = objc_msgSend(a1, sel_macAddress);
  if (!v19)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v20 = v19;
  v34 = a2;
  v21 = sub_1CDAB84C0();
  v35 = v22;
  v36 = v21;

  if (v16 == 0x74656E7265687465 && v18 == 0xE800000000000000 || (sub_1CDAB87CC() & 1) != 0)
  {
    v23 = (unsigned int *)MEMORY[0x1E0D27DD8];
    v24 = v34;
  }
  else
  {
    v23 = (unsigned int *)MEMORY[0x1E0D27DE0];
    v24 = v34;
    if ((v16 != 0x3132303865656569 || v18 != 0xE900000000000031) && (sub_1CDAB87CC() & 1) == 0)
      v23 = (unsigned int *)MEMORY[0x1E0D27DD0];
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *v23, v7);
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(a1, sel_ipv4Addresses);
  if (!v25 || (v26 = v25, v38 = 0, sub_1CDAB8514(), v26, !v38))
    swift_bridgeObjectRelease();
  v27 = objc_msgSend(a1, sel_ipv6Addresses);
  if (!v27 || (v28 = v27, v38 = 0, sub_1CDAB8514(), v28, !v38))
    swift_bridgeObjectRelease();
  v29 = sub_1CDAB82EC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 1, 1, v29);
  sub_1CDAB8268();
  v30 = sub_1CDAB828C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v24, 0, 1, v30);
}

id sub_1CD0CD7F4()
{
  id v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v17;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBA270]), sel_init);
  if (v0)
  {
    sub_1CDAB8310();
    v1 = (void *)sub_1CDAB84A8();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setIfaceName_, v1);

    objc_msgSend(v0, sel_setIsPrimary_, sub_1CDAB8364() & 1);
    sub_1CDAB834C();
    if (v2)
    {
      v3 = (void *)sub_1CDAB84A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setConfirmedIfaceName_, v3);

    }
    sub_1CDAB831C();
    v4 = (void *)sub_1CDAB8508();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_mutableCopy);

    sub_1CDAB8688();
    swift_unknownObjectRelease();
    sub_1CD0D2F1C();
    if (swift_dynamicCast())
      v5 = v17;
    else
      v5 = 0;
    objc_msgSend(v0, sel_setIpv4Addresses_, v5);

    sub_1CDAB8328();
    v6 = (void *)sub_1CDAB8508();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_mutableCopy);

    sub_1CDAB8688();
    swift_unknownObjectRelease();
    if (swift_dynamicCast())
      v7 = v17;
    else
      v7 = 0;
    objc_msgSend(v0, sel_setIpv6Addresses_, v7);

    sub_1CDAB8334();
    if (v8)
    {
      v9 = (void *)sub_1CDAB84A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setNetworkSignatureV4_, v9);

    }
    sub_1CDAB82F8();
    if (v10)
    {
      v11 = (void *)sub_1CDAB84A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setRouterIPv4_, v11);

    }
    sub_1CDAB8340();
    if (v12)
    {
      v13 = (void *)sub_1CDAB84A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setNetworkSignatureV6_, v13);

    }
    sub_1CDAB8304();
    if (v14)
    {
      v15 = (void *)sub_1CDAB84A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setRouterIPv6_, v15);

    }
  }
  return v0;
}

uint64_t sub_1CD0CDAC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;

  v4 = objc_msgSend(a1, sel_ifaceName);
  if (v4)
  {
    v5 = v4;
    sub_1CDAB84C0();

    objc_msgSend(a1, sel_isPrimary);
    v6 = objc_msgSend(a1, sel_confirmedIfaceName);
    if (v6)
    {
      v7 = v6;
      sub_1CDAB84C0();

    }
    v10 = objc_msgSend(a1, sel_ipv4Addresses);
    if (v10)
    {
      v11 = v10;
      sub_1CDAB8514();

    }
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(a1, sel_routerIPv4);
    if (v12)
    {
      v13 = v12;
      sub_1CDAB84C0();

    }
    v14 = objc_msgSend(a1, sel_networkSignatureV4);
    if (v14)
    {
      v15 = v14;
      sub_1CDAB84C0();

    }
    v16 = objc_msgSend(a1, sel_ipv6Addresses);
    if (v16)
    {
      v17 = v16;
      sub_1CDAB8514();

    }
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(a1, sel_routerIPv6);
    if (v18)
    {
      v19 = v18;
      sub_1CDAB84C0();

    }
    v20 = objc_msgSend(a1, sel_networkSignatureV6);
    if (v20)
    {
      v21 = v20;
      sub_1CDAB84C0();

    }
    sub_1CDAB8358();
    v22 = sub_1CDAB8370();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 0, 1, v22);
  }
  else
  {
    v8 = sub_1CDAB8370();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
}

void __swiftcall InterfaceInfo.init(name:type:hwAddr:)(HomeKitDaemonLegacy::InterfaceInfo *__return_ptr retstr, Swift::String name, Swift::String type, Swift::String hwAddr)
{
  retstr->name = name;
  retstr->type = type;
  retstr->hwAddr = hwAddr;
}

unint64_t sub_1CD0CDDA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45C00);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D50);
  v6 = sub_1CDAB879C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CD0D3594(v12, (uint64_t)v5, &qword_1EFA45C00);
    result = sub_1CD0D20E8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CDAB822C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CD0CDF38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4348);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D40);
  v6 = sub_1CDAB879C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CD0D3594(v12, (uint64_t)v5, &qword_1ED8C4348);
    result = sub_1CD0D20E8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CDAB822C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7] + 24 * v16;
    v20 = *((_QWORD *)v9 + 2);
    *(_OWORD *)v19 = *(_OWORD *)v9;
    *(_QWORD *)(v19 + 16) = v20;
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CD0CE0E0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45B98);
  v2 = (_QWORD *)sub_1CDAB879C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_1CD0D2084(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CD0CE1F8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BC8);
  v2 = (_QWORD *)sub_1CDAB879C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1CD0D2084(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CD0CE310(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45C08);
  v2 = sub_1CDAB879C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1CD0D3594(v6, (uint64_t)&v15, &qword_1EFA45C10);
    v7 = v15;
    v8 = v16;
    result = sub_1CD0D2084(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_1CD0C9BF8(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1CD0CE450()
{
  return swift_deallocClassInstance();
}

CFStringRef sub_1CD0CE468(CFStringRef domain, CFStringRef ifname, CFStringRef entity)
{
  return SCDynamicStoreKeyCreateNetworkInterfaceEntity((CFAllocatorRef)*MEMORY[0x1E0C9AE00], domain, ifname, entity);
}

uint64_t sub_1CD0CE488(const __SCDynamicStore *a1, const __CFString *a2)
{
  CFArrayRef v2;
  uint64_t v3;
  CFArrayRef v4;

  v2 = SCDynamicStoreCopyKeyList(a1, a2);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v4 = v2;
    type metadata accessor for CFString(0);
    sub_1CDAB8514();

  }
  return v3;
}

void sub_1CD0CE4EC()
{
  static NetworkInfoController.NetworkInfoKey = 0x496B726F7774654ELL;
  unk_1EFA585E8 = 0xEB000000006F666ELL;
}

uint64_t *NetworkInfoController.NetworkInfoKey.unsafeMutableAddressor()
{
  if (qword_1EFA45960 != -1)
    swift_once();
  return &static NetworkInfoController.NetworkInfoKey;
}

uint64_t static NetworkInfoController.NetworkInfoKey.getter()
{
  uint64_t v0;

  if (qword_1EFA45960 != -1)
    swift_once();
  v0 = static NetworkInfoController.NetworkInfoKey;
  swift_bridgeObjectRetain();
  return v0;
}

void *NetworkInfoController.NetworkServiceInfoKey.unsafeMutableAddressor()
{
  return &static NetworkInfoController.NetworkServiceInfoKey;
}

unint64_t static NetworkInfoController.NetworkServiceInfoKey.getter()
{
  return 0xD000000000000012;
}

id NetworkInfoController.__allocating_init(dataSource:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_1CD0D29FC(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

id NetworkInfoController.init(dataSource:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_1CD0D2364((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

id NetworkInfoController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id NetworkInfoController.init()()
{
  uint64_t v0;
  id v1;

  type metadata accessor for NetworkInfoSCDataSource();
  v0 = swift_allocObject();
  v1 = sub_1CD0D2AB8(v0);
  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v1;
}

id NetworkInfoController.__deallocating_deinit()
{
  char *v0;
  void *v1;
  objc_super v3;

  v1 = *(void **)&v0[OBJC_IVAR___HMDNetworkInfoController_store];
  *(_QWORD *)&v0[OBJC_IVAR___HMDNetworkInfoController_store] = 0;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for NetworkInfoController();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

Swift::Void __swiftcall NetworkInfoController.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR___HMDNetworkInfoController_dataSource), v1);
  v6 = v0;
  v3 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t (*)(), uint64_t *, uint64_t, uint64_t))(v2 + 8))(0xD000000000000015, 0x80000001CDB7EA80, sub_1CD0D2C18, &v5, v1, v2);
  v4 = *(void **)(v0 + OBJC_IVAR___HMDNetworkInfoController_store);
  *(_QWORD *)(v0 + OBJC_IVAR___HMDNetworkInfoController_store) = v3;

}

void sub_1CD0CEA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __CFString *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t *v21;
  CFStringRef v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const __CFAllocator *v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  __CFString *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(id, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  unint64_t v42;
  __CFString *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  __CFString *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(id, __CFString *, uint64_t, uint64_t);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(__CFString *, uint64_t, uint64_t, uint64_t);
  char *v67;
  char v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  int v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  CFStringRef v103;
  __CFString *v104;
  os_log_t v105;
  uint64_t v106;
  __CFString *v107;
  unint64_t v108;
  void *v109;
  unint64_t v110;
  unint64_t v111;
  const __CFAllocator *v112;
  CFStringRef NetworkGlobalEntity;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(id, CFStringRef, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  char *v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  NSObject *v128;
  os_log_type_t v129;
  _BOOL4 v130;
  uint8_t *v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  NSObject *v135;
  os_log_type_t v136;
  uint8_t *v137;
  CFStringRef NetworkServiceEntity;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(id, CFStringRef, uint64_t, uint64_t);
  unint64_t v142;
  NSObject *v143;
  os_log_type_t v144;
  _BOOL4 v145;
  uint8_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  uint64_t v167;
  unint64_t v168;
  char v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  int v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  char v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  __CFString *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  _QWORD *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  CFStringRef v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t (*v205)(id, CFStringRef, uint64_t, uint64_t);
  unint64_t v206;
  NSObject *v207;
  os_log_type_t v208;
  uint8_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  unint64_t v216;
  const __CFString *v217;
  const __CFString *v218;
  unint64_t v219;
  CFAllocatorRef v220;
  void *v221;
  BOOL v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  char v233;
  void (*v234)(char *, CFStringRef);
  unint64_t v235;
  char v236;
  int v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  char v242;
  uint64_t v243;
  int v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  char v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  uint64_t v255;
  CFStringRef v256;
  uint64_t v257;
  BOOL v258;
  int64_t v259;
  _QWORD *v260;
  unint64_t v261;
  char *v262;
  unint64_t v263;
  unint64_t v264;
  NSObject *v265;
  os_log_type_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unint64_t v275;
  unint64_t v276;
  _QWORD v277[2];
  char *v278;
  uint64_t v279;
  __int128 v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t *v283;
  unsigned int v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  os_log_t v289;
  uint64_t v290;
  uint64_t v291;
  __CFString *v292;
  __CFString *v293;
  __CFString *v294;
  CFStringRef v295;
  const __CFString *v296;
  uint64_t v297;
  CFStringRef v298;
  uint64_t v299;
  CFStringRef v300;
  uint64_t v301;
  CFAllocatorRef v302;
  unint64_t v303;
  void (*v304)(char *, CFStringRef);
  __CFString *v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  CFStringRef v310;
  _QWORD *v311;
  uint64_t length;
  uint64_t v313;
  _QWORD *v314;
  id v315;
  char *v316;
  uint64_t v317;
  _QWORD *v318;
  id v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  _QWORD *v324;
  uint64_t v325;
  _QWORD *v326;
  unint64_t v327;

  v1 = v0;
  v286 = sub_1CDAB8370();
  v285 = *(_QWORD *)(v286 - 8);
  MEMORY[0x1E0C80A78](v286);
  v3 = (char *)v277 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v299 = sub_1CDAB828C();
  v296 = *(const __CFString **)(v299 - 8);
  MEMORY[0x1E0C80A78](v299);
  v5 = (__CFString *)((char *)v277 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BB8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v297 = (uint64_t)v277 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (__CFString *)((char *)v277 - v9);
  v300 = (CFStringRef)sub_1CDAB8388();
  length = v300[-1].length;
  v11 = MEMORY[0x1E0C80A78](v300);
  v307 = (char *)v277 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v316 = (char *)v277 - v13;
  v14 = *(void **)(v1 + OBJC_IVAR___HMDNetworkInfoController_store);
  if (!v14)
  {
    v125 = sub_1CDAB83F4();
    v126 = sub_1CDAB85EC();
    if (os_log_type_enabled(v125, v126))
    {
      v127 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v127 = 0;
      _os_log_impl(&dword_1CD062000, v125, v126, "No store", v127, 2u);
      MEMORY[0x1D17BA8C8](v127, -1, -1);
    }

    return;
  }
  v278 = v3;
  v15 = *(_QWORD *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 24);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 32);
  v314 = (_QWORD *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource), v15);
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 16);
  v315 = v14;
  v18 = v17(v15, v16);
  v20 = *(_QWORD *)(v18 + 16);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    v135 = sub_1CDAB83F4();
    v136 = sub_1CDAB85EC();
    if (os_log_type_enabled(v135, v136))
    {
      v137 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v137 = 0;
      _os_log_impl(&dword_1CD062000, v135, v136, "Couldn't obtain interfaces", v137, 2u);
      MEMORY[0x1D17BA8C8](v137, -1, -1);
    }

    return;
  }
  v326 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v327 = MEMORY[0x1E0DEE9D8];
  v301 = v1 + OBJC_IVAR___HMDNetworkInfoController_logger;
  LODWORD(v308) = *MEMORY[0x1E0D27DE0];
  v311 = *(_QWORD **)(length + 104);
  v284 = *MEMORY[0x1E0D27DD8];
  v310 = (CFStringRef)*MEMORY[0x1E0CE8B30];
  v298 = (CFStringRef)*MEMORY[0x1E0CE8B78];
  v283 = &v321;
  v288 = *MEMORY[0x1E0CE8CC8];
  v277[1] = v18;
  v21 = (uint64_t *)(v18 + 72);
  v295 = (CFStringRef)*MEMORY[0x1E0CE8B80];
  v287 = *MEMORY[0x1E0CE8D28];
  v279 = MEMORY[0x1E0DEE9B0] + 8;
  v282 = *MEMORY[0x1E0CE8B58];
  v281 = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)&v19 = 136316162;
  v280 = v19;
  v293 = v5;
  v294 = v10;
  v22 = v300;
  do
  {
    v23 = *(v21 - 5);
    v24 = *(v21 - 4);
    v26 = (const __CFAllocator *)*(v21 - 3);
    v25 = (void *)*(v21 - 2);
    v27 = *(v21 - 1);
    v317 = *v21;
    ((void (*)(char *, _QWORD, CFStringRef))v311)(v316, v308, v22);
    v319 = v25;
    v28 = v26 == (const __CFAllocator *)0x3132303845454549 && v25 == (void *)0xE900000000000031;
    v306 = v20;
    v318 = (_QWORD *)v23;
    v309 = v27;
    v302 = v26;
    if (!v28)
    {
      if ((sub_1CDAB87CC() & 1) == 0)
      {
        v29 = v26 == (const __CFAllocator *)0x74656E7265687445 && v319 == (id)0xE800000000000000;
        if (!v29 && (sub_1CDAB87CC() & 1) == 0)
        {
          (*(void (**)(char *, CFStringRef))(length + 8))(v316, v22);
          goto LABEL_55;
        }
      }
      if (v26 == (const __CFAllocator *)0x74656E7265687445 && v319 == (id)0xE800000000000000)
        goto LABEL_19;
    }
    if ((sub_1CDAB87CC() & 1) != 0)
    {
LABEL_19:
      v31 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = v316;
      (*(void (**)(char *, CFStringRef))(length + 8))(v316, v22);
      ((void (*)(char *, _QWORD, CFStringRef))v311)(v32, v284, v22);
    }
    else
    {
      v31 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v322 = MEMORY[0x1E0DEE9D8];
    v321 = MEMORY[0x1E0DEE9D8];
    v33 = v314;
    v34 = v314[3];
    v35 = v314[4];
    __swift_project_boxed_opaque_existential_1(v314, v34);
    v313 = v24;
    v36 = (void *)sub_1CDAB84A8();
    v37 = (*(uint64_t (**)(CFStringRef, void *, CFStringRef, uint64_t, uint64_t))(v35 + 24))(v310, v36, v298, v34, v35);

    v38 = v33[3];
    v39 = v33[4];
    __swift_project_boxed_opaque_existential_1(v33, v38);
    v40 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v39 + 32);
    v303 = v37;
    v41 = v40(v315, v37, v38, v39);
    v42 = sub_1CD0D1220(v41, &qword_1EFA45BE8, &qword_1EFA45BD8);
    swift_bridgeObjectRelease();
    v43 = v31;
    if (v42)
    {
      v44 = sub_1CDAB84C0();
      if (*(_QWORD *)(v42 + 16) && (v46 = sub_1CD0D2084(v44, v45), (v47 & 1) != 0))
      {
        v48 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v46);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v322 = v48;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v49 = v314;
    v50 = v314[3];
    v51 = v314[4];
    __swift_project_boxed_opaque_existential_1(v314, v50);
    v52 = (void *)sub_1CDAB84A8();
    v53 = (__CFString *)(*(uint64_t (**)(CFStringRef, void *, CFStringRef, uint64_t, uint64_t))(v51 + 24))(v310, v52, v295, v50, v51);

    v54 = v49[3];
    v55 = v49[4];
    __swift_project_boxed_opaque_existential_1(v49, v54);
    v56 = *(uint64_t (**)(id, __CFString *, uint64_t, uint64_t))(v55 + 32);
    v305 = v53;
    v57 = v56(v315, v53, v54, v55);
    v58 = sub_1CD0D1220(v57, &qword_1EFA45BC8, &qword_1EFA45BA8);
    swift_bridgeObjectRelease();
    if (v58)
    {
      v59 = sub_1CDAB84C0();
      if (*(_QWORD *)(v58 + 16) && (v61 = sub_1CD0D2084(v59, v60), (v62 & 1) != 0))
      {
        v63 = *(_QWORD *)(*(_QWORD *)(v58 + 56) + 8 * v61);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v64 = sub_1CD0D153C(v63);
        swift_bridgeObjectRelease();
        if (!v64)
          v64 = MEMORY[0x1E0DEE9D8];
        swift_beginAccess();
        v321 = v64;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v65 = sub_1CDAB82EC();
    v66 = *(void (**)(__CFString *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56);
    v66(v43, 1, 1, v65);
    v67 = v307;
    ((void (*)(char *, _QWORD, CFStringRef))v311)(v307, v308, v22);
    v68 = sub_1CDAB837C();
    v304 = *(void (**)(char *, CFStringRef))(length + 8);
    v304(v67, v22);
    if ((v68 & 1) != 0)
    {
      v69 = v314;
      v70 = v314[3];
      v71 = v314[4];
      __swift_project_boxed_opaque_existential_1(v314, v70);
      v72 = (void *)sub_1CDAB84A8();
      v73 = (void *)(*(uint64_t (**)(CFStringRef, void *, uint64_t, uint64_t, uint64_t))(v71 + 24))(v310, v72, v282, v70, v71);

      v74 = v69[3];
      v75 = v69[4];
      __swift_project_boxed_opaque_existential_1(v69, v74);
      v76 = (*(uint64_t (**)(id, void *, uint64_t, uint64_t))(v75 + 32))(v315, v73, v74, v75);
      if (*(_QWORD *)(v76 + 16))
      {
        v77 = sub_1CD0D2084(0x4449535342, 0xE500000000000000);
        v43 = v294;
        v22 = v300;
        if ((v78 & 1) != 0
          && (v320 = *(_QWORD *)(*(_QWORD *)(v76 + 56) + 8 * v77),
              swift_unknownObjectRetain(),
              (swift_dynamicCast() & 1) != 0))
        {
          v80 = (uint64_t)v324;
          v79 = v325;
          if (*(_QWORD *)(v76 + 16) && (v81 = sub_1CD0D2084(1145656147, 0xE400000000000000), (v82 & 1) != 0))
          {
            v83 = *(_QWORD *)(*(_QWORD *)(v76 + 56) + 8 * v81);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            v320 = v83;
            if ((swift_dynamicCast() & 1) != 0)
            {
              v84 = v297;
              sub_1CDAB82D4();

              v43 = v294;
              sub_1CD0D2F58((uint64_t)v294);
              v66((__CFString *)v84, 0, 1, v65);
              sub_1CD0D3020(v84, (uint64_t)v43);
            }
            else
            {

              sub_1CD0D2F98(v80, v79);
              v43 = v294;
            }
          }
          else
          {

            swift_bridgeObjectRelease();
            sub_1CD0D2F98(v80, v79);
          }
        }
        else
        {
          swift_bridgeObjectRelease();

        }
      }
      else
      {
        swift_bridgeObjectRelease();

        v43 = v294;
        v22 = v300;
      }
    }
    v85 = v313;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v86 = sub_1CDAB83F4();
    v87 = sub_1CDAB85E0();
    v88 = v87;
    if (os_log_type_enabled(v86, v87))
    {
      v89 = swift_slowAlloc();
      LODWORD(v291) = v88;
      v90 = v85;
      v91 = v89;
      v290 = swift_slowAlloc();
      v324 = (_QWORD *)v290;
      *(_DWORD *)v91 = v280;
      swift_beginAccess();
      v92 = swift_bridgeObjectRetain();
      v93 = MEMORY[0x1E0DEA968];
      v94 = MEMORY[0x1D17B82F4](v92, MEMORY[0x1E0DEA968]);
      v96 = v95;
      swift_bridgeObjectRelease();
      v320 = sub_1CD0C72F0(v94, v96, (uint64_t *)&v324);
      v292 = (__CFString *)v21;
      v97 = (unint64_t)v319;
      v98 = v317;
      v289 = v86;
      sub_1CDAB8664();
      swift_bridgeObjectRelease();
      *(_WORD *)(v91 + 12) = 2080;
      swift_beginAccess();
      v99 = swift_bridgeObjectRetain();
      v100 = MEMORY[0x1D17B82F4](v99, v93);
      v102 = v101;
      swift_bridgeObjectRelease();
      v103 = v300;
      v320 = sub_1CD0C72F0(v100, v102, (uint64_t *)&v324);
      sub_1CDAB8664();
      v104 = v294;
      swift_bridgeObjectRelease();
      *(_WORD *)(v91 + 22) = 2080;
      swift_bridgeObjectRetain();
      v320 = sub_1CD0C72F0(v309, v98, (uint64_t *)&v324);
      sub_1CDAB8664();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v91 + 32) = 2080;
      swift_bridgeObjectRetain();
      v320 = sub_1CD0C72F0((uint64_t)v318, v90, (uint64_t *)&v324);
      sub_1CDAB8664();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v91 + 42) = 2080;
      swift_bridgeObjectRetain();
      v320 = sub_1CD0C72F0((uint64_t)v302, v97, (uint64_t *)&v324);
      v21 = (uint64_t *)v292;
      sub_1CDAB8664();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v105 = v289;
      _os_log_impl(&dword_1CD062000, v289, (os_log_type_t)v291, "ObtainedIP: %s  %s mac: %s name: %s type: %s", (uint8_t *)v91, 0x34u);
      v106 = v290;
      swift_arrayDestroy();
      MEMORY[0x1D17BA8C8](v106, -1, -1);
      MEMORY[0x1D17BA8C8](v91, -1, -1);

      v107 = v293;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      v107 = v293;
      v104 = v43;
      v103 = v22;
    }
    v22 = v103;
    (*(void (**)(char *, char *, CFStringRef))(length + 16))(v307, v316, v103);
    swift_beginAccess();
    swift_beginAccess();
    v10 = v104;
    sub_1CD0D3594((uint64_t)v104, v297, &qword_1EFA45BB8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CDAB8268();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v108 = v327;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v108 = sub_1CD0D1C08(0, *(_QWORD *)(v108 + 16) + 1, 1, v108, &qword_1EFA45BB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D27D08]);
    v20 = v306;
    v109 = (void *)v303;
    v111 = *(_QWORD *)(v108 + 16);
    v110 = *(_QWORD *)(v108 + 24);
    if (v111 >= v110 >> 1)
      v108 = sub_1CD0D1C08(v110 > 1, v111 + 1, 1, v108, &qword_1EFA45BB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D27D08]);
    *(_QWORD *)(v108 + 16) = v111 + 1;
    ((void (*)(unint64_t, __CFString *, uint64_t))v296[1].isa)(v108 + ((LOBYTE(v296[2].data) + 32) & ~(unint64_t)LOBYTE(v296[2].data)) + v296[2].info * v111, v107, v299);

    v327 = v108;
    sub_1CD0D2F58((uint64_t)v10);
    v304(v316, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_55:
    v21 += 6;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  v112 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  NetworkGlobalEntity = SCDynamicStoreKeyCreateNetworkGlobalEntity((CFAllocatorRef)*MEMORY[0x1E0C9AE00], v310, v298);
  v114 = v314[3];
  v115 = v314[4];
  __swift_project_boxed_opaque_existential_1(v314, v114);
  v116 = *(uint64_t (**)(id, CFStringRef, uint64_t, uint64_t))(v115 + 32);
  v294 = (__CFString *)NetworkGlobalEntity;
  v117 = v116(v315, NetworkGlobalEntity, v114, v115);
  v118 = v117;
  if (*(_QWORD *)(v117 + 16) && (v119 = sub_1CD0D2084(0x537972616D697250, 0xEE00656369767265), (v120 & 1) != 0))
  {
    v121 = *(_QWORD *)(*(_QWORD *)(v118 + 56) + 8 * v119);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v322 = v121;
    v122 = swift_dynamicCast();
    v123 = (uint64_t)v324;
    if (!v122)
      v123 = 0;
    length = v123;
    if (v122)
      v124 = (char *)v325;
    else
      v124 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    length = 0;
    v124 = 0;
  }
  swift_bridgeObjectRetain_n();
  v128 = sub_1CDAB83F4();
  v129 = sub_1CDAB85D4();
  v130 = os_log_type_enabled(v128, v129);
  v316 = v124;
  if (v130)
  {
    v131 = (uint8_t *)swift_slowAlloc();
    v132 = swift_slowAlloc();
    v324 = (_QWORD *)v132;
    *(_DWORD *)v131 = 136315138;
    if (v124)
      v133 = length;
    else
      v133 = 7104878;
    if (v124)
      v134 = (unint64_t)v124;
    else
      v134 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    v322 = sub_1CD0C72F0(v133, v134, (uint64_t *)&v324);
    v124 = v316;
    sub_1CDAB8664();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CD062000, v128, v129, "primaryServiceName %s", v131, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17BA8C8](v132, -1, -1);
    MEMORY[0x1D17BA8C8](v131, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v300 = (CFStringRef)*MEMORY[0x1E0CE8B20];
  NetworkServiceEntity = SCDynamicStoreKeyCreateNetworkServiceEntity(v112, v310, v300, v298);
  v139 = v314[3];
  v140 = v314[4];
  __swift_project_boxed_opaque_existential_1(v314, v139);
  v141 = *(uint64_t (**)(id, CFStringRef, uint64_t, uint64_t))(v140 + 40);
  v293 = (__CFString *)NetworkServiceEntity;
  v142 = v141(v315, NetworkServiceEntity, v139, v140);
  swift_bridgeObjectRetain_n();
  v143 = sub_1CDAB83F4();
  v144 = sub_1CDAB85D4();
  v145 = os_log_type_enabled(v143, v144);
  v302 = v112;
  if (v145)
  {
    v146 = (uint8_t *)swift_slowAlloc();
    v147 = swift_slowAlloc();
    v324 = (_QWORD *)v147;
    *(_DWORD *)v146 = 136315138;
    type metadata accessor for CFString(0);
    v149 = v148;
    v150 = swift_bridgeObjectRetain();
    v151 = MEMORY[0x1D17B82F4](v150, v149);
    v153 = v152;
    swift_bridgeObjectRelease();
    v154 = v151;
    v124 = v316;
    v322 = sub_1CD0C72F0(v154, v153, (uint64_t *)&v324);
    sub_1CDAB8664();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CD062000, v143, v144, "v4ServiceKeys %s", v146, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17BA8C8](v147, -1, -1);
    MEMORY[0x1D17BA8C8](v146, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (v142 >> 62)
    goto LABEL_202;
  v155 = *(_QWORD *)((v142 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_86:
  if (!v155)
  {
    v311 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_141:
    swift_bridgeObjectRelease();
    v202 = SCDynamicStoreKeyCreateNetworkServiceEntity(v302, v310, v300, v295);
    v203 = v314[3];
    v204 = v314[4];
    __swift_project_boxed_opaque_existential_1(v314, v203);
    v205 = *(uint64_t (**)(id, CFStringRef, uint64_t, uint64_t))(v204 + 40);
    v292 = (__CFString *)v202;
    v206 = v205(v315, v202, v203, v204);
    swift_bridgeObjectRetain_n();
    v207 = sub_1CDAB83F4();
    v208 = sub_1CDAB85D4();
    if (os_log_type_enabled(v207, v208))
    {
      v209 = (uint8_t *)swift_slowAlloc();
      v210 = swift_slowAlloc();
      v324 = (_QWORD *)v210;
      *(_DWORD *)v209 = 136315138;
      type metadata accessor for CFString(0);
      v212 = v211;
      v213 = swift_bridgeObjectRetain();
      v214 = MEMORY[0x1D17B82F4](v213, v212);
      v216 = v215;
      swift_bridgeObjectRelease();
      v322 = sub_1CD0C72F0(v214, v216, (uint64_t *)&v324);
      sub_1CDAB8664();
      swift_bridgeObjectRelease_n();
      v124 = v316;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CD062000, v207, v208, "v6serviceKeys %s", v209, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17BA8C8](v210, -1, -1);
      MEMORY[0x1D17BA8C8](v209, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v142 = (unint64_t)v311;
    if (v206 >> 62)
    {
      swift_bridgeObjectRetain();
      v217 = (const __CFString *)sub_1CDAB8778();
      swift_bridgeObjectRelease();
      if (v217)
        goto LABEL_146;
    }
    else
    {
      v217 = *(const __CFString **)((v206 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v217)
      {
LABEL_146:
        v218 = 0;
        v219 = v206 & 0xC000000000000001;
        v220 = (CFAllocatorRef)(v206 & 0xFFFFFFFFFFFFFF8);
        v310 = (CFStringRef)(v206 + 32);
        v313 = *MEMORY[0x1E0CE8C08];
        v300 = (CFStringRef)*MEMORY[0x1E0CE8D78];
        v298 = (CFStringRef)(v142 + 72);
        v308 = MEMORY[0x1E0DEE9B0] + 8;
        v297 = 0x80000001CDB299A0;
        v291 = 0x80000001CDB299C0;
        v303 = v206 & 0xC000000000000001;
        v302 = (CFAllocatorRef)(v206 & 0xFFFFFFFFFFFFFF8);
        v296 = (const __CFString *)v206;
        v295 = v217;
        do
        {
          if (v219)
          {
            v221 = (void *)MEMORY[0x1D17B8504](v218, v206);
          }
          else
          {
            if ((unint64_t)v218 >= *((_QWORD *)v220 + 2))
              goto LABEL_201;
            v221 = *(&v310->isa + (_QWORD)v218);
          }
          v319 = v221;
          v222 = __OFADD__(v218, 1);
          v218 = (const __CFString *)((char *)v218 + 1);
          if (v222)
          {
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            swift_bridgeObjectRetain();
            v155 = sub_1CDAB8778();
            swift_bridgeObjectRelease();
            goto LABEL_86;
          }
          v223 = v314[3];
          v224 = v314[4];
          __swift_project_boxed_opaque_existential_1(v314, v223);
          v225 = (*(uint64_t (**)(id, id, uint64_t, uint64_t))(v224 + 32))(v315, v319, v223, v224);
          v226 = sub_1CDAB84C0();
          if (*(_QWORD *)(v225 + 16) && (v228 = sub_1CD0D2084(v226, v227), (v229 & 1) != 0))
          {
            v230 = *(_QWORD *)(*(_QWORD *)(v225 + 56) + 8 * v228);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            v322 = v230;
            if ((swift_dynamicCast() & 1) != 0)
            {
              v317 = (uint64_t)v324;
              v318 = (_QWORD *)v325;
              if (v124)
              {
                v324 = (_QWORD *)sub_1CDAB84C0();
                v325 = v231;
                v322 = length;
                v323 = v124;
                sub_1CD0D2FDC();
                swift_bridgeObjectRetain();
                sub_1CDAB867C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              if (!*(_QWORD *)(v225 + 16))
              {
                v234 = 0;
                goto LABEL_173;
              }
              v232 = sub_1CD0D2084(0xD000000000000010, v297);
              if ((v233 & 1) != 0)
              {
                v322 = *(_QWORD *)(*(_QWORD *)(v225 + 56) + 8 * v232);
                swift_unknownObjectRetain();
                if (swift_dynamicCast())
                  v234 = (void (*)(char *, CFStringRef))v325;
                else
                  v234 = 0;
                if (!*(_QWORD *)(v225 + 16))
                {
LABEL_173:
                  v309 = 0;
                  goto LABEL_174;
                }
              }
              else
              {
                v234 = 0;
                if (!*(_QWORD *)(v225 + 16))
                  goto LABEL_173;
              }
              v235 = sub_1CD0D2084(0xD000000000000016, v291);
              if ((v236 & 1) == 0)
                goto LABEL_173;
              v322 = *(_QWORD *)(*(_QWORD *)(v225 + 56) + 8 * v235);
              swift_unknownObjectRetain();
              v237 = swift_dynamicCast();
              v238 = v325;
              if (!v237)
                v238 = 0;
              v309 = v238;
LABEL_174:
              v239 = sub_1CDAB84C0();
              if (*(_QWORD *)(v225 + 16) && (v241 = sub_1CD0D2084(v239, v240), (v242 & 1) != 0))
              {
                v243 = *(_QWORD *)(*(_QWORD *)(v225 + 56) + 8 * v241);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                v322 = v243;
                v244 = swift_dynamicCast();
                v245 = (char *)v325;
                if (!v244)
                  v245 = 0;
                v307 = v245;
              }
              else
              {
                swift_bridgeObjectRelease();
                v307 = 0;
              }
              v246 = sub_1CDAB84C0();
              v248 = *(_QWORD *)(v225 + 16);
              v305 = (__CFString *)v218;
              if (v248 && (v249 = sub_1CD0D2084(v246, v247), (v250 & 1) != 0))
              {
                v251 = *(_QWORD *)(*(_QWORD *)(v225 + 56) + 8 * v249);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v324 = (_QWORD *)v251;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BD8);
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v252 = v322;
LABEL_186:
                  v306 = v252;
                  v253 = (uint64_t)v318;
                  v254 = (void *)v317;
                  v255 = *(_QWORD *)(v142 + 16);
                  if (v255)
                  {
                    v304 = v234;
                    v256 = v298;
                    while (1)
                    {
                      v257 = v256[-1].length;
                      v258 = v256[-1].isa == v254 && v256[-1].info == v253;
                      if (v258 || (sub_1CDAB87CC() & 1) != 0)
                        break;
                      v256 = (CFStringRef)((char *)v256 + 120);
                      --v255;
                      v253 = (uint64_t)v318;
                      v254 = (void *)v317;
                      if (!v255)
                      {

                        v124 = v316;
                        v142 = (unint64_t)v311;
                        v206 = (unint64_t)v296;
                        v217 = v295;
                        v218 = v305;
                        goto LABEL_199;
                      }
                    }
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease();

                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v217 = v295;
                    v218 = v305;
                    if (v257)
                    {
                      swift_bridgeObjectRelease();
                      v309 = v257;
                    }
                    v124 = v316;
                    v142 = (unint64_t)v311;
                    v206 = (unint64_t)v296;
                  }
                  else
                  {

                    v218 = v305;
                  }
LABEL_199:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v219 = v303;
                  v220 = v302;
                  continue;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              v252 = MEMORY[0x1E0DEE9D8];
              goto LABEL_186;
            }

            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
        }
        while (v218 != v217);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v259 = *(_QWORD *)(v142 + 16);
    if (v259)
    {
      v324 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1CD0DF750(0, v259, 0);
      v260 = v324;
      v261 = v142 + 72;
      v262 = v278;
      do
      {
        v318 = (_QWORD *)v259;
        v319 = v260;
        LODWORD(v317) = *(unsigned __int8 *)(v261 - 40);
        v316 = *(char **)(v261 - 32);
        v314 = *(_QWORD **)(v261 - 16);
        v313 = *(_QWORD *)(v261 + 24);
        length = *(_QWORD *)(v261 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v260 = v319;
        sub_1CDAB8358();
        v324 = v260;
        v264 = v260[2];
        v263 = v260[3];
        if (v264 >= v263 >> 1)
        {
          sub_1CD0DF750(v263 > 1, v264 + 1, 1);
          v262 = v278;
          v260 = v324;
        }
        v261 += 120;
        v260[2] = v264 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v285 + 32))((unint64_t)v260+ ((*(unsigned __int8 *)(v285 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v285 + 80))+ *(_QWORD *)(v285 + 72) * v264, v262, v286);
        v259 = (int64_t)v318 - 1;
      }
      while (v318 != (_QWORD *)1);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v260 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    v326 = v260;
    v265 = sub_1CDAB83F4();
    v266 = sub_1CDAB85D4();
    if (os_log_type_enabled(v265, v266))
    {
      v267 = swift_slowAlloc();
      v268 = swift_slowAlloc();
      v324 = (_QWORD *)v268;
      *(_DWORD *)v267 = 136315394;
      swift_beginAccess();
      v269 = swift_bridgeObjectRetain();
      v270 = MEMORY[0x1D17B82F4](v269, v299);
      v272 = v271;
      swift_bridgeObjectRelease();
      v321 = sub_1CD0C72F0(v270, v272, (uint64_t *)&v324);
      sub_1CDAB8664();
      swift_bridgeObjectRelease();
      *(_WORD *)(v267 + 12) = 2080;
      swift_beginAccess();
      v273 = swift_bridgeObjectRetain();
      v274 = MEMORY[0x1D17B82F4](v273, v286);
      v276 = v275;
      swift_bridgeObjectRelease();
      v320 = sub_1CD0C72F0(v274, v276, (uint64_t *)&v324);
      sub_1CDAB8664();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CD062000, v265, v266, "%s %s", (uint8_t *)v267, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17BA8C8](v268, -1, -1);
      MEMORY[0x1D17BA8C8](v267, -1, -1);
    }

    swift_beginAccess();
    return;
  }
  if (v155 >= 1)
  {
    v156 = 0;
    v319 = (id)(MEMORY[0x1E0DEE9B0] + 8);
    v304 = (void (*)(char *, CFStringRef))*MEMORY[0x1E0CE8D10];
    v303 = 0x80000001CDB299A0;
    v298 = (CFStringRef)0x80000001CDB299C0;
    v311 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if ((v142 & 0xC000000000000001) != 0)
      {
        v157 = (id)MEMORY[0x1D17B8504](v156, v142);
        if (!v124)
          goto LABEL_96;
      }
      else
      {
        v157 = *(id *)(v142 + 8 * v156 + 32);
        if (!v124)
        {
LABEL_96:
          v159 = 0;
          goto LABEL_97;
        }
      }
      v324 = (_QWORD *)sub_1CDAB84C0();
      v325 = v158;
      v322 = length;
      v323 = v124;
      sub_1CD0D2FDC();
      swift_bridgeObjectRetain();
      v159 = sub_1CDAB867C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_97:
      v160 = v314[3];
      v161 = v314[4];
      __swift_project_boxed_opaque_existential_1(v314, v160);
      v162 = (*(uint64_t (**)(id, id, uint64_t, uint64_t))(v161 + 32))(v315, v157, v160, v161);
      v163 = sub_1CDAB84C0();
      if (*(_QWORD *)(v162 + 16))
      {
        v165 = sub_1CD0D2084(v163, v164);
        if ((v166 & 1) != 0)
        {
          v167 = *(_QWORD *)(*(_QWORD *)(v162 + 56) + 8 * v165);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          v322 = v167;
          if ((swift_dynamicCast() & 1) == 0)
          {

            swift_bridgeObjectRelease();
            goto LABEL_91;
          }
          v318 = v324;
          v317 = v325;
          if (!*(_QWORD *)(v162 + 16))
          {
            v309 = 0;
            v313 = 0;
            goto LABEL_119;
          }
          v168 = sub_1CD0D2084(0xD000000000000010, v303);
          if ((v169 & 1) != 0)
          {
            v322 = *(_QWORD *)(*(_QWORD *)(v162 + 56) + 8 * v168);
            swift_unknownObjectRetain();
            v170 = swift_dynamicCast();
            v171 = (uint64_t)v324;
            if (!v170)
              v171 = 0;
            v313 = v171;
            if (v170)
              v172 = v325;
            else
              v172 = 0;
            v309 = v172;
            if (!*(_QWORD *)(v162 + 16))
            {
LABEL_119:
              v308 = 0;
              v307 = 0;
              goto LABEL_120;
            }
          }
          else
          {
            v313 = 0;
            v309 = 0;
            if (!*(_QWORD *)(v162 + 16))
              goto LABEL_119;
          }
          v173 = sub_1CD0D2084(0xD000000000000016, (uint64_t)v298);
          if ((v174 & 1) == 0)
            goto LABEL_119;
          v322 = *(_QWORD *)(*(_QWORD *)(v162 + 56) + 8 * v173);
          swift_unknownObjectRetain();
          v175 = swift_dynamicCast();
          v176 = (uint64_t)v324;
          if (!v175)
            v176 = 0;
          v308 = v176;
          if (v175)
            v177 = (char *)v325;
          else
            v177 = 0;
          v307 = v177;
LABEL_120:
          v178 = sub_1CDAB84C0();
          if (*(_QWORD *)(v162 + 16) && (v180 = sub_1CD0D2084(v178, v179), (v181 & 1) != 0))
          {
            v182 = *(_QWORD *)(*(_QWORD *)(v162 + 56) + 8 * v180);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            v322 = v182;
            v183 = swift_dynamicCast();
            v184 = (uint64_t)v324;
            if (!v183)
              v184 = 0;
            v306 = v184;
            if (v183)
              v185 = (__CFString *)v325;
            else
              v185 = 0;
            v305 = v185;
          }
          else
          {
            swift_bridgeObjectRelease();
            v306 = 0;
            v305 = 0;
          }
          v186 = sub_1CDAB84C0();
          if (*(_QWORD *)(v162 + 16) && (v188 = sub_1CD0D2084(v186, v187), (v189 & 1) != 0))
          {
            v190 = *(_QWORD *)(*(_QWORD *)(v162 + 56) + 8 * v188);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v324 = (_QWORD *)v190;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BD8);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v191 = v322;
LABEL_135:
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v311 = sub_1CD0D1F38(0, v311[2] + 1, 1, v311);
              v193 = v311[2];
              v192 = v311[3];
              v194 = MEMORY[0x1E0DEE9D8];
              if (v193 >= v192 >> 1)
              {
                v201 = sub_1CD0D1F38((_QWORD *)(v192 > 1), v193 + 1, 1, v311);
                v194 = MEMORY[0x1E0DEE9D8];
                v311 = v201;
              }
              v195 = v311;
              v311[2] = v193 + 1;
              v196 = &v195[15 * v193];
              *((_BYTE *)v196 + 32) = v159 & 1;
              v197 = v317;
              v196[5] = v318;
              v196[6] = v197;
              v198 = v307;
              v196[7] = v308;
              v196[8] = v198;
              v199 = v306;
              v196[9] = v191;
              v196[10] = v199;
              v200 = v313;
              v196[11] = v305;
              v196[12] = v200;
              v196[13] = v309;
              v196[14] = v194;
              *(_OWORD *)(v196 + 15) = 0u;
              *(_OWORD *)(v196 + 17) = 0u;
              goto LABEL_90;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v191 = MEMORY[0x1E0DEE9D8];
          goto LABEL_135;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_90:

LABEL_91:
      v124 = v316;
      if (v155 == ++v156)
        goto LABEL_141;
    }
  }
  __break(1u);
}

unint64_t sub_1CD0D1220(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v30;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = (_QWORD *)sub_1CDAB879C();
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a1 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v6) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = (v7 - 1) & v7;
      v13 = __clz(__rbit64(v7)) | (v9 << 6);
      v14 = v9;
    }
    else
    {
      v15 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_37;
      if (v15 >= v27)
      {
LABEL_33:
        sub_1CD0C9A6C();
        return (unint64_t)v4;
      }
      v16 = *(_QWORD *)(v28 + 8 * v15);
      v14 = v9 + 1;
      if (!v16)
      {
        v14 = v9 + 2;
        if (v9 + 2 >= v27)
          goto LABEL_33;
        v16 = *(_QWORD *)(v28 + 8 * v14);
        if (!v16)
        {
          v14 = v9 + 3;
          if (v9 + 3 >= v27)
            goto LABEL_33;
          v16 = *(_QWORD *)(v28 + 8 * v14);
          if (!v16)
          {
            v14 = v9 + 4;
            if (v9 + 4 >= v27)
              goto LABEL_33;
            v16 = *(_QWORD *)(v28 + 8 * v14);
            if (!v16)
            {
              v17 = v9 + 5;
              if (v9 + 5 >= v27)
                goto LABEL_33;
              v16 = *(_QWORD *)(v28 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  v14 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_38;
                  if (v14 >= v27)
                    goto LABEL_33;
                  v16 = *(_QWORD *)(v28 + 8 * v14);
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v14 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      v12 = (v16 - 1) & v16;
      v13 = __clz(__rbit64(v16)) + (v14 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CD0C9A6C();
      swift_release();
      return 0;
    }
    result = sub_1CD0D2084(v20, v19);
    v21 = result;
    if ((v22 & 1) != 0)
    {
      v10 = (uint64_t *)(v4[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v10 = v20;
      v10[1] = v19;
      v11 = v4[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v11 + 8 * v21) = v30;
      goto LABEL_8;
    }
    if (v4[2] >= v4[3])
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v23 = (uint64_t *)(v4[6] + 16 * result);
    *v23 = v20;
    v23[1] = v19;
    *(_QWORD *)(v4[7] + 8 * result) = v30;
    v24 = v4[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_36;
    v4[2] = v26;
LABEL_8:
    v9 = v14;
    v7 = v12;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1CD0D153C(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v3 = sub_1CDAB8778();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1CD0DF734(0, v3 & ~(v3 >> 63), 0);
  v4 = v14;
  if (!v2)
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return v4;
LABEL_7:
    for (i = 4; ; ++i)
    {
      v6 = i - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1D17B8504](i - 4, a1);
        v7 = i - 3;
        if (__OFADD__(v6, 1))
          goto LABEL_22;
      }
      else
      {
        swift_unknownObjectRetain();
        v7 = i - 3;
        if (__OFADD__(v6, 1))
        {
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      if (!swift_dynamicCast())
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CD0DF734(0, *(_QWORD *)(v4 + 16) + 1, 1);
        v4 = v14;
      }
      v9 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1CD0DF734(v8 > 1, v9 + 1, 1);
        v4 = v14;
      }
      *(_QWORD *)(v4 + 16) = v9 + 1;
      v10 = v4 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v12;
      *(_QWORD *)(v10 + 40) = v13;
      if (v7 == v2)
        return v4;
    }
  }
  swift_bridgeObjectRetain();
  v2 = sub_1CDAB8778();
  swift_bridgeObjectRelease();
  if (v2)
    goto LABEL_7;
  return v4;
}

unint64_t NetworkInfoController.obtainNetworkInfoProto()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v0 = sub_1CDAB8370();
  v38 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1CDAB828C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CD0CEA44();
  v9 = MEMORY[0x1E0DEE9D8];
  v39 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(v7 + 16);
  v36 = v8;
  if (v10)
  {
    v34 = v7;
    v35 = v0;
    v11 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v37 = *(_QWORD *)(v4 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v12(v6, v11, v3);
      v13 = sub_1CD0CCF64();
      v14 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      if (v13)
      {
        MEMORY[0x1D17B82C4](v14);
        if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CDAB8544();
        sub_1CDAB8550();
        sub_1CDAB8538();
      }
      v11 += v37;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v15 = v39;
    v9 = MEMORY[0x1E0DEE9D8];
    v0 = v35;
    v16 = v36;
  }
  else
  {
    v16 = v8;
    v15 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v39 = v9;
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = v16 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    v19 = *(_QWORD *)(v38 + 72);
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v20(v2, v18, v0);
      v21 = sub_1CD0CD7F4();
      v22 = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v2, v0);
      if (v21)
      {
        MEMORY[0x1D17B82C4](v22);
        if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CDAB8544();
        sub_1CDAB8550();
        sub_1CDAB8538();
      }
      v18 += v19;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v9 = v39;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45B88);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CDB7EA90;
  if (qword_1EFA45960 != -1)
    swift_once();
  v24 = unk_1EFA585E8;
  *(_QWORD *)(inited + 32) = static NetworkInfoController.NetworkInfoKey;
  *(_QWORD *)(inited + 40) = v24;
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = sub_1CDAB876C();
    swift_bridgeObjectRelease_n();
    v15 = v32;
  }
  else
  {
    v25 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CDAB87D8();
    if (swift_dynamicCastMetatype() || (v28 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_22:
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = (_QWORD *)(v25 + 32);
      while (*v29)
      {
        ++v29;
        if (!--v28)
          goto LABEL_22;
      }
      swift_bridgeObjectRelease();
      v15 = v25 | 1;
    }
  }
  *(_QWORD *)(inited + 48) = v15;
  *(_QWORD *)(inited + 56) = 0xD000000000000012;
  *(_QWORD *)(inited + 64) = 0x80000001CDB29860;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v33 = sub_1CDAB876C();
    swift_bridgeObjectRelease_n();
    v9 = v33;
  }
  else
  {
    v26 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1CDAB87D8();
    if (swift_dynamicCastMetatype() || (v30 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_25:
      swift_bridgeObjectRelease();
    }
    else
    {
      v31 = (_QWORD *)(v26 + 32);
      while (*v31)
      {
        ++v31;
        if (!--v30)
          goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      v9 = v26 | 1;
    }
  }
  *(_QWORD *)(inited + 72) = v9;
  return sub_1CD0CE1F8(inited);
}

uint64_t sub_1CD0D1BE0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CD0D1C08(a1, a2, a3, a4, &qword_1EFA45AA0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D27D30]);
}

uint64_t sub_1CD0D1BF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CD0D1C08(a1, a2, a3, a4, &qword_1ED8C43D0, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDetectAccessory);
}

uint64_t sub_1CD0D1C08(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1CDAB8760();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CD0D245C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1CD0D1E14(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BA0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CD0D25D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CD0D1F38(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BF0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 120);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[15 * v8 + 4])
          memmove(v12, a4 + 4, 120 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CD0D3068(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CD0D205C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CD0D1C08(a1, a2, a3, a4, &qword_1EFA45BB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D27D08]);
}

uint64_t sub_1CD0D2070(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CD0D1C08(a1, a2, a3, a4, &qword_1EFA45BC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D27DB8]);
}

unint64_t sub_1CD0D2084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1CDAB87FC();
  sub_1CDAB84D8();
  v4 = sub_1CDAB8814();
  return sub_1CD0D214C(a1, a2, v4);
}

unint64_t sub_1CD0D20E8(uint64_t a1)
{
  uint64_t v2;

  sub_1CDAB822C();
  sub_1CD0D3198((unint64_t *)&qword_1ED8C4338, MEMORY[0x1E0CB09C8]);
  v2 = sub_1CDAB8484();
  return sub_1CD0D222C(a1, v2);
}

unint64_t sub_1CD0D214C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1CDAB87CC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1CDAB87CC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1CD0D222C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1CDAB822C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1CD0D3198(&qword_1EFA45BF8, MEMORY[0x1E0CB09D0]);
      v14 = sub_1CDAB849C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

id sub_1CD0D2364(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  char *v8;
  id v9;
  objc_super v11;
  uint64_t v12[5];

  v12[3] = a3;
  v12[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  sub_1CDAB84C0();
  v8 = a2;
  sub_1CDAB8400();
  *(_QWORD *)&v8[OBJC_IVAR___HMDNetworkInfoController_store] = 0;
  sub_1CD0C2BA8((uint64_t)v12, (uint64_t)&v8[OBJC_IVAR___HMDNetworkInfoController_dataSource]);

  v11.receiver = v8;
  v11.super_class = (Class)type metadata accessor for NetworkInfoController();
  v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v9;
}

uint64_t sub_1CD0D245C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1CDAB87A8();
  __break(1u);
  return result;
}

SCDynamicStoreRef sub_1CD0D2574()
{
  const __CFAllocator *v0;
  __CFString *v1;
  SCDynamicStoreRef v2;

  v0 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v1 = (__CFString *)sub_1CDAB84A8();
  v2 = SCDynamicStoreCreate(v0, v1, 0, 0);

  return v2;
}

uint64_t sub_1CD0D25D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CDAB87A8();
  __break(1u);
  return result;
}

void sub_1CD0D26C4()
{
  CFArrayRef v0;

  v0 = SCNetworkInterfaceCopyAll();
  type metadata accessor for SCNetworkInterface(0);
  sub_1CDAB8514();

}

unint64_t sub_1CD0D2938(const __SCDynamicStore *a1, const __CFString *a2)
{
  CFPropertyListRef v2;
  const void *v3;
  CFTypeID TypeID;
  unint64_t v5;
  uint64_t v7;

  v2 = SCDynamicStoreCopyValue(a1, a2);
  if (!v2)
    return sub_1CD0CE0E0(MEMORY[0x1E0DEE9D8]);
  v3 = v2;
  TypeID = CFDictionaryGetTypeID();
  if (TypeID == CFGetTypeID(v3)
    && (swift_unknownObjectRetain(),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45B90),
        swift_dynamicCast()))
  {
    swift_unknownObjectRelease();
    return v7;
  }
  else
  {
    v5 = sub_1CD0CE0E0(MEMORY[0x1E0DEE9D8]);
    swift_unknownObjectRelease();
  }
  return v5;
}

id sub_1CD0D29FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_allocWithZone((Class)type metadata accessor for NetworkInfoController());
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_1CD0D2364((uint64_t)v9, v10, a3, a4);
}

uint64_t type metadata accessor for NetworkInfoSCDataSource()
{
  return objc_opt_self();
}

id sub_1CD0D2AB8(uint64_t a1)
{
  objc_class *v2;
  id v3;
  char *v4;
  id v5;
  objc_super v7;
  _QWORD v8[5];

  v2 = (objc_class *)type metadata accessor for NetworkInfoController();
  v3 = objc_allocWithZone(v2);
  v8[3] = type metadata accessor for NetworkInfoSCDataSource();
  v8[4] = &off_1E899C828;
  v8[0] = a1;
  sub_1CDAB84C0();
  swift_retain();
  v4 = (char *)v3;
  sub_1CDAB8400();
  *(_QWORD *)&v4[OBJC_IVAR___HMDNetworkInfoController_store] = 0;
  sub_1CD0C2BA8((uint64_t)v8, (uint64_t)&v4[OBJC_IVAR___HMDNetworkInfoController_dataSource]);

  v7.receiver = v4;
  v7.super_class = v2;
  v5 = objc_msgSendSuper2(&v7, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t type metadata accessor for NetworkInfoController()
{
  uint64_t result;

  result = qword_1ED8C4058;
  if (!qword_1ED8C4058)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for InterfaceInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for InterfaceInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for InterfaceInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for InterfaceInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for InterfaceInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InterfaceInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InterfaceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InterfaceInfo()
{
  return &type metadata for InterfaceInfo;
}

uint64_t sub_1CD0D2E68()
{
  return type metadata accessor for NetworkInfoController();
}

uint64_t sub_1CD0D2E70()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CDAB840C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1CD0D2EF0()
{
  sub_1CD0CEA44();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1CD0D2F1C()
{
  unint64_t result;

  result = qword_1EFA45BD0;
  if (!qword_1EFA45BD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFA45BD0);
  }
  return result;
}

uint64_t sub_1CD0D2F58(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CD0D2F98(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_1CD0D2FDC()
{
  unint64_t result;

  result = qword_1EFA45BE0;
  if (!qword_1EFA45BE0)
  {
    result = MEMORY[0x1D17BA838](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EFA45BE0);
  }
  return result;
}

uint64_t sub_1CD0D3020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CD0D3068(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 120 * a1 + 32;
    v6 = a3 + 120 * v4;
    if (v5 >= v6 || v5 + 120 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CDAB87A8();
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1CD0D3198(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1CDAB822C();
    result = MEMORY[0x1D17BA838](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for NetworkInfoController.PartialNetworkServiceInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkInfoController.PartialNetworkServiceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInfoController.PartialNetworkServiceInfo()
{
  return &type metadata for NetworkInfoController.PartialNetworkServiceInfo;
}

uint64_t sub_1CD0D3594(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id HMDAccessorySetupMetricDispatcher.networkMetric(discoveryController:networkInfoController:sessionID:idsIdentifierString:currentWiFiInfo:currentWiFiNetworkRSSI:numResidents:numAppleMediaAccessories:accessoryDiagnosticInfo:primaryResidentIdsIdentifierString:primaryResidentDiagnosticInfo:homeUUID:primaryResidentDiagnosticInfoFetched:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, void *a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, char a16)
{
  return sub_1CD0D3990(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1CD0D384C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v14;

  *(_QWORD *)(a4 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a4 + 32) = &off_1E899C128;
  swift_unknownObjectWeakAssign();
  type metadata accessor for AssertionHandle.Assertion(0);
  v8 = swift_allocObject();
  sub_1CDAB8220();
  if (!a3)
  {
    a2 = sub_1CDAB81F0();
    a3 = v9;
  }
  v10 = (uint64_t *)(v8 + OBJC_IVAR____TtCC19HomeKitDaemonLegacy15AssertionHandle9Assertion_reason);
  *v10 = a2;
  v10[1] = a3;
  *(_QWORD *)(a4 + 16) = v8;
  v11 = *(os_unfair_lock_s **)&a1[OBJC_IVAR___HMDDiscoveryController_assertions];
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v11 + 6);
  sub_1CD0C3E84((uint64_t)&v11[4], v8, &v14);
  os_unfair_lock_unlock(v11 + 6);
  v12 = v14;
  swift_release();
  sub_1CD0C6F54(v8);
  if (v12 == 1)
    sub_1CD0C67A0();
  swift_release();

  return a4;
}

id sub_1CD0D3990(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, void *a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, char a16)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  size_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  objc_class *v37;
  char *v38;
  char *v39;
  char *v40;
  void *v41;
  id v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void *v52;
  int v53;
  uint64_t v54;
  id v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  objc_super v60;
  _QWORD v61[6];
  _OWORD v62[14];
  __int16 v63;

  v53 = a8;
  v51 = a6;
  v52 = a7;
  v54 = a5;
  v49 = a3;
  v50 = a4;
  v18 = sub_1CDAB822C();
  MEMORY[0x1E0C80A78](v18);
  v57 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v20;
  v21 = *(void (**)(void))(v20 + 16);
  v59 = v22;
  v21();
  v23 = a1;
  v55 = a2;
  sub_1CD0CEA44();
  v46 = v24;
  v48 = v25;
  v47 = sub_1CD0C4A70();
  v56 = v23;
  v26 = *(_QWORD *)&v23[OBJC_IVAR___HMDDiscoveryController_visibleSFDevices];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_1CD0C4DF0((_QWORD *)(v26 + 16), v62);
  v45 = a10;
  v44 = a9;
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  v27 = *(_QWORD *)&v62[0];
  swift_release();
  v28 = sub_1CD0C8868(v27);
  swift_bridgeObjectRelease();
  sub_1CD0D9B00(v49, v50, 0, v52, v53, v46, v48, v54, (uint64_t *)v62, (uint64_t)v51, v47, v28, v44, v45, v54, v51, a11, a12, a13,
    a14,
    a16 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v61[3] = &type metadata for Metric.Setup.NetworkInfo;
  v61[4] = &off_1E899CB60;
  v29 = swift_allocObject();
  v61[0] = v29;
  v30 = v62[13];
  *(_OWORD *)(v29 + 208) = v62[12];
  *(_OWORD *)(v29 + 224) = v30;
  *(_WORD *)(v29 + 240) = v63;
  v31 = v62[9];
  *(_OWORD *)(v29 + 144) = v62[8];
  *(_OWORD *)(v29 + 160) = v31;
  v32 = v62[11];
  *(_OWORD *)(v29 + 176) = v62[10];
  *(_OWORD *)(v29 + 192) = v32;
  v33 = v62[5];
  *(_OWORD *)(v29 + 80) = v62[4];
  *(_OWORD *)(v29 + 96) = v33;
  v34 = v62[7];
  *(_OWORD *)(v29 + 112) = v62[6];
  *(_OWORD *)(v29 + 128) = v34;
  v35 = v62[1];
  *(_OWORD *)(v29 + 16) = v62[0];
  *(_OWORD *)(v29 + 32) = v35;
  v36 = v62[3];
  *(_OWORD *)(v29 + 48) = v62[2];
  *(_OWORD *)(v29 + 64) = v36;
  v37 = (objc_class *)type metadata accessor for Metric.LogEventAdaptor();
  v38 = (char *)objc_allocWithZone(v37);
  v39 = &v38[OBJC_IVAR____TtCO19HomeKitDaemonLegacy6Metric15LogEventAdaptor_name];
  *(_QWORD *)v39 = 0xD000000000000035;
  *((_QWORD *)v39 + 1) = 0x80000001CDB29A20;
  sub_1CD0C2BA8((uint64_t)v61, (uint64_t)&v38[OBJC_IVAR____TtCO19HomeKitDaemonLegacy6Metric15LogEventAdaptor_event]);
  *(_QWORD *)&v38[OBJC_IVAR____TtCO19HomeKitDaemonLegacy6Metric15LogEventAdaptor_coreAnalyticsEventOptions] = 2;
  sub_1CD0D3DE4((uint64_t)v62);
  v40 = v57;
  v41 = (void *)sub_1CDAB81FC();
  v60.receiver = v38;
  v60.super_class = v37;
  v42 = objc_msgSendSuper2(&v60, sel_initWithHomeUUID_, v41);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v40, v59);
  sub_1CD0D3E0C((uint64_t)v62);

  return v42;
}

uint64_t _sSo33HMDAccessorySetupMetricDispatcherC19HomeKitDaemonLegacyE25releaseDiscoveryAssertion15assertionHandleyyXl_tF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  _BOOL4 v5;
  BOOL v7;

  type metadata accessor for AssertionHandle();
  swift_unknownObjectRetain();
  v0 = swift_dynamicCastClass();
  if (v0)
  {
    v1 = v0;
    v2 = MEMORY[0x1D17BA964](v0 + 24);
    if (v2)
    {
      v3 = *(_QWORD *)(v1 + 16);
      v4 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR___HMDDiscoveryController_assertions);
      swift_retain();
      os_unfair_lock_lock(v4 + 6);
      sub_1CD0C3EFC((uint64_t)&v4[4], &v7);
      os_unfair_lock_unlock(v4 + 6);
      v5 = v7;
      swift_release();
      sub_1CD0C6F60(v3);
      if (v5)
        sub_1CD0C6B48();
      swift_unknownObjectRelease();
    }
    *(_QWORD *)(v1 + 32) = 0;
    swift_unknownObjectWeakAssign();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1CD0D3DC0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CD0D3DE4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CD0D3E0C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CD0D3E34()
{
  void *v0;
  uint64_t v2;
  _OWORD v3[2];
  _BYTE v4[24];
  uint64_t v5;

  if (objc_msgSend(v0, sel_discoveryController))
  {
    sub_1CDAB8688();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_1CD0D3EE8((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    type metadata accessor for DiscoveryController(0);
    if (swift_dynamicCast())
      return v2;
    else
      return 0;
  }
  else
  {
    sub_1CD0CAA7C((uint64_t)v4);
    return 0;
  }
}

uint64_t sub_1CD0D3EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C41A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id Account.__deallocating_deinit()
{
  return sub_1CD0D4BA0(type metadata accessor for Account);
}

uint64_t type metadata accessor for Account()
{
  return objc_opt_self();
}

uint64_t Account.ChangeObserver.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___HMDAccountChangeObserver_delegate;
  swift_beginAccess();
  return MEMORY[0x1D17BA964](v1);
}

uint64_t Account.ChangeObserver.delegate.setter()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  _QWORD aBlock[6];

  v1 = &v0[OBJC_IVAR___HMDAccountChangeObserver_delegate];
  swift_beginAccess();
  v2 = MEMORY[0x1D17BA964](v1);
  swift_unknownObjectWeakAssign();
  if (v2)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    v3 = *(void **)&v0[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber];
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v0;
    aBlock[4] = sub_1CD0D41B0;
    aBlock[5] = v4;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CD0D41D0;
    aBlock[3] = &block_descriptor_2;
    v5 = _Block_copy(aBlock);
    v6 = v0;
    swift_release();
    objc_msgSend(v3, sel_registerAccountChangeEventHandler_, v5);
    _Block_release(v5);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1CD0D418C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1CD0D41B0(void *a1, int a2)
{
  sub_1CD0D4638(a1, a2);
}

void sub_1CD0D41D0(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v5)(void *, uint64_t);
  id v6;

  v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  v6 = a2;
  v5(a2, a3);
  swift_release();

}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void (*Account.ChangeObserver.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HMDAccountChangeObserver_delegate;
  v3[10] = v1;
  v3[11] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[9] = MEMORY[0x1D17BA964](v5);
  return sub_1CD0D42B8;
}

void sub_1CD0D42B8(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char *v14;

  v3 = *(_QWORD **)a1;
  v4 = MEMORY[0x1D17BA964](*(_QWORD *)(*(_QWORD *)a1 + 80) + *(_QWORD *)(*(_QWORD *)a1 + 88));
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    if (!v4)
    {
      v5 = (char *)v3[10];
      v6 = *(void **)&v5[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber];
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v5;
      v3[4] = sub_1CD0D4C3C;
      v3[5] = v7;
      *v3 = MEMORY[0x1E0C809B0];
      v3[1] = 1107296256;
      v3[2] = sub_1CD0D41D0;
      v3[3] = &block_descriptor_7_0;
      v8 = _Block_copy(v3);
      v9 = v5;
      swift_unknownObjectRetain();
      swift_release();
      objc_msgSend(v6, sel_registerAccountChangeEventHandler_, v8);
      _Block_release(v8);
    }
  }
  else if (!v4)
  {
    v10 = (char *)v3[10];
    v11 = *(void **)&v10[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber];
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v10;
    v3[4] = sub_1CD0D4C3C;
    v3[5] = v12;
    *v3 = MEMORY[0x1E0C809B0];
    v3[1] = 1107296256;
    v3[2] = sub_1CD0D41D0;
    v3[3] = &block_descriptor_14;
    v13 = _Block_copy(v3);
    v14 = v10;
    swift_release();
    objc_msgSend(v11, sel_registerAccountChangeEventHandler_, v13);
    _Block_release(v13);
    goto LABEL_8;
  }
  swift_unknownObjectRelease();
LABEL_8:
  swift_unknownObjectRelease();
  free(v3);
}

id Account.ChangeObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Account.ChangeObserver.init()()
{
  id v0;
  objc_class *v1;
  char *v2;
  id v3;
  objc_super v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedSubscriber);
  v1 = (objc_class *)type metadata accessor for Account.ChangeObserver();
  v2 = (char *)objc_allocWithZone(v1);
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v2[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber] = v0;
  v5.receiver = v2;
  v5.super_class = v1;
  v3 = objc_msgSendSuper2(&v5, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t type metadata accessor for Account.ChangeObserver()
{
  return objc_opt_self();
}

void sub_1CD0D4638(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  NSObject *v32;
  NSObject *v33;
  _QWORD *v34;
  uint8_t *v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  uint8_t *v39;
  NSObject *v40;
  NSObject *v41;
  NSObject *v42;
  uint64_t v43;

  v3 = v2;
  v43 = *MEMORY[0x1E0C80C00];
  ObjectType = swift_getObjectType();
  v7 = sub_1CDAB840C();
  v8 = *(NSObject **)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v38 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v38 - v15;
  if (a1)
  {
    v17 = *MEMORY[0x1E0CFAAE8];
    v41 = a1;
    if (-[NSObject aa_isAccountClass:](v41, sel_aa_isAccountClass_, v17))
    {
      switch(a2)
      {
        case 1:
        case 2:
        case 4:
        case 5:

          break;
        case 3:
          sub_1CD0C2C90(ObjectType, (uint64_t)&off_1E899CA10);
          v28 = v41;
          v29 = sub_1CDAB83F4();
          v30 = sub_1CDAB85EC();
          if (os_log_type_enabled(v29, v30))
          {
            v31 = (uint8_t *)swift_slowAlloc();
            v38 = (_QWORD *)swift_slowAlloc();
            v41 = v8;
            v42 = v28;
            v39 = v31;
            *(_DWORD *)v31 = 138412290;
            v32 = v28;
            v40 = v28;
            v33 = v32;
            v8 = v41;
            sub_1CDAB8664();
            v34 = v38;
            *v38 = a1;

            v35 = v39;
            v28 = v40;
            _os_log_impl(&dword_1CD062000, v29, v30, "Account removed %@", v39, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45A88);
            swift_arrayDestroy();
            MEMORY[0x1D17BA8C8](v34, -1, -1);
            MEMORY[0x1D17BA8C8](v35, -1, -1);
          }
          else
          {

            v29 = v28;
          }

          ((void (*)(char *, uint64_t))v8[1].isa)(v16, v7);
          v36 = v3 + OBJC_IVAR___HMDAccountChangeObserver_delegate;
          swift_beginAccess();
          v37 = (void *)MEMORY[0x1D17BA964](v36);
          if (v37)
          {
            objc_msgSend(v37, sel_accountChangeObserver_observedDeletedAccount_, v3, v28);
            swift_unknownObjectRelease();
          }

          break;
        default:
          sub_1CD0C2C90(ObjectType, (uint64_t)&off_1E899CA10);
          v24 = sub_1CDAB83F4();
          v25 = sub_1CDAB85EC();
          if (os_log_type_enabled(v24, v25))
          {
            v26 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v26 = 67109120;
            LODWORD(v42) = a2;
            sub_1CDAB8664();
            _os_log_impl(&dword_1CD062000, v24, v25, "Unexpected, unhandled account change case: %u", v26, 8u);
            MEMORY[0x1D17BA8C8](v26, -1, -1);
            v27 = v41;
          }
          else
          {
            v27 = v24;
            v24 = v41;
          }

          ((void (*)(char *, uint64_t))v8[1].isa)(v14, v7);
          break;
      }
      return;
    }

  }
  sub_1CD0C2C90(ObjectType, (uint64_t)&off_1E899CA10);
  v18 = a1;
  v19 = sub_1CDAB83F4();
  v20 = sub_1CDAB85E0();
  if (os_log_type_enabled(v19, v20))
  {
    v40 = v7;
    v41 = v8;
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v21 = 138412290;
    if (a1)
    {
      v42 = v18;
      v23 = v18;
    }
    else
    {
      v42 = 0;
    }
    sub_1CDAB8664();
    v8 = v41;
    *v22 = a1;

    _os_log_impl(&dword_1CD062000, v19, v20, "Ignoring change for non-primary account %@", v21, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45A88);
    swift_arrayDestroy();
    MEMORY[0x1D17BA8C8](v22, -1, -1);
    MEMORY[0x1D17BA8C8](v21, -1, -1);
    v7 = (uint64_t)v40;
  }
  else
  {

    v19 = v18;
  }

  ((void (*)(char *, uint64_t))v8[1].isa)(v11, v7);
}

id Account.ChangeObserver.__deallocating_deinit()
{
  return sub_1CD0D4BA0(type metadata accessor for Account.ChangeObserver);
}

id sub_1CD0D4BA0(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

unint64_t sub_1CD0D4C08()
{
  return 0xD000000000000018;
}

uint64_t sub_1CD0D4D94(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v7 = a3[3];
  v8 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v10 = v9(v7, v8);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *a4;
  *a4 = 0x8000000000000000;
  sub_1CD0D79B0(v10, a1, a2, isUniquelyReferenced_nonNull_native);
  *a4 = v13;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1CD0D4F30()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Metric.LogEventAdaptor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL sub_1CD0D4F9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1CD0D4FB4()
{
  return sub_1CDAB8808();
}

unint64_t sub_1CD0D4FE0@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1CD0DC9B4(*a1);
  *a2 = result;
  return result;
}

void sub_1CD0D5008(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t *sub_1CD0D5014@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

uint64_t sub_1CD0D502C()
{
  sub_1CDAB87FC();
  sub_1CDAB8808();
  return sub_1CDAB8814();
}

uint64_t sub_1CD0D5070()
{
  sub_1CDAB87FC();
  sub_1CDAB8808();
  return sub_1CDAB8814();
}

unint64_t sub_1CD0D50B0()
{
  char *v0;
  uint64_t inited;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D58);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CDB7EC30;
  *(_QWORD *)(inited + 32) = 0x69466957736168;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v2 = *v0;
  v3 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 80) = &off_1E899CA40;
  *(_BYTE *)(inited + 48) = v2;
  *(_QWORD *)(inited + 88) = 0x7265687445736168;
  *(_QWORD *)(inited + 96) = 0xEB0000000074656ELL;
  v4 = v0[1];
  *(_QWORD *)(inited + 128) = v3;
  *(_QWORD *)(inited + 136) = &off_1E899CA40;
  *(_BYTE *)(inited + 104) = v4;
  strcpy((char *)(inited + 144), "primaryService");
  *(_BYTE *)(inited + 159) = -18;
  v5 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 160) = v0[2];
  *(_QWORD *)(inited + 200) = 0xD000000000000016;
  *(_QWORD *)(inited + 208) = 0x80000001CDB29EF0;
  *(_QWORD *)(inited + 216) = v0[3];
  *(_QWORD *)(inited + 256) = 0x4973614869666977;
  *(_QWORD *)(inited + 264) = 0xE900000000000050;
  *(_BYTE *)(inited + 272) = v0[4];
  strcpy((char *)(inited + 312), "ethernetHasIP");
  *(_WORD *)(inited + 326) = -4864;
  *(_BYTE *)(inited + 328) = v0[5];
  *(_QWORD *)(inited + 368) = 0xD000000000000013;
  *(_QWORD *)(inited + 376) = 0x80000001CDB29F10;
  *(_BYTE *)(inited + 384) = v0[6];
  *(_QWORD *)(inited + 424) = 0xD000000000000016;
  *(_QWORD *)(inited + 432) = 0x80000001CDB29F30;
  *(_BYTE *)(inited + 440) = v0[7];
  *(_QWORD *)(inited + 480) = 0x616D697250736168;
  *(_QWORD *)(inited + 488) = 0xEA00000000007972;
  *(_BYTE *)(inited + 496) = v0[8];
  strcpy((char *)(inited + 536), "numResidents");
  *(_BYTE *)(inited + 549) = 0;
  *(_WORD *)(inited + 550) = -5120;
  v6 = *((_QWORD *)v0 + 3);
  *(_QWORD *)(inited + 552) = *((_QWORD *)v0 + 2);
  *(_QWORD *)(inited + 184) = v5;
  *(_QWORD *)(inited + 192) = &off_1E899CA50;
  *(_QWORD *)(inited + 240) = v5;
  *(_QWORD *)(inited + 248) = &off_1E899CA50;
  *(_QWORD *)(inited + 296) = v3;
  *(_QWORD *)(inited + 304) = &off_1E899CA40;
  *(_QWORD *)(inited + 352) = v3;
  *(_QWORD *)(inited + 360) = &off_1E899CA40;
  *(_QWORD *)(inited + 408) = v3;
  *(_QWORD *)(inited + 416) = &off_1E899CA40;
  *(_QWORD *)(inited + 464) = v3;
  *(_QWORD *)(inited + 472) = &off_1E899CA40;
  *(_QWORD *)(inited + 520) = v3;
  *(_QWORD *)(inited + 528) = &off_1E899CA40;
  *(_QWORD *)(inited + 576) = v5;
  *(_QWORD *)(inited + 584) = &off_1E899CA50;
  *(_QWORD *)(inited + 592) = 0xD000000000000018;
  *(_QWORD *)(inited + 600) = 0x80000001CDB29F50;
  *(_QWORD *)(inited + 632) = v5;
  *(_QWORD *)(inited + 640) = &off_1E899CA50;
  *(_QWORD *)(inited + 608) = v6;
  strcpy((char *)(inited + 648), "wifiRSSIStatus");
  *(_BYTE *)(inited + 663) = -18;
  v7 = v0[32];
  *(_QWORD *)(inited + 688) = v5;
  *(_QWORD *)(inited + 696) = &off_1E899CA50;
  *(_QWORD *)(inited + 664) = v7;
  *(_QWORD *)(inited + 704) = 0x4969466957736168;
  *(_QWORD *)(inited + 712) = 0xEB000000006F666ELL;
  LOBYTE(v5) = v0[33];
  *(_QWORD *)(inited + 744) = v3;
  *(_QWORD *)(inited + 752) = &off_1E899CA40;
  *(_BYTE *)(inited + 720) = v5;
  return sub_1CD0CE310(inited);
}

uint64_t sub_1CD0D534C(uint64_t a1, uint64_t a2, _BYTE *a3, _BYTE *a4, _BYTE *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  uint64_t result;
  void (*v39)(char *, _QWORD, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  char v42;
  char *v43;
  int v44;
  uint64_t v45;
  char *v46;
  _BYTE *v47;
  _BYTE *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;

  v55 = a4;
  v47 = a3;
  v48 = a5;
  v7 = sub_1CDAB828C();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x1E0C80A78](v7);
  v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1CDAB8388();
  v52 = *(_QWORD *)(v56 - 8);
  v9 = MEMORY[0x1E0C80A78](v56);
  v53 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v45 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v45 - v14;
  v16 = sub_1CDAB8370();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a1;
  v20 = sub_1CDAB8274();
  v22 = v21;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
  {
    swift_bridgeObjectRelease();
    v24 = v53;
    v23 = v54;
    v26 = v51;
    v25 = v52;
    v27 = v49;
    goto LABEL_3;
  }
  v46 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, v16);
  v32 = sub_1CDAB8310();
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (v20 == v32 && v22 == v34)
  {
    swift_bridgeObjectRelease_n();
    v24 = v53;
    v23 = v54;
    v26 = v51;
    v25 = v52;
    v27 = v49;
  }
  else
  {
    v36 = sub_1CDAB87CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v53;
    v23 = v54;
    v26 = v51;
    v25 = v52;
    v27 = v49;
    if ((v36 & 1) == 0)
      goto LABEL_3;
  }
  v43 = v46;
  sub_1CDAB8280();
  v44 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v43, v56);
  if (v44 == *MEMORY[0x1E0D27DD8])
  {
    *v47 = 2;
  }
  else if (v44 == *MEMORY[0x1E0D27DE0])
  {
    *v47 = 1;
  }
  else
  {
    *v47 = 3;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v43, v56);
  }
LABEL_3:
  v28 = *(_QWORD *)(sub_1CDAB8250() + 16);
  swift_bridgeObjectRelease();
  v29 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v27, v23, v26);
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v26);
    v30 = v56;
    v31 = v55;
  }
  else
  {
    v37 = *(_QWORD *)(sub_1CDAB825C() + 16);
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v27, v26);
    v30 = v56;
    v31 = v55;
    if (!v37)
      return result;
  }
  sub_1CDAB8280();
  v39 = *(void (**)(char *, _QWORD, uint64_t))(v25 + 104);
  v39(v24, *MEMORY[0x1E0D27DE0], v30);
  v40 = sub_1CDAB837C();
  v41 = *(void (**)(char *, uint64_t))(v25 + 8);
  v41(v24, v30);
  result = ((uint64_t (*)(char *, uint64_t))v41)(v13, v30);
  if ((v40 & 1) != 0
    || (sub_1CDAB8280(),
        v39(v24, *MEMORY[0x1E0D27DD8], v30),
        v42 = sub_1CDAB837C(),
        v41(v24, v30),
        result = ((uint64_t (*)(char *, uint64_t))v41)(v13, v30),
        v31 = v48,
        (v42 & 1) != 0))
  {
    *v31 = 1;
  }
  return result;
}

uint64_t sub_1CD0D5714()
{
  return sub_1CDAB84A8();
}

uint64_t sub_1CD0D571C()
{
  return sub_1CDAB855C();
}

uint64_t sub_1CD0D5724()
{
  return sub_1CDAB85C8();
}

uint64_t sub_1CD0D572C()
{
  return sub_1CDAB85B0();
}

uint64_t type metadata accessor for Metric.LogEventAdaptor()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for Metric()
{
  return &type metadata for Metric;
}

uint64_t sub_1CD0D5764(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_1CD0D4D94(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

unint64_t sub_1CD0D576C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;
  _BYTE v19[40];
  _BYTE v20[56];
  __int128 v21;
  __int16 v22;
  __int128 v23;
  __int128 v24;
  __int16 v25;
  __int128 v26;
  __int128 v27;
  __int16 v28;
  _OWORD v29[2];
  __int16 v30;
  _OWORD v31[2];
  __int16 v32;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D58);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1CDB7EC40;
  *(_QWORD *)(v2 + 32) = 0xD000000000000016;
  *(_QWORD *)(v2 + 40) = 0x80000001CDB29CE0;
  *(_QWORD *)(v2 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 80) = &off_1E899CA30;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)v1;
  strcpy((char *)(v2 + 88), "numUniqueSSIDs");
  *(_BYTE *)(v2 + 103) = -18;
  v3 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v2 + 128) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v2 + 136) = &off_1E899CA50;
  v4 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v2 + 104) = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v2 + 144) = 0x7571696E556D756ELL;
  *(_QWORD *)(v2 + 152) = 0xEF73444953534265;
  *(_QWORD *)(v2 + 184) = v3;
  *(_QWORD *)(v2 + 192) = &off_1E899CA50;
  *(_QWORD *)(v2 + 160) = v4;
  strcpy((char *)(v2 + 200), "numSharedSSIDs");
  *(_BYTE *)(v2 + 215) = -18;
  *(_QWORD *)(v2 + 240) = v3;
  *(_QWORD *)(v2 + 248) = &off_1E899CA50;
  v5 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v2 + 216) = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v2 + 256) = 0x65726168536D756ELL;
  *(_QWORD *)(v2 + 264) = 0xEF73444953534264;
  *(_QWORD *)(v2 + 296) = v3;
  *(_QWORD *)(v2 + 304) = &off_1E899CA50;
  *(_QWORD *)(v2 + 272) = v5;
  *(_QWORD *)(v2 + 312) = 0xD000000000000023;
  *(_QWORD *)(v2 + 320) = 0x80000001CDB29D00;
  *(_QWORD *)(v2 + 352) = v3;
  *(_QWORD *)(v2 + 360) = &off_1E899CA50;
  v6 = *(_QWORD *)(v1 + 184);
  *(_QWORD *)(v2 + 328) = *(_QWORD *)(v1 + 176);
  *(_QWORD *)(v2 + 368) = 0xD000000000000023;
  *(_QWORD *)(v2 + 376) = 0x80000001CDB29D30;
  *(_QWORD *)(v2 + 408) = v3;
  *(_QWORD *)(v2 + 416) = &off_1E899CA50;
  *(_QWORD *)(v2 + 384) = v6;
  *(_QWORD *)(v2 + 424) = 0xD000000000000022;
  *(_QWORD *)(v2 + 432) = 0x80000001CDB29D60;
  LOBYTE(v6) = *(_BYTE *)(v1 + 192);
  v7 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v2 + 464) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v2 + 472) = &off_1E899CA40;
  *(_BYTE *)(v2 + 440) = v6;
  *(_QWORD *)(v2 + 480) = 0xD00000000000001FLL;
  *(_QWORD *)(v2 + 488) = 0x80000001CDB29D90;
  LOBYTE(v5) = *(_BYTE *)(v1 + 193);
  *(_QWORD *)(v2 + 520) = v7;
  *(_QWORD *)(v2 + 528) = &off_1E899CA40;
  *(_BYTE *)(v2 + 496) = v5;
  *(_QWORD *)(v2 + 536) = 0xD00000000000001FLL;
  *(_QWORD *)(v2 + 544) = 0x80000001CDB29DB0;
  LOBYTE(v6) = *(_BYTE *)(v1 + 194);
  *(_QWORD *)(v2 + 576) = v7;
  *(_QWORD *)(v2 + 584) = &off_1E899CA40;
  *(_BYTE *)(v2 + 552) = v6;
  *(_QWORD *)(v2 + 592) = 0xD00000000000001CLL;
  *(_QWORD *)(v2 + 600) = 0x80000001CDB29DD0;
  LOBYTE(v6) = *(_BYTE *)(v1 + 195);
  *(_QWORD *)(v2 + 632) = v7;
  *(_QWORD *)(v2 + 640) = &off_1E899CA40;
  *(_BYTE *)(v2 + 608) = v6;
  *(_QWORD *)(v2 + 648) = 0xD000000000000020;
  *(_QWORD *)(v2 + 656) = 0x80000001CDB29DF0;
  LOBYTE(v6) = *(_BYTE *)(v1 + 196);
  *(_QWORD *)(v2 + 688) = v7;
  *(_QWORD *)(v2 + 696) = &off_1E899CA40;
  *(_BYTE *)(v2 + 664) = v6;
  *(_QWORD *)(v2 + 704) = 0xD00000000000001DLL;
  *(_QWORD *)(v2 + 712) = 0x80000001CDB29E20;
  LOBYTE(v6) = *(_BYTE *)(v1 + 197);
  *(_QWORD *)(v2 + 744) = v7;
  *(_QWORD *)(v2 + 752) = &off_1E899CA40;
  *(_BYTE *)(v2 + 720) = v6;
  *(_QWORD *)(v2 + 760) = 0xD00000000000001BLL;
  *(_QWORD *)(v2 + 768) = 0x80000001CDB29E40;
  *(_QWORD *)(v2 + 800) = v3;
  *(_QWORD *)(v2 + 808) = &off_1E899CA50;
  v8 = *(_QWORD *)(v1 + 208);
  *(_QWORD *)(v2 + 776) = *(_QWORD *)(v1 + 200);
  *(_QWORD *)(v2 + 816) = 0xD00000000000001ELL;
  *(_QWORD *)(v2 + 824) = 0x80000001CDB29E60;
  *(_QWORD *)(v2 + 856) = v3;
  *(_QWORD *)(v2 + 864) = &off_1E899CA50;
  *(_QWORD *)(v2 + 832) = v8;
  *(_QWORD *)(v2 + 872) = 0xD00000000000001CLL;
  *(_QWORD *)(v2 + 880) = 0x80000001CDB29E80;
  v9 = *(_QWORD *)(v1 + 216);
  *(_QWORD *)(v2 + 912) = v3;
  *(_QWORD *)(v2 + 920) = &off_1E899CA50;
  *(_QWORD *)(v2 + 888) = v9;
  *(_QWORD *)(v2 + 928) = 0xD000000000000014;
  *(_QWORD *)(v2 + 936) = 0x80000001CDB29EA0;
  LOBYTE(v3) = *(_BYTE *)(v1 + 224);
  *(_QWORD *)(v2 + 968) = v7;
  *(_QWORD *)(v2 + 976) = &off_1E899CA40;
  *(_BYTE *)(v2 + 944) = v3;
  *(_QWORD *)(v2 + 984) = 0xD000000000000024;
  *(_QWORD *)(v2 + 992) = 0x80000001CDB29EC0;
  v10 = *(_BYTE *)(v1 + 225);
  *(_QWORD *)(v2 + 1024) = v7;
  *(_QWORD *)(v2 + 1032) = &off_1E899CA40;
  *(_BYTE *)(v2 + 1000) = v10;
  sub_1CD0D3DE4(v1);
  v18 = sub_1CD0CE310(v2);
  v11 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)&v20[40] = *(_OWORD *)(v1 + 24);
  v21 = v11;
  v22 = *(_WORD *)(v1 + 56);
  v12 = sub_1CD0D50B0();
  sub_1CD0DBDBC(v12, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1CD0DC3E0);
  swift_bridgeObjectRelease();
  sub_1CD0DC414(v1 + 64, (uint64_t)v20);
  sub_1CD0DC414((uint64_t)v20, (uint64_t)v29);
  if (LOBYTE(v29[0]) != 2)
  {
    v26 = v29[0];
    v27 = v29[1];
    v28 = v30;
    v13 = sub_1CD0D50B0();
    v14 = MEMORY[0x1E0C80A78](v13);
    sub_1CD0DBDBC(v14, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1CD0DC488);
    swift_bridgeObjectRelease();
  }
  sub_1CD0DC414(v1 + 104, (uint64_t)v19);
  sub_1CD0DC414((uint64_t)v19, (uint64_t)v31);
  if (LOBYTE(v31[0]) != 2)
  {
    v23 = v31[0];
    v24 = v31[1];
    v25 = v32;
    v15 = sub_1CD0D50B0();
    v16 = MEMORY[0x1E0C80A78](v15);
    sub_1CD0DBDBC(v16, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1CD0DC45C);
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t sub_1CD0D5C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v10 = a5;
  v11 = a6;
  sub_1CDAB84E4();
  v7 = v10;
  v8 = v11;
  sub_1CD0C2BA8(a3, (uint64_t)&v10);
  return sub_1CD0C5D84((uint64_t)&v10, v7, v8);
}

unint64_t sub_1CD0D5C7C()
{
  return sub_1CD0D576C();
}

uint64_t sub_1CD0D5CE4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_1CDAB82BC();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78]();
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D08);
  v43 = a2;
  v8 = sub_1CDAB8790();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v5 + 72);
      v30 = v24 + v29 * v20;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v30, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v30, v45);
        swift_bridgeObjectRetain();
      }
      sub_1CDAB87FC();
      sub_1CDAB84D8();
      result = sub_1CDAB8814();
      v31 = -1 << *(_BYTE *)(v9 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v28;
      v18[1] = v27;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v29 * v17, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_1CD0D604C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t i;
  int v47;
  __int128 v48;

  v3 = v2;
  v5 = sub_1CDAB822C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D40);
  v47 = a2;
  v10 = sub_1CDAB8790();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_42;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v45 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v43 = v2;
  v44 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v19 = v9;
  for (i = v9; ; v19 = i)
  {
    if (v15)
    {
      v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v23 = v22 | (v18 << 6);
      goto LABEL_22;
    }
    v24 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v24 >= v44)
      break;
    v25 = v45;
    v26 = v45[v24];
    ++v18;
    if (!v26)
    {
      v18 = v24 + 1;
      if (v24 + 1 >= v44)
        goto LABEL_35;
      v26 = v45[v18];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v44)
        {
LABEL_35:
          swift_release();
          v3 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_42;
          goto LABEL_36;
        }
        v26 = v45[v27];
        if (!v26)
        {
          while (1)
          {
            v18 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_44;
            if (v18 >= v44)
              goto LABEL_35;
            v26 = v45[v18];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v18 = v27;
      }
    }
LABEL_21:
    v15 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v18 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v6 + 72);
    v29 = *(_QWORD *)(v19 + 48) + v28 * v23;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v29, v5);
      v30 = *(_QWORD *)(v19 + 56) + 24 * v23;
      v48 = *(_OWORD *)v30;
      v31 = *(void **)(v30 + 16);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v29, v5);
      v32 = *(_QWORD *)(v19 + 56) + 24 * v23;
      v48 = *(_OWORD *)v32;
      v31 = *(void **)(v32 + 16);
      v33 = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1CDAB8484();
    v34 = -1 << *(_BYTE *)(v11 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v16 + 8 * v36);
      }
      while (v40 == -1);
      v20 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v28 * v20, v8, v5);
    v21 = *(_QWORD *)(v11 + 56) + 24 * v20;
    *(_OWORD *)v21 = v48;
    *(_QWORD *)(v21 + 16) = v31;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v43;
  v25 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_42;
LABEL_36:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v25, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1CD0D6438(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D00);
  v38 = a2;
  v6 = sub_1CDAB8790();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1CDAB87FC();
    sub_1CDAB84D8();
    result = sub_1CDAB8814();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CD0D6744(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45C08);
  v37 = a2;
  v6 = sub_1CDAB8790();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_1CD0C9BF8(v25, (uint64_t)v38);
    }
    else
    {
      sub_1CD0C2BA8((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1CDAB87FC();
    sub_1CDAB84D8();
    result = sub_1CDAB8814();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_1CD0C9BF8(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CD0D6A68(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1CDAB822C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D50);
  v42 = a2;
  v10 = sub_1CDAB8790();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_1CD0C2AAC((unint64_t *)&qword_1ED8C4338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1CDAB8484();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

void *sub_1CD0D6DFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = sub_1CDAB82BC();
  v1 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78]();
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D08);
  v31 = v0;
  v4 = *v0;
  v5 = sub_1CDAB8784();
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CD0D7058()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  uint64_t v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  __int128 v32;

  v1 = sub_1CDAB822C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D40);
  v29 = v0;
  v5 = *v0;
  v6 = sub_1CDAB8784();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v30 = v5 + 64;
  v31 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v31)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v31)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v16 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 24 * v16;
    v19 = *(_QWORD *)(v5 + 56) + v18;
    v20 = *(void **)(v19 + 16);
    v21 = *(_QWORD *)(v7 + 48) + v17;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 32);
    v32 = *(_OWORD *)v19;
    v22(v21, v4, v1);
    v23 = *(_QWORD *)(v7 + 56) + v18;
    *(_OWORD *)v23 = v32;
    *(_QWORD *)(v23 + 16) = v20;
    v24 = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v31)
    goto LABEL_26;
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v31)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CD0D72B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D00);
  v2 = *v0;
  v3 = sub_1CDAB8784();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CD0D7464()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45C08);
  v2 = *v0;
  v3 = sub_1CDAB8784();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_1CD0C2BA8(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1CD0C9BF8(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1CD0D764C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1CDAB822C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D50);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1CDAB8784();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1CD0D7874(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CD0D2084(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = sub_1CDAB82BC();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1CD0D6DFC();
      goto LABEL_7;
    }
    sub_1CD0D5CE4(v15, a4 & 1);
    v22 = sub_1CD0D2084(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CD0D7C40(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CDAB87F0();
  __break(1u);
  return result;
}

void sub_1CD0D79B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1CD0D2084(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1CD0D72B4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1CD0D6438(v15, a4 & 1);
  v20 = sub_1CD0D2084(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1CDAB87F0();
  __break(1u);
}

uint64_t sub_1CD0D7B0C(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CD0D2084(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_1(v19);
        return sub_1CD0C9BF8(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1CD0D7464();
      goto LABEL_7;
    }
    sub_1CD0D6744(v15, a4 & 1);
    v21 = sub_1CD0D2084(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CD0D7CD0(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CDAB87F0();
  __break(1u);
  return result;
}

uint64_t sub_1CD0D7C40(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = sub_1CDAB82BC();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_1CD0D7CD0(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1CD0C9BF8(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1CD0D7D3C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1CD0D803C((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1CD0D803C((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1D17BA8C8](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1CD0D7EBC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1CD0D824C((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1CD0D824C((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1D17BA8C8](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1CD0D803C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t i;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v21;
  unint64_t j;
  unint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = a2;
  v31 = *(_QWORD *)(a3 + 16);
  if (!v31)
  {
    v26 = 0;
    goto LABEL_27;
  }
  v32 = a4 + 56;
  v30 = a3 + 32;
  swift_bridgeObjectRetain();
  v28 = 0;
  for (i = 0; i != v31; ++i)
  {
    v7 = (uint64_t *)(v30 + 16 * i);
    v9 = *v7;
    v8 = v7[1];
    sub_1CDAB87FC();
    swift_bridgeObjectRetain();
    sub_1CDAB84D8();
    v10 = sub_1CDAB8814();
    v11 = -1 << *(_BYTE *)(a4 + 32);
    v12 = v10 & ~v11;
    v13 = v12 >> 6;
    v14 = 1 << v12;
    if (((1 << v12) & *(_QWORD *)(v32 + 8 * (v12 >> 6))) == 0)
      goto LABEL_3;
    v15 = *(_QWORD *)(a4 + 48);
    v16 = (_QWORD *)(v15 + 16 * v12);
    v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1CDAB87CC() & 1) == 0)
    {
      v21 = ~v11;
      for (j = v12 + 1; ; j = v23 + 1)
      {
        v23 = j & v21;
        if (((*(_QWORD *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0)
          break;
        v24 = (_QWORD *)(v15 + 16 * v23);
        v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1CDAB87CC() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v13 = v23 >> 6;
          v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    result = swift_bridgeObjectRelease();
LABEL_12:
    v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  v5 = a2;
  v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1CD0D8788(a1, v5, v26, a4);
}

uint64_t sub_1CD0D824C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_1CDAB87FC();
        swift_bridgeObjectRetain();
        sub_1CDAB84D8();
        v20 = sub_1CDAB8814();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1CDAB87CC() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1CDAB87CC() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_1CDAB87FC();
    swift_bridgeObjectRetain();
    sub_1CDAB84D8();
    v47 = sub_1CDAB8814();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1CDAB87CC() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_1CD0D8788(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1CDAB87CC() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1CD0D8788(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D30);
  result = sub_1CDAB8724();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1CDAB87FC();
    swift_bridgeObjectRetain();
    sub_1CDAB84D8();
    result = sub_1CDAB8814();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1CD0D8A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, _BYTE *a9@<X8>, uint64_t a10, uint64_t a11, char a12, char a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void (*v46)(char *, uint64_t);
  uint64_t (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  char v79;
  char v80;
  char v81;
  _BYTE *v82;
  _QWORD v83[3];
  uint64_t v84;
  char *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unsigned int v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, _QWORD, uint64_t);
  void (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  __int16 v106;
  char v107[9];

  v86 = a8;
  v90 = a7;
  v87 = a5;
  v92 = a3;
  v89 = a9;
  v104 = sub_1CDAB8388();
  v96 = *(_QWORD *)(v104 - 8);
  v17 = MEMORY[0x1E0C80A78](v104);
  v103 = (char *)v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v102 = (char *)v83 - v19;
  v101 = sub_1CDAB828C();
  v105 = *(_QWORD *)(v101 - 8);
  v20 = MEMORY[0x1E0C80A78](v101);
  v93 = (char *)v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v95 = (char *)v83 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D38);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1CDAB8370();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v28(v25, 1, 1, v26);
  v107[0] = 0;
  v29 = *(_QWORD *)(a2 + 16);
  v91 = a6;
  v88 = a4;
  if (v29)
  {
    v30 = a2 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    v31 = *(_QWORD *)(v27 + 72);
    do
    {
      if ((sub_1CDAB8364() & 1) != 0)
      {
        sub_1CD0C9BBC((uint64_t)v25, &qword_1EFA45D38);
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, v30, v26);
        v28(v25, 0, 1, v26);
      }
      v30 += v31;
      --v29;
    }
    while (v29);
  }
  swift_bridgeObjectRelease();
  v106 = 0;
  v32 = *(_QWORD *)(a1 + 16);
  v85 = v25;
  if (!v32)
    goto LABEL_19;
  v33 = a1 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
  v34 = *(_QWORD *)(v105 + 72);
  swift_bridgeObjectRetain();
  v84 = v33;
  do
  {
    sub_1CD0D534C(v33, (uint64_t)v25, v107, (_BYTE *)&v106 + 1, &v106);
    v33 += v34;
    --v32;
  }
  while (v32);
  swift_bridgeObjectRelease();
  v100 = *(_QWORD *)(a1 + 16);
  if (v100)
  {
    v99 = v34;
    v83[1] = 0;
    v94 = *MEMORY[0x1E0D27DE0];
    v83[2] = a1;
    result = swift_bridgeObjectRetain();
    v36 = 0;
    v37 = v84;
    v38 = v95;
    v40 = v101;
    v39 = v102;
    v41 = v103;
    do
    {
      v42 = v36 + 1;
      if (__OFADD__(v36, 1))
      {
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      v98 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
      v98(v38, v37, v40);
      sub_1CDAB8280();
      v43 = v96;
      v44 = v104;
      v97 = *(void (**)(char *, _QWORD, uint64_t))(v96 + 104);
      v97(v41, v94, v104);
      v45 = sub_1CDAB837C();
      v46 = *(void (**)(char *, uint64_t))(v43 + 8);
      v46(v41, v44);
      v46(v39, v44);
      v47 = *(uint64_t (**)(char *, uint64_t))(v105 + 8);
      result = v47(v38, v40);
      if ((v45 & 1) != 0)
        break;
      ++v36;
      v37 += v99;
    }
    while (v42 != v100);
    LODWORD(v95) = v45;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRetain();
    v48 = 0;
    LODWORD(v96) = *MEMORY[0x1E0D27DD8];
    v49 = v84;
    v50 = v93;
    v52 = v101;
    v51 = v102;
    v53 = v103;
    v54 = v104;
    while (1)
    {
      v55 = v48 + 1;
      if (__OFADD__(v48, 1))
        goto LABEL_57;
      v98(v50, v49, v52);
      sub_1CDAB8280();
      v97(v53, v96, v54);
      LODWORD(v105) = sub_1CDAB837C();
      v46(v53, v54);
      v46(v51, v54);
      result = v47(v50, v52);
      if ((v105 & 1) != 0)
        break;
      ++v48;
      v49 += v99;
      if (v55 == v100)
      {
        swift_bridgeObjectRelease_n();
        LODWORD(v101) = 0;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease_n();
    LODWORD(v101) = 1;
LABEL_21:
    v57 = v88;
    v56 = (int)v95;
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    LODWORD(v101) = 0;
    v56 = 0;
    v57 = v88;
  }
  LODWORD(v103) = HIBYTE(v106);
  v58 = *(_QWORD *)(v57 + 16);
  LODWORD(v105) = v106;
  LODWORD(v104) = v107[0];
  if (!v58)
  {
    swift_bridgeObjectRelease();
    LODWORD(v102) = 0;
    v65 = v92;
    goto LABEL_36;
  }
  LODWORD(v95) = v56;
  v59 = *(_QWORD *)(sub_1CDAB82BC() - 8);
  v60 = v57 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
  v61 = *(_QWORD *)(v59 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    v63 = sub_1CDAB82A4();
    if (!a11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    if (v63 == a10 && v64 == a11)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    v62 = sub_1CDAB87CC();
    swift_bridgeObjectRelease();
    if ((v62 & 1) != 0)
      break;
LABEL_25:
    v60 += v61;
    if (!--v58)
    {
      swift_bridgeObjectRelease_n();
      LODWORD(v102) = 0;
      goto LABEL_35;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_34:
  LODWORD(v102) = 1;
LABEL_35:
  v65 = v92;
  LOBYTE(v56) = (_BYTE)v95;
LABEL_36:
  v66 = *(_QWORD *)(v65 + 16);
  if (!v66)
  {
    v67 = v56;
    swift_bridgeObjectRelease();
    v74 = 0;
    goto LABEL_49;
  }
  v67 = v56;
  v68 = *(_QWORD *)(sub_1CDAB82BC() - 8);
  v69 = v65 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
  v70 = *(_QWORD *)(v68 + 72);
  swift_bridgeObjectRetain();
  while (2)
  {
    v72 = sub_1CDAB82A4();
    if (!a11)
    {
      swift_bridgeObjectRelease();
LABEL_39:
      v69 += v70;
      if (!--v66)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v74 = 0;
        goto LABEL_49;
      }
      continue;
    }
    break;
  }
  if (v72 == a10 && v73 == a11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_48;
  }
  v71 = sub_1CDAB87CC();
  swift_bridgeObjectRelease();
  if ((v71 & 1) == 0)
    goto LABEL_39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_48:
  v74 = 1;
LABEL_49:
  v75 = v87;
  v76 = v86;
  v77 = (uint64_t)v85;
  v78 = v101;
  v79 = (char)v103;
  swift_bridgeObjectRelease();
  if (v76 == 3)
    v80 = 0;
  else
    v80 = v76;
  if (a12 == 4)
    v81 = 0;
  else
    v81 = a12;
  result = sub_1CD0C9BBC(v77, &qword_1EFA45D38);
  v82 = v89;
  *v89 = v67 & 1;
  v82[1] = v78;
  v82[2] = v104;
  v82[3] = v80;
  v82[4] = v79;
  v82[5] = v105;
  v82[6] = (_BYTE)v102;
  v82[7] = v74;
  v82[8] = v90 & 1;
  *((_QWORD *)v82 + 2) = v91;
  *((_QWORD *)v82 + 3) = v75;
  v82[32] = v81;
  v82[33] = a13 & 1;
  return result;
}

void sub_1CD0D9174(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, char *);
  char *v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  unsigned int v72;
  int v73;
  id v74;
  void *v75;
  id v76;
  int v77;
  int v78;
  uint64_t v79;
  void *v80;
  id v81;
  void *v82;
  void *v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  void *v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  __int128 v93;
  _OWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _OWORD *v97;
  void *v98;
  char *v99;
  char *v100;
  unint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _OWORD v108[2];
  __int16 v109;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4030);
  v9 = MEMORY[0x1E0C80A78](v8);
  v105 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v95 - v11;
  v13 = sub_1CDAB82BC();
  v107 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v103 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v99 = (char *)&v95 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v104 = (char *)&v95 - v19;
  MEMORY[0x1E0C80A78](v18);
  v100 = (char *)&v95 - v20;
  v98 = a1;
  v21 = objc_msgSend(a1, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v21)
    goto LABEL_77;
  v22 = v21;
  v23 = objc_msgSend(v21, sel_nearbyVisibleDeviceInfos);

  if (v23
    && (*(_QWORD *)&v108[0] = 0,
        sub_1CD0C9A74(0, &qword_1EFA45A90),
        sub_1CDAB8514(),
        v23,
        *(_QWORD *)&v108[0]))
  {
    v24 = *(_QWORD *)&v108[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v101 = v24;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_1CDAB8778();
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v96 = a3;
  v97 = a4;
  v95 = a2;
  if (v25)
  {
    if (v25 < 1)
    {
      __break(1u);
      goto LABEL_76;
    }
    v26 = 0;
    v27 = v101;
    v102 = v101 & 0xC000000000000001;
    v106 = MEMORY[0x1E0DEE9D8];
    do
    {
      if (v102)
        v28 = (id)MEMORY[0x1D17B8504](v26, v27);
      else
        v28 = *(id *)(v27 + 8 * v26 + 32);
      v29 = v28;
      v30 = objc_msgSend(v28, sel_idsIdentifierString, v95, v96);
      if (v30)
      {
        v31 = v30;
        sub_1CDAB84C0();

        v32 = objc_msgSend(v29, sel_mediaRouteIdString);
        if (v32)
        {
          v33 = v32;
          sub_1CDAB84C0();

        }
        sub_1CDAB8298();
        v34 = 0;
        v27 = v101;
      }
      else
      {
        v34 = 1;
      }
      v35 = v107;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v12, v34, 1, v13);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v13) == 1)
      {
        sub_1CD0C9BBC((uint64_t)v12, &qword_1ED8C4030);
      }
      else
      {
        v36 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
        v37 = v100;
        v36(v100, v12, v13);
        v36(v104, v37, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v106 = sub_1CD0D1BE0(0, *(_QWORD *)(v106 + 16) + 1, 1, v106);
        v39 = *(_QWORD *)(v106 + 16);
        v38 = *(_QWORD *)(v106 + 24);
        if (v39 >= v38 >> 1)
          v106 = sub_1CD0D1BE0(v38 > 1, v39 + 1, 1, v106);
        v40 = v106;
        *(_QWORD *)(v106 + 16) = v39 + 1;
        v36((char *)(v40+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v39), v104, v13);
      }
      ++v26;
    }
    while (v25 != v26);
  }
  else
  {
    v106 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease_n();
  v41 = objc_msgSend(v98, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v41)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v42 = v41;
  v43 = objc_msgSend(v41, sel_networkVisibleDeviceInfos);

  v44 = MEMORY[0x1E0DEE9D8];
  if (v43)
  {
    *(_QWORD *)&v108[0] = 0;
    sub_1CD0C9A74(0, &qword_1EFA45A90);
    sub_1CDAB8514();

    if (*(_QWORD *)&v108[0])
      v44 = *(_QWORD *)&v108[0];
  }
  v45 = (uint64_t)v105;
  if (!(v44 >> 62))
  {
    v46 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v46)
      goto LABEL_34;
LABEL_54:
    v48 = MEMORY[0x1E0DEE9D8];
    goto LABEL_55;
  }
  swift_bridgeObjectRetain();
  v45 = (uint64_t)v105;
  v46 = sub_1CDAB8778();
  if (!v46)
    goto LABEL_54;
LABEL_34:
  if (v46 < 1)
  {
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v47 = 0;
  v102 = v44 & 0xC000000000000001;
  v48 = MEMORY[0x1E0DEE9D8];
  v104 = (char *)v13;
  do
  {
    if (v102)
      v49 = (id)MEMORY[0x1D17B8504](v47, v44);
    else
      v49 = *(id *)(v44 + 8 * v47 + 32);
    v50 = v49;
    v51 = objc_msgSend(v49, sel_idsIdentifierString, v95);
    if (v51)
    {
      v52 = v51;
      sub_1CDAB84C0();

      v53 = objc_msgSend(v50, sel_mediaRouteIdString);
      if (v53)
      {
        v54 = v53;
        sub_1CDAB84C0();

      }
      v45 = (uint64_t)v105;
      sub_1CDAB8298();
      v55 = 0;
    }
    else
    {
      v55 = 1;
    }
    v56 = v107;
    v57 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v107 + 56))(v45, v55, 1, v104);

    if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v56 + 48))(v45, 1, v57) == 1)
    {
      sub_1CD0C9BBC(v45, &qword_1ED8C4030);
    }
    else
    {
      v58 = v45;
      v59 = *(void (**)(char *, uint64_t, char *))(v56 + 32);
      v60 = v99;
      v59(v99, v58, v57);
      v59(v103, (uint64_t)v60, v57);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v48 = sub_1CD0D1BE0(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
      v62 = *(_QWORD *)(v48 + 16);
      v61 = *(_QWORD *)(v48 + 24);
      if (v62 >= v61 >> 1)
        v48 = sub_1CD0D1BE0(v61 > 1, v62 + 1, 1, v48);
      *(_QWORD *)(v48 + 16) = v62 + 1;
      v59((char *)(v48+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v62), (uint64_t)v103, v57);
      v45 = (uint64_t)v105;
    }
    ++v47;
  }
  while (v46 != v47);
LABEL_55:
  swift_bridgeObjectRelease_n();
  v63 = v98;
  sub_1CD0E0020(v98);
  v65 = v64;
  v107 = v66;
  v68 = v67;
  v69 = objc_msgSend(v63, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v69)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v70 = v69;
  v71 = objc_msgSend(v69, sel_cloudInfo);

  if (!v71)
  {
LABEL_62:
    v73 = 0;
    goto LABEL_63;
  }
  if (!objc_msgSend(v71, sel_hasCloudState))
  {

    goto LABEL_62;
  }
  v72 = objc_msgSend(v71, sel_firstCloudImportComplete);

  if (v72)
    v73 = 1;
  else
    v73 = 2;
LABEL_63:
  v74 = objc_msgSend(v63, sel_appleMediaAccessoryDiagnosticInfo, v95);
  if (!v74)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v75 = v74;
  v76 = objc_msgSend(v74, sel_wifiInfo);

  LODWORD(v105) = v73;
  if (v76)
  {
    v77 = objc_msgSend(v76, sel_networkRSSI);

    if (v77 >= -80)
    {
      if (v77 >= -60)
        v78 = (v77 >> 31) & 3;
      else
        LOBYTE(v78) = 2;
    }
    else
    {
      LOBYTE(v78) = 1;
    }
  }
  else
  {
    LOBYTE(v78) = 0;
  }
  v79 = v65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v80 = v98;
  v81 = objc_msgSend(v98, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v81)
    goto LABEL_81;
  v82 = v81;
  v83 = v68;
  v84 = objc_msgSend(v81, sel_numResidents);

  v85 = objc_msgSend(v80, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v85)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v86 = v85;
  v87 = objc_msgSend(v85, sel_numAppleMediaAccessories);

  v88 = objc_msgSend(v80, sel_appleMediaAccessoryDiagnosticInfo);
  if (v88)
  {
    v89 = v88;
    v90 = v76 != 0;
    v91 = objc_msgSend(v88, sel_primaryResidentStatus);

    v92 = swift_bridgeObjectRetain();
    sub_1CD0D8A1C(v79, v107, v48, v106, (uint64_t)v84, (uint64_t)v87, v91 == 2, (int)v105, v108, v95, v92, v78, v90);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v93 = v108[1];
    v94 = v97;
    *v97 = v108[0];
    v94[1] = v93;
    *((_WORD *)v94 + 16) = v109;
    return;
  }
LABEL_83:
  __break(1u);
}

void sub_1CD0D9B00(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16, void *a17, uint64_t a18, uint64_t a19, void *a20,unsigned __int8 a21)
{
  char *v21;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL4 v66;
  id v67;
  void *v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t);
  char *v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  id v92;
  void *v93;
  id v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  void *v99;
  id v100;
  void *v101;
  char *v102;
  id v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  id v128;
  unint64_t v129;
  uint64_t v130;
  char *v131;
  char v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  char *v136;
  char v137;
  uint64_t v138;
  id v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(char *, uint64_t, uint64_t);
  unint64_t v157;
  void (*v158)(uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char v164;
  char *v165;
  void (**v166)(char *, _QWORD, uint64_t);
  char *v167;
  uint64_t v168;
  char v169;
  void (*v170)(char *, uint64_t);
  char *v171;
  char *v172;
  void (*v173)(uint64_t, uint64_t);
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  void *v189;
  char *v190;
  uint64_t v191;
  id v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t inited;
  uint64_t v198;
  id v199;
  int v200;
  uint64_t v201;
  id v202;
  void *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  void (*v213)(uint64_t, char *, uint64_t);
  uint64_t v214;
  void (*v215)(char *, uint64_t);
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  char *v222;
  void (**v223)(char *, _QWORD, uint64_t);
  char *v224;
  uint64_t v225;
  char v226;
  void (*v227)(char *, uint64_t);
  char *v228;
  uint64_t v229;
  void (*v230)(char *, uint64_t);
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  id v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  int v243;
  void *v244;
  char *v245;
  char *v246;
  id v247;
  void *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  id v254;
  void *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  void (*v262)(uint64_t *, uint64_t, uint64_t);
  char *v263;
  char *v264;
  void (*v265)(char *, uint64_t);
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char v271;
  char *v272;
  char *v273;
  void (**v274)(char *, _QWORD, uint64_t);
  char *v275;
  uint64_t v276;
  char v277;
  void (*v278)(char *, uint64_t);
  char *v279;
  void (*v280)(char *, uint64_t);
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  int v289;
  char **v290;
  unint64_t v291;
  id v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  char v299;
  uint64_t v300;
  unint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  char v306;
  id v307;
  id v308;
  id v309;
  char v310;
  uint64_t v311;
  char v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t *v319;
  char v320;
  char v321;
  char v322;
  char v323;
  void (**v324)(char *, _QWORD, uint64_t);
  id v325;
  int v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  unint64_t v334;
  uint64_t v335;
  unint64_t v336;
  id v337;
  unint64_t v338;
  int v339;
  int v340;
  int v341;
  uint64_t v342;
  uint64_t v343;
  int v344;
  uint64_t *v345;
  int v346;
  int v347;
  uint64_t v348;
  id v349;
  id v350;
  uint64_t v351;
  uint64_t v352;
  id v353;
  _QWORD *v354;
  uint64_t v355;
  char *v356;
  unint64_t v357;
  unint64_t v358;
  unint64_t v359;
  char *v360;
  uint64_t v361;
  unint64_t v362;
  uint64_t v363;
  uint64_t v364;
  char *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  char *v370;
  char *v371;
  char *v372;
  char *v373;
  uint64_t v374;
  char *v375;
  uint64_t v376;
  char *v377;
  char *v378;
  uint64_t v379;
  char *v380;
  char *v381;
  char *v382;
  void (**v383)(char *, _QWORD, uint64_t);
  uint64_t v384;
  uint64_t v385;
  int v386;
  __int16 v387;
  int v388;
  __int16 v389;
  int v390;
  __int16 v391;
  _BYTE v392[7];
  _BYTE v393[7];
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  __int128 v401;
  unint64_t v402;
  unint64_t v403;
  unsigned __int8 v404;
  char v405;
  __int128 v406;
  unint64_t v407;
  void *v408;
  unsigned __int8 v409;
  char v410;
  unint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  unsigned __int8 v415;
  unsigned __int8 v416;

  v376 = a8;
  v354 = (_QWORD *)a7;
  v361 = a6;
  v347 = a5;
  v349 = a4;
  LODWORD(v21) = a3;
  v352 = a19;
  v351 = a18;
  v25 = sub_1CDAB8388();
  v383 = *(void (***)(char *, _QWORD, uint64_t))(v25 - 8);
  v384 = v25;
  v26 = MEMORY[0x1E0C80A78](v25);
  v382 = (char *)&v325 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v381 = (char *)&v325 - v28;
  v29 = sub_1CDAB828C();
  v385 = *(_QWORD *)(v29 - 8);
  v30 = MEMORY[0x1E0C80A78](v29);
  v370 = (char *)&v325 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v369 = (char *)&v325 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v371 = (char *)&v325 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v379 = (uint64_t)&v325 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v375 = (char *)&v325 - v39;
  MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v325 - v40;
  v42 = sub_1CDAB8370();
  v362 = *(_QWORD *)(v42 - 8);
  v363 = v42;
  v43 = MEMORY[0x1E0C80A78](v42);
  v373 = (char *)&v325 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x1E0C80A78](v43);
  v372 = (char *)&v325 - v46;
  MEMORY[0x1E0C80A78](v45);
  v378 = (char *)&v325 - v47;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4030);
  v49 = MEMORY[0x1E0C80A78](v48);
  v380 = (char *)&v325 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v49);
  v364 = (uint64_t)&v325 - v51;
  v374 = sub_1CDAB82BC();
  v367 = *(_QWORD *)(v374 - 8);
  v52 = MEMORY[0x1E0C80A78](v374);
  v360 = (char *)&v325 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x1E0C80A78](v52);
  v355 = (uint64_t)&v325 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v365 = (char *)&v325 - v57;
  MEMORY[0x1E0C80A78](v56);
  v356 = (char *)&v325 - v58;
  v350 = a17;
  if (!a17)
    goto LABEL_9;
  v59 = objc_msgSend(v350, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v59)
  {
LABEL_278:
    __break(1u);
    goto LABEL_279;
  }
  v60 = v59;
  v61 = objc_msgSend(v59, sel_idsInfo);

  if (!v61)
  {
LABEL_279:
    __break(1u);
    goto LABEL_280;
  }
  v62 = objc_msgSend(v61, sel_idsIdentifierString);

  if (v62)
  {
    v63 = sub_1CDAB84C0();
    v65 = v64;

    if (!v352)
    {
      swift_bridgeObjectRelease();
      v346 = 0;
      goto LABEL_11;
    }
    if (v63 != v351 || v65 != v352)
    {
      v346 = sub_1CDAB87CC();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    v66 = 1;
  }
  else
  {
LABEL_9:
    v66 = v352 == 0;
  }
  v346 = v66;
LABEL_11:
  v353 = a20;
  if (!a20)
    goto LABEL_15;
  v67 = objc_msgSend(v353, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v67)
  {
LABEL_280:
    __break(1u);
    goto LABEL_281;
  }
  v68 = v67;
  v69 = objc_msgSend(v67, sel_nearbyVisibleDeviceInfos);

  if (!v69 || (v411 = 0, sub_1CD0C9A74(0, &qword_1EFA45A90), sub_1CDAB8514(), v69, (v70 = v411) == 0))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v70 = MEMORY[0x1E0DEE9D8];
  }
  v71 = (uint64_t)v380;
  if (v70 >> 62)
    goto LABEL_274;
  v72 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_18:
  v377 = v41;
  v345 = a9;
  v344 = (int)v21;
  v342 = a1;
  v343 = a2;
  if (v72)
  {
    if (v72 < 1)
    {
LABEL_276:
      __break(1u);
      goto LABEL_277;
    }
    v73 = 0;
    v357 = v70 & 0xC000000000000001;
    v366 = MEMORY[0x1E0DEE9D8];
    v21 = v371;
    v358 = v72;
    v359 = v70;
    do
    {
      if (v357)
        v74 = (id)MEMORY[0x1D17B8504](v73, v70);
      else
        v74 = *(id *)(v70 + 8 * v73 + 32);
      v75 = v74;
      v76 = objc_msgSend(v74, sel_idsIdentifierString);
      if (v76)
      {
        v77 = v76;
        sub_1CDAB84C0();
        v79 = v78;

        v80 = objc_msgSend(v75, sel_mediaRouteIdString);
        v368 = v79;
        if (v80)
        {
          v81 = v80;
          sub_1CDAB84C0();

        }
        v83 = v364;
        sub_1CDAB8298();
        v82 = 0;
        v41 = v377;
        v71 = (uint64_t)v380;
      }
      else
      {
        v82 = 1;
        v83 = v364;
      }
      v84 = v367;
      v85 = v374;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v367 + 56))(v83, v82, 1, v374);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v83, 1, v85) == 1)
      {
        sub_1CD0C9BBC(v83, &qword_1ED8C4030);
      }
      else
      {
        v86 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 32);
        v87 = v356;
        v86(v356, v83, v85);
        v86(v365, (uint64_t)v87, v85);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v88 = v366;
        else
          v88 = sub_1CD0D1BE0(0, *(_QWORD *)(v366 + 16) + 1, 1, v366);
        v90 = *(_QWORD *)(v88 + 16);
        v89 = *(_QWORD *)(v88 + 24);
        if (v90 >= v89 >> 1)
          v88 = sub_1CD0D1BE0(v89 > 1, v90 + 1, 1, v88);
        *(_QWORD *)(v88 + 16) = v90 + 1;
        v91 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
        v366 = v88;
        v86((char *)(v88 + v91 + *(_QWORD *)(v84 + 72) * v90), (uint64_t)v365, v85);
        v21 = v371;
        v71 = (uint64_t)v380;
      }
      ++v73;
      v70 = v359;
    }
    while (v358 != v73);
  }
  else
  {
    v366 = MEMORY[0x1E0DEE9D8];
    v84 = v367;
    v21 = v371;
  }
  swift_bridgeObjectRelease_n();
  if (!v353)
  {
    v95 = MEMORY[0x1E0DEE9D8];
    if (!(MEMORY[0x1E0DEE9D8] >> 62))
      goto LABEL_45;
LABEL_66:
    swift_bridgeObjectRetain();
    v71 = (uint64_t)v380;
    v96 = sub_1CDAB8778();
    if (v96)
      goto LABEL_46;
LABEL_67:
    v364 = MEMORY[0x1E0DEE9D8];
    goto LABEL_68;
  }
  v92 = objc_msgSend(v353, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v92)
  {
LABEL_281:
    __break(1u);
    return;
  }
  v93 = v92;
  v94 = objc_msgSend(v92, sel_networkVisibleDeviceInfos);

  v95 = MEMORY[0x1E0DEE9D8];
  if (v94)
  {
    v411 = 0;
    sub_1CD0C9A74(0, &qword_1EFA45A90);
    sub_1CDAB8514();

    if (v411)
      v95 = v411;
  }
  v71 = (uint64_t)v380;
  if (v95 >> 62)
    goto LABEL_66;
LABEL_45:
  v96 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v96)
    goto LABEL_67;
LABEL_46:
  if (v96 < 1)
  {
LABEL_277:
    __break(1u);
    goto LABEL_278;
  }
  v97 = 0;
  v358 = v95 & 0xC000000000000001;
  v364 = MEMORY[0x1E0DEE9D8];
  v359 = v95;
  do
  {
    if (v358)
      v98 = (id)MEMORY[0x1D17B8504](v97, v95);
    else
      v98 = *(id *)(v95 + 8 * v97 + 32);
    v99 = v98;
    v100 = objc_msgSend(v98, sel_idsIdentifierString);
    if (v100)
    {
      v101 = v100;
      v368 = sub_1CDAB84C0();
      v365 = v102;

      v103 = objc_msgSend(v99, sel_mediaRouteIdString);
      if (v103)
      {
        v104 = v103;
        sub_1CDAB84C0();

      }
      v71 = (uint64_t)v380;
      sub_1CDAB8298();
      v105 = 0;
      v41 = v377;
    }
    else
    {
      v105 = 1;
    }
    v106 = v374;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v71, v105, 1, v374);

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v71, 1, v106) == 1)
    {
      sub_1CD0C9BBC(v71, &qword_1ED8C4030);
    }
    else
    {
      v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32);
      v108 = v355;
      v107(v355, v71, v106);
      v107((uint64_t)v360, v108, v106);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v109 = v364;
      else
        v109 = sub_1CD0D1BE0(0, *(_QWORD *)(v364 + 16) + 1, 1, v364);
      v111 = *(_QWORD *)(v109 + 16);
      v110 = *(_QWORD *)(v109 + 24);
      if (v111 >= v110 >> 1)
        v109 = sub_1CD0D1BE0(v110 > 1, v111 + 1, 1, v109);
      *(_QWORD *)(v109 + 16) = v111 + 1;
      v112 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
      v364 = v109;
      v107(v109 + v112 + *(_QWORD *)(v84 + 72) * v111, (uint64_t)v360, v106);
      v21 = v371;
      v71 = (uint64_t)v380;
    }
    ++v97;
    v95 = v359;
  }
  while (v96 != v97);
LABEL_68:
  swift_bridgeObjectRelease_n();
  v113 = *(_QWORD *)(v364 + 16);
  if (v113)
  {
    v114 = v364 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
    v115 = *(_QWORD *)(v84 + 72);
    swift_bridgeObjectRetain();
    v116 = v113 - 1;
    while (1)
    {
      v117 = v116;
      if (sub_1CDAB82A4() == v376 && v118 == a10)
        break;
      v119 = sub_1CDAB87CC();
      swift_bridgeObjectRelease();
      LODWORD(v356) = v119;
      if ((v119 & 1) == 0)
      {
        v116 = v117 - 1;
        v114 += v115;
        if (v117)
          continue;
      }
      goto LABEL_77;
    }
    swift_bridgeObjectRelease();
    LODWORD(v356) = 1;
LABEL_77:
    swift_bridgeObjectRelease();
    v21 = v371;
  }
  else
  {
    LODWORD(v356) = 0;
  }
  v365 = a16;
  v368 = a15;
  v120 = *(_QWORD *)(v366 + 16);
  if (v120)
  {
    v121 = v366 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
    v122 = *(_QWORD *)(v84 + 72);
    swift_bridgeObjectRetain();
    v123 = v120 - 1;
    while (1)
    {
      v124 = v123;
      if (sub_1CDAB82A4() == v376 && v125 == a10)
        break;
      v126 = sub_1CDAB87CC();
      swift_bridgeObjectRelease();
      if ((v126 & 1) == 0)
      {
        v123 = v124 - 1;
        v121 += v122;
        if (v124)
          continue;
      }
      goto LABEL_87;
    }
    swift_bridgeObjectRelease();
    v126 = 1;
LABEL_87:
    v341 = v126;
    swift_bridgeObjectRelease();
    v21 = v371;
  }
  else
  {
    v341 = 0;
  }
  v127 = *(_QWORD *)(v364 + 16);
  v128 = v349;
  a1 = (uint64_t)v375;
  if (v127)
  {
    v129 = v364 + ((*(unsigned __int8 *)(v367 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v367 + 80));
    v130 = *(_QWORD *)(v367 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      if (sub_1CDAB82A4() == v368 && v131 == v365)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_98;
      }
      v132 = sub_1CDAB87CC();
      swift_bridgeObjectRelease();
      if ((v132 & 1) != 0)
        break;
      v129 += v130;
      if (!--v127)
      {
        swift_bridgeObjectRelease_n();
        v340 = 0;
        goto LABEL_99;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_98:
    v340 = 1;
LABEL_99:
    v21 = v371;
  }
  else
  {
    swift_bridgeObjectRelease();
    v340 = 0;
  }
  v133 = *(_QWORD *)(v366 + 16);
  if (v133)
  {
    v134 = v366 + ((*(unsigned __int8 *)(v367 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v367 + 80));
    v135 = *(_QWORD *)(v367 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      if (sub_1CDAB82A4() == v368 && v136 == v365)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_110;
      }
      v137 = sub_1CDAB87CC();
      swift_bridgeObjectRelease();
      if ((v137 & 1) != 0)
        break;
      v134 += v135;
      if (!--v133)
      {
        swift_bridgeObjectRelease_n();
        v339 = 0;
        goto LABEL_111;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_110:
    v339 = 1;
LABEL_111:
    v21 = v371;
  }
  else
  {
    swift_bridgeObjectRelease();
    v339 = 0;
  }
  v138 = MEMORY[0x1E0DEE9E8];
  v399 = MEMORY[0x1E0DEE9E8];
  v400 = MEMORY[0x1E0DEE9E8];
  v397 = MEMORY[0x1E0DEE9E8];
  v398 = MEMORY[0x1E0DEE9E8];
  v395 = MEMORY[0x1E0DEE9E8];
  v396 = MEMORY[0x1E0DEE9E8];
  v394 = MEMORY[0x1E0DEE9E8];
  v139 = objc_msgSend(v128, sel_SSID);
  a9 = (uint64_t *)v369;
  if (v139)
  {
    v140 = v139;
    v141 = sub_1CDAB84C0();
    v143 = v142;

    sub_1CD0DE364((uint64_t *)&v411, v141, v143);
    swift_bridgeObjectRelease();
    v138 = v400;
    swift_bridgeObjectRetain();
  }
  v355 = v138;
  v144 = objc_msgSend(v128, sel_networkBSSID);
  if (v144)
  {
    v145 = v144;
    v146 = sub_1CDAB84C0();
    v148 = v147;

    sub_1CD0DE364((uint64_t *)&v411, v146, v148);
    swift_bridgeObjectRelease();
    v348 = v399;
    swift_bridgeObjectRetain();
  }
  else
  {
    v348 = MEMORY[0x1E0DEE9E8];
  }
  a2 = v367;
  v70 = v362;
  v149 = v363;
  v150 = v372;
  v151 = (char *)v354[2];
  v380 = (char *)v29;
  v360 = v151;
  if (v151)
  {
    v364 = *(_QWORD *)(v361 + 16);
    v359 = (unint64_t)v354
         + ((*(unsigned __int8 *)(v362 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v362 + 80));
    v152 = *(_QWORD *)(v362 + 72);
    v357 = *(_QWORD *)(v362 + 16);
    v358 = v152;
    LODWORD(v374) = *MEMORY[0x1E0D27DE0];
    swift_bridgeObjectRetain();
    v153 = 0;
    while (1)
    {
      v366 = v153;
      ((void (*)(char *, unint64_t, uint64_t))v357)(v378, v359 + v358 * v153, v149);
      if (!v364)
      {
LABEL_120:
        (*(void (**)(char *, uint64_t))(v70 + 8))(v378, v149);
        goto LABEL_121;
      }
      v154 = v385;
      v155 = v361 + ((*(unsigned __int8 *)(v385 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v385 + 80));
      swift_bridgeObjectRetain();
      v376 = *(_QWORD *)(v154 + 72);
      v156 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 16);
      v157 = v364;
      v156(v41, v155, v29);
      while (1)
      {
        v159 = sub_1CDAB8274();
        v161 = v160;
        if (v159 == sub_1CDAB8310() && v161 == v162)
        {
          swift_bridgeObjectRelease_n();
          v163 = v377;
          v156((char *)a1, (uint64_t)v377, v29);
        }
        else
        {
          v164 = sub_1CDAB87CC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v163 = v377;
          v156((char *)a1, (uint64_t)v377, v29);
          if ((v164 & 1) == 0)
          {
            v158 = *(void (**)(uint64_t, uint64_t))(v385 + 8);
            v158(a1, v29);
            v158((uint64_t)v163, v29);
            v41 = v163;
            goto LABEL_125;
          }
        }
        v165 = v381;
        sub_1CDAB8280();
        v167 = v382;
        v166 = v383;
        v168 = v384;
        v383[13](v382, v374, v384);
        v169 = sub_1CDAB837C();
        v170 = (void (*)(char *, uint64_t))v166[1];
        v171 = v167;
        a1 = (uint64_t)v375;
        v170(v171, v168);
        v172 = v165;
        v29 = (uint64_t)v380;
        v170(v172, v168);
        v173 = *(void (**)(uint64_t, uint64_t))(v385 + 8);
        v173(a1, v29);
        v173((uint64_t)v163, v29);
        v41 = v163;
        if ((v169 & 1) != 0)
          break;
LABEL_125:
        v155 += v376;
        if (!--v157)
        {
          swift_bridgeObjectRelease();
          a2 = v367;
          a9 = (uint64_t *)v369;
          v70 = v362;
          v149 = v363;
          v21 = v371;
          v150 = v372;
          goto LABEL_120;
        }
        v156(v41, v155, v29);
      }
      swift_bridgeObjectRelease();
      v174 = v378;
      v175 = sub_1CDAB8334();
      if (v176)
      {
        v177 = v175;
        v178 = v176;
        swift_bridgeObjectRetain();
        sub_1CD0DE364((uint64_t *)&v411, v177, v178);
        swift_bridgeObjectRelease();
        sub_1CD0DE364((uint64_t *)&v411, v177, v178);
        swift_bridgeObjectRelease();
      }
      v179 = sub_1CDAB8340();
      a2 = v367;
      v181 = v174;
      a9 = (uint64_t *)v369;
      v21 = v371;
      if (v180)
      {
        sub_1CD0DE364((uint64_t *)&v411, v179, v180);
        swift_bridgeObjectRelease();
      }
      v70 = v362;
      v149 = v363;
      (*(void (**)(char *, uint64_t))(v362 + 8))(v181, v363);
      v150 = v372;
LABEL_121:
      v153 = v366 + 1;
      if ((char *)(v366 + 1) == v360)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  if (v353)
  {
    v182 = v353;
    sub_1CD0D9174(v182, v351, v352, &v401);
    v336 = v401;
    v338 = BYTE2(v401);
    v357 = BYTE3(v401);
    v360 = (char *)BYTE8(v401);
    v358 = v403;
    v359 = v402;
    LODWORD(v335) = v404;
    if (BYTE1(v401))
      v183 = 256;
    else
      v183 = 0;
    v184 = 0x100000000;
    if (!BYTE4(v401))
      v184 = 0;
    v332 = v184;
    v333 = v183;
    if (BYTE5(v401))
      v185 = 0x10000000000;
    else
      v185 = 0;
    v186 = 0x1000000000000;
    if (!BYTE6(v401))
      v186 = 0;
    v330 = v186;
    v331 = v185;
    v187 = 0x100000000000000;
    if (!BYTE7(v401))
      v187 = 0;
    v329 = v187;
    if (v405)
      v188 = 256;
    else
      v188 = 0;
    LODWORD(v328) = v188;
    v334 = (unint64_t)v182;
    sub_1CD0E0020(v182);
    v41 = v190;
    a1 = v191;
    v337 = v189;
    if (v189)
    {
      v192 = objc_msgSend(v189, sel_SSID);
      if (v192)
      {
        v193 = v192;
        v194 = sub_1CDAB84C0();
        v196 = v195;

        swift_bridgeObjectRetain();
        sub_1CD0DE364((uint64_t *)&v411, v194, v196);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D20);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1CDB7EC50;
        *(_QWORD *)(inited + 32) = v194;
        *(_QWORD *)(inited + 40) = v196;
        v198 = sub_1CD0D7D3C(inited, v355);
        swift_setDeallocating();
        swift_arrayDestroy();
      }
      else
      {
        v198 = v355;
      }
      v355 = v198;
      v202 = objc_msgSend(v337, sel_networkBSSID);
      if (v202)
      {
        v203 = v202;
        v204 = sub_1CDAB84C0();
        v206 = v205;

        swift_bridgeObjectRetain();
        sub_1CD0DE364((uint64_t *)&v411, v204, v206);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D20);
        v207 = swift_initStackObject();
        *(_OWORD *)(v207 + 16) = xmmword_1CDB7EC50;
        *(_QWORD *)(v207 + 32) = v204;
        *(_QWORD *)(v207 + 40) = v206;
        v348 = sub_1CD0D7D3C(v207, v348);
        swift_setDeallocating();
        swift_arrayDestroy();
      }
      a2 = v367;
      a9 = (uint64_t *)v369;
      v70 = v362;
      v149 = v363;
      v150 = v372;
    }
    v375 = *(char **)(a1 + 16);
    if (v375)
    {
      v376 = *((_QWORD *)v41 + 2);
      v374 = a1 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
      LODWORD(v378) = *MEMORY[0x1E0D27DD0];
      swift_bridgeObjectRetain();
      v208 = 0;
      v366 = (uint64_t)v41;
      v364 = a1;
      while (1)
      {
        if ((unint64_t)v208 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
LABEL_273:
          __break(1u);
LABEL_274:
          swift_bridgeObjectRetain();
          v71 = (uint64_t)v380;
          v72 = sub_1CDAB8778();
          goto LABEL_18;
        }
        v209 = *(_QWORD *)(v70 + 72);
        v377 = v208;
        (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v150, v374 + v209 * (_QWORD)v208, v149);
        if (!v376)
        {
LABEL_167:
          (*(void (**)(char *, uint64_t))(v70 + 8))(v150, v149);
          goto LABEL_168;
        }
        v210 = v385;
        v211 = &v41[(*(unsigned __int8 *)(v385 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v385 + 80)];
        swift_bridgeObjectRetain_n();
        v212 = *(_QWORD *)(v210 + 72);
        v213 = *(void (**)(uint64_t, char *, uint64_t))(v210 + 16);
        v214 = v376;
        v213(v379, v211, v29);
        while (1)
        {
          v216 = sub_1CDAB8274();
          v218 = v217;
          if (v216 == sub_1CDAB8310() && v218 == v219)
          {
            swift_bridgeObjectRelease_n();
            v213((uint64_t)v21, (char *)v379, v29);
          }
          else
          {
            v220 = sub_1CDAB87CC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v221 = v379;
            v213((uint64_t)v21, (char *)v379, v29);
            if ((v220 & 1) == 0)
            {
              v215 = *(void (**)(char *, uint64_t))(v385 + 8);
              v215(v21, v29);
              v215((char *)v221, v29);
              goto LABEL_173;
            }
          }
          v222 = v381;
          sub_1CDAB8280();
          v224 = v382;
          v223 = v383;
          v225 = v384;
          v383[13](v382, v378, v384);
          sub_1CD0C2AAC(&qword_1EFA45D18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D27DE8], MEMORY[0x1E0D27DF0]);
          v226 = sub_1CDAB849C();
          v227 = (void (*)(char *, uint64_t))v223[1];
          v227(v224, v225);
          v228 = v222;
          v29 = (uint64_t)v380;
          v229 = v225;
          v21 = v371;
          v227(v228, v229);
          v230 = *(void (**)(char *, uint64_t))(v385 + 8);
          v230(v21, v29);
          v230((char *)v379, v29);
          v221 = v379;
          if ((v226 & 1) == 0)
            break;
LABEL_173:
          v211 += v212;
          if (!--v214)
          {
            v41 = (char *)v366;
            swift_bridgeObjectRelease_n();
            a2 = v367;
            a9 = (uint64_t *)v369;
            v70 = v362;
            v149 = v363;
            v150 = v372;
            a1 = v364;
            goto LABEL_167;
          }
          v213(v221, v211, v29);
        }
        v41 = (char *)v366;
        swift_bridgeObjectRelease_n();
        v150 = v372;
        v231 = sub_1CDAB8334();
        if (v232)
        {
          v233 = v231;
          v234 = v232;
          swift_bridgeObjectRetain();
          sub_1CD0DE364((uint64_t *)&v411, v233, v234);
          swift_bridgeObjectRelease();
          sub_1CD0DE364((uint64_t *)&v411, v233, v234);
          swift_bridgeObjectRelease();
        }
        v235 = sub_1CDAB8340();
        a2 = v367;
        a9 = (uint64_t *)v369;
        v70 = v362;
        if (v236)
        {
          sub_1CD0DE364((uint64_t *)&v411, v235, v236);
          swift_bridgeObjectRelease();
        }
        v149 = v363;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v150, v363);
        a1 = v364;
LABEL_168:
        v208 = v377 + 1;
        if (v377 + 1 == v375)
        {

          swift_bridgeObjectRelease();
          goto LABEL_187;
        }
      }
    }

LABEL_187:
    v338 = v333 | v336 | (v338 << 16) | (v357 << 24) | v332 | v331 | v330 | v329;
    LODWORD(v357) = v328 | v335;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v199 = v350;
    if (v350)
      goto LABEL_188;
LABEL_158:
    v366 = 0;
    v364 = 0;
    v337 = 0;
    v200 = 0;
    v201 = 2;
    goto LABEL_234;
  }
  v359 = 0;
  v360 = 0;
  v358 = 0;
  LODWORD(v357) = 0;
  v338 = 2;
  v199 = v350;
  if (!v350)
    goto LABEL_158;
LABEL_188:
  v237 = v199;
  sub_1CD0D9174(v237, v351, v352, &v406);
  v333 = v406;
  v334 = BYTE2(v406);
  v335 = BYTE3(v406);
  v366 = BYTE8(v406);
  v364 = v407;
  v337 = v408;
  LODWORD(v332) = v409;
  if (BYTE1(v406))
    v238 = 256;
  else
    v238 = 0;
  v239 = 0x100000000;
  if (!BYTE4(v406))
    v239 = 0;
  v330 = v239;
  v331 = v238;
  if (BYTE5(v406))
    v240 = 0x10000000000;
  else
    v240 = 0;
  v241 = 0x1000000000000;
  if (!BYTE6(v406))
    v241 = 0;
  v328 = v241;
  v329 = v240;
  v242 = 0x100000000000000;
  if (!BYTE7(v406))
    v242 = 0;
  v327 = v242;
  if (v410)
    v243 = 256;
  else
    v243 = 0;
  v326 = v243;
  v325 = v237;
  sub_1CD0E0020(v237);
  v41 = v245;
  v21 = v246;
  v336 = (unint64_t)v244;
  if (v244)
  {
    v247 = objc_msgSend(v244, sel_SSID);
    if (v247)
    {
      v248 = v247;
      v249 = sub_1CDAB84C0();
      v251 = v250;

      swift_bridgeObjectRetain();
      sub_1CD0DE364((uint64_t *)&v411, v249, v251);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D20);
      v252 = swift_initStackObject();
      *(_OWORD *)(v252 + 16) = xmmword_1CDB7EC50;
      *(_QWORD *)(v252 + 32) = v249;
      *(_QWORD *)(v252 + 40) = v251;
      v253 = sub_1CD0D7D3C(v252, v355);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
    else
    {
      v253 = v355;
    }
    v355 = v253;
    v254 = objc_msgSend((id)v336, sel_networkBSSID);
    if (v254)
    {
      v255 = v254;
      v256 = sub_1CDAB84C0();
      v258 = v257;

      swift_bridgeObjectRetain();
      sub_1CD0DE364((uint64_t *)&v411, v256, v258);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D20);
      v259 = swift_initStackObject();
      *(_OWORD *)(v259 + 16) = xmmword_1CDB7EC50;
      *(_QWORD *)(v259 + 32) = v256;
      *(_QWORD *)(v259 + 40) = v258;
      v348 = sub_1CD0D7D3C(v259, v348);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
    a2 = v367;
    v70 = v362;
    v149 = v363;
  }
  v375 = (char *)*((_QWORD *)v21 + 2);
  if (v375)
  {
    v377 = (char *)*((_QWORD *)v41 + 2);
    v374 = (uint64_t)&v21[(*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80)];
    LODWORD(v378) = *MEMORY[0x1E0D27DD0];
    swift_bridgeObjectRetain();
    v260 = 0;
    v371 = v21;
    v372 = v41;
    while (1)
    {
      if (v260 >= *((_QWORD *)v21 + 2))
        goto LABEL_273;
      (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v373, v374 + *(_QWORD *)(v70 + 72) * v260, v149);
      if (!v377)
      {
LABEL_213:
        (*(void (**)(char *, uint64_t))(v70 + 8))(v373, v149);
        goto LABEL_214;
      }
      v376 = v260;
      v261 = v385;
      a1 = (uint64_t)&v41[(*(unsigned __int8 *)(v385 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v385 + 80)];
      swift_bridgeObjectRetain_n();
      v379 = *(_QWORD *)(v261 + 72);
      v262 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v261 + 16);
      v263 = v377;
      v262(a9, a1, v29);
      while (1)
      {
        v266 = sub_1CDAB8274();
        v268 = v267;
        if (v266 == sub_1CDAB8310() && v268 == v269)
        {
          swift_bridgeObjectRelease_n();
          v270 = v370;
          v262((uint64_t *)v370, (uint64_t)a9, v29);
        }
        else
        {
          v271 = sub_1CDAB87CC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v270 = v370;
          v262((uint64_t *)v370, (uint64_t)a9, v29);
          if ((v271 & 1) == 0)
          {
            v264 = v270;
            v265 = *(void (**)(char *, uint64_t))(v385 + 8);
            v265(v264, v29);
            v265((char *)a9, v29);
            goto LABEL_219;
          }
        }
        v272 = v381;
        v273 = v270;
        sub_1CDAB8280();
        v275 = v382;
        v274 = v383;
        v276 = v384;
        v383[13](v382, v378, v384);
        sub_1CD0C2AAC(&qword_1EFA45D18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D27DE8], MEMORY[0x1E0D27DF0]);
        v277 = sub_1CDAB849C();
        v278 = (void (*)(char *, uint64_t))v274[1];
        v278(v275, v276);
        v279 = v272;
        v29 = (uint64_t)v380;
        v278(v279, v276);
        v280 = *(void (**)(char *, uint64_t))(v385 + 8);
        v281 = v273;
        a9 = (uint64_t *)v369;
        v280(v281, v29);
        v280((char *)a9, v29);
        if ((v277 & 1) == 0)
          break;
LABEL_219:
        a1 += v379;
        if (!--v263)
        {
          v41 = v372;
          swift_bridgeObjectRelease_n();
          a2 = v367;
          v70 = v362;
          v149 = v363;
          v21 = v371;
          v260 = v376;
          goto LABEL_213;
        }
        v262(a9, a1, v29);
      }
      v41 = v372;
      swift_bridgeObjectRelease_n();
      v282 = sub_1CDAB8334();
      if (v283)
      {
        v284 = v282;
        a1 = v283;
        swift_bridgeObjectRetain();
        sub_1CD0DE364((uint64_t *)&v411, v284, a1);
        swift_bridgeObjectRelease();
        sub_1CD0DE364((uint64_t *)&v411, v284, a1);
        swift_bridgeObjectRelease();
      }
      v285 = v373;
      v286 = sub_1CDAB8340();
      v70 = v362;
      v260 = v376;
      if (v287)
      {
        sub_1CD0DE364((uint64_t *)&v411, v286, v287);
        swift_bridgeObjectRelease();
      }
      v149 = v363;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v285, v363);
      a2 = v367;
      v21 = v371;
LABEL_214:
      if ((char *)++v260 == v375)
      {

        swift_bridgeObjectRelease();
        goto LABEL_233;
      }
    }
  }

LABEL_233:
  v201 = v331 | v333 | (v334 << 16) | (v335 << 24) | v330 | v329 | v328 | v327;
  v200 = v326 | v332;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v199 = v350;
LABEL_234:
  LODWORD(v288) = v347;
  if (v347 >= -80)
    goto LABEL_240;
  v289 = 1;
  v290 = &selRef_uploadCompletedWithError_;
  if (!v199)
    goto LABEL_244;
LABEL_236:
  v291 = (unint64_t)objc_msgSend(v199, v290[213]);
  if ((v291 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_276;
  }
  v292 = v353;
  if (v353)
  {
    while (1)
    {
      v288 = (unint64_t)objc_msgSend(v292, v290[213]);
      v199 = v354;
      if ((v288 & 0x8000000000000000) == 0)
        break;
      __break(1u);
LABEL_240:
      if ((int)v288 > -61)
      {
        v289 = ((int)v288 >> 31) & 3;
        v290 = &selRef_uploadCompletedWithError_;
        if (v199)
          goto LABEL_236;
      }
      else
      {
        v289 = 2;
        v290 = &selRef_uploadCompletedWithError_;
        if (v199)
          goto LABEL_236;
      }
LABEL_244:
      v291 = 0;
      v292 = v353;
      if (!v353)
        goto LABEL_245;
    }
  }
  else
  {
LABEL_245:
    v288 = 0;
  }
  LODWORD(v381) = v289;
  v382 = (char *)v288;
  v383 = (void (**)(char *, _QWORD, uint64_t))v291;
  v384 = v201;
  v293 = *(_QWORD *)(a11 + 16);
  LODWORD(v385) = v200;
  if (v293)
  {
    v294 = a11 + ((*(unsigned __int8 *)(a2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a2 + 80));
    v295 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    v296 = v293 - 1;
    while (1)
    {
      v297 = v296;
      if (sub_1CDAB82A4() == v368 && v298 == v365)
        break;
      v299 = sub_1CDAB87CC();
      swift_bridgeObjectRelease();
      if ((v299 & 1) == 0)
      {
        v296 = v297 - 1;
        v294 += v295;
        if (v297)
          continue;
      }
      goto LABEL_255;
    }
    swift_bridgeObjectRelease();
    v299 = 1;
LABEL_255:
    swift_bridgeObjectRelease();
    a2 = v367;
  }
  else
  {
    v299 = 0;
  }
  v379 = a14;
  v300 = *(_QWORD *)(a12 + 16);
  if (v300)
  {
    v301 = a12 + ((*(unsigned __int8 *)(a2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a2 + 80));
    v302 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    v303 = v300 - 1;
    while (1)
    {
      v304 = v303;
      if (sub_1CDAB82A4() == v368 && v305 == v365)
        break;
      v306 = sub_1CDAB87CC();
      swift_bridgeObjectRelease();
      if ((v306 & 1) == 0)
      {
        v303 = v304 - 1;
        v301 += v302;
        if (v304)
          continue;
      }
      goto LABEL_265;
    }
    swift_bridgeObjectRelease();
    v306 = 1;
LABEL_265:
    swift_bridgeObjectRelease();
  }
  else
  {
    v306 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v307 = v349;
  v308 = objc_msgSend(v349, sel_SSID);
  LODWORD(v380) = a21;
  if (v308
    && (v308, (v309 = objc_msgSend(v307, sel_networkBSSID)) != 0))
  {

    v310 = 1;
  }
  else
  {
    v310 = 0;
  }
  v311 = v352;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CD0D8A1C(v361, (uint64_t)v354, a11, a12, a13, v379, v311 != 0, 1, &v411, v351, v311, (char)v381, v310);
  LODWORD(v372) = v411;
  LODWORD(v371) = BYTE1(v411);
  LODWORD(v370) = WORD1(v411);
  LODWORD(v369) = BYTE4(v411);
  LODWORD(v368) = BYTE5(v411);
  LODWORD(v367) = BYTE6(v411);
  LOBYTE(v311) = HIBYTE(v411);
  v312 = v412;
  v313 = v413;
  v314 = v414;
  LODWORD(v376) = v415;
  LODWORD(v375) = v416;
  v381 = *(char **)(v400 + 16);
  v315 = v343;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v379 = *(_QWORD *)(v399 + 16);
  swift_bridgeObjectRelease();
  v378 = *(char **)(v355 + 16);
  swift_bridgeObjectRelease();
  v377 = *(char **)(v348 + 16);
  swift_bridgeObjectRelease();
  v374 = *(_QWORD *)(v398 + 16);
  swift_bridgeObjectRelease();
  v373 = *(char **)(v394 + 16);
  swift_bridgeObjectRelease();
  v316 = sub_1CD0D7EBC(v395, v397);
  swift_bridgeObjectRelease();
  v317 = sub_1CD0D7EBC(v396, v316);
  swift_bridgeObjectRelease();
  v318 = *(_QWORD *)(v317 + 16);
  swift_release();
  v319 = v345;
  *v345 = v342;
  v319[1] = v315;
  *((_BYTE *)v319 + 16) = v344;
  *((_BYTE *)v319 + 24) = (_BYTE)v372;
  *((_BYTE *)v319 + 25) = (_BYTE)v371;
  *((_WORD *)v319 + 13) = (_WORD)v370;
  *((_BYTE *)v319 + 28) = (_BYTE)v369;
  *((_BYTE *)v319 + 29) = v368;
  *((_BYTE *)v319 + 30) = v367;
  *((_BYTE *)v319 + 31) = v311;
  *((_BYTE *)v319 + 32) = v312;
  v319[5] = v313;
  v319[6] = v314;
  *(_DWORD *)((char *)v319 + 17) = *(_DWORD *)v393;
  *((_DWORD *)v319 + 5) = *(_DWORD *)&v393[3];
  *((_DWORD *)v319 + 9) = *(_DWORD *)&v392[3];
  *(_DWORD *)((char *)v319 + 33) = *(_DWORD *)v392;
  v320 = v356 & 1;
  v321 = v341 & 1;
  v322 = v346 & 1;
  v323 = v380 & 1;
  *((_BYTE *)v319 + 56) = v376;
  *((_BYTE *)v319 + 57) = (_BYTE)v375;
  *(_DWORD *)((char *)v319 + 58) = v390;
  *((_WORD *)v319 + 31) = v391;
  v319[8] = v384;
  v319[9] = v366;
  v319[10] = v364;
  v319[11] = (uint64_t)v337;
  *((_WORD *)v319 + 48) = v385;
  *(_DWORD *)((char *)v319 + 98) = v388;
  *((_WORD *)v319 + 51) = v389;
  v319[13] = v338;
  v319[14] = (uint64_t)v360;
  v319[15] = v359;
  v319[16] = v358;
  *((_WORD *)v319 + 68) = v357;
  *((_WORD *)v319 + 71) = v387;
  *(_DWORD *)((char *)v319 + 138) = v386;
  v319[18] = (uint64_t)v381;
  v319[19] = v379;
  v319[20] = (uint64_t)v378;
  v319[21] = (uint64_t)v377;
  v319[22] = v374;
  v319[23] = (uint64_t)v373;
  *((_BYTE *)v319 + 192) = v299 & 1;
  *((_BYTE *)v319 + 193) = v306 & 1;
  *((_BYTE *)v319 + 194) = v340;
  *((_BYTE *)v319 + 195) = v339;
  *((_BYTE *)v319 + 196) = v320;
  *((_BYTE *)v319 + 197) = v321;
  v324 = v383;
  v319[25] = v318;
  v319[26] = (uint64_t)v324;
  v319[27] = (uint64_t)v382;
  *((_BYTE *)v319 + 224) = v322;
  *((_BYTE *)v319 + 225) = v323;
}

uint64_t sub_1CD0DBDBC(uint64_t a1, void (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD v18[2];
  _BYTE v19[40];
  uint64_t v20;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v20 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v20 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v20 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_1CD0C2BA8(*(_QWORD *)(a1 + 56) + 40 * v11, (uint64_t)v19);
    v18[0] = v13;
    v18[1] = v14;
    swift_bridgeObjectRetain();
    a2(v13, v14, v19);
    result = sub_1CD0C9BBC((uint64_t)v18, &qword_1EFA45CF8);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v20 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t destroy for Metric.Setup.NetworkInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Metric.Setup.NetworkInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  v5 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v5;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_WORD *)(a1 + 196) = *(_WORD *)(a2 + 196);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Metric.Setup.NetworkInfo(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v4 = *(_OWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 80);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 104);
  v7 = *(_OWORD *)(a2 + 120);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = v7;
  *(_OWORD *)(a1 + 104) = v6;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_BYTE *)(a1 + 194) = *(_BYTE *)(a2 + 194);
  *(_BYTE *)(a1 + 195) = *(_BYTE *)(a2 + 195);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_BYTE *)(a1 + 197) = *(_BYTE *)(a2 + 197);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
  return a1;
}

__n128 __swift_memcpy226_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_WORD *)(a1 + 224) = *((_WORD *)a2 + 112);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for Metric.Setup.NetworkInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_BYTE *)(a1 + 194) = *(_BYTE *)(a2 + 194);
  *(_BYTE *)(a1 + 195) = *(_BYTE *)(a2 + 195);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_BYTE *)(a1 + 197) = *(_BYTE *)(a2 + 197);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
  return a1;
}

uint64_t getEnumTagSinglePayload for Metric.Setup.NetworkInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 226))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Metric.Setup.NetworkInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 224) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 226) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 226) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.Setup.NetworkInfo()
{
  return &type metadata for Metric.Setup.NetworkInfo;
}

uint64_t sub_1CD0DC3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CD0D5C1C(a1, a2, a3, *(_QWORD *)(v3 + 16), 0x6C6C6F72746E6F63, 0xEB000000005F7265);
}

uint64_t sub_1CD0DC414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CD0DC45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CD0D5C1C(a1, a2, a3, *(_QWORD *)(v3 + 16), 0x5F7972616D697270, 0xE800000000000000);
}

uint64_t sub_1CD0DC488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CD0D5C1C(a1, a2, a3, *(_QWORD *)(v3 + 16), 0x726F737365636361, 0xEA00000000005F79);
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for Metric.NetworkInfo(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[34])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Metric.NetworkInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo()
{
  return &type metadata for Metric.NetworkInfo;
}

ValueMetadata *type metadata accessor for Metric.Setup()
{
  return &type metadata for Metric.Setup;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Metric.Setup.NetworkInfo.SetupCompletionState()
{
  return &type metadata for Metric.Setup.NetworkInfo.SetupCompletionState;
}

unint64_t sub_1CD0DC5B8()
{
  unint64_t result;

  result = qword_1EFA45D70;
  if (!qword_1EFA45D70)
  {
    result = MEMORY[0x1D17BA838](&unk_1CDB7ED68, &type metadata for Metric.Setup.NetworkInfo.SetupCompletionState);
    atomic_store(result, (unint64_t *)&qword_1EFA45D70);
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo.WiFiRSSIStatus()
{
  return &type metadata for Metric.NetworkInfo.WiFiRSSIStatus;
}

uint64_t _s19HomeKitDaemonLegacy6MetricO5SetupO11NetworkInfoV20SetupCompletionStateOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s19HomeKitDaemonLegacy6MetricO5SetupO11NetworkInfoV20SetupCompletionStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CD0DC6F0 + 4 * byte_1CDB7EC65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CD0DC724 + 4 * byte_1CDB7EC60[v4]))();
}

uint64_t sub_1CD0DC724(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CD0DC72C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CD0DC734);
  return result;
}

uint64_t sub_1CD0DC740(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CD0DC748);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CD0DC74C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CD0DC754(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo.FirstCloudImportStatus()
{
  return &type metadata for Metric.NetworkInfo.FirstCloudImportStatus;
}

uint64_t _s19HomeKitDaemonLegacy6MetricO11NetworkInfoV14PrimaryServiceOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s19HomeKitDaemonLegacy6MetricO11NetworkInfoV14PrimaryServiceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CD0DC84C + 4 * byte_1CDB7EC6F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CD0DC880 + 4 * byte_1CDB7EC6A[v4]))();
}

uint64_t sub_1CD0DC880(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CD0DC888(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CD0DC890);
  return result;
}

uint64_t sub_1CD0DC89C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CD0DC8A4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CD0DC8A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CD0DC8B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CD0DC8BC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1CD0DC8C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo.PrimaryService()
{
  return &type metadata for Metric.NetworkInfo.PrimaryService;
}

unint64_t sub_1CD0DC8E0()
{
  unint64_t result;

  result = qword_1EFA45D78;
  if (!qword_1EFA45D78)
  {
    result = MEMORY[0x1D17BA838](&unk_1CDB7EE50, &type metadata for Metric.NetworkInfo.PrimaryService);
    atomic_store(result, (unint64_t *)&qword_1EFA45D78);
  }
  return result;
}

unint64_t sub_1CD0DC928()
{
  unint64_t result;

  result = qword_1EFA45D80;
  if (!qword_1EFA45D80)
  {
    result = MEMORY[0x1D17BA838](&unk_1CDB7EEF0, &type metadata for Metric.NetworkInfo.FirstCloudImportStatus);
    atomic_store(result, (unint64_t *)&qword_1EFA45D80);
  }
  return result;
}

unint64_t sub_1CD0DC970()
{
  unint64_t result;

  result = qword_1EFA45D88;
  if (!qword_1EFA45D88)
  {
    result = MEMORY[0x1D17BA838](&unk_1CDB7EF90, &type metadata for Metric.NetworkInfo.WiFiRSSIStatus);
    atomic_store(result, (unint64_t *)&qword_1EFA45D88);
  }
  return result;
}

unint64_t sub_1CD0DC9B4(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

unint64_t sub_1CD0DC9DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t (**v8)(_QWORD, _QWORD);
  uint64_t ObjectType;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t (**v39)(_QWORD, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v1 = sub_1CDAB82BC();
  v43 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC19HomeKitDaemonLegacy23NetworkMismatchDetector_dataSource;
  v5 = MEMORY[0x1D17BA964](v0 + OBJC_IVAR____TtC19HomeKitDaemonLegacy23NetworkMismatchDetector_dataSource);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v7 = v5;
    v8 = *(uint64_t (***)(_QWORD, _QWORD))(v4 + 8);
    ObjectType = swift_getObjectType();
    v40 = v8[3](ObjectType, v8);
    v10 = v8[2](ObjectType, v8);
    v11 = *(_QWORD *)(v10 + 16);
    v41 = v7;
    if (v11)
    {
      v38 = ObjectType;
      v39 = v8;
      v44 = v6;
      sub_1CD0DF734(0, v11, 0);
      v12 = *(unsigned __int8 *)(v43 + 80);
      v37[1] = v10;
      v13 = v10 + ((v12 + 32) & ~v12);
      v42 = *(_QWORD *)(v43 + 72);
      v14 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
      do
      {
        v14(v3, v13, v1);
        v15 = sub_1CDAB82A4();
        v17 = v16;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v3, v1);
        v18 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CD0DF734(0, *(_QWORD *)(v18 + 16) + 1, 1);
          v18 = v44;
        }
        v20 = *(_QWORD *)(v18 + 16);
        v19 = *(_QWORD *)(v18 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1CD0DF734(v19 > 1, v20 + 1, 1);
          v18 = v44;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        v21 = v18 + 16 * v20;
        *(_QWORD *)(v21 + 32) = v15;
        *(_QWORD *)(v21 + 40) = v17;
        v13 += v42;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      v6 = MEMORY[0x1E0DEE9D8];
      ObjectType = v38;
      v8 = v39;
    }
    else
    {
      swift_bridgeObjectRelease();
      v18 = MEMORY[0x1E0DEE9D8];
    }
    v22 = sub_1CD0DFED0(v18);
    swift_bridgeObjectRelease();
    v23 = v8[1](ObjectType, v8);
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v39 = (uint64_t (**)(_QWORD, _QWORD))v22;
      v44 = v6;
      sub_1CD0DF734(0, v24, 0);
      v25 = *(unsigned __int8 *)(v43 + 80);
      v38 = v23;
      v26 = v23 + ((v25 + 32) & ~v25);
      v42 = *(_QWORD *)(v43 + 72);
      v27 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
      do
      {
        v27(v3, v26, v1);
        v28 = sub_1CDAB82A4();
        v30 = v29;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v3, v1);
        v31 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CD0DF734(0, *(_QWORD *)(v31 + 16) + 1, 1);
          v31 = v44;
        }
        v33 = *(_QWORD *)(v31 + 16);
        v32 = *(_QWORD *)(v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1CD0DF734(v32 > 1, v33 + 1, 1);
          v31 = v44;
        }
        *(_QWORD *)(v31 + 16) = v33 + 1;
        v34 = v31 + 16 * v33;
        *(_QWORD *)(v34 + 32) = v28;
        *(_QWORD *)(v34 + 40) = v30;
        v26 += v42;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      v22 = (uint64_t)v39;
    }
    else
    {
      swift_bridgeObjectRelease();
      v31 = MEMORY[0x1E0DEE9D8];
    }
    v35 = sub_1CD0DFED0(v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1CD0DFAB4(v40, v22, v35);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v6;
}

uint64_t sub_1CD0DCD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1CDAB87FC();
    sub_1CDAB84D8();
    v6 = sub_1CDAB8814();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1CDAB87CC() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1CDAB87CC() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1CD0DCEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  v6 = sub_1CDAB822C();
  v5[15] = v6;
  v5[16] = *(_QWORD *)(v6 - 8);
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45DD8);
  v5[18] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45DB8);
  v5[19] = v7;
  v5[20] = *(_QWORD *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45DE0);
  v5[24] = v8;
  v5[25] = *(_QWORD *)(v8 - 8);
  v5[26] = swift_task_alloc();
  v9 = type metadata accessor for NetworkDetectAccessory();
  v5[27] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[28] = v10;
  v5[29] = *(_QWORD *)(v10 + 64);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8C4388);
  v5[32] = swift_task_alloc();
  v5[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CD0DD030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 224);
    v4 = *(unsigned __int8 *)(v3 + 80);
    v5 = v1 + ((v4 + 32) & ~v4);
    v26 = (v4 + 48) & ~v4;
    v27 = *(_QWORD *)(v3 + 72);
    v6 = sub_1CDAB85A4();
    v7 = *(_QWORD *)(v6 - 8);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v25 = v7;
    v23 = v6;
    while (1)
    {
      v9 = *(_QWORD *)(v0 + 256);
      v10 = *(_QWORD *)(v0 + 264);
      v11 = *(_QWORD *)(v0 + 248);
      v28 = *(_OWORD *)(v0 + 104);
      v24(v10, 1, 1, v6);
      sub_1CD0DFFA0(v5, v11);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = 0;
      v13 = (_QWORD *)(v12 + 16);
      *(_QWORD *)(v12 + 24) = 0;
      *(_OWORD *)(v12 + 32) = v28;
      sub_1CD0CCED8(v11, v12 + v26);
      sub_1CD0D3594(v10, v9, (uint64_t *)&unk_1ED8C4388);
      LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6);
      swift_unknownObjectRetain();
      v14 = *(_QWORD *)(v0 + 256);
      if ((_DWORD)v9 == 1)
      {
        sub_1CD0C9BBC(*(_QWORD *)(v0 + 256), (uint64_t *)&unk_1ED8C4388);
        if (!*v13)
          goto LABEL_8;
      }
      else
      {
        sub_1CDAB8598();
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v6);
        if (!*v13)
        {
LABEL_8:
          v15 = 0;
          v17 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v15 = sub_1CDAB8568();
      v17 = v16;
      swift_unknownObjectRelease();
LABEL_9:
      v18 = **(_QWORD **)(v0 + 88);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = &unk_1EFA45DF8;
      *(_QWORD *)(v19 + 24) = v12;
      v20 = v17 | v15;
      if (v17 | v15)
      {
        v20 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v15;
        *(_QWORD *)(v0 + 40) = v17;
      }
      v6 = v23;
      v8 = *(_QWORD *)(v0 + 264);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v20;
      *(_QWORD *)(v0 + 64) = v18;
      swift_task_create();
      swift_release();
      sub_1CD0C9BBC(v8, (uint64_t *)&unk_1ED8C4388);
      v5 += v27;
      --v2;
      v7 = v25;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  *(_QWORD *)(v0 + 272) = sub_1CD0CDDA4(MEMORY[0x1E0DEE9D8]);
  sub_1CDAB8580();
  *(_QWORD *)(v0 + 280) = sub_1CD0E1420();
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v21;
  *v21 = v0;
  v21[1] = sub_1CD0DD33C;
  return sub_1CDAB858C();
}

uint64_t sub_1CD0DD33C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[25];
    v3 = v2[26];
    v5 = v2[24];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[37] = v2[34];
  }
  return swift_task_switch();
}

uint64_t sub_1CD0DD3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  int isUniquelyReferenced_nonNull_native;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 48))(v2, 1, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 296);
    v4 = *(_QWORD **)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
    sub_1CD0C9BBC(v2, &qword_1EFA45DD8);
    *v4 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 184);
  sub_1CD0E146C(v2, v8, &qword_1EFA45DB8);
  v10 = *(int *)(v1 + 48);
  sub_1CD0D3594(v8, v9, &qword_1ED8C4380);
  v11 = *(void **)(v8 + v10);
  *(_QWORD *)(v9 + v10) = v11;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6) == 1)
  {
    v12 = *(_QWORD *)(v0 + 176);
LABEL_11:
    sub_1CD0C9BBC(v12, &qword_1ED8C4380);
    v35 = *(_QWORD **)(v0 + 296);
LABEL_20:
    *(_QWORD *)(v0 + 304) = v35;
    sub_1CD0C9BBC(*(_QWORD *)(v0 + 184), &qword_1EFA45DB8);
    v48 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 312) = v48;
    *v48 = v0;
    v48[1] = sub_1CD0DD794;
    return sub_1CDAB858C();
  }
  v13 = *(_QWORD *)(v0 + 184);
  v14 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 152);
  sub_1CD0CCED8(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 240));
  v16 = *(int *)(v15 + 48);
  sub_1CD0D3594(v13, v14, &qword_1ED8C4380);
  *(_QWORD *)(v14 + v16) = v11;
  if (!v11)
  {
    v34 = *(_QWORD *)(v0 + 168);
    sub_1CD0DFFE4(*(_QWORD *)(v0 + 240));
    v12 = v34;
    goto LABEL_11;
  }
  v17 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD *)(v0 + 240);
  v19 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = v11;
  sub_1CD0C9BBC(v19, &qword_1ED8C4380);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v24(v20, v18, v22);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v0 + 72) = v17;
  v27 = sub_1CD0D20E8(v20);
  v28 = *(_QWORD *)(v17 + 16);
  v29 = (v26 & 1) == 0;
  result = v28 + v29;
  if (__OFADD__(v28, v29))
  {
    __break(1u);
  }
  else
  {
    v30 = v26;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 296) + 24) >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1CD0D764C();
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 136);
      sub_1CD0D6A68(result, isUniquelyReferenced_nonNull_native);
      v32 = sub_1CD0D20E8(v31);
      if ((v30 & 1) != (v33 & 1))
        return sub_1CDAB87F0();
      v27 = v32;
    }
    v35 = *(_QWORD **)(v0 + 72);
    if ((v30 & 1) != 0)
    {
      v36 = v35[7];
      v37 = 8 * v27;

      *(_QWORD *)(v36 + v37) = v23;
LABEL_19:
      v44 = *(_QWORD *)(v0 + 240);
      v46 = *(_QWORD *)(v0 + 128);
      v45 = *(_QWORD *)(v0 + 136);
      v47 = *(_QWORD *)(v0 + 120);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
      sub_1CD0DFFE4(v44);
      goto LABEL_20;
    }
    v39 = *(_QWORD *)(v0 + 128);
    v38 = *(_QWORD *)(v0 + 136);
    v40 = *(_QWORD *)(v0 + 120);
    v35[(v27 >> 6) + 8] |= 1 << v27;
    result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v24)(v35[6] + *(_QWORD *)(v39 + 72) * v27, v38, v40);
    *(_QWORD *)(v35[7] + 8 * v27) = v23;
    v41 = v35[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (!v42)
    {
      v35[2] = v43;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1CD0DD794()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[25];
    v3 = v2[26];
    v5 = v2[24];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[37] = v2[38];
  }
  return swift_task_switch();
}

uint64_t sub_1CD0DD820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t ObjectType;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v6[2] = a1;
  v6[3] = a6;
  ObjectType = swift_getObjectType();
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 32) + *(_QWORD *)(a5 + 32));
  v10 = (_QWORD *)swift_task_alloc();
  v6[4] = v10;
  *v10 = v6;
  v10[1] = sub_1CD0DD8AC;
  return v12(a6, ObjectType, a5);
}

uint64_t sub_1CD0DD8AC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CD0DD908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45DB8) + 48);
  sub_1CD0DFFA0(v3, v2);
  v5 = type metadata accessor for NetworkDetectAccessory();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
  *(_QWORD *)(v2 + v4) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CD0DD984()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CD0DD99C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = sub_1CD0DC9DC();
  *(_QWORD *)(v0 + 32) = v1;
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC19HomeKitDaemonLegacy23NetworkMismatchDetector_dataSource;
    v3 = MEMORY[0x1D17BA964](v2);
    *(_QWORD *)(v0 + 40) = v3;
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(v2 + 8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45DB8);
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 48) = v6;
      v6[2] = v1;
      v6[3] = v4;
      v6[4] = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45DD0);
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 56) = v7;
      *v7 = v0;
      v7[1] = sub_1CD0DDB14;
      return sub_1CDAB8754();
    }
    v10 = sub_1CD0CDDA4(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRelease();
    sub_1CD0DDBD0(v10);
    v9 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = sub_1CD0CDF38(MEMORY[0x1E0DEE9D8]);
  }
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v9);
}

uint64_t sub_1CD0DDB14()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CD0DDB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CD0DDBD0(*(_QWORD *)(v0 + 16));
  v2 = v1;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

void sub_1CD0DDBD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  unint64_t v47;
  _QWORD v48[2];
  int64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v54 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFA45E10);
  v2 = MEMORY[0x1E0C80A78](v54);
  v53 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v52 = (uint64_t)v48 - v5;
  MEMORY[0x1E0C80A78](v4);
  v51 = (char *)v48 - v6;
  v7 = MEMORY[0x1E0DEE9E0];
  v8 = *(_QWORD *)(a1 + 64);
  v50 = a1 + 64;
  v60 = MEMORY[0x1E0DEE9E0];
  v9 = -1 << *(_BYTE *)(a1 + 32);
  if (-v9 < 64)
    v10 = ~(-1 << -(char)v9);
  else
    v10 = -1;
  v11 = v10 & v8;
  v48[1] = -1 << *(_BYTE *)(a1 + 32);
  v49 = (unint64_t)(63 - v9) >> 6;
  v55 = a1;
  swift_bridgeObjectRetain();
  v56 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v56 << 6);
      goto LABEL_34;
    }
    v22 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v22 >= v49)
      goto LABEL_36;
    v23 = *(_QWORD *)(v50 + 8 * v22);
    v24 = v56 + 1;
    if (!v23)
    {
      v24 = v56 + 2;
      if (v56 + 2 >= v49)
        goto LABEL_36;
      v23 = *(_QWORD *)(v50 + 8 * v24);
      if (!v23)
      {
        v24 = v56 + 3;
        if (v56 + 3 >= v49)
          goto LABEL_36;
        v23 = *(_QWORD *)(v50 + 8 * v24);
        if (!v23)
        {
          v24 = v56 + 4;
          if (v56 + 4 >= v49)
            goto LABEL_36;
          v23 = *(_QWORD *)(v50 + 8 * v24);
          if (!v23)
            break;
        }
      }
    }
LABEL_33:
    v11 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
    v56 = v24;
LABEL_34:
    v30 = v55;
    v31 = *(_QWORD *)(v55 + 48);
    v32 = sub_1CDAB822C();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(_QWORD *)(v33 + 72);
    v35 = v51;
    (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v51, v31 + v34 * v21, v32);
    v36 = *(void **)(*(_QWORD *)(v30 + 56) + 8 * v21);
    v37 = v54;
    *(_QWORD *)&v35[*(int *)(v54 + 48)] = v36;
    v38 = (uint64_t)v35;
    v39 = v52;
    sub_1CD0E146C(v38, v52, qword_1EFA45E10);
    v40 = *(void **)(v39 + *(int *)(v37 + 48));
    v41 = v36;
    sub_1CD0E0020(v40);
    v58 = v43;
    v59 = v42;
    v57 = v44;
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
    v46 = v53;
    v45(v53, v39, v32);
    v47 = *(_QWORD *)(v7 + 16);
    if (*(_QWORD *)(v7 + 24) <= v47)
      sub_1CD0D604C(v47 + 1, 1);
    v7 = v60;
    sub_1CD0CCF1C();
    v12 = sub_1CDAB8484();
    v13 = v7 + 64;
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = v12 & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v7 + 64 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v7 + 64 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v45((char *)(*(_QWORD *)(v7 + 48) + v17 * v34), (uint64_t)v46, v32);
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v17);
    v19 = v58;
    *v18 = v59;
    v18[1] = v19;
    v18[2] = v57;
    ++*(_QWORD *)(v7 + 16);

  }
  v25 = v56 + 5;
  if (v56 + 5 >= v49)
  {
LABEL_36:
    sub_1CD0C9A6C();
    return;
  }
  v23 = *(_QWORD *)(v50 + 8 * v25);
  if (v23)
  {
    v24 = v56 + 5;
    goto LABEL_33;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v49)
      goto LABEL_36;
    v23 = *(_QWORD *)(v50 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_33;
  }
LABEL_38:
  __break(1u);
}

id sub_1CD0DE010()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NetworkMismatchDetector();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NetworkMismatchDetector()
{
  return objc_opt_self();
}

uint64_t sub_1CD0DE070(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_1CDAB86DC();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for AssertionHandle.Assertion(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v21;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CDAB86D0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_1CD0C7930(v7, result + 1);
    v22 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_1CD0DE510();
      v17 = v22;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_1CD0C7B70(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  else
  {
    sub_1CDAB87FC();
    sub_1CDAB822C();
    sub_1CD0CCF1C();
    swift_bridgeObjectRetain();
    sub_1CDAB8490();
    v10 = sub_1CDAB8814();
    v11 = -1 << *(_BYTE *)(v6 + 32);
    v12 = v10 & ~v11;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
    {
      swift_retain();
      v13 = sub_1CDAB8208();
      swift_release();
      if ((v13 & 1) != 0)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
      v14 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v14;
        if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        swift_retain();
        v15 = sub_1CDAB8208();
        swift_release();
        if ((v15 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v2;
    *v2 = 0x8000000000000000;
    v19 = swift_retain();
    sub_1CD0DEAE0(v19, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v23;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  return 1;
}

uint64_t sub_1CD0DE364(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1CDAB87FC();
  swift_bridgeObjectRetain();
  sub_1CDAB84D8();
  v8 = sub_1CDAB8814();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1CDAB87CC() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1CDAB87CC() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1CD0DECB8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1CD0DE510()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C43B8);
  v3 = sub_1CDAB870C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v27 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8)
          goto LABEL_33;
        v16 = v27[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v8)
            goto LABEL_33;
          v16 = v27[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v8)
              goto LABEL_33;
            v16 = v27[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v27 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v16 = v27[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_1CDAB87FC();
      sub_1CDAB822C();
      sub_1CD0CCF1C();
      sub_1CDAB8490();
      result = sub_1CDAB8814();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1CD0DE804()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D30);
  v3 = sub_1CDAB870C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1CDAB87FC();
      sub_1CDAB84D8();
      result = sub_1CDAB8814();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1CD0DEAE0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1CD0DE510();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1CD0DEE50();
      goto LABEL_14;
    }
    sub_1CD0DF1A8();
  }
  v9 = *v3;
  sub_1CDAB87FC();
  sub_1CDAB822C();
  sub_1CD0CCF1C();
  sub_1CDAB8490();
  result = sub_1CDAB8814();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    type metadata accessor for AssertionHandle.Assertion(0);
    swift_retain();
    v11 = sub_1CDAB8208();
    result = swift_release();
    if ((v11 & 1) != 0)
    {
LABEL_13:
      result = sub_1CDAB87E4();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        swift_retain();
        v13 = sub_1CDAB8208();
        result = swift_release();
        if ((v13 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = v6;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
  return result;
}

uint64_t sub_1CD0DECB8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1CD0DE804();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1CD0DEFF8();
      goto LABEL_22;
    }
    sub_1CD0DF488();
  }
  v11 = *v4;
  sub_1CDAB87FC();
  sub_1CDAB84D8();
  result = sub_1CDAB8814();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1CDAB87CC(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1CDAB87E4();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1CDAB87CC();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_1CD0DEE50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C43B8);
  v2 = *v0;
  v3 = sub_1CDAB8700();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CD0DEFF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D30);
  v2 = *v0;
  v3 = sub_1CDAB8700();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CD0DF1A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C43B8);
  v3 = sub_1CDAB870C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v25 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v26 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v26)
      goto LABEL_33;
    v15 = *(_QWORD *)(v25 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v26)
        goto LABEL_33;
      v15 = *(_QWORD *)(v25 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v26)
          goto LABEL_33;
        v15 = *(_QWORD *)(v25 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
    sub_1CDAB87FC();
    sub_1CDAB822C();
    sub_1CD0CCF1C();
    swift_retain();
    sub_1CDAB8490();
    result = sub_1CDAB8814();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v21 = 0;
      v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v23 = v20 == v22;
        if (v20 == v22)
          v20 = 0;
        v21 |= v23;
        v24 = *(_QWORD *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v17;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v25 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v26)
      goto LABEL_33;
    v15 = *(_QWORD *)(v25 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CD0DF488()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D30);
  v3 = sub_1CDAB870C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1CDAB87FC();
    swift_bridgeObjectRetain();
    sub_1CDAB84D8();
    result = sub_1CDAB8814();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CD0DF734(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CD0DF76C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CD0DF750(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CD0DF8D4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1CD0DF76C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA45D20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CDAB87A8();
  __break(1u);
  return result;
}

uint64_t sub_1CD0DF8D4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45BC0);
  v10 = *(_QWORD *)(sub_1CDAB8370() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_1CDAB8370() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_1CDAB87A8();
  __break(1u);
  return result;
}

unint64_t sub_1CD0DFAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t i;
  uint64_t v41;
  _QWORD *v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD v49[2];
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;

  v50 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4380);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NetworkDetectAccessory();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v59 = (uint64_t)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v57 = (uint64_t)v49 - v14;
  MEMORY[0x1E0C80A78](v13);
  v52 = (uint64_t)v49 - v15;
  v58 = *(_QWORD *)(a1 + 16);
  if (!v58)
    return MEMORY[0x1E0DEE9D8];
  v49[1] = v3;
  v51 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v56 = a1 + v51;
  v16 = *(_QWORD *)(v10 + 72);
  v60 = a2 + 56;
  v61 = v16;
  v49[0] = a1;
  swift_bridgeObjectRetain();
  v17 = 0;
  v18 = MEMORY[0x1E0DEE9D8];
  v54 = v9;
  v55 = v8;
  v53 = v10;
  do
  {
    v62 = v18;
    v19 = v56 + v61 * v17;
    v20 = sub_1CDAB81F0();
    v22 = v21;
    v23 = a2;
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_22;
    v24 = v20;
    sub_1CDAB87FC();
    sub_1CDAB84D8();
    v25 = sub_1CDAB8814();
    v26 = -1 << *(_BYTE *)(a2 + 32);
    v27 = v25 & ~v26;
    if (((*(_QWORD *)(v60 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
      goto LABEL_22;
    v28 = *(_QWORD *)(v23 + 48);
    v29 = (_QWORD *)(v28 + 16 * v27);
    v30 = *v29 == v24 && v29[1] == v22;
    if (!v30 && (sub_1CDAB87CC() & 1) == 0)
    {
      v39 = ~v26;
      for (i = v27 + 1; ; i = v41 + 1)
      {
        v41 = i & v39;
        if (((*(_QWORD *)(v60 + (((i & v39) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v39)) & 1) == 0)
          break;
        v42 = (_QWORD *)(v28 + 16 * v41);
        v43 = *v42 == v24 && v42[1] == v22;
        if (v43 || (sub_1CDAB87CC() & 1) != 0)
          goto LABEL_12;
      }
LABEL_22:
      swift_bridgeObjectRelease();
      v44 = v57;
      sub_1CD0DFFA0(v19, v57);
      sub_1CD0DFFE4(v44);
      v32 = v54;
      goto LABEL_23;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    v31 = v57;
    sub_1CD0DFFA0(v19, v57);
    v32 = v54;
    v33 = sub_1CDAB81F0();
    v35 = sub_1CD0DCD8C(v33, v34, v50);
    swift_bridgeObjectRelease();
    sub_1CD0DFFE4(v31);
    if ((v35 & 1) == 0)
    {
      v36 = v19;
      v37 = (uint64_t)v55;
      sub_1CD0DFFA0(v36, (uint64_t)v55);
      v38 = v53;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v37, 0, 1, v32);
      goto LABEL_24;
    }
LABEL_23:
    v38 = v53;
    v37 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v55, 1, 1, v32);
LABEL_24:
    a2 = v23;
    v18 = v62;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v37, 1, v32) == 1)
    {
      sub_1CD0C9BBC(v37, &qword_1ED8C4380);
    }
    else
    {
      v45 = v52;
      sub_1CD0CCED8(v37, v52);
      sub_1CD0CCED8(v45, v59);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = sub_1CD0D1BF4(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
      v47 = *(_QWORD *)(v18 + 16);
      v46 = *(_QWORD *)(v18 + 24);
      if (v47 >= v46 >> 1)
        v18 = sub_1CD0D1BF4(v46 > 1, v47 + 1, 1, v18);
      *(_QWORD *)(v18 + 16) = v47 + 1;
      sub_1CD0CCED8(v59, v18 + v51 + v47 * v61);
    }
    ++v17;
  }
  while (v17 != v58);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1CD0DFED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1CDAB85BC();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1CD0DE364(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t type metadata accessor for NetworkDetectAccessory()
{
  uint64_t result;

  result = qword_1ED8C4370;
  if (!qword_1ED8C4370)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CD0DFFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkDetectAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CD0DFFE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NetworkDetectAccessory();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1CD0E0020(void *a1)
{
  id v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45D38);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CDAB8370();
  v59 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v56 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v54 = (char *)&v51 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA45DA0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CDAB828C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v58 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v55 = (char *)&v51 - v17;
  v18 = objc_msgSend(a1, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v18)
    goto LABEL_52;
  v19 = v18;
  v20 = objc_msgSend(v18, sel_wifiInfo);

  if (v20)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_wifiNetworkInfoFromProto_, v20);

  }
  else
  {
    v1 = 0;
  }
  v21 = objc_msgSend(a1, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v21)
    goto LABEL_53;
  v22 = v21;
  v23 = objc_msgSend(v21, sel_networkInfos);

  v57 = v5;
  v60 = v6;
  if (!v23)
  {
    v61 = MEMORY[0x1E0DEE9D8];
    goto LABEL_29;
  }
  v52 = a1;
  v62 = 0;
  sub_1CD0C9A74(0, &qword_1EFA45DB0);
  sub_1CDAB8514();

  v24 = v62;
  if (v62)
  {
    if (v62 >> 62)
    {
      swift_bridgeObjectRetain();
      v25 = sub_1CDAB8778();
      v53 = v1;
      if (v25)
        goto LABEL_10;
    }
    else
    {
      v25 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v53 = v1;
      if (v25)
      {
LABEL_10:
        if (v25 < 1)
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:

          __break(1u);
          goto LABEL_54;
        }
        v26 = 0;
        v61 = MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v24 & 0xC000000000000001) != 0)
            v27 = (id)MEMORY[0x1D17B8504](v26, v24);
          else
            v27 = *(id *)(v24 + 8 * v26 + 32);
          v28 = v27;
          sub_1CD0CD448(v27, (uint64_t)v12);

          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
          {
            sub_1CD0C9BBC((uint64_t)v12, &qword_1EFA45DA0);
            v6 = v60;
          }
          else
          {
            v29 = v25;
            v30 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
            v31 = v55;
            v30(v55, v12, v13);
            v30(v58, v31, v13);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v61 = sub_1CD0D205C(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
            v33 = *(_QWORD *)(v61 + 16);
            v32 = *(_QWORD *)(v61 + 24);
            if (v33 >= v32 >> 1)
              v61 = sub_1CD0D205C(v32 > 1, v33 + 1, 1, v61);
            v34 = v61;
            *(_QWORD *)(v61 + 16) = v33 + 1;
            v30((char *)(v34+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v33), v58, v13);
            v5 = v57;
            v6 = v60;
            v25 = v29;
          }
          ++v26;
        }
        while (v25 != v26);
        goto LABEL_27;
      }
    }
    v61 = MEMORY[0x1E0DEE9D8];
LABEL_27:
    swift_bridgeObjectRelease_n();
    v1 = v53;
    goto LABEL_28;
  }
  v61 = MEMORY[0x1E0DEE9D8];
LABEL_28:
  a1 = v52;
LABEL_29:
  v35 = objc_msgSend(a1, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v35)
  {
LABEL_54:
    swift_bridgeObjectRelease();

    __break(1u);
    return;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, sel_networkServiceInfos);

  if (v37)
  {
    v62 = 0;
    sub_1CD0C9A74(0, &qword_1EFA45DA8);
    sub_1CDAB8514();

    v38 = v62;
    if (v62)
    {
      v53 = v1;
      if (v62 >> 62)
      {
        swift_bridgeObjectRetain();
        v39 = sub_1CDAB8778();
        if (v39)
        {
LABEL_34:
          if (v39 >= 1)
          {
            v40 = 0;
            v41 = MEMORY[0x1E0DEE9D8];
            do
            {
              if ((v38 & 0xC000000000000001) != 0)
                v42 = (id)MEMORY[0x1D17B8504](v40, v38);
              else
                v42 = *(id *)(v38 + 8 * v40 + 32);
              v43 = v42;
              sub_1CD0CDAC0(v42, (uint64_t)v5);

              v44 = v59;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v5, 1, v6) == 1)
              {
                sub_1CD0C9BBC((uint64_t)v5, &qword_1EFA45D38);
              }
              else
              {
                v45 = v5;
                v46 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
                v47 = v54;
                v46(v54, v45, v6);
                v46(v56, v47, v6);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v41 = sub_1CD0D2070(0, *(_QWORD *)(v41 + 16) + 1, 1, v41);
                v49 = *(_QWORD *)(v41 + 16);
                v48 = *(_QWORD *)(v41 + 24);
                if (v49 >= v48 >> 1)
                  v41 = sub_1CD0D2070(v48 > 1, v49 + 1, 1, v41);
                *(_QWORD *)(v41 + 16) = v49 + 1;
                v50 = v41
                    + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))
                    + *(_QWORD *)(v59 + 72) * v49;
                v6 = v60;
                v46((char *)v50, v56, v60);
                v5 = v57;
              }
              ++v40;
            }
            while (v39 != v40);
            goto LABEL_49;
          }
          goto LABEL_51;
        }
      }
      else
      {
        v39 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v39)
          goto LABEL_34;
      }
LABEL_49:
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1CD0E06B0(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void (*v54)(uint64_t, char *, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  int isUniquelyReferenced_nonNull_native;
  char v58;
  unint64_t v59;
  uint64_t v60;
  _BOOL8 v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  _QWORD *v66;
  _QWORD *v67;
  void *v68;
  _QWORD *v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  char *v87;
  char *v88;
  char *v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;

  v86 = a1;
  v3 = sub_1CDAB822C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v81 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v75 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4330);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v89 = (char *)&v75 - v13;
  v14 = *(_QWORD *)(a2 + 64);
  v82 = a2 + 64;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  v76 = v18 - 1;
  swift_bridgeObjectRetain();
  v19 = 0;
  v83 = v18;
  v84 = a2;
  v77 = v18 - 5;
  v78 = a2 + 104;
  v80 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v85 = v4;
  v87 = v12;
  v88 = v8;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v21 = (v17 - 1) & v17;
      v22 = v20 | (v19 << 6);
      goto LABEL_9;
    }
    v32 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v32 >= v83)
    {
      v34 = v19;
      v31 = (uint64_t)v89;
    }
    else
    {
      v33 = *(_QWORD *)(v82 + 8 * v32);
      v31 = (uint64_t)v89;
      if (v33)
        goto LABEL_13;
      v34 = v19 + 1;
      if ((uint64_t)(v19 + 2) < v83)
      {
        v33 = *(_QWORD *)(v82 + 8 * (v19 + 2));
        if (v33)
        {
          v32 = v19 + 2;
          goto LABEL_13;
        }
        v34 = v19 + 2;
        if ((uint64_t)(v19 + 3) < v83)
        {
          v33 = *(_QWORD *)(v82 + 8 * (v19 + 3));
          if (v33)
          {
            v32 = v19 + 3;
LABEL_13:
            v21 = (v33 - 1) & v33;
            v22 = __clz(__rbit64(v33)) + (v32 << 6);
            v19 = v32;
LABEL_9:
            v23 = v84;
            (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v12, *(_QWORD *)(v84 + 48) + *(_QWORD *)(v4 + 72) * v22, v3);
            v24 = (uint64_t *)(*(_QWORD *)(v23 + 56) + 24 * v22);
            v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4328);
            v26 = &v12[*(int *)(v25 + 48)];
            v27 = *v24;
            v28 = v24[1];
            v29 = (void *)v24[2];
            *(_QWORD *)v26 = v27;
            *((_QWORD *)v26 + 1) = v28;
            *((_QWORD *)v26 + 2) = v29;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 0, 1, v25);
            v30 = v29;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v31 = (uint64_t)v89;
            goto LABEL_16;
          }
          v32 = v19 + 4;
          v34 = v19 + 3;
          if ((uint64_t)(v19 + 4) < v83)
          {
            v33 = *(_QWORD *)(v82 + 8 * v32);
            if (v33)
              goto LABEL_13;
            while (v77 != v19)
            {
              v33 = *(_QWORD *)(v78 + 8 * v19++);
              if (v33)
              {
                v32 = v19 + 4;
                goto LABEL_13;
              }
            }
            v34 = v76;
          }
        }
      }
    }
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4328);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 1, 1, v35);
    v21 = 0;
    v19 = v34;
LABEL_16:
    sub_1CD0E146C((uint64_t)v12, v31, &qword_1ED8C4330);
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8C4328);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v31, 1, v36) == 1)
    {
      swift_release();
      return (uint64_t)v80;
    }
    v90 = v21;
    v91 = v19;
    v37 = (uint64_t *)(v31 + *(int *)(v36 + 48));
    v38 = *v37;
    v39 = v37[1];
    v40 = (void *)v37[2];
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v8, v31, v3);
    if (!v40)
      goto LABEL_30;
    v41 = v40;
    v42 = objc_msgSend(v41, sel_SSID);
    if (v42)
    {
      v43 = v42;
      v44 = sub_1CDAB84C0();
      v46 = v45;

    }
    else
    {
      v44 = 0;
      v46 = 0;
    }
    v47 = v3;
    v48 = objc_msgSend(v86, sel_SSID);
    if (!v48)
    {
      if (!v46)
        goto LABEL_28;
LABEL_34:

      swift_bridgeObjectRelease();
      v3 = v47;
      v4 = v85;
      v8 = v88;
      goto LABEL_39;
    }
    v49 = v48;
    v50 = sub_1CDAB84C0();
    v52 = v51;

    if (v46)
    {
      if (!v52)
        goto LABEL_34;
      if (v44 == v50 && v46 == v52)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_28:

        v3 = v47;
        v4 = v85;
        v8 = v88;
LABEL_5:
        (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      v53 = sub_1CDAB87CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v3 = v47;
      v4 = v85;
      v8 = v88;
      if ((v53 & 1) != 0)
        goto LABEL_5;
LABEL_30:
      v41 = v40;
      goto LABEL_39;
    }

    v3 = v47;
    v4 = v85;
    v8 = v88;
    if (!v52)
      goto LABEL_5;
    swift_bridgeObjectRelease();
LABEL_39:
    v54 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 16);
    v55 = (uint64_t)v81;
    v54((uint64_t)v81, v8, v3);
    v79 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56 = v80;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v92 = v56;
    v59 = sub_1CD0D20E8(v55);
    v60 = v56[2];
    v61 = (v58 & 1) == 0;
    v62 = v60 + v61;
    if (__OFADD__(v60, v61))
      goto LABEL_58;
    v63 = v58;
    if (v56[3] >= v62)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1CD0D7058();
    }
    else
    {
      sub_1CD0D604C(v62, isUniquelyReferenced_nonNull_native);
      v64 = sub_1CD0D20E8((uint64_t)v81);
      if ((v63 & 1) != (v65 & 1))
        goto LABEL_60;
      v59 = v64;
    }
    v66 = v92;
    v80 = v92;
    if ((v63 & 1) != 0)
    {
      v67 = (_QWORD *)(v92[7] + 24 * v59);
      v68 = (void *)v67[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *v67 = v38;
      v67[1] = v39;
      v67[2] = v40;
    }
    else
    {
      v92[(v59 >> 6) + 8] |= 1 << v59;
      v54(v66[6] + *(_QWORD *)(v4 + 72) * v59, v81, v3);
      v69 = (_QWORD *)(v66[7] + 24 * v59);
      *v69 = v38;
      v69[1] = v39;
      v69[2] = v40;
      v70 = v66[2];
      v71 = __OFADD__(v70, 1);
      v72 = v70 + 1;
      if (v71)
        goto LABEL_59;
      v66[2] = v72;
    }
    swift_bridgeObjectRelease();
    v73 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v73((uint64_t)v81, v3);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v88;
    v73((uint64_t)v88, v3);
LABEL_6:
    v12 = v87;
    v17 = v90;
    v19 = v91;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  result = sub_1CDAB87F0();
  __break(1u);
  return result;
}

uint64_t sub_1CD0E0D54(void *a1, _QWORD *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v44;
  id v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = sub_1CDAB8370();
  v50 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a3;
  v10 = objc_msgSend(a1, sel_networkGatewayIPAddress);
  if (!v10)
    goto LABEL_9;
  v11 = v10;
  v51 = sub_1CDAB84C0();
  v13 = v12;

  v14 = objc_msgSend(a1, sel_networkGatewayMACAddress);
  if (!v14)
  {
    swift_bridgeObjectRelease();
LABEL_9:

    return 0;
  }
  v15 = v14;
  v46 = sub_1CDAB84C0();
  v47 = v16;

  if (!a3)
    goto LABEL_16;
  v17 = v9;
  v18 = objc_msgSend(v17, sel_networkGatewayIPAddress);
  if (!v18)
    goto LABEL_15;
  v19 = v18;
  v20 = sub_1CDAB84C0();
  v22 = v21;

  if (v20 == v51 && v22 == v13)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = sub_1CDAB87CC();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
LABEL_15:

      goto LABEL_16;
    }
  }
  v24 = objc_msgSend(v17, sel_networkGatewayMACAddress);
  if (!v24)
    goto LABEL_15;
  v25 = v24;
  v26 = sub_1CDAB84C0();
  v28 = v27;

  if (v26 == v46 && v28 == v47)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

LABEL_38:
    return 1;
  }
  v44 = sub_1CDAB87CC();
  swift_bridgeObjectRelease();

  if ((v44 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
LABEL_16:
  v29 = v13;
  v30 = a2[2];
  if (!v30)
  {
    swift_bridgeObjectRelease();

LABEL_32:
    swift_bridgeObjectRelease();
    return 0;
  }
  v45[0] = v9;
  v45[1] = a2;
  v31 = (char *)a2 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  v32 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  v48 = *(_QWORD *)(v50 + 72);
  v49 = v32;
  swift_bridgeObjectRetain();
  while (1)
  {
    v49(v8, v31, v6);
    v33 = sub_1CDAB8334();
    if (v34)
    {
      v35 = v33;
      v36 = v34;
      v54 = v33;
      v55 = v34;
      v52 = v51;
      v53 = v29;
      sub_1CD0D2FDC();
      if ((sub_1CDAB867C() & 1) != 0)
      {
        v54 = v35;
        v55 = v36;
        v52 = v46;
        v53 = v47;
        v37 = sub_1CDAB867C();
        swift_bridgeObjectRelease();
        if ((v37 & 1) != 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v6);
          goto LABEL_35;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v38 = sub_1CDAB8340();
    if (!v39)
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v6);
      goto LABEL_19;
    }
    v40 = v38;
    v41 = v39;
    v54 = v38;
    v55 = v39;
    v52 = v51;
    v53 = v29;
    sub_1CD0D2FDC();
    if ((sub_1CDAB867C() & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v6);
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    v54 = v40;
    v55 = v41;
    v52 = v46;
    v53 = v47;
    v42 = sub_1CDAB867C();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v6);
    swift_bridgeObjectRelease();
    if ((v42 & 1) != 0)
      break;
LABEL_19:
    v31 += v48;
    if (!--v30)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_35:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1CD0E11C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1CD0CA774;
  return sub_1CD0DCEC0(a1, a2, v6, v7, v8);
}

uint64_t sub_1CD0E123C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = type metadata accessor for NetworkDetectAccessory();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 48) & ~v2;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  v5 = sub_1CDAB822C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v4 + *(int *)(v1 + 20), v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CD0E12F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NetworkDetectAccessory() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1CD0CA72C;
  return sub_1CD0DD820(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1CD0E138C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CD0E13B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CD0CA72C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFA45DF0 + dword_1EFA45DF0))(a1, v4);
}

unint64_t sub_1CD0E1420()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA45E08;
  if (!qword_1EFA45E08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA45DE0);
    result = MEMORY[0x1D17BA838](MEMORY[0x1E0DF0660], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA45E08);
  }
  return result;
}

uint64_t sub_1CD0E146C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void destroy for NetworkMismatchDetector.AccessoryNetworkInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *_s19HomeKitDaemonLegacy23NetworkMismatchDetectorC20AccessoryNetworkInfoVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for NetworkMismatchDetector.AccessoryNetworkInfo(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for NetworkMismatchDetector.AccessoryNetworkInfo(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkMismatchDetector.AccessoryNetworkInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkMismatchDetector.AccessoryNetworkInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkMismatchDetector.AccessoryNetworkInfo()
{
  return &type metadata for NetworkMismatchDetector.AccessoryNetworkInfo;
}

uint64_t *sub_1CD0E1694(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CDAB822C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1CD0E1748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_1CDAB822C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CD0E17AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_1CDAB822C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CD0E1834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = sub_1CDAB822C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CD0E18D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1CDAB822C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1CD0E194C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1CDAB822C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CD0E19D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CD0E19E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CDAB822C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1CD0E1A64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CD0E1A70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CDAB822C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1CD0E1AEC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CDAB822C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CD0E1B60(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = *MEMORY[0x1E0C804E8];
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = v34;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1CD0E1DB8(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  uint64_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = *MEMORY[0x1E0C804E8];
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_1CD0E1F44(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE v23[28];
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = *MEMORY[0x1E0C804E8];
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1CD0E2130(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_1CD0E22A8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((((2 * a1) | 0x340440B2) - a1 + 1711136679) ^ 0xF7F63850);
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E89A15E0 + (v1 ^ 0x5EF))
                              + (((*(_QWORD *)a1 == *(_QWORD *)(a1 + 8)) * ((51 * (v1 ^ 0x5DA)) ^ 0x630)) ^ v1)
                              - 1)
                            - 8))();
}

uint64_t sub_1CD0E2330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  v4 = *(_DWORD *)(v2 - 0xC7F991DE6408E19);
  v5 = v4 - 159353952;
  if (v4 - 159353952 < 0)
    v5 = 159353952 - v4;
  *(_DWORD *)(v1 - 0xC7F991DE6408E19) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((93
                                * ((v5 ^ 0xF9CB9BF3) + 1459613664 + ((v5 << (v3 - 44)) & 0xF39737E6) != ((v3 - 104) ^ 0x50CB8E16))) ^ v3)))();
}

uint64_t sub_1CD0E23C4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(v2 - 0xC7F991DE6408E15) + 4 * (v5 - 1355516884)) = *(_DWORD *)(*(_QWORD *)(v3 - 0xC7F991DE6408E15)
                                                                                           + 4 * (v5 - 1355516884));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((425 * (v5 - 1 == v1)) ^ (v4 - 444)))
                            - ((211 * ((v4 - 444) ^ 0x476u)) ^ 0x5CDLL)))();
}

void sub_1CD0E243C()
{
  JUMPOUT(0x1CD0E2404);
}

void sub_1CD0E2448(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) + 108757529 * (((a1 | 0xFA9FB8B3) - (a1 & 0xFA9FB8B3)) ^ 0x1A03DA98);
  __asm { BR              X9 }
}

uint64_t sub_1CD0E2524@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * (((&a4 | 0xA509F51) - (&a4 & 0xA509F51)) ^ 0xD496228A);
  a7 = &STACK[0x37021DA48139155A];
  a4 = &STACK[0x42E48BBDD224DE3D];
  a5 = v10;
  a8 = v12 ^ 0x64BC49B;
  a6 = (v11 + 172) ^ v12;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v11 - 1)) - 8))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((*(_DWORD *)(v10 - 0x27681A84B35EB0EDLL) == v8)
                                                        * (37 * (((v11 + 211) | 0x418) ^ 0x51C) + 1560)) ^ v11))
                                          - 4))(v13);
}

uint64_t sub_1CD0E2618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  unsigned int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((((a11 ^ v11) < 0x15) * (((v13 - 1296) | 0xB0) - 125)) ^ v13))
                            - 12))();
}

uint64_t sub_1CD0E264C()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  int v3;
  int v4;

  *v1 = v0;
  v4 = v0 - ((2 * v0) & 0x317341DE) + 414818497 + ((2 * (v3 - 11)) ^ 0xA32);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((602
                                          * ((((3 * ((v3 - 11) ^ 0x52B)) ^ 0x1DFFFFC3) & (2 * v4) ^ 0x1173418C)
                                           + (v4 ^ 0x96465F39)
                                           + 2010721788 != 114896338)) ^ (v3 - 11)))
                            - 8))();
}

uint64_t sub_1CD0E26E8(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((244
                                          * ((((a1 + 1147) ^ (v2 + v1 + ((a1 + 1212) ^ 0x71000501u) < 8)) & 1) == 0)) ^ a1))
                            - 12))();
}

uint64_t sub_1CD0E2740(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;

  v7 = v4 - v5 - (unint64_t)(6 * (a4 ^ 0x5DCu)) + 1478 > 0x1F;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((4 * v7) | (16 * v7)) ^ a4)) - 8))();
}

uint64_t sub_1CD0E2798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6
                                                     + 8
                                                     * (((((v5 < 0x20) ^ (a5 - 17)) & 1)
                                                       * (((a5 - 1401) | 0x2AA) - 723)) ^ a5))
                                         - 12))(0);
}

uint64_t sub_1CD0E27DC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  int8x16_t v10;
  uint64_t v11;
  uint64_t v12;
  int8x16_t v13;

  v9 = v6 + v5 + v7;
  v10.i64[0] = 0x3232323232323232;
  v10.i64[1] = 0x3232323232323232;
  v11 = v2 + v9;
  v12 = v3 + v9;
  v13 = veorq_s8(*(int8x16_t *)(v11 - 31), v10);
  *(int8x16_t *)(v12 - 15) = veorq_s8(*(int8x16_t *)(v11 - 15), v10);
  *(int8x16_t *)(v12 - 31) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (int)((((v4 & 0xFFFFFFE0) == 32) * (((a2 & 0xC12997FF) + 440) ^ 0x74E)) ^ ((a2 & 0xC12997FF) + 796)))
                            - 4))();
}

void sub_1CD0E284C()
{
  JUMPOUT(0x1CD0E2800);
}

void sub_1CD0E2858()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_1CD0E2AA0(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  BOOL v6;

  v1 = 1759421093 * (a1 ^ 0xB37DB054);
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x27681A84B35EB0F9) + 503480823;
  v4 = *(_DWORD *)a1 + v1 + 380801153;
  v5 = (v4 < 0x41F83143) ^ (v3 < 0x41F83143);
  v6 = v3 < v4;
  if (v5)
    v6 = v4 < 0x41F83143;
  v2 = *(_DWORD *)(a1 + 16) + v1;
  __asm { BR              X11 }
}

uint64_t sub_1CD0E2BA0()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 + 34 + 14 * (v0 ^ 0xD1) - 361) * (v2 == 1236742230)) ^ v0)))();
}

uint64_t sub_1CD0E2BD8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((*(_DWORD *)(v1 - 0x27681A84B35EB0F5) == 310716794) ^ (v0 + 26)) & 1)
                                     * (((v0 + 697466275) & 0xD66D8371) + 507)) ^ v0)))();
}

uint64_t sub_1CD0E2C34@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(_BYTE *)(*(_QWORD *)(v3 - 0x27681A84B35EB105) + (v5 - 1547459025 + v2)) = *(_BYTE *)(*(_QWORD *)(v3 - 0x27681A84B35EB105) + v2 - 310717355 + ((v1 + 707075844) & 0xD5DADBF6));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((189 * (v2 - 1 == a1)) ^ v1)) - 12))();
}

void sub_1CD0E2CB0()
{
  JUMPOUT(0x1CD0E2C78);
}

uint64_t sub_1CD0E2CB8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v3 = ((v0 - 1119) & *(_DWORD *)(v1 - 0x27681A84B35EB0F1)) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2 * (((v0 - 71) ^ v3) & 1)) & 0xEF | (16
                                                                                       * (((v0 - 71) ^ v3) & 1)) | v0)))();
}

void sub_1CD0E2CF8()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 0x27681A84B35EB0EDLL) = -1645193683;
}

void sub_1CD0E3208(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1225351577
            * ((-1431559688 - (a1 ^ 0x637B64C4 | 0xAAAC21F8) + (a1 ^ 0x637B64C4 | 0x5553DE07)) ^ 0x15B262D5));
  __asm { BR              X15 }
}

void sub_1CD0E3334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  *(_DWORD *)(a4 + v5) = v4;
}

uint64_t sub_1CD0E4238(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  BOOL v4;
  unsigned int v5;
  uint64_t v6;

  v1 = 1224239923 * (((a1 | 0x8C9528F6) - (_DWORD)a1 + (a1 & 0x736AD709)) ^ 0x7E26D521);
  v2 = a1[4] - v1;
  v3 = *a1 ^ v1;
  v5 = v3 - 1051670498;
  v4 = v3 - 1051670498 < 0;
  LODWORD(v6) = 1051670498 - v3;
  if (v4)
    v6 = v6;
  else
    v6 = v5;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E89A15E0 + (int)(v2 ^ 0xF4))
                              + (int)((484 * (v6 != ((2 * (_DWORD)v6) & 0xD0B90CAE))) ^ v2)
                              - 1)
                            - 4))();
}

void sub_1CD0E42F0(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  **(_DWORD **)(v1 - 0xC7F991DE6408E15) = (v2 + 1750894167) ^ 0xD7B70E58;
  *(_DWORD *)(v1 - 0xC7F991DE6408E19) = a1 + 1;
}

void sub_1CD0E4348(uint64_t a1)
{
  int v1;

  v1 = (628203409 * ((1303688841 - (a1 | 0x4DB4B689) + (a1 | 0xB24B4976)) ^ 0x30C34545)) ^ *(_DWORD *)(a1 + 16) ^ 0x43C;
  __asm { BR              X7 }
}

uint64_t sub_1CD0E4500(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, unsigned int a7)
{
  int v7;
  unint64_t v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v7 + a1) & a2 ^ (1022 * (v9 == 31))))
                            - ((5 * ((((v7 + a1) & a2) + a5) & a6 ^ a7)) ^ v8)))();
}

void sub_1CD0E4564()
{
  JUMPOUT(0x1CD0E44CCLL);
}

uint64_t sub_1CD0E456C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  *(_DWORD *)(a11 - 0x7542B2AE5773787) = 1292221340 - v16;
  v22 = 1224239923 * (((v21 - 136) & 0x8278F9B6 | ~((v21 - 136) | 0x8278F9B6)) ^ 0x8F34FB9E);
  *(_DWORD *)(v21 - 120) = v22 + v20 - 620;
  *(_QWORD *)(v21 - 128) = a15;
  *(_DWORD *)(v21 - 136) = v22 ^ 0x3EAF37E3;
  sub_1CD0E4238((_DWORD *)(v21 - 136));
  v23 = 1759421093 * ((2 * ((v21 - 136) & 0x4FEBF750) - (v21 - 136) - 1340864343) ^ 0x369B8FD);
  *(_DWORD *)(v21 - 136) = ((v20 ^ 0x1BF9F000) & (v17 << 6))
                         - v23
                         + ((v17 << ((v20 + 53) & 0xB7 ^ 0x32)) ^ 0x8DFCF9B9)
                         + 2069626752;
  *(_QWORD *)(v21 - 128) = a15;
  *(_DWORD *)(v21 - 120) = v20 - v23 + 636;
  sub_1CD104434(v21 - 136);
  *(_DWORD *)(v21 - 120) = v20 + 1374699841 * ((v21 - 136) ^ 0x6DF41809) + 635;
  *(_QWORD *)(v21 - 136) = a16;
  *(_QWORD *)(v21 - 128) = &STACK[0xC7F991DE6408E5D];
  sub_1CD0E22A8(v21 - 136);
  *(_DWORD *)(v21 - 120) = v20
                         + 1178560073
                         * ((((v21 - 136) ^ 0xFBA47593 | 0x3D05B776)
                           - ((v21 - 136) ^ 0xFBA47593)
                           + (((v21 - 136) ^ 0xFBA47593) & 0xC2FA4889)) ^ 0x7C35BA87)
                         + 775;
  *(_QWORD *)(v21 - 128) = a16;
  *(_QWORD *)(v21 - 112) = a15;
  v24 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v20 ^ 0x3F7)))(v21 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((31 * (*(_DWORD *)(v21 - 136) > 0xFF9D8B2u)) ^ v20))
                                          - 4))(v24);
}

uint64_t sub_1CD0E47B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_DWORD *)(v17 - 120) = a14 + 1374699841 * ((v17 - 136) ^ 0x6DF41809) + 142;
  *(_QWORD *)(v17 - 136) = v16;
  *(_QWORD *)(v17 - 128) = v14;
  v18 = sub_1CD0E22A8(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((914 * (a11 < ((a14 + 199) ^ (a14 - 118) ^ 0x13E))) ^ a14)))(v18);
}

uint64_t sub_1CD0E4834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  *(_DWORD *)(v20 - 120) = v19
                         + 1374699841 * ((2 * ((v20 - 136) & 0xB04ADC0) - (v20 - 136) + 1962627641) ^ 0x190F4A30)
                         - 57;
  *(_QWORD *)(v20 - 136) = a16;
  *(_QWORD *)(v20 - 128) = a14;
  sub_1CD0E22A8(v20 - 136);
  v21 = 1759421093 * (((v20 - 136) & 0x61219070 | ~((v20 - 136) | 0x61219070)) ^ 0x2DA3DFDB);
  *(_DWORD *)(v20 - 120) = v19 - v21 - 56;
  *(_QWORD *)(v20 - 128) = v16;
  *(_DWORD *)(v20 - 136) = 156825914 - v21;
  sub_1CD104434(v20 - 136);
  *(_DWORD *)(v20 - 120) = v19
                         + 1178560073
                         * ((((v20 - 136) | 0xECCF7CEC) - (v20 - 136) + ((v20 - 136) & 0x13308310)) ^ 0x565B048E)
                         + 83;
  *(_QWORD *)(v20 - 112) = v16;
  *(_QWORD *)(v20 - 128) = a16;
  v22 = v17(v20 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * (((*(_DWORD *)(v20 - 136) <= 0xFF9D8B2u) | ((*(_DWORD *)(v20 - 136) <= 0xFF9D8B2u) << 7)) ^ (v19 - 472)))
                                          - (((v19 ^ 0x95u) - 1236) ^ 0x93)))(v22);
}

uint64_t sub_1CD0E49E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((27
                                          * (((2 * a13) & 0xB7F5F7DE)
                                           + (a13 ^ 0x5BFAFBEF)
                                           + (((v14 ^ 0x4F4) + 1119) ^ 0xF77FBBFE)
                                           - 1400551921 > 0x7FFFFFFD)) ^ v14))
                            - 4))();
}

void sub_1CD0E55E0()
{
  unint64_t v0;
  uint64_t v1;
  _BYTE v2[1200];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = (unint64_t)&v2[qword_1EFA46A00 ^ qword_1EFA46A68];
  qword_1EFA46A68 = 536075833 * (v0 + 0x793AB71194CDC804);
  qword_1EFA46A00 = 536075833 * (v0 ^ 0x86C548EE6B3237FCLL);
  *(_DWORD *)*(&off_1E89A15E0
             + ((57 * ((qword_1EFA46A00 + qword_1EFA46A68) ^ 0xFC)) ^ byte_1CDB820A0[byte_1CDB8E440[(57 * ((qword_1EFA46A00 + qword_1EFA46A68) ^ 0xFC))] ^ 0x1B])
             - 206) = 1645153785;
  v1 = ((uint64_t (*)(uint64_t))*(&off_1E89A15E0
                                         + ((57
                                                                          * ((qword_1EFA46A00 + qword_1EFA46A68) ^ 0xFC)) ^ byte_1CDB85700[byte_1CDB81EA0[(57 * ((qword_1EFA46A00 + qword_1EFA46A68) ^ 0xFC))] ^ 0x85])
                                         + 22))(512);
  *(_QWORD *)*(&off_1E89A15E0
             + ((57 * ((qword_1EFA46A00 + qword_1EFA46A68) ^ 0xFC)) ^ byte_1CDB8E540[byte_1CDB89850[(57 * ((qword_1EFA46A00 + qword_1EFA46A68) ^ 0xFC))] ^ 0x53])
             - 107) = v1;
  __asm { BR              X8 }
}

void sub_1CD0E578C()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void sub_1CD0ECE98(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0xC7F991DE6408E19) - 1369292382;
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19) - 1369292382;
  v4 = (v2 < 937545218) ^ (v3 < 937545218);
  v5 = v2 > v3;
  if (v4)
    v6 = v2 < 937545218;
  else
    v6 = v5;
  v1 = *(_DWORD *)(a1 + 16) - 1178560073 * ((-2 - ((a1 | 0x5930FF1B) + (~(_DWORD)a1 | 0xA6CF00E4))) ^ 0x1C5B7886);
  __asm { BR              X15 }
}

uint64_t sub_1CD0ECF8C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v4 = ((147 * (v2 ^ 0x3F2)) ^ 0xA12D6B27) + v3;
  v5 = v1 - 1590858969 + ((v2 - 1009) | 0xD0) + 375;
  v6 = v5 < 715979222;
  v7 = v4 < v5;
  if (v4 < 715979222 != v6)
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1605 * !v7) ^ v2)) - 4))();
}

uint64_t sub_1CD0ED014(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  if (((v3 + 801) ^ 0x76807059) + v2 >= 0)
    v2 = 318707904 - v2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                                 + 8
                                                                                 * ((1132
                                                                                   * (v2
                                                                                    - 159354951
                                                                                    + ((v3 - 1476574434) & 0x5802BFEF) > (int)((77 * ((v3 + 801) ^ 0x3EC)) ^ 0xFFFFF9AE))) ^ (v3 + 801)))
                                                                     - 4))(a1, 1476575215, 4135612345, 4294965678);
}

uint64_t sub_1CD0ED0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v8;
  unsigned int v9;
  _QWORD *v10;
  _QWORD *v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((31
                                          * ((*(_DWORD *)(*v11 + 4 * v14) ^ (v13 + a6) & a7 ^ (v9
                                                                                               + ((v13 + a8) & v12)
                                                                                               + 1399)) > (*(_DWORD *)(*v10 + 4 * v14) ^ v9))) ^ v13))
                            - 4))();
}

uint64_t sub_1CD0ED154()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;

  return (*(uint64_t (**)(void))(v0 + 8 * ((((((v3 + v1) & v2) + 61) ^ (v3 + 801)) * (v4 < v5)) ^ v3)))();
}

void sub_1CD0ED180()
{
  JUMPOUT(0x1CD0ED0BCLL);
}

_DWORD *sub_1CD0ED188(_DWORD *result)
{
  int v1;
  int v2;

  *result = ((v2 + 600) ^ 0x1FF3B737) - v1;
  return result;
}

uint64_t sub_1CD0ED1B8(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;

  v1 = 1759421093 * ((~(_DWORD)a1 & 0xA201450D | a1 & 0x5DFEBAF2) ^ 0x117CF559);
  v2 = *(_DWORD *)(a1 + 8) - v1;
  v3 = *((_DWORD *)*(&off_1E89A15E0 + (v2 ^ 0x769)) + 83);
  v4 = (*(_DWORD *)(a1 + 16) ^ v1) - 16856931;
  v5 = v3 + 402133936 > v4;
  if (v4 < 0x17F813B0 != v3 > 0xE807EC4F)
    v5 = v3 > 0xE807EC4F;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E89A15E0 + (v2 ^ 0x724)) + ((v5 * ((v2 ^ 0x25B) - 1303)) ^ v2) - 1)
                            - 12))();
}

uint64_t sub_1CD0ED2A0()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v4 = v2 + 749603472;
  v5 = v4 < 0x45A755A3;
  v6 = v1 + 1168594339 < v4;
  if (v5 != v1 > 0xBA58AA5C)
    v7 = v5;
  else
    v7 = v6;
  return (*(uint64_t (**)(void))(v0 + 8 * ((54 * ((((v3 - 1361) ^ v7) & 1) == 0)) ^ v3)))();
}

uint64_t sub_1CD0ED310(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;

  v5 = v4 | 0x182;
  v6 = *(_DWORD *)(v3 + 336);
  v7 = (*(_DWORD *)(a1 + 4) ^ v1) + 354516975;
  if (v6 > 0x73C32EE1 != v7 < (((v5 + 1152) | 0x108) ^ 0x8C3CD610))
    v8 = v6 > 0x73C32EE1;
  else
    v8 = v6 - 1942171362 > v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1528 * !v8) ^ v5)) - ((v5 + 1152) ^ 0x60ELL)))();
}

uint64_t sub_1CD0ED3B0()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = v2 + 80333165;
  v5 = v4 < 0x7BE51A9C;
  v6 = v3 + (v1 ^ 0x25B) + 2078610318 < v4;
  if (v5 != v3 > (v1 ^ 0x841AE036))
    v6 = v5;
  return (*(uint64_t (**)(void))(v0 + 8 * ((944 * !v6) ^ v1)))();
}

uint64_t sub_1CD0ED428(_DWORD *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  _BOOL4 v7;

  v5 = *(_DWORD *)(v3 + 352);
  v6 = (*a1 ^ v1) + 237531176;
  v7 = v5 + 2 * (v4 ^ 0x6D2) - 1915799556 > v6;
  if (v5 > 0x7230C0F5 != v6 < ((184 * (v4 ^ 0x55F)) ^ 0x8DCF383A))
    v7 = v5 > 0x7230C0F5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((253 * v7) ^ v4 ^ 0x42E)) - 8))();
}

uint64_t sub_1CD0ED4C0@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;
  int v8;

  v5 = v2 - 2132719391;
  v6 = v5 < 0x8817C3;
  v7 = v3 + 8918979 < v5;
  if (v6 != v3 > v4 - 8920820)
    v7 = v6;
  if (v7)
    v8 = a2;
  else
    v8 = a2 + 1;
  *(_DWORD *)(result + 12) = v8;
  return result;
}

uint64_t sub_1CD0ED514(uint64_t a1, uint64_t a2)
{
  return off_1E899CFF0[(16 * (*(_DWORD *)(a2 + 4) == 1206753096)) | 0xA5u](4294925278);
}

uint64_t sub_1CD0ED550@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 448) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return (*(uint64_t (**)(_QWORD))(v2 + 3096))(0);
}

void sub_1CD0ED5BC()
{
  JUMPOUT(0x1CD0ED58CLL);
}

void sub_1CD0ED5C8(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0xB19902B9219B199) + 604313364;
  v3 = *(_DWORD *)(a1 + 20) + v1 - 316474524;
  v4 = v2 < 0x39B10190;
  v5 = v2 > v3;
  if (v3 < 0x39B10190 != v4)
    v5 = v4;
  __asm { BR              X9 }
}

uint64_t sub_1CD0ED6A8(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((196
                                * (((*(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + (v2 - 363588221))
                                   - ((2 * *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + (v2 - 363588221))) & 0xFFDF)
                                   + 1155520751) & 0x1F) != (v3 ^ 0x712))) ^ v3)))();
}

uint64_t sub_1CD0ED6FC()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;

  v4 = v3 ^ 0x6FC;
  v5 = ((v4 - 77) ^ 0xBB970340) + v0;
  v6 = v2 - 226943326 > v5;
  if (v2 - 226943326 < (v4 + 136644383) != v5 < 0x825091D)
    v6 = v2 - 226943326 < (v4 + 136644383);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((8 * !v6) | (!v6 << 10)) ^ v4)) - 8))();
}

uint64_t sub_1CD0ED77C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;

  v5 = *(char *)(v1 + (v4 + 1));
  v6 = *(unsigned __int8 *)(v1 + (v4 + 1));
  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 8 * ((1688 * (((v3 ^ 0x4F ^ (v5 >= 0)) & 1) == 0)) ^ v3)))(a1, ((v6 << ((v3 - 102) & 0xB6 ^ 3)) & 0x7E) + (v6 ^ 0xF7FDDF3F) + 1341110268);
}

uint64_t sub_1CD0ED808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  char v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1910
                                          * (((((v6 + 65) & 0x7F ^ 0xFCDBFBFF) + 2 * ((v6 + 65) & 0x7F)) & 0xFCDBFFFC) == ((299 * (a5 ^ 0x1F8)) ^ 0xFCDBFB02))) ^ a5))
                            - ((a5 ^ 0x1F8u)
                             + 1788)
                            + 1786))();
}

uint64_t sub_1CD0ED874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;
  _BOOL4 v13;

  v11 = v9 + a7 + ((v10 - 1633) | 0x110) - 211221332;
  v12 = v11 < 0x5F0ECD7;
  v13 = v11 > v7 - 1184700757;
  if ((v7 - 1184700757) < 0x5F0ECD7 != v12)
    v13 = v12;
  return (*(uint64_t (**)(void))(v8 + 8 * ((156 * !v13) | v10)))();
}

uint64_t sub_1CD0ED8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v12 = *(unsigned __int8 *)(v7 + (v10 + v9 + 2));
  return (*(uint64_t (**)(uint64_t, _QWORD))(v8 + 8 * (v11 ^ (958 * (a7 != -52691968)))))(a1, (v12 ^ 0x47EFBFBB) - 141440 + ((((v11 + 1361) ^ 0x5D9) - 357) & (2 * v12)));
}

uint64_t sub_1CD0ED964(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;

  v12 = *(unsigned __int8 *)(v8 + (a5 + v11 + 1794));
  return (*(uint64_t (**)(uint64_t, _QWORD))(v9 + 8 * ((1557 * (v10 - 1 == a6)) ^ a8)))(a1, ((v12 | ((((a8 + 807) | 0x100) ^ 0x1268C202) + (a2 << 8))) ^ 0xFFFFD7FB)+ 1206763328+ ((2 * (v12 | ((((a8 + 807) | 0x100) ^ 0x1268C202) + (a2 << 8)))) & 0xFFFFAFF6));
}

uint64_t sub_1CD0ED9D0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;

  v8 = v5 + v6 + v7 + 1599204958;
  v9 = (a3 + 1448515837) & 0xA9A961FE;
  v10 = a3 - 1284;
  v11 = a2 + v8 + 121046671;
  v12 = v3 + 1953524854;
  v13 = (v12 < 0xC0FE72A2) ^ (v11 < 0xC0FE72A2);
  v14 = v11 > v12;
  if (v13)
    v14 = v11 < 0xC0FE72A2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1247 * !v14) ^ v10)) - v9 + 502))();
}

uint64_t *sub_1CD0EDA70@<X0>(uint64_t *result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = result[6];
  v10 = *result;
  v9 = result[1];
  *a3 = v5 + 1541701226;
  *(_DWORD *)(v10 - 0x5F8E90DD494572B7) = v4;
  *(_DWORD *)(v8 - 0x56530F603BC303ACLL) = a2;
  *(_QWORD *)(v9 - 0x4FF3ADA337C70005) = v3 + v7 - 1910103002 + ((v6 + 4) | 0x500u);
  *((_DWORD *)result + 8) = 1645153785;
  return result;
}

void sub_1CD0EDAF8(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = 1374699841 * (((_DWORD)a1 - 1542394297 - 2 * (a1 & 0xA410EE47)) ^ 0xC9E4F64E);
  v2 = *a1 + v1;
  __asm { BR              X13 }
}

uint64_t sub_1CD0EDBB0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  _DWORD v7[2];
  uint64_t v8;

  v5 = 1755732067 * ((v7 & 0x9095DB2C | ~(v7 | 0x9095DB2C)) ^ 0xB1AC9908);
  v8 = v2;
  v7[0] = (v3 - (((v1 + 43) ^ 0xB54A6CA2) & (v4 + 1853089944)) + 299838324) ^ v5;
  v7[1] = (v1 + 7) ^ v5;
  return ((uint64_t (*)(_DWORD *))(*(_QWORD *)(a1 + 8 * (v1 ^ 0x245)) - 8))(v7);
}

void IPaI1oem5iL(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1CD0EDD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;

  a13 = 108757529 * (((&a12 | 0x956C4C34) - (&a12 & 0x956C4C34)) ^ 0x75F02E1F) + 1695027452;
  v15 = sub_1CD125890(&a12);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((275 * (a12 == 1645153785)) ^ v13)))(v15);
}

uint64_t sub_1CD0EDDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, int a13, unsigned int a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  a12 = &STACK[0x4BD26FD1213425B1];
  a14 = 1307 - 460628867 * ((2 * (&a12 & 0x44AF77C8) - &a12 - 1152350160) ^ 0xF7C60A4D);
  sub_1CD1015E8((uint64_t)&a12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14
                                                                                + 8
                                                                                * ((23
                                                                                  * (((a13 == 1645153785) ^ 0x2F) & 1)) ^ 0x2A6u)))(v15, v16, v17, v18, v19);
}

uint64_t sub_1CD0EDE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, uint64_t a14, int a15)
{
  int v15;
  int v16;
  __int16 v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v19 = 1178560073 * ((2 * (&a12 & 0x1E6864C8) - &a12 - 510158029) ^ 0x5B03E351);
  a13 = v19
      + (v15 ^ 0xD57F7D4A ^ (53 * (v17 & 0x9F3 ^ 0x12E)))
      + (((((v17 & 0x9F3) - 2) | 0xC) ^ 0xAAFEFEDA) & (2 * v15))
      + 2063454782;
  a15 = ((v17 & 0x9F3) + 709) ^ v19;
  a14 = a11;
  sub_1CD111694((uint64_t)&a12);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18
                                                                                          + 8
                                                                                          * ((14 * (a12 != v16 + 689)) ^ v17 & 0x9F3u))
                                                                              - 8))(v20, v21, v22, v23, v24);
}

uint64_t sub_1CD0EDF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, unsigned int a14, unsigned int a15, unsigned int a16, int a17)
{
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = (((&a12 | 0xFB74E5AA) - (&a12 & 0xFB74E5AA)) ^ 0xB7E267D7) * v20;
  a15 = v21 + v19 + 2138963059;
  a16 = 635686783 - v21;
  a12 = &STACK[0x58A7AA08624568E6];
  a13 = a11;
  a14 = v21 - 279984296;
  v22 = sub_1CD125C5C((uint64_t)&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * ((1580 * (a17 == ((v19 - 1118674286) & 0x42AD9EF1) + v17)) ^ v19))
                                          - 8))(v22);
}

uint64_t sub_1CD0EE050()
{
  void (*v0)(unsigned int *);
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unint64_t *v8;
  int v9;
  unint64_t *v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t *v13;
  unint64_t *v14;

  v5 = 53 * (v4 ^ 0x120);
  v13 = &STACK[0x384B062F076094AC];
  v14 = v8;
  v11 = (v4 + 44) ^ (1374699841 * (&v11 ^ 0x6DF41809));
  ((void (*)(unsigned int *))(*(_QWORD *)(v2 + 8 * (v4 ^ 0x198)) - 8))(&v11);
  v13 = v8;
  v11 = (v4 + 545) ^ (1755732067 * (((&v11 | 0x68EC43F5) - (&v11 & 0x68EC43F5)) ^ 0xB62AFE2E));
  sub_1CD121CC8((uint64_t)&v11);
  if ((_DWORD)v14 == v5 + v1)
    v6 = v9;
  else
    v6 = (int)v14;
  v12 = v4 + ((&v11 & 0x85FB557C | ~(&v11 | 0x85FB557C)) ^ 0x70F0A4AC) * v3 + 728;
  v13 = v8;
  v0(&v11);
  v12 = v5 + ((2 * (&v11 & 0x2037FE78) - &v11 + 1606943108) ^ 0x553C0FAB) * v3 + 340;
  v13 = v10;
  v0(&v11);
  return v6 ^ (v1 + 689);
}

void sub_1CD0EE1F8(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = qword_1EFA46A08 - (_QWORD)&v3 + qword_1EFA46A00;
  qword_1EFA46A08 = 536075833 * (v2 + 0x793AB71194CDC804);
  qword_1EFA46A00 = 536075833 * (v2 ^ 0x86C548EE6B3237FCLL);
  ((void (*)(char *, void (*)()))*(&off_1E89A15E0
                                            + ((57
                                                                             * ((qword_1EFA46A00 - qword_1EFA46A08) ^ 0xFC)) ^ byte_1CDB85800[byte_1CDB81FA0[(57 * ((qword_1EFA46A00 - qword_1EFA46A08) ^ 0xFC))] ^ 0xF7])
                                            + 47))((char *)*(&off_1E89A15E0+ ((57 * (qword_1EFA46A08 ^ 0xFC ^ qword_1EFA46A00)) ^ byte_1CDB8E540[byte_1CDB89850[(57 * (qword_1EFA46A08 ^ 0xFC ^ qword_1EFA46A00))] ^ 0xB6])+ 19)- 4, sub_1CD125DF4);
  __asm { BR              X9 }
}

uint64_t sub_1CD0EE314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(a1 + 8 * ((41 * (**(_QWORD **)(v1 + 1616) != 0)) ^ 0x3D1u)))();
}

uint64_t sub_1CD0EE33C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 1608))(v0);
}

uint64_t sub_1CD0EE364(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 535753261 * ((a1 - 1922189914 - 2 * (a1 & 0x8D6DB5A6)) ^ 0x8799BB89);
  v2 = *(_DWORD *)(a1 + 16) + v1;
  v3 = *(_DWORD *)a1 ^ v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0xC7F991DE6408E19);
  v6 = v4 - 159353952;
  v5 = v4 - 159353952 < 0;
  v7 = 159353952 - v4;
  if (!v5)
    v7 = v6;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E89A15E0 + v2 - 386)
                              + ((30 * ((v3 - 843402718) < 4 * (unint64_t)v7)) ^ v2)
                              - 1)
                            - (v2 ^ 0x51Fu)
                            + 1191))();
}

uint64_t sub_1CD0EE434()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v2 ^ (67 * (v0 != 843402718))))
                            - (((v2 + 110787148) & 0xF9658379)
                             - 205)
                            + 424))();
}

uint64_t sub_1CD0EE484()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1884 * (((v1 - 361) | 0xA2) == 434)) ^ (v1 - 245))) - 4))();
}

uint64_t sub_1CD0EE4FC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 8) + (a4 + a5)) = (a3 ^ v7) >> v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((971 * (((a2 - 863) ^ (a2 - 6)) + a4 != v6)) ^ a2)) - 12))();
}

uint64_t sub_1CD0EE548(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1884 * (v3 + 8 == ((a2 - 162) | 0xA2) - 402)) ^ (a2 - 46))) - 4))();
}

uint64_t sub_1CD0EE584(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;
  int v5;
  int v6;
  _BOOL4 v7;

  v7 = v3 > 0x7CA4B262;
  if (v7 == v6 - 1136057856 < -2091168355)
    v7 = v6 - 1136057856 < v5;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v4 + 8 * (((a3 + 1107) * v7) ^ a3)) - 4))(a1, (a3 + 46));
}

uint64_t sub_1CD0EE5F0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  _QWORD *v4;
  int v5;

  return sub_1CD0EE4FC(a1, a2, *(_DWORD *)(*v4 + 4 * (v5 - 1192373149)), v3, a3);
}

uint64_t sub_1CD0EE61C(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 32) = a3;
  return result;
}

void sub_1CD0EE624(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 16) - 3804331 * ((a1 - 2 * (a1 & 0xF3A65B02) - 207201534) ^ 0x8D737EF4);
  v2 = (*(_BYTE *)a1 ^ (-85 * ((a1 - 2 * (a1 & 2) + 2) ^ 0xF4)));
  ((void (*)(char *, void (*)()))*(&off_1E89A15E0 + v1 - 1289))((char *)*(&off_1E89A15E0 + v1 - 1458) - 4, sub_1CD1261D8);
  v3 = *(_QWORD *)*(&off_1E89A15E0 + v1 - 1503);
  v5 = v1 + 1755732067 * (((&v4 | 0x1283C73D) - (&v4 & 0x1283C73D)) ^ 0xCC457AE6) - 580;
  v4 = v3;
  sub_1CD122EC8((uint64_t)&v4);
  __asm { BR              X9 }
}

uint64_t sub_1CD0EE774()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1541
                                          * (**(_DWORD **)(v2 + 8 * (v0 ^ 0x3C2)) == ((v0 + 725) ^ 0x34B) - 1698)) ^ v0))
                            - 8))();
}

uint64_t sub_1CD0EE830@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;
  _DWORD *v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t, _BYTE *, _DWORD *);
  int v14;
  unsigned int v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  unsigned int v19;
  uint64_t result;
  uint64_t v21;
  _BYTE v22[30];
  _BYTE v23[140];

  v8 = *(unsigned int **)(v6 + 8 * (a1 - 1290));
  v9 = *v8;
  v10 = *(_QWORD *)(v6 + 8 * (a1 - 1323));
  v11 = *(_BYTE **)(v10 - 4);
  v22[0] = *v11 - 71;
  v22[1] = v11[1] - 71;
  v22[2] = v11[2] - 71;
  v22[3] = v11[3] - 71;
  v22[4] = v11[4] - 71;
  v22[5] = v11[5] - 71;
  v22[6] = v11[6] - 71;
  v22[7] = v11[7] - 71;
  v22[8] = v11[8] - 71;
  v22[9] = v11[9] - 71;
  v22[10] = v11[10] - 71;
  v22[11] = v11[11] - 71;
  v22[12] = v11[12] - 71;
  v22[13] = v11[13] - 71;
  v22[14] = v11[14] - 71;
  v22[15] = v11[15] - 71;
  v22[16] = v11[16] - 71;
  v22[17] = v11[17] - 71;
  v22[18] = v11[18] - 71;
  v22[19] = v11[19] - 71;
  v22[20] = v11[20] - 71;
  v22[21] = v11[21] - 71;
  v12 = *(_BYTE **)(v10 - 4);
  v22[22] = v12[22] - 71;
  v22[23] = v12[23] - 71;
  v22[24] = v12[24] - 71;
  v22[25] = v12[25] - 71;
  v22[26] = v12[26] - 71;
  v22[27] = v12[27] - 71;
  v22[28] = v12[28] - 71;
  v22[29] = v12[29] - 71;
  v13 = *(uint64_t (**)(uint64_t, _BYTE *, _DWORD *))(v6 + 8 * (a1 ^ 0x525));
  v14 = v13(v9, v22, v2);
  v15 = ((2 * v14) & 0xBFCFF7EE) + (v14 ^ 0x5FE7FBF7);
  if (v15 != 1609038839)
  {
    if (v15 == 1609039941)
    {
      v16 = *v8;
      v17 = *(_BYTE **)(*(_QWORD *)(v6 + 8 * (v4 - 1349)) - 4);
      v23[0] = *v17 - 70;
      v23[1] = v17[1] - 70;
      v23[2] = v17[2] - 70;
      v23[3] = v17[3] - 70;
      v23[4] = v17[4] - 70;
      v23[5] = v17[5] - 70;
      v23[6] = v17[6] - 70;
      v23[7] = v17[7] - 70;
      v23[8] = v17[8] - 70;
      v23[9] = v17[9] - 70;
      v23[10] = v17[10] - 70;
      v23[11] = v17[11] - 70;
      v23[12] = v17[12] - 70;
      v23[13] = v17[13] - 70;
      v23[14] = v17[14] - 70;
      v23[15] = v17[15] - 70;
      v23[16] = v17[16] - 70;
      v23[17] = v17[17] - 70;
      v23[18] = v17[18] - 70;
      v23[19] = v17[19] - 70;
      v18 = v13(v16, v23, v2);
      v19 = (2 * v18) & 0xB1CDF7BE;
      v15 = (v18 ^ 0x58E6FBDF) - 2359306;
    }
    else
    {
      v19 = -119865378;
    }
    __asm { BR              X8 }
  }
  *(_DWORD *)(v7 + 344) |= (3 * (v4 ^ 0x7DF)) ^ 0x6A8;
  *(_DWORD *)(v7 + 44) = 746457987;
  result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))(v6 + 8 * (v4 - 1406)))(*v2, v7 + 332, v7 + 336, v7 + 340, v3);
  v21 = *(_QWORD *)(v1 + 8);
  *(_DWORD *)(*(_QWORD *)(v1 + 24) - 0x705CCB0086AF2A86) = *v2;
  *(_DWORD *)(v21 - 0x4CAF57822185BF99) = *v3;
  *(_DWORD *)(v1 + 20) = 1645153785;
  return result;
}

void sub_1CD0EEC54(uint64_t a1)
{
  int v1;

  v1 = 1225351577 * (((a1 | 0xD0007703) - a1 + (a1 & 0x2FFF88FC)) ^ 0xF39AAF15);
  __asm { BR              X11 }
}

uint64_t sub_1CD0EED0C@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 != 0) * (a1 ^ 0x102)) ^ a1)))();
}

uint64_t sub_1CD0EED40@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  unsigned int *v4;
  int v5;
  uint64_t v6;

  v5 = 3 * (a1 ^ 0x91);
  v6 = v3(*v4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((205 * (*v1 != 0)) ^ v5)) - 12))(v6);
}

uint64_t sub_1CD0EED78()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t (*v2)(_QWORD);
  unsigned int *v3;
  uint64_t result;

  result = v2(*v3);
  *v1 = 0;
  *(_DWORD *)v0 = 0;
  *(_QWORD *)(v0 + 344) = 0;
  *(_QWORD *)(v0 + 352) = 0;
  *(_DWORD *)(v0 + 360) = 521138062;
  *(_DWORD *)(v0 + 56) = 746457987;
  return result;
}

uint64_t sub_1CD0EEDB8@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((205 * (*v1 != 0)) ^ a1 ^ 0x1B1)) - 12))();
}

void sub_1CD0EEDE4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 3804331 * (((a1 | 0x51A664) - (a1 & 0x51A664)) ^ 0x7E848392);
  __asm { BR              X9 }
}

uint64_t sub_1CD0EEEB0@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  _DWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;

  v14 = *(_DWORD *)(v8 - 0x27681A84B35EB0F5) + *a1 - v12 + ((v13 + 2132657639) & 0x80E23D37 ^ 0xBD783FD5);
  v15 = 1759421093 * (&a5 ^ 0xB37DB054);
  a8 = v13 - v15 + 40;
  a7 = v8;
  a5 = v14 - v15 + 415266632;
  a6 = v15 + 1236742230;
  v16 = ((uint64_t (*)(int *))(*(_QWORD *)(a2 + 8 * (v13 - 509)) - 4))(&a5);
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((502 * (*v10 == v9)) ^ v13)))(v16);
}

uint64_t sub_1CD0EEF84()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (((*(_QWORD *)(v0 + 8) == 0x58C2F3F47EC954F5) * (v1 - 1298)) ^ v1))
                            - ((v1 + 202) ^ 0x5F9)))();
}

uint64_t sub_1CD0EEFCC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((1004 * ((((v0 + 1) ^ (v1 == 1116194070)) & 1) == 0)) ^ v0)))();
}

void sub_1CD0EF000()
{
  _DWORD *v0;

  *v0 = -1645193696;
}

void sub_1CD0EF238(uint64_t a1)
{
  _BYTE v2[8];

  qword_1EFA46998 = 536075833 * ((unint64_t)&v2[qword_1EFA46A00 - qword_1EFA46998] ^ 0x86C548EE6B3237FCLL);
  qword_1EFA46A00 = qword_1EFA46998;
  MEMORY[0x1DEE39758](0x1EFA469E8, sub_1CD125DF4);
  __asm { BR              X9 }
}

uint64_t sub_1CD0EF324@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((240 * ((((**(_QWORD **)(v1 + 1616) == 0) ^ 0xE1F45F16) & 1) == 0)) ^ 0x25Fu))
                            - 8))();
}

uint64_t sub_1CD0EF364()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 1176))(v0);
}

uint64_t sub_1CD0EF38C(uint64_t result)
{
  uint64_t v1;
  __int16 v2;
  int v3;
  int v4;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_DWORD *)result + 26185 * ((2 * (result & 0x1A68) - result - 6761) ^ 0x9DF5);
  *(_DWORD *)(v1 - 0x5C6940C6B1BC6FDALL) = v2 & 0x1FF ^ 0xB31524D1;
  *(_QWORD *)(v1 - 0x5C6940C6B1BC6FFALL) = 0x6731FE5437D4814ALL;
  *(_DWORD *)(v1 - 0x5C6940C6B1BC6FDELL) = 369984849;
  v3 = v2 ^ 0x8E;
  if (v3 == 1)
  {
    v4 = 369984865;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x5C6940C6B1BC6FE2) = -1830205819;
    v4 = 369984869;
LABEL_5:
    *(_QWORD *)(v1 - 0x5C6940C6B1BC6FF2) = 0xBEF60CFC367E8474;
    *(_QWORD *)(v1 - 0x5C6940C6B1BC6FEALL) = 0x4109F303C9817B8BLL;
    *(_DWORD *)(v1 - 0x5C6940C6B1BC6FDELL) = v4;
  }
  *(_DWORD *)(result + 4) = 1284260520;
  return result;
}

uint64_t sub_1CD0EF4D4(uint64_t a1, uint64_t a2)
{
  return off_1E899CFF8[((194 * (*(_DWORD *)(a2 + 4) != 1206753084)) ^ 0x24Au) - 1]();
}

uint64_t sub_1CD0EF510()
{
  return 4294925278;
}

uint64_t sub_1CD0EF518(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x1EEBF92F)
                       - 148926504
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x5E);
  return 0;
}

void sub_1CD0EF550(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19);
  v4 = v2 - 159353952;
  v3 = v2 - 159353952 < 0;
  v5 = 159353952 - v2;
  if (!v3)
    v5 = v4;
  v1 = (*(_DWORD *)a1 - 235795823 * ((a1 + 1658036232 - 2 * (a1 & 0x62D3A008)) ^ 0xF67EE951) - 345) | 0x109;
  __asm { BR              X10 }
}

uint64_t sub_1CD0EF680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6, int a7, unsigned int a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((*(_DWORD *)(*v9 + 4 * a8) != v8) * a6) ^ a7))
                            - ((a7 - 80) ^ a5)
                            + 713))();
}

void sub_1CD0EF6B4()
{
  JUMPOUT(0x1CD0EF648);
}

uint64_t sub_1CD0EF6BC(uint64_t result)
{
  *(_DWORD *)(result + 4) = 313388984;
  return result;
}

void sub_1CD0EF760(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BR              X10 }
}

uint64_t sub_1CD0EF7EC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((*(_DWORD *)(v2 - 0x27681A84B35EB0EDLL) == 1645153785) * ((856 * (v1 ^ 0xD8)) ^ 0x7D5)) ^ v1)))();
}

uint64_t sub_1CD0EF83C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v1 - 0x27681A84B35EB0F5) - 1309758810;
  v4 = *(_DWORD *)(v1 - 0x27681A84B35EB0F9) - 1602345780;
  v5 = v3 < ((v2 - 112831669) & 0x6B9A6DEu) - 999042242;
  v6 = v3 > v4;
  if (v5 == v4 < 0xC473D418)
    v5 = v6;
  return (*(uint64_t (**)(void))(a1 + 8 * ((13 * v5) ^ v2)))();
}

uint64_t sub_1CD0EF8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;

  v7 = 11 * (v6 ^ 0x6D5);
  v8 = *(_QWORD *)(v4 - 0x27681A84B35EB105);
  v9 = *(unsigned __int8 *)(v8 + (v3 - 310716791)) ^ 0x32;
  v10 = ((*(unsigned __int8 *)(v8 + (v3 - 310716794)) ^ 0x32) << 24) | ((*(unsigned __int8 *)(v8 + (v3 - 310716793)) ^ 0x32) << 16) | ((*(unsigned __int8 *)(v8 + v3 - 310717010 + 2 * ((v7 + 936947223) & 0xC8274FF9 ^ 0x205)) ^ 0x32) << 8) | v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((203
                                          * (((v2 + v10 - 2 * (v10 & (v2 + 6) ^ v9 & 6) + 0x1000000) & 0xFFFFFF ^ 0xF0DF9)
                                           - (*(_DWORD *)(a1 + 32) ^ v5) != -96652631)) ^ v7))
                            - 8))();
}

void sub_1CD0EF9D8()
{
  _DWORD *v0;

  *v0 = -1645193524;
}

uint64_t sub_1CD0EFB88@<X0>(_QWORD *a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  _DWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  *(_QWORD *)(*a1 - 0x42E48BBDD224DE3DLL) = v6 + v5 + 8;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((19 * (*v3 != (((a2 - 641) | 0x42) ^ v4 ^ (((a2 - 592) ^ 0xCB) * v7)))) ^ (a2 - 592))))();
}

uint64_t sub_1CD0EFBFC@<X0>(_QWORD *a1@<X0>, int a2@<W4>, uint64_t a3@<X8>)
{
  _DWORD *v3;
  int v4;

  *(_QWORD *)(*a1 - 0x42E48BBDD224DE3DLL) = 0;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((19 * (*v3 != ((((a2 ^ 0x3D0) - 49) | 0x42) ^ v4 ^ (109 * (a2 ^ 0x31B))))) ^ a2 ^ 0x3D0)))();
}

void sub_1CD0EFC6C(uint64_t a1)
{
  _DWORD *v1;
  int v2;
  int v3;

  *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x37021DA48139154ELL) = v3;
  *v1 = v2;
  JUMPOUT(0x1CD0EFB80);
}

void gLg1CWr7p()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x1E0C80C00];
  v0[1] = 108757529 * ((v0 + 70320331 - 2 * (v0 & 0x43100CB)) ^ 0xE4AD62E0) + 1695027452;
  sub_1CD125890(v0);
  __asm { BR              X8 }
}

uint64_t sub_1CD0EFD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, unsigned int a20,unsigned int a21,int a22)
{
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v25 = 1759421093 * (&a19 ^ 0xB37DB054);
  HIDWORD(a19) = v25 ^ 0x771B5177;
  a20 = v25 + 1806;
  a22 = v25 ^ 0x18F94B49;
  LODWORD(a19) = v25 ^ 0x7FA6CEE2;
  ((void (*)(unint64_t **))(*(_QWORD *)(v24 + 392) - 12))(&a19);
  LODWORD(a12) = a21;
  a21 = 1307
      - 460628867
      * (((&a19 | 0x79CC505F) - &a19 + (&a19 & 0x8633AFA0)) ^ 0x355AD222);
  a19 = &STACK[0x4BD26FD1213425D9];
  sub_1CD1015E8((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * (v22 | ((a20 == 1645153785) << 8))) - 4))(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12);
}

uint64_t sub_1CD0EFE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,unsigned int a21,uint64_t a22,unsigned int a23,uint64_t a24)
{
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  void (*v31)(int *);
  unsigned int v32;
  uint64_t v33;

  v29 = 1178560073
      * (((&a20 | 0x2DEBD9B6) - &a20 + (&a20 & 0xD2142648)) ^ 0x977FA1D4);
  a23 = v29 ^ 0x3E8;
  a22 = a17;
  a21 = ((2 * v26) & 0xBCFBBE7E) + (v26 ^ 0x5E7DDF3F) - 234917126 + v29;
  sub_1CD111694((uint64_t)&a20);
  v30 = 1178560073
      * (((&a20 | 0xA44E095A) - &a20 + (&a20 & 0x5BB1F6A0)) ^ 0x1EDA7138);
  a23 = (((2 * v25) & 0xFF9AFFFE) + (v25 ^ 0xFFCD7FFF) + 196320555) ^ v30;
  a21 = v30 + 1289;
  a22 = a17;
  a24 = v24;
  v31 = (void (*)(int *))(*(_QWORD *)(v28 + 1024) - 8);
  v31(&a20);
  v32 = 1178560073 * ((&a20 - 791991911 - 2 * (&a20 & 0xD0CB2999)) ^ 0x6A5F51FB);
  a22 = a17;
  a24 = a14;
  a23 = v32 ^ ((a13 ^ 0x3FB7BDBB) - 875995281 + ((2 * a13) & 0x7F6F7B76));
  a21 = v32 + 1289;
  v33 = ((uint64_t (*)(int *))v31)(&a20);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((2034 * (a20 == 1645153785)) ^ 0x35Du)) - 12))(v33);
}

uint64_t sub_1CD0F0058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, uint64_t a20,int a21,int a22,int a23,int a24)
{
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  if (a12 >= 0x608FEDF6)
    v27 = 1010542952;
  else
    v27 = 635686783;
  v28 = 460628867 * ((&a19 + 663701623 - 2 * ((unint64_t)&a19 & 0x278F4877)) ^ 0x6B19CA0A);
  a23 = v27 - v28;
  a21 = v28 - 628183178;
  a22 = v28 + v25 + 2138962536;
  a19 = &STACK[0x58A7AA0862456916];
  a20 = a16;
  v29 = sub_1CD125C5C((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26
                                                      + 8
                                                      * ((101
                                                        * (a24 != v24 + ((v25 + 2122744248) & 0x81797F1F) - 545 - 495)) ^ v25))
                                          - 12))(v29);
}

uint64_t sub_1CD0F014C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  int v12;
  uint64_t v13;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13
                                                                        + 8
                                                                        * (int)(((v12
                                                                                + 24
                                                                                + ((v12 + 1527559566) & 0xA4F349EE)
                                                                                + 117)
                                                                               * (a12 > 0x608FEDF5)) ^ v12))
                                                            - 4))(a1, a2, a3);
}

uint64_t sub_1CD0F01FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(unsigned int *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  a23 = (v23 - 10) ^ (1225351577
                    * ((2 * (&a19 & 0x486B7D40) - &a19 + 932479672) ^ 0x140E5AAE));
  a20 = a15;
  a21 = v28;
  a22 = v24;
  ((void (*)(unsigned int *))(*(_QWORD *)(v27 + 8 * (v23 - 299)) - 8))(&a19);
  a19 = (v23 - 19) ^ (1374699841 * (((&a19 | 0x5275727) + (~&a19 | 0xFAD8A8D8)) ^ 0x68D34F2F));
  a21 = a15;
  a20 = a10;
  v26(&a19);
  a20 = a15;
  a19 = (v23 + 482) ^ (1755732067
                     * (((&a19 | 0xA2C01B31) - &a19 + (&a19 & 0x5D3FE4C8)) ^ 0x7C06A6EA));
  v29 = sub_1CD121CC8((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25
                                                      + 8
                                                      * ((1216 * ((_DWORD)a21 == 123 * (v23 ^ 0x16B) + 1645152924)) ^ v23))
                                          - 8))(v29);
}

uint64_t sub_1CD0F03D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int v17;
  int v18;
  int v19;
  uint64_t v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((607 * (a17 == v18)) ^ v17))
                            - (((251 * v19) - 904) ^ (v17 - 199685485) & 0xBE6F75D)))();
}

uint64_t sub_1CD0F0420@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7, int a8, int a9)
{
  unsigned int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10 + 8 * ((387 * ((((a9 ^ v9) > a6) ^ (a1 - 115) ^ 0x37) & 1)) ^ a1)))();
}

uint64_t sub_1CD0F0464()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  _BOOL4 v4;

  v3 = v0 - ((v0 << (((v1 + 19) & 0xDF) - 92)) & 0x82B34678) - 1051090116;
  v4 = ((v1 ^ 0xECF2B880) & (2 * v3) ^ 0x80B20068) + (v3 ^ 0x3720FFC9) + 1845473215 == 1685654708;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * v4) | (4 * v4)) ^ v1)) - 8))();
}

uint64_t sub_1CD0F0508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  _BOOL4 v12;

  v12 = v10 + v9 + 159818507 >= ((31 * (v8 ^ 0x165)) ^ (a8 + 1068)) - 928899231;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((v12 | (4 * v12)) ^ v8 ^ 0x7B9)) - 12))();
}

uint64_t sub_1CD0F0574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((61 * (v7 - a7 < (unint64_t)(v8 + 486) - 919)) ^ v8))
                            + 928899231
                            - ((v8 + 2002648558) & 0xBFFFE0E7)))();
}

uint64_t sub_1CD0F05C8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  unsigned int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 >= 3 * (a2 ^ 0x284u) - 889) * ((a2 - v8) ^ (a8 + 888))) ^ a2)))();
}

uint64_t sub_1CD0F0600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v15 = (v12 + v10);
  v16 = *(_OWORD *)(v9 + v15 - 15);
  v17 = *(_OWORD *)(v9 + v15 - 31);
  v18 = a7 + v15;
  *(_OWORD *)(v18 - 15) = v16;
  *(_OWORD *)(v18 - 31) = v17;
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((303 * (929 * (v13 ^ (a8 + 859)) - 1826 == (v11 & 0xFFFFFFE0))) ^ (v8 + v13 + 309))))(929);
}

uint64_t sub_1CD0F0668(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a3 | (v3 != v4))) - ((a3 - 997) ^ 0x359)))();
}

uint64_t sub_1CD0F0694(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  char v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10 + 8 * ((1843 * ((v9 & 0x18) == ((a2 - v8) ^ (a8 + 1524) ^ 0x399))) ^ a2)))();
}

uint64_t sub_1CD0F06CC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;

  *(_QWORD *)(a7 - 7 + (v10 + v8 - v11)) = *(_QWORD *)(v7 - 7 + (v10 + v8 - v11));
  return (*(uint64_t (**)(void))(v12 + 8 * ((1414 * ((a1 ^ 0x2F5) + v11 - 356 == (v9 & 0xFFFFFFF8))) ^ a1)))();
}

uint64_t sub_1CD0F0718(int a1, int a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a3 + (a4 - v6)) = *(_QWORD *)(v7 + (a4 - v6));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 + v6 - 356 == a2) * a5) ^ a1)))();
}

uint64_t sub_1CD0F0744(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 | ((((v2 == a2) ^ (v4 - 23)) & 1) << 7)))
                            - ((v4 - 142744005) & 0x3FDFF8FF ^ (unint64_t)(v3 + 16))))();
}

uint64_t sub_1CD0F078C@<X0>(uint64_t a1@<X6>, int a2@<W7>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(a1 + (v7 ^ (a2 + 1712) ^ (v5 - 821)) + v6) = *(_BYTE *)(v4
                                                                                 + (v7 ^ (a2 + 1712) ^ (v5 - 821))
                                                                                 + v6);
  return (*(uint64_t (**)(void))(v8 + 8 * ((853 * (v6 - 1 == a3)) ^ (v3 + v7 + 465))))();
}

uint64_t sub_1CD0F07D0()
{
  unsigned int v0;
  void (*v1)(_BYTE *);
  int v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[4];
  unsigned int v8;
  uint64_t v9;

  v8 = v2
     + 535753261
     * ((2 * ((v7 ^ 0x7401F681) & 0x44CCC51) - (v7 ^ 0x7401F681) + 2075341740) ^ 0x546CB02)
     + 168;
  v9 = v5;
  v1(v7);
  v9 = v6;
  v8 = ((v2 - 744574573) & 0x2C614F1F)
     + 535753261 * ((((2 * v7) | 0xAEBB6136) - v7 + 681725797) ^ 0xDDA9BEB4)
     - 11;
  v1(v7);
  return v3 ^ v0;
}

void sub_1CD0F08D8(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  unsigned int v11;
  uint64_t v12;
  _QWORD v13[2];
  int v14;
  int v15;
  int v16;
  unint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  int32x4_t v24;
  unint64_t *v25;
  int32x4_t v26;
  int32x4_t v27;
  uint64_t v28;
  uint64_t *v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  unint64_t *v42;
  int v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v2 = 3804331 * (((a1 | 0xD29CC998) - (a1 | 0x2D633667) + 761476711) ^ 0xAC49EC6E);
  v3 = *(_DWORD *)(a1 + 4);
  v4 = *(_DWORD *)a1 ^ v2;
  v5 = 1178560073
     * ((((&v41 | 0x135B03A) ^ 0xFFFFFFFE) - (~&v41 | 0xFECA4FC5)) ^ 0x445E37A7);
  v6 = *(_DWORD *)(a1 + 8) ^ v2;
  v17 = 3804331
      * (((a1 | 0xF8BBF308D29CC998) - (a1 | 0x7440CF72D633667) + 0x7440CF72D633667) ^ 0x3712930CAC49EC6ELL);
  v7 = v3 + v2;
  v41 = 1076023948 - v5;
  v43 = v4 - v5 + 1172345383;
  v25 = &STACK[0x5C6940C6B1BC7126];
  v42 = &STACK[0x5C6940C6B1BC7126];
  sub_1CD0EF38C((uint64_t)&v41);
  v8 = v6;
  v32 = v7 - 1515316656;
  v16 = v7 + 1773184230;
  v19 = v7 - 829826358;
  v18 = v7 - 119409945;
  v13[1] = (char *)&v13[-147572436] + 1;
  v20 = 55 * (v4 ^ 0x27u);
  v28 = v4 ^ 0x666u;
  v29 = &v40;
  v26 = vdupq_n_s32(0xC41E1BF2);
  v27 = vdupq_n_s32(0x620F0DFFu);
  v22 = (v4 + 271127083) & 0xEFD6EFF9;
  v15 = v4 + 1037830021;
  v14 = v4 - 1343287479;
  v34 = (v4 - 1343287479);
  v30 = 622 * (v4 ^ 0x36);
  v31 = v4;
  v24 = vdupq_n_s32(0x620F0DF9u);
  v21 = a1;
  v9 = *(_QWORD *)(a1 + 32);
  v10 = (char *)*(&off_1E89A15E0 + (v4 ^ 0x1E)) - 8;
  v23 = v20 + *(_QWORD *)&v10[8 * v4] - 1049;
  v11 = v8 - 176919824 + ~(((v8 + 690444800) & 0x4C4D10FF ^ v8 & 0x10) << ((v4 + 64) ^ 0x75));
  v35 = (HIBYTE(v11) ^ 0x4C) - ((v11 >> 23) & 0x64) + 50;
  v36 = (BYTE2(v11) ^ 0x4D) - ((v11 >> 15) & 0x64) + 50;
  v37 = (BYTE1(v11) ^ 0x10) - ((2 * (BYTE1(v11) ^ 0x10)) & 0x64) + 50;
  v38 = (v8 - 16 + ~((v8 ^ v8 & 0x10) << ((v4 + 64) ^ 0x75))) ^ 0xDD;
  v12 = *(_QWORD *)&v10[8
                      * ((26 * (((2 * v39) & 0xA ^ 8) + (v39 & 0x3F ^ 0x6F3FFFD1u) - 1866465281 < 0xFFFFFFC0)) ^ (v4 + 58))]
      - 8;
  v33 = v9;
  __asm { BR              X13 }
}

uint64_t sub_1CD0F0CE4@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  *(_BYTE *)(a3 + (a4 + v7)) = *(_BYTE *)(a2 + ((5 * (v4 ^ a1)) ^ (v6 + 1341)) + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((419 * ((a4 & 0xFFFFFFC0) != v8)) ^ v4)) - 8))();
}

uint64_t sub_1CD0F0D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,unsigned int a54,int a55,unsigned __int8 a56)
{
  int v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  int v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t, char *);
  uint64_t v63;
  uint64_t v64;
  int v65;
  _BOOL4 v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, _QWORD, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _BOOL4 v72;

  v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(v58 + 8 * v56);
  HIDWORD(a12) = v57;
  v63 = a56 ^ 0x5Fu;
  if ((_DWORD)v63 == 2)
  {
    v72 = (unint64_t)&a39 < a30 && v59 < (unint64_t)&a48;
    return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(v58
                                                               + 8
                                                               * (int)(((((a2 + 972) | 0x112) ^ 0x505) * v72) ^ (a2 + 1233)))
                                                   - (a29 ^ 0x65A)))(a54, a54);
  }
  else if ((_DWORD)v63 == 1)
  {
    v64 = ((_DWORD)a2 + 40) | 0x81u;
    v65 = a2 + 169;
    v67 = (unint64_t)&a39 >= a30 || v59 >= (unint64_t)&a48;
    v68 = (v64 + 637);
    v69 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * (int)((v68 * v67) ^ v65)) - 4);
    return v69(v64, 1075421723, v69, v68, &a39, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26);
  }
  else
  {
    a50 = v60 + 2 * (a50 ^ v60) - (v61 & (4 * (a50 ^ v60)));
    a51 = 2 * (a51 ^ v60) + v60 - (v61 & (4 * (a51 ^ v60)));
    a52 = 2 * (a52 ^ v60) + v60 - (v61 & (4 * (a52 ^ v60)));
    a53 = 2 * (a53 ^ v60) + v60 - (v61 & (4 * (a53 ^ v60)));
    return v62(v63, a2, 3005633205, a4, &a39);
  }
}

uint64_t sub_1CD0F1CBC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32,uint64_t a33,uint64_t a34,int a35)
{
  uint64_t v35;
  unsigned int v36;
  _BOOL4 v37;
  _BOOL4 v38;
  _BOOL4 v39;

  v36 = a35 + 2117096340 + a7;
  v37 = v36 < 0xCB0A057B;
  v38 = v36 > a32;
  if (a32 < 0xCB0A057B != v37)
    v39 = v37;
  else
    v39 = v38;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((634 * !v39) ^ (a2 + 1022))) - 12))();
}

uint64_t sub_1CD0F1D40(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a7 ^ (47 * (v7 + a3 + 63 < (v7 + a3)))))
                            - ((26 * (a7 ^ 0x4DEu)) ^ 0x38)))();
}

uint64_t sub_1CD0F1D9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  *(_BYTE *)(a4 + v9) = *(_BYTE *)(v12 + (v8 + a3))
                      - ((*(_BYTE *)(v12 + (v8 + a3)) << (((v10 + 113) | a8) - 30)) & a6)
                      + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((v9 != 63) * v13) ^ v10)) - 12))();
}

uint64_t sub_1CD0F1DF0(uint64_t a1, uint64_t a2, int a3, int8x16_t *a4)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;

  *a4 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v7 + (v4 + a3)), vandq_s8(vaddq_s8(*(int8x16_t *)(v7 + (v4 + a3)), *(int8x16_t *)(v7 + (v4 + a3))), v9)), v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v5 + 317)) - 12))();
}

uint64_t sub_1CD0F1E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13
                                                                       + 8
                                                                       * ((984
                                                                         * (((((_DWORD)a2 + 528) ^ (a13 - 1998991134 + (((_DWORD)a2 - 52) | 0x44u) + 1317 < 0xFFFFFFFB)) & 1) == 0)) ^ ((int)a2 + 441))))(a1, a2, a3, a4);
}

void sub_1CD0F1EC0()
{
  JUMPOUT(0x1CD0F1040);
}

uint64_t sub_1CD0F1EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  int v16;
  int v17;
  uint64_t v18;
  _BOOL4 v19;

  v19 = a16 < 0xF3E5C5F5;
  if (v19 == (v16 - 1492379478) < 0xF3E5C5F5)
    LOBYTE(v19) = v16 - 1492379478 < a16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18
                                        + 8
                                        * (((16 * ((v17 ^ 0x3F ^ v19) & 1)) & 0xDF | (32 * ((v17 ^ 0x3F ^ v19) & 1))) ^ v17))
                            - 4))();
}

uint64_t sub_1CD0F1F60@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W5>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = a2 < v9;
  *(_BYTE *)(a4 + (a6 + v8)) = *(_BYTE *)(v11 + (v6 + a3))
                                           - (a5 & (2 * *(_BYTE *)(v11 + (v6 + a3))))
                                           + 50;
  v13 = a1 + v6 + 1;
  v14 = v12 ^ (v13 < v9);
  v15 = v13 < a2;
  if (!v14)
    v12 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((16 * !v12) | (32 * !v12)) ^ v7)) - 4))();
}

uint64_t sub_1CD0F1FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;

  v52 = 628203409 * ((-671978737 - ((v51 - 168) | 0xD7F26B0F) + ((v51 - 168) | 0x280D94F0)) ^ 0xAA8598C3);
  *(_DWORD *)(v51 - 160) = v52 + v49 - 646;
  *(_DWORD *)(v51 - 156) = a15 - v52;
  STACK[0x358] = a24;
  v53 = sub_1CD103BC8(v51 - 168);
  v54 = a49 & 0x3F;
  *(&a40 + (v54 ^ 0x14)) = -78;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v50
                                                                       + 8
                                                                       * ((105 * ((v54 ^ 0x14) < 0x38)) ^ v49))
                                                           - ((v49 + 2049300052) & 0x85DA233C)
                                                           + 48))(v53, a32, 3005633205);
}

uint64_t sub_1CD0F20D8()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((((v0 - 1180579210) < 0x38) * (3 * (v2 ^ 0x1ED) - 42)) ^ (v2 + 461))))(50);
}

uint64_t sub_1CD0F2120@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v1;
  v5 = v2 + v1;
  if ((unint64_t)(v5 + 1) > 0x38)
    v6 = v5 + 1;
  else
    v6 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((a1 - 905) ^ 0x68C) - 1039)
                                          * ((unint64_t)(v6 - v4 + 1180579210) < 8)) ^ a1))
                            - 8))();
}

uint64_t sub_1CD0F2178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(a10 + v12 + (v10 ^ 0x68F)) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (int)((624 * ((v11 & 0xFFFFFFFFFFFFFFF8) == 8)) | v10)) - 8))();
}

uint64_t sub_1CD0F21C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 + (v5 ^ a5)) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (int)(((v6 == 0) * v8) | v5)) - 8))();
}

uint64_t sub_1CD0F21EC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 1) | 2) - 509) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_1CD0F2214@<X0>(char a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = a3 + v4;
  *(_BYTE *)(a2 + v6) = a1;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((unint64_t)(v6 + 1) < 0x38) | (2 * ((unint64_t)(v6 + 1) < 0x38))) ^ v3 ^ 3)))();
}

uint64_t sub_1CD0F2248(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(a4 + v5 + v6) = a1;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((unint64_t)(v5 + v6 + 1) < 0x38) | (2
                                                                            * ((unint64_t)(v5 + v6 + 1) < 0x38))) ^ v4)))();
}

void sub_1CD0F2274()
{
  JUMPOUT(0x1CD0F103CLL);
}

uint64_t sub_1CD0F25B0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 != v0) * ((v2 - 1209) ^ 0x27D)) ^ v2)) - 12))();
}

uint64_t sub_1CD0F25F8@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v2 + v4;
  *(_BYTE *)(a1 + v7) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(v7 + 1) < 0x40) * v3) ^ (a2 + 1209))) - 12))();
}

void sub_1CD0F2638()
{
  JUMPOUT(0x1CD0F103CLL);
}

uint64_t sub_1CD0F2648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37)
{
  int v37;
  int v38;
  uint64_t v39;
  BOOL v40;

  v40 = (v38 & 0xFFFFFFFC) == ((v37 | 0x92) ^ 0x2E1) + 1998989753;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v39
                                                             + 8
                                                             * (((2
                                                                * (((19 * ((v37 | 0x92) ^ 0xE1)) ^ v40) & 1)) & 0xF7 | (8 * (((19 * ((v37 | 0x92) ^ 0xE1)) ^ v40) & 1))) ^ (v37 | 0x92))))(a1, a2, &a37);
}

uint64_t sub_1CD0F26AC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(a2 + (a3 + v5)) = *(_BYTE *)(a1 + v3 - 1998989808);
  return (*(uint64_t (**)(void))(v7 + 8 * ((1737 * (((v3 + 1) & 0xFFFFFFFCLL) == v6)) ^ (v4 - 313))))();
}

uint64_t sub_1CD0F2710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24)
{
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v26 = 628203409 * ((~((v25 - 168) | 0x9F6F2C5F) + ((v25 - 168) & 0x9F6F2C5F)) ^ 0xE218DF93);
  *(_DWORD *)(v25 - 160) = v26 + v24 + 1001;
  *(_DWORD *)(v25 - 156) = 507371030 - v26;
  STACK[0x358] = a24;
  v27 = sub_1CD103BC8(v25 - 168);
  return a20(v27);
}

uint64_t sub_1CD0F2780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,int a53)
{
  uint64_t v53;
  uint64_t v55;
  unint64_t v56;

  if (BYTE4(a32) == 2)
    return ((uint64_t (*)(void))(*(_QWORD *)(v53
                                          + 8
                                          * ((140 * (a53 != 62 * (a2 ^ 0x26) + 369983733)) ^ ((int)a2 + 1064)))
                              - 12))();
  if (BYTE4(a32) == 1)
    return ((uint64_t (*)(void))(*(_QWORD *)(v53
                                          + 8
                                          * (((2 * (a53 == 369984849)) | (16 * (a53 == 369984849))) ^ ((int)a2 + 1050)))
                              - ((2 * (_DWORD)a2) ^ 0x426u)
                              + 1090))();
  v55 = 103 * (a2 ^ 0x31);
  v56 = ((unint64_t)&a37 ^ 0x7DFFFDE1BDDDED78 ^ v55)
      + ((2 * (_QWORD)&a37) & 0xFBFFFBC37BBBDEF0)
      - 0x601C90400009019ELL;
  a52 = ((v56 + 35) ^ 0xBA) * (v56 + 103 * (a2 ^ 0x31) + 49);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * (int)v55) - 4))(a1, a2, a19, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

void sub_1CD0F2AC4()
{
  JUMPOUT(0x1CD0F2A94);
}

uint64_t sub_1CD0F2ACC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t result;
  uint64_t v4;

  memset((void *)(v1 - 204), 50, 16);
  v2 = 235795823 * ((((v1 - 168) | 0xEB9F054C) - ((v1 - 168) & 0xEB9F054C)) ^ 0x7F324C15);
  *(_DWORD *)(v1 - 160) = v2 + 1596901039;
  *(_DWORD *)(v1 - 132) = (a1 + 1809) ^ v2;
  result = ((uint64_t (*)(uint64_t))((char *)*(&off_1E89A15E0 + a1 - 11) - 4))(v1 - 168);
  *(_DWORD *)(v4 + 12) = *(_DWORD *)(v1 - 136);
  return result;
}

void cp2g1b9ro(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_1CD0F2C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;

  a15 = 108757529
      * (((&a14 | 0x7488BE6A) - &a14 + (&a14 & 0x8B774190)) ^ 0x9414DC41)
      + 1695027452;
  v17 = sub_1CD125890(&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((924 * (a14 == 1645153785)) ^ v15)) - 4))(v17);
}

uint64_t sub_1CD0F2CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a16 = 1307 - 460628867 * ((&a14 & 0x9E53D03D | ~(&a14 | 0x9E53D03D)) ^ 0x2D3AADBF);
  a14 = &STACK[0x4BD26FD1213425B9];
  sub_1CD1015E8((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((17 * (a15 == v16)) ^ 0x4AD))
                                                                                                - 4))(v18, v19, v20, v21, v22, v23, v24);
}

uint64_t sub_1CD0F2D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  a16 = v19 + 1224239923 * ((&a14 & 0xD2B4AA2E | ~(&a14 | 0xD2B4AA2E)) ^ 0xDFF8A806) + 1201;
  a17 = v17;
  a15 = a12;
  v23 = ((uint64_t (*)(int *))(*(_QWORD *)(v21 + 8 * (v19 ^ 0xB0)) - 12))(&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8 * (((a14 == v18) * (v22 + v19 + 840366501 + 600)) ^ v19))
                                          - 4))(v23);
}

uint64_t sub_1CD0F2E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, uint64_t a15, unsigned int a16, unsigned int a17, unsigned int a18, int a19)
{
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;

  v23 = 460628867 * (&a14 ^ 0x4C96827D);
  a18 = 635686783 - v23;
  a14 = &STACK[0x58A7AA08624568F6];
  a15 = a12;
  a16 = v23 - 910010299;
  a17 = v23 + v20 + 2138963185;
  v24 = sub_1CD125C5C((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22
                                                      + 8
                                                      * (((a19 == v19) * (((v20 ^ (v21 + 602)) - v21 + 300) ^ 0x789)) ^ v20))
                                          - 4))(v24);
}

uint64_t sub_1CD0F2EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unint64_t *a16)
{
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  void (*v21)(unsigned int *);
  uint64_t v22;

  a14 = (v20 - 390) ^ (1374699841
                     * ((&a14 - 762734092 - 2 * (&a14 & 0xD28999F4)) ^ 0xBF7D81FD));
  a15 = &STACK[0x384B062F07609560];
  a16 = a11;
  v21 = (void (*)(unsigned int *))(*(_QWORD *)(v19 + 8 * (v20 ^ 0x26A)) - 8);
  v21(&a14);
  a14 = (v20 - 390) ^ (1374699841
                     * ((&a14 + 2125390926 - 2 * (&a14 & 0x7EAEE44E)) ^ 0x135AFC47));
  a15 = &STACK[0x384B062F07609564];
  a16 = a11;
  v21(&a14);
  a14 = (v20 + 111) ^ (1755732067
                     * ((791046139 - (&a14 | 0x2F2667FB) + (&a14 | 0xD0D99804)) ^ 0xE1F25DF));
  a15 = a11;
  v22 = sub_1CD121CC8((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * (((((v20 - v16 - 1) ^ ((_DWORD)a16 == v17)) & 1)
                                                        * (v20 ^ 0x2F5)) ^ v20))
                                          - 4))(v22);
}

uint64_t sub_1CD0F3054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  uint64_t v15;
  unsigned int v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (int)((1534 * (a14 == v14)) ^ v16 ^ 0x2A)) - (v16 ^ 0x2DBLL)))();
}

uint64_t sub_1CD0F3098()
{
  _QWORD *v0;
  int v1;
  int v2;
  void (*v4)(_BYTE *);
  uint64_t v5;
  uint64_t v6;
  int v7;
  _BYTE v8[4];
  int v9;
  uint64_t v10;

  *v0 = v2 ^ v7 ^ 0x5019F7ADu;
  v10 = v5;
  v9 = 535753261 * (((v8 | 0x7AAA3359) + (~v8 | 0x8555CCA6)) ^ 0x705E3D77) - 840365647 + v2;
  v4(v8);
  v9 = 535753261 * ((v8 - 1904952353 - 2 * ((unint64_t)v8 & 0x8E74BBDF)) ^ 0x8480B5F0)
     - 840365647
     + v2;
  v10 = v6;
  v4(v8);
  return v1 ^ 0x620F0DF9u;
}

uint64_t sub_1CD0F31A8(uint64_t a1)
{
  int v1;
  signed int v2;

  v1 = *(_DWORD *)a1 - 628203409 * (a1 ^ 0x82880C33) + 2;
  v2 = (v1 ^ 0xF680737B) + *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19);
  if (v2 < 0)
    v2 = -v2;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E89A15E0 + v1 - 177)
                              + ((((v2 ^ 0xBDEDFFF6) + 1108475913 + ((2 * v2) & 0x7BDBFFEC) < 0x7FFFFFFF)
                                * ((v1 - 1262923266) & 0x4B46ADFF ^ 0x60E)) ^ v1)
                              - 1)
                            - (((v1 - 18) | 0x10u) ^ 0xD5)))();
}

uint64_t sub_1CD0F32AC(uint64_t a1, int a2, int a3, int a4, uint64_t a5)
{
  _QWORD *v5;
  unsigned int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8 * (((*(_DWORD *)(*v5 + 4 * v6) != a2) * (((a4 - 22) | 0x18) ^ a3)) ^ a4))
                            - 12))();
}

void sub_1CD0F32E4()
{
  JUMPOUT(0x1CD0F3268);
}

uint64_t sub_1CD0F32EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(result + 4) = a6;
  return result;
}

void sub_1CD0F32F4()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  char v3;

  v0 = MEMORY[0x1E0C80A78]();
  if (*(_QWORD *)(v0 + 24))
    v2 = *(_QWORD *)(v0 + 8) == 0x58A7AA08624568E6;
  else
    v2 = 1;
  v3 = v2;
  v1 = *(_DWORD *)(v0 + 16) ^ (1755732067 * ((2 * (v0 & 0x47DE7202) - v0 - 1205760515) ^ 0x66E73026));
  __asm { BR              X8 }
}

uint64_t sub_1CD0F3420()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  int v8;

  LODWORD(STACK[0x468]) = v0;
  v5 = v4 - 200;
  *(_BYTE *)v5 = (-85 * ((2 * ((v4 + 56) & 0x38) - (v4 + 56) - 57) ^ 0x31)) ^ 0x2E;
  STACK[0x2A8] = (unint64_t)&STACK[0x4CAF57822185C49D];
  *(_QWORD *)(v5 + 8) = &STACK[0x4CAF57822185C49D];
  STACK[0x2B0] = (unint64_t)&STACK[0x705CCB0086AF2F6E];
  *(_QWORD *)(v5 + 24) = &STACK[0x705CCB0086AF2F6E];
  *(_DWORD *)(v4 - 184) = 3804331 * ((2 * ((v4 - 200) & 0x59AF7138) - (v4 - 200) - 1504670009) ^ 0xD885AB31) + v2 + 856;
  v6 = *(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x2CE));
  STACK[0x2A0] = (unint64_t)v6;
  v7 = v6(v4 - 200);
  v8 = *(_DWORD *)(v4 - 180);
  LODWORD(STACK[0x618]) = v8;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((v8 == 1645153785) * ((((v2 + 592) | 4) + 556) ^ (v2 - 231))) ^ v2)))(v7);
}

#error "1CD0F3D54: call analysis failed (funcsize=363)"

uint64_t sub_1CD0F3D58()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  STACK[0x2C8] = v1;
  STACK[0x4D8] = 0;
  v6 = 235795823 * ((565679011 - ((v5 - 200) | 0x21B793A3) + ((v5 - 200) | 0xDE486C5C)) ^ 0x4AE52505);
  v4[1] = 0x15C2A15CF2725D85;
  v7 = STACK[0x2B8];
  *(_DWORD *)(v5 - 200) = v6 ^ 0xE4EF48AC;
  *(_DWORD *)(v5 - 164) = v3 - v6 - 440;
  v8 = STACK[0x2C0];
  v4[2] = v7;
  v4[3] = v8;
  v9 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v0 + 8 * (v3 - 626)) - 12);
  STACK[0x2D0] = (unint64_t)v9;
  v10 = v9(v5 - 200);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((22 * (*(_DWORD *)(v5 - 168) != 1645153785)) ^ v3))
                                          - ((v3 ^ 0x14Du)
                                           + 676)
                                          + 1249))(v10);
}

uint64_t sub_1CD0F3E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  LODWORD(STACK[0x4AC]) = v4;
  STACK[0x620] = STACK[0x460];
  LODWORD(STACK[0x618]) = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((((179 * (((v3 - 1197) | 0x44) ^ 0x7B)
                                                                           - 1018159216) & 0x3CAFDFCB ^ 0x597)
                                                                         * (v4 == v6)) ^ ((v3 - 1197) | 0x44))))(a1, a2, a3, 2649773600);
}

void sub_1CD0F90D0()
{
  JUMPOUT(0x1CD0F3CB0);
}

uint64_t sub_1CD0F9168(unint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 304) = v2 - 176;
  *(_QWORD *)(v5 + 96) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 | (2 * (v4 > a1)))) - ((v1 - 22) ^ 0x33FLL)))();
}

uint64_t sub_1CD0F920C@<X0>(uint64_t a1@<X0>, char a2@<W3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(a1 + (v6 + v7)) = *(_BYTE *)(v9 + (v6 + v7)) ^ *(_BYTE *)(v4
                                                                                                 + ((v6 + v7) & 0xFLL)) ^ *(_BYTE *)(v5 + ((v6 + v7) & 0xFLL)) ^ *(_BYTE *)(((v6 + v7) & 0xFLL) + v3 + 2) ^ (((v6 + v7) & 0xF) * (a3 ^ 0x80)) ^ a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((120 * ((v6 + 1 + v7) < 0x150)) ^ a3)) - 8))();
}

uint64_t sub_1CD0F9274@<X0>(uint64_t a1@<X0>, char a2@<W3>, int a3@<W5>, char a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (v9 + a3);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(v12 + v13) ^ *(_BYTE *)(v7 + (v13 & 0xF)) ^ *(_BYTE *)(v8 + (v13 & 0xF)) ^ *(_BYTE *)((v13 & 0xF) + v6 + 2) ^ ((v13 & 0xF) * a4) ^ a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((v9 - 1 != v10) * a5) ^ a6)) - 8))();
}

uint64_t sub_1CD0F92D4@<X0>(int8x16_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int8x16_t *a14)
{
  int v14;
  uint64_t v15;
  _QWORD *v16;
  int8x16_t *v17;
  uint64_t v18;

  v17 = (int8x16_t *)((char *)&STACK[0x6C0] + STACK[0x3D0] + (a7 ^ 0x991D124D801601E0));
  *v17 = veorq_s8(*a14, (int8x16_t)xmmword_1CDB7F090);
  v18 = v16[47];
  v16[48] = a1;
  v16[49] = a1;
  v16[47] = 435 * (v14 ^ 0x662u) + v18 - 1708;
  return ((uint64_t (*)(int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * (v14 ^ ((v17 == a1) | ((v17 == a1) << 8))))
                                                                                           - 8))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1CD0F9358@<X0>(unsigned __int8 *a1@<X0>, int a2@<W4>, char a3@<W7>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  int v69;
  uint64_t v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  int v83;
  unsigned __int8 v84;
  int v85;
  uint64_t v86;
  int v87;
  int v88;
  unint64_t v89;
  unint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  int v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  char v102;
  int v103;
  char v104;
  unsigned int v105;
  int v106;
  char v107;
  uint64_t v108;
  int v109;
  unint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  uint64_t v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unint64_t v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  int v224;
  int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  int v247;
  unsigned int v248;
  int v249;
  int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  int v259;
  BOOL v260;
  unsigned int v261;
  int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  unint64_t v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  unsigned int v276;
  char *v277;
  char *v278;
  char *v279;
  unsigned int v280;
  unsigned int v281;
  char *v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  unsigned int v294;
  uint64_t v295;
  unsigned int v296;
  uint64_t v297;
  unsigned int v298;
  uint64_t v299;
  char *v300;
  char *v301;
  int v302;
  int v303;
  unsigned int v304;
  uint64_t v305;
  char *v306;
  int v307;
  unint64_t v308;
  unint64_t v309;
  int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  int v317;
  unint64_t v318;
  unsigned int v319;
  int v320;
  _BYTE *v322;
  unsigned __int8 *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  int v336;
  uint64_t v337;
  int v338;
  int v339;
  uint64_t v340;

  v61 = (unsigned __int8 *)&STACK[0x19C0] + a4;
  *v61 = *a1;
  *(_QWORD *)(v61 + 1) = *(_QWORD *)(a1 + 1);
  *(_DWORD *)(v61 + 9) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v61 + 13) = *(_WORD *)(a1 + 13);
  v61[15] = a1[15];
  v62 = *((_QWORD *)a1 + 1);
  *((_QWORD *)v61 + 2) = *(_QWORD *)a1;
  *((_QWORD *)v61 + 3) = v62;
  v63 = (v57 - 589705933) & 0x23262F86;
  v64 = *(_QWORD *)(v59 + 8 * (v57 - 1560)) - 12;
  v65 = *(_QWORD *)(v59 + 8 * (v57 - 1531));
  v66 = *(_QWORD *)(v59 + 8 * (v57 - 1546)) - 12;
  v67 = *(_BYTE *)(v66 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 14) ^ 0x86));
  v68 = *(_BYTE *)(v66 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 10) ^ 0xCBLL));
  LODWORD(v62) = (((*(unsigned __int8 *)(v65 + (v61[8] ^ 0x65)) + (v61[8] ^ a2) - 123) ^ 0xF5) << 24) | (((v68 ^ (16 * v68)) ^ 0x25) << 8);
  v69 = ((v61[7] ^ 0x90) + *(_BYTE *)(v64 + (v61[7] ^ 0x7CLL)) - 85) | ((((v61[4] ^ 0x13)
                                                                                         + *(unsigned __int8 *)(v65 + ((((v57 + 51) & 0x86) - 68) ^ v61[4]))
                                                                                         - 123) ^ 0xE6) << 24);
  v70 = *(_QWORD *)(v59 + 8 * (v57 - 1733));
  v71 = *(unsigned __int8 *)(v70 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 1) ^ 0x1ALL));
  v72 = (v71 >> 1) ^ (((((v71 ^ 0xA7) + (v71 & 0xD5 ^ a3) + 1) ^ v71 & 0xDF) & 0xF0) >> 4) ^ 0x3C;
  v73 = ((v61[3] ^ 0xB8) + *(_BYTE *)(v64 + (v61[3] ^ 0x54)) - 85) | ((v71 ^ 0x37 ^ (v72 - ((2 * v72) & 0xA6) + 83)) << 16);
  LOBYTE(v71) = *(_BYTE *)(v66 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 6) ^ 0x2ELL));
  v74 = *(_BYTE *)(v70 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 13) ^ 0x5BLL)) ^ 0x72;
  v75 = v69 & 0xFFFF00FF | (((v71 ^ (16 * v71)) ^ 0x39) << 8);
  v76 = *(unsigned __int8 *)(v70 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 13) ^ 0x5BLL)) ^ 0x72 ^ (v74 >> 4) ^ (v74 >> 1);
  v77 = (((v67 ^ (16 * v67)) ^ 0xE9) << 8) | ((v76 - ((2 * v76) & 0x2E) + 23) << 16);
  LOBYTE(v72) = *(_BYTE *)(v70 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 5) ^ 0xEDLL));
  v78 = ((v72 ^ 0x72) >> 4) ^ ((v72 ^ 0x72) >> 1);
  v324 = v70;
  v326 = v65;
  v327 = v64;
  LODWORD(v62) = v62 & 0xFF00FF00 | ((v61[11] ^ 0x3E) + *(_BYTE *)(v64 + (v61[11] ^ 0xD2)) - 85) | (((*(_BYTE *)(v70 + (v61[9] ^ 0x38)) ^ ((*(_BYTE *)(v70 + (v61[9] ^ 0x38)) ^ 0x72) >> 4) ^ ((*(_BYTE *)(v70 + (v61[9] ^ 0x38)) ^ 0x72) >> 1)) ^ 0xD9) << 16);
  v325 = v66;
  v79 = v73 & 0xFFFF00FF | (((*(unsigned __int8 *)(v65 + (*v61 ^ 0x81)) + (*v61 ^ 0xD0) - 123) ^ 0x3C) << 24) | (((*(_BYTE *)(v66 + (v61[2] ^ 0x22)) ^ (16 * *(_BYTE *)(v66 + (v61[2] ^ 0x22)))) ^ 0x17) << 8);
  LODWORD(STACK[0x428]) = (v77 & 0xFFFFFF00 | ((((v61[12] ^ 0x13) + *(unsigned __int8 *)(v65 + (v61[12] ^ 0x42)) - 123) ^ 0xE6) << 24) | (*(_BYTE *)(v64 + (v61[15] ^ 0x38)) + (v61[15] ^ 0xD4) - 85)) ^ 0x5DA22AEE;
  LODWORD(STACK[0x3D8]) = v79 ^ 0x29843879;
  LODWORD(STACK[0x300]) = (v75 & 0xFF00FFFF | ((v72 ^ 0x6C ^ (v78
                                                                                              - ((2 * v78) & 0x62)
                                                                                              + 49)) << 16)) ^ HIDWORD(a34);
  LODWORD(STACK[0x408]) = v62 ^ 0x18D17C97;
  v322 = *(_BYTE **)(v60 + 384);
  v323 = *(unsigned __int8 **)(v60 + 392);
  STACK[0x420] = 14;
  HIDWORD(v333) = (v63 ^ 0x619) + 301;
  v80 = v66;
  LODWORD(v61) = *(unsigned __int8 *)(v66 + (BYTE4(v333) ^ 0x15u ^ v323[14]));
  STACK[0x320] = 4;
  v81 = v323[4];
  v82 = (((16 * (_DWORD)v61) ^ 0xFFFFFFA0) - ((2 * ((16 * (_DWORD)v61) ^ 0xFFFFFFA0)) & 0x60) + 58) ^ v61;
  LOBYTE(v61) = *(_BYTE *)(v65 + (v81 ^ 0xE6));
  STACK[0x460] = 15;
  v83 = v323[15];
  v84 = ((_BYTE)v61 + (v81 ^ 0xB7) - 123) ^ 0xE5;
  if ((v83 & 0x20) != 0)
    v85 = -32;
  else
    v85 = 32;
  v86 = (v85 + v83);
  v87 = *(unsigned __int8 *)(v64 + (v86 ^ 0xDD));
  STACK[0x418] = 6;
  v88 = *(unsigned __int8 *)(v66 + (v323[6] ^ 0x51));
  v339 = v87 + (v86 ^ 0x31);
  STACK[0x328] = 12;
  STACK[0x2D0] = 0;
  HIDWORD(v89) = v88 ^ (((16 * v88) ^ 0xFFFFFFA0) - ((2 * ((16 * v88) ^ 0xFFFFFFA0)) & 0x60) + 58) ^ 0x3F;
  LODWORD(v89) = BYTE4(v89) & 0xF8;
  v90 = ((v89 >> 3) | ((unint64_t)v84 << 13)) ^ 0x58F620A6;
  v91 = (v90 >> 21) | ((_DWORD)v90 << 11);
  v338 = *(unsigned __int8 *)(v65 + (v323[12] ^ 0xF7) - 2 * ((v323[12] ^ 0xF7) & 0xAEu) + 174) - (v323[12] ^ 0xF7);
  v92 = *v323;
  STACK[0x3D0] = 3;
  v93 = v323[3];
  v94 = *(unsigned __int8 *)(v65 + (v92 ^ 0xD8)) + (v92 ^ 0x76) - 2 * (v92 ^ 0x76);
  STACK[0x400] = 8;
  v336 = (v93 ^ 0xFFFFFFBB) + *(unsigned __int8 *)(v64 + (v93 ^ 0x57));
  v95 = (v323[8] ^ 0xA7) + *(_BYTE *)(v65 + (v323[8] ^ 0xF6));
  STACK[0x3C0] = 7;
  LOBYTE(v93) = (v323[7] ^ 0xE9) + *(_BYTE *)(v64 + (v323[7] ^ 5)) - 85;
  STACK[0x298] = 13;
  v96 = *(unsigned __int8 *)(v70 + (v323[13] ^ 0x12));
  v97 = v96 ^ ((((v96 ^ 0x72u) >> 3) & 4 ^ v96 & 0xA4 | ((v96 ^ 0x72u) >> 3) & 0xFFFFFFFB ^ (v96 ^ 0x72) & 0x5A) >> 1);
  LOBYTE(v96) = *(_BYTE *)(v70 + (v323[5] ^ 0x9CLL));
  v98 = ((v96 ^ 0x72) >> 4) ^ ((v96 ^ 0x72) >> 1);
  v99 = v93 | ((v96 ^ 0xE6 ^ (v98 - ((2 * v98) & 0x62) + 49)) << 16);
  STACK[0x290] = 9;
  v100 = *(unsigned __int8 *)(v70 + (v323[9] ^ 0x76));
  v101 = (v100 ^ 0x72u) >> 3;
  v102 = v100 & 8 | 0x37;
  if ((v101 & v100 & 8) != 0)
    v102 = 110 - v102;
  v103 = v100 ^ ((((v101 + v102 - 55) ^ (v100 ^ 0x72) & 0xF7) & 0xFE) >> 1);
  STACK[0x228] = 1;
  v104 = *(_BYTE *)(v64 + (v323[11] ^ 0x12)) + (v323[11] ^ 0xFE);
  v105 = *(_BYTE *)(v70 + (v323[1] ^ 0xCFLL)) ^ 0x72;
  v106 = *(unsigned __int8 *)(v70 + (v323[1] ^ 0xCFLL)) ^ 0x72 ^ (v105 >> 4) ^ (v105 >> 1);
  STACK[0x258] = 10;
  v107 = *(_BYTE *)(v80 + (v323[10] ^ 0xFBLL));
  v108 = *(_QWORD *)(v59 + 8 * (v63 - 769)) - 4;
  HIDWORD(v331) = (v107 ^ (16 * v107)) ^ 0x23;
  v109 = *(_DWORD *)(v108 + 4 * ((v107 ^ (16 * v107)) ^ 0xACu));
  HIDWORD(v110) = v109 ^ 0x7763;
  LODWORD(v110) = v109 ^ 0x55D90000;
  v111 = *(_QWORD *)(v59 + 8 * (v63 - 704)) - 8;
  LODWORD(v333) = v97;
  v112 = *(_DWORD *)(v111 + 4 * (v97 ^ 0x17));
  HIDWORD(v340) = v63;
  LODWORD(v331) = v94 - 124;
  v113 = *(_QWORD *)(v59 + 8 * (v63 - 734)) - 4;
  v114 = (v110 >> 16) ^ *(_DWORD *)(v113 + 4 * ((v94 - 124) ^ 0xF9u)) ^ (16 * (v112 ^ 0xB4C82AC9)
                                                                                          + 1452181747
                                                                                          - ((32 * (v112 ^ 0xB4C82AC9)) & 0xAD1D11E0));
  v115 = v112 ^ (v114 - 905743237 - ((2 * v114) & 0x9406E8F6));
  HIDWORD(v330) = v99 ^ v91;
  v116 = v99 ^ v91 ^ 0xDD03A24B;
  v117 = (v99 ^ v91) ^ 0x78;
  v118 = *(_QWORD *)(v59 + 8 * (v63 ^ 0x394)) - 8;
  LODWORD(v334) = v82;
  v119 = *(_DWORD *)(v108 + 4 * (v82 ^ 0x71u));
  v120 = *(_DWORD *)(v118 + 4 * v117) ^ v115;
  HIDWORD(v110) = v119 ^ 0x7763;
  LODWORD(v110) = v119 ^ 0x55D90000;
  v332 = __PAIR64__(v103, v106);
  v121 = *(_DWORD *)(v111 + 4 * (v106 ^ 0xBFu)) ^ 0xB4C82AC9;
  v122 = (v110 >> 16) ^ (16 * v121 + 1452181747 - ((32 * v121) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * HIBYTE(v116));
  HIDWORD(v329) = (v104 - 85);
  v123 = *(_DWORD *)(v118 + 4 * (HIDWORD(v329) ^ 0xB9u)) ^ v121 ^ (v122 - 905743237 - ((2 * v122) & 0x9406E8F6));
  v124 = *(_DWORD *)(v111 + 4 * BYTE2(v116)) ^ 0xB4C82AC9;
  v125 = *(unsigned __int8 *)(v80 + (v323[2] ^ 0x26)) ^ 0xFFFFFF82;
  LODWORD(v329) = v125 ^ (16 * v125);
  v126 = *(_DWORD *)(v108 + 4 * (v329 ^ 0xFBu));
  HIDWORD(v110) = v126 ^ 0x7763;
  LODWORD(v110) = v126 ^ 0x55D90000;
  HIDWORD(v328) = (v95 - ((2 * v95 + 10) & 0x4E) - 84);
  v127 = (v110 >> 16) ^ *(_DWORD *)(v113 + 4 * (HIDWORD(v328) ^ 0x40u)) ^ (16 * v124
                                                                           + 1452181747
                                                                           - ((32 * v124) & 0xAD1D11E0));
  LODWORD(v330) = v339 - 85;
  v128 = *(_DWORD *)(v118 + 4 * ((v339 - 85) ^ 0xEBu)) ^ v124 ^ (v127
                                                                                  - 905743237
                                                                                  - ((2 * v127) & 0x9406E8F6));
  v129 = *(_DWORD *)(v111 + 4 * (v103 ^ 0xEu)) ^ 0xB4C82AC9;
  v130 = *(_DWORD *)(v108 + 4 * (BYTE1(v91) ^ 0x31u));
  HIDWORD(v110) = v130 ^ 0x7763;
  LODWORD(v110) = v130 ^ 0x55D90000;
  v131 = (v110 >> 16) ^ *(_DWORD *)(v113 + 4 * ((v338 - 124) ^ 0xF7u)) ^ (16 * v129
                                                                                           + 1452181747
                                                                                           - ((32 * v129) & 0xAD1D11E0));
  HIDWORD(a20) = v336 - 85;
  LODWORD(v328) = v338 - 124;
  v132 = *(_DWORD *)(v118 + 4 * ((v336 - 85) ^ 0x33u)) ^ v129 ^ (v131
                                                                                  - 905743237
                                                                                  - ((2 * v131) & 0x9406E8F6));
  v133 = *(_DWORD *)(v111 + 4 * (BYTE2(v132) ^ 0xBBu)) ^ 0xB4C82AC9;
  v134 = *(_DWORD *)(v108 + 4 * (BYTE1(v128) ^ 0xF4u));
  HIDWORD(v110) = v134 ^ 0x7763;
  LODWORD(v110) = v134 ^ 0x55D90000;
  BYTE1(v134) = BYTE1(v123) ^ 0xAD;
  v135 = v133 ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v120) ^ 0xE3)) ^ *(_DWORD *)(v118
                                                                            + 4 * (v123 ^ 0xDBu)) ^ (16 * v133 + 1452181747 - ((32 * v133) & 0xAD1D11E0)) ^ (v110 >> 16);
  v136 = *(_DWORD *)(v111 + 4 * (BYTE2(v120) ^ 0x24u));
  v137 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v132 ^ 0x22E) >> 8));
  HIDWORD(v110) = v137 ^ 0x7763;
  LODWORD(v110) = v137 ^ 0x55D90000;
  v138 = (16 * (v136 ^ 0xB4C82AC9) + 1452181747 - ((32 * (v136 ^ 0xB4C82AC9)) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v123 ^ 0xF15ADDB) >> 24)) ^ (v110 >> 16);
  v139 = v138 - 905743237 - ((2 * v138) & 0x9406E8F6);
  v140 = *(_DWORD *)(v118 + 4 * (v128 ^ 0x80u)) ^ v136;
  v141 = *(_DWORD *)(v111 + 4 * (BYTE2(v123) ^ 0xD6u)) ^ 0xB4C82AC9;
  v142 = (16 * v141 + 1452181747 - ((32 * v141) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v128) ^ 0x19));
  v143 = *(_DWORD *)(v108 + 4 * (BYTE1(v120) ^ 0xCCu));
  HIDWORD(v110) = v143 ^ 0x7763;
  LODWORD(v110) = v143 ^ 0x55D90000;
  v144 = *(_DWORD *)(v118 + 4 * (v132 ^ 0x2Eu)) ^ v141 ^ (v110 >> 16) ^ (v142
                                                                                          - 905743237
                                                                                          - ((2 * v142) & 0x9406E8F6));
  v145 = *(_DWORD *)(v111 + 4 * (BYTE2(v128) ^ 0x32u));
  v146 = *(_DWORD *)(v108 + 4 * BYTE1(v134));
  HIDWORD(v110) = v146 ^ 0x7763;
  LODWORD(v110) = v146 ^ 0x55D90000;
  v147 = (v110 >> 16) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v132) ^ 0xBD)) ^ (16 * (v145 ^ 0xB4C82AC9)
                                                                         + 1452181747
                                                                         - ((32 * (v145 ^ 0xB4C82AC9)) & 0xAD1D11E0));
  v148 = v145 ^ *(_DWORD *)(v118 + 4 * (v120 ^ 0x69u)) ^ 0xC501FC0D ^ (v147
                                                                                        - 905743237
                                                                                        - ((2 * v147) & 0x9406E8F6));
  v149 = v148
       - ((2 * v148) & 0x5F186BF6)
       + 797718011
       - ((2 * (v148 - ((2 * v148) & 0x5F186BF6) + 797718011)) & 0xFCE7E61C)
       - 25955570;
  v150 = *(_DWORD *)(v111 + 4 * (BYTE2(v149) ^ 0xB0u));
  BYTE2(v132) = BYTE2(v144) ^ 0xEB;
  v151 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v144 ^ 0xDFF9) >> 8));
  v152 = (16 * (v150 ^ 0xB4C82AC9) + 1452181747 - ((32 * (v150 ^ 0xB4C82AC9)) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v135) ^ 0x5C)) ^ (((v151 ^ 0x55D97763u) >> (v135 & 0x10 ^ 0x10) >> (v135 & 0x10)) + ((v151 << 16) ^ 0x77630000));
  v153 = *(_DWORD *)(v118 + 4 * ((v140 ^ v139) ^ 0x10u)) ^ v150 ^ (v152
                                                                                    - 905743236
                                                                                    + ~((2 * v152) & 0x9406E8F6));
  LOWORD(v150) = v135 ^ 0xA05B;
  v154 = *(_DWORD *)(v111 + 4 * ((v135 ^ 0xB559A05B) >> 16)) ^ 0xB4C82AC9;
  v155 = (16 * v154 + 1452181747 - ((32 * v154) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v140 ^ ~v139) >> 24));
  v156 = *(_DWORD *)(v108 + 4 * (BYTE1(v149) ^ 0x60u));
  HIDWORD(v110) = v156 ^ 0x7763;
  LODWORD(v110) = v156 ^ 0x55D90000;
  v157 = *(_DWORD *)(v118 + 4 * (v144 ^ 0xF9u)) ^ v154 ^ ((v155 ^ (v110 >> 16))
                                                                           - 905743237
                                                                           - ((2 * (v155 ^ (v110 >> 16))) & 0x9406E8F6));
  v158 = *(_DWORD *)(v113 + 4 * (HIBYTE(v144) ^ 5));
  HIDWORD(v110) = v158 ^ 0xF3;
  LODWORD(v110) = v158 ^ 0x568E8800;
  v159 = *(_DWORD *)(v111 + 4 * (((v140 ^ v139) >> 16) ^ 0xFDu)) ^ 0xB4C82AC9;
  v160 = (((v110 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v159) ^ (((v110 >> 10) ^ 0x25EB099C) >> 22);
  v161 = *(_DWORD *)(v108 + 4 * BYTE1(v150));
  HIDWORD(v110) = v161 ^ 0x7763;
  LODWORD(v110) = v161 ^ 0x55D90000;
  v162 = *(_DWORD *)(v118
                   + 4
                   * ((v148
                                      - ((2 * v148) & 0xF6)
                                      - 5
                                      - ((2 * (v148 - ((2 * v148) & 0xF6) - 5)) & 0x1C)
                                      + 14) ^ 0x3Du)) ^ v159 ^ (v110 >> 16) ^ (v160
                                                                             - 905743237
                                                                             - ((2 * v160) & 0x9406E8F6));
  v163 = *(_DWORD *)(v108 + 4 * (((unsigned __int16)(v140 ^ v139) >> 8) ^ 0xE7u));
  HIDWORD(v110) = v163 ^ 0x7763;
  LODWORD(v110) = v163 ^ 0x55D90000;
  v164 = *(_DWORD *)(v111 + 4 * BYTE2(v132)) ^ 0xB4C82AC9;
  v165 = (v110 >> 16) ^ (16 * v164 + 1452181747 - ((32 * v164) & 0xAD1D11E0)) ^ *(_DWORD *)(v113
                                                                                          + 4 * (HIBYTE(v149) ^ 0x17));
  v166 = *(_DWORD *)(v118 + 4 * (v150 ^ 0x33u)) ^ v164;
  v167 = v162 ^ 0xF1F7E4A6;
  v168 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v162 ^ 0xE4A6) >> 8));
  v169 = v166 ^ (v165 - 905743237 - ((2 * v165) & 0x9406E8F6));
  HIDWORD(v110) = v168 ^ 0x7763;
  LODWORD(v110) = v168 ^ 0x55D90000;
  v170 = *(_DWORD *)(v111 + 4 * (BYTE2(v169) ^ 0x62u)) ^ 0xB4C82AC9;
  v171 = (16 * v170 + 1452181747 - ((32 * v170) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v153) ^ 0x69));
  v172 = *(_DWORD *)(v118 + 4 * (v157 ^ 0x68u)) ^ v170 ^ (v110 >> 16) ^ (v171
                                                                                          - 905743237
                                                                                          - 2
                                                                                          * (v171 & 0x4A03747F ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v153) ^ 0x69)) & 4));
  v173 = *(_DWORD *)(v111 + 4 * (BYTE2(v153) ^ 0x93u)) ^ 0xB4C82AC9;
  v174 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v169 ^ 0x2957) >> 8));
  HIDWORD(v110) = v174 ^ 0x7763;
  LODWORD(v110) = v174 ^ 0x55D90000;
  v175 = (16 * v173 + 1452181747 - ((32 * v173) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v157) ^ 0xCE)) ^ (v110 >> 16);
  v176 = *(_DWORD *)(v118 + 4 * (v162 ^ 0x15u)) ^ v173 ^ (v175 - 905743237 - ((2 * v175) & 0x9406E8F6));
  v177 = *(_DWORD *)(v111 + 4 * (BYTE2(v157) ^ 0x60u)) ^ 0xB4C82AC9;
  v178 = *(_DWORD *)(v108 + 4 * (BYTE1(v153) ^ 0xB1u));
  HIDWORD(v110) = v178 ^ 0x7763;
  LODWORD(v110) = v178 ^ 0x55D90000;
  v179 = (16 * v177 + 1452181747 - ((32 * v177) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * HIBYTE(v167)) ^ (v110 >> 16);
  v180 = *(_DWORD *)(v118 + 4 * (v169 ^ 0x57u)) ^ v177 ^ (v179 - 905743237 - ((2 * v179) & 0x9406E8F6));
  if ((v157 & 0x1000) != 0)
    v181 = -16;
  else
    v181 = 16;
  v182 = (BYTE1(v157) ^ 0xC) + v181;
  v183 = *(_DWORD *)(v111 + 4 * BYTE2(v167)) ^ 0xB4C82AC9;
  v184 = *(_DWORD *)(v108 + 4 * (v182 ^ 0x83u));
  v185 = *(_DWORD *)(v113 + 4 * (HIBYTE(v169) ^ 0xA1)) ^ HIWORD(v184) ^ (v184 << 16) ^ (16 * v183
                                                                                        + 1452181747
                                                                                        - ((32 * v183) & 0xAD1D11E0)) ^ 0x776355D9;
  v186 = *(_DWORD *)(v118 + 4 * (v153 ^ 0xAAu)) ^ v183 ^ (v185 - 905743237 - ((2 * v185) & 0x9406E8F6));
  v187 = v186 ^ 0xEFBC3B44;
  v188 = *(_DWORD *)(v111 + 4 * ((v186 ^ 0xEFBC3B44) >> 16)) ^ 0xB4C82AC9;
  v189 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v180 ^ 0x8D48) >> 8));
  HIDWORD(v190) = v189 ^ 0x7763;
  LODWORD(v190) = v189 ^ 0x55D90000;
  v191 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v172) ^ 0xCC)) ^ (16 * v188
                                                                         + 1452181747
                                                                         - ((32 * v188) & 0xAD1D11E0));
  v192 = *(_DWORD *)(v118 + 4 * (v176 ^ 0xA9u)) ^ v188 ^ (v191 - 905743237 - ((2 * v191) & 0x9406E8F6));
  LOWORD(v188) = v172 ^ 0xD583;
  v193 = *(_DWORD *)(v111 + 4 * (((v172 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0xB4C82AC9;
  v194 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v186 ^ 0x3B44) >> 8));
  HIDWORD(v190) = v194 ^ 0x7763;
  LODWORD(v190) = v194 ^ 0x55D90000;
  v195 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * HIBYTE(v176)) ^ (16 * v193 + 1452181747 - ((32 * v193) & 0xAD1D11E0));
  v196 = *(_DWORD *)(v118 + 4 * (v180 ^ 0x48u)) ^ v193 ^ (v195 - 905743237 - ((2 * v195) & 0x9406E8F6));
  v197 = *(_DWORD *)(v111 + 4 * ((v176 ^ 0xE93411A9) >> 16)) ^ 0xB4C82AC9;
  v198 = *(_DWORD *)(v108 + 4 * BYTE1(v188));
  HIDWORD(v190) = v198 ^ 0x7763;
  LODWORD(v190) = v198 ^ 0x55D90000;
  v199 = (16 * v197 + 1452181747 - ((32 * v197) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v180 ^ 0x807D8D48) >> 24)) ^ (v190 >> 16);
  v200 = *(_DWORD *)(v118 + 4 * (v186 ^ 0x77u)) ^ v197 ^ (v199 - 905743237 - ((2 * v199) & 0x9406E8F6));
  v201 = *(_DWORD *)(v111 + 4 * (BYTE2(v180) ^ 0xBEu)) ^ 0xB4C82AC9;
  v202 = *(_DWORD *)(v108 + 4 * (BYTE1(v176) ^ 0x82u));
  HIDWORD(v190) = v202 ^ 0x7763;
  LODWORD(v190) = v202 ^ 0x55D90000;
  v203 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * HIBYTE(v187)) ^ (16 * v201 + 1452181747 - ((32 * v201) & 0xAD1D11E0));
  v204 = *(_DWORD *)(v118 + 4 * v188) ^ v201 ^ (v203 - 905743237 - ((2 * v203) & 0x9406E8F6));
  v205 = *(_DWORD *)(v111 + 4 * ((v204 ^ 0x950DA39D) >> 16)) ^ 0xB4C82AC9;
  v206 = (16 * v205 + 1452181747 - ((32 * v205) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v192 ^ 0x11521BCA) >> 24));
  v207 = *(_DWORD *)(v108 + 4 * (BYTE1(v200) ^ 0x89u));
  HIDWORD(v190) = v207 ^ 0x7763;
  LODWORD(v190) = v207 ^ 0x55D90000;
  v208 = v206 - 905743237 - ((2 * v206) & 0x9406E8F6);
  BYTE1(v206) = BYTE1(v196) ^ 0xD1;
  v209 = v205 ^ *(_DWORD *)(v118 + 4 * (v196 ^ 0x88u)) ^ (v190 >> 16) ^ v208;
  v210 = *(_DWORD *)(v111 + 4 * ((v192 ^ 0x11521BCA) >> 16));
  v211 = *(_DWORD *)(v108 + 4 * (BYTE1(v204) ^ 0x30u));
  HIDWORD(v190) = v211 ^ 0x7763;
  LODWORD(v190) = v211 ^ 0x55D90000;
  v212 = (v209 ^ 0x71C9D6C4) - 2 * ((v209 ^ 0x71C9D6C4) & 0x3A5692AD ^ v209 & 9);
  v213 = (16 * (v210 ^ 0xB4C82AC9) + 1452181747 - ((32 * (v210 ^ 0xB4C82AC9)) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v196) ^ 0xDF)) ^ (v190 >> 16);
  v200 ^= 0x7A851A70u;
  v214 = *(_DWORD *)(v118 + 4 * (v200 ^ 0x33u)) ^ v210 ^ (v213 - 905743237 - ((2 * v213) & 0x9406E8F6));
  v215 = *(_DWORD *)(v111 + 4 * (BYTE2(v196) ^ 0xA7u)) ^ 0xB4C82AC9;
  v216 = *(_DWORD *)(v108 + 4 * (BYTE1(v192) ^ 0x88u));
  HIDWORD(v190) = v216 ^ 0x7763;
  LODWORD(v190) = v216 ^ 0x55D90000;
  v217 = (16 * v215 + 1452181747 - ((32 * v215) & 0xAD1D11E0)) ^ (v190 >> 16) ^ *(_DWORD *)(v113
                                                                                          + 4
                                                                                          * ((HIBYTE(v200) ^ -HIBYTE(v200) ^ ((HIBYTE(v200) ^ 0xFFFFFF16) + 234))
                                                                                           + 233));
  v218 = *(_DWORD *)(v118 + 4 * (v204 ^ 0x9Du)) ^ v215 ^ (v217 - 905743237 - ((2 * v217) & 0x9406E8F6));
  v219 = *(_DWORD *)(v111 + 4 * BYTE2(v200));
  v220 = *(_DWORD *)(v108 + 4 * BYTE1(v206));
  HIDWORD(v190) = v220 ^ 0x7763;
  LODWORD(v190) = v220 ^ 0x55D90000;
  v221 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v204) ^ 0x7C)) ^ (16 * (v219 ^ 0xB4C82AC9)
                                                                         + 1452181747
                                                                         - ((32 * (v219 ^ 0xB4C82AC9)) & 0xAD1D11E0));
  v222 = *(_DWORD *)(v118 + 4 * (v192 ^ 0xF9u)) ^ v219 ^ (v221 - 905743237 - ((2 * v221) & 0x9406E8F6));
  v223 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v218 ^ 0xDE69) >> 8));
  HIDWORD(v190) = v223 ^ 0x7763;
  LODWORD(v190) = v223 ^ 0x55D90000;
  v224 = *(_DWORD *)(v111 + 4 * (BYTE2(v222) ^ 0x4Fu));
  v212 -= 1168731484;
  v225 = (v190 >> 16) ^ (16 * (v224 ^ 0xB4C82AC9) + 1452181747 - ((32 * (v224 ^ 0xB4C82AC9)) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v212) ^ 0xD3));
  v226 = *(_DWORD *)(v118 + 4 * (v214 ^ 0x1Au)) ^ v224 ^ (v225 - 905743237 - ((2 * v225) & 0x9406E8F6));
  v227 = *(_DWORD *)(v108 + 4 * (BYTE1(v222) ^ 0x15u));
  HIDWORD(v190) = v227 ^ 0x7763;
  LODWORD(v190) = v227 ^ 0x55D90000;
  v228 = *(_DWORD *)(v111 + 4 * (BYTE2(v212) ^ 0x3Cu)) ^ 0xB4C82AC9;
  v229 = v228 ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v214) ^ 0x69)) ^ *(_DWORD *)(v118
                                                                            + 4 * (v218 ^ 0x69u)) ^ ((v190 >> 16) - 905743237 - ((2 * (v190 >> 16)) & 0x9406E8F6)) ^ (16 * v228 + 1452181747 - ((32 * v228) & 0xAD1D11E0));
  v230 = *(_DWORD *)(v111 + 4 * (BYTE2(v214) ^ 0x32u)) ^ 0xB4C82AC9;
  v231 = *(_DWORD *)(v108 + 4 * (BYTE1(v212) ^ 0xF9u));
  HIDWORD(v190) = v231 ^ 0x7763;
  LODWORD(v190) = v231 ^ 0x55D90000;
  v232 = (16 * v230 + 1452181747 - ((32 * v230) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v218 ^ 0x5FEEDE69) >> 24)) ^ (v190 >> 16);
  v233 = *(_DWORD *)(v118
                   + 4
                   * ((((v222 ^ 0x86) + (v222 ^ 0xFFFFFF4A) + 1) ^ 0xFFFFFFFE)
                    + (v222 ^ 0x86))) ^ v230 ^ (v232 - 905743237 - ((2 * v232) & 0x9406E8F6));
  v234 = *(_DWORD *)(v111 + 4 * (BYTE2(v218) ^ 0x2Du)) ^ 0xB4C82AC9;
  v235 = *(_DWORD *)(v108 + 4 * (BYTE1(v214) ^ 0xF5u));
  HIDWORD(v190) = v235 ^ 0x7763;
  LODWORD(v190) = v235 ^ 0x55D90000;
  v236 = (v190 >> 16) ^ (16 * v234 + 1452181747 - ((32 * v234) & 0xAD1D11E0)) ^ *(_DWORD *)(v113
                                                                                          + 4
                                                                                          * ((HIBYTE(v222) ^ 0xA1) & 0x90 ^ 0x86u ^ (~(2 * (HIBYTE(v222) ^ 0xA1 | 0x90)) + (HIBYTE(v222) ^ 0xA1 | 0x90))));
  v237 = *(_DWORD *)(v118 + 4 * ~(_BYTE)v212) ^ v234 ^ (v236 - 905743236 + ~((2 * v236) & 0x9406E8F6));
  v238 = *(_DWORD *)(v111 + 4 * ((v237 ^ 0x59A5F4B7) >> 16)) ^ 0xB4C82AC9;
  v239 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v233 ^ 0x872B) >> 8));
  HIDWORD(v190) = v239 ^ 0x7763;
  LODWORD(v190) = v239 ^ 0x55D90000;
  v240 = (16 * v238 + 1452181747 - ((32 * v238) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v226) ^ 0x66)) ^ (v190 >> 16);
  v241 = *(_DWORD *)(v118 + 4 * (v229 ^ 0xEEu)) ^ v238 ^ (v240 - 905743237 - ((2 * v240) & 0x9406E8F6));
  v242 = *(_DWORD *)(v111 + 4 * (BYTE2(v226) ^ 0xEDu)) ^ 0xB4C82AC9;
  v243 = *(_DWORD *)(v108 + 4 * (BYTE1(v237) ^ 0x67u));
  HIDWORD(v190) = v243 ^ 0x7763;
  LODWORD(v190) = v243 ^ 0x55D90000;
  v244 = v242 ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v229) ^ 0xD6)) ^ *(_DWORD *)(v118
                                                                            + 4 * (v233 ^ 0x18u)) ^ (16 * v242 + 1452181747 - ((32 * v242) & 0xAD1D11E0)) ^ ((v190 >> 16) - 905743237 - ((2 * (v190 >> 16)) & 0x9406E8F6));
  v245 = *(_DWORD *)(v111 + 4 * (BYTE2(v229) ^ 0x56u)) ^ 0xB4C82AC9;
  v246 = *(_DWORD *)(v108 + 4 * (BYTE1(v226) ^ 0x91u));
  HIDWORD(v190) = v246 ^ 0x7763;
  LODWORD(v190) = v246 ^ 0x55D90000;
  v247 = *(_DWORD *)(v113 + 4 * ((v233 ^ 0x911B872B) >> 24)) ^ v245 ^ 0x6D41727E ^ (16 * v245
                                                                                    + 1452181747
                                                                                    - ((32 * v245) & 0xAD1D11E0)) ^ (v190 >> 16);
  v248 = *(_DWORD *)(v111 + 4 * (BYTE2(v233) ^ 0xD8u)) ^ 0xB4C82AC9;
  v249 = *(_DWORD *)(v108 + 4 * (BYTE1(v229) ^ 0xE4u));
  HIDWORD(v190) = v249 ^ 0x7763;
  LODWORD(v190) = v249 ^ 0x55D90000;
  v250 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v237) ^ 0xB0)) ^ (16 * v248
                                                                         + 1452181747
                                                                         - ((32 * v248) & 0xAD1D11E0));
  v251 = *(_DWORD *)(v118 + 4 * (v226 ^ 0x6Fu)) ^ v248 ^ (v250 - 905743237 - ((2 * v250) & 0x9406E8F6));
  v252 = *(_DWORD *)(v108
                   + 4
                   * (((unsigned __int16)(*(_WORD *)(v118 + 4 * (v226 ^ 0x6Fu)) ^ v248 ^ (v250 + 29819 - ((2 * v250) & 0xE8F6))) >> 8) ^ 0x66u));
  HIDWORD(v190) = v252 ^ 0x7763;
  LODWORD(v190) = v252 ^ 0x55D90000;
  v253 = v190 >> 16;
  HIDWORD(v190) = *(_DWORD *)(v118 + 4 * (v237 ^ 0xB7u)) ^ 0xD68BD0C1;
  LODWORD(v190) = HIDWORD(v190);
  v254 = v244 ^ 0x177CD9D9;
  v255 = *(_DWORD *)(v111 + 4 * (BYTE2(v241) ^ 0x74u)) ^ 0xB4C82AC9;
  v256 = *(_DWORD *)(v113 + 4 * ((v244 ^ 0x177CD9D9u) >> 24)) ^ 0x6D41727E ^ v255 ^ (16 * v255
                                                                                     + 1452181747
                                                                                     - ((32 * v255) & 0xAD1D11E0)) ^ v253;
  v257 = (v256 & 0x200 ^ 0xE7FEFFBE) + 2 * (v256 & 0x200);
  LODWORD(v190) = (v190 >> 21) ^ __ROR4__(v247, 21) ^ 0x549BF9D9;
  HIDWORD(v190) = v190;
  v258 = v190 >> 11;
  v259 = *(_DWORD *)(v118 + 4 * ((v190 >> 11) ^ 0xEFu));
  v260 = ((v257 + 402718786) & (v259 ^ 0xCA03747B)) == 0;
  v261 = *(_DWORD *)(v111 + 4 * (BYTE2(v251) ^ 0x72u)) ^ 0xB4C82AC9;
  v262 = *(_DWORD *)(v108 + 4 * (BYTE1(v258) ^ 0xA0u));
  HIDWORD(v190) = v262 ^ 0x7763;
  LODWORD(v190) = v262 ^ 0x55D90000;
  v263 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * ((v241 ^ 0xD4B73D47) >> 24)) ^ (16 * v261
                                                                               + 1452181747
                                                                               - ((32 * v261) & 0xAD1D11E0));
  v264 = *(_DWORD *)(v118 + 4 * (v244 ^ 0xEAu)) ^ v261 ^ (v263 - 905743237 - ((2 * v263) & 0x9406E8F6));
  v265 = v257 + 1003347924;
  v266 = 197910352 - v257;
  if (v260)
    v266 = v265;
  v267 = ((v259 ^ 0xD68BD0C1) - 600629138 + v266) ^ v256 & 0xFFFFFDFF;
  v268 = *(_DWORD *)(v111 + 4 * BYTE2(v254)) ^ 0xB4C82AC9;
  v269 = *(_DWORD *)(v108 + 4 * (BYTE1(v241) ^ 0xAEu));
  HIDWORD(v270) = v269 ^ 0x7763;
  LODWORD(v270) = v269 ^ 0x55D90000;
  v271 = (16 * v268 + 1452181747 - ((32 * v268) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v258 ^ 0x1EA133EFu) >> 24));
  v272 = *(_DWORD *)(v118 + 4 * (v251 ^ 0xDu)) ^ v268 ^ (v270 >> 16) ^ (v271
                                                                                         - 905743237
                                                                                         - 2
                                                                                         * (v271 & 0x4A03747F ^ *(_DWORD *)(v113 + 4 * ((v258 ^ 0x1EA133EFu) >> 24)) & 4));
  v273 = *(_DWORD *)(v111 + 4 * (BYTE2(v258) ^ 0x62u)) ^ 0xB4C82AC9;
  v274 = *(_DWORD *)(v108 + 4 * BYTE1(v254));
  HIDWORD(v270) = v274 ^ 0x7763;
  LODWORD(v270) = v274 ^ 0x55D90000;
  v275 = (16 * v273 + 1452181747 - ((32 * v273) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v251) ^ 0x32)) ^ (v270 >> 16);
  v276 = *(_DWORD *)(v118 + 4 * (v241 ^ 0x74u)) ^ v273 ^ (v275 - 905743237 - ((2 * v275) & 0x9406E8F6));
  v277 = (char *)*(&off_1E89A15E0 + v63 - 726) - 4;
  v278 = (char *)*(&off_1E89A15E0 + v63 - 686) - 12;
  v279 = (char *)*(&off_1E89A15E0 + v63 - 677) - 12;
  v280 = *(_DWORD *)&v278[4 * (BYTE2(v264) ^ 0x99)] ^ 0x858E78B5;
  v281 = v280 ^ (*(_DWORD *)&v277[4 * (((v267 ^ 0xF137909F) >> 24) ^ 0xB4)]
               + (((v267 ^ 0xF137909F) >> 24) ^ 0x9FD52929)
               - 1891546004) ^ (v280 >> 2) ^ *(_DWORD *)&v279[4 * (v272 ^ 0x79)] ^ (v280 >> 4);
  v282 = (char *)*(&off_1E89A15E0 + (v63 ^ 0x32D)) - 8;
  v283 = *(_DWORD *)&v282[4 * ((unsigned __int16)(v276 ^ 0x7C9C) >> 8)] ^ 0x44850E66;
  v284 = ((v272 ^ 0x7B)
        - 162178079
        + ((2 * (((v272 ^ 0x7B) + 112) & 0x17E ^ (v272 ^ 0xBC37B | 0x7FFFFFF1))) ^ 0xF0C3001D)) ^ v283 ^ (1515496080 * v283);
  v285 = HIBYTE(v272);
  v286 = v264 ^ 0x6792B6A6;
  v287 = *(_DWORD *)&v277[4 * (((v264 ^ 0x6792B6A6) >> 24) ^ 0xB4)];
  LODWORD(v335) = *(_DWORD *)&v277[4 * (HIBYTE(v272) ^ 0xB4)];
  LODWORD(v340) = (v276 ^ 0x250E7C9C) >> 24;
  HIDWORD(v337) = *(_DWORD *)&v277[4 * (v340 ^ 0xB4)];
  v288 = *(_DWORD *)&v278[4 * (BYTE2(v276) ^ 5)];
  v289 = *(_DWORD *)&v278[4 * ((v267 ^ 0xF137909F) >> 16)];
  HIDWORD(v335) = *(_DWORD *)&v278[4 * ((v272 ^ 0xBC37B) >> 16)];
  v290 = *(_DWORD *)&v282[4 * ((unsigned __int16)(v272 ^ 0xC37B) >> 8)];
  HIDWORD(v334) = *(_DWORD *)&v282[4 * ((unsigned __int16)(v264 ^ 0xB6A6) >> 8)];
  v291 = *(_DWORD *)&v282[4 * (BYTE1(v267) ^ 0x5E)];
  v292 = *(_DWORD *)&v279[4 * (v267 ^ 0x9D)];
  v293 = *(_DWORD *)&v279[4 * (v276 ^ 0x9E)];
  LODWORD(v337) = *(_DWORD *)&v279[4 * (v264 ^ 0xA4)];
  v294 = ((v281 ^ v284) - 1180827501 - ((2 * (v281 ^ v284)) & 0x733C0126)) ^ LODWORD(STACK[0x300]);
  v295 = (uint64_t)*(&off_1E89A15E0 + v63 - 849);
  v322[5] = *(_BYTE *)(v295 + (((v294 ^ 0x5244C6B3) >> 16) ^ 0x5ELL)) ^ ((v294 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v294 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v294 ^ 0x5244C6B3) >> 16) ^ 0x8A) - 18) & 0xF7) - 14) ^ 0xB9;
  v296 = v288 ^ 0x858E78B5 ^ ((HIBYTE(v286) ^ 0x9FD52929) - 1891546004 + v287) ^ ((v288 ^ 0x858E78B5) >> 2) ^ ((v288 ^ 0x858E78B5) >> 4) ^ v290 ^ 0x44850E66 ^ v292 ^ (1515496080 * (v290 ^ 0x44850E66)) ^ ((v267 ^ 0x9F) - 162178079 + ((2 * (((v267 ^ 0x9F) + 112) & 0x17E ^ (v267 ^ 0xF137909F | 0x7FFFFFF1))) ^ 0xF0C3001D));
  v297 = (v296 + 696531065 - ((2 * v296) & 0x53087184) + 73) ^ LODWORD(STACK[0x3D8]);
  v298 = v297 ^ 0x22A932A6;
  v299 = (BYTE1(v298) | 0x88) ^ (v298 >> 8) & 0x88;
  v300 = (char *)*(&off_1E89A15E0 + (v63 ^ 0x3E4)) - 12;
  v322[2] = (((unsigned __int16)(v297 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v297 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v300[v299 ^ 0x14] ^ 3) - ((2 * v300[v299 ^ 0x14]) & 0x20) - 112);
  v301 = (char *)*(&off_1E89A15E0 + v63 - 844) - 4;
  LODWORD(v299) = v301[HIBYTE(v294) ^ 0xEFLL];
  HIDWORD(v270) = v299 ^ 0x1B;
  LODWORD(v270) = (v299 ^ 0x40) << 24;
  v322[STACK[0x320]] = (v270 >> 29) ^ 0x83;
  v302 = v289 ^ 0x858E78B5 ^ ((v285 ^ 0x9FD52929) - 1891546004 + v335) ^ ((v289 ^ 0x858E78B5) >> 2) ^ ((v289 ^ 0x858E78B5) >> 4);
  v303 = v302 & 0x1000000 | 0x287B5FB3;
  if ((v302 & 0x1000000 & ~v293) != 0)
    v303 = 1358348134 - v303;
  v304 = v302 & 0xFEFFFFFF ^ (1515496080 * (HIDWORD(v334) ^ 0x44850E66)) ^ ((((v276 ^ 0x9C)
                                                                            - 162178079
                                                                            + ((2
                                                                              * (((v276 ^ 0x9C) + 112) & 0xFFFFFF7F ^ (v276 ^ 0x250E7C9C | 0x7FFFFFF0))) ^ 0xF0C3001F)) ^ v293)
                                                                          - 679174067
                                                                          + v303);
  v305 = HIDWORD(v334) ^ 0x44850E66 ^ LODWORD(STACK[0x408]) ^ (v304 + 416382103 - ((2 * v304) & 0x31A2F9A2) + 58);
  v306 = (char *)*(&off_1E89A15E0 + (v63 ^ 0x3D4)) - 4;
  LOBYTE(v304) = v306[BYTE4(v334) ^ 0x66u ^ LOBYTE(STACK[0x408]) ^ (v304
                                                                                   - 105
                                                                                   - ((2 * v304) & 0xA2)
                                                                                   + 58) ^ 0x28];
  v322[11] = v304 & 0xFB ^ ((v304 | 0xFB) + 24) ^ 0x38;
  v307 = v301[BYTE3(v297) ^ 0xF9];
  HIDWORD(v308) = v307 ^ 0x1B;
  LODWORD(v308) = (v307 ^ 0x40) << 24;
  v309 = STACK[0x2D0];
  v322[STACK[0x2D0]] = (v308 >> 29) ^ 0xFB;
  v322[STACK[0x228]] = BYTE2(v298) ^ 0x61 ^ ((BYTE2(v298) ^ 0x61) + ((16 - 2 * (BYTE2(v298) ^ 0x61)) | 9) - 13) ^ 0xB8 ^ *(_BYTE *)(v295 + (BYTE2(v298) ^ 0xB5));
  v310 = (v340 ^ 0x9FD52929) - 1891546004 + HIDWORD(v337);
  v311 = HIDWORD(v335) ^ 0x858E78B5 ^ ((HIDWORD(v335) ^ 0x858E78B5) >> 4) ^ ((HIDWORD(v335) ^ 0x858E78B5) >> 2);
  v312 = (v311 & 0x80000 ^ 0xBF5FFADD) + 2 * (v311 & 0x80000);
  v260 = ((v312 + 1084228899) & v310) == 0;
  v313 = v312 + 1929342327;
  v314 = -239115471 - v312;
  if (v260)
    v314 = v313;
  v315 = v337 ^ (v286 + 2096205936) ^ (((v310 - 845113428 + v314) ^ v311 & 0xFFF7FFFF ^ (1515496080 * (v291 ^ 0x44850E66)))
                                                      + 2036583281
                                                      + ~(2
                                                        * (((v310 - 845113428 + v314) ^ v311 & 0xFFF7FFFF ^ (1515496080 * (v291 ^ 0x44850E66))) & 0x7963CB7A ^ ((v310 - 845113428 + v314) ^ v311 & 0xFFF7FFFF) & 0xA)));
  v316 = v291 ^ LODWORD(STACK[0x428]) ^ (v315 + 1570908894 - ((2 * v315) & 0xBB4455BC));
  v322[STACK[0x298]] = *(_BYTE *)(v295 + (BYTE2(v316) ^ 0x1E) + ((v316 >> 15) & 0x1A8 ^ 0xFFFFFFD7) + 213) ^ BYTE2(v316) ^ ((BYTE2(v316) ^ 0x1E) + ((16 - 2 * (BYTE2(v316) ^ 0x1E)) | 9) - 13) ^ 0x98;
  v317 = v301[HIBYTE(v316) ^ 0xBELL];
  HIDWORD(v318) = v317 ^ 0x1B;
  LODWORD(v318) = (v317 ^ 0x40) << 24;
  v322[STACK[0x328]] = (v318 >> 29) ^ 0x50;
  v322[STACK[0x290]] = ((v305 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v305 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                                         + ((16
                                                                           - 2
                                                                           * (((v305 ^ 0xCFDDD967) >> 16) ^ 0x94)) | 9)
                                                                         - 13) ^ *(_BYTE *)(v295
                                                                                          + (((v305 ^ 0xCFDDD967) >> 16) ^ 0x40)) ^ 0xC;
  v319 = (((v316 ^ 0x1BB09C49) >> 4) & 0xF0 | ((unsigned __int16)(v316 ^ 0x9C49) >> 12)) ^ 0xE6;
  v322[STACK[0x420]] = v300[((v319 >> 4) & 0xFFFFFF0F | (16 * (v319 & 0xF))) ^ 0xAELL] ^ (((v319 >> 4) & 0xF | (16 * (v319 & 0xF)))
                                                                                        - ((v319 >> 3) & 6)
                                                                                        + 3) ^ 0x2B;
  v322[STACK[0x258]] = (((unsigned __int16)(v305 ^ 0xD967) >> 8) - (((v305 ^ 0xCFDDD967) >> 7) & 6) + 3) ^ 0xDB ^ v300[((unsigned __int16)(v305 ^ 0xD967) >> 8) ^ 0xA0];
  v322[STACK[0x418]] = (((unsigned __int16)(v294 ^ 0xC6B3) >> 8) - (((v294 ^ 0x5244C6B3) >> 7) & 6) + 3) ^ v300[((unsigned __int16)(v294 ^ 0xC6B3) >> 8) ^ 0x75] ^ 0x80;
  v322[STACK[0x3D0]] = v306[v297 ^ 0x95] ^ 0x86;
  v322[STACK[0x3C0]] = v306[v294 ^ 0x7FLL] ^ 0x17;
  v322[STACK[0x460]] = v306[v316 ^ 0xE6] ^ 0xB8;
  v320 = v301[BYTE3(v305) ^ 0x49];
  HIDWORD(v318) = v320 ^ 0x1B;
  LODWORD(v318) = (v320 ^ 0x40) << 24;
  v322[STACK[0x400]] = (v318 >> 29) ^ 0x2E;
  HIDWORD(a13) = v63 ^ 0x619;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, unint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * ((56 * ((((_DWORD)v309 - 699207985 - ((2 * (_DWORD)v309 + 32) & 0xACA5DD9E) + 16) ^ 0xD652EEC0) < 0x150)) | v63)) - 8))(9, v305, v297, 230, v306, v309, v300, 1149570662, a5, a6, a7, a8, a9, a10, a11, a12, a13, v322, v323,
           v324,
           v325,
           v326,
           v327,
           a20,
           v328,
           v329,
           v330,
           v331,
           v332,
           v333,
           v334,
           v335,
           v337,
           v340,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           2,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_1CD0FB5FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,unsigned __int8 a25,int a26,int a27,unsigned __int8 a28,int a29,unsigned __int8 a30,int a31,int a32,int a33,unsigned __int8 a34,int a35,int a36,int a37,char a38)
{
  LODWORD(STACK[0x3D8]) = (a25 | ((((a37 ^ 0x54A) - 122) ^ a32) << 24) | ((a28 ^ 0xEF) << 8) | ((a34 ^ 0x92) << 16)) ^ 0xB104EBA2;
  LODWORD(STACK[0x300]) = a31 ^ 0xBE1F7410;
  LODWORD(STACK[0x408]) = ((a33 << 8) | (a27 << 24) | ((a35 ^ 0x77) << 16) | a29) ^ 0x310F566E;
  LODWORD(STACK[0x428]) = ((((a36 ^ 0xBC) << 16) + ((a26 ^ 0x1A) << 24)) | a30 | ((a38 ^ a4) << 8)) ^ 0x4E33834F;
  JUMPOUT(0x1CD0F96E4);
}

uint64_t sub_1CD0FB6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;
  unint64_t v19;

  v19 = STACK[0x550];
  STACK[0x668] -= 32;
  *(_BYTE *)(v19 + 335) = *(_BYTE *)(a14 + 335) ^ 0xCD ^ *((_BYTE *)*(&off_1E89A15E0 + (a18 ^ 0x526)) + 3) ^ *((_BYTE *)*(&off_1E89A15E0 + (a18 ^ 0x586)) + 13) ^ *((_BYTE *)*(&off_1E89A15E0 + a18 - 1220) + (((a18 - 1437) | 0x441u) ^ 0x440) + 11) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * a18) - 4))();
}

void sub_1CD0FB7C0()
{
  JUMPOUT(0x1CD0FB730);
}

uint64_t sub_1CD0FB7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  int v8;
  uint64_t v9;

  STACK[0x3B0] = a8;
  *(_QWORD *)(a2 + 304) -= 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((7 * (v8 ^ 0x4F0)) ^ v8 ^ 0x786))
                            - (v8 + 162)
                            + 1245))();
}

uint64_t sub_1CD0FB810@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _BYTE *a8)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v10 = *(_BYTE **)(v9 + 344);
  a8[12] = ((-93 * (a1 ^ 0xE6)) ^ 0xE9) + 50;
  a8[13] = 50;
  a8[14] = 50;
  a8[15] = 51;
  v10[16] ^= *a8 ^ 0x32;
  v10[17] ^= a8[1] ^ 0x32;
  v10[18] ^= a8[2] ^ 0x32;
  v10[19] ^= a8[3] ^ 0x32;
  v10[20] ^= a8[4] ^ 0x32;
  v10[21] ^= a8[5] ^ 0x32;
  v10[22] ^= a8[6] ^ 0x32;
  v10[23] ^= a8[7] ^ 0x32;
  v10[24] ^= a8[8] ^ 0x32;
  v10[25] ^= a8[9] ^ 0x32;
  v10[26] ^= a8[10] ^ 0x32;
  v10[27] ^= a8[11] ^ 0x32;
  v10[28] ^= a8[12] ^ 0x32;
  v10[29] ^= a8[13] ^ 0x32;
  v10[30] ^= a8[14] ^ 0x32;
  v10[31] ^= a8[15] ^ 0x32;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (a1 - 395)) - 4))(1254, 50);
}

void sub_1CD0FBA1C()
{
  JUMPOUT(0x1CD0FB848);
}

uint64_t sub_1CD0FBA24(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((60 * (LODWORD(STACK[0x46C]) != ((v4 - 225) | 0x451) + 1206751714)) ^ ((v4 - 225) | 0x451)))
                            - ((((v4 - 225) | 0x451u) - 895) ^ a4)))();
}

uint64_t sub_1CD0FBAA4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((51 * (*(_BYTE *)(v2 + (a1 + 1252)) == 50)) ^ v1))
                            - ((v1 ^ 0x483u)
                             - 278)
                            + 1083))();
}

uint64_t sub_1CD0FBAEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((60 * (v5 != v4 + 1206751714)) ^ v4))
                            - ((v4 - 895) ^ a4)))();
}

uint64_t sub_1CD0FBB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;
  int v40;
  unint64_t v41;

  LODWORD(STACK[0x46C]) = 1206753083;
  v41 = STACK[0x648];
  STACK[0x4C0] = 335;
  *(_BYTE *)(v41 + 335) = (a39 ^ 0xBA) * (a39 + 17);
  return (*(uint64_t (**)(void))(v39
                              + 8
                              * (int)(((STACK[0x4C0] == 0) * (((v40 + 1002725785) & 0xC43B9DD9) - 1065)) ^ (v40 + 1002725785) & 0xC43B9DD9)))();
}

void sub_1CD0FBE70()
{
  JUMPOUT(0x1CD0FBE38);
}

uint64_t sub_1CD0FBE78@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  v3 = a1 - 430;
  v4 = a1 + 141;
  v5 = ((uint64_t (*)(void))STACK[0x310])();
  LODWORD(STACK[0x688]) = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (((v1 == v4 + 1645152532) * (v3 - 581)) ^ v3)) - 8))(v5);
}

uint64_t sub_1CD0FBEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v7 = LODWORD(STACK[0x468]);
  v8 = STACK[0x3C8];
  v9 = STACK[0x2C8];
  v10 = STACK[0x448];
  v11 = *(_QWORD *)(v6 + 8 * (v5 - 1210));
  STACK[0x428] = STACK[0x2C8] + 2353;
  STACK[0x420] = v10 + 49;
  STACK[0x418] = v9 + 2333;
  STACK[0x410] = v10 + 29;
  STACK[0x408] = v9 + 2313;
  STACK[0x400] = v10 + 9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v11 - 8))(a1, a2, v7, 2649773600, a5, v8);
}

void sub_1CD0FC898()
{
  int v0;

  LODWORD(STACK[0x680]) = v0;
  JUMPOUT(0x1CD0FC818);
}

uint64_t sub_1CD0FC8C4(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  STACK[0x460] = v3;
  v7 = STACK[0x49C];
  *(_DWORD *)(*(_QWORD *)(v6 + 448) + ((a3 - 1133293923 + v7 - 1188) & 0xFFFFFFFC)) = v4;
  LODWORD(STACK[0x49C]) = v7 + 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((99
                                          * ((((v7 - 1133293854) < 0x40) ^ (a3 - 66)) & 1)) ^ (a3 - 65)))
                            - 8))();
}

uint64_t sub_1CD0FDFBC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unint64_t v12;

  v9 = v5 + v3;
  v10 = *(_DWORD *)(a1 + 4 * (v9 - 8)) ^ *(_DWORD *)(a1 + 4 * (v9 - 3));
  v11 = *(_DWORD *)(a1 + 4 * (v9 - 16)) ^ *(_DWORD *)(a1 + 4 * (v9 - 14)) ^ (v10 + v8 - (v6 & (2 * v10)));
  HIDWORD(v12) = (v1 - 335) ^ (v8 + 136) ^ v11;
  LODWORD(v12) = v11;
  *(_DWORD *)(a1 + 4 * (v2 + v5)) = (v12 >> 31) + v8 - (v6 & (2 * (v12 >> 31)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((v2 + 1 + v5) > 0x4F) * v4) ^ v1)) - 8))();
}

uint64_t sub_1CD0FE048()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

void sub_1CD0FE144()
{
  JUMPOUT(0x1CD0FE070);
}

uint64_t sub_1CD0FE15C(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((121 * ((a2 + 1 + v4) > 0x27)) ^ v2)) - 8))();
}

uint64_t sub_1CD0FE220(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((((a3 + 1 + v7) > 0x3B) * v6) ^ v4))
                                          - 8))(a4);
}

uint64_t sub_1CD0FE2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((241 * ((a6 + 1 + v8) > 0x4F)) ^ v6)) - 4))();
}

void sub_1CD0FE3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;

  LODWORD(STACK[0x57C]) = v8;
  LODWORD(STACK[0x498]) = v12;
  LODWORD(STACK[0x544]) = v9;
  LODWORD(STACK[0x614]) = v11;
  LODWORD(STACK[0x5C8]) = v10;
  v17 = *(_QWORD *)(v16 + 432);
  v18 = *(_DWORD *)(v17 - 0x5C6940C6B1BC6FE2);
  LODWORD(STACK[0x49C]) = v15 + 80;
  v19 = ((v13 - 452) ^ (v14 - 997) ^ v18) + (v10 ^ v14);
  *(_DWORD *)(v17 - 0x5C6940C6B1BC6FE2) = v19 + v14 - (a8 & (2 * v19));
  JUMPOUT(0x1CD0FE43CLL);
}

uint64_t sub_1CD0FE54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  uint64_t v65;
  unint64_t v66;
  int v67;
  uint64_t v69;

  v66 = STACK[0x488];
  v67 = *(unsigned __int8 *)(STACK[0x488] - 0x5C6940C6B1BC6FDALL) ^ 0x5F;
  if (v67 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v65
                                                                 + 8
                                                                 * ((562
                                                                   * (((a55 ^ (*(_DWORD *)(v66 - 0x5C6940C6B1BC6FDELL) == 369984849)) & 1) == 0)) ^ ((int)a3 + 74)))
                                                     - 8))(a1, 25);
  if (v67 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * ((111 * (*(_DWORD *)(v66 - 0x5C6940C6B1BC6FDELL) != (((LODWORD(STACK[0x468]) - 469) | 0xA0) ^ 0x160D86E1))) ^ (LODWORD(STACK[0x468]) + 74))) - 8))(a1, 25, a3, a4, 1099626267, 1695, 26919485, 858949875);
  v69 = LODWORD(STACK[0x468]);
  STACK[0x480] = 91;
  *(_BYTE *)(v66 - 0x5C6940C6B1BC6FDFLL) = (a65 + 7 * ((a3 - 71) ^ 0x2D)) * ((a65 - 44) ^ 0xBA);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v65
                                                               + 8 * ((932 * (STACK[0x480] == 0)) ^ ((int)a3 - 839)))
                                                   - 12))(v69, 25);
}

void sub_1CD0FEEF0()
{
  JUMPOUT(0x1CD0FEEA8);
}

uint64_t sub_1CD0FEEF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1CD0FEF2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;

  *(_DWORD *)(a6 + 52) = (((((v8 + a3 - 1089 - 164) ^ v6) + (LODWORD(STACK[0x684]) ^ v8)) % 0x2710) ^ 0xEFFFDBB9)
                       + 1006630752
                       + ((2 * ((((v8 + a3 - 1089 - 164) ^ v6) + (LODWORD(STACK[0x684]) ^ v8)) % 0x2710)) & 0x3772);
  v9 = STACK[0x68C];
  LODWORD(STACK[0x4AC]) = STACK[0x68C];
  return (*(uint64_t (**)(void))(v7 + 8 * ((1169 * (v9 == v8)) ^ (a3 - 1089))))();
}

void sub_1CD0FEFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6)
{
  *a6 = STACK[0x52C];
  a6[85] = STACK[0x4E4];
  a6[86] = STACK[0x61C];
  a6[87] = STACK[0x60C];
  a6[88] = STACK[0x4EC];
  JUMPOUT(0x1CD0F86C4);
}

void sub_1CD0FEFE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 304) -= 1616;
  LODWORD(STACK[0x4AC]) = a4 + 174;
  JUMPOUT(0x1CD0F86C4);
}

void sub_1CD0FF000()
{
  JUMPOUT(0x1CD0F86C4);
}

void sub_1CD0FF008()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 36) = v0 | 4;
}

uint64_t sub_1CD0FF010(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unint64_t v4;
  uint64_t v5;
  int v6;

  STACK[0x3B0] = v4;
  LODWORD(STACK[0x618]) = a4 - 10;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((1443 * (((STACK[0x3B0] == 0) ^ (v6 - 84)) & 1)) ^ (v6 - 596))))();
}

uint64_t sub_1CD0FF1A4()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((v0 - 521138063 + ((v2 + 1098251017) & 0xBE8A07F7) - 1253 >= (v2 ^ 0x344u) - 670) ^ v2)))();
}

uint64_t sub_1CD0FF1F0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;

  LODWORD(STACK[0x618]) = v1 - 10;
  v4 = STACK[0x530];
  v5 = LODWORD(STACK[0x5F4]);
  STACK[0x508] = v5;
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v2
                                                                        + 8
                                                                        * ((1625
                                                                          * ((_DWORD)v5 != ((v3 - 35477226) & 0x21D537C ^ 0x178))) ^ (v3 - 711)))
                                                            - ((v3 - 1045827046) & 0x3E5609CB)
                                                            + 199))(a1, v4);
}

void sub_1CD0FF200()
{
  JUMPOUT(0x1CD0FF208);
}

void sub_1CD0FF23C(uint64_t a1@<X1>, int a2@<W8>)
{
  void (*v2)(_QWORD, uint64_t, _QWORD);
  uint64_t v3;
  int v4;

  v4 = a2 ^ 0x674;
  v2(*(unsigned int *)STACK[0x318], a1, LODWORD(STACK[0x334]) - 1862247496 + (a2 ^ 0x674u) - 1253);
  *(_DWORD *)(v3 - 200) = (v4 + 426521764) ^ (535753261
                                            * ((1828448706 - ((v3 - 200) | 0x6CFBE9C2) + ((v3 - 200) | 0x9304163D)) ^ 0x99F01812));
  sub_1CD126400((_DWORD *)(v3 - 200));
  JUMPOUT(0x1CD0FF2CCLL);
}

uint64_t sub_1CD0FF310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;

  v49 = STACK[0x530];
  v50 = LODWORD(STACK[0x5F4]) ^ ((v47 ^ 0x26B) - 1099358560);
  v51 = (2 * LODWORD(STACK[0x5F4])) & 0x7CF23ED6;
  v52 = 235795823 * ((((2 * (v48 - 200)) | 0x7ACDC568) - (v48 - 200) - 1030152884) ^ 0xA9CBABED);
  v53 = v48 - 200;
  *(_QWORD *)(v53 + 8) = v44;
  *(_QWORD *)(v53 + 16) = a42;
  *(_QWORD *)(v53 + 32) = v45;
  *(_DWORD *)(v48 - 136) = v52 + v50 + v51 + 1307043736;
  *(_BYTE *)(v53 + 24) = 111 * ((((2 * (v48 + 56)) | 0x68) - (v48 + 56) + 76) ^ 0xED) - 30;
  *(_QWORD *)(v53 + 56) = v49;
  *(_QWORD *)(v53 + 48) = a43;
  *(_DWORD *)(v48 - 160) = (v47 - 485) ^ v52;
  *(_DWORD *)(v48 - 200) = (v43 + 760079447) ^ v52;
  v54 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E89A15E0 + v47 - 642) - 8))(v48 - 200);
  v55 = *(_DWORD *)(v48 - 132);
  LODWORD(STACK[0x618]) = v55;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v46 + 8 * ((1847 * (v55 == 1645153785)) ^ v47))
                                          - (((v47 + 389) | 0xC0u) ^ 0x4E9)))(v54);
}

uint64_t sub_1CD0FF430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;
  int v40;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39
                                        + 8
                                        * (int)((((LODWORD(STACK[0x590]) ^ v38) != a38 - 1368499268)
                                               * (((v40 + 445943596) & 0xE56B74ED) - 678)) ^ v40))
                            - 4))();
}

uint64_t sub_1CD0FF484@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);

  LODWORD(STACK[0x618]) = v1 + 391;
  v5 = LODWORD(STACK[0x618]);
  v6 = 235795823 * (((v3 | 0x68728E509914D92ELL) - (v3 & 0x68728E509914D92ELL)) ^ 0x60C234AE0DB99077);
  v7 = a1 - 976199517 + v6;
  *(_DWORD *)(v4 - 192) = -235795823 * (((v3 | 0x9914D92E) - (v3 & 0x9914D92E)) ^ 0xDB99077);
  *(_DWORD *)(v4 - 188) = v6 ^ (a1 - 976199517) ^ 0x73;
  v8 = (uint64_t *)(v4 - 200);
  v8[2] = v6 ^ 0x9DF05623;
  *v8 = v5 ^ v6;
  *(_DWORD *)(v4 - 176) = a1 - v6 - 1501687097;
  *(_DWORD *)(v4 - 172) = v7 + 106;
  *(_DWORD *)(v4 - 168) = v7;
  v9 = ((uint64_t (*)(uint64_t))STACK[0x3B8])(v4 - 200);
  STACK[0x3B0] = 0;
  v10 = *(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v4 - 164));
  LODWORD(STACK[0x334]) = 1862247496;
  return v10(v9);
}

uint64_t sub_1CD0FF504@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v5 = ((unint64_t)&STACK[0x508] ^ 0xF3F3F9DFAFEB7F9FLL)
     + 0x5D9F8EE7FE9CD861
     + ((2 * (_QWORD)&STACK[0x508]) & 0xE7E7F3BF5FD6FF30);
  v6 = v2 - 1;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(a1 + v6) = (a2 ^ 0x66 ^ v5 ^ 0xA4) * (v5 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1814 * (*(_QWORD *)(v4 + 24) == 0)) ^ a2)) - 8))();
}

void sub_1CD0FF594()
{
  JUMPOUT(0x1CD0FF558);
}

void sub_1CD0FF59C(uint64_t a1, uint64_t a2)
{
  void (*v2)(_QWORD, uint64_t, _QWORD);

  v2(*(unsigned int *)STACK[0x318], a2, 0);
  JUMPOUT(0x1CD0FF5DCLL);
}

uint64_t sub_1CD0FF6AC()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(void);

  STACK[0x3B0] = 0;
  v2 = *(_DWORD *)(STACK[0x3C8] + 56);
  *(_DWORD *)(STACK[0x3C8] + 56) = v2 + 1;
  v3 = *(uint64_t (**)(void))(v1 + 8 * ((1804 * ((v0 ^ 0xD381F09D) + v2 < 0xFFFFFFFA)) ^ (v0 - 1129)));
  LODWORD(STACK[0x334]) = 1862247496;
  return v3();
}

void sub_1CD0FF700()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v3 = v0 ^ 0x499;
  *(_DWORD *)(v2 - 200) = ((v0 ^ 0x499) + 426522893) ^ (535753261
                                                      * ((v2 + 1931614134 - 2 * ((v2 - 200) & 0x7322187E)) ^ 0x79D61651));
  sub_1CD126400((_DWORD *)(v2 - 200));
  *(_BYTE *)v1 = (-85 * ((v2 + 56) ^ 0xF6)) ^ 0x2F;
  *(_QWORD *)(v1 + 24) = STACK[0x2B0];
  *(_QWORD *)(v1 + 8) = STACK[0x2A8];
  *(_DWORD *)(v2 - 184) = 3804331 * ((v2 - 200) ^ 0x7ED525F6) + v3 + 1389;
  ((void (*)(uint64_t))STACK[0x2A0])(v2 - 200);
  STACK[0x3B0] = 0;
  LODWORD(STACK[0x334]) = 1862247496;
  JUMPOUT(0x1CD0FF20CLL);
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1CD0FF810@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void))(a1 + 208))();
  return 0;
}

uint64_t sub_1CD0FF824()
{
  return 4294925273;
}

void sub_1CD0FF830(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = 235795823 * (((a1 | 0x1A7DF74B) - (a1 | 0xE58208B4) - 444462924) ^ 0x8ED0BE12);
  v2 = *(_DWORD *)(a1 + 40) ^ v1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = 1374699841 * ((2 * (&v8 & 0x59A7A858) - &v8 + 643323809) ^ 0x4BAC4FA8);
  v7 = *(_DWORD *)(a1 + 64) - v1 - v6;
  v13 = v6 ^ ((*(_DWORD *)a1 ^ v1) - 757538690);
  v14 = v3;
  v15 = v7 + 1047456190;
  v9 = v6 ^ (v2 + 368399990);
  v8 = v5;
  v12 = v4;
  v10 = v5;
  sub_1CD1260C0((uint64_t)&v8);
  __asm { BR              X8 }
}

uint64_t sub_1CD0FF9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unint64_t *a11, char a12, int a13, uint64_t a14, int a15)
{
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  unsigned int v25;
  uint64_t v26;

  v24 = *(unsigned __int8 *)(v16 + 24) - v17;
  v25 = 1759421093 * (&a10 ^ 0xB37DB054);
  a11 = &STACK[0x17594DE9181849F3];
  a14 = v22;
  a12 = ((v24 ^ 0xFE) + ((v24 << (v23 - 120)) & ((v23 ^ 0xC2) + 127) ^ 2) - 5) ^ (-91 * (&a10 ^ 0x54));
  a13 = v25 + 395618377 + v21;
  a15 = v23 - v25 + 906;
  v26 = ((uint64_t (*)(int *))(*(_QWORD *)(v15 + 8 * (v23 ^ 0x5A)) - 4))(&a10);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (((a10 != v19) * v18) ^ v23)) - 8))(v26);
}

uint64_t sub_1CD0FFA8C()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v2 + 25) | 0x29) ^ 0xAD) * ((v0 - 1281217511) > 0xFFFFFFFD)) ^ (v2 + 366)))
                            - 8))();
}

void sub_1CD0FFAD0(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  *(_DWORD *)(a1 - 0x384B062F07609540) = v2 - 1;
  *(_DWORD *)(v1 + 68) = 1645153785;
}

void Fc3vhtJDvr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v6;

  if (a4)
    v5 = a5 == 0;
  else
    v5 = 1;
  v6 = !v5;
  __asm { BR              X8 }
}

uint64_t sub_1CD0FFCDC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  unsigned int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *a4 = 0;
  *a5 = 0;
  a18 = 108757529 * ((&a17 & 0xA7DA3C6 | ~(&a17 | 0xA7DA3C6)) ^ 0x151E3E12) + 1695027452;
  v21 = sub_1CD125890(&a17);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((1110 * (a17 == v20)) ^ v18)))(v21);
}

uint64_t sub_1CD0FFD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v23 = 1759421093 * ((&a17 - 826825291 - 2 * (&a17 & 0xCEB7A5B5)) ^ 0x7DCA15E1);
  HIDWORD(a17) = v23 ^ 0x771B5177;
  a18 = v23 + 1806;
  a20 = v23 ^ 0x18F94B49;
  LODWORD(a17) = v23 ^ 0x7FA6CEE2;
  ((void (*)(unint64_t **))(*(_QWORD *)(v22 + 392) - 12))(&a17);
  a17 = &STACK[0x4BD26FD1213425D9];
  a19 = 1307 - 460628867 * ((((2 * &a17) | 0x9D678C32) - &a17 + 827079143) ^ 0x82254464);
  sub_1CD1015E8((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * ((11 * (a18 == v21)) ^ 0x296u)))(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10);
}

uint64_t sub_1CD0FFE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18, uint64_t a19, unsigned int a20,uint64_t a21)
{
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;

  v26 = 1178560073 * ((((2 * &a17) | 0x572E13FC) - &a17 + 1416164866) ^ 0x1103719C);
  a18 = ((2 * v23) & 0xE6FBE672) + (v23 ^ 0x737DF339) - 587243776 + v26;
  a20 = v26 ^ 0x3E8;
  a19 = a16;
  sub_1CD111694((uint64_t)&a17);
  v27 = 1178560073 * (((~&a17 & 0x8CEF827A) - (~&a17 | 0x8CEF827B)) ^ 0x367BFA19);
  a21 = v21;
  a20 = v27 ^ ((v22 ^ 0x5BFF7F7E) - 1350459988 + ((2 * v22) & 0xB7FEFEFC));
  a19 = a16;
  a18 = v27 + 1289;
  v28 = ((uint64_t (*)(int *))(*(_QWORD *)(v25 + 1024) - 8))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1916 * (a17 == 1645153785)) ^ 0x323u)))(v28);
}

uint64_t sub_1CD0FFFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, unsigned int a19, unsigned int a20,unsigned int a21,int a22)
{
  int v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  uint64_t v27;

  if (a12 >= 0x608FEDF6)
    v25 = 1010542952;
  else
    v25 = 635686783;
  v26 = 460628867
      * ((((&a17 | 0x2AEB2E12) ^ 0xFFFFFFFE) - (~&a17 | 0xD514D1ED)) ^ 0x99825390);
  a17 = &STACK[0x58A7AA0862456906];
  a18 = a16;
  a19 = v26 - 1703100402;
  a20 = v26 + v23 + 2138962557;
  a21 = v25 - v26;
  v27 = sub_1CD125C5C((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((22 * (a22 == v22 + v23 - 141 + ((v23 + 367) | 0x160) - 2184)) ^ v23)))(v27);
}

uint64_t sub_1CD1000C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  int v12;
  unsigned int v13;
  uint64_t v14;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v14
                                                     + 8 * (((((v12 + 466728956) & 0x71D) - 699) * (a12 < v13)) ^ v12)))(a1, a2);
}

uint64_t sub_1CD100158@<X0>(uint64_t a1@<X8>, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, _BYTE *a6, int a7, char a8, uint64_t a9, uint64_t a10, unsigned int a11, char *a12, _BYTE *a13, uint64_t a14, unsigned int a15)
{
  _BYTE *v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void (*v20)(unsigned int *);
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;

  v22 = v15;
  a12 = &a8 + a1;
  a13 = a6;
  a11 = (v18 - 1177) ^ (((2 * (&a11 & 0x7F331FB0) - &a11 - 2134056888) ^ 0xED38F841) * v16);
  v20(&a11);
  a13 = v22;
  a14 = v17;
  a15 = ((v18 ^ 0xFE) - 938) ^ (1225351577 * (&a11 ^ 0x239AD816));
  a12 = a6;
  ((void (*)(unsigned int *))(*(_QWORD *)(v21 + 8 * (v18 ^ 0x5B3u)) - 8))(&a11);
  a12 = a3;
  a13 = a6;
  a11 = ((v18 ^ 0xFE) - 947) ^ (1374699841
                              * ((-1001333016 - (&a11 | 0xC450DEE8) + (&a11 | 0x3BAF2117)) ^ 0x565B391E));
  v20(&a11);
  a11 = ((v18 ^ 0xFE) - 446) ^ (1755732067
                              * ((((&a11 | 0x3445A058) ^ 0xFFFFFFFE) - (~&a11 | 0xCBBA5FA7)) ^ 0x157CE27C));
  a12 = a6;
  v23 = sub_1CD121CC8((uint64_t)&a11);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((27
                                                        * ((_DWORD)a13 != (((v18 ^ 0xFE) - 45646309) & 0x7FFB)
                                                                        + 1645152982)) ^ v18 ^ 0xFEu))
                                          - (v18 ^ 0x114u)
                                          + 1246))(v23);
}

uint64_t sub_1CD10031C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  int v14;
  uint64_t v15;
  int v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((a14 != v14) * ((v16 - 532) ^ (v16 - 451))) ^ v16)) - 8))();
}

uint64_t sub_1CD100348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  uint64_t v14;
  int v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * (((a13 != ((v15 + 1678211847) & 0x87B7 ^ (v13 - 925)))
                                          * ((v15 + 1678211847) ^ 0x64077FB4)) ^ (v15 + 49)))
                            - 8))();
}

uint64_t sub_1CD1003A0@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = (*(uint64_t (**)(_QWORD))(v4 + 8 * (v1 - 1731)))(a1 ^ v2) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 * (((v1 - 1412) | 0x102) ^ 0x336)) ^ v1)))();
}

uint64_t sub_1CD1003E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  int v16;

  v16 = a13 ^ (v14 - 1291) ^ (v13 - 1656909894) & 0x62C26DB7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * ((232
                                          * (((2 * (v16 - ((2 * v16) & 0xEDAA0BF4) + 1993672186)) & 0xDFDBFDDA ^ (((v13 - 901) | 0x308) - 846593368))
                                           + ((v16 - ((2 * v16) & 0xEDAA0BF4) + 1993672186) ^ 0x1938FB17)
                                           - 1610946564 != 266921705)) ^ (v13 - 1333)))
                            - 12))();
}

uint64_t sub_1CD1004A4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v1 + v0 + ((v2 - 874430325) & 0x341EBEEDu) - 1877869966 < (((v2 + 8993113) | 0xA8160008) ^ 0xA89F4081);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2 * v4) | (4 * v4) | v2)) - 8))();
}

uint64_t sub_1CD100528(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((a4 - 1904335010) ^ 0x26E16D76 ^ v5) + ((a4 - 1904335010) & 0x7181D2F1))
                                          * ((unint64_t)(v4 - a1) > 0x1F)) ^ a4))
                            - 4))();
}

uint64_t sub_1CD100578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((v7 < ((a5 - v6 - 213) ^ (v5 + 1686))) * ((a5 + 21) ^ 0x100)) ^ a5)))();
}

uint64_t sub_1CD1005AC(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v10 = v8 + v7 + v6 + 1696;
  v11 = v3 + v10;
  v12 = *(_OWORD *)(v11 - 31);
  v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v5 & 0xFFFFFFE0) != 32) * ((a2 - v2) ^ 0x604)) ^ (v4 + a2 + 410))))();
}

void sub_1CD100608()
{
  JUMPOUT(0x1CD1005CCLL);
}

uint64_t sub_1CD100614(uint64_t a1)
{
  int v1;
  int v2;
  _QWORD *v3;
  int v4;
  _DWORD *v6;
  void (*v7)(_BYTE *);
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[4];
  unsigned int v11;
  uint64_t v12;

  *v3 = a1;
  *v6 = v2;
  v4 = (v1 - 1155) | 0x202;
  v12 = v8;
  v11 = v1
      - 500
      + 535753261
      * (((v10 | 0x252138E8) - v10 + (v10 & 0xDADEC710)) ^ 0x2FD536C7)
      + 226;
  v7(v10);
  v12 = v9;
  v11 = v4
      + 535753261 * ((992398163 - (v10 | 0x3B26CB53) + (v10 | 0xC4D934AC)) ^ 0xCE2D3A83)
      + 367;
  v7(v10);
  return 0;
}

void sub_1CD1008CC(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1CD100950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a66;
  uint64_t v66;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, unint64_t *))(*(_QWORD *)(v66 + 3744) - 8))(a1, a2, a3, a4, a5, a6, a7, 3102982430, a9, &a66, a11, &STACK[0x4FF3ADA337C70055]);
}

uint64_t sub_1CD100A9C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (int)(((((v0 - 338895378) & 0xDFBFE7EB) + 879966575) * (v2 == v3)) ^ v0))
                            - ((v0 + 1645) ^ 0x738)))();
}

uint64_t sub_1CD100AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  uint64_t v18;
  int v19;

  return (*(uint64_t (**)(void))(v18 + 8 * ((107 * ((((v17 - 1641) ^ 0xFFFFFF2F) & v19) - a17 == -3)) ^ v17)))();
}

uint64_t sub_1CD100B2C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((((a1 - 880016978) | 0xC428) + 879967018) * (v1 == 369238551)) ^ a1))
                            - 8))();
}

uint64_t sub_1CD100B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  _BOOL4 v27;

  v25 = 2 * (v21 ^ (v22 + 125) ^ 0x10F);
  v26 = v21 + 879967956;
  v27 = a21 - 94734047 < (v24 - 937898909);
  if ((a21 - 94734047) < 0x1006639E != (v24 - 937898909) < 0x1006639E)
    v27 = (v24 - 937898909) < 0x1006639E;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((v27 * (v25 ^ 0x1C0)) ^ v26)) - 8))();
}

uint64_t sub_1CD100D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  v21 = 628203409 * ((v20 - 152) ^ 0x82880C33);
  *(_DWORD *)(v20 - 136) = v17 - v21 + 1538;
  *(_DWORD *)(v20 - 132) = v19 - v21 + 77623025;
  *(_QWORD *)(v20 - 152) = a14;
  *(_QWORD *)(v20 - 144) = a12;
  *(_QWORD *)(v20 - 112) = a17;
  *(_QWORD *)(v20 - 104) = a13;
  *(_QWORD *)(v20 - 128) = a15;
  v22 = (*(uint64_t (**)(uint64_t))(a6 + 8 * (v17 ^ 0x19D)))(v20 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * (((*(_DWORD *)(v20 - 120) == (((v17 + 134791456) | 0xC3840489) ^ 0xA983CB50))
                                                        * ((355 * (v17 ^ 0x105)) ^ 0x58D)) ^ v17))
                                          - 8))(v22);
}

uint64_t sub_1CD100E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * (((*(_DWORD *)(v11 + 48 * (v13 + a8)) == 470551612) * (((16 * v8) ^ 0x6FF0 ^ (v9 + 256)) + 879967002)) ^ v8))
                                                                                       - 4))(a1, a2, a3, a4, a5, v12);
}

uint64_t sub_1CD100E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  if ((v5 - 1155520739) <= 0x19 && ((1 << (v5 + 29)) & 0x3014001) != 0)
    __asm { BR              X10 }
  return a5 ^ 0x9DF05627;
}

void sub_1CD1015E8(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  v2 = *((_QWORD *)*(&off_1E89A15E0 + v1 - 1265)
       + ((61 * (((uint64_t (*)(uint64_t))*(&off_1E89A15E0 + v1 - 1081))(32) != 0)) ^ v1)
       - 1)
     - 8;
  __asm { BR              X8 }
}

uint64_t sub_1CD101678(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)result = 0;
  *(_QWORD *)(result + 8) = 0x23F5AF4C23F5AF4CLL;
  *(_QWORD *)(result + 16) = 0xA94A23B81285297ALL;
  *(_DWORD *)(result + 24) = 1645153785;
  *(_QWORD *)(v2 - 0x4BD26FD1213425A1) = result + 0x27681A84B35EB105;
  *((_DWORD *)v1 + 2) = 1645153785;
  return result;
}

void sub_1CD1016F8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CD10173C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((1906 * (**(_BYTE **)(a2 + 8) == 0)) ^ 0x13Eu)))();
}

uint64_t sub_1CD101768()
{
  uint64_t v0;
  int v1;
  unsigned int v2;

  v2 = v1 - ((2 * v1 + 1881461128) & 0x82B34678) + 2037124096;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((912
                                          * (((2 * v2) & 0xECF2B9EA ^ 0x80B20068) + (v2 ^ 0x3720FFC9) + 1845473215 != 1685654708)) ^ 0x4AAu))
                            - 4))();
}

uint64_t sub_1CD10181C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  unsigned int v5;

  return (*(uint64_t (**)(void))(v4 + 8 * ((26 * (a4 + a3 + v5 + 973 + (v5 ^ 0x9869E38) > 7)) ^ v5)))();
}

uint64_t sub_1CD101870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * (a8 ^ (207 * ((unint64_t)(v9 - a5 - 1167) > 0x1F))))
                            - 4))();
}

uint64_t sub_1CD1018B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  unsigned int v9;

  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((((((a8 + 2059979559) & 0x33F0) + 118) ^ 0xC21B0EF2 ^ ((((a8 + 2059979559) & 0x33F0)
                                                                                            + 118) | 0x38) ^ 0xC21B0EC4)
                                     * (v9 < 0x20)) ^ (a8 + 2059979559) & 0x33F0)))();
}

uint64_t sub_1CD101904(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v12 = a7 + a3 + a4 + 2015;
  v13 = v10 + v12;
  v14 = *(_OWORD *)(v13 - 31);
  v15 = v9 + v12;
  *(_OWORD *)(v15 - 15) = *(_OWORD *)(v13 - 15);
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v11 & 0xFFFFFFE0) != 32) * (((v8 + a6 + 1315) | 0xC) - 1540)) ^ (v8 + a6 + 124))))();
}

void sub_1CD101960()
{
  JUMPOUT(0x1CD10191CLL);
}

uint64_t sub_1CD10196C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;

  *(_DWORD *)(a5 + 1424) = v6 + ((v7 - v5) ^ 0x2D86C0A4);
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 520) = *(_QWORD *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_1CD101AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  *(_BYTE *)(v5 + (v8 + v7)) = *(_BYTE *)(v6 + (v8 + v7));
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * ((41
                                                                         * (((v8 - 1 == a4) ^ (((a3 - 31) & 0xF7) - 104)) & 1)) ^ (a3 - 86405151) & 0x5266FF7u))
                                                           - 8))(a1, a2, (((a3 - 86405151) & 0x5266FF7) - 1385) | 0x482u);
}

void sub_1CD101B28(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BR              X9 }
}

uint64_t sub_1CD101BB0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((*(_BYTE *)(v2 - 0x27681A84B35EB0F1) & 1) == 0) ^ (a1 - 1)) & 1)
                                * (a1 ^ 0x218)) ^ a1)))();
}

void sub_1CD101BF0(int a1@<W8>)
{
  uint64_t v2;
  _BYTE v3[80];

  *(_BYTE *)(v2 - 0x27681A84B35EB0E6) = ((((unint64_t)v3 ^ 0xFFFFEE7FFFDAFB87) + 121) ^ 0xBA)
                                        * (((unint64_t)v3 ^ 0xFFFFEE7FFFDAFB87) - 118);
  __asm { BR              X15 }
}

void sub_1CD101E1C()
{
  JUMPOUT(0x1CD101DECLL);
}

void sub_1CD101E24()
{
  int v0;
  uint64_t v1;

  (*(void (**)(void))(v1 + 8 * (v0 - 1003)))();
  JUMPOUT(0x1CD101E3CLL);
}

uint64_t sub_1CD101E58(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))((char *)off_1E899CFF0[((8 * (*(_DWORD *)(a2 + 4) != 1206753096)) | ((*(_DWORD *)(a2 + 4) != 1206753096) << 6)) ^ 0x99u]
                                          - 12))(4294925278);
}

uint64_t sub_1CD101EA0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 468) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 9208) - 12))(0);
}

uint64_t sub_1CD101EF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;

  *(_BYTE *)(a1 + (v7 + v5)) = *(_BYTE *)(v4 + (v7 + v5));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * (((v7 - 1 != v2) * v6) ^ v3)) - 12))(0);
}

void sub_1CD101F2C(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) ^ (3804331 * ((2 * (a1 & 0x520CC9FF) - a1 - 1376569856) ^ 0xD32613F6));
  v2 = *(_QWORD *)a1;
  ((void (*)(char *, void (*)()))*(&off_1E89A15E0 + (v1 ^ 0x1C2)))((char *)*(&off_1E89A15E0 + v1 - 229) - 4, sub_1CD125DF4);
  __asm { BR              X11 }
}

uint64_t sub_1CD101FE8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((883 * (**(_QWORD **)(v1 + 8 * (v2 ^ 0x1E8)) == 0)) ^ v2))
                            - ((v2 - 1332780451) & 0x4F709ED1)
                            + 585))();
}

uint64_t sub_1CD102044@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x2C2)))(v1);
}

void sub_1CD102064(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CD1020B4@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((19 * (v1 == 1206753083)) ^ 0x58Du)) - 8))();
}

uint64_t sub_1CD1020EC(_DWORD *a1)
{
  int v1;
  int v2;
  int v3;

  *((_BYTE *)a1 + (v3 ^ (v2 + 687)) + v1 + 4) = 79;
  *a1 = v1;
  return 0;
}

uint64_t sub_1CD102120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  *(_BYTE *)(a1 + (v3 + v4) + 4) = ((2 * **(_BYTE **)(a2 + 8)) & 0x9F) + (**(_BYTE **)(a2 + 8) ^ 0x4F);
  v5 = *(_DWORD *)(a2 + 4) - 650652805;
  v6 = v5 < 0x21256AB6;
  v7 = v5 > 0x21256AB7;
  if (v6)
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((1572 * !v7) ^ 0x3BAu)) - 8))();
}

void sub_1CD1021D0()
{
  JUMPOUT(0x1CD102154);
}

void sub_1CD1021D8(uint64_t a1)
{
  int v1;
  BOOL v3;

  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19) == 159353952
    || *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xC7F991DE6408E19) == 159353952;
  v1 = *(_DWORD *)a1 - 1225351577 * ((-1557536513 - (a1 | 0xA329E0FF) + (a1 | 0x5CD61F00)) ^ 0x7F4CC716);
  __asm { BR              X14 }
}

uint64_t sub_1CD1022E8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((a1 + v3 + 71 * (v2 ^ 0xEAu) - 1056 >= 0x7FFFFF7D)
                                     * (((v2 + 301361902) & 0xEE0995EF) + 49)) ^ v2)))();
}

uint64_t sub_1CD102348(int a1)
{
  uint64_t v1;
  int v2;
  uint64_t (*v3)(_QWORD, uint64_t, uint64_t);

  v3 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                    + 8
                                                                    * ((1868 * (v2 > ((a1 - 776) | 0x444) - 1239)) ^ a1))
                                                        - 8);
  return v3(v3, 136689414, 1868);
}

uint64_t sub_1CD1023C0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  _BOOL4 v20;

  v20 = v17 > v19;
  *(_DWORD *)(a14 + 4 * (a2 - 136689414)) = v15;
  if (v20 == a2 - 912297563 < ((v16 - 598) | 0x11A) + 1371874575)
    v20 = a2 - 912297563 < v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((977 * !v20) ^ v16)) - 8))();
}

uint64_t sub_1CD10243C(int a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ (46 * (v2 == 0)))) - ((a1 + 118) ^ 0x419)))();
}

uint64_t sub_1CD102470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t v10;
  int v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8 * (int)((((v12 + 1694736606) & 0x9AFC5BF7 ^ 0x26B) * (v11 > a10)) ^ v12))
                            - ((v12 - 2048383028) & 0x7A17D5E7)
                            + 441))();
}

uint64_t sub_1CD1024F4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((925 * (*(_DWORD *)(a14 + 4 * (v16 + v17 + 1)) == v15)) ^ (a1 + 588)))
                            - ((23 * (a1 ^ 0x1C8) - 265) | 0xC5u)
                            + 219))();
}

uint64_t sub_1CD102550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  unsigned int v6;
  int v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v11 + v10 >= (v9 - 68 + a5)) * v7) ^ v9))
                            - (((v9 - 43) | v6) ^ v8)))();
}

void sub_1CD10258C()
{
  JUMPOUT(0x1CD102510);
}

void sub_1CD102594()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_1CD10298C(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  _DWORD v5[2];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 24) - 1225351577 * ((2 * (a1 & 0x2B9C6F1D) - a1 + 1415811298) ^ 0x77F948F4);
  if (*(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19) - 159353952 >= 0)
    v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19) - 159353952;
  else
    v2 = 159353952 - *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19);
  if (*(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xC7F991DE6408E19) - 159353952 >= 0)
    v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xC7F991DE6408E19) - 159353952;
  else
    v3 = 159353952 - *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xC7F991DE6408E19);
  v6 = *(_QWORD *)(a1 + 8);
  v5[1] = (460628867 * ((1088039055 - (v5 | 0x40DA288F) + (v5 | 0xBF25D770)) ^ 0xF3B3550D)) ^ (v1 + 290);
  sub_1CD112038((uint64_t)v5);
  if (v2 >= v3)
    v4 = v3;
  else
    v4 = v2;
  __asm { BR              X16 }
}

uint64_t sub_1CD102B18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  _BOOL4 v15;

  v11 = v4 - 413931738;
  v12 = 4 * (v7 + v5);
  v13 = (*(_DWORD *)(*(_QWORD *)(v10 - 0xC7F991DE6408E15) + v12) ^ v6)
      - (*(_DWORD *)(*(_QWORD *)(v9 - 0xC7F991DE6408E15) + v12) ^ v6);
  *(_DWORD *)(*(_QWORD *)(a1 - 0xC7F991DE6408E15) + v12) = v13
                                                           + v6
                                                           - ((((v3 - 387) | 0x140) ^ (v8 + 434)) & (2 * v13));
  v15 = v7 - 1538539199 < 1733551910 && v7 - 1538539199 >= v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v15 * v2) ^ v3)) - 12))();
}

uint64_t sub_1CD102C2C()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 + 141438039 < (int)(v3 + 1266045501);
  if (v3 > 0x3489ADC2 != v2 + 141438039 < -881438147)
    v4 = v3 > 0x3489ADC2;
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v4 * (((v1 - 453) | 0x320) ^ 0x90)) ^ v1)))();
}

uint64_t sub_1CD102CA4()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 + 773424304 < (int)(v3 + 1898030669 + v1 + 903);
  if (v3 > 0xEDE5569 != v2 + 773424304 < (int)(((v1 + 27859501) & 0xFE56E7FA) - 249452628))
    v4 = v3 > 0xEDE5569;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((57 * v4) | v1)) - 4))();
}

uint64_t sub_1CD102D2C@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  uint64_t v16;
  int v17;
  int v18;
  _BOOL4 v19;

  v14 = v7 - 903;
  v15 = v12 > v6;
  v16 = 4 * (v10 + v8);
  v17 = v3 + 404716728 + (*(_DWORD *)(*(_QWORD *)(v13 - 0xC7F991DE6408E15) + v16) ^ 0x401477F0);
  *(_DWORD *)(*(_QWORD *)(a2 - 0xC7F991DE6408E15) + v16) = v17 + v9 - (v11 & (2 * v17));
  LODWORD(v16) = v10 + 1 + v4;
  v18 = v15 ^ ((int)v16 < a1 + 746);
  v19 = (int)v16 < v5;
  if (!v18)
    v15 = v19;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1163 * v15) ^ v14)) - 4))();
}

uint64_t sub_1CD102E28()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((v1 == (v2 - 202) + 0x5BD59A0E7E08128) * ((v2 ^ 0x338) - 444)) ^ v2))
                            - 4))();
}

uint64_t sub_1CD102E6C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v0 + 8 * ((691 * (v2 + v3 + ((v1 - 466) | 0x220u) + 538 - 1083 < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_1CD102EA8@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _BOOL4 v8;
  int v9;
  signed int v10;
  int v11;
  _BOOL4 v12;

  v6 = a1 - 1515627297;
  v7 = a1 - 321;
  v8 = v4 - 179107018 < -1201983204;
  v9 = (**(_DWORD **)(a2 - 0xC7F991DE6408E15) ^ 0x401477F0) + 1;
  **(_DWORD **)(a2 - 0xC7F991DE6408E15) = v9 + v3 - (v5 & (2 * v9));
  v10 = (v6 & 0x5A56A53A ^ 0xBEA6F4D2) + 2041856053;
  v11 = v8 ^ (v10 < -1201983204);
  v12 = v10 < v4 - 179107018;
  if (!v11)
    v8 = v12;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((269 * !v8) ^ v7)))(1515627834);
}

void sub_1CD102F7C()
{
  JUMPOUT(0x1CD102F10);
}

uint64_t sub_1CD102F88@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  _BOOL4 v17;
  int v18;
  _BOOL4 v19;

  v14 = (a1 - 229) | 0x33;
  v15 = 4 * (v10 + v8);
  v16 = v3 + 404716727 + (*(_DWORD *)(*(_QWORD *)(v13 - 0xC7F991DE6408E15) + v15) ^ v9);
  *(_DWORD *)(*(_QWORD *)(a2 - 0xC7F991DE6408E15) + v15) = v16 + v9 - ((v16 << ((v14 + 84) & 0xF6 ^ 0xC3)) & v11);
  v17 = v12 > v7;
  LODWORD(v15) = v10 + 1 + v5;
  v18 = v17 ^ ((int)v15 < v4);
  v19 = (int)v15 < v6;
  if (!v18)
    v17 = v19;
  return (*(uint64_t (**)(void))(v2 + 8 * ((350 * v17) ^ v14)))();
}

uint64_t sub_1CD103090()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((247 * (v2 + v3 - 1 < ((v1 + 393399162) & 0xE88D367D ^ 0x7FFFFBE7))) ^ (v1 + 596)))
                            - 8))();
}

uint64_t sub_1CD103108@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((197
                                          * (*(_DWORD *)(*(_QWORD *)(a1 - 0xC7F991DE6408E15)
                                                       + 4 * (v3 + v5 + ((v2 + 12) | 0x50u) - 1141)) == v4 + 262 * (((v2 + 12) | 0x50) ^ 0x470) - 1048)) ^ ((v2 + 12) | 0x50)))
                            - 8))();
}

uint64_t sub_1CD103174()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((108 * (((v1 ^ ((v3 + v2 - 2) < 0x7FFFFFFF)) & 1) == 0)) ^ v1))
                            - ((v1 - 1178509359) & 0x463E9E36)
                            + 536))();
}

uint64_t sub_1CD1031CC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)((197
                                               * (*(_DWORD *)(v1 + 4 * (v4 + (v2 ^ v3) + v6 - 1141)) == v5 + 262 * (v2 ^ v3 ^ 0x470) - 1048)) ^ v2 ^ v3))
                            - 8))();
}

void sub_1CD10321C(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  *(_DWORD *)(a1 - 0xC7F991DE6408E19) = (((v3 + v2) * (v1 - 1901766679)) ^ 0x5DFFADE4)
                                        - 1417683332
                                        + ((2 * (v3 + v2) * (v1 - 1901766679)) & 0xBBFF5BC8);
}

void sub_1CD1032A8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 1178560073 * (a1 ^ 0xBA947862);
  __asm { BR              X9 }
}

uint64_t sub_1CD103354@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((a1 - 527) ^ 0x348 ^ ((a1 + 4) | 0x108)) * (v1 != 0)) ^ a1))
                            - 8))();
}

uint64_t sub_1CD10339C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = (*(_BYTE *)(v3 - 0x27681A84B35EB0F1) & 1) == 0
    && (*(_DWORD *)(v2 + 16) ^ v0) - 193011051 < ((v1 - 478) | 0x100u) - 337;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v6 | (16 * v6)) ^ v1)) - 4))();
}

uint64_t sub_1CD103408@<X0>(uint64_t (*a1)(unsigned int *)@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;

  v11 = 3804331 * (((&a3 | 0xCAC897F1) - (&a3 & 0xCAC897F1)) ^ 0xB41DB207);
  a7 = v11 + 384812048;
  a3 = v11 + 1116194082;
  a4 = v11 + v10 + 248;
  a5 = v7;
  a6 = v8;
  v12 = a1(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((*(_DWORD *)(v8 - 0x27681A84B35EB0EDLL) != ((v10 + 369513487) & 0xE9F9ABF9) + 1645153504)
                                                        * ((v10 + 1017) ^ 0x500)) | v10))
                                          - 12))(v12);
}

void sub_1CD1034D8()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;

  v5 = v3 - (((v4 + 1008) ^ 0x989A24D6) & (2 * v3 - 386021972)) + 1087108037;
  *v7 = (HIBYTE(v5) ^ 0x4C) - ((v5 >> 23) & 0x64) + 50;
  v7[1] = (BYTE2(v5) ^ 0x4D) - ((v5 >> 15) & 0x64) + 50;
  v7[2] = (BYTE1(v5) ^ 0x10) - ((2 * (BYTE1(v5) ^ 0x10)) & 0x64) + 50;
  v7[3] = (v3 - (((v4 - 16) ^ 0xD6) & (2 * v3 - 84)) - 59) ^ 0xDD;
  v6 = v2 - ((2 * v2) & 0x3749B0E77A16C552) + 0x1BA4D873BD0B62A9;
  v7[4] = (HIBYTE(v6) ^ 0x1B) - ((2 * (HIBYTE(v6) ^ 0x1B)) & 0x64) + 50;
  v7[5] = (BYTE6(v6) ^ 0xA4) - ((2 * (BYTE6(v6) ^ 0xA4)) & 0x64) + 50;
  v7[6] = (BYTE5(v6) ^ 0xD8) + (~(2 * (BYTE5(v6) ^ 0xD8)) | 0x9B) + 51;
  v7[7] = (BYTE4(v6) ^ 0x73) - 2 * ((BYTE4(v6) ^ 0x73) & 0x36 ^ BYTE4(v6) & 4) + 50;
  v7[8] = (((v2 - ((2 * (_DWORD)v2) & 0x7A16C552) - 1123327319) >> 24) ^ 0xBD)
        - ((2 * (((v2 - ((2 * (_DWORD)v2) & 0x7A16C552) - 1123327319) >> 24) ^ 0xBD)) & 0x64)
        + 50;
  v7[9] = (BYTE2(v6) ^ 0xB) - ((2 * (BYTE2(v6) ^ 0xB)) & 0x64) + 50;
  v7[10] = (BYTE1(v6) ^ 0x62) - 2 * ((BYTE1(v6) ^ 0x62) & 0x36 ^ BYTE1(v6) & 4) + 50;
  v7[11] = (v2 - ((2 * v2) & 0x52) - 87) ^ 0x9B;
  *v0 = *(_DWORD *)(v1 - 0x27681A84B35EB0EDLL);
}

uint64_t sub_1CD103BC8(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v1 = 628203409 * (((a1 | 0xC21FEC2B) - (a1 & 0xC21FEC2B)) ^ 0x4097E018);
  v2 = *(_DWORD *)(a1 + 8) - v1;
  v3 = v1 + *(_DWORD *)(a1 + 12) - 507371026;
  v4 = (*(_DWORD *)(*(_QWORD *)a1 - 0x5C6940C6B1BC6FF6) ^ 0x6731FE54) + v3;
  v5 = v4 - ((2 * v4) & 0xCE63FCA8) + 1731329620;
  *(_DWORD *)(*(_QWORD *)a1 - 0x5C6940C6B1BC6FF6) = v5;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E89A15E0 + (v2 ^ 0x437)) + ((277 * ((v5 ^ 0x6731FE54) < v3)) ^ v2) - 1)
                            - 8))();
}

void sub_1CD103C90(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x5C6940C6B1BC6FFALL) = (*(_DWORD *)(a1 - 0x5C6940C6B1BC6FFALL) ^ 0x37D4814A)
                                         + 936673610
                                         - ((2 * (*(_DWORD *)(a1 - 0x5C6940C6B1BC6FFALL) ^ 0x37D4814A) + 2) & 0x6FA90294)
                                         + 1;
}

void sub_1CD103CD8(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  _BOOL4 v5;

  v1 = 235795823 * (((_DWORD)a1 - 1876425126 - 2 * (a1 & 0x9028065A)) ^ 0x4854F03);
  v2 = a1[9] + v1;
  v3 = *a1 ^ v1;
  v5 = (v3 & 0x30000000) == 0 || (v3 & 0x3F000000) == 603979776;
  __asm { BR              X11 }
}

uint64_t sub_1CD103DA8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, unsigned int a5, uint64_t a6, unint64_t *a7, int a8, unint64_t *a9, char a10, int a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v15 = *(_QWORD *)(v12 + 8);
  v16 = 1755732067
      * (((&a4 | 0xA5876138) - &a4 + (&a4 & 0x5A789EC0)) ^ 0x7B41DCE3);
  a8 = v16 + v14 + 301;
  a9 = &STACK[0xF250A47131524F5];
  a6 = v15;
  a7 = &STACK[0x4B30070DAA05F9E0];
  a10 = (99 * (((&a4 | 0x38) - &a4 + (&a4 & 0xC0)) ^ 0xE3)) ^ 0xC5;
  a5 = ((v11 ^ 0x1B729855) + 394248036 + ((v11 << ((v14 - 29) ^ 0x36)) & 0xFD3BA1FE ^ 0xC91A8154)) ^ v16;
  a4 = &STACK[0x330904BA72E93EC4];
  v17 = (*(uint64_t (**)(unint64_t **))(a1 + 8 * (v14 ^ 0x12F)))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((1381 * (a11 == 1645153785)) ^ v14)) - 8))(v17);
}

uint64_t sub_1CD103EE0()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)((((v2 + 724978375) & 0xD4C9B7A7 ^ 0x45A) * (v1 == 603979776)) ^ v2))
                            - ((v2 - 618880059) & 0x24E35BBB ^ 0x3B4)))();
}

uint64_t sub_1CD103F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * ((29 * (a10 + 4 >= a10)) ^ v10))
                                          - (v10 ^ 0x291 ^ (13 * (v10 ^ 0x6F5u)) ^ 0xCLL)))(a1);
}

uint64_t sub_1CD103FBC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (692 * (v1 != 0xD86A8E34)))) - 12))();
}

uint64_t sub_1CD104010@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v4 > 0x13057B94;
  *(_BYTE *)(a1 + (v7 - 281128576)) = *(_BYTE *)(v1 + (v7 - 281128576));
  if (v9 == v7 - 600254996 < v3)
    v9 = v7 - 600254996 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v9 * v6) ^ v2)) - 12))();
}

uint64_t sub_1CD104094()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((15
                                          * (((2 * v1) & 0xDF59FFDE ^ 0x90511C48)
                                           + (v1 ^ 0xB7C671DB)
                                           + ((v0 - 808) ^ 0xF7DF7F8F) != 1737260655)) ^ v0))
                            - 12))();
}

uint64_t sub_1CD104100()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2015
                                          * ((((v0 - 1873608687) < 0xC) ^ (-83 * (v1 ^ 4))) & 1)) ^ v1))
                            - (v1 + 69)
                            + 336))();
}

uint64_t sub_1CD10415C(int a1, int a2, int a3)
{
  char v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((28
                                          * (((a3 + a1 + v4 - (v3 & 3) + 1486) & 0xFFFFFFFC) <= a1
                                                                                              + v4
                                                                                              + ((((a2 - 878) | 0x304)
                                                                                                + a3) ^ (20 * (a2 ^ 0x77Eu))))) ^ a2))
                            - 12))();
}

uint64_t sub_1CD1041C4@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (v6 - 519);
  a3.i32[0] = *(_DWORD *)(a2 + (v8 ^ 0x4FF) + a1);
  *(_DWORD *)(a2 - 3 + (v3 + v4 + v8 - 1007 - 271)) = vmovn_s16((int16x8_t)vmovl_u8(a3)).u32[0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)((1019 * (v5 != 4)) ^ v8)) - 8))();
}

uint64_t sub_1CD104228@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(a1 - 3 + (v3 + v2)) = *(_DWORD *)(v1 - 3 + (v3 + v2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 4) * (((v4 - 71) | 2) ^ 0x77A)) ^ (v4 + 311))) - 8))();
}

uint64_t sub_1CD10427C(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((a1 - 660417817) & 0x275D2D5D ^ 0x127) * (v1 == v2)) ^ a1)) - 4))();
}

uint64_t sub_1CD1042BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + (v4 + v3)) = *(_BYTE *)(v1 + (v4 + v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((529 * (v4 - 1 != v2)) ^ (v5 + 40))) - (v5 ^ 0x2ECu) + 948))();
}

uint64_t sub_1CD1042FC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1570
                                          * ((((v0 - 696) ^ (*(_QWORD *)(v1 + 16) == 0x2E91F1FE0AA58417)) & 1) == 0)) ^ v0))
                            - 12))();
}

uint64_t sub_1CD104340@<X0>(uint64_t a1@<X8>, int a2, int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(a1 - 0x2E91F1FE0AA58417) = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8 * ((980 * (*(_QWORD *)(v4 + 24) != 0x5412677448247A30)) ^ (v3 - 612)))
                            - 8))();
}

void sub_1CD104398(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 - 0x5412677448247A30) = v2;
  *(_DWORD *)(v1 + 32) = 1645153785;
}

void sub_1CD104434(uint64_t a1)
{
  int v1;
  int v2;

  v1 = 1759421093 * (((a1 | 0x9EBEB665) - a1 + (a1 & 0x6141499A)) ^ 0x2DC30631);
  v2 = *(_DWORD *)(a1 + 16) + v1;
  __asm { BR              X14 }
}

uint64_t sub_1CD1044FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v7;
  uint64_t v8;
  unsigned int v9;

  v5 = 108757529 * ((1436736608 - (&v7 | 0x55A2DC60) + (&v7 | 0xAA5D239F)) ^ 0x4AC141B4);
  v8 = v1;
  v7 = v5 + v3 + 163;
  v9 = (v2 - ((((739 * (v3 ^ 0x312)) ^ 0xED4E0848) + v4) & 0xC39B409E) + 1484039958) ^ v5;
  return ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (v3 ^ 0x38E)) - 8))(&v7);
}

void sub_1CD104670(uint64_t a1, uint64_t a2)
{
  int v3;
  int v5;
  unint64_t *v6;
  int v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  v3 = 1178560073 * ((&v5 - 1556789680 - 2 * ((unint64_t)&v5 & 0xA3354650)) ^ 0x19A13E32);
  v5 = 1076023948 - v3;
  v6 = &STACK[0x5C6940C6B1BC70A6];
  v7 = 1172345435 - v3;
  sub_1CD0EF38C((uint64_t)&v5);
  __asm { BR              X9 }
}

uint64_t sub_1CD104814()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;

  v5 = v1 - 2147479261;
  if (v5 <= 0x40)
    v5 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((659 * (v4 - v0 - v2 + v5 > 0xE)) ^ 0x492u)) - 12))();
}

uint64_t sub_1CD104880(unsigned int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  v7 = v2 + v1;
  v8 = v7 - 2147479261;
  if ((v7 - 2147479261) <= 0x40)
    v8 = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((11 * (v6 - v7 >= (v4 + v8))) ^ a1)) - 12))();
}

uint64_t sub_1CD1048C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  int v23;
  int v24;
  uint64_t v25;

  return ((uint64_t (*)(void))(*(_QWORD *)(v25
                                        + 8
                                        * ((46
                                          * ((unint64_t)(&a23 + a14 + (v23 + v24 + 1975)) > 0xF)) | 0x581u))
                            - 4))();
}

uint64_t sub_1CD104930@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int8x16_t *v6;
  int v7;
  int8x16_t v8;
  int8x16_t v9;

  v7 = 638 * (v4 ^ 0x517);
  v8.i64[0] = 0x6464646464646464;
  v8.i64[1] = 0x6464646464646464;
  v9.i64[0] = 0x3232323232323232;
  v9.i64[1] = 0x3232323232323232;
  *(int8x16_t *)(v2 + a1 + (v7 ^ 0x17D ^ (v1 + 897))) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v8)), v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((489 * (((v3 + 1) & 0x1FFFFFFF0) != 16)) ^ v7))
                            - 8))();
}

void sub_1CD1049B4()
{
  JUMPOUT(0x1CD104974);
}

uint64_t sub_1CD1049C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * (((((v3 - 1867562114) & 0x50B70A) + 879) * (v1 == v2)) ^ v3))
                                                   - (v3
                                                    - 735)
                                                   + 670))(a1, 2427853056);
}

uint64_t sub_1CD104A10@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  *(&a17 + (a2 + v17)) = *(_BYTE *)(v18 + v21 - 1473562207)
                                     - ((*(unsigned __int8 *)(v18 + v21 - 1473562207) << ((v19 + 104) ^ 0xB)) & 0x64)
                                     + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((107 * ((a1 + a2 + 49) > 0x3F)) ^ v19)) - 12))();
}

uint64_t sub_1CD104A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int32x4_t a41,int32x4_t a42,int32x4_t a43,int32x4_t a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t (*v52)(__n128, __n128, __n128, __n128, __n128);
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint8x16_t v62;
  uint16x8_t v63;
  int8x16_t v64;
  uint16x8_t v65;
  int8x16_t v66;
  uint8x16_t v67;
  uint16x8_t v68;
  uint16x8_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int8x16_t v72;
  int8x16_t v73;
  uint8x16_t v74;
  int8x16_t v77;
  int8x16_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int v86;
  int v87;
  char *v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v94;
  uint8x16_t v95;
  uint16x8_t v96;
  uint16x8_t v97;
  uint8x16_t v98;
  uint8x16_t v103;
  uint16x8_t v104;
  uint16x8_t v105;
  int32x4_t v106;
  int32x4_t v107;
  int32x4_t v108;
  int32x4_t v109;
  uint64_t v110;
  _DWORD *v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  int v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  int8x16x4_t v124;
  int8x16x4_t v125;

  v120 = v45;
  v52 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v46 + 8 * v44) - 4);
  v53.n128_u64[0] = 0x3232323232323232;
  v53.n128_u64[1] = 0x3232323232323232;
  v54 = (__n128)vdupq_n_s32(0x620F0DFFu);
  v55 = (__n128)vdupq_n_s32(0x620F0DF9u);
  v123 = v51 - 16;
  v56.n128_u64[0] = 0x6464646464646464;
  v56.n128_u64[1] = 0x6464646464646464;
  v57 = (__n128)vdupq_n_s32(0xC41E1BF2);
  HIDWORD(a13) = a13 + 972540699;
  v58 = HIDWORD(a31);
  v59 = a33;
  v60 = BYTE4(a34) ^ 0x5F;
  HIDWORD(a16) = BYTE4(a34) ^ 0x5F;
  if (v60 == 2)
  {
    v121 = __PAIR64__(a32, HIDWORD(a31));
    v122 = __PAIR64__(a33, HIDWORD(a32));
    v125 = vld4q_s8((const char *)&a22 + 4);
    v94 = a6 + a5 + 337;
    LODWORD(a16) = HIDWORD(a33);
    v95 = (uint8x16_t)veorq_s8(v125.val[0], (int8x16_t)v53);
    v96 = vmovl_u8(*(uint8x8_t *)v95.i8);
    v97 = vmovl_high_u8(v95);
    v98 = (uint8x16_t)veorq_s8(v125.val[1], (int8x16_t)v53);
    _Q22 = vmovl_u8(*(uint8x8_t *)v98.i8);
    _Q21 = vmovl_high_u8(v98);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v103 = (uint8x16_t)veorq_s8(v125.val[2], (int8x16_t)v53);
    v104 = vmovl_high_u8(v103);
    v105 = vmovl_u8(*(uint8x8_t *)v103.i8);
    v125.val[0] = veorq_s8(v125.val[3], (int8x16_t)v53);
    v125.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v125.val[0]);
    v125.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v125.val[1]);
    v125.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v125.val[1].i8);
    v125.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v125.val[0].i8);
    v125.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v125.val[0]);
    v125.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v125.val[0].i8);
    v106 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v105.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v96.i8), 0x18uLL)), v125.val[0]);
    v107 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v105, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v96), 0x18uLL)), v125.val[3]);
    v108 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v104.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v97.i8), 0x18uLL)), v125.val[1]);
    v109 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v104, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v97), 0x18uLL)), v125.val[2]);
    v125.val[0] = veorq_s8(vandq_s8((int8x16_t)v106, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)v125.val & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v125.val[3] = veorq_s8(vandq_s8((int8x16_t)v107, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v125.val[3] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v125.val[1] = veorq_s8(vandq_s8((int8x16_t)v108, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v125.val[1] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v125.val[2] = veorq_s8(vandq_s8((int8x16_t)v109, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v125.val[2] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    a43 = vaddq_s32(vsubq_s32(v108, vaddq_s32((int32x4_t)v125.val[1], (int32x4_t)v125.val[1])), (int32x4_t)v55);
    a44 = vaddq_s32(vsubq_s32(v109, vaddq_s32((int32x4_t)v125.val[2], (int32x4_t)v125.val[2])), (int32x4_t)v55);
    a41 = vaddq_s32(vsubq_s32(v106, vaddq_s32((int32x4_t)v125.val[0], (int32x4_t)v125.val[0])), (int32x4_t)v55);
    a42 = vaddq_s32(vsubq_s32(v107, vaddq_s32((int32x4_t)v125.val[3], (int32x4_t)v125.val[3])), (int32x4_t)v55);
    v110 = v94 ^ 0x184u;
    v111 = (_DWORD *)&a41 + v49 + 1580584629;
    v112 = *(v111 - 8) ^ *(v111 - 3);
    v113 = v110 ^ (v50 + 340);
    v114 = *(v111 - 16);
    v115 = v114 ^ *(v111 - 14) ^ (v112 + v113 - ((2 * v112) & 0xC41E1BF2));
    HIDWORD(v117) = v115 ^ v50;
    LODWORD(v117) = v115;
    v116 = v117 >> 31;
    v118 = (v50 + v116);
    *v111 = v118 - ((2 * v116) & 0xC41E1BF2);
    v119 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * ((1617 * (v51 != 1580584566)) ^ v94)) - 12);
    return v119(v110, 1580584630, v58, v59, v119, v118, v114, v113, a9, a10, a11, a12, a13, a14, v120, a16, v121, v122, v52,
             v123,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40);
  }
  else if (v60 == 1)
  {
    v124 = vld4q_s8((const char *)&a22 + 4);
    v61 = 41 * (a5 ^ (a5 - 13));
    v62 = (uint8x16_t)veorq_s8(v124.val[0], (int8x16_t)v53);
    v63 = vmovl_high_u8(v62);
    v64 = (int8x16_t)vmovl_high_u16(v63);
    v65 = vmovl_u8(*(uint8x8_t *)v62.i8);
    v66 = (int8x16_t)vmovl_high_u16(v65);
    v67 = (uint8x16_t)veorq_s8(v124.val[1], (int8x16_t)v53);
    v68 = vmovl_u8(*(uint8x8_t *)v67.i8);
    v69 = vmovl_high_u8(v67);
    v70 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v68.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v65.i8));
    v71 = vorrq_s8((int8x16_t)vshll_high_n_u16(v68, 8uLL), v66);
    v72 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v69.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v63.i8));
    v73 = vorrq_s8((int8x16_t)vshll_high_n_u16(v69, 8uLL), v64);
    v74 = (uint8x16_t)veorq_s8(v124.val[2], (int8x16_t)v53);
    _Q22 = (int8x16_t)vmovl_high_u8(v74);
    _Q21 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v74.i8);
    v77 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v82 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v124.val[0] = veorq_s8(v124.val[3], (int8x16_t)v53);
    v124.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v124.val[0].i8);
    v124.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v124.val[0]);
    v83 = (int32x4_t)vorrq_s8(vorrq_s8(v70, v77), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v124.val[1].i8), 0x18uLL));
    v124.val[1] = vorrq_s8(vorrq_s8(v71, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v124.val[1]), 0x18uLL));
    v84 = (int32x4_t)vorrq_s8(vorrq_s8(v72, v82), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v124.val[0].i8), 0x18uLL));
    v85 = (int32x4_t)vorrq_s8(vorrq_s8(v73, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v124.val[0]), 0x18uLL));
    a43 = vaddq_s32(vsubq_s32(v84, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v84, v84), (int8x16_t)v57)), (int32x4_t)v55);
    a44 = vaddq_s32(vsubq_s32(v85, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v85, v85), (int8x16_t)v57)), (int32x4_t)v55);
    a41 = vaddq_s32(vsubq_s32(v83, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v83, v83), (int8x16_t)v57)), (int32x4_t)v55);
    a42 = vaddq_s32(vsubq_s32((int32x4_t)v124.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v124.val[1], (int32x4_t)v124.val[1]), (int8x16_t)v57)), (int32x4_t)v55);
    v86 = (HIDWORD(a31) ^ (v47 + (v61 ^ 0x3FF) - 490))
        + ((a33 ^ v47) & (a32 ^ 0xAEC4588A) | (a32 ^ v47) & (HIDWORD(a32) ^ v47))
        - 2059938322
        + *((_DWORD *)*(&off_1E89A15E0 + (int)v61 - 387) + v123 + v49 - 1)
        + (a41.i32[(*((_BYTE *)*(&off_1E89A15E0 + (int)(v61 ^ 0x235)) + v123 + v49 - 4) - 31)] ^ v50);
    v87 = v86 + v47 - (v48 & (2 * v86));
    v88 = (char *)*(&off_1E89A15E0 + (int)(v61 ^ 0x278)) - 4;
    v89 = (((v87 ^ v47) << (v88[v123 + v49] - 98)) | ((v87 ^ v47) >> (98 - v88[v123 + v49]))) + (a32 ^ v47);
    v90 = v48 & (2 * v89);
    v91 = v89 + v47 - v90;
    v92 = *(uint64_t (**)(char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * (int)(v61 | 0xEA));
    return v92(v88, v61, v92, a33, v90, 1580584629, HIDWORD(a32), v91, a9, a10, a11, a12, a13, a14, v45, a16, __PAIR64__(a32, HIDWORD(a31)), __PAIR64__(a33, HIDWORD(a32)), v52,
             v123,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40);
  }
  else
  {
    HIDWORD(a31) = 2 * (HIDWORD(a31) ^ v47) + v47 - (v48 & (4 * (HIDWORD(a31) ^ v47)));
    LODWORD(a32) = 2 * (a32 ^ v47) + v47 - (v48 & (4 * (a32 ^ v47)));
    HIDWORD(a32) = 2 * (HIDWORD(a32) ^ v47) + v47 - (v48 & (4 * (HIDWORD(a32) ^ v47)));
    LODWORD(a33) = 2 * (a33 ^ v47) + v47 - (v48 & (4 * (a33 ^ v47)));
    return v52(v53, v54, v55, v56, v57);
  }
}

uint64_t sub_1CD1055B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  unsigned int v15;
  uint64_t v16;
  _BOOL4 v17;

  if (v15 < 0x9BE37C17 != (a15 + 1141814776) < 0x9BE37C17)
    v17 = (a15 + 1141814776) < 0x9BE37C17;
  else
    v17 = a15 + 1141814776 > v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((!v17 * (((a6 + a5 - 187) | 0x210) - 511)) ^ (a6 + a5 + 1100)))
                            - 8))();
}

uint64_t sub_1CD10564C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((1951 * (v5 - 152100823 + v6 - 60 + a5 + v6 - 820 >= (v5 + a4))) ^ v6))
                            - 4))();
}

uint64_t sub_1CD105694(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v16
                                        + 8
                                        * ((460
                                          * (a14
                                           + v15
                                           - (unint64_t)(v14 - 152100823 + a5 + a1 - 760 + 697) < 0x10)) ^ a1))
                            - 4))();
}

uint64_t sub_1CD1056E0@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  char v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v6 + v8) = *(_BYTE *)(v10 + (v5 + a1))
                      - (v4 & (2 * *(_BYTE *)(v10 + (v5 + a1))))
                      + 50;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + 1 == (a4 ^ (a2 - 57)) + 7) * v7) ^ (a3 + a4 + 371))))();
}

uint64_t sub_1CD105730@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>, int8x16_t a7@<Q0>, int8x16_t a8@<Q3>)
{
  int v8;
  int8x16_t *v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;

  v12 = *(int8x16_t *)(v11 + v8 + (((a6 ^ (a2 - 3)) * a4) ^ (a1 - 9)));
  *v9 = vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), a8)), a7);
  return (*(uint64_t (**)(void))(v10 + 8 * (a5 ^ (a3 + a6 + 393))))();
}

uint64_t sub_1CD105794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  unsigned int v14;
  uint64_t v15;
  _BOOL4 v16;

  v16 = v13 + 1674314577 < (a13 + 1505040564);
  if ((a13 + 1505040564) < 0xBBA0C9B0 != (v13 + 1674314577) < 0xBBA0C9B0)
    v16 = (a13 + 1505040564) < 0xBBA0C9B0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (int)((v16 | (2 * v16)) ^ v14)) - (v14 ^ 0x2B1)))();
}

uint64_t sub_1CD105804(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v39;

  v34 = (a2 - 113401905) & 0xB7FE76BF;
  v35 = 628203409 * ((~((v33 - 120) | 0xCC5631E2) + ((v33 - 120) & 0xCC5631E2)) ^ 0xB121C22E);
  v39 = (a2 + 415) | 0x10;
  *(_QWORD *)(v33 - 120) = a11;
  *(_DWORD *)(v33 - 112) = v35 + a2 + 1005;
  *(_DWORD *)(v33 - 108) = a13 - v35 - 1135465194;
  v36 = sub_1CD103BC8(v33 - 120);
  v37 = a32 & 0x3F;
  *(&a23 + (v37 ^ 0x14)) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v32
                                                      + 8 * ((223 * ((v37 ^ 0x14) > v39 - 424)) ^ a2))
                                          - (v34 ^ 0xB13C16B3)))(v36);
}

uint64_t sub_1CD10591C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((44 * (((v6 == 63) ^ (v7 - a6)) & 1)) ^ v7))
                            - ((v7 + 202) ^ 0x2ADLL)))();
}

uint64_t sub_1CD105954()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((27 * ((((v1 ^ 0x6B0) - 1006) ^ v0) < 8)) ^ v1)) - 4))();
}

uint64_t sub_1CD10598C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  int v23;
  unsigned int v24;
  char v25;
  uint64_t v26;

  *(_QWORD *)(&a23 + v24 + 1) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((342 * ((v25 & 0x38) == 8)) ^ v23))
                            - ((v23 - 570) ^ 0x1DBLL)))();
}

uint64_t sub_1CD1059D8(double a1)
{
  double *v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *v1 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v4) ^ v2)) - (v3 ^ 0x1DB)))();
}

uint64_t sub_1CD105A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v6 ^ (877 * (v8 != v7))))
                            + 2973505203
                            - (v6 - a6)
                            + 8))();
}

void sub_1CD105A38()
{
  JUMPOUT(0x1CD104A88);
}

uint64_t sub_1CD105A48@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18)
{
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL4 v25;
  unsigned int v26;
  int v27;
  _BOOL4 v28;

  v25 = v18 < v20;
  *(&a18 + 12 * (v21 ^ 0x2BDu) + a3 + v22) = *(_BYTE *)(v24 + (v19 + a2))
                                           - ((2 * *(_BYTE *)(v24 + (v19 + a2))) & 0x64)
                                           + 50;
  v26 = v19 + 1 + a1;
  v27 = v25 ^ (v26 < v20);
  v28 = v26 < v18;
  if (!v27)
    v25 = v28;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((v25 | (2 * v25)) ^ v21)) - 8))();
}

uint64_t sub_1CD105AC4@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1039 * (a3 - 1370612763 < ((277 * (v4 ^ (a1 - 5))) ^ 0x551u))) ^ (a2 + v4 + 233)))
                            - 12))();
}

uint64_t sub_1CD105B10@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1;
  v4 = a1 - 1370612763;
  if ((unint64_t)(v4 + 1) > 0x38)
    v5 = v4 + 1;
  else
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((unint64_t)(v5 - v3 + 1370612763) > 7)
                                               * ((v1 + 1837422910) & 0x927B23FB ^ 0xB5)) | v1))
                            - 12))();
}

uint64_t sub_1CD105B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  *(_QWORD *)(&a23 + v24 - 1370612763) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26
                                        + 8
                                        * ((863 * ((v23 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ ((v25 - 1837423955) | 0x29)))
                            - ((((v25 - 1837423955) | 0x29u) + 331) ^ 0x2C4)))();
}

uint64_t sub_1CD105BEC(double a1)
{
  int v1;
  uint64_t v2;
  double *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *v3 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v4) ^ v1)) - (v2 ^ 0x2C4)))();
}

uint64_t sub_1CD105C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v7 ^ (1953 * (v5 != v6))))
                            - ((a5 + ((v7 - 581) | 0x220u) - 675) ^ 0xB13C16B3)))();
}

void sub_1CD105C58()
{
  JUMPOUT(0x1CD104A88);
}

uint64_t sub_1CD106108@<X0>(uint64_t a1@<X2>, char a2@<W4>, char a3@<W5>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  int v35;
  _BOOL4 v36;

  v35 = *((_DWORD *)&a19 + ((v33 + v31) >> (a3 + a2 + v32 + 13 + 35)) + 18);
  *(_BYTE *)(a1 + (v33 + v31 + 1)) = (BYTE2(v35) ^ 0x3B) - ((2 * (BYTE2(v35) ^ 0x3B)) & 0x64) + 50;
  *(_BYTE *)(a1 + (v33 + v31)) = (HIBYTE(v35) ^ 0x51) - ((2 * (HIBYTE(v35) ^ 0x51)) & 0x64) + 50;
  *(_BYTE *)(a1 + (v33 + v31 + 3)) = v35 ^ 0x47;
  *(_BYTE *)(a1 + (v33 + v31 + 2)) = (BYTE1(v35) ^ 0xA7) - ((2 * (BYTE1(v35) ^ 0xA7)) & 0x64) + 50;
  if (v33 + 1230102376 < a4 != a31 - 1338440525 < a4)
    v36 = a31 - 1338440525 < a4;
  else
    v36 = v33 + 1230102376 < (a31 - 1338440525);
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * ((496 * !v36) ^ v32)) - 8))();
}

void sub_1CD10628C()
{
  JUMPOUT(0x1CD106250);
}

uint64_t sub_1CD106298()
{
  return 0;
}

void sub_1CD1062D8(uint64_t a1)
{
  int v1;

  v1 = 1178560073 * ((-2 - ((a1 | 0xAE85A791) + (~(_DWORD)a1 | 0x517A586E))) ^ 0xEBEE200C);
  __asm { BR              X10 }
}

uint64_t sub_1CD106374@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 != ((v1 + 1075) ^ 0x5A312C9E)) * (v1 - 253)) ^ (v1 + 363)))
                            - 4))();
}

uint64_t sub_1CD1063C8@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v1 + 939) ^ 0x26)) - 4))();
}

uint64_t sub_1CD1064F0@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * ((127 * (((v5 - 36) ^ (v4 == ((v5 + a1) & a2) + v3)) & 1)) ^ v5))
                            - 4))();
}

uint64_t sub_1CD10652C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1465 * (v1 != 461 * (v2 ^ 0x29C) - 1383)) ^ v2)) - 4))();
}

uint64_t sub_1CD106560@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;

  *(_DWORD *)(*(_QWORD *)(v3 - 0xC7F991DE6408E15) + 4 * (v2 + v1)) = v4;
  v6 = v2 + v5 + 712 - 1382;
  *(_DWORD *)(v3 - 0xC7F991DE6408E19) = v6;
  v7 = v6 + v1;
  if (v6 + v1 < 0)
    v7 = -v7;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((69
                                * ((v7 ^ 0x3D7FACEB)
                                 + (((v5 + 712) ^ 0x7AFF5CB1) & (2 * v7))
                                 - 1031777824
                                 + ((((v5 + 712) ^ 0x5F2) + 123) | 0x24) >= 0)) ^ (v5 + 712) ^ 0x5F2)))();
}

uint64_t sub_1CD106638@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  _QWORD *v4;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((*(_DWORD *)(*v4 + 4 * a1) == v2) * ((v3 + 1043585895) & 0xC1CC2537 ^ 0x4C6)) ^ v3)))();
}

uint64_t sub_1CD106678@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * ((69 * (v2 - 1 + ((v1 + 123) | 0x24) >= 0)) ^ v1)))();
}

uint64_t sub_1CD1066B0(uint64_t result)
{
  int v1;
  int v2;
  int v3;
  int *v4;
  int v5;
  int v6;

  if ((v1 + v2 - 1) >= 0x7FFFFFFF)
    v6 = -v3;
  else
    v6 = v5;
  *v4 = v6;
  *(_DWORD *)(result + 24) = 1261507126;
  return result;
}

void sub_1CD1066F4(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;

  v1 = 1178560073 * ((-2 - ((a1 | 0x5A50E64C) + (~(_DWORD)a1 | 0xA5AF19B3))) ^ 0x1F3B61D1);
  v2 = *(_DWORD *)(a1 + 40) ^ v1;
  if (*(_QWORD *)(a1 + 48) | *(_QWORD *)(a1 + 64))
    v3 = *(_DWORD *)(a1 + 24) + v1 == 1354219139;
  else
    v3 = 1;
  v4 = !v3;
  __asm { BR              X9 }
}

uint64_t sub_1CD10684C@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  BOOL v4;

  v4 = v1[1] == 0x1171F84DB0CF5C20 || (v1[7] | v1[4]) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1402 * (((a1 + 56) ^ v4) & 1)) ^ a1)) - 8))();
}

uint64_t sub_1CD1068A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = *(_QWORD *)(v35 + 72);
  *(_DWORD *)(v33 - 0x1171F84DB0CF5C20) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((2043 * (v37 != 0xC7F991DE6408E1DLL)) ^ v32)))(v37, 0x7542B2AE5773797, &a25, &a30, &a32, &a28, &a20, 0xC7F991DE6408E1DLL, a9, a10, v34);
}

uint64_t sub_1CD106940@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * (((a8 - 925) * (v10 == 0)) ^ (a8 - 363))) - ((a8 + 1873335829) & 0x905726BF ^ 0x86)))(a3 + a7, a1, a2, a3, a4, a5, a6, a7, a9, a10);
}

uint64_t sub_1CD106A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v27 = v18 ^ 0x6A4;
  v28 = ((v26 - 1956630864 - 2 * ((v26 - 144) & 0x8B602F40)) ^ 0x31F45722) * v19;
  *(_DWORD *)(v26 - 116) = v28 + v21 + (v18 ^ 0x9796BF8);
  *(_QWORD *)(v26 - 136) = v20;
  *(_QWORD *)(v26 - 128) = a1;
  *(_DWORD *)(v26 - 144) = v28 + v18 + 166;
  ((void (*)(uint64_t))(*(_QWORD *)(v22 + 8 * (v18 - 21)) - 12))(v26 - 144);
  *(_QWORD *)(v26 - 144) = v23;
  *(_QWORD *)(v26 - 136) = a16;
  *(_DWORD *)(v26 - 128) = (v27 - 44) ^ (628203409
                                       * ((((2 * (v26 - 144)) | 0x6174B83A) - (v26 - 144) + 1329964003) ^ 0x3232502E));
  ((void (*)(uint64_t))(*(_QWORD *)(v22 + 8 * (v27 - 1446)) - 12))(v26 - 144);
  *(_QWORD *)(v26 - 144) = a17;
  *(_QWORD *)(v26 - 136) = a16;
  *(_DWORD *)(v26 - 128) = v27
                         + 1374699841 * (((~(v26 - 144) & 0xF8095E0E) - (~(v26 - 144) | 0xF8095E0F)) ^ 0x95FD4606)
                         - 507;
  *(_QWORD *)(v26 - 112) = a15;
  *(_QWORD *)(v26 - 104) = v23;
  *(_QWORD *)(v26 - 120) = a18;
  v29 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v27 - 1361)))(v26 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24
                                                      + 8
                                                      * (int)(((((v27 + 870714261) & 0xCC19EECB) - 135) * (v25 == 0)) | v27))
                                          - 4))(v29);
}

uint64_t sub_1CD106C8C()
{
  _DWORD *v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  int v9;
  _DWORD *v10;

  v6 = 535753261 * (((((v5 - 144) | 0x615B03DC) ^ 0xFFFFFFFE) - (~(v5 - 144) | 0x9EA4FC23)) ^ 0x9450F20C);
  *(_DWORD *)(v5 - 144) = (v2 - 1439 + v1 - 510816560) ^ v6;
  *(_DWORD *)(v5 - 128) = v2 - 1439 - v6 + 289;
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 136) = v8;
  result = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * (v2 - 1462)) - 8))(v5 - 144);
  *v10 = v9;
  *v0 = 1645153785;
  return result;
}

void sub_1CD106DE0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _DWORD v3[2];
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 4) ^ (1755732067 * (((a1 | 0x83D72B3C) - (a1 & 0x83D72B3C)) ^ 0x5D1196E7));
  v2 = *(_QWORD *)(a1 + 8);
  v3[0] = v1 + 628203409 * (((v3 | 0xF56E3C19) + (~v3 | 0xA91C3E6)) ^ 0x77E6302B) - 501;
  v4 = v2;
  sub_1CD0F31A8((uint64_t)v3);
  __asm { BR              X9 }
}

uint64_t sub_1CD106F18@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v7;

  v5 = (((v4 ^ v3) >> 4) & 0xFFF6EF8 ^ 0x5AA4270) + (((v4 ^ v3) >> 5) ^ 0x6D2A9EC5) - 375855535;
  v7 = v5 > v1 + 1503173062 && v5 < v2 + 1503174093;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((948 * v7) ^ v1)) - (((v1 - 882) | 0xAu) ^ 0x92)))();
}

uint64_t sub_1CD106FA0@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)((((v1 & 0x1F) != 8) * ((v2 + 1656200023) & 0x9D4866EF ^ 0x28F)) ^ v2))
                            - 8))();
}

uint64_t sub_1CD106FE8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                     + 8
                                                     * (((((v2 ^ 0x2B) + 325) ^ (v2 + 289))
                                                       * ((v1 + 1879029626) > 0x7FFFFFFE)) ^ v2))
                                         - 8))((((v2 ^ 0x2B) + 325) ^ (v2 + 289)) * ((v1 + 1879029626) > 0x7FFFFFFE));
}

void sub_1CD107048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  char v6;
  int v7;
  int v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;

  v13 = v5 + 1879029627;
  v14 = *(_QWORD *)(v11 - 0xC7F991DE6408E15);
  v15 = (*(_DWORD *)(v14 + 4 * (v12 - 1)) ^ (a5 + v7 - 1030)) >> v6;
  v16 = 4 * v13;
  *(_DWORD *)(v14 + v16) = v15 + v7 - (v8 & (2 * v15));
  v17 = v18 - (*(_DWORD *)(*(_QWORD *)(v11 - 0xC7F991DE6408E15) + v16) == v7);
  if ((*v9 + v10) >= 0x7FFFFFFF)
    v17 = 318707904 - v17;
  *v9 = v17;
}

void sub_1CD107308(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1CD10737C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((2
                                          * (((a1 - 1206753083) ^ 0x7FFF75CFFFFAEFB9)
                                           - 0x7FFF75CF03D79510
                                           + ((2 * (a1 - 1206753083)) & 0x1FFF5DF72) == 4230175401)) | 0x14Cu))
                            - 8))();
}

uint64_t sub_1CD107410()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v6 = *(unsigned __int8 *)(v4 + v3 - 0x2500E162B343AFF1) - *(unsigned __int8 *)(v1 + v3 - 0x2500E162B343AFF1);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * (((((((2 * v2) ^ 0x61E) - 1769999280) & (2 * v6)) + (v6 ^ v0) == v0)
                                                        * (v2 ^ 0x41C)) ^ v2))
                                          - 8))(4294925278);
}

uint64_t sub_1CD107478()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = v1 < v0;
  if (v5 == v2 - 0x2500E161B7205547 < v0)
    v5 = v2 - 0x2500E161B7205547 < v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v3 ^ (2 * !v5))) - (v3 ^ 0x2E5u) + 929))();
}

uint64_t sub_1CD1074E0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v1 ^ (1203 * (a1 == 1206753092))))
                                          - (((v1 ^ 0x251u) + 1267140013) ^ 0x4B8707ADLL)))(4294925278);
}

uint64_t sub_1CD107534()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1697
                                          * (((2 * (*v0 - 42)) & 0xEDBE4FCE) + ((*v0 - 42) ^ 0x76DF27E7) == 1994336231)) ^ v1))
                            - ((v1 - 38) | 0x25u)
                            + 491))();
}

uint64_t sub_1CD10759C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1010
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                           + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v0) == v0 + v3 - 1 - 503)) ^ v3))
                            - 12))();
}

uint64_t sub_1CD1075EC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1360
                                          * ((((*(unsigned __int8 *)(v2 + 2) - 72) << (v3 + 9)) & v1)
                                           + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)) ^ v3))
                            - 12))();
}

uint64_t sub_1CD10764C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((2015
                                          * (((((v3 - 257) | 0x100) ^ (v1 - 405)) & (2
                                                                                   * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                           + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0)) ^ v3))
                            - 12))();
}

uint64_t sub_1CD10769C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1473
                                          * ((((*(unsigned __int8 *)(v2 + 4) - 247) << (v3 + 9)) & v1)
                                           + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0)) ^ v3))
                            - 12))();
}

uint64_t sub_1CD1076E8(int a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((2026
                                          * (((((v3 - 115) | 0x72) ^ a1) & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                           + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v1) == v1)) ^ v3))
                            - 12))();
}

uint64_t sub_1CD107738()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                           + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)
                                          * (((v3 - 152) | 0x97) + 908)) ^ v3))
                            - 12))();
}

uint64_t sub_1CD107784()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1901
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v0) == v0 + v4 - 503)) ^ v3))
                            - 12))();
}

uint64_t sub_1CD1077D0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                           + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v0) == v0)
                                          * (((v3 - 4) | 3) ^ 0x383)) ^ v3))
                            - 12))();
}

uint64_t sub_1CD10781C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 + 96) + 1428) = 527506314;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((*(_DWORD *)(a2 + 4) == v2) * (v3 - 333)) ^ (v3 - 165)))
                            - ((v3 - 2031810561) & 0x791AF7FF ^ 0x1FBLL)))();
}

uint64_t sub_1CD107880(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((11
                                          * ((v3 & (2 * (**(unsigned __int8 **)(a2 + 8) - 42)))
                                           + ((**(unsigned __int8 **)(a2 + 8) - 42) ^ v2) == v2)) ^ v4))
                            - ((v4 - 239) ^ 0x104)))();
}

uint64_t sub_1CD1078C8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((907
                                          * ((((*(unsigned __int8 *)(v3 + 1) - 134) << (v2 ^ 0xF6)) & v1)
                                           + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD10790C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                           + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == v0)
                                          * ((66 * (v2 ^ 0x1F3)) ^ 0x2E3)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD107954()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1925
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                           + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v0) == v0)) ^ v2))
                            - ((v2 + 1802593605) & 0x948E99CB ^ 0x104)))();
}

uint64_t sub_1CD1079A8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                           + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v0) == v0)
                                          * (v2 + 1339)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD1079E0()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((1627
                                               * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                                + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == v0)) ^ v2))
                            - (v2 ^ 0x1FBLL)))();
}

uint64_t sub_1CD107A24(int a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1809
                                          * ((v2 & (2 * (*(unsigned __int8 *)(v4 + 6) - 1)))
                                           + ((*(unsigned __int8 *)(v4 + 6) - 1) ^ v1) == v1 + a1 - 264)) ^ v3))
                            - 12))();
}

uint64_t sub_1CD107A64()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1896
                                          * (((v2 ^ 0xFF ^ (v1 - 264)) & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD107AA4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((637
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                           + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v0) == v0
                                                                                        + ((v2 + 340298752) & 0xEBB7735B)
                                                                                        - 339)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD107AFC(int a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(*(_QWORD *)(v4 + 96) + 1428) = 527506318;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*(_DWORD *)(a2 + 4) == v2) * (((a1 - 337) | 0x290) - 494)) | a1))
                            - 12))();
}

uint64_t sub_1CD107B4C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v6 << (31 * (v4 ^ 1) - 22)) & v3) + (v6 ^ v2) != v2) * ((v4 ^ 0x101) + 22)) ^ v4))
                            - 12))();
}

uint64_t sub_1CD107BA0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1370
                                          * (((v1 + ((v2 + 1269073064) & 0xB45B7B7F) - 319) & (2
                                                                                             * (*(unsigned __int8 *)(v3 + 1)
                                                                                              - 134)))
                                           + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD107BF4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((177
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                           + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == v0)) ^ v2))
                            - (v2 + 40)
                            + 307))();
}

uint64_t sub_1CD107C30()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1410
                                          * (((v1 + v3 - 319) & (2 * (*(unsigned __int8 *)(v4 + 3) - 134)))
                                           + ((*(unsigned __int8 *)(v4 + 3) - 134) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD107C6C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1878
                                          * ((((*(unsigned __int8 *)(v3 + 4) - 247) << (((v2 + 104) & 0xBF) - 62)) & v1)
                                           + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD107CC0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((203
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                           + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == ((v2 + 40) ^ (v0 - 271)))) ^ v2))
                            - 12))();
}

uint64_t sub_1CD107D00()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((828
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v4 + 6) + (v3 ^ 0xFFFFFEC0))))
                                           + ((*(unsigned __int8 *)(v4 + 6) + (v3 ^ 0xFFFFFEC0)) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD107D3C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1128
                                          * (((v1 + (v2 ^ 0x28) - 319) & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0)) | v2))
                            - 12))();
}

uint64_t sub_1CD107D80()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1792
                                          * ((((11 * (v2 ^ 0x10A)) ^ (v1 - 221)) & (2
                                                                                  * (*(unsigned __int8 *)(v3 + 8) - 11)))
                                           + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD107DCC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  int v7;
  uint64_t v8;

  v5 = (v1 ^ 0x44) + 319;
  *(_DWORD *)(*(_QWORD *)(v3 + 96) + 1428) = 527506330;
  v6 = (v1 ^ 0x44) - 54;
  v7 = 1178560073 * ((2 * ((v4 - 120) & 0x128615B8) - (v4 - 120) - 310777277) ^ 0x57ED9221);
  *(_QWORD *)(v4 - 112) = v4 + 0x5C6940C6B1BC6F5ELL;
  *(_DWORD *)(v4 - 120) = (((v5 ^ 0x583) + 776745519) ^ (a1 - 1)) - v7;
  *(_DWORD *)(v4 - 104) = v5 - v7 + 1172344777;
  v8 = sub_1CD0EF38C(v4 - 120);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * ((1410
                                                       * (*(_DWORD *)v3
                                                        - 165236985
                                                        + ((*(_DWORD *)(v4 - 152) << (v6 ^ 0x1C)) & 0x7A ^ 0x28)
                                                        + (*(_DWORD *)(v4 - 152) & 0x3F ^ 0xA7ED9FA9) < 0xFFFFFFC0)) ^ v5)))(v8, 313836798);
}

uint64_t sub_1CD107FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  unsigned int v26;

  v26 = v22 + 1477599300;
  if (v26 <= 0x40)
    v26 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24
                                        + 8 * (a21 ^ (8 * (-v21 - v23 + ((a21 - 1020) ^ (a8 - 787)) + v26 > 0xE))))
                            + 1267140513
                            - (a21 ^ (v25 - 1777))))();
}

uint64_t sub_1CD108024(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;

  v13 = v9 + v8;
  v14 = v13 + a2;
  if ((v13 + a2) <= 0x40)
    v14 = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * (int)(((((a1 + 757975018) & 0xD2D235E5) - 167)
                                               * (a8 - v13 >= (v10 + a8 + v11 + v14))) ^ a1))
                            - (((a1 + 1207959791) | 0x38703A1u) ^ (unint64_t)(a6 + 8))))();
}

uint64_t sub_1CD10809C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((19
                                * (a13
                                 + v16
                                 - 220
                                 + (unint64_t)(v13 + ((v14 - 275302696) & 0x5BEFCFE7 ^ 0x139567E6u)) > 0xF)) ^ v14)))();
}

uint64_t sub_1CD1080F0@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t *v7;
  int8x16_t v8;
  int8x16_t v9;

  v8.i64[0] = 0x6464646464646464;
  v8.i64[1] = 0x6464646464646464;
  v9.i64[0] = 0x3232323232323232;
  v9.i64[1] = 0x3232323232323232;
  *(int8x16_t *)(v4 + a2 + ((a1 + v3 + 708) ^ (v2 + 787))) = vaddq_s8(vsubq_s8(*v7, vandq_s8(vaddq_s8(*v7, *v7), v8)), v9);
  return (*(uint64_t (**)(int8x16_t *))(v6
                                                + 8 * ((105 * (((v5 + 1) & 0x1FFFFFFF0) == 16)) ^ (a1 + v3 + 1588))))(v7 + 1);
}

void sub_1CD10815C()
{
  JUMPOUT(0x1CD108114);
}

uint64_t sub_1CD108168(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((((a2 - 763) | 4) ^ 0x6D6) * (v6 == v7)) ^ a2))
                            - ((a2 - a5 - 708) ^ (unint64_t)(a6 + 8))))();
}

uint64_t sub_1CD1081AC@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  *(_BYTE *)(v8 - 220 + (((v5 - v9 + 30) ^ 0xFFFFFFE1) & (a3 + v3))) = *(_BYTE *)(v4 + v7 - 313836798)
                                                                                     - ((2
                                                                                       * *(_BYTE *)(v4 + v7 - 313836798)) & 0x64)
                                                                                     + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((767 * ((a2 + a3 + 1) < 0x40)) ^ (a1 + v5 + 1420)))
                            - 12))();
}

uint64_t sub_1CD108228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, int a16, int a17, int a18, int a19, int a20,int a21,int a22,int a23,uint64_t (*a24)(_QWORD, __n128, __n128, __n128, __n128, __n128, __n128),int a25,int a26,uint64_t a27,uint64_t a28,int32x4_t a29,int32x4_t a30,int32x4_t a31,int32x4_t a32)
{
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t (*v42)(_QWORD, __n128, __n128, __n128, __n128, __n128, __n128);
  const char *v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  uint8x16_t v56;
  uint16x8_t v57;
  int8x16_t v58;
  uint16x8_t v59;
  int8x16_t v60;
  uint8x16_t v61;
  uint16x8_t v62;
  uint16x8_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  uint8x16_t v68;
  int8x16_t v71;
  int8x16_t v76;
  int32x4_t v77;
  int32x4_t v78;
  uint8x16_t v80;
  uint16x8_t v81;
  uint16x8_t v82;
  uint8x16_t v83;
  uint8x16_t v88;
  uint16x8_t v89;
  uint16x8_t v90;
  int32x4_t v91;
  int32x4_t v92;
  int32x4_t v93;
  int32x4_t v94;
  _DWORD *v95;
  int v96;
  unsigned int v97;
  unint64_t v98;
  int8x16x4_t v99;
  int8x16x4_t v100;

  v42 = *(uint64_t (**)(_QWORD, __n128, __n128, __n128, __n128, __n128, __n128))(v33 + 8 * v32);
  a19 = a13 - 1361199332;
  a18 = ((v32 + 184812002) | v37) ^ 0x5B4E77BD;
  v43 = (const char *)(v40 - 220);
  v44 = (__n128)vdupq_n_s32(0x620F0DFFu);
  v45.n128_u64[0] = 0x3232323232323232;
  v45.n128_u64[1] = 0x3232323232323232;
  v46 = (__n128)vdupq_n_s32(0x620F0DF9u);
  a27 = v36 - 16;
  v47.n128_u64[0] = 0x6464646464646464;
  v47.n128_u64[1] = 0x6464646464646464;
  v48.n128_u64[0] = 0x3333333333333333;
  v48.n128_u64[1] = 0x3333333333333333;
  v49 = (__n128)vdupq_n_s32(0xC41E1BF2);
  v50 = (v41 + 1997669178) & 0x3D66F774;
  a25 = v50 ^ 0x239;
  a26 = v35 - 374;
  v51 = *(_DWORD *)(v40 - 148);
  v52 = *(_DWORD *)(v40 - 144);
  v54 = *(_DWORD *)(v40 - 140);
  v53 = *(_DWORD *)(v40 - 136);
  v55 = *(_BYTE *)(v40 - 124) ^ 0x5F;
  a17 = *(unsigned __int8 *)(v40 - 124) ^ 0x5F;
  if (v55 == 2)
  {
    a20 = v51;
    a21 = v52;
    a22 = v54;
    a23 = v53;
    a24 = v42;
    v100 = vld4q_s8(v43);
    a16 = *(_DWORD *)(v40 - 132);
    v80 = (uint8x16_t)veorq_s8(v100.val[0], (int8x16_t)v45);
    v81 = vmovl_u8(*(uint8x8_t *)v80.i8);
    v82 = vmovl_high_u8(v80);
    v83 = (uint8x16_t)veorq_s8(v100.val[1], (int8x16_t)v45);
    _Q23 = vmovl_u8(*(uint8x8_t *)v83.i8);
    _Q22 = vmovl_high_u8(v83);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    v88 = (uint8x16_t)veorq_s8(v100.val[2], (int8x16_t)v45);
    v89 = vmovl_high_u8(v88);
    v90 = vmovl_u8(*(uint8x8_t *)v88.i8);
    v100.val[0] = veorq_s8(v100.val[3], (int8x16_t)v45);
    v100.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v100.val[0]);
    v100.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v100.val[1]);
    v100.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v100.val[1].i8);
    v100.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v100.val[0].i8);
    v100.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v100.val[0]);
    v100.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v100.val[0].i8);
    v91 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v90.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v81.i8), 0x18uLL)), v100.val[0]);
    v92 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q25, (int8x16_t)vshll_high_n_u16(v90, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v81), 0x18uLL)), v100.val[3]);
    v93 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v89.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.i8), 0x18uLL)), v100.val[1]);
    v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v89, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v82), 0x18uLL)), v100.val[2]);
    v100.val[0] = veorq_s8(vandq_s8((int8x16_t)v91, (int8x16_t)v44), (int8x16_t)(*(_OWORD *)v100.val & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v100.val[3] = veorq_s8(vandq_s8((int8x16_t)v92, (int8x16_t)v44), (int8x16_t)(*(_OWORD *)&v100.val[3] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v100.val[1] = veorq_s8(vandq_s8((int8x16_t)v93, (int8x16_t)v44), (int8x16_t)(*(_OWORD *)&v100.val[1] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v100.val[2] = veorq_s8(vandq_s8((int8x16_t)v94, (int8x16_t)v44), (int8x16_t)(*(_OWORD *)&v100.val[2] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    a31 = vaddq_s32(vsubq_s32(v93, vaddq_s32((int32x4_t)v100.val[1], (int32x4_t)v100.val[1])), (int32x4_t)v46);
    a32 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v100.val[2], (int32x4_t)v100.val[2])), (int32x4_t)v46);
    a29 = vaddq_s32(vsubq_s32(v91, vaddq_s32((int32x4_t)v100.val[0], (int32x4_t)v100.val[0])), (int32x4_t)v46);
    a30 = vaddq_s32(vsubq_s32(v92, vaddq_s32((int32x4_t)v100.val[3], (int32x4_t)v100.val[3])), (int32x4_t)v46);
    v95 = (_DWORD *)&a29 + v39 + 1485875768;
    v96 = *(v95 - 8) ^ *(v95 - 3);
    v97 = *(v95 - 16) ^ *(v95 - 14) ^ (v96 + v34 - ((2 * v96) & 0xC41E1BF2));
    HIDWORD(v98) = v97 ^ v34;
    LODWORD(v98) = v97;
    *v95 = (v98 >> 31) + v34 - ((2 * (v98 >> 31)) & 0xC41E1BF2);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v33
                                                        + 8
                                                        * (((4 * (v36 != 1485875705)) | (16 * (v36 != 1485875705))) ^ (a5 + v41 + 950)))
                                            - 8))(150);
  }
  else if (v55 == 1)
  {
    a20 = v51;
    a21 = v52;
    a22 = v54;
    a23 = v53;
    a24 = v42;
    v99 = vld4q_s8(v43);
    v56 = (uint8x16_t)veorq_s8(v99.val[0], (int8x16_t)v45);
    v57 = vmovl_high_u8(v56);
    v58 = (int8x16_t)vmovl_high_u16(v57);
    v59 = vmovl_u8(*(uint8x8_t *)v56.i8);
    v60 = (int8x16_t)vmovl_high_u16(v59);
    v61 = (uint8x16_t)veorq_s8(v99.val[1], (int8x16_t)v45);
    v62 = vmovl_u8(*(uint8x8_t *)v61.i8);
    v63 = vmovl_high_u8(v61);
    v64 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v62.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v59.i8));
    v65 = vorrq_s8((int8x16_t)vshll_high_n_u16(v62, 8uLL), v60);
    v66 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v63.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8));
    v67 = vorrq_s8((int8x16_t)vshll_high_n_u16(v63, 8uLL), v58);
    v68 = (uint8x16_t)veorq_s8(v99.val[2], (int8x16_t)v45);
    _Q23 = (int8x16_t)vmovl_high_u8(v68);
    _Q22 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v68.i8);
    v71 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v76 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL);
    __asm { SHLL2           V23.4S, V23.8H, #0x10 }
    v99.val[0] = veorq_s8(v99.val[3], (int8x16_t)v45);
    v99.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v99.val[0].i8);
    v99.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v99.val[0]);
    v77 = (int32x4_t)vorrq_s8(vorrq_s8(v64, v71), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v99.val[1].i8), 0x18uLL));
    v99.val[1] = vorrq_s8(vorrq_s8(v65, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v99.val[1]), 0x18uLL));
    v78 = (int32x4_t)vorrq_s8(vorrq_s8(v66, v76), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v99.val[0].i8), 0x18uLL));
    v99.val[0] = vorrq_s8(vorrq_s8(v67, _Q23), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v99.val[0]), 0x18uLL));
    a31 = vaddq_s32(vsubq_s32(v78, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v78, v78), (int8x16_t)v49)), (int32x4_t)v46);
    a32 = vaddq_s32(vsubq_s32((int32x4_t)v99.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v99.val[0], (int32x4_t)v99.val[0]), (int8x16_t)v49)), (int32x4_t)v46);
    a29 = vaddq_s32(vsubq_s32(v77, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v77, v77), (int8x16_t)v49)), (int32x4_t)v46);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v99.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v99.val[1], (int32x4_t)v99.val[1]), (int8x16_t)v49)), (int32x4_t)v46);
    return ((uint64_t (*)(uint64_t, __n128))(*(_QWORD *)(v33
                                                                + 8 * ((1059 * (a27 + 1 == v36)) ^ v50))
                                                    - 12))(150, v44);
  }
  else
  {
    *(_DWORD *)(v40 - 148) = 2 * (v51 ^ v35) + v35 - (v38 & (4 * (v51 ^ v35)));
    *(_DWORD *)(v40 - 144) = 2 * (v52 ^ v35) + v35 - (v38 & (4 * (v52 ^ v35)));
    *(_DWORD *)(v40 - 140) = 2 * (v54 ^ v35) + v35 - (v38 & (4 * (v54 ^ v35)));
    *(_DWORD *)(v40 - 136) = 2 * (v53 ^ v35) + v35 - (v38 & (4 * (v53 ^ v35)));
    return v42(150, v44, v45, v46, v47, v48, v49);
  }
}

uint64_t sub_1CD108DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  _BOOL4 v19;

  if (a17 < a16 != (a14 - 32199846) < 0x10C97018)
    v19 = (a14 - 32199846) < 0x10C97018;
  else
    v19 = a14 - 32199846 > a17;
  return (*(uint64_t (**)(void))(v17
                              + 8 * ((!v19 * (((95 * (v18 ^ (v18 + 1)) - 219) | 0x680) ^ 0x6F1)) ^ (a5 + v18 + 577))))();
}

uint64_t sub_1CD108E5C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v4 + 1208417726) | 0x3800325) ^ (v6 - 32))
                                          * (a2 + a4 + 63 >= (a2 + a4))) | v4))
                            - 4))();
}

uint64_t sub_1CD108EA8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * ((477
                                          * (a13
                                           + v13
                                           - (unint64_t)(a2
                                                              + (v14 ^ (v16 - 1598))
                                                              + ((v14 - 71884507) & 0x4FCFDFBDu)
                                                              + 1446849464) > 0xF)) ^ v14))
                            - 4))();
}

uint64_t sub_1CD108F0C(double a1, double a2, double a3, int8x16_t a4, int8x16_t a5, uint64_t a6, int a7, uint64_t a8, int a9, int a10)
{
  int8x16_t *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *v10 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v13 + (a7 + a9)), a5), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v13 + (a7 + a9)), *(int8x16_t *)(v13 + (a7 + a9))), a4)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (a10 + v11 + 269)) - 8))();
}

uint64_t sub_1CD108F70@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  *(_BYTE *)(v6 + a5) = *(_BYTE *)(v9 + (a2 + a3))
                      + (v7 | ~(2 * *(_BYTE *)(v9 + (a2 + a3))))
                      + 51;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * (((a5 + (v5 - v10 + 60) != 123) * a1) ^ (a4 + v5 + 1309)))
                            - 8))();
}

uint64_t sub_1CD108FC4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;
  _BOOL4 v15;

  v15 = a2 + 1583058440 < (a13 + 254059018);
  if ((a13 + 254059018) < 0x71105306 != (a2 + 1583058440) < 0x71105306)
    v15 = (a13 + 254059018) < 0x71105306;
  return (*(uint64_t (**)(void))(v13 + 8 * (int)((v15 * (((v14 + 220361917) & 0xF2DD8B2F) - 214)) ^ v14)))();
}

uint64_t sub_1CD109038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v16 = 628203409 * ((((v15 - 120) | 0x96D41AAA) - ((v15 - 120) & 0x96D41AAA)) ^ 0x145C1699);
  *(_QWORD *)(v15 - 120) = a10;
  *(_DWORD *)(v15 - 112) = v16 + v14 + 787;
  *(_DWORD *)(v15 - 108) = a13 - v16 + ((v14 - a5 - 185) ^ 0xF7D52AB3);
  v17 = sub_1CD103BC8(v15 - 120);
  v18 = *(_DWORD *)(v15 - 152) & 0x3F;
  *(_BYTE *)(v15 - 220 + (v18 ^ 0x14)) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                      + 8
                                                      * ((38
                                                        * ((v18 ^ 0x14) > ((v14 + 918) | 0x215u) - 1662)) ^ v14))
                                          - 4))(v17);
}

uint64_t sub_1CD109138(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * (((((v1 == 63) ^ (v2 - 116)) & 1)
                                                                 * ((v2 ^ 0x18) - 1252)) ^ v2))
                                                   - 4))(a1, -560347418);
}

uint64_t sub_1CD109170()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (396 * ((v0 ^ 0x2Bu) > 7))))
                            - ((v1 + 1809836352) & 0xDFA717B7)
                            - ((v1 + 8585172) | 0x4B040124u)
                            + 2534281030))();
}

uint64_t sub_1CD1091D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 - 220 + v5 + 1) = 0x3232323232323232;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8
                                                      + 8
                                                      * (int)((((v6 & 0x38) == 8)
                                                             * ((v7 - 189157558) & 0xBFBF4FBD ^ 0x756)) ^ (a5 + v7 + 1558)))
                                          - 12))(1267140513);
}

void sub_1CD109240()
{
  JUMPOUT(0x1CD109218);
}

uint64_t sub_1CD109248@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;

  v10 = v3 < v4;
  *(_BYTE *)(v9 - 220 + (a3 - 98667421)) = *(_BYTE *)(v7 + (a1 + a2))
                                                       + (v8 ^ 0x2F)
                                                       - ((2 * *(_BYTE *)(v7 + (a1 + a2))) & 0x64);
  v11 = a1 + 1 + v5;
  v12 = v10 ^ (v11 < v4);
  v13 = v11 < v3;
  if (!v12)
    v10 = v13;
  return (*(uint64_t (**)(void))(v6 + 8 * ((52 * v10) ^ v8)))();
}

uint64_t sub_1CD1092C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * ((195
                                                                          * (a4 + ((48 * (v5 ^ (v6 + 8))) ^ 0xDE99C766) < 0x38)) ^ (v5 + a3)))
                                                            - 4))(a1, a2, -560347418);
}

uint64_t sub_1CD109314@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  v3 = a1 - 1827487934 + ((v1 + 1804562031) & 0xDFF797B5);
  if (v3 <= 0x38)
    v3 = 56;
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((1762 * (v3 - a1 + ((v1 + 1337421373) & 0xFBCF97E7) - 706793099 > 7)) ^ v1)))();
}

uint64_t sub_1CD109394@<X0>(uint64_t a1@<X2>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 220 + a3 + a1) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((824
                                          * (((v3 - 1963967430) & 0x2988BD7D ^ 0x155) == (v4 & 0xFFFFFFFFFFFFFFF8))) ^ (a2 + v3 + 1312)))
                            - 12))();
}

uint64_t sub_1CD109404()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  char v4;

  return (*(uint64_t (**)(void))(v3 + 8 * ((221 * (((v0 == v1) ^ (v4 + v2 - 93)) & 1)) ^ v2)))();
}

void sub_1CD109434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  char v6;
  int v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  char v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unint64_t v15;

  v7 = *(unsigned __int8 *)(v5 - 124) ^ 0x5F;
  if (v7 == 1)
  {
    v14 = *(_DWORD *)(v5 - 156);
    v13 = *(_DWORD *)(v5 - 152);
    *(_BYTE *)(v5 - 164) = ((8 * v13) ^ 0xA0) - ((2 * ((8 * v13) ^ 0xA0)) & 0x60) + 50;
    *(_BYTE *)(v5 - 163) = ((v13 >> 5) ^ (a5 + v6 - 95))
                         - 2 * (((v13 >> 5) ^ (a5 + v6 - 95)) & 0x33 ^ ((v13 & 0x20) != 0))
                         + 50;
    v11 = 100;
    *(_BYTE *)(v5 - 162) = ((v13 >> 13) ^ 0x8F) - ((2 * ((v13 >> 13) ^ 0x8F)) & 0x64) + 50;
    HIDWORD(v15) = v14 ^ 0xA;
    LODWORD(v15) = v13 ^ 0x60000000;
    *(_BYTE *)(v5 - 161) = ((v13 >> 21) ^ 0x39) - ((2 * ((v13 >> 21) ^ 0x39)) & 0x64) + 50;
    *(_BYTE *)(v5 - 160) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0x64) + 50;
    *(_BYTE *)(v5 - 159) = ((v14 >> 5) ^ 0xA) - 2 * (((v14 >> 5) ^ 0xA) & 0x37 ^ (v14 >> 5) & 5) + 50;
    *(_BYTE *)(v5 - 158) = ((v14 >> 13) ^ 0xA4) - ((2 * ((v14 >> 13) ^ 0xA4)) & 0x64) + 50;
    v8 = a5 + v6 + 5;
    v12 = (v14 >> 21) ^ 0xFFFFFFBE;
  }
  else
  {
    if (v7 != 2)
      goto LABEL_6;
    v8 = -34 * (v6 ^ (v6 - 5));
    v9 = *(_DWORD *)(v5 - 156);
    v12 = *(_DWORD *)(v5 - 152);
    *(_BYTE *)(v5 - 164) = (v8 ^ (v9 >> 21) ^ 0xE8)
                         - 2 * ((v8 ^ (v9 >> 21) ^ 0xE8) & 0x33 ^ ((v9 & 0x200000) != 0))
                         + 50;
    *(_BYTE *)(v5 - 163) = ((v9 >> 13) ^ 0xA4) - 2 * (((v9 >> 13) ^ 0xA4) & 0x3A ^ (v9 >> 13) & 8) + 50;
    *(_BYTE *)(v5 - 162) = ((v9 >> 5) ^ 0xA) + (~(2 * ((v9 >> 5) ^ 0xA)) | 0x9B) + 51;
    HIDWORD(v10) = v9 ^ 0xA;
    LODWORD(v10) = v12 ^ 0x60000000;
    *(_BYTE *)(v5 - 161) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0x64) + 50;
    *(_BYTE *)(v5 - 160) = ((v12 >> 21) ^ 0x39) - 2 * (((v12 >> 21) ^ 0x39) & 0x36 ^ (v12 >> 21) & 4) + 50;
    *(_BYTE *)(v5 - 159) = ((v12 >> 13) ^ 0x8F) - ((2 * ((v12 >> 13) ^ 0x8F)) & 0x64) + 50;
    *(_BYTE *)(v5 - 158) = ((v12 >> 5) ^ 0xF2) - ((2 * ((v12 >> 5) ^ 0xF2)) & 0x64) + 50;
    v11 = 96;
    LOBYTE(v12) = (8 * v12) ^ 0xA0;
  }
  *(_BYTE *)(v5 - 157) = v12 - (v11 & (2 * v12)) + ((v8 + 105) & 0xE5 ^ 0x97);
LABEL_6:
  JUMPOUT(0x1CD108234);
}

uint64_t sub_1CD109850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v5 ^ ((8 * (v7 == v6)) | (16 * (v7 == v6)))))
                            + a1
                            - (((v5 - 1645) | 1u)
                             - a5
                             + 16)))();
}

void sub_1CD109888()
{
  JUMPOUT(0x1CD108234);
}

uint64_t sub_1CD10989C@<X0>(uint64_t a1@<X1>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)(v5 - 220 + a3 + a1) = 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1565
                                          * ((((unint64_t)(a3 + 1 + a1) < 0x40) ^ (13 * (v3 ^ (v6 - 5)))) & 1)) ^ (a2 + v3 + 87)))
                            - 4))();
}

uint64_t sub_1CD10994C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  _BOOL4 v13;
  _BOOL4 v14;

  v10 = v7 - 1734423542 + ((v5 + 1115685440) | 0x9070300);
  v11 = *(_DWORD *)(v9 - 220 + (v10 & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a3 + v10) = (HIBYTE(v11) ^ 0x51) - ((2 * (HIBYTE(v11) ^ 0x51)) & 0x64) + 50;
  *(_BYTE *)(a3 + (v7 + v3)) = (BYTE2(v11) ^ 0x3B) - ((2 * (BYTE2(v11) ^ 0x3B)) & 0x64) + 50;
  *(_BYTE *)(a3 + (v7 + v3 + 1)) = (BYTE1(v11) ^ 0xA7) - ((2 * (BYTE1(v11) ^ 0xA7)) & 0x64) + 50;
  *(_BYTE *)(a3 + (v7 + v3 + 2)) = v11 ^ 0x47;
  v12 = *(_DWORD *)(v9 - 128) + 364390470;
  v13 = v12 < v4;
  v14 = v7 + 267092298 < v12;
  if (v7 + 267092298 < v4 != v13)
    v14 = v13;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v14 * v6) ^ v5)))();
}

void sub_1CD109AEC()
{
  JUMPOUT(0x1CD109AACLL);
}

void sub_1CD109B30(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  _DWORD v7[2];
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((2 * (a1 & 0x5E99CC2A) - a1 - 1587137579) ^ 0xAB923DFA);
  v2 = *(_QWORD *)a1;
  if (*(_DWORD *)(*(_QWORD *)a1 - 0xC7F991DE6408E19) - 159353952 >= 0)
    v4 = *(_DWORD *)(*(_QWORD *)a1 - 0xC7F991DE6408E19) - 159353952;
  else
    v4 = 159353952 - *(_DWORD *)(*(_QWORD *)a1 - 0xC7F991DE6408E19);
  v3 = *(_QWORD *)(a1 + 16);
  if (*(_DWORD *)(v3 - 0xC7F991DE6408E19) - 159353952 >= 0)
    v5 = *(_DWORD *)(v3 - 0xC7F991DE6408E19) - 159353952;
  else
    v5 = 159353952 - *(_DWORD *)(v3 - 0xC7F991DE6408E19);
  v7[1] = (460628867 * (((v7 | 0xE042447A) - (v7 & 0xE042447A)) ^ 0xACD4C607)) ^ (v1 + 693);
  v8 = v2;
  sub_1CD112038((uint64_t)v7);
  if (v4 >= v5)
    v6 = v5;
  else
    v6 = v4;
  __asm { BR              X14 }
}

uint64_t sub_1CD109CC4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  _BOOL4 v13;
  uint64_t v14;
  int v15;

  v11 = v9 - 27;
  v12 = (2 * (v9 - 27)) ^ 0x596;
  v13 = v3 > 0x34F7BADB;
  v14 = 4 * (v6 + v4);
  v15 = v7
      + 966000769
      + (*(_DWORD *)(*(_QWORD *)(v10 - 0xC7F991DE6408E15) + v14) ^ (v8 + v12 - 1394))
      + (*(_DWORD *)(*(_QWORD *)(a2 - 0xC7F991DE6408E15) + v14) ^ v8);
  *(_DWORD *)(*(_QWORD *)(a1 - 0xC7F991DE6408E15) + v14) = v15 + v8 - (v5 & (2 * v15));
  if (v13 == v6 - 619284429 < -888650460)
    v13 = v6 - 619284429 < (int)(v3 + 1258833188);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((255 * !v13) ^ v11)) - 12))();
}

uint64_t sub_1CD109DF4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v3 - 2010637295 > 2014963970 || v3 - 2010637295 < v2 - 132519677;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((212 * v5) ^ v1)) - ((v1 - 152439432) & 0x91605FF) + 230))();
}

uint64_t sub_1CD109E54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  _BOOL4 v18;

  v13 = v3 - 1253;
  v14 = 4 * (v9 + v7);
  v15 = v2 + v10 + (*(_DWORD *)(*(_QWORD *)(v12 - 0xC7F991DE6408E15) + v14) ^ (v11 + v13 + 93 - 234));
  *(_DWORD *)(*(_QWORD *)(a1 - 0xC7F991DE6408E15) + v14) = v15 + v11 - (v8 & (2 * v15));
  v16 = v9 + 1 + v4;
  v18 = v16 > v5 || v16 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((233 * v18) ^ (v13 + 1253))) - 4))();
}

uint64_t sub_1CD109F1C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v2 + 1086776997 > 817410966 || v2 + 1086776997 < v3 - 1330072681;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v5 * ((v1 + 2) ^ 0x66 ^ (5 * (v1 ^ 0x1F1)))) ^ v1)) - 12))();
}

uint64_t sub_1CD109F78@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _BOOL4 v17;

  v13 = 4 * (v10 + v8);
  v14 = v3 + v11 + (*(_DWORD *)(*(_QWORD *)(a2 - 0xC7F991DE6408E15) + v13) ^ v12);
  *(_DWORD *)(*(_QWORD *)(a1 - 0xC7F991DE6408E15) + v13) = v14 + v12 - ((v14 << ((v7 ^ 6) + 23)) & v9);
  v15 = v10 + 1 + v4;
  v17 = v15 > v5 || v15 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * v17) | (4 * v17)) ^ v7 ^ 6)) - 12))();
}

uint64_t sub_1CD10A040()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((85 * (v1 == ((v2 + 75) ^ 0x49CCCEB039940553))) ^ v2))
                            - (v2 ^ 0x50Au)
                            + 133))();
}

void sub_1CD10A088(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  *(_DWORD *)(a1 - 0xC7F991DE6408E19) = (((v3 + v2) * (v1 - 1901766679)) ^ 0x2D7FCE79)
                                        - 603996697
                                        + ((2 * (v3 + v2) * (v1 - 1901766679)) & 0x5AFF9CF2);
}

void sub_1CD10A168(uint64_t a1)
{
  int v1;

  v1 = 1178560073 * ((-2 - ((a1 | 0x20C3A6CC) + (~(_DWORD)a1 | 0xDF3C5933))) ^ 0x65A82151);
  __asm { BR              X9 }
}

uint64_t sub_1CD10A21C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1696 * (v2 != (v1 ^ 0x7D6) + 100575459)) ^ v1)) - 8))();
}

uint64_t sub_1CD10A270@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((59 * (v1 ^ 0xC3)) ^ 0x36)) - 4))();
}

uint64_t sub_1CD10A398@<X0>(int a1@<W5>, int a2@<W6>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((v4 == ((v5 + 702) ^ a1 ^ (v3 + 731))) * a2) ^ v5)) - 8))();
}

uint64_t sub_1CD10A3C4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v2 + 214) ^ 0x74) * (v1 != 0)) ^ v2)) - 8))();
}

uint64_t sub_1CD10A3EC@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;

  v6 = v3 + v2;
  v7 = (v5 ^ 0x389) + v3;
  *(_DWORD *)(*(_QWORD *)(v4 - 0xC7F991DE6408E15) + 4 * v6) = a1;
  *(_DWORD *)(v4 - 0xC7F991DE6408E19) = v7;
  v8 = v7 + v2;
  if (v7 + v2 < 0)
    v8 = -v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (int)(((v5 ^ 0x7D6) + 1808758879) & 0x943083EF ^ (((int)((v8 ^ 0xBDFFAD62)
                                                                                                 + ((v8 << ((((v5 ^ 0xD6) + 95) & 0xEF) + 84)) & 0x7BFF5AC4)
                                                                                                 + 1107317405) > (int)(((((v5 ^ 0x7D6) + 1808758879) & 0x943083EF) - 802879662) & 0x2FDAF8FD ^ 0xFFFFFF02)) << 6)))
                            - 8))();
}

uint64_t sub_1CD10A4E8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  unsigned int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((*(_DWORD *)(*v3 + 4 * v4) == v1) * ((v2 - 15499184) & 0xEC7FFF ^ 0x40E)) ^ v2))
                            - 8))();
}

uint64_t sub_1CD10A52C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (v1 ^ ((v2 - 1 > (int)((v1 - 802879662) & 0x2FDAF8FD ^ 0xFFFFFF02)) << 6)))
                            - 8))();
}

_DWORD *sub_1CD10A570(_DWORD *result)
{
  int v1;
  int v2;
  int v3;
  int *v4;
  int v5;
  int v6;

  if ((v1 + v2 - 1) >= 0x7FFFFFFF)
    v6 = -v3;
  else
    v6 = v5;
  *v4 = v6;
  *result = 85258470;
  return result;
}

uint64_t sub_1CD10A5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unsigned __int8 v4;
  char *v5;
  int v6;
  char v8;

  v2 = qword_1EFA46A00 - qword_1EFA46A70 - (_QWORD)&v8;
  qword_1EFA46A70 = 536075833 * v2 + 0x793AB71194CDC804;
  qword_1EFA46A00 = 536075833 * (v2 ^ 0x86C548EE6B3237FCLL);
  v3 = *(_DWORD *)(a2 + 4);
  v4 = 57 * ((qword_1EFA46A00 + 57 * v2 + 4) ^ 0xFC);
  v5 = (char *)*(&off_1E89A15E0 + (v4 ^ byte_1CDB89950[byte_1CDB85900[v4] ^ 0x84]) - 54) - 8;
  if (v3 == 1206753086)
    __asm { BR              X17 }
  if (v3 == 1206753093)
  {
    v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BR              X1 }
  }
  return 4294925278;
}

void sub_1CD10AC78(unint64_t a1)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  _QWORD *v7;
  char *v8;
  unsigned int v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unint64_t v21;
  _QWORD *v22;
  int32x4_t v23;
  int32x4_t v24;
  int32x4_t v25;
  uint64_t v26;
  unint64_t *v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  char v32;
  char v33;
  char v34;
  char v35;
  unsigned int v37;
  unint64_t *v38;
  int v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v2 = *(_DWORD *)(a1 + 44) - 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  v3 = *(_DWORD *)(a1 + 16) + 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  v4 = 1178560073 * ((1588112264 - (&v37 | 0x5EA8AB88) + (&v37 | 0xA1575477)) ^ 0x1BC32C15);
  v5 = *(_DWORD *)(a1 + 36);
  v21 = 1755732067
      * (((a1 | 0xDEEEE61CC66703ELL) - (a1 | 0xF211119E33998FC1) - 0xDEEEE61CC66703FLL) ^ 0xD045495E12A0CDE5);
  v6 = v5 + 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  v39 = v2 - v4 + 1172345356;
  v37 = 1076023948 - v4;
  v27 = &STACK[0x5C6940C6B1BC7306];
  v38 = &STACK[0x5C6940C6B1BC7306];
  sub_1CD0EF38C((uint64_t)&v37);
  v7 = (_QWORD *)a1;
  v8 = (char *)*(&off_1E89A15E0 + (int)(v2 - 37)) - 8;
  v20 = ((v2 + 177) | 0x4E8) + v6 + 206677213;
  v19 = 1484105499;
  v18 = v6 - 857971597;
  v12 = v6 + 1138537797;
  v11 = v6 - 770055748;
  v10 = (char *)&v10 - 250415509;
  v17 = 143 * (v2 ^ 0x46);
  v16 = v17 ^ 0x5875A21C;
  v13 = (v2 - 1913092366) & 0x72077DBF;
  v15 = v13 ^ 0x52C;
  v31 = v2 ^ 0x6F;
  v30 = v2 ^ 0x22;
  v14 = v2 ^ 0x22;
  v29 = v14;
  v28 = v2;
  v24 = vdupq_n_s32(0x620F0DF9u);
  v25 = vdupq_n_s32(0x620F0DFFu);
  v23 = vdupq_n_s32(0xC41E1BF2);
  v22 = v7;
  v26 = *v7;
  v9 = v3
     - (((v3 << (((((v2 - 79) | 0xE8) + 48) | 0xE0) ^ 0x52 ^ (((v2 - 79) | 0xE8) + 3) & 0xBF)) + 655359252) & 0x989A21DE)
     - 539684999;
  v32 = (HIBYTE(v9) ^ 0x4C) - ((v9 >> 23) & 0x64) + 50;
  v33 = (BYTE2(v9) ^ 0x4D) - ((v9 >> 15) & 0x64) + 50;
  v34 = (BYTE1(v9) ^ 0x10) - ((2 * (BYTE1(v9) ^ 0x10)) & 0x64) + 50;
  v35 = (v3
       - ((((_BYTE)v3 << (((((v2 - 79) | 0xE8) + 48) | 0xE0) ^ 0x52 ^ (((v2 - 79) | 0xE8) + 3) & 0xBF)) + 20) & 0xDE)
       + 121) ^ 0xDD;
  __asm { BR              X15 }
}

uint64_t sub_1CD10B07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  char v21;
  int v22;
  uint64_t v23;

  *(_BYTE *)(a4 + (v22 + v20 - 921 - 352)) = v21;
  *(_BYTE *)(a4 + (a9 - 1862623871)) = *(_BYTE *)(a6 + 1);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * ((1627 * ((((v20 - 1194) | 1) ^ 0x4Bu) > 2)) ^ (v20 - 921))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1CD10C41C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + (a3 - 1862623870)) = *(_BYTE *)(a2 + (v5 - 1900496073));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1595 * ((v4 & 0xFFFFFFFC) == ((v3 - 272) ^ 0x71474487))) ^ v3))
                            - 4))();
}

uint64_t sub_1CD10C478@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t))
{
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;

  v25 = (v22 - 1690666352) & 0x64C5845F;
  *(_BYTE *)(a1 + (a3 + 2)) = *(_BYTE *)(a2 + (v23 - 1900496151 + v25));
  v26 = 628203409 * ((-420577316 - ((v24 - 160) | 0xE6EE7FDC) + ((v24 - 160) | 0x19118023)) ^ 0x9B998C10);
  *(_DWORD *)(v24 - 152) = v26 + v25 + 974;
  *(_DWORD *)(v24 - 148) = 507371030 - v26;
  *(_QWORD *)(v24 - 160) = a21;
  v27 = sub_1CD103BC8(v24 - 160);
  return a22(v27);
}

uint64_t sub_1CD10C520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  int v11;
  int v12;
  uint64_t v13;
  _BOOL4 v14;

  v14 = a11 < 0x9000B19B;
  if (v14 == (v11 + 938535170) < 0x9000B19B)
    v14 = v11 + 938535170 < a11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((v14 * (((v12 - 1221) | 0x19) ^ 0x41)) ^ v12)) - 12))();
}

uint64_t sub_1CD10C5A0@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _BOOL4 v13;
  unsigned int v14;
  int v15;
  _BOOL4 v16;

  v13 = a3 < v9;
  *(_BYTE *)(a4 + (a6 + a2)) = *(_BYTE *)(v12 + (v6 + v8))
                                           - (a5 & (2 * *(_BYTE *)(v12 + (v6 + v8))))
                                           + 50;
  v14 = a1 + v6 + 1;
  v15 = v13 ^ (v14 < v9);
  v16 = v14 < a3;
  if (!v15)
    v13 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v13 * v11) ^ v7)) - 12))();
}

uint64_t sub_1CD10C610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v29 = 628203409 * ((((v28 - 160) | 0x8BCD2C81) + (~(v28 - 160) | 0x7432D37E)) ^ 0x94520B3);
  *(_DWORD *)(v28 - 152) = v29 + v26 + 962;
  *(_DWORD *)(v28 - 148) = a10 - v29;
  *(_QWORD *)(v28 - 160) = a26;
  v30 = sub_1CD103BC8(v28 - 160);
  v31 = STACK[0x310] & 0x3F ^ ((v26 ^ 0x39Au) - 941);
  *((_BYTE *)&STACK[0x2CC] + v31) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((968 * (v31 > 0x37)) ^ v26)) - 4))(v30);
}

uint64_t sub_1CD10C708()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v1 - 247) ^ (v0 == 63)) & 1) == 0) * (7 * (v1 ^ 0x3CC) - 86)) ^ v1))
                            - 4))();
}

uint64_t sub_1CD10C760@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((477 * ((a1 ^ 0x2Bu) > 7)) ^ (v1 | 0x10))))();
}

uint64_t sub_1CD10C79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(a9 + v10) = v13;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((409 * ((v11 & 0x38) - (unint64_t)(v9 + 322) == -393)) ^ (v9 + 623))))();
}

uint64_t sub_1CD10C7E4(int a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == v4) * a1) ^ v1)))();
}

uint64_t sub_1CD10C804()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 ^ 0x1DE) + ((v1 - 392) | 0x52) + 673) * (v2 != v0)) ^ v1)))();
}

uint64_t sub_1CD10C84C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(a1 + a2 + v3) = v6;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 + v3 + (unint64_t)(v2 ^ v5) - 90 > 0x3F) * v4) ^ (v2 + 299))))();
}

void sub_1CD10C880()
{
  JUMPOUT(0x1CD10B620);
}

uint64_t sub_1CD10C8A8()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1556 * (((v2 - 1967077713) & 0x753F3BC7u) + v0 - 250416935 < 0x38)) ^ (v2 + 663)))
                            - 12))();
}

uint64_t sub_1CD10C908@<X0>(unsigned int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v4 = ((v2 + ((a1 - 2076846039) & 0x7BCA27FD) - 669) ^ (a1 - 1511176519) & 0x5A12B6CF) + v1;
  if (v4 <= 0x38)
    v4 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2000 * (v4 - v1 + 250416225 > 7)) ^ a1)) - 12))();
}

uint64_t sub_1CD10C990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(a9 + v10) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * (int)((14
                                               * ((((((v11 + 1227796478) & 0xB6D14FF7) - 29) ^ (((((v11 + 1227796478) & 0xB6D14FF7)
                                                                                                - 747) & v9) == 8)) & 1) == 0)) ^ (v11 + 1227796478) & 0xB6D14FF7))
                            - 8))();
}

uint64_t sub_1CD10C9FC(int a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + v5) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((14 * (a1 & ~(v3 ^ (v4 == v5)))) ^ v1)) - 8))();
}

uint64_t sub_1CD10CA2C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 | (32 * (v0 == v1))))
                            - ((v2 - 1315803975) & 0x4E6D90CF ^ 0x43)))();
}

uint64_t sub_1CD10CA74@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + a2 + v3) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(a2 + 1 + v3) < 0x38) * v5) ^ (v2 + 663)))
                            - 12))();
}

void sub_1CD10CAA4()
{
  char v0;
  int v1;
  unsigned int v2;
  int v3;
  unint64_t v4;
  char v5;
  char v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  char v11;
  char v12;
  char v13;
  int v14;
  unint64_t v15;

  v1 = LOBYTE(STACK[0x32C]) ^ 0x5F;
  if (v1 == 1)
  {
    v8 = STACK[0x310];
    v9 = STACK[0x30C];
    v10 = LODWORD(STACK[0x310]) >> 5;
    v11 = v10 ^ 0xF2;
    v12 = (v10 ^ 0xF2) & 0x37 ^ v10 & 5;
    v5 = v0 ^ 0x26;
    v13 = v11 - 2 * v12;
    v14 = LODWORD(STACK[0x310]) >> 13;
    LOBYTE(STACK[0x304]) = (v0 ^ 0x26)
                         + ((8 * LOBYTE(STACK[0x310])) ^ 0xA0)
                         - ((2 * ((8 * LOBYTE(STACK[0x310])) ^ 0xA0)) & 0x60)
                         - 55;
    LOBYTE(STACK[0x305]) = v13 + 50;
    LOBYTE(STACK[0x306]) = (v14 ^ 0x8F) + (~(2 * (v14 ^ 0x8F)) | 0x9B) + 51;
    LOBYTE(STACK[0x307]) = ((v8 >> 21) ^ 0x39) - 2 * (((v8 >> 21) ^ 0x39) & 0x36 ^ (v8 >> 21) & 4) + 50;
    HIDWORD(v15) = v9 ^ 0xA;
    LODWORD(v15) = v8 ^ 0x60000000;
    v6 = 100;
    LOBYTE(STACK[0x308]) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0x64) + 50;
    LOBYTE(STACK[0x309]) = ((v9 >> 5) ^ 0xA) - ((2 * ((v9 >> 5) ^ 0xA)) & 0x64) + 50;
    LOBYTE(STACK[0x30A]) = ((v9 >> 13) ^ 0xA4) - ((2 * ((v9 >> 13) ^ 0xA4)) & 0x64) + 50;
    v7 = (v9 >> 21) ^ 0xFFFFFFBE;
  }
  else
  {
    if (v1 != 2)
      goto LABEL_6;
    v2 = STACK[0x30C];
    v7 = STACK[0x310];
    v3 = LODWORD(STACK[0x30C]) >> 13;
    LOBYTE(STACK[0x304]) = ((LODWORD(STACK[0x30C]) >> 21) ^ 0xBE)
                         - 2 * (((LODWORD(STACK[0x30C]) >> 21) ^ 0xBE) & 0x33 ^ ((STACK[0x30C] & 0x200000) != 0))
                         + 50;
    LOBYTE(STACK[0x305]) = (v3 ^ (v0 + 85)) - 2 * ((v3 ^ (v0 + 85)) & 0x33 ^ ((v2 & 0x2000) != 0)) + 50;
    LOBYTE(STACK[0x306]) = ((v2 >> 5) ^ 0xA) - 2 * (((v2 >> 5) ^ 0xA) & 0x37 ^ (v2 >> 5) & 5) + 50;
    HIDWORD(v4) = v2 ^ 0xA;
    LODWORD(v4) = v7 ^ 0x60000000;
    LOBYTE(STACK[0x307]) = (v4 >> 29) - ((2 * (v4 >> 29)) & 0x64) + 50;
    LOBYTE(STACK[0x308]) = ((v7 >> 21) ^ 0x39) - ((2 * ((v7 >> 21) ^ 0x39)) & 0x64) + 50;
    LOBYTE(STACK[0x309]) = ((v7 >> 13) ^ 0x8F) - ((2 * ((v7 >> 13) ^ 0x8F)) & 0x64) + 50;
    LOBYTE(STACK[0x30A]) = ((v7 >> 5) ^ 0xF2) - 2 * (((v7 >> 5) ^ 0xF2) & 0x36 ^ (v7 >> 5) & 4) + 50;
    v5 = v0 + 26;
    v6 = 96;
    LOBYTE(v7) = (8 * v7) ^ 0xA0;
  }
  LOBYTE(STACK[0x30B]) = v7 + ((v5 - 10) & 0xEF) - (v6 & (2 * v7)) - 29;
LABEL_6:
  JUMPOUT(0x1CD10B620);
}

uint64_t sub_1CD10CD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  int v36;
  uint64_t v37;
  int v39;
  unint64_t v40;

  if (a31 == 2)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v37
                                                       + 8
                                                       * ((961
                                                         * (((LODWORD(STACK[0x328]) == 369984849) ^ (v36 - 34)) & 1)) ^ (v36 + 1245))))(a1, a11);
  if (a31 == 1)
    return (*(uint64_t (**)(void))(v37 + 8 * ((56 * (LODWORD(STACK[0x328]) == v36 + 369984770)) ^ (v36 + 1221))))();
  v39 = (16 * v36) ^ 0x560;
  v40 = ((unint64_t)&a36 ^ 0x3B7E7DF27E694F73)
      - 0x18019002680273
      + (((_QWORD)&a36 << (((16 * v36) ^ 0x60u) + 113)) & 0x76FCFBE4FCD29EE0);
  LOBYTE(STACK[0x327]) = ((((v39 - 81) & 0xFE) + 124) ^ v40) * (v40 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v37 + 8 * v39) - 8))();
}

void sub_1CD10D044()
{
  JUMPOUT(0x1CD10D010);
}

uint64_t sub_1CD10D04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37)
{
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;

  v42 = *(_QWORD *)(a18 + 24);
  memset((void *)(v40 - 176), 50, 16);
  v43 = 235795823 * (((v40 - 160) & 0xA61497F7 | ~((v40 - 160) | 0xA61497F7)) ^ 0xCD462151);
  *(_DWORD *)(v40 - 152) = v43 + 1596901039;
  *(_QWORD *)(v40 - 160) = v40 - 192;
  *(_DWORD *)(v40 - 124) = (v37 + 1799) ^ v43;
  *(_QWORD *)(v40 - 144) = &a37;
  *(_QWORD *)(v40 - 136) = v42;
  *(_QWORD *)(v40 - 120) = v40 + 0x3EAB24E7EEDAAD1ALL;
  v44 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v41 + 8 * (v37 - 21)) - 4))(v40 - 160);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38
                                                      + 8
                                                      * ((1117
                                                        * (*(_DWORD *)(v40 - 128) == v39 + ((v37 + 34) | 0x403) - 1123)) ^ v37))
                                          - 4))(v44);
}

uint64_t sub_1CD10D154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v9;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 8) + v0 - 0x7A12F6E83BCD2E84)
     - *(unsigned __int8 *)(v5 + v0 - 0x7A12F6E83BCD2E84);
  v7 = v0 + 1;
  v9 = (v6 ^ 0xFD6C6FCF) + ((v4 - 1044) ^ 0x73FFF5B2) + ((2 * v6) & 0xFAD8DF9E) != 1902929356 || v7 == v2 + 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((473 * v9) ^ v4)) - 4))();
}

uint64_t sub_1CD10D1DC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v4 = 1178560073 * ((v3 - 160 - 2 * ((v3 - 160) & 0xDE8BE26CF99EC706) - 0x21741D93066138FALL) ^ 0xC577B284430ABF64);
  *(_QWORD *)(v3 - 144) = v4 + 1902929356;
  *(_DWORD *)(v3 - 132) = v4;
  *(_DWORD *)(v3 - 128) = v4 + a1 + 2104632311;
  *(_QWORD *)(v3 - 120) = v1 - v4;
  *(_DWORD *)(v3 - 156) = ((a1 + 1671359681) ^ 0x6B) + v4;
  *(_DWORD *)(v3 - 152) = ((a1 + 1671359681) ^ 0x3E) + v4;
  *(_DWORD *)(v3 - 136) = a1 + 1671359681 + v4;
  v5 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E89A15E0 + a1 - 8) - 8))(v3 - 160);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * *(int *)(v3 - 160)) - 4))(v5);
}

void sub_1CD10D2AC()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 32) = 1645153785;
}

void sub_1CD10D2F8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1CD10D358()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((7 * (v1 == 1206753083)) ^ 0x47Au)) - 4))();
}

uint64_t sub_1CD10D38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;

  v4 = v3 + 1013;
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 800) = 1612862051;
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 804) = 159353952;
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 808) = *(_QWORD *)(a1 + 96) + 816;
  v5 = *(_QWORD *)(a1 + 96) + 0xC7F991DE640913DLL;
  v6 = 1178560073
     * (((&v8 ^ 0xF4D518DC | 0xA372392C)
       - (&v8 ^ 0xF4D518DC)
       + ((&v8 ^ 0xF4D518DC) & 0x5C8DC6D0)) ^ 0xED335992);
  v9 = *(_QWORD *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  v10 = v5;
  v12 = v6 + v4 + 306418366;
  v8 = v6 + 308;
  ((void (*)(unsigned int *))(*(_QWORD *)(a3 + 968) - 12))(&v8);
  return (1279786127 * v11 - 1666208810);
}

void sub_1CD10D4F0(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (235795823 * ((-127693918 - (a1 | 0xF8638BA2) + (a1 | 0x79C745D)) ^ 0x93313D04));
  __asm { BR              X10 }
}

uint64_t sub_1CD10D5BC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_DWORD *)(*(_QWORD *)(a1 + 8) + v3) == 45 * (v4 ^ 0x29C) + v1)
                                          * (((v4 ^ 0x29C) + 1940) ^ 0x792)) ^ v4))
                            - 12))();
}

uint64_t sub_1CD10D600@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v4 = a1;
  v5 = v1;
  v6 = v2 + 1374699841 * ((2 * (&v4 & 0x37738180) - &v4 - 930316676) ^ 0xA5786675) + 1072;
  return sub_1CD0E22A8((uint64_t)&v4);
}

void sub_1CD10D780(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1224239923 * ((a1 & 0x9A8552A9 | ~(a1 | 0x9A8552A9)) ^ 0x97C95081);
  __asm { BR              X9 }
}

void sub_1CD10D854()
{
  _DWORD *v0;

  *v0 = -1645193696;
}

uint64_t sub_1CD10DE44(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = 1178560073 * ((2 * (a1 & 0x7B1A53C3) - (_DWORD)a1 - 2065322948) ^ 0x3E71D45E);
  v2 = a1[1] + v1;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E89A15E0 + (int)(v2 ^ 0x753))
                              + (int)(((((*a1 - v1) ^ 0x620F0DF9) - 1 < 0x63) * (v2 - 1751 + (v2 ^ 0x7DB) - 322)) ^ v2)
                              - 1)
                            - 12))();
}

uint64_t sub_1CD10DEE0@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;

  *(_DWORD *)(*(_QWORD *)(result + 8) - 0x67843F9A1244BACBLL) = (a2 ^ 0x9DF0F206)
                                                              - ((v2 - 1004659888) & (2 * (a2 ^ 0x9DF0F206) - 85198))
                                                              + 1645111186;
  return result;
}

uint64_t sub_1CD10DF80(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))((char *)off_1E899CFF8[((109 * (*(_DWORD *)(a2 + 4) != 1206753084)) ^ 0x3A7u) - 1] - 8))();
}

uint64_t sub_1CD10DFC0()
{
  return 4294925278;
}

uint64_t sub_1CD10DFC8(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = **(_BYTE **)(a2 + 8) != 0;
  *(_BYTE *)(a1 + 88) = (v2 ^ 0x2F) + 2 * v2;
  return 0;
}

void sub_1CD10E000(uint64_t a1)
{
  int v1;
  int v2;
  _BYTE v3[4];
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 - 108757529 * ((-2 - ((a1 | 0x1E625E8E) + (~(_DWORD)a1 | 0xE19DA171))) ^ 0x101C35A);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19);
  v5 = *(_QWORD *)(a1 + 8);
  v4 = (460628867 * ((((v3 | 0xC87E0ECA) ^ 0xFFFFFFFE) - (~v3 | 0x3781F135)) ^ 0x7B177348)) ^ (v1 - 113);
  sub_1CD112038((uint64_t)v3);
  __asm { BR              X9 }
}

uint64_t sub_1CD10E140@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((((131 * ((v1 - 877) ^ 0x182)) ^ 0x191) * (((v3 ^ v2) & 0x1F) == 0xF)) ^ v1))
                            - 4))();
}

uint64_t sub_1CD10E1B0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;

  v4 = ((v2 + 892) ^ 0xB0240DD2) + (v3 ^ 0xCFFFFFD5) + 2145122043 + (v1 & 0x9FFFFFAA) < 0x7FFFFFFF;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((8 * (((v2 ^ 0x29 ^ v4) & 1) == 0)) & 0xDF | (32 * ((v2 ^ 0x229 ^ ~v4) & 1))) ^ v2))
                            - 12))();
}

uint64_t sub_1CD10E234@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((511 * (v1 + 287788292 < ((v2 - 2113754378) & 0x7DFD53BFu) + 2147482700)) ^ v2))
                            - 4))();
}

uint64_t sub_1CD10E294@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  unsigned __int8 v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0xC7F991DE6408E15) + 4 * (v1 + v2 + 1)) = -1075083249;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1884 * ((v4 ^ ((v1 + v2) < 0x7FFFFFFF)) & 1)) ^ (v3 - 18)))
                            - 4))();
}

uint64_t sub_1CD10E2F4@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v3;
  char v4;
  int v5;
  _QWORD *v6;
  int v7;
  unsigned int v8;

  *(_DWORD *)(*v6 + 4 * (a2 + v3 + 1)) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((((v4 - 122) ^ (a2 + v3 < v8)) & 1) * a1) ^ v7))
                            - 4))();
}

void sub_1CD10E330()
{
  int v0;
  int v1;
  int v2;
  int v3;
  _DWORD *v4;
  int v5;
  int v6;

  v5 = 963203894 - v0;
  if (*v4 + 1988129696 >= ((v3 - 390) ^ 0x3B3))
    v6 = v5;
  else
    v6 = v1;
  *v4 += v2 + v6 + 2;
}

void sub_1CD10E67C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1CD10E6E4()
{
  return 4294925278;
}

void sub_1CD10E86C(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 40) != 0x27681A84B35EB105
    && *(_QWORD *)(a1 + 16) != 0x3EEC7284B8A20CABLL
    && *(_QWORD *)a1 != 0x66706D739F962A92;
  v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((((2 * a1) | 0xD63BF148) - a1 - 1797126308) ^ 0x61E9F68B);
  __asm { BR              X9 }
}

uint64_t sub_1CD10E980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  int v19;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((1069 * (*(_DWORD *)(a18 - 0x27681A84B35EB0EDLL) == 1645153785)) ^ v19)) - (((v19 - 564) | 0x51Cu) ^ 0x516)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1CD10E9E0(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  unsigned int v26;
  _BOOL4 v27;

  v24.n128_u64[0] = 0x6464646464646464;
  v24.n128_u64[1] = 0x6464646464646464;
  v25.n128_u64[0] = 0x3232323232323232;
  v25.n128_u64[1] = 0x3232323232323232;
  v26 = *(_DWORD *)(a22 - 0x27681A84B35EB0F5) - 1184605341;
  v27 = v26 < 0xCBE984DD;
  if (v26 >= 0xCBE984DD)
    v27 = v26 > 0xCBE984DD;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v23
                                                                                             + 8
                                                                                             * ((v27
                                                                                               * ((149 * (v22 ^ 0x512)
                                                                                                 - 1222) ^ 0x3FC)) ^ (149 * (v22 ^ 0x512))))
                                                                                 - ((5 * ((149 * (v22 ^ 0x512)) ^ 0x691u)) ^ 0x22DLL)))(a1, a2, a3, a4, v24, v25);
}

uint64_t sub_1CD10EC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27)
{
  int v27;
  uint64_t v28;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v28 + 8 * (v27 - 559)) - 8))((((((v27 ^ 0x3A2) + 242) | 0x119) ^ 0x25F)
                                                                                       + 536870464) & a27);
}

uint64_t sub_1CD10F948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  _BOOL4 v23;
  _BOOL4 v24;

  *(_BYTE *)(*v19 + (v17 + a8)) = -78;
  v21 = (((v18 - 888) | 0x20) ^ 0x2FE47CEB) + v17;
  v22 = ((a17 - 504887143) < 0x50E7ACE1) ^ (v21 < 0x50E7ACE1);
  v23 = v21 < a17 - 504887143;
  if (v22)
    v24 = (a17 - 504887143) < 0x50E7ACE1;
  else
    v24 = v23;
  return (*(uint64_t (**)(void))(v20 + 8 * ((23 * v24) ^ v18)))();
}

uint64_t sub_1CD10F9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _BOOL4 v16;
  unsigned int v17;
  int v18;
  _BOOL4 v19;

  v16 = v12 < v8;
  *(_BYTE *)(*v14 + (v9 + 1 + a8)) = 50;
  v17 = v10 + v9 + 499;
  v18 = v16 ^ (v17 < v8 + v11 - 1422);
  v19 = v17 < v12;
  if (!v18)
    v16 = v19;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v16 * v13) ^ v11)))();
}

void sub_1CD10FA18(int a1@<W8>)
{
  _QWORD *v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 - 0x3EEC7284B8A20CABLL) = *v1;
  *(_DWORD *)(v4 - 0x66706D739F962A92) = a1;
  *v1 = 0;
  *(_QWORD *)(v7 - 0x27681A84B35EB0FDLL) = 0x23F5AF4C23F5AF4CLL;
  *v2 = 310716794;
  *(_DWORD *)(v7 - 0x27681A84B35EB0F1) = ((*(_DWORD *)(v7 - 0x27681A84B35EB0F1) & 0xFFFFFFFE ^ 0x42D83F58 | 0x95997BD8)
                                          - (*(_DWORD *)(v7 - 0x27681A84B35EB0F1) & 0xFFFFFFFE ^ 0x42D83F58 | 0x6A668427)
                                          + 1785103399) ^ 0xD7414481;
  *(_DWORD *)(v6 + 28) = *v5;
}

void jfkdDAjba3jd(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, _DWORD *a6)
{
  int v6[10];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  *a5 = 0;
  *a6 = 0;
  v6[1] = 108757529
        * (((v6 | 0x51085D1D) - v6 + (v6 & 0xAEF7A2E0)) ^ 0xB1943F36)
        + 1695027452;
  sub_1CD125890(v6);
  __asm { BR              X8 }
}

uint64_t sub_1CD10FC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  a15 = &STACK[0x4BD26FD1213425B9];
  a17 = 1307 - 460628867 * ((&a15 & 0xA1039BA5 | ~(&a15 | 0xA1039BA5)) ^ 0x126AE627);
  sub_1CD1015E8((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((16 * (a16 == 1645153785)) | v17)) - 12))(v19, v20, v21, v22, v23, v24, v25, v26);
}

uint64_t sub_1CD10FCAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v26 = 1178560073 * ((&a15 & 0x443E359C | ~(&a15 | 0x443E359C)) ^ 0x155B201);
  a17 = a12;
  a18 = v26 ^ 0x3E8;
  a16 = (v22 ^ 0xF3FDF27D) + ((2 * v22) & 0xE7FBE4FA) + 1551851452 + v26;
  sub_1CD111694((uint64_t)&a15);
  v27 = 1178560073 * (((&a15 | 0xFEB9F472) - (&a15 & 0xFEB9F472)) ^ 0x442D8C10);
  a17 = a12;
  a18 = v27 ^ 0x3E8;
  a16 = ((2 * v21) & 0xECFABD76) + 1098 + (v21 ^ 0xF67D5EBB) + 1509945140 + v27;
  sub_1CD111694((uint64_t)&a15);
  v28 = 1178560073 * ((1638435589 - (&a15 | 0x61A88B05) + (&a15 | 0x9E5774FA)) ^ 0x24C30C98);
  a18 = v28 ^ ((v20 ^ 0x4BF17F7E) - 1081107028 + ((2 * v20) & 0x97E2FEFC));
  a19 = v19;
  a17 = a12;
  a16 = v28 + 1289;
  sub_1CD1032A8((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * ((750 * (a15 == 1645153785)) ^ 0x451u)) - 12))(v29, v30, v31, v32, v33, v34, v35, v36, v25, v23);
}

uint64_t sub_1CD10FEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, uint64_t a16, unsigned int a17, unsigned int a18, unsigned int a19, int a20)
{
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 460628867 * ((&a15 & 0x289C561E | ~(&a15 | 0x289C561E)) ^ 0x9BF52B9C);
  a19 = 635686783 - v22;
  a17 = v22 + 1697367587;
  a18 = v22 + v20 + 2138962262;
  a15 = &STACK[0x58A7AA08624568F6];
  a16 = a12;
  v23 = sub_1CD125C5C((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * ((27
                                                        * (((v20 + 101) ^ (a20 == ((v20 - 1363541339) & 0x5145FBB7 ^ 0x620F0F5E))) & 1)) ^ v20))
                                          - 12))(v23);
}

uint64_t sub_1CD10FF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, unint64_t *a16, unint64_t *a17, unint64_t *a18, unsigned int a19)
{
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  v22 = v19 & 0x70D0B2DF;
  a16 = a11;
  a17 = &STACK[0x72E1645BEBB64033];
  a19 = (v22 + 211) ^ (1225351577 * (&a15 ^ 0x239AD816));
  a18 = &STACK[0x1E6EF7153090DEA];
  ((void (*)(unsigned int *))(*(_QWORD *)(v20 + 8 * (v22 - 78)) - 8))(&a15);
  a16 = &STACK[0x384B062F07609564];
  a17 = a11;
  a15 = (v22 + 202) ^ (1374699841 * (&a15 ^ 0x6DF41809));
  ((void (*)(unsigned int *))(*(_QWORD *)(v20 + 8 * (v22 ^ 0x3Au)) - 8))(&a15);
  a16 = a11;
  a15 = (v22 + 703) ^ (1755732067
                     * ((2 * (&a15 & 0x22973738) - &a15 + 1567148230) ^ 0x83AE751D));
  v23 = sub_1CD121CC8((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((((_DWORD)a17 == 1645153785) * (((v22 - 677531922) & 0x286254D3) + 369)) ^ v22)))(v23);
}

uint64_t sub_1CD110108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unsigned int v14;
  uint64_t v15;

  return (*(uint64_t (**)(void))(v15 + 8 * ((910 * (a14 == ((221 * (v14 ^ 0x8A)) ^ 0x620F09A8))) ^ v14)))();
}

uint64_t sub_1CD110148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  unsigned int v13;
  uint64_t v14;

  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((691 * (a13 != ((((v13 + 756930384) & 0xD2E22C71) + 1645152037) ^ (v13 + 1536)))) ^ v13)))();
}

uint64_t sub_1CD1101A0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = (*(uint64_t (**)(_QWORD))(v2 + 8 * (v1 - 1453)))(a1 ^ 0x620F0DF9u) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v4 * ((v1 - 1207) ^ 0x5C7 ^ (5 * (v1 ^ 0x652)))) ^ v1)) - 8))();
}

uint64_t sub_1CD1101F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  uint64_t v14;
  unsigned int v15;

  v15 = (a13 ^ 0x620F0DF9) + ((v13 + 494461987) & 0xE2871B56 ^ 0x76D504A8) - ((2 * (a13 ^ 0x620F0DF9)) & 0xEDAA0BF4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((1615
                                          * (((2 * v15) & 0xDFDBFDDA ^ 0xCD8A09D0)
                                           + ((v13 - 329) ^ 0x1938FB98 ^ v15)
                                           - 1610946564 != 266921705)) ^ v13))
                            - 12))();
}

uint64_t sub_1CD1102A4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 + v0 + v2 - 1877868607) > 7) * (v2 - 334)) | v2)))();
}

uint64_t sub_1CD1102F0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  _BOOL4 v5;

  v4 = v2 + 761;
  v5 = v1 - a1 < (v4 ^ 0x46BuLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((v5 | (16 * v5)) ^ v4)) - 12))();
}

uint64_t sub_1CD110330(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  char v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v6
                                                              + 8
                                                              * (((((v4 < 0x20) ^ (a4 - v5 - 99)) & 1)
                                                                * (a4 - 812)) ^ a4))
                                                  - 4))(a1, (a4 - 146));
}

uint64_t sub_1CD110370(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v10 = v4 + v5 + v6;
  v11 = v1 + v10;
  v12 = *(_OWORD *)(v11 - 31);
  v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((((v2 & 0xFFFFFFE0) == 32) * ((38 * (v7 ^ (v3 + 1095))) ^ 0x44D)) ^ (v8 + v7 + 734)))
                            - 8))();
}

void sub_1CD1103D8()
{
  JUMPOUT(0x1CD110388);
}

uint64_t sub_1CD1103E4(uint64_t a1)
{
  int v1;
  int v2;
  void (*v3)(_BYTE *);
  int v4;
  int v5;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[4];
  unsigned int v12;
  uint64_t v13;

  *v7 = a1;
  *v8 = v2;
  v5 = (v1 ^ 0x4DE) - 426;
  v13 = v9;
  v12 = (v1 ^ 0x4DE) + (v11 ^ 0xAF40E2F) * v4 - 76;
  v3(v11);
  v13 = v10;
  v12 = v5 + ((((2 * v11) | 0xC2DB3190) - v11 + 512911160) ^ 0xEB9996E7) * v4 + 350;
  v3(v11);
  return 0;
}

void sub_1CD110674(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) - 1224239923 * ((-2 - ((a1 | 0xAACC30C4) + (~(_DWORD)a1 | 0x5533CF3B))) ^ 0xA78032EC);
  __asm { BR              X14 }
}

void sub_1CD11078C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + a1) = 159353952;
}

void sub_1CD111694(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((2 * (a1 & 0x878F6F35) - a1 + 2020643018) ^ 0xC2E4E8A8));
  __asm { BR              X10 }
}

uint64_t sub_1CD11176C@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, unint64_t *a5, uint64_t a6, unsigned int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v10 = 3804331 * (((&a3 | 0x81ADAAE9) + (~&a3 | 0x7E525516)) ^ 0xFF788F1E);
  a5 = &STACK[0x58C2F3F47EC954F5];
  a6 = v8;
  a7 = v10 + 910892480;
  a3 = v10 + 1116194074;
  a4 = v10 + v7 - 480;
  v11 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(a1 + 8 * (v7 - 818)) - 12))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((1204 * (*(_DWORD *)(v8 - 0x27681A84B35EB0EDLL) == 1645153785)) ^ v7)))(v11);
}

void sub_1CD111838(_DWORD *a1@<X8>)
{
  _DWORD *v1;
  int v2;
  unsigned int v3;
  _BYTE *v4;

  v3 = v1[1] - v2 - ((2 * (v1[1] - v2) + 1594186638) & 0x989A21DE) - 70271306;
  *v4 = (HIBYTE(v3) ^ 0x4C) - ((v3 >> 23) & 0x64) + 50;
  v4[1] = (BYTE2(v3) ^ 0x4D) - ((v3 >> 15) & 0x64) + 50;
  v4[2] = (BYTE1(v3) ^ 0x10) - ((2 * (BYTE1(v3) ^ 0x10)) & 0x64) + 50;
  v4[3] = v3 ^ 0xDD;
  *v1 = *a1;
}

void sub_1CD1118FC(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1CD111940()
{
  return 4294925273;
}

void zxcm2Qme0x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X8 }
}

uint64_t sub_1CD111A34(uint64_t a1, int a2)
{
  uint64_t v2;
  BOOL v3;
  int v4;

  if (a1)
    v3 = a2 == 0;
  else
    v3 = 0;
  v4 = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((7 * v4) ^ 0x2D2u)) - 4))();
}

uint64_t sub_1CD111A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;

  a14 = v15
      + 108757529 * ((-1250741474 - (&a13 | 0xB573331E) + (&a13 | 0x4A8CCCE1)) ^ 0xAA10AECA)
      + 1695026727;
  v16 = sub_1CD125890(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14
                                                      + 8
                                                      * ((1788 * (a13 == ((239 * (v15 ^ 0x2D6)) ^ 0x620F0F34))) ^ v15))
                                          - ((v15 - 1689052227) ^ 0x9B531E96)))(v16);
}

uint64_t sub_1CD111B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a15 = v16 - 460628867 * (((&a13 | 0x8BDC4BD5) + (~&a13 | 0x7423B42A)) ^ 0xC74AC9A9) + 590;
  a13 = &STACK[0x4BD26FD1213425B9];
  sub_1CD1015E8((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * (int)(((a14 != v15) * ((v16 - 76030703) ^ 0xFB77DFC6)) ^ v16))
                                                                                       - ((v16 - 76030703) & 0x9FDB3EB3 ^ 0x9B531E96)))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_1CD111C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  uint64_t v24;

  v23 = 1178560073 * (&a13 ^ 0xBA947862);
  a17 = v17;
  a14 = v23 + v22 - 128;
  a16 = (((v22 + 1974771810) & 0x8A4B5F9E ^ 0x1FF95825)
       + ((2 * v18) & 0xD70F7EF6)
       + (v18 ^ 0xEB87BDAE ^ ((v22 - 884) | 0xC0))) ^ v23;
  a15 = a12;
  v24 = ((uint64_t (*)(int *))(*(_QWORD *)(v20 + 8 * (v22 ^ 0x509)) - 8))(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * (((a13 != v19) | (2 * (a13 != v19))) ^ v22)) - 12))(v24);
}

uint64_t sub_1CD111CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, int a15, int a16, int a17, int a18)
{
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v21 = 460628867 * ((&a13 - 1886733488 - 2 * ((unint64_t)&a13 & 0x8F8ABB50)) ^ 0xC31C392D);
  a13 = &STACK[0x58A7AA08624568EE];
  a14 = a12;
  a15 = v21 - 1370370129;
  a16 = v21 + 2138961942 + v20;
  a17 = 635686783 - v21;
  v22 = sub_1CD125C5C((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * (((a18 == ((v20 - 693) ^ (v18 + 307)))
                                                        * (((v20 - 1146) | 0x4A0) - 748)) ^ v20))
                                          - 12))(v22);
}

uint64_t sub_1CD111DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, unsigned int a14, unint64_t *a15, uint64_t a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  a14 = (v16 - 1111) ^ (1374699841
                      * ((((&a14 | 0x21ACE69C) ^ 0xFFFFFFFE) - (~&a14 | 0xDE531963)) ^ 0xB3A7016A));
  a15 = &STACK[0x384B062F07609554];
  a16 = a10;
  v19 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v17 + 8 * (v16 - 1275)) - 8))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((121 * (a12 == ((v16 - 1710155678) | 0x1420080) - 960762009)) ^ v16)))(v19);
}

uint64_t sub_1CD111E74()
{
  uint64_t v0;
  void (*v1)(unsigned int *);
  unsigned int v2;
  int v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;

  v14 = 1689051594
      - 108757529 * ((2 * (&v9 & 0x4A6220) - &v9 + 2142608861) ^ 0x9F29FFF6)
      + v3
      + 93;
  v11 = v0;
  v12 = v6;
  v13 = 0x3B4E8EE293AAEC8ALL;
  (*(void (**)(unsigned int *))(v4 + 8 * (v3 + 1689051594)))(&v9);
  v9 = (v3 + 1689052348) ^ (1755732067
                          * (((&v9 | 0x7744F355) - (&v9 & 0x7744F355)) ^ 0xA9824E8E));
  v11 = v6;
  sub_1CD121CC8((uint64_t)&v9);
  v10 = v3
      + 1689051594
      + 535753261 * ((((2 * &v9) | 0xA365A42A) - &v9 + 776809963) ^ 0xDB46DC3A)
      + 937;
  v11 = v6;
  v1(&v9);
  v11 = v8;
  v10 = v3
      + 1689052227
      + 535753261 * ((&v9 & 0x5FB4813F | ~(&v9 | 0x5FB4813F)) ^ 0xAABF70EF)
      + 304;
  v1(&v9);
  return v7 ^ v2;
}

void sub_1CD112038(uint64_t a1)
{
  int v1;
  _DWORD v2[2];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 4) ^ (460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86));
  v3 = *(_QWORD *)(a1 + 8);
  v2[0] = v1 + 628203409 * (((v2 | 0xF7CBF79) + (~v2 | 0xF0834086)) ^ 0x8DF4B34B) - 617;
  sub_1CD0F31A8((uint64_t)v2);
  __asm { BR              X8 }
}

void sub_1CD112134()
{
  _DWORD *v0;
  int v1;
  uint64_t v2;
  int v3;

  if ((*(_DWORD *)(v2 - 0xC7F991DE6408E19) - 159353953) >= 0x7FFFFFFF)
    v3 = v1;
  else
    v3 = v1 + 2;
  *v0 = v3;
}

void sub_1CD1121A0(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 1755732067 * (((a1 | 0xFD508F6) - (_DWORD)a1 + (a1 & 0xF02AF709)) ^ 0xD113B52D);
  __asm { BR              X14 }
}

uint64_t sub_1CD1122C0()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;

  v4 = v0 + 295202885 < (int)((v1 ^ 0x1B17FF6C) + v3);
  if (v3 > 0x64E8035A != v0 + 295202885 < -1692926811)
    v4 = v3 > 0x64E8035A;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((v4 << 9) | (v4 << 10) | v1 ^ 0x2EC)) - 12))(0x5795C76E21738119);
}

uint64_t sub_1CD1123F8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, _QWORD *a5@<X6>, unsigned int a6@<W7>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BOOL4 v19;

  v17 = a1 + a3 + (*(_DWORD *)(v7 + 4 * v12) ^ v9) + a6 * (unint64_t)(*(_DWORD *)(*a5 + 4 * a2) ^ v9);
  *(_DWORD *)(v7 + 4 * v12) = v17
                            + (((((v11 - 1990494502) & 0x76A48BC9) - 708) | 0x20) ^ (v9 + 283))
                            - (((_DWORD)v17 << (((v11 - 38) & 0xC9 ^ v13) - 69)) & 0x7FD7101E);
  v19 = a2 - 1793570764 < a7 && a2 - 1793570764 >= a4;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v8
                                                               + 8 * ((v11 - 1990494502) & 0x76A48BC9 ^ (v19 * v10)))
                                                   - 4))((v14 ^ HIDWORD(v17)) + (v15 & (v17 >> 31)) + v16);
}

uint64_t sub_1CD1124B8(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((57 * (a1 != ((v2 + 866) | 0x101u) + 0x5795C76E21737B70)) | v2))
                            - 8))();
}

uint64_t sub_1CD11251C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v4 = a1 - 1211;
  v5 = v1 + 77641432 < (int)(v3 + 236995384);
  if (v3 > ((a1 - 1211) ^ 0x71DFBC29u) != v1 + 77641432 < (int)((a1 - 1381569963) & 0x52591147 ^ 0x8E20427E))
    v5 = v3 > (v4 ^ 0x71DFBC29u);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1310 * v5) ^ v4)) - 4))();
}

uint64_t sub_1CD112614@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;

  v14 = a1 - 0x5795C76E21738119 + (*(_DWORD *)(v2 + 4 * v4) ^ v5);
  *(_DWORD *)(v2 + 4 * v4) = v14 + v5 - ((2 * v14) & 0x7FD7101E);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v8 + 88 + v6) & v7 ^ a2 ^ (v14 >> (((v8 + 88) ^ v9)
                                                                                * v10
                                                                                - 86)))
                                           + v12
                                           + (v11 & (2 * (v14 >> (((v8 + 88) ^ v9) * v10 - 86)))) != 0x5795C76E21738119)
                                          * v13) ^ (v8 + 88)))
                            - 8))();
}

uint64_t sub_1CD1126BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10)
{
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  _BOOL4 v14;
  int v15;
  _BOOL4 v16;

  v13 = *a10 - 176105989;
  v14 = v10 - 176105989 < v12 + 2130730981;
  v15 = v14 ^ (v13 < ((v12 - 630) | 0x146) + 2130731285);
  v16 = v10 - 176105989 > v13;
  if (!v15)
    v14 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((1483 * v14) ^ v12)) - 8))();
}

void sub_1CD112730()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

uint64_t sub_1CD112754(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 1374699841 * ((((2 * a1) | 0x4FD35BAC) - a1 + 1477857834) ^ 0xCA1DB5DF);
  v2 = *(_DWORD *)a1 ^ v1;
  v3 = *(_DWORD *)(a1 + 16) + v1;
  if (v3 < 0)
    v3 = -v3;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19);
  v6 = v4 - 159353952;
  v5 = v4 - 159353952 < 0;
  v7 = 159353952 - v4;
  if (!v5)
    v7 = v6;
  return (*((uint64_t (**)(void))*(&off_1E89A15E0 + v2 - 1300) + ((573 * (v3 >> 5 < v7)) ^ v2) - 1))();
}

uint64_t sub_1CD112804@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;

  v4 = ((*(_DWORD *)(*(_QWORD *)(v2 - 0xC7F991DE6408E15) + 4 * v3) ^ 0xBFEB880F) >> a2) ^ 0xE0F36651;
  *(_DWORD *)(result + 4) = v4 & 0xC4EA2BA4 ^ 0x3264FBF1 ^ ((v4 & 0xC4822281 | 0x12788964)
                                                          - (v4 & 0x680924 | 0xED87769B)
                                                          - 309889381);
  return result;
}

uint64_t sub_1CD112884(uint64_t result)
{
  *(_DWORD *)(result + 4) = 538735252;
  return result;
}

void sub_1CD112894()
{
  uint64_t v0;
  int v1;

  v0 = MEMORY[0x1E0C80A78]();
  v1 = *(_DWORD *)(v0 + 24) - 1225351577 * ((-2 - ((v0 | 0x64CFEAB8) + (~(_DWORD)v0 | 0x9B301547))) ^ 0xB8AACD51);
  __asm { BR              X13 }
}

uint64_t sub_1CD112A0C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37,uint64_t a38,char a39)
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;

  v46 = &a39 + v39;
  v65 = &a29 + v39;
  v64 = &a31 + v39;
  v63 = &a35 + v39;
  v62 = &a37 + v39;
  v61 = &a33 + v39;
  v59 = v40;
  v60 = &a25 + v39;
  v66 = &a23 + v39;
  v47 = *a1;
  v48 = a1[5];
  v68 = a1[4];
  LODWORD(a13) = v42 + 380;
  *(_QWORD *)(v45 - 104) = *(_QWORD *)(*a1 - 0x7542B2AE577378FLL);
  *(_QWORD *)(v45 - 128) = &a39 + v39;
  *(_QWORD *)(v45 - 120) = v48;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923 * (((v45 - 144) & 0x3BB37F04 | ~((v45 - 144) | 0x3BB37F04)) ^ 0x36FF7D2C);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = a3;
  v67 = *(void (**)(uint64_t))(a2 + 8 * ((int)v42 - 1378));
  v69 = v41;
  v67(v45 - 144);
  *(_QWORD *)(v45 - 136) = v48;
  *(_QWORD *)(v45 - 128) = v66;
  *(_DWORD *)(v45 - 144) = (v42 - 453) ^ (((2 * ((v45 - 144) & 0x7323D130) - (v45 - 144) + 215756489) ^ 0x2F46F6DF) * v43);
  *(_QWORD *)(v45 - 120) = v46;
  *(_QWORD *)(v45 - 112) = v47;
  ((void (*)(uint64_t))((char *)*(&off_1E89A15E0 + (int)v42 - 1504) - 4))(v45 - 144);
  *(_QWORD *)(v45 - 104) = v46;
  *(_DWORD *)(v45 - 112) = v42 + 380 + 1224239923 * ((v45 + 460286470 - 2 * ((v45 - 144) & 0x1B6F6A96)) ^ 0xE9DC9741);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v65;
  *(_QWORD *)(v45 - 120) = v48;
  v67(v45 - 144);
  *(_QWORD *)(v45 - 104) = v65;
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v64;
  *(_QWORD *)(v45 - 120) = v48;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923 * (((v45 - 144) & 0xFA6987D9 | ~((v45 - 144) | 0xFA6987D9)) ^ 0xF72585F1);
  v67(v45 - 144);
  *(_QWORD *)(v45 - 104) = v64;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923
                         * ((((v45 - 144) | 0x89678349) - (v45 - 144) + ((v45 - 144) & 0x76987CB0)) ^ 0x7BD47E9E);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v63;
  *(_QWORD *)(v45 - 120) = v48;
  v67(v45 - 144);
  *(_QWORD *)(v45 - 104) = v63;
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v62;
  *(_QWORD *)(v45 - 120) = v48;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923
                         * ((((v45 - 144) | 0xA3105CC4) - (v45 - 144) + ((v45 - 144) & 0x5CEFA338)) ^ 0x51A3A113);
  v67(v45 - 144);
  *(_QWORD *)(v45 - 104) = v62;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923 * (((v45 - 144) & 0x9B210A30 | ~((v45 - 144) | 0x9B210A30)) ^ 0x966D0818);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v61;
  *(_QWORD *)(v45 - 120) = v48;
  v67(v45 - 144);
  *(_QWORD *)(v45 - 104) = v61;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923 * ((((v45 - 144) | 0x95C539CC) - ((v45 - 144) & 0x95C539CC)) ^ 0x6776C41B);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v60;
  *(_QWORD *)(v45 - 120) = v48;
  v67(v45 - 144);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 104) = v60;
  *(_QWORD *)(v45 - 128) = v66;
  *(_QWORD *)(v45 - 120) = v48;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923 * (((v45 - 144) & 0x8BC4ED51 | ~((v45 - 144) | 0x8BC4ED51)) ^ 0x8688EF79);
  v67(v45 - 144);
  v49 = *(_QWORD *)(v47 - 0x7542B2AE5773797);
  *(_DWORD *)(v45 - 128) = v42
                         + 1374699841
                         * ((-1520606683 - ((v45 - 144) | 0xA55D6225) + ((v45 - 144) | 0x5AA29DDA)) ^ 0x375685D3)
                         - 79;
  *(_QWORD *)(v45 - 144) = v49;
  *(_QWORD *)(v45 - 136) = v44;
  sub_1CD0E22A8(v45 - 144);
  *(_QWORD *)(v45 - 136) = v68;
  *(_DWORD *)(v45 - 144) = v42 + 235795823 * ((v45 - 862440077 - 2 * ((v45 - 144) & 0xCC983603)) ^ 0x58357F5A) - 1147;
  sub_1CD0EF550(v45 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t))(v69 + 8 * (int)((((*(_DWORD *)(v45 - 140) - 313388985) < 0x7FFFFFFF) * (((v42 - 1428) | 0x54) + ((v42 - 1051) ^ 0xFFFFFEC0))) ^ v42)))(v50, v51, v52, v53, v54, v55, v56, v57, v59, v60, v61, v62, v63, v64, v65, v66, a12, a13, v42);
}

uint64_t sub_1CD112F10()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  v5 = 1224239923 * ((v4 - 144) ^ 0xF2B3FDD7);
  *(_DWORD *)(v4 - 128) = v5 + v0 + 10;
  *(_DWORD *)(v4 - 144) = v5 ^ 0x3EAF37E3;
  *(_QWORD *)(v4 - 136) = v8;
  sub_1CD0E4238((_DWORD *)(v4 - 144));
  *(_QWORD *)(v4 - 104) = v1;
  *(_DWORD *)(v4 - 112) = v0
                        + 1224239923 * ((2 * ((v4 - 144) & 0x53DB0AB8) - (v4 - 144) + 740619589) ^ 0xDE970892)
                        + 1724;
  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 144) = v3;
  *(_QWORD *)(v4 - 136) = v8;
  v9(v4 - 144);
  *(_DWORD *)(v4 - 128) = ((v0 + 556) | 0x98)
                        + 1374699841 * ((((v4 - 144) | 0xF444FDE1) + (~(v4 - 144) | 0xBBB021E)) ^ 0x99B0E5E9)
                        + 557;
  *(_QWORD *)(v4 - 144) = v1;
  *(_QWORD *)(v4 - 136) = v7;
  return sub_1CD0E22A8(v4 - 144);
}

void sub_1CD113F80(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((((2 * a1) | 0xD7F3130A) - a1 + 335967867) ^ 0x516DF1E7));
  __asm { BR              X14 }
}

uint64_t sub_1CD1140B0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;

  v14 = v11 > 0x21B7F2B0;
  *(_DWORD *)(a9 + 4 * (v9 + a1)) = *(_DWORD *)(*(_QWORD *)(v12 - 0xC7F991DE6408E15) + 4 * (v9 + a1));
  if (v14 == v9 + 985134360 < -565703345)
    v14 = v9 + 985134360 < (int)(v11 + 1581780303);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((510 * !v14) ^ (v10 - 799))) - 8))(3729263951);
}

uint64_t sub_1CD114158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  _BOOL4 v18;

  v16 = v14 - 963 + v13 - 986969928;
  v18 = v16 > 1757160217 || v16 < a13 - 390323430;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((23 * v18) ^ v14)) - 12))();
}

uint64_t sub_1CD1141C8@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  _BOOL4 v19;

  *(_DWORD *)(a10 + 4 * (v10 + a2)) = a1;
  v17 = v12 + v10 + 555;
  v19 = v17 > ((v11 - 1139021551) & 0x43E4132B) + v13 || v17 < v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((v19 * v15) ^ v11)) - 12))();
}

uint64_t sub_1CD11421C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * ((((2 * v6) ^ 0x40A)
                                                                                            * (v5 == 0)) ^ v6))
                                                                              - ((v6 - 480591215) & 0x1CA53FFF ^ 0x4B7)))(a1, a2, a3, a4, a5);
}

uint64_t sub_1CD114274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;

  v17 = 1374699841 * ((2 * ((v16 - 128) & 0x66A9F4B8) - (v16 - 128) + 425069377) ^ 0x74A21348);
  *(_DWORD *)(v16 - 128) = v15 - v17 - 188;
  *(_DWORD *)(v16 - 124) = v17 + ((a13 << 6) & 0xDB9F1FC0) + ((32 * a13) ^ 0x6DCF8FF5) - 621380673;
  *(_QWORD *)(v16 - 120) = a14;
  sub_1CD0EDAF8((_DWORD *)(v16 - 128));
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((1972 * (*a10 + ((v15 - 159355000) ^ v15 ^ 0x307u) > 0x7FFFFFFE)) ^ v15))
                            - 4))();
}

uint64_t sub_1CD114354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_DWORD *)(v18 - 112) = v14
                         + 1374699841 * (((~(v18 - 128) & 0x2D3D96EC) - (~(v18 - 128) | 0x2D3D96ED)) ^ 0x40C98EE4)
                         + 427;
  *(_QWORD *)(v18 - 128) = a14;
  *(_QWORD *)(v18 - 120) = &STACK[0xC7F991DE6408E5D];
  sub_1CD0E22A8(v18 - 128);
  *(_QWORD *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 112) = v14
                         + ((((v18 - 128) ^ 0x5F497C76) & 0x2F4F9D48 | ~((v18 - 128) ^ 0x5F497C76 | 0x2F4F9D48)) ^ 0x356D66A3)
                         * v16
                         + 567;
  *(_QWORD *)(v18 - 104) = v17;
  v19 = ((uint64_t (*)(uint64_t))*(&off_1E89A15E0 + (v14 ^ 0x4A7)))(v18 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15
                                                      + 8
                                                      * (int)(((*(_DWORD *)(v18 - 128) > ((v14 + 1618980239) ^ 0x607FB2C9u)
                                                                                       + 268031314)
                                                             * (((v14 + 1618980239) & 0x9F804EFF) + 405)) ^ v14))
                                          - 4))(v19);
}

uint64_t sub_1CD114478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  uint64_t v16;
  int v17;
  int v18;
  int v19;

  v18 = (v17 + 888) | 0x12;
  v19 = 1075 - (a16 - 159353952 + v18);
  if (a16 - 159353952 + v18 - 1075 >= 0)
    v19 = a16 - 159353952 + v18 - 1075;
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((((int)((v19 ^ 0x9BFFDFF5) + ((2 * v19) & 0x37FFBFEA) + 1677729802) > (int)((v18 - 906) ^ 0xFFFFFF56))
                                              * ((v18 + 778) ^ 0x4BB)) ^ v18)))(3219884047);
}

uint64_t sub_1CD114524(int a1)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (((*(_DWORD *)(v1 + 4 * v2) != a1) * ((v3 + 906) ^ 0xA9)) ^ v3)))();
}

uint64_t sub_1CD114554()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 - 1 > (int)((v1 - 906) ^ 0xFFFFFF56)) * ((v1 + 778) ^ 0x4BB)) ^ v1)))();
}

uint64_t sub_1CD114590()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(v5 + 32);
  *(_DWORD *)(v2 - 112) = v0 + 1374699841 * ((v2 - 128) ^ 0x6DF41809) - 376;
  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = v3;
  return sub_1CD0E22A8(v2 - 128);
}

uint64_t sub_1CD114A44(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v1 = 535753261 * (((a1 | 0xB4CC401E) - a1 + (a1 & 0x4B33BFE1)) ^ 0xBE384E31);
  v2 = *(_DWORD *)(a1 + 8) ^ v1;
  v3 = *(_DWORD *)(a1 + 24) - v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xC7F991DE6408E19);
  v6 = v4 - 159353952;
  v5 = v4 - 159353952 < 0;
  v7 = 159353952 - v4;
  if (v5)
    v8 = v7;
  else
    v8 = v6;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E89A15E0 + v2 - 1195)
                              + ((944 * ((v3 - 2129462123) >= 4 * (unint64_t)v8)) ^ v2)
                              - 1)
                            - 12))();
}

uint64_t sub_1CD114B0C()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (int)((v2 + 632557832) & 0xDA4BEEEA ^ (29 * (v1 == 2129462123))))
                            - (((v2 + 632557832) & 0xDA4BEEEA)
                             - 4)
                            + 1208))();
}

uint64_t sub_1CD114B5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 28) = v1;
  return result;
}

uint64_t sub_1CD114B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (int)((v3 - 173) ^ 0x4A))
                                                                    - v3
                                                                    + 1216))(a1, v3, 3219884047, v2);
}

uint64_t sub_1CD114BD8@<X0>(_QWORD *a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;

  *(_BYTE *)(*a1 + (a4 + a5)) = ((a3 ^ v7) >> v8)
                                            - (((a3 ^ v7) >> v8 << ((a2 + 49) ^ 0xD4)) & (a2 - 96))
                                            + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a2 | (a4 - 1 == v6) | (16 * (a4 - 1 == v6)))) - 12))();
}

uint64_t sub_1CD114C34(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                                + 8
                                                                                * (int)((74 * (v5 == 24)) ^ (a2 - 173)))
                                                                    - a2
                                                                    + 1216))(a1, a2, a3, v4);
}

uint64_t sub_1CD114C68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v7 = v4 - 1798686946 > 2047817217 || v4 - 1798686946 < v3;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v5 ^ (193 * v7)))
                                                                    - 5 * (v5 ^ 0x4E3u)
                                                                    + 1216))(a1, 5 * (v5 ^ 0x4E3u), 3219884047, v2);
}

uint64_t sub_1CD114CC0@<X0>(_QWORD *a1@<X0>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;
  int v5;

  return sub_1CD114BD8(a1, v5 + 173, *(_DWORD *)(*v3 + 4 * (v4 - 1699021736 + v5 + 173)), v2, a2);
}

void sub_1CD114CEC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BR              X13 }
}

uint64_t sub_1CD114E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                                + 8
                                                                                * (v3 ^ (1928 * (v4 != 0xEB8F3DED))))
                                                                    - 12))(a1, a2, a3, (v3 + 69));
}

uint64_t sub_1CD114E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;

  v15 = v7 > v9;
  *(_BYTE *)(v13 + (v11 - 271286987)) = *(_BYTE *)(*(_QWORD *)(v12 + 8 * (v5 ^ 0x1E3))
                                                               + (((_BYTE)v11 + 53) & 0xF)
                                                               - 4) ^ *(_BYTE *)(v4 + (v11 - 271286987)) ^ (23 * ((v11 + 53) & 0xF)) ^ *(_BYTE *)(*(_QWORD *)(v12 + 8 * (v5 - 321)) + (((_BYTE)v11 + 53) & 0xF)) ^ *(_BYTE *)(*(_QWORD *)(v12 + 8 * (v5 - 314)) + (((_BYTE)v11 + 53) & 0xF) + (a4 ^ 0x1F3) - 8);
  if (v15 == v11 - 1983323350 < v6)
    v15 = v11 - 1983323350 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((v15 * v10) ^ v5)) - 12))();
}

uint64_t sub_1CD114F0C()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((52
                                * ((((v0 + 753702940) & 0xD313674B ^ 0xE6FAFFEC) & (2 * v1) ^ 0xC61A79CA)
                                 + (v1 ^ 0x18F2411A)
                                 + ((v0 - 1193) ^ 0x3EE3DA49) != 845240498)) ^ v0)))();
}

uint64_t sub_1CD114F88()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((98 * (v2 + v1 + v0 + 209878278 >= (v0 - 1531))) ^ v0)))();
}

uint64_t sub_1CD114FF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((30
                                          * ((((a3 + a7 - 350 + a8 + 333) < 0xFFFFFFF0) ^ (81 * (a7 ^ 0xC7))) & 1)) ^ a7))
                            - 8))();
}

uint64_t sub_1CD11503C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BOOL4 v21;

  v12 = (a3 + v9 + v8 + 1227);
  v13 = v12 + v10;
  v14 = v12 & 0xF;
  v15 = v14 - v13 + v6;
  v16 = (v7 | v14) - v13;
  v17 = (v5 | v14) - v13;
  v21 = v15 > 0xF && v4 - v10 >= (((a4 ^ 0x15u) + 575) ^ 0x5BDuLL) && (unint64_t)(v16 + 1) > 0xF && v17 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((248 * v21) ^ a4)) - 12))();
}

uint64_t sub_1CD1150C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                       + 8
                                                                       * ((788
                                                                         * (((v7 < 0x10) ^ ((a7 ^ 0x37) - 1)) & 1)) ^ a7))
                                                           - 8))(a1, a2, 0);
}

uint64_t sub_1CD1150F8(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char v63;
  unsigned int v64;
  int8x16_t v65;
  uint64_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16x4_t v70;
  int8x16x4_t v71;

  v63 = a4 + 2;
  v64 = (a4 + 1289949719) & 0xB31CEFDF;
  v70.val[1].i64[0] = ((_BYTE)a2 + 11) & 0xF;
  v70.val[1].i64[1] = ((_BYTE)a2 + v63 + 21 + 121) & 0xF;
  v70.val[2].i64[0] = ((_BYTE)a2 + 9) & 0xF;
  v70.val[2].i64[1] = ((_BYTE)a2 + 8) & 0xF;
  v70.val[3].i64[0] = ((_BYTE)a2 + 7) & 0xF;
  v70.val[3].i64[1] = ((_BYTE)a2 + 6) & 0xF;
  v65.i64[0] = 0x8787878787878787;
  v65.i64[1] = 0x8787878787878787;
  v66 = a2 + ((v64 - 527) ^ (v57 - 126));
  v70.val[0].i64[0] = ((_BYTE)a2 + ((v64 - 15) ^ (v57 - 126))) & 0xF;
  v70.val[0].i64[1] = ((_BYTE)a2 + 12) & 0xF;
  v67.i64[0] = vqtbl4q_s8(v70, (int8x16_t)xmmword_1CDB7F0A0).u64[0];
  v71.val[0].i64[1] = ((_BYTE)a2 + 4) & 0xF;
  v71.val[1].i64[1] = ((_BYTE)a2 + 2) & 0xF;
  v71.val[2].i64[1] = a2 & 0xF;
  v71.val[3].i64[1] = ((_BYTE)a2 + 14) & 0xF;
  v71.val[0].i64[0] = ((_BYTE)a2 + 5) & 0xF;
  v71.val[1].i64[0] = ((_BYTE)a2 + 3) & 0xF;
  v71.val[2].i64[0] = ((_BYTE)a2 + 1) & 0xF;
  v71.val[3].i64[0] = ((_BYTE)a2 - 1) & 0xF;
  v67.i64[1] = vqtbl4q_s8(v71, (int8x16_t)xmmword_1CDB7F0A0).u64[0];
  v68 = vrev64q_s8(vmulq_s8(v67, v65));
  *(int8x16_t *)(*(_QWORD *)(v62 - 120) - 15 + v66) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v59 + (v66 & 0xF) - 15), *(int8x16_t *)(v56 - 15 + v66)), veorq_s8(*(int8x16_t *)((v66 & 0xF) + v60 - 14), *(int8x16_t *)(v58 + (v66 & 0xF) - 15))), vextq_s8(v68, v68, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a56 + 8 * (int)((13 * ((v61 & 0xFFFFFFF0) != 16)) ^ v64)) - 12))();
}

void sub_1CD115270()
{
  JUMPOUT(0x1CD1151FCLL);
}

uint64_t sub_1CD11527C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((((a7 ^ 0x70) + 614 * (a7 ^ 0x180) - 1679) * (v7 == a3)) ^ a7))
                            - 12))();
}

uint64_t sub_1CD1152B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((353 * ((((a8 - 350) ^ (((a8 - 1220) & v8) == 0)) & 1) == 0)) ^ a8))
                                          - 8))(a1);
}

uint64_t sub_1CD1152FC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  int8x16x4_t v63;

  v60 = v58 + a3 + v57;
  v61 = v60 + v52 - a1;
  v63.val[0].i64[0] = v61 & 0xF;
  v63.val[0].i64[1] = ((_BYTE)v60 - (_BYTE)a1 + 12) & 0xF;
  v63.val[1].i64[0] = ((_BYTE)v60 - (_BYTE)a1 + 11) & 0xF;
  v63.val[1].i64[1] = ((_BYTE)v60 - (_BYTE)a1 + ((102 * (a2 ^ 0x98)) ^ 6)) & 0xF;
  v63.val[2].i64[0] = ((_BYTE)v60 - (_BYTE)a1 + 9) & 0xF;
  v63.val[2].i64[1] = ((_BYTE)v60 - (_BYTE)a1 + 8) & 0xF;
  v63.val[3].i64[0] = ((_BYTE)v60 - (_BYTE)a1 + 7) & 0xF;
  v63.val[3].i64[1] = ((_BYTE)v60 - (_BYTE)a1 + 6) & 0xF;
  *(int8x8_t *)(v59 - 7 + v61) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v54 + v63.val[0].i64[0] - 7), *(int8x8_t *)(v51 - 7 + v61)), veor_s8(*(int8x8_t *)(v63.val[0].i64[0] + v55 - 6), *(int8x8_t *)(v53 + v63.val[0].i64[0] - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v63, (int8x16_t)xmmword_1CDB7F0B0), (int8x8_t)0x8787878787878787)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a51 + 8 * ((1531 * (a1 - (v56 & 0xFFFFFFF8) == -8)) ^ a2))
                                         - 12))((__n128)xmmword_1CDB7F0B0);
}

void sub_1CD11541C()
{
  JUMPOUT(0x1CD11534CLL);
}

uint64_t sub_1CD115424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  int v25;
  uint64_t v26;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v26
                                                                                + 8
                                                                                * ((((v25 - 350) ^ 0x120) * (v24 == a7)) ^ v25))
                                                                    - 8))(a24, a2, a3, (v25 - 350) ^ 0x29Cu);
}

uint64_t sub_1CD115464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v12 + (a6 + v8)) = *(_BYTE *)(v10 + ((a6 + v8) & 0xFLL)) ^ *(_BYTE *)(v6
                                                                                               + (a6 + v8)) ^ *(_BYTE *)((((_BYTE)a6 + (_BYTE)v8) & 0xF) + v11 + 1) ^ *(_BYTE *)(v9 + (((_BYTE)a6 + (_BYTE)v8) & 0xF)) ^ (((a6 + v8) & 0xF) * ((a5 ^ 0x9C) - 107));
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((1008 * (a6 - 1 != v7)) ^ (a5 + 622))) - 4))();
}

uint64_t sub_1CD1154CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  int v52;

  v50 = *(_QWORD *)(a1 + 24);
  *(int8x16_t *)(v48 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(a1 + 16) - 0x2CB40BEC8D7CDE9DLL), (int8x16_t)xmmword_1CDB7F0C0);
  if (v47)
    v51 = v50 == 0x39E8CCF6252BBBF8;
  else
    v51 = 1;
  v52 = v51;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)(((((((_DWORD)a4 - 16) ^ v52) & 1) == 0) * (a4 + 763)) ^ a4)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1CD115548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  uint64_t v48;
  _BOOL4 v50;

  v50 = (_DWORD)a25 == v47 + 547374634 || (((_BYTE)a25 + 4) & 0xF) != 11 * (v47 ^ 0x1D3) - 539;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (v47 ^ (16 * v50))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1CD115598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,int a56,int a57)
{
  uint64_t v57;

  return ((uint64_t (*)(void))(*(_QWORD *)(v57
                                        + 8
                                        * (a57 ^ (1830
                                                * (((2 * (a25 - ((2 * a55) & 0x73F15AF2) + 425223533)) & 0xF7EFFEEE ^ 0x73E15AE2)
                                                 + ((a25 - ((2 * a55) & 0x73F15AF2) + 425223533) ^ 0x420F520E)
                                                 - 277165155 != 1802685204))))
                            - 12))();
}

uint64_t sub_1CD115660(int a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((a2 + a1 + 13 * (v2 ^ 0x20Fu) - 2079850918 > 7) * (v2 + 872)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD1156D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((2 * a3) ^ 0x442) * ((v6 + a6 - 16) > 0xFFFFFFEF)) ^ a3))
                            - 8))();
}

uint64_t sub_1CD115714(int a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v23;

  v9 = (a2 + a1 + v6);
  v10 = v9 + v7 + 1;
  v11 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)v6) & 0xF;
  v12 = v11 - v9;
  v13 = v4 + v12;
  ++v11;
  v14 = v4 + v11;
  v15 = v5 + v12;
  v16 = v5 + v11;
  v17 = v3 + v12;
  v18 = v3 + v11;
  v20 = v14 > v7 && v13 < v10;
  if (v16 > v7 && v15 < v10)
    v20 = 1;
  v23 = v18 > v7 && v17 < v10 || v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a3 ^ (1455 * (v23 ^ 1))))
                            - (((a3 + 727) - 416) ^ a3 ^ 0x141u)))();
}

uint64_t sub_1CD1157A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                       + 8
                                                                       * ((((a6 - 2008942240) & 0x77BE03DF ^ 0x253)
                                                                         * (v6 < 0x10)) ^ a6))
                                                           - ((a6 + 1710980831) & 0x9A047FFE ^ 0x3E0)))(a1, a2, 0);
}

uint64_t sub_1CD1157FC(int a1, int a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;
  int8x16_t v13;
  uint64_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16x4_t v19;
  int8x16x4_t v20;

  v19.val[1].i64[0] = ((_BYTE)v8 + 9) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)v8 + 8) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)v8 + 7) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v8 + 6) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v8 + 5) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)v8 + 4) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)v8 + 3) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)v8 + 2) & 0xF;
  v20.val[1].i64[0] = (v8 + 1) & 0xF;
  v20.val[1].i64[1] = v8 & 0xF;
  v20.val[2].i64[0] = (v8 - 1) & 0xF;
  v20.val[2].i64[1] = (v8 + 14) & 0xF;
  v20.val[3].i64[0] = ((_BYTE)v8 + 13) & 0xF;
  v20.val[3].i64[1] = ((_BYTE)v8 + 12) & 0xF;
  v12.i64[0] = 0x505050505050505;
  v12.i64[1] = 0x505050505050505;
  v13.i64[0] = 0x3232323232323232;
  v13.i64[1] = 0x3232323232323232;
  v14 = v9 + a2 + a1 - 539 + (a4 ^ 0x1FFu);
  v19.val[0].i64[0] = ((_BYTE)v9 + (_BYTE)a2 + (_BYTE)a1 - 27 + ~(_BYTE)a4) & 0xF;
  v19.val[0].i64[1] = ((_BYTE)v8 + 10) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_1CDB7F0A0).u64[0];
  v15.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_1CDB7F0A0).u64[0];
  v16 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 - 15 + v14), *(int8x16_t *)(v6 + (v14 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v7 + (v14 & 0xF) - 15), *(int8x16_t *)(v5 + (v14 & 0xF) - 15))));
  v17 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v16, v16, 8uLL), v13), vmulq_s8(v15, v12)));
  *(int8x16_t *)(v10 - 15 + v14) = vextq_s8(v17, v17, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((1673 * ((v4 & 0xFFFFFFF0) == 16)) ^ a4)) - 8))();
}

void sub_1CD115958()
{
  JUMPOUT(0x1CD1158D4);
}

uint64_t sub_1CD115964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,unsigned int a55,uint64_t a56,uint64_t a57)
{
  unsigned __int8 *v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  unsigned __int8 v70;
  unint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  char *v140;
  char *v141;
  int v142;
  char *v143;
  int v144;
  char *v145;
  int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  int v198;
  int v199;
  unsigned int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned __int8 *v239;
  unsigned int v240;
  int v241;
  int v242;
  unsigned __int8 v243;
  uint64_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  uint64_t v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  uint64_t v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  uint64_t v266;
  int v267;
  int v268;
  unint64_t v269;
  int v270;
  char *v271;
  int v272;
  int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  unsigned int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  int v337;
  unsigned int v338;
  int v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  int v351;
  unsigned int v352;
  unsigned int v353;
  int v354;
  unsigned int v355;
  int v356;
  int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  int v363;
  int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  unsigned int v385;
  int v386;
  int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  int v397;
  int v398;
  unsigned int v399;
  int v400;
  int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  unsigned int v409;
  int v410;
  int v411;
  unsigned int v412;
  unsigned int v413;
  int v414;
  char *v415;
  char *v416;
  int v417;
  char *v418;
  int v419;
  int v420;
  int v421;
  int v422;
  char *v423;
  int v424;
  uint64_t v425;
  uint64_t v426;
  int v427;
  char *v428;
  char *v429;
  char *v430;
  int v431;
  int v432;
  unsigned int v433;
  unsigned int v434;
  int v435;
  char *v436;
  int v437;
  unsigned int v438;
  unsigned int v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  int v447;
  uint64_t v448;
  unsigned int v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  unsigned int v453;
  unsigned int v454;
  uint64_t v455;
  unsigned int v456;
  uint64_t v457;
  unsigned __int8 v458;
  int v459;
  unsigned int v460;
  uint64_t v461;
  int v462;
  __int16 v463;
  uint64_t v464;
  int v465;
  unsigned int v466;
  uint64_t v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  uint64_t v471;
  unsigned int v472;
  int v473;
  unsigned int v474;
  uint64_t v475;
  int v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  uint64_t v480;
  int v481;
  int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  uint64_t v486;
  int v487;
  unsigned int v488;
  int v489;
  int v490;
  unsigned int v491;
  int v492;
  uint64_t v493;
  unsigned int v494;
  unsigned int v495;
  __int16 v496;
  unsigned int v497;
  int v498;
  uint64_t v499;
  unsigned int v500;
  int v501;
  unsigned __int8 v502;
  unsigned int v503;
  uint64_t v504;
  int v505;
  int v506;
  unsigned int v507;
  unsigned int v508;
  uint64_t v509;
  unsigned int v510;
  int v511;
  unsigned int v512;
  uint64_t v513;
  int v514;
  unsigned int v515;
  int v516;
  int v517;
  uint64_t v518;
  unsigned int v519;
  int v520;
  int v521;
  int v522;
  uint64_t v523;
  int v524;
  unsigned int v525;
  int v526;
  unsigned int v527;
  int v528;
  uint64_t v529;
  int v530;
  int v531;
  unsigned int v532;
  int v533;
  unsigned int v534;
  uint64_t v535;
  int v536;
  int v537;
  unsigned int v538;
  int v539;
  int v540;
  uint64_t v541;
  int v542;
  unsigned int v543;
  int v544;
  uint64_t v545;
  unsigned int v546;
  unsigned int v547;
  unsigned int v548;
  int v549;
  int v550;
  uint64_t v551;
  int v552;
  unsigned int v553;
  int v554;
  unsigned int v555;
  uint64_t v556;
  int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  int v561;
  uint64_t v562;
  int v563;
  int v564;
  int v565;
  uint64_t v566;
  int v567;
  unsigned int v568;
  int v569;
  int v570;
  uint64_t v571;
  __int16 v572;
  int v573;
  uint64_t v574;
  int v575;
  unsigned int v576;
  unsigned int v577;
  uint64_t v578;
  int v579;
  uint64_t v580;
  int v581;
  uint64_t v582;
  unsigned int v583;
  char *v584;
  uint64_t v585;
  uint64_t v586;
  unint64_t v587;
  unsigned int v588;
  int v589;
  int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  int v595;
  int v596;
  unsigned int v597;
  int v598;
  unsigned int v599;
  int v600;
  int v601;
  unsigned int v602;
  int v603;

  v62 = v59 - 326;
  v63 = (2 * (v59 - 326)) ^ 0x256;
  *(_DWORD *)(v61 - 124) = v63;
  v64 = *(_QWORD *)(v60 + 8 * (v59 - 479)) - 4;
  v65 = *(_QWORD *)(v60 + 8 * ((v59 - 326) ^ 0xA7));
  v66 = (*(unsigned __int8 *)(v65 + (*v57 ^ 0xB1)) ^ 0xA7) << (v63 - 86);
  v67 = *(_QWORD *)(v60 + 8 * ((v59 - 326) ^ 0x24));
  v68 = *(unsigned __int8 *)(v67 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBEBLL) ^ 0x49));
  v69 = v66 | ((*(unsigned __int8 *)(v64 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF6) ^ 0xD7)) ^ 0x96) << 8);
  HIDWORD(v71) = v68 ^ 2;
  LODWORD(v71) = (v68 ^ 0xFFFFFF9F) << 24;
  v70 = v71 >> 26;
  v72 = *(_QWORD *)(v60 + 8 * (v62 - 127));
  v73 = *(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBECLL) ^ 0xB8));
  v74 = *(unsigned __int8 *)(v67 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBEFLL) ^ 0x6BLL));
  HIDWORD(v71) = v74 ^ 2;
  LODWORD(v71) = (v74 ^ 0xFFFFFF9F) << 24;
  v75 = ((v71 >> 26) ^ 0x53) << 16;
  LOBYTE(v68) = *(_BYTE *)(v64 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBEALL) ^ 0x2ELL));
  v76 = *(unsigned __int8 *)(v67 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF7) ^ 0x47));
  HIDWORD(v71) = v76 ^ 2;
  LODWORD(v71) = (v76 ^ 0xFFFFFF9F) << 24;
  v77 = v69 | (*(_BYTE *)(v72 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF5) ^ 0xECLL)) + 119) ^ 9 | (((v71 >> 26) ^ 0x1E) << 16);
  v78 = v75 | ((*(unsigned __int8 *)(v64 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBEELL) ^ 0x77)) ^ 0x59) << 8);
  v79 = (*(_BYTE *)(v72 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF1) ^ 0xA9)) + 119) | ((*(unsigned __int8 *)(v64 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF2) ^ 0x30)) ^ 0xA3) << 8);
  v80 = *(unsigned __int8 *)(v67 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF3) ^ 0xCBLL));
  LOBYTE(v67) = *(_BYTE *)(v72 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBE9) ^ 0x36)) + 119;
  HIDWORD(v71) = v80 ^ 2;
  LODWORD(v71) = (v80 ^ 0xFFFFFF9F) << 24;
  v81 = ((v70 ^ 0xFB) << 16) | ((v73 ^ 0x1F) << 24) | ((v68 ^ 0x53) << 8);
  LOBYTE(v64) = *(_BYTE *)(v72 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBEDLL) ^ 0xB5));
  v82 = v79 & 0xFF00FFFF | (((v71 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v65
                                                                                                + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF4) ^ 0x35)) ^ 0x68) << 24);
  v83 = *(_QWORD *)(v60 + 8 * (v62 ^ 0xCD)) - 8;
  v84 = v78 | ((*(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF0) ^ 0xBFLL)) ^ 0x71) << 24);
  v85 = v70 ^ 0x61u;
  v86 = *(_QWORD *)(v60 + 8 * (v62 ^ 0x40)) - 8;
  LODWORD(v65) = *(_DWORD *)(v83 + 4 * (v67 ^ 0xFDu)) ^ 0x5859772F ^ *(_DWORD *)(v86 + 4 * v85);
  v87 = v73 ^ 0x8Au;
  v88 = *(_QWORD *)(v60 + 8 * (v62 ^ 3)) - 12;
  LODWORD(v65) = (v65 - 1142355399 + (~(2 * v65) | 0x882DEB8D) + 1) ^ *(_DWORD *)(v88 + 4 * v87);
  LODWORD(v85) = v65 - ((2 * v65) & 0xFEC65660);
  v89 = *(_QWORD *)(v60 + 8 * (int)(v62 & 0x8524C8B7)) - 4;
  LOBYTE(v67) = v67 ^ 0x2A;
  v588 = v81 & 0xFFFFFF00 | v67;
  LOBYTE(v64) = (v64 + 119) ^ 0xA8;
  v90 = v84 & 0xFFFFFF00 | v64;
  v587 = __PAIR64__(v77, v82);
  v473 = *(_DWORD *)(v89 + 4 * (v68 ^ 0x6Bu)) ^ v77 ^ (v85 - 10278096);
  *(_DWORD *)(v61 - 176) = v473 ^ v82;
  v91 = v473 ^ v82 ^ 0x4D;
  v502 = v473 ^ v82 ^ 0x4D;
  *(_DWORD *)(v61 - 168) = v91 ^ v90;
  v92 = v91 ^ v90 ^ (v588 - 2 * ((v81 & 0x4D356500 | v67 & 0xD7) ^ v67 & 0x10) - 852138553);
  v516 = ((unsigned __int16)(v91 ^ v90 ^ ((v81 & 0xFF00 | v67)
                                                         - 2 * ((v81 & 0x6500 | v67 & 0xD7) ^ v67 & 0x10)
                                                         + 26055)) >> 8);
  v505 = BYTE2(v92);
  LODWORD(v87) = *(_DWORD *)(v89 + 4 * (v516 ^ 0x9Fu)) ^ *(_DWORD *)(v86 + 4 * (BYTE2(v92) ^ 0x8Bu));
  v93 = v92 ^ 0x77C2486E;
  v514 = v92;
  v94 = ((v87 ^ 0xF8092AD9) - ((2 * (v87 ^ 0xF8092AD9)) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83
                                                                                                + 4
                                                                                                * (v92 ^ 0xEEu));
  v510 = HIBYTE(v93);
  v95 = v473 ^ *(_DWORD *)(v88 + 4 * (HIBYTE(v93) ^ 0x65)) ^ (v94 - ((2 * v94) & 0x77D21472) - 1142355399);
  HIDWORD(v586) = v90;
  v96 = v90 - 2 * (v90 & 0x33FC9F2E ^ v64 & 4) - 1275289814;
  LODWORD(v64) = v95 ^ 0xB3FC9F2A;
  v97 = v95;
  *(_DWORD *)(v61 - 160) = v95;
  v98 = v95 ^ 0xB3FC9F2A ^ v96;
  v99 = v98 ^ v93;
  LODWORD(v87) = v98;
  *(_DWORD *)(v61 - 128) = v98;
  v530 = BYTE2(v99);
  v533 = BYTE1(v99);
  v100 = *(_DWORD *)(v86 + 4 * (BYTE2(v99) ^ 0x2Eu)) ^ *(_DWORD *)(v89 + 4 * (BYTE1(v99) ^ 0x9Bu)) ^ 0xF8092AD9;
  v601 = v99;
  v101 = (v100 - ((2 * v100) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83 + 4 * (v99 ^ 0xD2u));
  v102 = v99 ^ 0xB978221C;
  *(_DWORD *)(v61 - 192) = HIBYTE(v99);
  v103 = (v101 - ((2 * v101) & 0x77D21472) - 1142355399) ^ *(_DWORD *)(v88 + 4 * (HIBYTE(v99) ^ 0x69));
  v104 = v103 ^ v91 ^ 0xD520653E;
  v557 = v103 ^ v91;
  *(_DWORD *)(v61 - 152) = v104 ^ v98;
  v105 = ((v104 ^ v87 ^ 0x4FA668D4) - ((2 * (v104 ^ v87 ^ 0x4FA668D4)) & 0x9BBF06AA) - 840989867) ^ v102;
  v106 = v105 ^ 0x9547167F;
  v567 = ((v105 ^ 0x9547167F) >> 16);
  v589 = ((unsigned __int16)(v105 ^ 0x167F) >> 8);
  v107 = *(_DWORD *)(v86 + 4 * (v567 ^ 0x89u)) ^ *(_DWORD *)(v89 + 4 * (v589 ^ 0x3Au)) ^ 0xF8092AD9;
  v575 = (((v104 ^ v87 ^ 0xD4) - ((2 * (v104 ^ v87 ^ 0xD4)) & 0xAA) + 85) ^ v102);
  v108 = (v107 - ((2 * v107) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83 + 4 * (v575 ^ 0xE4u));
  v592 = HIBYTE(v106);
  v109 = (v108 - ((2 * v108) & 0x77D21472) - 1142355399) ^ *(_DWORD *)(v88 + 4 * (HIBYTE(v106) ^ 0x1D));
  v538 = v103 ^ v97;
  v599 = (v109 - ((2 * v109) & 0xA38B4F64) - 775575630) ^ v103 ^ v97;
  v110 = v599 ^ 0xD1C5A7B2 ^ v103 ^ v91;
  *(_DWORD *)(v61 - 224) = v599 ^ 0xD1C5A7B2;
  *(_DWORD *)(v61 - 256) = v110;
  v111 = ((v110 ^ 0xFE25CD6D) - ((2 * (v110 ^ 0xFE25CD6D)) & 0x9BBF06AA) - 840989867) ^ v102;
  *(_DWORD *)(v61 - 200) = BYTE1(v111);
  v112 = *(_DWORD *)(v89 + 4 * (BYTE1(v111) ^ 0x6Fu));
  *(_DWORD *)(v61 - 208) = BYTE2(v111);
  v113 = *(_DWORD *)(v86 + 4 * (BYTE2(v111) ^ 0xA8u));
  v524 = v64 ^ ((v473 ^ v82 ^ 0xBAF72DE4) - ((2 * (v473 ^ v82 ^ 0xBAF72DE4)) & 0x67F93E54) - 1275289814);
  *(_DWORD *)(v61 - 232) = HIBYTE(v111);
  LODWORD(v67) = ((v112 ^ v113 ^ 0xF8092AD9) - ((2 * (v112 ^ v113 ^ 0xF8092AD9)) & 0x77D21472) - 1142355399) ^ *(_DWORD *)(v88 + 4 * (HIBYTE(v111) ^ 0x85));
  *(_DWORD *)(v61 - 248) = v111;
  LODWORD(v67) = (v67 - ((2 * v67) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83 + 4 * (v111 ^ 0x25u));
  v602 = v110 ^ v104 ^ v98;
  v114 = (v67 - ((2 * v67) & 0xDFAE912E) + 1876379799) ^ v104 ^ v602;
  v115 = (v67 - ((2 * v67) & 0xDFAE912E) + 1876379799) ^ v104;
  *(_DWORD *)(v61 - 132) = v114;
  LODWORD(v64) = v111 ^ v114 ^ 0x355EFF67;
  v116 = v114 ^ 0x355EFF67;
  v463 = v114 ^ 0xFF67;
  *(_DWORD *)(v61 - 240) = v111;
  v500 = (v64 ^ 0x6D8C20B0) >> 24;
  v490 = ((v64 ^ 0x6D8C20B0) >> 16);
  v117 = *(_DWORD *)(v86 + 4 * (v490 ^ 0x89u)) ^ *(_DWORD *)(v88 + 4 * (v500 ^ 0x1D));
  v487 = ((unsigned __int16)(v64 ^ 0x20B0) >> 8);
  v118 = ((v117 ^ 0xBC830BD0) - 2 * ((v117 ^ 0xBC830BD0) & 0x7F632B32 ^ v117 & 2) - 10278096) ^ *(_DWORD *)(v89 + 4 * (v487 ^ 0x3Au));
  *(_DWORD *)(v61 - 184) = v599 ^ 0xD1C5A7B2 ^ v67;
  v481 = v64;
  LODWORD(v64) = v599 ^ 0xD1C5A7B2 ^ v67 ^ *(_DWORD *)(v83 + 4 * (v64 ^ 0x2Bu)) ^ (v118 - ((2 * v118) & 0xBE66ED8C) + 1597208262);
  v119 = v64 ^ v115 ^ 0x7C166C11;
  v120 = v64;
  v579 = v64;
  LODWORD(v67) = (v119 ^ v111) >> 24;
  *(_DWORD *)(v61 - 216) = v67;
  v569 = (v119 ^ v111);
  LODWORD(v67) = *(_DWORD *)(v88 + 4 * (v67 ^ 0x9B)) ^ *(_DWORD *)(v83 + 4 * (v569 ^ 0x31u)) ^ 0xE4DA7CFF;
  v546 = ((v119 ^ v111) >> 8) ^ 0x86839A;
  v554 = ((unsigned __int16)(v119 ^ v111) >> 8) ^ 0x9A;
  v121 = (v67 - ((2 * v67) & 0xFEC65660) - 10278096) ^ *(_DWORD *)(v89
                                                                 + 4
                                                                 * (((unsigned __int16)(v119 ^ v111) >> 8) ^ 0xA0u));
  LODWORD(v67) = v119 ^ v111 ^ 0xE42FE6B3;
  v552 = ((v119 ^ v111) >> 16);
  LODWORD(v64) = (v121 - ((2 * v121) & 0xED403D2) + 124387817) ^ *(_DWORD *)(v86 + 4 * (v552 ^ 0xAu));
  v122 = (v64 - ((2 * v64) & 0xD4DD4916) - 361847669) ^ v120;
  *(_DWORD *)(v61 - 136) = v122;
  v123 = v122 ^ 0x17ED3E21;
  v124 = v122 ^ 0x17ED3E21 ^ v119;
  v496 = v122 ^ 0x3E21;
  v560 = v119 ^ v116;
  LODWORD(v85) = v119;
  v536 = v119;
  v125 = v119 ^ v116 ^ 0x4158620E;
  *(_DWORD *)(v61 - 140) = v125;
  v126 = ((v124 ^ 0x5A137D54) - ((2 * (v124 ^ 0x5A137D54)) & 0xACCAC996) - 697998133) ^ v125;
  v127 = ((v126 ^ 0xB97FFD6F) - 2 * ((v126 ^ 0x3EE0256F) & 4 ^ (v126 ^ 0xB97FFD6F) & 0x62AC7C1D) + 1655471129) ^ v67 ^ 0x479AB031;
  v581 = (((v126 ^ 0x6F) - 2 * ((v126 ^ 0x6F) & 4 ^ (v126 ^ 0x6F) & 0x1D) + 25) ^ v67);
  v128 = *(_DWORD *)(v89 + 4 * (BYTE1(v127) ^ 0x3Au)) ^ *(_DWORD *)(v83 + 4 * (v581 ^ 0xAAu)) ^ 0xA0505DF6;
  v129 = (v128 - ((2 * v128) & 0xED403D2) + 124387817) ^ *(_DWORD *)(v86 + 4 * (BYTE2(v127) ^ 0x89u));
  v130 = (v129 - ((2 * v129) & 0x77D21472) - 1142355399) ^ *(_DWORD *)(v88 + 4 * (HIBYTE(v127) ^ 0x1D));
  v131 = v130 ^ v85;
  v132 = ((v130 ^ v85 ^ 0xA6C48CD5) - ((2 * (v130 ^ v85 ^ 0xA6C48CD5)) & 0xC558F832) + 1655471129) ^ v67;
  v133 = *(_DWORD *)(v88 + 4 * (HIBYTE(v132) ^ 5)) ^ *(_DWORD *)(v89 + 4 * (BYTE1(v132) ^ 0x6Fu)) ^ 0x448A2109;
  v565 = (((v130 ^ v85 ^ 0xD5) - ((2 * (v130 ^ v85 ^ 0xD5)) & 0x32) + 25) ^ v67);
  v134 = (v133 - ((2 * v133) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83 + 4 * (v565 ^ 0x25u));
  v135 = v123 ^ v130;
  v136 = v123 ^ v130 ^ *(_DWORD *)(v86 + 4 * (BYTE2(v132) ^ 0xA8u)) ^ (v134 - ((2 * v134) & 0xED403D2) + 124387817);
  v137 = v126 ^ 0x3EE0256F ^ v136;
  v583 = v137;
  v595 = ((unsigned __int16)(v137 ^ v132) >> 8);
  v469 = (v137 ^ v132) >> 24;
  LODWORD(v88) = *(_DWORD *)(v89 + 4 * (v595 ^ 0x44u)) ^ *(_DWORD *)(v88 + 4 * (v469 ^ 0x47));
  v476 = (v137 ^ v132);
  v138 = ((v88 ^ 0x448A2109) - ((2 * (v88 ^ 0x448A2109)) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83
                                                                                                 + 4 * (v476 ^ 0xD5u));
  v459 = ((v137 ^ v132) >> 16);
  v139 = (v138 - ((2 * v138) & 0xED403D2) + 124387817) ^ *(_DWORD *)(v86 + 4 * (v459 ^ 0xCBu));
  LODWORD(v586) = v136 ^ 0x29F34BD1 ^ (v139 - ((2 * v139) & 0x5208CCF0) - 1459329416);
  v465 = v136 ^ v131;
  v466 = v136;
  v458 = BYTE2(v137) ^ 0x63;
  HIDWORD(v585) = v136 ^ v131 ^ 0xBC788024 ^ (v586 - ((2 * v586) & 0x31B49E60) - 1730523344);
  LODWORD(v585) = HIDWORD(v585) ^ v137 ^ 0x42632BF0 ^ 0x4662A266;
  HIDWORD(a49) = (v585 - 2 * (v585 & 0x60991DD ^ (HIDWORD(v585) ^ v137 ^ 0x42632BF0) & 9) + 101290452) ^ v137 ^ v132;
  v140 = (char *)*(&off_1E89A15E0 + (v62 ^ 0x39)) - 12;
  LODWORD(v86) = (((v135 ^ 0x1B9155BDu) >> 16)
                + 441139960
                + ((2 * ((v135 ^ 0x1B9155BDu) >> 16) + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v140[4 * (((v135 ^ 0x1B9155BDu) >> 16) ^ 0x2D)];
  LODWORD(v88) = ((BYTE2(v132) ^ 0x89) + 441139959 - ((2 * (BYTE2(v132) ^ 0x89) + 160207960) & 0x9089196)) ^ *(_DWORD *)&v140[4 * (BYTE2(v132) ^ 0xA4)];
  v141 = (char *)*(&off_1E89A15E0 + v62 + 40) - 4;
  v142 = (v86 - ((2 * v86) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (BYTE1(v135) ^ 0x47)];
  LODWORD(v89) = v88 - ((2 * v88) & 0xB6BB4012);
  v594 = v62;
  v143 = (char *)*(&off_1E89A15E0 + v62 + 14) - 4;
  v144 = (v89 - 614621175) ^ *(_DWORD *)&v143[4 * (HIBYTE(v132) ^ 0xCC)];
  v572 = v126 ^ 0x256F ^ v131;
  v145 = (char *)*(&off_1E89A15E0 + v62 + 55) - 12;
  LODWORD(v67) = *(_DWORD *)&v145[4 * (v126 ^ 0x6F ^ v131 ^ 0x53)];
  v146 = ((v126 ^ 0x3EE0256F ^ v131) >> 16);
  LODWORD(v67) = *(_DWORD *)&v140[4 * (v146 ^ 0xAA)] ^ *(_DWORD *)&v143[4 * (((v126 ^ 0x3EE0256F ^ v131) >> 24) ^ 0x3E)] ^ ((v146 ^ 0x87) + 441139960 + ((2 * (v146 ^ 0x87) + 88) & 0x196 ^ 0xF6F76FFF)) ^ (181304767 * v67 - ((362609534 * v67 - 27765796) & 0xB6BB4012) + 1518979575);
  v147 = *(_DWORD *)&v145[4 * (v131 ^ 0x74)];
  v148 = (181304767 * v147 - ((362609534 * v147 + 2119717852) & 0x5C4753DE) + 760206301) ^ *(_DWORD *)&v141[4 * (BYTE1(v131) ^ 0x5A)];
  v577 = v148 - ((2 * v148) & 0xB6BB4012);
  v543 = BYTE1(v132) ^ 0xB0;
  v563 = v144 - ((2 * v144) & 0x5C4753DE);
  v549 = v67 - ((2 * v67) & 0x5C4753DE);
  v591 = (v142 - ((2 * v142) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * ((v135 ^ 0x1B9155BDu) >> 24)] ^ (181304767 * *(_DWORD *)&v145[4 * (v135 ^ 0x7D)] + 2133600750);
  v149 = *(_DWORD *)&v140[4 * (((v524 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v524 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                      + 441139959
                                                                                      - ((2
                                                                                        * (((v524 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                        + 160207960) & 0x9089196));
  v150 = *(_DWORD *)(v61 - 128) ^ 0x31676F78;
  v151 = *(_DWORD *)&v140[4 * (BYTE2(v150) ^ 0x7B)] ^ ((BYTE2(v150) ^ 0x56)
                                                     + 441139960
                                                     + ((2 * (BYTE2(v150) ^ 0x56) + 88) & 0x196 ^ 0xF6F76FFF));
  v152 = (v151 - 614621175 + (~(2 * v151) | 0x4944BFED) + 1) ^ *(_DWORD *)&v143[4 * HIBYTE(v150)];
  v153 = *(_DWORD *)&v140[4 * (v530 ^ 0x34)] ^ ((v530 ^ 0x19)
                                              + 441139960
                                              + ((2 * (v530 ^ 0x19) + 88) & 0x196 ^ 0xF6F76FFF));
  v154 = (v153 - ((2 * v153) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (v533 ^ 5)];
  v531 = v152 - ((2 * v152) & 0x5C4753DE);
  v534 = v154 - ((2 * v154) & 0xB6BB4012);
  v155 = *(_DWORD *)&v145[4 * (*(_DWORD *)(v61 - 160) ^ 0xDF)];
  v156 = *(_DWORD *)(v61 - 160) ^ 0x5A18571F;
  v157 = *(_DWORD *)&v143[4 * HIBYTE(v156)] ^ ((BYTE2(v156) ^ 0xC1)
                                             + 441139960
                                             + ((2 * (BYTE2(v156) ^ 0xC1) + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v140[4 * (BYTE2(v156) ^ 0xEC)] ^ ((~(362609534 * v155 - 27765796) | 0x4944BFED) + 181304767 * v155 + 1518979576);
  v527 = v157 - ((2 * v157) & 0x5C4753DE);
  LODWORD(v67) = *(_DWORD *)&v143[4 * ((v524 ^ 0xE9B45E6C) >> 24)] ^ (v149 - ((2 * v149) & 0xB6BB4012) - 614621175);
  v468 = v524 ^ 0xAC;
  v519 = BYTE1(v524) ^ 0xB4;
  v521 = v67 - ((2 * v67) & 0x5C4753DE);
  LOWORD(v89) = v124 ^ 0x8EA4;
  v158 = v124 ^ 0x35C48CD5;
  v159 = v126 ^ 0x5C7FFD6F;
  v525 = HIBYTE(v126) ^ 0x2B;
  v160 = *(_DWORD *)&v140[4 * (BYTE2(v127) ^ 0xDE)] ^ ((BYTE2(v127) ^ 0xF3)
                                                     + 441139959
                                                     - ((2 * (BYTE2(v127) ^ 0xF3) + 160207960) & 0x9089196));
  v161 = *(_DWORD *)&v140[4 * (BYTE2(v158) ^ 0xFE)] ^ ((BYTE2(v158) ^ 0xD3)
                                                     + 441139960
                                                     + ((2 * (BYTE2(v158) ^ 0xD3) + 88) & 0x196 ^ 0xF6F76FFF));
  v162 = *(_DWORD *)&v145[4 * (v126 ^ 0xAA)];
  v163 = (v160 - ((2 * v160) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * (HIBYTE(v127) ^ 0x36)];
  v164 = BYTE2(*(_DWORD *)(v61 - 136));
  v165 = *(_DWORD *)&v140[4 * (v164 ^ 0xC1)] ^ ((v164 ^ 0xEC)
                                              + 441139960
                                              + ((2 * (v164 ^ 0xEC) + 88) & 0x196 ^ 0xF6F76FFF));
  v166 = (v165 - ((2 * v165) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (HIBYTE(v496) ^ 0x8B)];
  v507 = v163 - ((2 * v163) & 0x5C4753DE);
  v512 = v166 - ((2 * v166) & 0xB6BB4012);
  v167 = *(_DWORD *)&v141[4 * (BYTE1(v159) ^ 0x20)] ^ ((BYTE2(v159) ^ 0xD7)
                                                     + 441139959
                                                     - ((2 * (BYTE2(v159) ^ 0xD7) + 160207960) & 0x9089196)) ^ *(_DWORD *)&v140[4 * (BYTE2(v159) ^ 0xFA)] ^ (181304767 * v162 - ((362609534 * v162 + 2119717852) & 0x5C4753DE) + 760206301);
  v168 = (v161 - ((2 * v161) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * HIBYTE(v158)] ^ (181304767
                                                                                              * *(_DWORD *)&v145[4 * (v89 ^ 0x99)]
                                                                                              + 2133600750);
  v477 = BYTE1(v89) ^ 0x14;
  v456 = v496 ^ 0xA3;
  v484 = v168 - ((2 * v168) & 0x5C4753DE);
  v497 = v167 - ((2 * v167) & 0xB6BB4012);
  v478 = v473 ^ 0x2BEAE26B;
  LODWORD(v67) = *(_DWORD *)&v140[4 * (((v473 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v473 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                               + 441139960
                                                                                               + ((2
                                                                                                 * (((v473 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                                 + 88) & 0x196 ^ 0xF6F76FFF)) ^ (181304767 * *(_DWORD *)&v145[4 * (v473 ^ 0x1E)] + 2133600750);
  LODWORD(v67) = (v67 - ((2 * v67) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (BYTE1(v473) ^ 8)];
  v169 = *(_DWORD *)&v140[4 * (v505 ^ 0x15)] ^ ((v505 ^ 0x38)
                                              + 441139960
                                              + ((2 * (v505 ^ 0x38) + 88) & 0x196 ^ 0xF6F76FFF));
  v170 = *(_DWORD *)&v145[4 * (v502 ^ 0x55)];
  v506 = v67 - ((2 * v67) & 0xB6BB4012);
  v462 = BYTE2(*(_DWORD *)(v61 - 168));
  v503 = (v462 ^ 0xA7) + 441139960 + ((2 * (v462 ^ 0xA7) + 88) & 0x196 ^ 0xF6F76FFF);
  LODWORD(v67) = (v169 - ((2 * v169) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (v516 ^ 0xF5)] ^ (181304767 * *(_DWORD *)&v145[4 * (v514 ^ 0x9D)] + 2133600750);
  v517 = v67 - ((2 * v67) & 0xB6BB4012);
  v171 = *(_DWORD *)(v61 - 176);
  v172 = (181304767 * v170 - ((362609534 * v170 - 27765796) & 0xB6BB4012) + 1518979575) ^ ((BYTE2(v171) ^ 0xBA)
                                                                                         + 441139960
                                                                                         + ((2 * (BYTE2(v171) ^ 0xBA)
                                                                                           + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v143[4 * (HIBYTE(v171) ^ 0x2F)] ^ *(_DWORD *)&v140[4 * (BYTE2(v171) ^ 0x97)];
  v474 = v172 - ((2 * v172) & 0x5C4753DE);
  v173 = BYTE2(*(_DWORD *)(v61 - 132));
  v174 = *(_DWORD *)&v140[4 * (v173 ^ 0x25)] ^ ((v173 ^ 8) + 441139960 + ((2 * (v173 ^ 8) + 88) & 0x196 ^ 0xF6F76FFF));
  LODWORD(v89) = *(_DWORD *)(v61 - 184);
  v175 = *(_DWORD *)&v140[4 * (BYTE2(v89) ^ 0x56)] ^ ((BYTE2(v89) ^ 0x7B)
                                                    + 441139960
                                                    + ((2 * (BYTE2(v89) ^ 0x7B) + 88) & 0x196 ^ 0xF6F76FFF));
  v176 = *(_DWORD *)&v145[4 * (v115 ^ 0xFB)];
  v177 = (v174 - ((2 * v174) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (HIBYTE(v463) ^ 0x60)] ^ (181304767 * *(_DWORD *)&v145[4 * (v463 ^ 0xC3)] + 2133600750);
  v178 = (181304767 * v176 - ((362609534 * v176 + 2119717852) & 0x5C4753DE) + 760206301) ^ *(_DWORD *)&v141[4 * (BYTE1(v115) ^ 0xEF)];
  LODWORD(v464) = v177 - ((2 * v177) & 0xB6BB4012);
  LODWORD(v457) = v178 - ((2 * v178) & 0xB6BB4012);
  v179 = (v175 - ((2 * v175) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * (BYTE3(v89) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v145[4 * (v89 ^ 0x79)] + 2133600750);
  v180 = *(_DWORD *)&v140[4 * (v490 ^ 0x86)] ^ ((v490 ^ 0xAB)
                                              + 441139960
                                              + ((2 * (v490 ^ 0xAB) + 88) & 0x196 ^ 0xF6F76FFF));
  v181 = (v180 - ((2 * v180) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * v500];
  v454 = v487 ^ 0xEE;
  v453 = v481 ^ 0x8D;
  v491 = v181 - ((2 * v181) & 0x5C4753DE);
  v488 = v179 - ((2 * v179) & 0x5C4753DE);
  v482 = BYTE2(v115) ^ 0x16;
  v515 = (BYTE2(v115) ^ 0x73) + 441139960 + ((2 * (BYTE2(v115) ^ 0x73) + 88) & 0x196 ^ 0xF6F76FFF);
  v182 = *(_DWORD *)&v140[4 * (v459 ^ 0x8B)] ^ ((v459 ^ 0xA6)
                                              + 441139960
                                              + ((2 * (v459 ^ 0xA6) + 88) & 0x196 ^ 0xF6F76FFF));
  v501 = (v458 ^ 0xEC) + 441139959 - ((2 * (v458 ^ 0xEC) + 160207960) & 0x9089196);
  v183 = v469 ^ 0x22;
  v494 = HIBYTE(v115) ^ 0xE8;
  v184 = *(_DWORD *)&v140[4 * (BYTE2(v466) ^ 0xE8)] ^ ((BYTE2(v466) ^ 0xC5)
                                                     + 441139960
                                                     + ((2 * (BYTE2(v466) ^ 0xC5) + 88) & 0x196 ^ 0xF6F76FFF));
  v185 = (181304767 * *(_DWORD *)&v145[4 * (v466 ^ 0xCA)] + 2133600750) ^ *(_DWORD *)&v143[4 * (HIBYTE(v466) ^ 0x8E)] ^ (v184 - ((2 * v184) & 0xB6BB4012) - 614621175);
  v472 = v465 ^ 0x44039AAA;
  v186 = (181304767 * *(_DWORD *)&v145[4 * (v465 ^ 0xDB)] + 2133600750) ^ (((v465 ^ 0x44039AAAu) >> 16)
                                                                                          + 441139960
                                                                                          + ((2
                                                                                            * ((v465 ^ 0x44039AAAu) >> 16)
                                                                                            + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v140[4 * (((v465 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  v470 = v185 - ((2 * v185) & 0x5C4753DE);
  v187 = (v186 - ((2 * v186) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (BYTE1(v465) ^ 0xC0)];
  v188 = *(_DWORD *)&v143[4 * v183] ^ (181304767 * *(_DWORD *)&v145[4 * (v476 ^ 0xFE)] + 2133600750) ^ (v182 - ((2 * v182) & 0xB6BB4012) - 614621175);
  HIDWORD(v475) = v187 - ((2 * v187) & 0xB6BB4012);
  HIDWORD(v464) = v188 - ((2 * v188) & 0x5C4753DE);
  v189 = *(_DWORD *)&v145[4 * ((v103 ^ v97) ^ 0xEC)];
  v190 = *(_DWORD *)&v140[4 * (v567 ^ 0x32)] ^ ((v567 ^ 0x1F)
                                              + 441139960
                                              + ((2 * (v567 ^ 0x1F) + 88) & 0x196 ^ 0xF6F76FFF));
  v191 = *(_DWORD *)&v145[4 * (v557 ^ 0xE6)];
  LODWORD(v67) = *(_DWORD *)&v143[4 * (HIBYTE(v538) ^ 0xCA)] ^ ((BYTE2(v538) ^ 0x2F)
                                                              + 441139960
                                                              + ((2 * (BYTE2(v538) ^ 0x2F) + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v140[4 * (BYTE2(v538) ^ 2)] ^ (181304767 * v189 - ((362609534 * v189 - 27765796) & 0xB6BB4012) + 1518979575);
  v192 = (v190 - ((2 * v190) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (v589 ^ 0x8C)] ^ (181304767
                                                                                                * *(_DWORD *)&v145[4 * (v575 ^ 0xD9)]
                                                                                                + 2133600750);
  v193 = *(_DWORD *)&v143[4 * ((v557 ^ 0x49A657C7u) >> 24)] ^ ((((v557 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                             + 441139960
                                                             + ((2
                                                               * (((v557 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                               + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v140[4 * (((v557 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v191 - ((362609534 * v191 - 27765796) & 0xB6BB4012) + 1518979575);
  v194 = *(_DWORD *)&v140[4 * (((*(_DWORD *)(v61 - 152) ^ 0x715B7EABu) >> 16) ^ 0x2D)] ^ (((*(_DWORD *)(v61 - 152) ^ 0x715B7EABu) >> 16) + 441139960 + ((2 * ((*(_DWORD *)(v61 - 152) ^ 0x715B7EABu) >> 16) + 88) & 0x196 ^ 0xF6F76FFF));
  v576 = v592 ^ 0xAA;
  v590 = (v67 - ((2 * v67) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4
                                                                        * (((unsigned __int16)(v103 ^ v97) >> 8) ^ 0x2E)];
  v568 = v192 - ((2 * v192) & 0xB6BB4012);
  v460 = BYTE1(v557) ^ 0xB9;
  LODWORD(v67) = (v194 - ((2 * v194) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4
                                                                                 * ((*(_DWORD *)(v61 - 152) ^ 0x715B7EABu) >> 24)] ^ (181304767 * *(_DWORD *)&v145[4 * (*(_DWORD *)(v61 - 152) ^ 0x3B)] + 2133600750);
  v558 = v193 - ((2 * v193) & 0x5C4753DE);
  v539 = v67 - ((2 * v67) & 0x5C4753DE);
  v195 = *(_DWORD *)&v140[4 * (v552 ^ 0xC1)] ^ ((v552 ^ 0xEC)
                                              + 441139960
                                              + ((2 * (v552 ^ 0xEC) + 88) & 0x196 ^ 0xF6F76FFF));
  LODWORD(v67) = (v195 - ((2 * v195) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4
                                                                                  * ((v554 - ((2 * v546) & 0x166) + 179) ^ 0x54)] ^ (181304767 * *(_DWORD *)&v145[4 * (v569 ^ 0xE2)] + 2133600750);
  v196 = *(_DWORD *)&v145[4 * (*(_DWORD *)(v61 - 140) ^ 0xF0)];
  v197 = (181304767 * v196 - ((362609534 * v196 - 27765796) & 0xB6BB4012) + 1518979575) ^ *(_DWORD *)&v143[4 * (HIBYTE(v560) ^ 0x3E)];
  v570 = v67 - ((2 * v67) & 0xB6BB4012);
  v547 = v197 - ((2 * v197) & 0x5C4753DE);
  v555 = v536 ^ 0xEEA2BFA8;
  v198 = *(_DWORD *)&v140[4 * (((v536 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v536 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                      + 441139959
                                                                                      - ((2
                                                                                        * (((v536 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                        + 160207960) & 0x9089196));
  LODWORD(v67) = (181304767 * *(_DWORD *)&v145[4 * (v536 ^ 0x68)] + 2133600750) ^ *(_DWORD *)&v141[4 * (BYTE1(v536) ^ 0x55)] ^ (v198 - ((2 * v198) & 0x5C4753DE) - 1373394449);
  v449 = v458 ^ 0xC1;
  v199 = ((v579 ^ 0x231B9DB5u) >> 16);
  v593 = (v199 ^ 0xC1) + 441139960 + ((2 * (v199 ^ 0xC1) + 88) & 0x196 ^ 0xF6F76FFF);
  LODWORD(v452) = v67 - ((2 * v67) & 0xB6BB4012);
  v447 = BYTE2(v560);
  v553 = (BYTE2(v560) ^ 0xC8) + 441139960 + ((2 * (BYTE2(v560) ^ 0xC8) + 88) & 0x196 ^ 0xF6F76FFF);
  v200 = v599 ^ 0x406768A6;
  v201 = *(_DWORD *)&v145[4 * (v565 ^ 0x60)];
  v202 = *(_DWORD *)&v145[4 * (v601 ^ 0xFB)];
  v203 = *(_DWORD *)&v145[4 * (*(_DWORD *)(v61 - 128) ^ 0xB8)];
  v204 = *(_DWORD *)&v145[4 * v468];
  v205 = *(_DWORD *)&v145[4 * v456];
  v206 = *(_DWORD *)&v145[4 * (v581 ^ 0xF0)];
  LODWORD(v85) = *(_DWORD *)(v61 - 168);
  v207 = *(_DWORD *)&v145[4 * (v85 ^ 0x57)];
  v208 = *(_DWORD *)&v145[4 * v453];
  v209 = *(_DWORD *)&v145[4 * (v583 ^ 0x78)];
  LODWORD(v67) = *(_DWORD *)&v145[4 * (v579 ^ 0x75)];
  v210 = *(_DWORD *)&v145[4 * (*(_DWORD *)(v61 - 248) ^ 0x74)];
  v211 = *(_DWORD *)&v145[4 * (v602 ^ 0x96)];
  v212 = *(_DWORD *)(v61 - 256);
  v213 = *(_DWORD *)&v145[4 * (v212 ^ 0x2A)];
  LODWORD(v145) = *(_DWORD *)&v145[4 * (v599 ^ 0x9F)];
  *(_DWORD *)(v61 - 248) = 181304767 * v201 + 2133600750;
  v600 = 181304767 * v202 + 2133600750;
  HIDWORD(v457) = 181304767 * v203 + 2133600750;
  HIDWORD(v467) = 181304767 * v204 + 2133600750;
  v561 = 181304767 * v205 + 2133600750;
  HIDWORD(v455) = 181304767 * v208 + 2133600750;
  LODWORD(v451) = 181304767 * v206 + 2133600750;
  HIDWORD(v451) = 181304767 * v67 + 2133600750;
  HIDWORD(v452) = 181304767 * (_DWORD)v145 + 2133600750;
  LODWORD(v145) = (181304767 * v210 - ((362609534 * v210 - 27765796) & 0xB6BB4012) + 1518979575) ^ *(_DWORD *)&v143[4 * (*(_DWORD *)(v61 - 232) ^ 0x7B)];
  LODWORD(v67) = *(_DWORD *)&v140[4 * (BYTE2(v602) ^ 0x7B)] ^ ((BYTE2(v602) ^ 0x56)
                                                             + 441139960
                                                             + ((2 * (BYTE2(v602) ^ 0x56) + 88) & 0x196 ^ 0xF6F76FFF)) ^ (181304767 * v211 + 2133600750);
  LODWORD(v89) = (v67 - ((2 * v67) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (BYTE1(v602) ^ 0xCC)];
  v214 = *(_DWORD *)&v140[4 * (BYTE2(v200) ^ 0x3C)] ^ ((BYTE2(v200) ^ 0x11)
                                                     + 441139960
                                                     + ((2 * (BYTE2(v200) ^ 0x11) + 88) & 0x196 ^ 0xF6F76FFF));
  v215 = (181304767 * v213 + 2133600750) ^ ((BYTE2(v212) ^ 0x37)
                                          + 441139959
                                          - ((2 * (BYTE2(v212) ^ 0x37) + 160207960) & 0x9089196)) ^ *(_DWORD *)&v140[4 * (BYTE2(v212) ^ 0x1A)];
  v216 = (_DWORD)v145 - ((2 * (_DWORD)v145) & 0x5C4753DE);
  LODWORD(v145) = (v215 - ((2 * v215) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * (HIBYTE(v212) ^ 0xF9)];
  LODWORD(v67) = *(_DWORD *)(v61 - 208);
  HIDWORD(v448) = *(_DWORD *)&v140[4 * (BYTE2(v131) ^ 0x61)];
  *(_DWORD *)(v61 - 232) = *(_DWORD *)&v140[4 * (v462 ^ 0x8A)];
  v542 = *(_DWORD *)&v140[4 * (v482 ^ 0x48)];
  LODWORD(v450) = *(_DWORD *)&v140[4 * v449];
  v483 = *(_DWORD *)&v140[4 * (v199 ^ 0xEC)];
  HIDWORD(v461) = *(_DWORD *)&v140[4 * (v447 ^ 0xE5)];
  v598 = *(_DWORD *)&v140[4 * (v67 ^ 0x1A)];
  LODWORD(v140) = ((*(_DWORD *)(v61 - 240) >> 15) & 0x58 ^ 0x48) + (v67 ^ 0x4C64A1B);
  *(_DWORD *)(v61 - 240) = (_DWORD)v140 + 361035980 + ((2 * (_DWORD)v140) & 0x196 ^ 0xF6F76FFF);
  v217 = HIBYTE(v602) ^ 0xE5;
  *(_DWORD *)(v61 - 208) = *(_DWORD *)&v141[4 * v543];
  v544 = *(_DWORD *)&v141[4 * (HIBYTE(v572) ^ 0x8E)];
  v603 = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 128)) ^ 0x85)];
  HIDWORD(v450) = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 160)) ^ 0xBD)];
  *(_DWORD *)(v61 - 160) = *(_DWORD *)&v141[4 * v519];
  HIDWORD(v446) = *(_DWORD *)&v141[4 * v477];
  LODWORD(v448) = *(_DWORD *)&v141[4 * (BYTE1(v127) ^ 0x1A)];
  *(_DWORD *)(v61 - 256) = *(_DWORD *)&v141[4 * (BYTE1(v85) ^ 0xF5)];
  *(_DWORD *)(v61 - 176) = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 176)) ^ 0xD6)];
  v520 = *(_DWORD *)&v141[4 * v454];
  HIDWORD(a25) = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 184)) ^ 0xD7)];
  v573 = *(_DWORD *)&v141[4 * (BYTE1(v583) ^ 0x76)];
  v218 = *(_DWORD *)&v141[4 * (BYTE1(v466) ^ 0x16)];
  LODWORD(v445) = *(_DWORD *)&v141[4 * (v595 ^ 0xBE)];
  *(_DWORD *)(v61 - 184) = *(_DWORD *)&v141[4 * v460];
  v596 = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 152)) ^ 0xFE)];
  LODWORD(v446) = *(_DWORD *)&v141[4 * (BYTE1(v579) ^ 0x77)];
  HIDWORD(v445) = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 140)) ^ 0x95)];
  *(_DWORD *)(v61 - 200) = *(_DWORD *)&v141[4 * (*(_DWORD *)(v61 - 200) ^ 0x84)];
  LODWORD(v467) = *(_DWORD *)&v141[4 * (BYTE1(v212) ^ 0x2E)];
  v219 = v89 - ((2 * v89) & 0xB6BB4012);
  LODWORD(v89) = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 224)) ^ 0xC8)];
  LODWORD(v444) = *(_DWORD *)&v143[4 * (HIBYTE(v131) ^ 0xB2)];
  *(_DWORD *)(v61 - 152) = v563 - 1373394449;
  v564 = v549 - 1373394449;
  *(_DWORD *)(v61 - 192) = *(_DWORD *)&v143[4 * (*(_DWORD *)(v61 - 192) ^ 7)];
  *(_DWORD *)(v61 - 224) = v531 - 1373394449;
  LODWORD(v455) = v527 - 1373394449;
  LODWORD(v461) = v521 - 1373394449;
  v550 = *(_DWORD *)&v143[4 * (HIBYTE(*(_DWORD *)(v61 - 136)) ^ 0xFB)];
  HIDWORD(v443) = v507 - 1373394449;
  LODWORD(v443) = v484 - 1373394449;
  v485 = v474 - 1373394449;
  v532 = v491 - 1373394449;
  HIDWORD(v444) = v488 - 1373394449;
  LODWORD(v67) = v470 - 1373394449;
  v508 = v558 - 1373394449;
  LODWORD(v475) = v539 - 1373394449;
  v548 = v547 - 1373394449;
  v522 = v216 - 1373394449;
  v528 = (_DWORD)v145 - ((2 * (_DWORD)v145) & 0x5C4753DE) - 1373394449;
  v559 = *(_DWORD *)&v143[4 * v525];
  v489 = *(_DWORD *)&v143[4 * (BYTE3(v85) ^ 0xB8)];
  v492 = *(_DWORD *)&v143[4 * HIBYTE(v478)];
  v479 = *(_DWORD *)&v143[4 * (v510 ^ 0x4B)];
  v540 = *(_DWORD *)&v143[4 * (HIBYTE(*(_DWORD *)(v61 - 132)) ^ 0x17)];
  v526 = *(_DWORD *)&v143[4 * v494];
  v220 = *(_DWORD *)&v143[4 * (HIBYTE(v583) ^ 0xA6)];
  v221 = *(_DWORD *)&v143[4 * HIBYTE(v472)];
  v511 = *(_DWORD *)&v143[4 * v576];
  LODWORD(v145) = v89 ^ (v214 - ((2 * v214) & 0x5C4753DE) - 1373394449);
  v222 = *(_DWORD *)&v143[4 * ((v579 ^ 0x231B9DB5u) >> 24)];
  v537 = *(_DWORD *)&v143[4 * (*(_DWORD *)(v61 - 216) ^ 0x38)];
  v223 = *(_DWORD *)&v143[4 * HIBYTE(v555)];
  HIDWORD(v471) = *(_DWORD *)&v143[4 * v217];
  LODWORD(v471) = *(_DWORD *)&v143[4 * HIBYTE(v200)];
  v224 = v577 - 614621175;
  v495 = v534 - 614621175;
  v225 = v497 - 614621175;
  *(_DWORD *)(v61 - 216) = v506 - 614621175;
  v498 = v517 - 614621175;
  *(_DWORD *)(v61 - 168) = v568 - 614621175;
  v226 = v570 - 614621175;
  v227 = v452 - 614621175;
  v228 = v219 - 614621175;
  v229 = (_DWORD)v145 - ((2 * (_DWORD)v145) & 0xB6BB4012) - 614621175;
  v230 = v591 ^ v590 ^ 0x6285F181;
  v231 = v67 ^ v218 ^ v230;
  v232 = (char *)*(&off_1E89A15E0 + v594 + 23) - 4;
  v233 = (uint64_t)*(&off_1E89A15E0 + (v594 ^ 0xA5));
  v234 = (uint64_t)*(&off_1E89A15E0 + v594 + 21);
  v235 = (uint64_t)*(&off_1E89A15E0 + v594 - 141);
  v236 = (*(unsigned __int8 *)(v235 + (*(unsigned __int8 *)(v61 - 109) ^ 0x41)) ^ 5) & 0xFF00FFFF | (((*(_BYTE *)(v233 + (*(unsigned __int8 *)(v61 - 111) ^ 0x40)) - 106) ^ 0x5A) << 16) | ((*(unsigned __int8 *)(v234 + (*(unsigned __int8 *)(v61 - 110) ^ 0xBBLL)) ^ 0xD0) << 8) | ((v232[*(unsigned __int8 *)(v61 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v61 - 112) - ((2 * *(unsigned __int8 *)(v61 - 112)) & 0xCA) - 27) ^ 0x84) << 24);
  v584 = v232;
  v237 = *(unsigned __int8 *)(v235 + (*(unsigned __int8 *)(v61 - 97) ^ 0x74)) ^ 0xA2 | (((*(_BYTE *)(v233 + (*(unsigned __int8 *)(v61 - 99) ^ 0xF3)) - 106) ^ 2) << 16) | ((*(unsigned __int8 *)(v234 + (*(unsigned __int8 *)(v61 - 98) ^ 0x20)) ^ 0x3A) << 8) | ((v232[*(unsigned __int8 *)(v61 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v61 - 100) - ((2 * *(unsigned __int8 *)(v61 - 100)) & 0xCA) - 27) ^ 0x85) << 24);
  v578 = v235;
  v580 = v234;
  v238 = (*(unsigned __int8 *)(v235 + (*(unsigned __int8 *)(v61 - 105) ^ 0xE4)) ^ 0x33) & 0xFF00FFFF | ((v232[*(unsigned __int8 *)(v61 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v61 - 108) - ((2 * *(unsigned __int8 *)(v61 - 108)) & 0xCA) - 27) ^ 0xFFFFFFE1) << 24) | (((*(_BYTE *)(v233 + (*(unsigned __int8 *)(v61 - 107) ^ 0x27)) - 106) ^ 0x96) << 16) | ((*(unsigned __int8 *)(v234 + (*(unsigned __int8 *)(v61 - 106) ^ 9)) ^ 0xD5) << 8);
  v239 = *(unsigned __int8 **)(v61 - 120);
  v582 = v233;
  v240 = (*(unsigned __int8 *)(v235 + (*(unsigned __int8 *)(v61 - 101) ^ 0xF2)) ^ 0x8A) & 0xFF00FFFF | ((v232[*(unsigned __int8 *)(v61 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v61 - 104) - ((2 * *(unsigned __int8 *)(v61 - 104)) & 0xCA) - 27) ^ 0xE0) << 24) | ((*(unsigned __int8 *)(v234 + (*(unsigned __int8 *)(v61 - 102) ^ 0xBELL)) ^ 0x72) << 8) & 0xFF00FFFF | (((*(_BYTE *)(v233 + (*(unsigned __int8 *)(v61 - 103) ^ 0xE9)) - 106) ^ 0x8A) << 16);
  if ((v231 & 0x80) != 0)
    v241 = -128;
  else
    v241 = 128;
  *(_DWORD *)(v61 - 128) = v237 ^ 0xC71C9E0F;
  *(_DWORD *)(v61 - 132) = v236 ^ 0x653F3C3B;
  *(_DWORD *)(v61 - 136) = v238 ^ 0xEFEB9384;
  *(_DWORD *)(v61 - 140) = v240 ^ 0x14CE96FF;
  HIDWORD(v574) = (HIDWORD(v464) - 1373394449) ^ v445;
  LODWORD(v574) = v220 ^ v501 ^ v573 ^ v450 ^ (181304767 * v209 + 2133600750);
  HIDWORD(v571) = (HIDWORD(v475) - 614621175) ^ v221;
  LODWORD(v571) = v564 ^ v544;
  HIDWORD(v566) = v444 ^ ((BYTE2(v131) ^ 0x4C) + 441139959 - ((2 * (BYTE2(v131) ^ 0x4C) + 160207960) & 0x9089196)) ^ HIDWORD(v448) ^ v224;
  LODWORD(v566) = v443 ^ HIDWORD(v446);
  HIDWORD(v562) = HIDWORD(v443) ^ v448 ^ v451;
  LODWORD(v562) = (v512 - 614621175) ^ v550 ^ v561;
  HIDWORD(v556) = v225 ^ v559;
  LODWORD(v556) = v446 ^ v222 ^ v593 ^ v483 ^ HIDWORD(v451);
  HIDWORD(v551) = HIDWORD(v445) ^ v553 ^ HIDWORD(v461) ^ v548;
  LODWORD(v551) = v227 ^ v223;
  HIDWORD(v545) = v226 ^ v537;
  LODWORD(v545) = HIDWORD(v444) ^ HIDWORD(a25);
  HIDWORD(v541) = v526 ^ v515 ^ v542 ^ (v457 - 614621175);
  LODWORD(v541) = (v464 - 614621175) ^ v540;
  HIDWORD(v535) = HIDWORD(v455) ^ v520 ^ v532;
  LODWORD(v535) = HIDWORD(v452) ^ v471 ^ v229;
  HIDWORD(v529) = v528 ^ v467;
  LODWORD(v529) = v228 ^ HIDWORD(v471);
  HIDWORD(v523) = *(_DWORD *)(v61 - 200) ^ *(_DWORD *)(v61 - 240) ^ v598 ^ v522;
  LODWORD(v523) = *(_DWORD *)(v61 - 168) ^ v511;
  HIDWORD(v518) = *(_DWORD *)(v61 - 184) ^ v508;
  LODWORD(v518) = v475 ^ v596;
  HIDWORD(v513) = v455 ^ HIDWORD(v450);
  LODWORD(v513) = *(_DWORD *)(v61 - 224) ^ v603 ^ HIDWORD(v457);
  HIDWORD(v509) = HIDWORD(v467) ^ *(_DWORD *)(v61 - 160) ^ v461;
  LODWORD(v509) = v600 ^ *(_DWORD *)(v61 - 192) ^ v495;
  HIDWORD(v504) = v485 ^ *(_DWORD *)(v61 - 176);
  LODWORD(v504) = *(_DWORD *)(v61 - 256) ^ v503 ^ v489 ^ *(_DWORD *)(v61 - 232) ^ (181304767 * v207 + 2133600750);
  HIDWORD(v499) = v498 ^ v479;
  LODWORD(v499) = *(_DWORD *)(v61 - 216) ^ v492;
  HIDWORD(v493) = (v241 + (v231 ^ 0x2497E332)) ^ v230;
  LODWORD(v493) = *(_DWORD *)(v61 - 152) ^ *(_DWORD *)(v61 - 208) ^ *(_DWORD *)(v61 - 248);
  v242 = *(_DWORD *)(v61 - 124);
  HIDWORD(v486) = v242 & 0x39CF440F;
  LODWORD(v486) = v242 ^ 0x3A0;
  HIDWORD(v480) = v242 ^ 0x3BC;
  LODWORD(v480) = v242 ^ 0x333;
  HIDWORD(a25) = v242 ^ 0x379;
  *(_QWORD *)(v61 - 176) = 13;
  v243 = *(_BYTE *)(v233 + (v239[13] ^ (((v242 - 100) | 0x11) - 40))) - 106;
  *(_QWORD *)(v61 - 152) = 1;
  v244 = v239[1] ^ 0x57;
  *(_QWORD *)(v61 - 160) = 10;
  v245 = v239[10] ^ 0xB6;
  LODWORD(v244) = ((*(_BYTE *)(v233 + v244) - 106) ^ 0xF6) << 16;
  *(_QWORD *)(v61 - 192) = 4;
  v246 = (*(unsigned __int8 *)(v234 + v245) ^ 0x5F) << 8;
  v247 = v239[4];
  v248 = v584[v247 ^ 0x9A];
  *(_QWORD *)(v61 - 224) = 7;
  LODWORD(v247) = v248 ^ (v247 - ((2 * v247) & 0xCA) - 27) ^ 0xFFFFFFCF;
  v249 = *(unsigned __int8 *)(v578 + (v239[7] ^ 0xD6));
  *(_QWORD *)(v61 - 216) = 2;
  LODWORD(v247) = v249 ^ 0x60 | ((_DWORD)v247 << 24);
  v250 = *(unsigned __int8 *)(v234 + v239[2]) ^ 0x4D;
  *(_QWORD *)(v61 - 184) = 3;
  LODWORD(v244) = v244 | (v250 << 8);
  v251 = *(unsigned __int8 *)(v578 + (v239[3] ^ 0x74));
  *(_QWORD *)(v61 - 168) = 12;
  LODWORD(v244) = v244 | v251 ^ 0xA2;
  v252 = v584[v239[12] ^ 0x6ELL] ^ (v239[12] + (~(2 * v239[12]) | 0x35) - 26) ^ 0x51;
  *(_QWORD *)(v61 - 208) = 0;
  v253 = ((v243 ^ 2) << 16) | (v252 << 24);
  v254 = v244 | ((v584[*v239 ^ 0x15] ^ (*v239 - ((2 * *v239) & 0xCA) - 27) ^ 0xAE) << 24);
  LODWORD(v244) = v246 | ((v584[v239[8] ^ 0x46] ^ (v239[8] - ((2 * v239[8]) & 0xCA) - 27) ^ 0xFFFFFFE7) << 24);
  *(_QWORD *)(v61 - 200) = 14;
  v255 = *(unsigned __int8 *)(v234 + (v239[14] ^ 0xD5)) ^ 0xC5;
  *(_QWORD *)(v61 - 232) = 5;
  LODWORD(v247) = v247 & 0xFF00FFFF | (((*(_BYTE *)(v582 + (v239[5] ^ 0x9DLL)) - 106) ^ 0xF7) << 16);
  LODWORD(v244) = *(unsigned __int8 *)(v578 + (v239[11] ^ 0xC2)) ^ 0x87 | v244;
  *(_QWORD *)(v61 - 256) = 9;
  *(_QWORD *)(v61 - 248) = 11;
  LODWORD(v244) = v244 & 0xFF00FFFF | (((*(_BYTE *)(v582 + (v239[9] ^ 0x3ELL)) - 106) ^ 0xDF) << 16);
  v256 = *(unsigned __int8 *)(v234 + (v239[6] ^ 0xA4));
  *(_QWORD *)(v61 - 240) = 15;
  v257 = *(unsigned __int8 *)(v578 + (v239[15] ^ 0x47)) ^ 0xA2 | v253 | (v255 << 8);
  v597 = v247 | ((v256 ^ 0x95) << 8);
  v258 = (uint64_t)*(&off_1E89A15E0 + (v242 ^ 0x3A0));
  v259 = ((((unsigned __int16)(v597 ^ WORD2(v585)) >> 8) ^ 0x4C)
        - 1101829684
        - 2 * ((((v597 ^ HIDWORD(v585)) >> 8) ^ 0xB71C4C) & 0xDC ^ ((v597 ^ HIDWORD(v585)) >> 8) & 0x10)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v597 ^ WORD2(v585)) >> 8) ^ 0x21u));
  v260 = v254 ^ v586;
  v261 = v254 ^ v586 ^ 0x730032AA;
  v262 = (uint64_t)*(&off_1E89A15E0 + (v242 & 0x39CF440F));
  v263 = (v259 - 747033579 - ((2 * v259) & 0xA6F2582A)) ^ *(_DWORD *)(v262
                                                                    + 4 * ((v254 ^ v586) ^ 0xAAu));
  v264 = ((((unsigned __int16)(WORD2(a49) ^ v257) >> 8) ^ 0xF0)
        - 1101829684
        - 2
        * ((((HIDWORD(a49) ^ v257) >> 8) ^ 0x50F9F0) & 0xCF ^ ((HIDWORD(a49) ^ v257) >> 8) & 3)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(WORD2(a49) ^ v257) >> 8) ^ 0x9Du));
  v265 = v264 - 367616239 - ((2 * v264) & 0xD42D3E22);
  v266 = (uint64_t)*(&off_1E89A15E0 + v242 - 859);
  v267 = *(_DWORD *)(v266 + 4 * (((v244 ^ v585) >> 16) ^ 0x68u));
  HIDWORD(v269) = v267 ^ 0xEA2;
  LODWORD(v269) = v267 ^ 0xBEBBE000;
  v268 = v269 >> 12;
  v270 = *(_DWORD *)(v266 + 4 * BYTE2(v260));
  HIDWORD(v269) = v270 ^ 0xEA2;
  LODWORD(v269) = v270 ^ 0xBEBBE000;
  v271 = (char *)*(&off_1E89A15E0 + (v242 ^ 0x3BC)) - 12;
  v272 = v265 ^ *(_DWORD *)&v271[4 * (((v597 ^ HIDWORD(v585)) >> 24) ^ 0xB7)] ^ (v269 >> 12);
  v273 = *(_DWORD *)(v266 + 4 * (((HIDWORD(a49) ^ v257) >> 16) ^ 0xF9u));
  HIDWORD(v269) = v273 ^ 0xEA2;
  LODWORD(v269) = v273 ^ 0xBEBBE000;
  v274 = *(_DWORD *)(v262 + 4 * ((v247 ^ BYTE4(v585)) ^ 0xFBu)) ^ ((unsigned __int16)(v244 ^ v585) >> 8) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v244 ^ v585) >> 8) ^ 0x23u)) ^ 0x6D2A4597 ^ (v269 >> 12);
  LODWORD(v247) = *(_DWORD *)(v266 + 4 * (((v597 ^ HIDWORD(v585)) >> 16) ^ 0x1Cu));
  HIDWORD(v269) = v247 ^ 0xEA2;
  LODWORD(v269) = v247 ^ 0xBEBBE000;
  LODWORD(v247) = *(_DWORD *)&v271[4 * (((v244 ^ v585) >> 24) ^ 0xF6)] ^ (BYTE1(v261) - 1101829684 - ((v260 >> 7) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v261) ^ 0x6Du)) ^ ((v269 >> 12) - 367616239 - ((2 * (v269 >> 12)) & 0xD42D3E22));
  v275 = HIDWORD(v574) ^ v268 ^ *(_DWORD *)&v271[4 * (((HIDWORD(a49) ^ v257) >> 24) ^ 0x50)] ^ (v263 - 367616239 - ((2 * v263) & 0xD42D3E22));
  v276 = v574 ^ *(_DWORD *)(v262 + 4 * ((BYTE4(a49) ^ v257) ^ 0x9Bu)) ^ (v247
                                                                                          - 747033579
                                                                                          - ((2 * v247) & 0xA6F2582A));
  LODWORD(v247) = HIDWORD(v571) ^ *(_DWORD *)(v262 + 4 * ((v244 ^ v585) ^ 0x5Fu)) ^ (v272 - 747033579 - ((2 * v272) & 0xA6F2582A));
  v277 = HIDWORD(v493) ^ *(_DWORD *)&v271[4 * HIBYTE(v261)] ^ (v274 - 367616239 - ((2 * v274) & 0xD42D3E22));
  v278 = v275 ^ 0xF9388C2F;
  v279 = *(_DWORD *)(v266 + 4 * ((v275 ^ 0xF9388C2F) >> 16));
  HIDWORD(v269) = v279 ^ 0xEA2;
  LODWORD(v269) = v279 ^ 0xBEBBE000;
  v280 = v269 >> 12;
  v281 = *(_DWORD *)(v266 + 4 * (BYTE2(v276) ^ 6u));
  HIDWORD(v269) = v281 ^ 0xEA2;
  LODWORD(v269) = v281 ^ 0xBEBBE000;
  v282 = v269 >> 12;
  v283 = *(_DWORD *)(v266 + 4 * (BYTE2(v247) ^ 0x66u));
  HIDWORD(v269) = v283 ^ 0xEA2;
  LODWORD(v269) = v283 ^ 0xBEBBE000;
  v284 = (v269 >> 12) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v277) ^ 5u)) ^ ((BYTE1(v277) ^ 0x68)
                                                                      - 1101829684
                                                                      - 2
                                                                      * (((v277 >> 8) ^ 0x42BD68) & 0xDD ^ (v277 >> 8) & 0x11));
  v285 = (v280 - 747033579 - ((2 * v280) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v247 ^ 0xB6u));
  v286 = (v284 - 747033579 - ((2 * v284) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v275 ^ 0x61u));
  v287 = (BYTE1(v278) - 1101829684 - ((v278 >> 7) & 0x198)) ^ 0xD678EAEF ^ *(_DWORD *)(v258 + 4
                                                                                            * (BYTE1(v278) ^ 0x6Du));
  v288 = *(_DWORD *)&v271[4 * (BYTE3(v247) ^ 0x43)] ^ 0x480CC4AF;
  v289 = v287 + v288 - 2 * (v287 & v288);
  v290 = *(_DWORD *)(v266 + 4 * (BYTE2(v277) ^ 0xBDu));
  HIDWORD(v269) = v290 ^ 0xEA2;
  LODWORD(v269) = v290 ^ 0xBEBBE000;
  v291 = *(_DWORD *)&v271[4 * HIBYTE(v278)] ^ (v282 - 367616239 - ((2 * v282) & 0xD42D3E22));
  v292 = (v291 - 747033579 - ((2 * v291) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v277 ^ 0xABu));
  v293 = *(_DWORD *)&v271[4 * (HIBYTE(v277) ^ 0x42)] ^ v591 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v276) ^ 0xFFu)) ^ ((BYTE1(v276) ^ 0x92) - 1101829684 - ((2 * ((v276 >> 8) ^ 0xA00692)) & 0x198)) ^ (v285 - 367616239 - ((2 * v285) & 0xD42D3E22));
  LOBYTE(v277) = BYTE1(v247) ^ 0x54;
  LODWORD(v247) = v493 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v247) ^ 0x39u)) ^ (v292 - 1101829684 - ((2 * v292) & 0x7CA6D398));
  v294 = v571 ^ *(_DWORD *)&v271[4 * (HIBYTE(v276) ^ 0xA0)] ^ (v286 - 367616239 - ((2 * v286) & 0xD42D3E22));
  v295 = HIDWORD(v566) ^ *(_DWORD *)(v262 + 4 * (v276 ^ 0x8Eu)) ^ ((v289 ^ (v269 >> 12))
                                                                                    - 747033579
                                                                                    - ((2 * (v289 ^ (v269 >> 12))) & 0xA6F2582A));
  v296 = *(_DWORD *)(v266 + 4 * (BYTE2(v295) ^ 0x79u));
  HIDWORD(v269) = v296 ^ 0xEA2;
  LODWORD(v269) = v296 ^ 0xBEBBE000;
  BYTE1(v276) = BYTE1(v294) ^ 0x68;
  v297 = ((v269 >> 12) - 367616239 - ((2 * (v269 >> 12)) & 0xD42D3E22)) ^ *(_DWORD *)&v271[4
                                                                                         * ((v294 ^ 0x2261685Eu) >> 24)];
  v298 = ((BYTE1(v295) ^ 0xD0) - 1101829684 - 2 * (((v295 >> 8) ^ 0x679D0) & 0xCD ^ (v295 >> 8) & 1)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v295) ^ 0xBDu));
  v299 = (v298 - 747033579 - ((2 * v298) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v293 ^ 0x76u));
  v300 = ((BYTE1(v247) ^ 0xEC)
        - 1101829684
        - 2 * (((v247 >> 8) ^ 0xE5FEC) & 0xCD ^ (v247 >> 8) & 1)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v247) ^ 0x81u));
  v301 = *(_DWORD *)(v266 + 4 * (BYTE2(v247) ^ 0x5Fu));
  HIDWORD(v269) = v301 ^ 0xEA2;
  LODWORD(v269) = v301 ^ 0xBEBBE000;
  v302 = v269 >> 12;
  HIDWORD(v269) = *(_DWORD *)(v262 + 4 * (v294 ^ 0x5Eu)) ^ 0x3A6E0B9D;
  LODWORD(v269) = HIDWORD(v269);
  v303 = (v269 >> 28) ^ __ROR4__(*(_DWORD *)&v271[4 * (HIBYTE(v295) ^ 6)] ^ 0x7462B151 ^ (v300- 367616239- ((2 * v300) & 0xD42D3E22)), 28);
  v304 = (v302 - 367616239 - ((2 * v302) & 0xD42D3E22)) ^ *(_DWORD *)&v271[4 * (HIBYTE(v293) ^ 0xD2)];
  v305 = (v304 - 747033579 - ((2 * v304) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v295 ^ 0x4Cu));
  v306 = *(_DWORD *)(v266 + 4 * (BYTE2(v294) ^ 0x1Bu));
  HIDWORD(v269) = v306 ^ 0xEA2;
  LODWORD(v269) = v306 ^ 0xBEBBE000;
  v307 = v269 >> 12;
  v308 = ((v293 >> 8) ^ 0xD2CCC0) & 0xCE ^ (v293 >> 8) & 2;
  v309 = BYTE1(v293) ^ 0xC0;
  v310 = *(_DWORD *)(v266 + 4 * (BYTE2(v293) ^ 0xCCu));
  HIDWORD(v269) = v310 ^ 0xEA2;
  LODWORD(v269) = v310 ^ 0xBEBBE000;
  v311 = v443 ^ HIDWORD(v446) ^ (v269 >> 12) ^ __ROR4__(v303 ^ 0x78071371, 4);
  LOBYTE(v310) = v247 ^ v277;
  v312 = HIDWORD(v562) ^ *(_DWORD *)&v271[4 * (BYTE3(v247) ^ 0xE)] ^ v307 ^ (v299 - 367616239 - ((2 * v299) & 0xD42D3E22));
  v313 = v562 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v276) ^ 0x6Du)) ^ (v305 - 1101829684 - ((2 * v305) & 0x7CA6D398));
  v314 = HIDWORD(v556) ^ (v309 - 1101829684 - 2 * v308) ^ *(_DWORD *)(v262 + 4 * (v310 ^ 0xCAu)) ^ *(_DWORD *)(v258 + 4 * (v309 ^ 0x6Du)) ^ (v297 - 747033579 - ((2 * v297) & 0xA6F2582A));
  v315 = BYTE1(v276) ^ 0x4552953C ^ v313;
  LODWORD(v247) = *(_DWORD *)(v266 + 4 * BYTE2(v315));
  HIDWORD(v269) = v247 ^ 0xEA2;
  LODWORD(v269) = v247 ^ 0xBEBBE000;
  v316 = v269 >> 12;
  BYTE1(v247) = BYTE1(v311) ^ 0xE7;
  v317 = *(_DWORD *)(v266 + 4 * ((v311 ^ 0x99FEE750) >> 16));
  HIDWORD(v269) = v317 ^ 0xEA2;
  LODWORD(v269) = v317 ^ 0xBEBBE000;
  v318 = (v269 >> 12) - 747033579 - ((2 * (v269 >> 12)) & 0xA6F2582A);
  v319 = BYTE1(v312) ^ 0x29;
  v320 = v319 - 1101829684 - 2 * (((v312 >> 8) ^ 0xA73B29) & 0xCE ^ (v312 >> 8) & 2);
  v321 = *(_DWORD *)(v266 + 4 * (BYTE2(v314) ^ 2u));
  HIDWORD(v269) = v321 ^ 0xEA2;
  LODWORD(v269) = v321 ^ 0xBEBBE000;
  v322 = (BYTE1(v315) - 1101829684 - ((v315 >> 7) & 0x198)) ^ *(_DWORD *)(v262 + 4 * (v312 ^ 0x72u)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v315) ^ 0x6Du)) ^ v318;
  v323 = *(_DWORD *)&v271[4 * (HIBYTE(v312) ^ 0xA7)] ^ (v269 >> 12);
  v324 = *(_DWORD *)(v266 + 4 * (BYTE2(v312) ^ 0x3Bu));
  v325 = v323 ^ *(_DWORD *)(v262 + 4 * v315);
  HIDWORD(v269) = v324 ^ 0xEA2;
  LODWORD(v269) = v324 ^ 0xBEBBE000;
  v326 = v556 ^ ((BYTE1(v314) ^ 0xD9) - 1101829684 - ((2 * ((v314 >> 8) ^ 0x9802D9)) & 0x198)) ^ *(_DWORD *)(v262 + 4 * (v311 ^ 0x1Eu)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v314) ^ 0xB4u)) ^ (v269 >> 12) ^ *(_DWORD *)&v271[4 * (HIBYTE(v313) ^ 0x61)];
  v327 = HIDWORD(v551) ^ *(_DWORD *)&v271[4 * (HIBYTE(v314) ^ 0x98)] ^ (v322 - 367616239 - ((2 * v322) & 0xD42D3E22));
  v328 = v227 ^ v223 ^ *(_DWORD *)(v262 + 4 * (v314 ^ 0x3Du)) ^ v320 ^ *(_DWORD *)&v271[4 * ((v311 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)(v258 + 4 * (v319 ^ 0x6Du));
  v329 = *(_DWORD *)(v266 + 4 * (BYTE2(v326) ^ 0xF7u));
  HIDWORD(v269) = v329 ^ 0xEA2;
  LODWORD(v269) = v329 ^ 0xBEBBE000;
  v330 = v269 >> 12;
  v331 = *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v311 ^ 0xE750) >> 8) ^ 0x6Du));
  v332 = v328 ^ v316;
  v333 = HIDWORD(v545) ^ v331;
  v334 = *(_DWORD *)(v266 + 4 * (BYTE2(v332) ^ 0x87u));
  v335 = v333 ^ ((v325 ^ 0x396FB304) - 1101829684 - 2 * ((v325 ^ 0x396FB304) & 0x3E5369CE ^ v325 & 2));
  HIDWORD(v269) = v334 ^ 0xEA2;
  LODWORD(v269) = v334 ^ 0xBEBBE000;
  v336 = BYTE1(v332) ^ 0x4C;
  v337 = v336 - 1101829684 - 2 * (((v332 >> 8) ^ 0xEC874C) & 0xDE ^ (v332 >> 8) & 0x12);
  v338 = v326 ^ 0xDA8D2242;
  v339 = *(_DWORD *)(v262 + 4 * ((v335 ^ BYTE1(v247)) ^ 0x41u)) ^ (((unsigned __int16)(v326 ^ 0x2242) >> 8)
                                                                                    - 1101829684
                                                                                    - ((v326 >> 7) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v326 ^ 0x2242) >> 8) ^ 0x6Du)) ^ ((v269 >> 12) - 747033579 - ((2 * (v269 >> 12)) & 0xA6F2582A));
  v340 = *(_DWORD *)(v266 + 4 * (BYTE2(v335) ^ 0x81u));
  HIDWORD(v269) = v340 ^ 0xEA2;
  LODWORD(v269) = v340 ^ 0xBEBBE000;
  v341 = ((v269 >> 12) - 367616239 - ((2 * (v269 >> 12)) & 0xD42D3E22)) ^ *(_DWORD *)&v271[4 * HIBYTE(v338)];
  v342 = (v341 - 747033579 - ((2 * v341) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v332 ^ 1u));
  LODWORD(v247) = *(_DWORD *)(v262 + 4 * (v327 ^ 0xFCu)) ^ (v330
                                                                             - 747033579
                                                                             - ((2 * v330) & 0xA6F2582A)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v335) ^ 0xCDu)) ^ ((BYTE1(v335) ^ 0xA0) - 1101829684 - 2 * (((v335 >> 8) ^ 0x6881A0) & 0xDE ^ (v335 >> 8) & 0x12));
  v343 = *(_DWORD *)(v266 + 4 * (BYTE2(v327) ^ 0xC6u));
  LODWORD(v269) = __ROR4__((v343 >> 12) ^ 0x266369C, 17) ^ 0xEE910136;
  HIDWORD(v269) = v269;
  v344 = v545 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v327) ^ 0x75u)) ^ (v342 - 1101829684 - ((2 * v342) & 0x7CA6D398));
  LODWORD(v247) = HIDWORD(v541) ^ *(_DWORD *)&v271[4 * (HIBYTE(v332) ^ 0xEC)] ^ (v247
                                                                               - 367616239
                                                                               - ((2 * v247) & 0xD42D3E22));
  v345 = v541 ^ *(_DWORD *)&v271[4 * (HIBYTE(v327) ^ 0x5A)] ^ (v339 - 367616239 - ((2 * v339) & 0xD42D3E22));
  v346 = HIDWORD(v535) ^ v337 ^ *(_DWORD *)(v262 + 4 * v338) ^ *(_DWORD *)(v258 + 4 * (v336 ^ 0x6Du)) ^ *(_DWORD *)&v271[4 * (HIBYTE(v335) ^ 0x68)] ^ ((v269 >> 15) + (v343 << 20));
  v347 = ((BYTE1(v344) ^ 0x9D) - 1101829684 - 2 * (((v344 >> 8) ^ 0xC2489D) & 0xCE ^ (v344 >> 8) & 2)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v344) ^ 0xF0u));
  v348 = *(_DWORD *)(v266 + 4 * (BYTE2(v247) ^ 0x8Fu));
  v349 = *(_DWORD *)(v262 + 4 * (v346 ^ 0x8Eu)) ^ (v348 << 20) ^ (v348 >> 12) ^ 0xEA2BEBBE ^ (v347 - 747033579 - ((2 * v347) & 0xA6F2582A));
  v350 = *(_DWORD *)(v266 + 4 * ((v345 ^ 0xCFB8D782) >> 16));
  HIDWORD(v269) = v350 ^ 0xEA2;
  LODWORD(v269) = v350 ^ 0xBEBBE000;
  v351 = ((v269 >> 12) - 747033579 - ((2 * (v269 >> 12)) & 0xA6F2582A)) ^ *(_DWORD *)(v262
                                                                                    + 4
                                                                                    * ((v344 ^ BYTE1(v327)) ^ 0x3Fu));
  v352 = v349 - 367616239 - ((2 * v349) & 0xD42D3E22);
  v353 = v351 - 367616239 - ((2 * v351) & 0xD42D3E22);
  v354 = BYTE1(v247) ^ 0xD9;
  v355 = v354 - 1101829684 - 2 * (((v247 >> 8) ^ 0xC78FD9) & 0xCE ^ (v247 >> 8) & 2);
  v356 = *(_DWORD *)(v266 + 4 * (BYTE2(v344) ^ 0x48u));
  HIDWORD(v269) = v356 ^ 0xEA2;
  LODWORD(v269) = v356 ^ 0xBEBBE000;
  v357 = ((BYTE1(v346) ^ 0xD3) - 1101829684 - ((2 * ((v346 >> 8) ^ 0xF5C4D3)) & 0x198)) ^ *(_DWORD *)(v262 + 4 * (v345 ^ 0xCCu)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v346) ^ 0xBEu)) ^ ((v269 >> 12) - 747033579 - ((2 * (v269 >> 12)) & 0xA6F2582A));
  v358 = *(_DWORD *)(v266 + 4 * (BYTE2(v346) ^ 0xC4u));
  HIDWORD(v269) = v358 ^ 0xEA2;
  LODWORD(v269) = v358 ^ 0xBEBBE000;
  v359 = v535 ^ (((unsigned __int16)(v345 ^ 0xD782) >> 8)
               - 1101829684
               - (((v345 ^ 0xCFB8D782) >> 7) & 0x198)) ^ *(_DWORD *)(v262 + 4 * (v247 ^ 0x50u)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v345 ^ 0xD782) >> 8) ^ 0x6Du)) ^ (v269 >> 12) ^ *(_DWORD *)&v271[4 * (HIBYTE(v344) ^ 0xC2)];
  LODWORD(v247) = HIDWORD(v529) ^ *(_DWORD *)&v271[4 * (BYTE3(v247) ^ 0xC7)] ^ (v357
                                                                              - 367616239
                                                                              - ((2 * v357) & 0xD42D3E22));
  v360 = v529 ^ *(_DWORD *)&v271[4 * ((v345 ^ 0xCFB8D782) >> 24)] ^ v352;
  v361 = HIDWORD(v523) ^ v355 ^ *(_DWORD *)&v271[4 * (HIBYTE(v346) ^ 0xF5)] ^ *(_DWORD *)(v258 + 4 * (v354 ^ 0x6Du)) ^ v353;
  v362 = *(_DWORD *)(v266 + 4 * (BYTE2(v247) ^ 0xE6u));
  HIDWORD(v269) = v362 ^ 0xEA2;
  LODWORD(v269) = v362 ^ 0xBEBBE000;
  v363 = v269 >> 12;
  v364 = *(_DWORD *)(v266 + 4 * (BYTE2(v360) ^ 0x1Cu));
  v365 = (((unsigned __int16)(v361 ^ 0xCCA2) >> 8) - 1101829684 - (((v361 ^ 0x33C8CCA2) >> 7) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v361 ^ 0xCCA2) >> 8) ^ 0x6Du));
  HIDWORD(v269) = v364 ^ 0xEA2;
  LODWORD(v269) = v364 ^ 0xBEBBE000;
  v366 = (v269 >> 12) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v247) ^ 0xD9u)) ^ ((BYTE1(v247) ^ 0xB4)
                                                                         - 1101829684
                                                                         - 2
                                                                         * (((v247 >> 8) ^ 0x4FE6B4) & 0xCD ^ (v247 >> 8) & 1));
  v367 = (v366 - 747033579 - ((2 * v366) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v359 ^ 0xEEu));
  v368 = (v365 - 747033579 - ((2 * v365) & 0xA6F2582A)) ^ *(_DWORD *)(v262
                                                                    + 4
                                                                    * ((v529 ^ v271[4 * ((v345 ^ 0xCFB8D782) >> 24)] ^ v352) ^ 0x3Au));
  v369 = *(_DWORD *)(v262 + 4 * (v361 ^ 0xA2u)) ^ (((unsigned __int16)(v359 ^ 0xA7EE) >> 8)
                                                                    - 1101829684
                                                                    - (((v359 ^ 0x205CA7EE) >> 7) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v359 ^ 0xA7EE) >> 8) ^ 0x6Du)) ^ (v363 - 747033579 - ((2 * v363) & 0xA6F2582A));
  v370 = *(_DWORD *)(v262 + 4 * (v247 ^ 0x96u));
  HIDWORD(v269) = v370 ^ 0x13792C15;
  LODWORD(v269) = v370 ^ 0xC0000000;
  HIDWORD(v269) = (v269 >> 29) ^ 0x6615DA09;
  LODWORD(v269) = HIDWORD(v269);
  v371 = (v269 >> 3) - 1101829684 - ((2 * (v269 >> 3)) & 0x7CA6D398);
  v372 = *(_DWORD *)(v266 + 4 * ((v359 ^ 0x205CA7EE) >> 16));
  HIDWORD(v269) = v372 ^ 0xEA2;
  LODWORD(v269) = v372 ^ 0xBEBBE000;
  v373 = v269 >> 12;
  v374 = *(_DWORD *)(v266 + 4 * ((v361 ^ 0x33C8CCA2) >> 16));
  HIDWORD(v269) = v374 ^ 0xEA2;
  LODWORD(v269) = v374 ^ 0xBEBBE000;
  v375 = v523 ^ *(_DWORD *)&v271[4 * (HIBYTE(v361) ^ 0x17)] ^ (v367 - 367616239 - ((2 * v367) & 0xD42D3E22));
  v376 = BYTE1(v360);
  v377 = v371 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v360) ^ 0xD1u)) ^ (v269 >> 12);
  v378 = *(_DWORD *)&v271[4 * (HIBYTE(v359) ^ 4)] ^ v590 ^ (v377 - 367616239 - ((2 * v377) & 0xD42D3E22));
  v379 = HIDWORD(v518) ^ *(_DWORD *)&v271[4 * (BYTE3(v247) ^ 0x4F)] ^ v373 ^ (v368
                                                                            - 367616239
                                                                            - ((2 * v368) & 0xD42D3E22));
  LODWORD(v247) = v518 ^ *(_DWORD *)&v271[4 * (HIBYTE(v360) ^ 0x1B)] ^ (v369 - 367616239 - ((2 * v369) & 0xD42D3E22));
  v380 = *(_DWORD *)(v266 + 4 * (BYTE2(v247) ^ 0x7Eu));
  HIDWORD(v269) = v380 ^ 0xEA2;
  LODWORD(v269) = v380 ^ 0xBEBBE000;
  v381 = v269 >> 12;
  v382 = *(_DWORD *)(v266 + 4 * (BYTE2(v379) ^ 1u));
  HIDWORD(v269) = v382 ^ 0xEA2;
  LODWORD(v269) = v382 ^ 0xBEBBE000;
  v383 = ((v269 >> 12) - 747033579 - ((2 * (v269 >> 12)) & 0xA6F2582A)) ^ *(_DWORD *)(v262
                                                                                    + 4
                                                                                    * (v375 ^ 0xC6u));
  v384 = ((BYTE1(v375) ^ 0x71) - 1101829684 - ((2 * ((v375 >> 8) ^ 0xF25B71)) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v375) ^ 0x1Cu));
  v385 = (v384 - 367616239 - ((2 * v384) & 0xD42D3E22)) ^ *(_DWORD *)&v271[4 * (HIBYTE(v379) ^ 0x1F)];
  v386 = *(_DWORD *)(v266 + 4 * (BYTE2(v375) ^ 0x5Bu));
  HIDWORD(v269) = v386 ^ 0xEA2;
  LODWORD(v269) = v386 ^ 0xBEBBE000;
  v387 = v269 >> 12;
  v388 = v385 - 747033579 - ((2 * v385) & 0xA6F2582A);
  v389 = v376 ^ 0x73F4E0AF ^ v378;
  v390 = *(_DWORD *)(v266 + 4 * BYTE2(v389));
  HIDWORD(v269) = v390 ^ 0xEA2;
  LODWORD(v269) = v390 ^ 0xBEBBE000;
  v391 = v269 >> 12;
  HIDWORD(v269) = v381 ^ ((BYTE1(v379) ^ 0x81) - 1101829684 - ((2 * ((v379 >> 8) ^ 0x1F0181)) & 0x198)) ^ 0xD678EAEF ^ *(_DWORD *)(v258 + 4 * (BYTE1(v379) ^ 0xECu));
  LODWORD(v269) = HIDWORD(v269);
  LODWORD(v269) = (v269 >> 11) ^ __ROR4__(*(_DWORD *)&v271[4 * (HIBYTE(v375) ^ 0xF2)] ^ 0x480CC4AF, 11) ^ 0xD490839A;
  HIDWORD(v269) = v269;
  v392 = v455 ^ HIDWORD(v450) ^ *(_DWORD *)(v262 + 4 * (v379 ^ 0xB8u)) ^ ((BYTE1(v247) ^ 0xAA)
                                                                                           - 1101829684
                                                                                           - 2
                                                                                           * (((v247 >> 8) ^ 0x967EAA) & 0xCD ^ (v247 >> 8) & 1)) ^ *(_DWORD *)&v271[4 * (HIBYTE(v378) ^ 0x57)] ^ v387 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v247) ^ 0xC7u));
  v393 = v513 ^ *(_DWORD *)&v271[4 * (BYTE3(v247) ^ 0x96)] ^ (BYTE1(v389) - 1101829684 - ((v389 >> 7) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v389) ^ 0x6Du)) ^ (v383 - 367616239 - ((2 * v383) & 0xD42D3E22));
  v394 = HIDWORD(v509) ^ *(_DWORD *)(v262 + 4 * (v247 ^ 0x88u)) ^ v391 ^ v388;
  v395 = v509 ^ *(_DWORD *)(v262 + 4 * v389) ^ ((v269 >> 21)
                                                                 - 747033579
                                                                 - ((2 * (v269 >> 21)) & 0xA6F2582A));
  v396 = *(_DWORD *)(v266 + 4 * (BYTE2(v392) ^ 0x84u));
  HIDWORD(v269) = v396 ^ 0xEA2;
  LODWORD(v269) = v396 ^ 0xBEBBE000;
  v397 = v269 >> 12;
  v398 = *(_DWORD *)(v258 + 4 * (BYTE1(v393) ^ 0x96u)) ^ ((BYTE1(v393) ^ 0xFB)
                                                          - 1101829684
                                                          - ((2 * ((v393 >> 8) ^ 0x3EA2FB)) & 0x198));
  v399 = (v398 - 747033579 - ((2 * v398) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v394 ^ 0x75u));
  v400 = *(_DWORD *)(v266 + 4 * (BYTE2(v393) ^ 0xA2u));
  HIDWORD(v269) = v400 ^ 0xEA2;
  LODWORD(v269) = v400 ^ 0xBEBBE000;
  v401 = (((unsigned __int16)(v394 ^ 0xF075) >> 8) - 1101829684 - (((v394 ^ 0xB54AF075) >> 7) & 0x198)) ^ (v269 >> 12) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v394 ^ 0xF075) >> 8) ^ 0x6Du));
  v402 = *(_DWORD *)&v271[4 * (HIBYTE(v392) ^ 0xFE)];
  v403 = (v401 - 367616239 - ((2 * v401) & 0xD42D3E22)) ^ *(_DWORD *)&v271[4 * (HIBYTE(v395) ^ 0xED)];
  v404 = v399 - 367616239 - ((2 * v399) & 0xD42D3E22);
  v395 ^= 0xC9AF1D8F;
  v405 = BYTE1(v395);
  v406 = BYTE1(v395) - 1101829684 - ((v395 >> 7) & 0x198);
  v407 = *(_DWORD *)(v262 + 4 * v395);
  v408 = *(_DWORD *)(v262 + 4 * (v392 ^ 0x6Bu));
  v409 = *(_DWORD *)(v266 + 4 * BYTE2(v395));
  LODWORD(v247) = *(_DWORD *)(v266 + 4 * (BYTE2(v394) ^ 0x4Au));
  HIDWORD(v269) = v247 ^ 0xEA2;
  LODWORD(v269) = v247 ^ 0xBEBBE000;
  LODWORD(v266) = *(_DWORD *)(v258 + 4 * (v405 ^ 0x6Du));
  v410 = (v392 >> 8) ^ 0xFE8473;
  LODWORD(v258) = *(_DWORD *)(v258 + 4 * (v410 ^ 0x6Du));
  v411 = v410 - 1101829684 - ((2 * v410) & 0x198);
  v412 = HIDWORD(v504) ^ *(_DWORD *)(v262 + 4 * (v393 ^ 0x9Au)) ^ v397 ^ *(_DWORD *)&v271[4 * (HIBYTE(v394) ^ 0x91)] ^ v406 ^ v266;
  LODWORD(v266) = v504 ^ v411 ^ *(_DWORD *)&v271[4 * (HIBYTE(v393) ^ 0x3E)] ^ v258 ^ v407 ^ (v269 >> 12);
  v413 = HIDWORD(v499) ^ v408 ^ (v403 - 747033579 - ((2 * v403) & 0xA6F2582A));
  LODWORD(v258) = v499 ^ v402 ^ (v409 >> 12) ^ (v409 << 20) ^ v404;
  v414 = *(_DWORD *)(v61 - 124);
  v415 = (char *)*(&off_1E89A15E0 + v414 - 809) - 4;
  v416 = (char *)*(&off_1E89A15E0 + v414 - 792) - 4;
  LODWORD(v247) = *(_DWORD *)&v416[4
                                 * (((unsigned __int16)(v499 ^ v402 ^ (v409 >> 12) ^ v404) >> 8) ^ 0xC8)] ^ *(_DWORD *)&v415[4 * (v413 ^ 7)];
  v417 = (v247 ^ 0x2636AA21) - 1507977308 - 2 * ((v247 ^ 0x2636AA21) & 0x261E17B4 ^ v247 & 0x10);
  LODWORD(v247) = *(_DWORD *)&v416[4 * (BYTE1(v412) ^ 0xC2)];
  v418 = (char *)*(&off_1E89A15E0 + (int)v480) - 4;
  v419 = *(_DWORD *)&v416[4 * ((unsigned __int16)(v413 ^ 0x6F07) >> 8)];
  v420 = v417 ^ *(_DWORD *)&v418[4 * (BYTE3(v266) ^ 0xB2)];
  LODWORD(v271) = *(_DWORD *)&v416[4 * ~(v266 >> 8)];
  v421 = *(_DWORD *)&v418[4 * (HIBYTE(v413) ^ 0xEF)];
  LODWORD(v262) = *(_DWORD *)&v418[4 * (BYTE3(v258) ^ 0x77)];
  v422 = *(_DWORD *)&v418[4 * (HIBYTE(v412) ^ 8)];
  v423 = (char *)*(&off_1E89A15E0 + v414 - 759) - 12;
  v424 = *(_DWORD *)&v423[4 * (BYTE2(v258) ^ 0x97)];
  v425 = *(unsigned int *)&v423[4 * (BYTE2(v413) ^ 0x2A)];
  v426 = *(unsigned int *)&v423[4 * (BYTE2(v266) ^ 0x9B)];
  LODWORD(v423) = *(_DWORD *)&v423[4 * (BYTE2(v412) ^ 0xE4)] ^ (v420 + 1430988054 - ((2 * v420) & 0xAA964A2C));
  v427 = *(_DWORD *)&v415[4 * (v412 ^ 0xD8)];
  LODWORD(v418) = *(_DWORD *)&v415[4 * (v266 ^ 0xC5)];
  LODWORD(v415) = *(_DWORD *)&v415[4 * (v258 ^ 0x65)];
  LODWORD(v258) = *(_DWORD *)(v61 - 140) ^ HIDWORD(v586) ^ ((_DWORD)v423 - ((2 * (_DWORD)v423) & 0x2C9828FA) - 1773398915);
  v428 = (char *)*(&off_1E89A15E0 + v414 - 651) - 8;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + 8) = v428[BYTE3(v258) ^ 0xD7] ^ 0xC2;
  LODWORD(v423) = ((v424 ^ 0x5C323448 ^ v419) - 1507977308 - ((2 * (v424 ^ 0x5C323448 ^ v419)) & 0x4C3C2F48)) ^ v422;
  LODWORD(v423) = ((_DWORD)v423 + 793754495 - ((2 * (_DWORD)v423) & 0x5E9F76FE)) ^ v418;
  LODWORD(v423) = *(_DWORD *)(v61 - 136) ^ v587 ^ ((_DWORD)v423 - ((2 * (_DWORD)v423) & 0xDAD2220C) + 1835602182);
  v429 = (char *)*(&off_1E89A15E0 + v414 - 760) - 12;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 224)) = (v429[v423 ^ 0xC7] - 63) ^ 0x5F;
  v430 = (char *)*(&off_1E89A15E0 + SHIDWORD(a25)) - 12;
  v431 = v430[BYTE1(v423) ^ 0x13];
  HIDWORD(v269) = v431 ^ 0x2A;
  LODWORD(v269) = (v431 ^ 0x40) << 24;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + 6) = (v269 >> 30) ^ 0x40;
  v432 = ((v427 ^ 0x7A049E69 ^ v425) - 1507977308 - ((2 * (v427 ^ 0x7A049E69 ^ v425)) & 0x4C3C2F48)) ^ v262;
  v433 = (v432 - ((2 * v432) & 0x12F222BC) + 158929246) ^ v271;
  v434 = *(_DWORD *)(v61 - 132) ^ HIDWORD(v587) ^ (v433 - ((2 * v433) & 0xCF7B7D72) - 406995271);
  v435 = v430[BYTE1(v434)];
  HIDWORD(v269) = v435 ^ 0x2A;
  LODWORD(v269) = (v435 ^ 0x40) << 24;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 216)) = (v269 >> 30) ^ 0x7E;
  v436 = (char *)*(&off_1E89A15E0 + v414 - 650) - 8;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 256)) = v436[BYTE2(v258) ^ 0xFBLL] ^ 0xDD;
  v437 = ((v247 ^ 0xAF6706FA ^ v421) + 1430988054 - ((2 * (v247 ^ 0xAF6706FA ^ v421)) & 0xAA964A2C)) ^ v426;
  v438 = v415 ^ (v437 + 793754495 - ((2 * v437) & 0x5E9F76FE));
  v439 = *(_DWORD *)(v61 - 128) ^ v588 ^ (v438 - ((2 * v438) & 0x8B3C385C) + 1167989806);
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 176)) = v436[BYTE2(v439) ^ 0xB8] ^ 0xE;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 248)) = (v429[v258 ^ 0x1BLL] - 63) ^ 0x7D;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 232)) = v436[BYTE2(v423) ^ 3] ^ 0x70;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 192)) = v428[(v423 >> 24) ^ 0x6DLL] ^ 0x3A;
  LODWORD(v423) = v430[BYTE1(v258) ^ 0x92];
  HIDWORD(v269) = v423 ^ 0x2A;
  LODWORD(v269) = (v423 ^ 0x40) << 24;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 160)) = (v269 >> 30) ^ 0xD2;
  v440 = *(_QWORD *)(v61 - 208);
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + v440) = v428[HIBYTE(v434) ^ 0x53] ^ 0xD6;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 184)) = (v429[v434 ^ 0x95] - 63) ^ 0xAF;
  LOBYTE(v423) = v429[v439 ^ 0x64];
  v441 = *(_QWORD *)(v61 - 120);
  *(_BYTE *)(v441 + *(_QWORD *)(v61 - 240)) = ((_BYTE)v423 - 63) ^ 0x27;
  *(_BYTE *)(v441 + *(_QWORD *)(v61 - 168)) = v428[HIBYTE(v439) ^ 0x6ELL] ^ 0x40;
  LODWORD(v423) = v430[BYTE1(v439) ^ 0x1FLL];
  HIDWORD(v269) = v423 ^ 0x2A;
  LODWORD(v269) = (v423 ^ 0x40) << 24;
  *(_BYTE *)(v441 + *(_QWORD *)(v61 - 200)) = (v269 >> 30) ^ 0x58;
  *(_BYTE *)(v441 + *(_QWORD *)(v61 - 152)) = v436[BYTE2(v434) ^ 0xC8] ^ 0x5F;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, unint64_t))(a57 + 8 * ((1692 * ((((_DWORD)v440 - 1210073429 - 2 * (((_DWORD)v440 + 16) & 0x37DFBE9F)) ^ 0xB7DFBE9B) < a55)) ^ (v414 - 380))))(v430, 793754495, 42, 2861976108, v426, 1430988054, 1587508990, v425, v443, v444, v445, v446, v448, v450, v451, v452, v455, v457, v461,
           v464,
           v467,
           v471,
           v475,
           a24,
           a25,
           v480,
           v486,
           v493,
           v499,
           v504,
           v509,
           v513,
           v518,
           v523,
           v529,
           v535,
           v541,
           v545,
           v551,
           v556,
           v562,
           v566,
           v571,
           v574,
           v578,
           v580,
           v582,
           v584,
           a49,
           v585,
           v586,
           v587);
}

void sub_1CD11A16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59,int a60)
{
  uint64_t v60;

  *(_DWORD *)(v60 - 128) = a57 ^ 0x9EAC4702;
  *(_DWORD *)(v60 - 140) = a59 ^ 0x2D1575D2;
  *(_DWORD *)(v60 - 132) = a60 ^ 0x93AB7741;
  *(_DWORD *)(v60 - 136) = a58 ^ 0x94358E1A;
  JUMPOUT(0x1CD118454);
}

uint64_t sub_1CD11A1C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a7 ^ (1816 * (v7 != a3))))
                            - ((a7 + 1721561428) & 0x99630FFE)
                            + 866))();
}

uint64_t sub_1CD11A1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v9
                                                                      + 8
                                                                      * (int)((((((a7 + 1714580835) ^ 0x66326F76) & v7) != 0)
                                                                             * ((a7 + 1714580835) & 0x99CD93EF ^ 0x362)) | (a7 + 389))))(a1, a2, a3, (v8 - a3));
}

uint64_t sub_1CD11A24C(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  char v69;
  uint64_t v70;
  int8x16x4_t v72;

  *(_DWORD *)(v65 - 128) = v56;
  *(_DWORD *)(v65 - 124) = v63;
  v66 = (a7 - 193) | 0x50;
  v67 = (v66 ^ 0xFFFFFE2D) & v56;
  v68 = -a3;
  *(_DWORD *)(v65 - 132) = v67;
  v69 = v61 + a2 + a1;
  v70 = (v68 + a2 + a1 + v62);
  v72.val[0].i64[0] = ((_BYTE)v68 + (_BYTE)a2 + (_BYTE)a1 + (_BYTE)v62) & 0xF;
  v72.val[0].i64[1] = ((_BYTE)v68 + v69 + 10) & 0xF;
  v72.val[1].i64[0] = ((_BYTE)v68 + v69 + 9) & 0xF;
  v72.val[1].i64[1] = ((_BYTE)v68 + v60 + ((((a7 + 63) | 0x50) + 70) ^ 3)) & 0xF;
  v72.val[2].i64[0] = ((_BYTE)v68 + v69 + 7) & 0xF;
  v72.val[2].i64[1] = ((_BYTE)v68 + v69 + 6) & 0xF;
  v72.val[3].i64[0] = ((_BYTE)v68 + v69 + 5) & 0xF;
  v72.val[3].i64[1] = ((_BYTE)v68 + v69 + 4) & 0xF;
  *(int8x8_t *)(v64 - 7 + v70) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v64 - 7 + v70), *(int8x8_t *)(v58 + (v70 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v59 + (v70 & 0xF) - 7), *(int8x8_t *)(v57 + (v70 & 0xF) - 7)))), (int8x8_t)0x3232323232323232), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v72, (int8x16_t)xmmword_1CDB7F0B0), (int8x8_t)0x505050505050505)));
  return (*(uint64_t (**)(__n128))(a56 + 8 * ((915 * (v68 != 8 - v67)) ^ v66)))((__n128)xmmword_1CDB7F0B0);
}

void sub_1CD11A390()
{
  JUMPOUT(0x1CD11A2B8);
}

uint64_t sub_1CD11A3B8()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(v0 ^ (63 * (*(_DWORD *)(v1 - 128) != *(_DWORD *)(v1 - 132)))))
                            - (v0 ^ 0x217)))();
}

uint64_t sub_1CD11A3F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a4 - 1802685205);
  *(_BYTE *)(v9 + v11) ^= *(_BYTE *)(v7 + (v11 & 0xF)) ^ *(_BYTE *)(v8 + (v11 & 0xF)) ^ *(_BYTE *)(v6 + (v11 & 0xF)) ^ (5 * (v11 & 0xF)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((998 * (a4 - 1 == v5)) ^ (a5 - 369))) - 12))();
}

void sub_1CD11A45C()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 2010122275)
    v1 = 1645153785;
  else
    v1 = -1645193695;
  *(_DWORD *)(v2 + 40) = v1;
}

void Mib5yocT(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v8;
  int v12;

  if (a2)
    v8 = a3 == 0;
  else
    v8 = 1;
  v12 = !v8 && a6 != 0 && a7 != 0 && a8 != 0;
  __asm { BR              X8 }
}

uint64_t sub_1CD11A55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  uint64_t v27;

  *a6 = 0;
  *a7 = 0;
  a22 = 108757529
      * ((((&a21 | 0xC8548EC6) ^ 0xFFFFFFFE) - (~&a21 | 0x37AB7139)) ^ 0xD7371312)
      + 1695027452;
  v27 = v22;
  v25 = sub_1CD125890(&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((1797 * (a21 == v24)) ^ v23)) - 4))(v25);
}

uint64_t sub_1CD11A5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,unsigned int a22,unsigned int a23,int a24)
{
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v24 = 1759421093 * ((&a21 + 2130158787 - 2 * (&a21 & 0x7EF7A4C3)) ^ 0xCD8A1497);
  a24 = v24 ^ 0x18F94B49;
  HIDWORD(a21) = v24 ^ 0x771B5177;
  a22 = v24 + 1806;
  LODWORD(a21) = v24 ^ 0x7FA6CEE2;
  sub_1CD0ED1B8((uint64_t)&a21);
  LODWORD(a11) = a23;
  a23 = 1307 - 460628867 * ((((2 * &a21) | 0x5259E7E8) - &a21 + 1456671756) ^ 0xE5BA7189);
  a21 = &STACK[0x4BD26FD1213425D9];
  sub_1CD1015E8((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a14 + 8 * ((27 * (a22 != 1645153785)) ^ 0x16Fu)) - 4))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1CD11A734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,unsigned int a24,uint64_t a25)
{
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;

  v32 = 87 * v25;
  v33 = 1178560073
      * ((-1996209345 - (&a21 | 0x8904433F) + (&a21 | 0x76FBBCC0)) ^ 0xCC6FC4A2);
  a23 = a16;
  a24 = (87 * v25 + 43) ^ v33;
  a22 = (v30 ^ 0xDBFDF3FD) + v33 + 1954504252 + ((((87 * v25 - 937) | 0x160) - 1208228218) & (2 * v30));
  sub_1CD111694((uint64_t)&a21);
  a24 = 87 * v25
      + 1224239923 * ((&a21 - 1409295590 - 2 * (&a21 & 0xABFFDB1A)) ^ 0x594C26CD)
      + 419;
  a23 = a16;
  a25 = v29;
  ((void (*)(int *))((char *)*(&off_1E89A15E0 + 87 * v25 - 926) - 12))(&a21);
  v34 = 1178560073 * (&a21 ^ 0xBA947862);
  a23 = a16;
  a24 = (v32 + 43) ^ v34;
  a22 = (v28 ^ 0x7D7D52F9) + v34 - 754974912 + ((v28 << (68 * (v32 ^ 0xB2) + 5)) & 0xFAFAA5F2);
  sub_1CD111694((uint64_t)&a21);
  a25 = v26;
  a22 = v34 + v32 + 332;
  a24 = v34 ^ ((v27 ^ 0xBFEF9D6F) + 1267826619 + ((2 * v27) & 0x7FDF3ADE));
  a23 = a16;
  v35 = ((uint64_t (*)(int *))((char *)*(&off_1E89A15E0 + (v32 ^ 0x33Du)) - 8))(&a21);
  return (*(uint64_t (**)(uint64_t))(a14 + 8 * (((a21 != v31) | ((a21 != v31) << 6)) ^ v32)))(v35);
}

uint64_t sub_1CD11A94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,uint64_t a23,int a24,unsigned int a25,int a26,int a27)
{
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;

  if (a12 + (v27 ^ 0xBEFFE260) >= 0x1F8FCFD3)
    v29 = 1010542952;
  else
    v29 = 635686783;
  v30 = 460628867 * ((&a22 - 68604818 - 2 * ((unint64_t)&a22 & 0xFBE92C6E)) ^ 0xB77FAE13);
  a26 = v29 - v30;
  a24 = v30 - 982147079;
  a25 = v30 + 2138962340 + a10;
  a22 = &STACK[0x58A7AA086245692E];
  a23 = a17;
  v31 = sub_1CD125C5C((uint64_t)&a22);
  return (*(uint64_t (**)(uint64_t))(a15
                                            + 8
                                            * ((1183 * (a27 == ((((a10 + 1611586287) & 0xF125FF) - 887) ^ (v28 - 364)))) ^ a10)))(v31);
}

uint64_t sub_1CD11AA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,unint64_t *a23,unint64_t *a24,unsigned int a25)
{
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;

  a23 = &STACK[0x72E1645BEBB64067];
  a24 = &STACK[0x1E6EF7153090E02];
  a22 = a18;
  a25 = (v27 - 905) ^ (1225351577
                     * ((((2 * &a21) | 0xE5132B40) - &a21 + 225864288) ^ 0xD1134DB6));
  v29 = v25;
  v30 = ((uint64_t (*)(char *))((char *)*(&off_1E89A15E0 + (v27 & 0xF9F055)) - 8))(&a21);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * (((((v27 + 37624584) & 0x1C1E0EF) + 490) * (v26 < v28)) ^ v27)))(v30);
}

uint64_t sub_1CD11AB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _BYTE *a18, uint64_t a19, int a20,char a21,unsigned int a22,char *a23,_BYTE *a24)
{
  char *v24;
  int v25;
  uint64_t v26;
  int v27;
  char *v28;
  void (*v29)(unsigned int *);
  int v30;
  uint64_t v31;
  int v32;

  a22 = (v27 - 914) ^ ((&a22 ^ 0x6DF41809) * v25);
  a23 = &a21 + v26;
  a24 = a18;
  v29(&a22);
  a22 = (v27 - 914) ^ (1374699841 * ((&a22 & 0x80170750 | ~(&a22 | 0x80170750)) ^ 0x121CE0A6));
  a23 = v28;
  a24 = a18;
  v29(&a22);
  a23 = v24;
  a24 = a18;
  a22 = (v27 - 914) ^ (1374699841
                     * ((&a22 - 1703598249 - 2 * (&a22 & 0x9A752757)) ^ 0xF7813F5E));
  v29(&a22);
  a23 = a18;
  a22 = (v27 - 413) ^ (1755732067
                     * ((2 * (&a22 & 0x6B25E860) - &a22 + 349837213) ^ 0xCA1CAA46));
  v31 = sub_1CD121CC8((uint64_t)&a22);
  v32 = (_DWORD)a24 == v30 + ((v27 - 109820142) & 0x68BB7FE) - 1020;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a14 + 8 * (((8 * v32) | (v32 << 9)) ^ (v27 - 1032))) - 8))(v31);
}

uint64_t sub_1CD11ACE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  uint64_t v20;
  int v21;
  int v22;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20
                                        + 8 * (int)(((a20 == v22) * (((v21 + 1980706585) & 0x89F0D3FF) + 296)) ^ v21))
                            - ((v21 - 2065801700) & 0x7B21A19F)
                            + 151))();
}

uint64_t sub_1CD11AD38@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  _BYTE *v15;
  int v16;

  *v15 = a9 ^ 0xF9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * (int)(((a14 == v16)
                                               * ((((a1 - 92) | 0xA0) ^ 0xFFFFFC63) + ((a1 + 333) | 0x210))) ^ a1))
                            - 8))();
}

uint64_t sub_1CD11AD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  int v16;
  _BOOL4 v17;

  v17 = ((uint64_t (*)(_QWORD))*(&off_1E89A15E0 + (v15 ^ 1)))(v14 ^ (v16 - 736) ^ v15 ^ 0x603u) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a14 + 8 * ((v17 * (v15 ^ 0x1E0)) ^ v15)) - 8))();
}

uint64_t sub_1CD11ADF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v20;
  uint64_t v21;
  int v22;
  unsigned int v23;

  v23 = (a20 ^ v22) - (((((v20 - 1760) | 0x9A) + 73) ^ 0xEDAA0B17) & (2 * (a20 ^ v22))) + 1993672186;
  return ((uint64_t (*)(void))(*(_QWORD *)(v21
                                        + 8
                                        * ((504
                                          * (((2 * v23) & 0xDFDBFDDA ^ 0xCD8A09D0) + (v23 ^ 0x1938FB17) - 1610946564 != 266921705)) ^ v20))
                            - 12))();
}

uint64_t sub_1CD11AE84(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = v3 + v2 - 1877868269 >= ((33 * (a2 ^ 0x8E)) ^ 0x29Cu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((2 * v5) | (v5 << 8)) ^ a2))
                            - ((a2 + 715336170) ^ 0x2AA32A80)))();
}

uint64_t sub_1CD11AEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = v5 - a1 >= (unint64_t)(25 * (a5 ^ v6 ^ (v6 + 677))) - 1193;
  return (*(uint64_t (**)(void))(v7 + 8 * (((4 * v8) | (32 * v8)) ^ a5)))();
}

uint64_t sub_1CD11AF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v10
                                                              + 8
                                                              * ((54 * (v9 >= ((v7 + (a7 ^ (v8 + 1597)) + 851) ^ 0x3CDu))) ^ a7))
                                                  - 12))(a1, 0);
}

uint64_t sub_1CD11AF74(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v13 = v11 + v10 + a6;
  v14 = v7 + v13;
  v15 = *(_OWORD *)(v14 - 31);
  v16 = a1 + v13;
  *(_OWORD *)(v16 - 15) = *(_OWORD *)(v14 - 15);
  *(_OWORD *)(v16 - 31) = v15;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((((v9 & 0xFFFFFFE0) == 32) * ((10 * (a3 ^ (v8 + 645))) ^ 0x4AB)) ^ (v6 + a3 + 481))))();
}

void sub_1CD11AFD8()
{
  JUMPOUT(0x1CD11AF88);
}

uint64_t sub_1CD11AFE4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  void (*v6)(_BYTE *);
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[4];
  unsigned int v12;
  uint64_t v13;

  *v7 = a1;
  *v8 = v2;
  v4 = ((v1 ^ 0x31F) - 325940229) & 0x136D717C;
  v12 = (v1 ^ 0x31F)
      + 535753261 * ((((2 * v11) | 0x432E8A82) - v11 + 1583921855) ^ 0xAB634B6E)
      + 9;
  v13 = v10;
  v6(v11);
  v12 = v4
      + 535753261
      * (((v11 | 0x27EC23AD) - v11 + (v11 & 0xD813DC50)) ^ 0x2D182D82)
      + 657;
  v13 = v9;
  v6(v11);
  return v3 ^ 0x620F0DF9u;
}

void sub_1CD11B2A0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BR              X14 }
}

uint64_t sub_1CD11B3F0(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = (v2 ^ (a2 + 215) ^ 0x8B0A4B63) == 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (((2 * v4) | (4 * v4)) ^ a2)))(a1, 827000779);
}

uint64_t sub_1CD11B444@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  _BOOL4 v17;

  *(_BYTE *)(a3 + (a2 - 827000779)) = *(_BYTE *)(v3 + (a2 - 827000779)) ^ *(_BYTE *)(v6 + ((a2 - 827000779) & 0xFLL)) ^ *(_BYTE *)(v5 + ((a2 - 827000779) & 0xFLL)) ^ *(_BYTE *)(v4 + ((a2 - 827000779) & 0xFLL)) ^ (97 * ((a2 + 53) & 0xF)) ^ 0x32;
  v13 = v8 - 267 + a2;
  v14 = a2 + 869111975;
  v15 = (v13 - 1292);
  v16 = (v9 > v11) ^ (v14 < v7);
  v17 = v14 < v10;
  if (v16)
    v17 = v9 > v11;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * ((83 * v17) ^ v8)) - 8))(a1, v15);
}

uint64_t sub_1CD11B4E0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((22
                                          * (((((v0 - 1518) | 0x1C8) - 654498756) ^ v1)
                                           + ((2 * v1) & 0xA7EED6BE ^ 0x60492B6) == 1408723807)) ^ v0))
                            - 8))();
}

uint64_t sub_1CD11B550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((1362
                                          * (((a5 - 71) ^ (v5 + (((a5 - 168) | 0x605) ^ 0xAC0893E4) < 8)) & 1)) ^ a5))
                            - 4))();
}

uint64_t sub_1CD11B5A8(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((((a7 - 311191283) & 0x128C66FD) - 159)
                                          * ((a2 + a3) >> 4 != 88045238)) ^ a7))
                            - 12))();
}

uint64_t sub_1CD11B5F4@<X0>(int a1@<W3>, unsigned int a2@<W4>, int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BOOL4 v20;

  v9 = a3 + a1 + 248 * (((a2 + 920) | 0x301) ^ 0x747);
  v10 = v9 + v4;
  v11 = v9 + a4;
  v12 = v10 - v11;
  v13 = a3 & 0xF;
  v14 = v13 + v7 - v11;
  v15 = (v13 | v6) - v11;
  v16 = (v13 | v5) - v11;
  v20 = v12 > 0xF && v14 > 0xF && v15 > 0xF && v16 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((86 * v20) ^ a2)) - 12))();
}

uint64_t sub_1CD11B670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                         + 8
                                                                                         * (a7 ^ (1019 * (v7 > 0xF))))
                                                                             - ((52 * (a7 ^ 0x1E1) + 1506241642) & 0xA63893F6)
                                                                             + 978))(a1, a2, a3, a4, 0);
}

uint64_t sub_1CD11B6C0@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16x4_t v17;
  int8x16x4_t v18;

  *(_DWORD *)(v9 - 116) = v7 + 2;
  *(_DWORD *)(v9 - 128) = v7 + 9;
  *(_DWORD *)(v9 - 136) = v7 + 8;
  v17.val[1].i64[0] = ((_BYTE)v7 + 1) & 0xF;
  v17.val[1].i64[1] = v7 & 0xF;
  v17.val[2].i64[0] = ((_BYTE)v7 - 1) & 0xF;
  v17.val[2].i64[1] = ((_BYTE)v7 + 14) & 0xF;
  v17.val[3].i64[0] = ((_BYTE)v7 + 13) & 0xF;
  v17.val[3].i64[1] = ((_BYTE)v7 + 12) & 0xF;
  v18.val[0].i64[0] = ((_BYTE)v7 + 11) & 0xF;
  v18.val[0].i64[1] = ((_BYTE)v7 + 10) & 0xF;
  v18.val[1].i64[0] = *(_DWORD *)(v9 - 128) & 0xF;
  v18.val[1].i64[1] = *(_DWORD *)(v9 - 136) & 0xF;
  v10 = *(_QWORD *)(v9 - 256);
  v18.val[2].i64[0] = ((_BYTE)v7 + 7) & 0xF;
  v18.val[2].i64[1] = (v7 + 6) & 0xF;
  v18.val[3].i64[0] = ((_BYTE)v7 + 5) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)v7 + 4) & 0xF;
  v11.i64[0] = 0x6161616161616161;
  v11.i64[1] = 0x6161616161616161;
  v12.i64[0] = 0x3232323232323232;
  v12.i64[1] = 0x3232323232323232;
  v17.val[0].i64[0] = ((_BYTE)v7 + (_BYTE)v6) & 0xF;
  v17.val[0].i64[1] = *(_DWORD *)(v9 - 116) & 0xF;
  v13.i64[0] = vqtbl4q_s8(v17, (int8x16_t)xmmword_1CDB7F0A0).u64[0];
  v13.i64[1] = vqtbl4q_s8(v18, (int8x16_t)xmmword_1CDB7F0A0).u64[0];
  v14 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v2 - 15 + (v7 + v6)), *(int8x16_t *)(v5 + v17.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v4 + v17.val[0].i64[0] - 15), *(int8x16_t *)(v3 + v17.val[0].i64[0] - 15))));
  v15 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v14, v14, 8uLL), v12), vmulq_s8(v13, v11)));
  *(int8x16_t *)(a2 - 15 + (v7 + v6)) = vextq_s8(v15, v15, 8uLL);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * ((1049 * ((((a1 - 884) | 0x618) ^ 0x608) == (v8 & 0xFFFFFFF0))) ^ a1))
                                          - 8))(v8);
}

uint64_t sub_1CD11B850(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * (int)(((((a8 + 1437017927) & 0xAA58D7AD) - 897) * (a1 != a5)) ^ a8))
                                          - 8))(a10);
}

uint64_t sub_1CD11B890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = ((((a8 - 1072) ^ 0x6AD) - 1853) & v9) != 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10
                                                                                                  + 8 * (((8 * v11) | (16 * v11)) ^ (a8 - 1072)))
                                                                                      - 4))(a1, a2, a3, a4, a5, (v8 - a5));
}

uint64_t sub_1CD11B8C8@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  char v13;
  unsigned int v14;
  int v15;
  char v16;
  uint64_t v17;
  int8x16x4_t v19;

  *(_DWORD *)(v12 - 152) = v11;
  v14 = ((a5 - 19) ^ 0xFFFFFC3B) & v11;
  *(_QWORD *)(v12 - 136) = v6 - 7;
  *(_QWORD *)(v12 - 144) = a6 - 7;
  v15 = -a4;
  *(_DWORD *)(v12 - 160) = v14;
  v16 = v13 + a2 + a1;
  *(_DWORD *)(v12 - 128) = a5 - 19;
  *(_DWORD *)(v12 - 116) = (a5 + 1920881190) & 0x8D81ABEB;
  v17 = (v15 + a3 + a2 + a1 + 496);
  v19.val[0].i64[0] = ((_BYTE)v15 + (_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 - 16) & 0xF;
  v19.val[0].i64[1] = ((_BYTE)v15 + v16 + 2) & 0xF;
  v19.val[1].i64[0] = ((_BYTE)v15 + v16 + 1) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)v15 + v10) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)v15 + v16 + 15) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v15 + v16 + 14) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v15 + v16 + 13) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)v15 + v10 + *(_DWORD *)(v12 - 116) + 4) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v12 - 144) + v17) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(_QWORD *)(v12 - 136) + v17), *(int8x8_t *)(v9 + (v17 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v8 + (v17 & 0xF) - 7), *(int8x8_t *)(v7 + (v17 & 0xF) - 7)))), (int8x8_t)0x3232323232323232), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v19, (int8x16_t)xmmword_1CDB7F0B0), (int8x8_t)0x6161616161616161)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(*(_QWORD *)(v12 - 256)
                                                     + 8 * ((21 * (v15 != 8 - v14)) ^ *(_DWORD *)(v12 - 128)))
                                         - 4))((__n128)xmmword_1CDB7F0B0);
}

void sub_1CD11BA3C()
{
  JUMPOUT(0x1CD11B954);
}

uint64_t sub_1CD11BA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * (int)((((*(_DWORD *)(v11 - 116) + 1285438991) & 0xB361C74D ^ 0x305)
                                                             * (*(_DWORD *)(v11 - 152) == *(_DWORD *)(v11 - 160))) ^ *(_DWORD *)(v11 - 116)))
                                          - ((*(_DWORD *)(v11 - 116) + 536) | 0x10Du)
                                          + 1289))(a10);
}

uint64_t sub_1CD11BABC@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = (a1 + v7);
  *(_BYTE *)(a2 + v10) = *(_BYTE *)(v2 + v10) ^ *(_BYTE *)(v5 + (v10 & 0xF)) ^ *(_BYTE *)(v4 + (v10 & 0xF)) ^ *(_BYTE *)(v3 + (v10 & 0xF)) ^ (97 * (v10 & 0xF)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1933 * (a1 + 431 * (v8 ^ 0x746) - 1294 == v6)) ^ (v8 - 1596)))
                            - 12))();
}

uint64_t sub_1CD11BB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v40;

  v38 = *(_QWORD *)(a1 + 24);
  *(int8x16_t *)(v37 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(a1 + 40) - 0x3EAB24E7EEDAADCALL), (int8x16_t)xmmword_1CDB7F0D0);
  if (a9)
    v39 = v38 == 0x39E8CCF6252BBBF8;
  else
    v39 = 1;
  v40 = !v39;
  HIDWORD(a12) = v35 << ((a7 - 14) & 0xDF ^ (a7 - 47));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * (int)((158 * v40) ^ a7)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1CD11BBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  int v35;
  uint64_t v36;
  unsigned int v37;
  _BOOL4 v39;

  v37 = (HIDWORD(a11) & 0xFEECEEFE) + (v34 ^ 0xFF76777F);
  v39 = (((_BYTE)v37 + 1) & 0xF) != 0 || v37 == -9013377;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (((((v35 ^ 0xAB) - 410) ^ 0x3E6) * v39) ^ v35)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1CD11BC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  uint64_t v45;
  unsigned int v46;

  v46 = a10 - (((a45 + 1991023091) & 0x895367DD ^ 0x97F0829) & a13) + 630243607;
  return ((uint64_t (*)(void))(*(_QWORD *)(v45
                                        + 8
                                        * ((251
                                          * (((2 * v46) & 0xB6FEE7BE ^ 0x7E072C) + (v46 ^ 0x5FC0F469) + 753659424 == 141255167)) ^ a45))
                            - 4))();
}

uint64_t sub_1CD11BCFC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((104 * (v2 + v1 + 612404257 >= ((v0 + 465) ^ 0x74Du))) ^ (v0 - 966)))
                            - 12))();
}

uint64_t sub_1CD11BD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * (int)((1278
                                                                                        * ((((a3 ^ 0x6EB)
                                                                                           - 1877) & a6) == -612404256)) ^ a3))
                                                                     - 12))(a1, a2, a3, a2);
}

uint64_t sub_1CD11BDA8@<X0>(int a1@<W0>, int a2@<W2>, unint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v23;

  v9 = (v7 + v6 + a1);
  v10 = v9 + a3 + 1;
  v11 = (v7 + v6) & 0xF;
  v12 = v11 - v9;
  v13 = v4 + v12;
  v14 = v11 + v4 + 1;
  v15 = v3 + (((a2 ^ 0x28Bu) + 1056) ^ 0x747) + v12;
  v16 = v11 + v3 + 3;
  v17 = v12 + v5 + 4;
  v18 = v11 + v5 + 5;
  v20 = v14 > a3 && v13 < v10;
  if (v16 > a3 && v15 < v10)
    v20 = 1;
  v23 = v18 > a3 && v17 < v10 || v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((2006 * (v23 ^ 1)) ^ a2)) - 12))();
}

uint64_t sub_1CD11BE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                       + 8
                                                                       * ((252
                                                                         * (((a6 + 82) ^ (v6 < (((a6 - 795) | 0x180) ^ 0x19Au))) & 1)) ^ a6))
                                                           - 12))(a1, a2, 0);
}

uint64_t sub_1CD11BE84@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16x4_t v17;
  int8x16x4_t v18;

  *(_DWORD *)(v10 - 116) = a2 + 9;
  v17.val[1].i64[0] = ((_BYTE)a2 + 14) & 0xF;
  v17.val[1].i64[1] = ((_BYTE)a2 + 13) & 0xF;
  v17.val[2].i64[0] = ((_BYTE)a2 + 12) & 0xF;
  v17.val[2].i64[1] = ((_BYTE)a2 + 11) & 0xF;
  v11 = *(_QWORD *)(v10 - 256);
  v12 = v9 + v8 + a1;
  v17.val[3].i64[0] = ((_BYTE)a2 + 10) & 0xF;
  v17.val[3].i64[1] = *(_DWORD *)(v10 - 116) & 0xF;
  v18.val[0].i64[0] = ((_BYTE)a2 + 8) & 0xF;
  v18.val[0].i64[1] = ((_BYTE)a2 + 7) & 0xF;
  v18.val[1].i64[0] = ((_BYTE)a2 + 6) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)a2 + 5) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)a2 + 4) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)a2 + 3) & 0xF;
  v18.val[3].i64[0] = (a2 + 2) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)a2 + 1) & 0xF;
  v13.i64[0] = 0x7777777777777777;
  v13.i64[1] = 0x7777777777777777;
  v17.val[0].i64[0] = v12 & 0xF;
  v17.val[0].i64[1] = ((_BYTE)a2 - 1) & 0xF;
  v14.i64[0] = vqtbl4q_s8(v17, (int8x16_t)xmmword_1CDB7F0A0).u64[0];
  v14.i64[1] = vqtbl4q_s8(v18, (int8x16_t)xmmword_1CDB7F0A0).u64[0];
  v15 = vrev64q_s8(vmulq_s8(v14, v13));
  *(int8x16_t *)(a4 - 15 + v12) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + v17.val[0].i64[0] - 15), *(int8x16_t *)(a4 - 15 + v12)), *(int8x16_t *)(v17.val[0].i64[0] + v4 - 13)), *(int8x16_t *)(v6 + v17.val[0].i64[0] + ((4 * a3) ^ 0x62CLL) - 15)), vextq_s8(v15, v15, 8uLL));
  return (*(uint64_t (**)(void))(v11 + 8 * ((1988 * ((v7 & 0xFFFFFFF0) == 16)) ^ a3)))();
}

void sub_1CD11BFEC()
{
  JUMPOUT(0x1CD11BF74);
}

uint64_t sub_1CD11BFF8@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  int v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  char v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int v37;
  int v38;
  char *v39;
  char *v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  uint64_t v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  char *v97;
  uint64_t v98;
  char *v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  uint64_t v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  int v186;
  unsigned int v187;
  char *v188;
  char *v189;
  char *v190;
  int v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  int v226;
  unsigned int v227;
  int v228;
  int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;

  v11 = *(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF7);
  v12 = (v8 + 806) | 0x45;
  *(_DWORD *)(v10 - 116) = v12;
  v13 = (uint64_t)*(&off_1E89A15E0 + v8 - 862);
  v14 = *(unsigned __int8 *)(v13 + (v11 ^ 0x85));
  HIDWORD(v15) = v14 ^ 0x1A;
  LODWORD(v15) = ((v12 + 59) ^ v14) << 24;
  v16 = (v15 >> 30) ^ 0x9F;
  v17 = (char *)*(&off_1E89A15E0 + v8 - 980) - 12;
  v18 = v17[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEDLL) ^ 0xBFLL];
  HIDWORD(v15) = v18 ^ 0xC;
  LODWORD(v15) = (v18 ^ 0xC0) << 24;
  LOBYTE(v18) = v15 >> 28;
  v19 = v16 << 16;
  v20 = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF3) ^ 0x6FLL));
  HIDWORD(v15) = v20 ^ 0x1A;
  LODWORD(v15) = (v20 ^ 0x80) << 24;
  v21 = ((v15 >> 30) ^ 0x68) << 16;
  v22 = (uint64_t)*(&off_1E89A15E0 + v8 - 773);
  v23 = (char *)*(&off_1E89A15E0 + v8 - 857) - 4;
  v24 = v23[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBECLL) ^ 0xD8];
  v25 = v17[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBE9) ^ 0xBCLL];
  HIDWORD(v15) = v25 ^ 0xC;
  LODWORD(v15) = (v25 ^ 0xC0) << 24;
  LOBYTE(v25) = v15 >> 28;
  v26 = v21 | ((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF2) ^ 0xDFLL)) ^ 0xC0) << 8) | ((v23[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF4) ^ 0xAFLL] ^ 0x6D) << 24);
  v27 = v17[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF1) ^ 0x98];
  HIDWORD(v15) = v27 ^ 0xC;
  LODWORD(v15) = (v27 ^ 0xC0) << 24;
  v28 = v26 & 0xFFFFFF00 | (v15 >> 28);
  LODWORD(v17) = v17[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF5) ^ 0xD0];
  HIDWORD(v15) = v17 ^ 0xC;
  LODWORD(v15) = (v17 ^ 0xC0) << 24;
  LOBYTE(v17) = v15 >> 28;
  v29 = v19 | ((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF6) ^ 0x49)) ^ 0x4A) << 8) | ((v23[*v9 ^ 0xFELL] ^ 0xB4) << 24);
  v30 = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEBLL) ^ 0xB6));
  HIDWORD(v15) = v30 ^ 0x1A;
  LODWORD(v15) = (v30 ^ 0x80) << 24;
  v31 = (v15 >> 30) ^ 0x21;
  LODWORD(v13) = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEFLL) ^ 0xC8));
  HIDWORD(v15) = v13 ^ 0x1A;
  LODWORD(v15) = (v13 ^ 0x80) << 24;
  v32 = (((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEALL) ^ 0xC7)) ^ 1) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v24 ^ 0xBDu) << 24) | (v31 << 16) | v25 ^ 0x68) ^ 0x75F49EF4;
  v33 = v18 | ((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEELL) ^ 0xB7)) ^ 0xE1) << 8) & 0xFF00FFFF | (((v15 >> 30) ^ 0x37) << 16) | ((v23[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF0) ^ 0x18] ^ 0xF2) << 24);
  v34 = ((unsigned __int16)((((*(unsigned __int8 *)(v22
                                                                   + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEALL) ^ 0xC7)) ^ 1) << 8) | v25 ^ 0x68) ^ 0x9EF4) >> 8);
  v35 = (char *)*(&off_1E89A15E0 + (v8 ^ 0x384)) - 4;
  LODWORD(v23) = (v34 - ((2 * (v32 >> 8)) & 0x12E) - 630217321) ^ *(_DWORD *)&v35[4 * (v34 ^ 0xF5)];
  v36 = (uint64_t)*(&off_1E89A15E0 + (v8 ^ 0x34F));
  v37 = *(_DWORD *)(v36 + 4 * (v24 ^ 0xA2u));
  HIDWORD(v15) = ~v37;
  LODWORD(v15) = v37 ^ 0xAF8BCD8;
  v38 = v31 ^ 0xDD;
  v39 = (char *)*(&off_1E89A15E0 + v8 - 811) - 8;
  LODWORD(v23) = (v15 >> 2) ^ *(_DWORD *)&v39[4 * v38] ^ ((_DWORD)v23 - ((2 * (_DWORD)v23) & 0xA555BF4) - 2060800518);
  v40 = (char *)*(&off_1E89A15E0 + (v8 ^ 0x319)) - 4;
  v237 = v29 & 0xFFFFFF00 | v17 ^ 0x3C;
  v41 = *(_DWORD *)&v40[4 * (v25 ^ 0xD9)] ^ v237 ^ ((_DWORD)v23
                                                                   - ((2 * (_DWORD)v23) & 0xA2BAA0D4)
                                                                   - 782413718);
  v238 = v28;
  v235 = v33;
  v233 = v41 ^ v28 ^ 0x2789BBD4;
  v42 = v33 ^ 0xE6 ^ v233;
  LODWORD(v17) = *(_DWORD *)(v36 + 4 * (((v42 ^ v32) >> 24) ^ 0x21));
  HIDWORD(v15) = ~(_DWORD)v17;
  LODWORD(v15) = v17 ^ 0xAF8BCD8;
  LODWORD(v17) = ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA2BAA0D4) - 782413718) ^ *(_DWORD *)&v40[4
                                                                                            * ((v42 ^ v32) ^ 0xDE)];
  v231 = v42 ^ v32;
  v234 = v41;
  v230 = *(_DWORD *)&v35[4 * (((unsigned __int16)(v42 ^ v32) >> 8) ^ 0x1E)] ^ *(_DWORD *)&v39[4 * (((v42 ^ v32) >> 16) ^ 0x8F)] ^ v41 ^ ((((unsigned __int16)(v42 ^ v32) >> 8) ^ 0xEB) - 630217321 + (~(2 * (((v42 ^ v32) >> 8) ^ 0x4BA6EB)) | 0xFFFFFED1) + 1) ^ ((_DWORD)v17 - ((2 * (_DWORD)v17) & 0xA555BF4) - 2060800518);
  v43 = v230 ^ 0x76E748E2 ^ v41 ^ v28;
  v236 = v32;
  v44 = *(_DWORD *)(v36 + 4 * (((v43 ^ v32) >> 24) ^ 0xA2));
  HIDWORD(v15) = ~v44;
  LODWORD(v15) = v44 ^ 0xAF8BCD8;
  v45 = v43 ^ v32 ^ 0xC84590C6;
  v46 = *(_DWORD *)&v35[4 * (BYTE1(v45) ^ 0xF5)] ^ *(_DWORD *)&v39[4
                                                                 * (((v43 ^ v32) >> 16) ^ 0x6C)] ^ (BYTE1(v45) - ((v45 >> 7) & 0x12E) - 630217321) ^ ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA555BF4) - 2060800518);
  v228 = v43 ^ v32;
  v229 = v43;
  v227 = v230 ^ 0x76E748E2 ^ *(_DWORD *)&v40[4 * ((v43 ^ v32) ^ 0x83)] ^ (v46
                                                                                         - ((2 * v46) & 0xA2BAA0D4)
                                                                                         - 782413718);
  v226 = v227 ^ 0x2789BBD4 ^ v43;
  v232 = v42;
  HIDWORD(v225) = v43 ^ v42;
  v47 = v226 ^ 0x8EDEEA78 ^ v43 ^ v42;
  v48 = *(_DWORD *)(v36 + 4 * (((v47 ^ v45) >> 24) ^ 0x67));
  HIDWORD(v15) = ~v48;
  LODWORD(v15) = v48 ^ 0xAF8BCD8;
  v49 = (v15 >> 2) ^ *(_DWORD *)&v35[4 * (((unsigned __int16)(v47 ^ v45) >> 8) ^ 0x97)] ^ ((((unsigned __int16)(v47 ^ v45) >> 8) ^ 0x62) - ((2 * (((v47 ^ v45) >> 8) ^ 0xD8B62)) & 0x12E) - 630217321);
  v50 = (v49 - ((2 * v49) & 0xA2BAA0D4) - 782413718) ^ *(_DWORD *)&v40[4 * ((v47 ^ v45) ^ 0xE1)];
  v51 = v227 ^ 0x2789BBD4 ^ *(_DWORD *)&v39[4 * (((v47 ^ v45 ^ 0x2142BA5) >> 16) ^ 0xB6)] ^ (v50 - ((2 * v50) & 0xA555BF4) - 2060800518);
  HIDWORD(v224) = v47 ^ v45;
  LODWORD(v225) = v47;
  HIDWORD(v223) = v51 ^ v226 ^ 0x8EDEEA78;
  LODWORD(v223) = HIDWORD(v223) ^ 0x307C325C ^ v47 ^ 0x5EF1BA37;
  LODWORD(v23) = *(_DWORD *)(v36 + 4 * (((v223 ^ v47 ^ v45) >> 24) ^ 0xA4));
  HIDWORD(v15) = ~(_DWORD)v23;
  LODWORD(v15) = v23 ^ 0xAF8BCD8;
  LODWORD(v23) = ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA2BAA0D4) - 782413718) ^ *(_DWORD *)&v40[4
                                                                                            * ((v223 ^ v47 ^ v45) ^ 0x18)];
  v52 = v223 ^ v47 ^ v45 ^ 0xCEE37B5D;
  HIDWORD(v222) = v223 ^ v47 ^ v45;
  LODWORD(v224) = v51;
  v53 = *(_DWORD *)&v39[4 * (BYTE6(v222) ^ 0xCA)] ^ *(_DWORD *)&v35[4 * (BYTE1(v52) ^ 0xF5)] ^ v51 ^ (BYTE1(v52) - ((v52 >> 7) & 0x12E) - 630217321) ^ 0xD4F2AD1A ^ ((_DWORD)v23 - ((2 * (_DWORD)v23) & 0xA555BF4) - 2060800518);
  v54 = v53 ^ ((v47 ^ 0x5EF1BA37) - ((2 * (v47 ^ 0x5EF1BA37)) & 0xA9E55A34) - 722293478);
  LODWORD(v17) = *(_DWORD *)(v36 + 4 * (((v54 ^ v52) >> 24) ^ 0x70));
  HIDWORD(v15) = ~(_DWORD)v17;
  LODWORD(v15) = v17 ^ 0xAF8BCD8;
  LODWORD(v17) = ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA555BF4) - 2060800518) ^ *(_DWORD *)&v39[4
                                                                                            * (((v54 ^ v52 ^ 0xF3443494) >> 16) ^ 0xE4)];
  LODWORD(v17) = ((_DWORD)v17 - 782413718 + (~(2 * (_DWORD)v17) | 0x5D455F2B) + 1) ^ *(_DWORD *)&v40[4 * ((v53 ^ ((v47 ^ 0x37) - ((2 * (v47 ^ 0x37)) & 0x34) + 26) ^ v52) ^ 0x91)];
  LODWORD(v221) = v54 ^ v52;
  v55 = v54 ^ v52 ^ 0x1A89BBD4;
  LODWORD(v17) = ((_DWORD)v17 - ((2 * (_DWORD)v17) & 0xB4DF4B2E) - 630217321) ^ *(_DWORD *)&v35[4 * (BYTE1(v55) ^ 0xF5)];
  v56 = v7;
  v57 = v53 ^ BYTE1(v55) ^ ((_DWORD)v17 - ((2 * (_DWORD)v17) & 0xA9E55A34) - 722293478);
  HIDWORD(v221) = v54;
  LODWORD(v222) = v53;
  LODWORD(v220) = v53 ^ ((HIDWORD(v223) ^ 0x307C325C) - ((2 * (HIDWORD(v223) ^ 0x307C325C)) & 0xA9E55A34) - 722293478);
  HIDWORD(v219) = v57 ^ v220;
  LODWORD(v17) = v57 ^ v220 ^ 0xE6F58988;
  v58 = v17 ^ v54;
  v59 = v17 ^ v54 ^ v55;
  v60 = *(_DWORD *)(v36 + 4 * (HIBYTE(v59) ^ 0x43));
  HIDWORD(v15) = ~v60;
  LODWORD(v15) = v60 ^ 0xAF8BCD8;
  v61 = *(_DWORD *)&v35[4 * (((unsigned __int16)(v59 ^ 0x7ABE) >> 8) ^ 0xF5)] ^ *(_DWORD *)&v39[4 * (((v59 ^ 0x4D501F31) >> 16) ^ 0xE2)] ^ (((unsigned __int16)(v59 ^ 0x7ABE) >> 8) - (((v59 ^ 0x299B7ABE) >> 7) & 0x12E) - 630217321) ^ ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA555BF4) - 2060800518);
  HIDWORD(v220) = v57;
  v62 = v57 ^ *(_DWORD *)&v40[4 * (v59 ^ 0xFB)] ^ (v61 - ((2 * v61) & 0xA2BAA0D4) - 782413718);
  HIDWORD(v217) = v62 ^ v17;
  LODWORD(v17) = v62 ^ v17 ^ 0x5BF36347;
  LODWORD(v219) = v58;
  LODWORD(v217) = v17 ^ v58;
  LODWORD(v23) = v17 ^ v58 ^ 0x2745D0FF;
  v63 = v23 ^ v59 ^ 0x299B7ABE ^ 0x3DCC6B2B;
  v64 = (BYTE1(v63) - ((v63 >> 7) & 0x12E) - 630217321) ^ *(_DWORD *)&v35[4 * (BYTE1(v63) ^ 0xF5)];
  v65 = (v64 - ((2 * v64) & 0xA2BAA0D4) - 782413718) ^ *(_DWORD *)&v40[4
                                                                     * ((~(v17 ^ v58) ^ v59 ^ 0xBE) ^ 0x6E)];
  HIDWORD(v216) = v23 ^ v59 ^ 0x299B7ABE;
  v66 = *(_DWORD *)(v36 + 4 * (HIBYTE(HIDWORD(v216)) ^ 0x57u));
  HIDWORD(v15) = ~v66;
  LODWORD(v15) = v66 ^ 0xAF8BCD8;
  v218 = __PAIR64__(v59, v62);
  LODWORD(v216) = (v15 >> 2) ^ *(_DWORD *)&v39[4 * (((HIDWORD(v216) ^ 0x516EF336u) >> 16) ^ 0x8B)] ^ v62 ^ (v65 - ((2 * v65) & 0xA555BF4) - 2060800518);
  HIDWORD(v215) = v216 ^ 0x930000ED ^ v17;
  LODWORD(v215) = HIDWORD(v215) ^ 0x8D06EA22 ^ v23;
  v67 = *(_DWORD *)(v36 + 4 * (((v215 ^ v63) >> 24) ^ 0x39));
  HIDWORD(v15) = ~v67;
  LODWORD(v15) = v67 ^ 0xAF8BCD8;
  HIDWORD(v214) = v215 ^ v63;
  LODWORD(v32) = v215 ^ v63 ^ 0x53DEAA41;
  v68 = *(_DWORD *)&v40[4 * ((v215 ^ v63) ^ 4)] ^ *(_DWORD *)&v35[4 * (BYTE1(v32) ^ 0xF5)] ^ 0xB32F5FD ^ (v15 >> 2);
  v69 = *(_DWORD *)&v39[4 * (((v215 ^ v63 ^ 0x9289BB39) >> 16) ^ 0x7E)] ^ v216 ^ 0x930000ED ^ BYTE1(v32) ^ 0xE1715EEC ^ (v68 - ((2 * v68) & 0xA555BF4) - 2060800518);
  v70 = (HIDWORD(v215) ^ 0x8D06EA22) - ((2 * (HIDWORD(v215) ^ 0x8D06EA22)) & 0xC2E2BDD8);
  LODWORD(v23) = v69 ^ ((_DWORD)v23 - ((2 * (_DWORD)v23) & 0xC2E2BDD8) - 512663828);
  LODWORD(v36) = *(_DWORD *)(v36 + 4 * (((v23 ^ v32) >> 24) ^ 0x44));
  HIDWORD(v15) = ~(_DWORD)v36;
  LODWORD(v15) = v36 ^ 0xAF8BCD8;
  v71 = *(_DWORD *)&v35[4
                      * (((unsigned __int16)((unsigned __int16)v23 ^ WORD2(v214) ^ 0xAA41) >> 8) ^ 0xFD)] ^ *(_DWORD *)&v40[4 * (v23 ^ BYTE4(v214) ^ 0x41 ^ 0xC4)] ^ ((((unsigned __int16)((unsigned __int16)v23 ^ WORD2(v214) ^ 0xAA41) >> 8) ^ 8) - (((v23 ^ v32) >> 7) & 0x12E) - 630217321) ^ ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA2BAA0D4) - 782413718);
  HIDWORD(v213) = v23 ^ v32 ^ 0xF2402859;
  LODWORD(v17) = (v71 - ((2 * v71) & 0xA555BF4) - 2060800518) ^ *(_DWORD *)&v39[4
                                                                              * (((v23 ^ v32) >> 16) ^ 0x16)];
  LODWORD(v34) = (_DWORD)v17 - ((2 * (_DWORD)v17) & 0xC2E2BDD8);
  v72 = (uint64_t)*(&off_1E89A15E0 + (v8 ^ 0x3BC));
  v73 = (char *)*(&off_1E89A15E0 + v8 - 920) - 4;
  v74 = (uint64_t)*(&off_1E89A15E0 + v8 - 864);
  v75 = *(unsigned __int8 *)(v74 + (*(unsigned __int8 *)(v10 - 109) ^ 0xA5));
  HIDWORD(v15) = v75 ^ 7;
  LODWORD(v15) = v75 << 24;
  v76 = (uint64_t)*(&off_1E89A15E0 + (v8 ^ 0x3BE));
  v210 = v74;
  v212 = v72;
  v77 = (*(unsigned __int8 *)(v74 + (*(unsigned __int8 *)(v10 - 105) ^ 0x28)) ^ 0xD) & 0xFFFF00FF | ((((*(_BYTE *)(v10 - 106) ^ 0xAC) + *(_BYTE *)(v72 + (*(unsigned __int8 *)(v10 - 106) ^ 0xA3)) + 87) ^ 0xF6) << 8) | ((*(unsigned __int8 *)(v76 + (*(unsigned __int8 *)(v10 - 108) ^ 0xB2)) ^ 0x2E) << 24);
  v209 = v76;
  LODWORD(v17) = (*(unsigned __int8 *)(v74 + (*(unsigned __int8 *)(v10 - 97) ^ 0x7BLL)) ^ 0x78) & 0xFFFF00FF | ((((*(_BYTE *)(v10 - 98) ^ 0xD0) + *(_BYTE *)(v72 + (*(unsigned __int8 *)(v10 - 98) ^ 0xDFLL)) + 87) ^ 0xE4) << 8) | ((v73[*(unsigned __int8 *)(v10 - 99) ^ 0xAALL] ^ 0xE2) << 16) | ((*(unsigned __int8 *)(v76 + (*(unsigned __int8 *)(v10 - 100) ^ 0x45)) ^ 0x16) << 24);
  v211 = v73;
  v78 = (((((v15 >> 30) ^ 0xDB) >> 2) | (((v15 >> 30) ^ 0xDB) << 6)) | ((v73[*(unsigned __int8 *)(v10 - 111) ^ 0x7ALL] ^ 0x81) << 16) | ((*(unsigned __int8 *)(v76 + (*(unsigned __int8 *)(v10 - 112) ^ 0x78)) ^ 0x2C) << 24) | (((*(_BYTE *)(v72 + (*(unsigned __int8 *)(v10 - 110) ^ 0x5DLL)) + (*(_BYTE *)(v10 - 110) ^ 0x52) + 87) ^ 0x5D) << 8)) ^ 0xAE30F304;
  LODWORD(v72) = ((*(unsigned __int8 *)(v74 + (*(unsigned __int8 *)(v10 - 101) ^ 0x60)) ^ 0xCC) & 0xFFFF00FF | ((v73[*(unsigned __int8 *)(v10 - 103) ^ 5] ^ 0xD0) << 16) | (((*(_BYTE *)(v72 + (*(unsigned __int8 *)(v10 - 102) ^ 4)) + (*(_BYTE *)(v10 - 102) ^ 0xB) + 87) ^ 0x33) << 8) | ((*(unsigned __int8 *)(v76 + (*(unsigned __int8 *)(v10 - 104) ^ 0x1CLL)) ^ 0xD9) << 24)) ^ 0xF27FA7C8;
  v79 = (v77 | ((v73[*(unsigned __int8 *)(v10 - 107) ^ 0x27] ^ 0xB4) << 16)) ^ 0xF6784D9;
  LODWORD(v40) = v17 ^ 0x8663AEDE;
  LODWORD(v208) = v56 + 9013377;
  v80 = *(_DWORD *)(v10 - 116);
  HIDWORD(v207) = v80 & 0xBC56885E;
  LODWORD(v207) = v80 ^ 0x754;
  HIDWORD(v206) = v69 ^ (v70 - 512663828);
  LODWORD(v214) = v69;
  LODWORD(v206) = (v34 - 512663828) ^ v69;
  HIDWORD(v205) = v80 ^ 0x711;
  LODWORD(v205) = v80 ^ 0x7F2;
  LODWORD(v213) = v23 ^ 0x626A2240;
  HIDWORD(v208) = (v70 - 512663828) ^ 0x3DC8BA5D ^ (v34 - 512663828);
  HIDWORD(a6) = HIDWORD(v208) ^ v23 ^ 0x626A2240;
  *(_QWORD *)(v10 - 200) = 7;
  v81 = a1[7];
  *(_QWORD *)(v10 - 152) = 12;
  LODWORD(v17) = *(unsigned __int8 *)(v74 + (v81 ^ 0x41));
  v82 = a1[12] ^ 0x60;
  v83 = ((v80 - 1525) | 0x424) ^ 0x57Cu;
  *(_QWORD *)(v10 - 144) = v83;
  *(_QWORD *)(v10 - 128) = 1;
  v84 = *(unsigned __int8 *)(v209 + v82) ^ 0xAD;
  v85 = *(unsigned __int8 *)(v209 + (a1[v83] ^ 0xC1)) ^ 0x19;
  LODWORD(v82) = v73[a1[1] ^ 0x66] ^ 0x6D;
  *(_QWORD *)(v10 - 136) = 15;
  LODWORD(v35) = (_DWORD)v82 << 16;
  v86 = a1[15] ^ 0xE9;
  *(_QWORD *)(v10 - 160) = 11;
  LODWORD(v86) = *(unsigned __int8 *)(v74 + v86) ^ 0xDA;
  LODWORD(v73) = v86 | (v84 << 24);
  v87 = *(unsigned __int8 *)(v74 + (a1[11] ^ 0xC3));
  *(_QWORD *)(v10 - 176) = 0;
  v88 = v35 | ((*(unsigned __int8 *)(v209 + (*a1 ^ 0x30)) ^ 0x9D) << 24);
  LOBYTE(v35) = v87 ^ 0x10;
  *(_QWORD *)(v10 - 168) = 2;
  v89 = v88 & 0xFFFF00FF | (((*(_BYTE *)(v212 + (a1[2] ^ 0xC0)) + (a1[2] ^ 0xCF) + 87) ^ 0xF9) << 8);
  *(_QWORD *)(v10 - 232) = 4;
  *(_QWORD *)(v10 - 216) = 9;
  v90 = v211[a1[9] ^ 0x5DLL] ^ 0xBE;
  *(_QWORD *)(v10 - 192) = 10;
  v91 = (v90 << 16) | (((*(_BYTE *)(v212 + (a1[10] ^ 0xD5)) + (a1[10] ^ 0xDA) + 87) ^ 0xCF) << 8) | v87 ^ 0x10 | (v85 << 24);
  *(_QWORD *)(v10 - 184) = 14;
  v92 = a1[14];
  LOBYTE(v85) = *(_BYTE *)(v212 + (v92 ^ 0xE4));
  *(_QWORD *)(v10 - 224) = 5;
  LODWORD(v74) = (v85 + (v92 ^ 0xEB) - 41);
  *(_QWORD *)(v10 - 208) = 3;
  LODWORD(v92) = *(unsigned __int8 *)(v210 + (a1[3] ^ 0xDCLL)) ^ 0xCE | v89;
  *(_QWORD *)(v10 - 240) = 13;
  LODWORD(v17) = v17 ^ 0xA;
  v93 = v17 | ((*(unsigned __int8 *)(v209 + (a1[4] ^ 0xFCLL)) ^ 0x23) << 24);
  LODWORD(v73) = ((_DWORD)v74 << 8) | ((v211[a1[13] ^ 0x92] ^ 0x83) << 16) | v73;
  LODWORD(v74) = (v211[a1[5] ^ 0xA9] ^ 0x50) << 16;
  *(_QWORD *)(v10 - 248) = 6;
  v94 = v91 + 1271275121 - 2 * (v91 & 0x4BC61E75 ^ v35 & 4);
  LODWORD(v35) = v78 ^ v237 ^ (v92 - ((2 * v92) & 0x2F12947A) + 394873405);
  v95 = v79 ^ v238 ^ ((v74 & 0xFFFF00FF | (((*(_BYTE *)(v212 + (a1[6] ^ 0x4FLL)) + (a1[6] ^ 0x40) + 87) ^ 0xB7) << 8) | v93)
                    - 2
                    * ((v74 & 0x36DE0070 | (((*(_BYTE *)(v212 + (a1[6] ^ 0x4FLL)) + (a1[6] ^ 0x40) + 87) ^ 0xB7) << 8) & 0x3D70 | v93 & 0x36DE3D70) ^ v17 & 0x10)
                    - 1226949280);
  LODWORD(v17) = v40 ^ v236 ^ ((_DWORD)v73 + 1071257447 - 2
                                                                      * (v73 & 0x3FDA1777 ^ v86 & 0x10));
  v96 = v72 ^ v235 ^ v94;
  v97 = (char *)*(&off_1E89A15E0 + (v80 ^ 0x754)) - 8;
  LODWORD(v72) = *(_DWORD *)&v97[4 * (HIBYTE(v96) ^ 0x3F)];
  HIDWORD(v15) = ~(_DWORD)v72;
  LODWORD(v15) = v72 ^ 0x1DE9534E;
  v98 = (uint64_t)*(&off_1E89A15E0 + v80 - 1765);
  LODWORD(v74) = (v15 >> 1) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v17) ^ 0x34u)) ^ ((BYTE2(v17) ^ 0x68)
                                                                             - 114727250
                                                                             - 2
                                                                             * (((v17 >> 16) ^ 0xB768) & 0xBE ^ (v17 >> 16) & 0x10));
  v99 = (char *)*(&off_1E89A15E0 + (int)(v80 & 0xBC56885E)) - 4;
  v100 = *(_DWORD *)&v99[4 * (v96 ^ 0xC6)] ^ ((BYTE2(v35) ^ 0xD5)
                                                             - 114727250
                                                             - ((2 * ((v35 >> 16) ^ 0x6CD5)) & 0x15C)) ^ ((v96 ^ 0xAB) + 1069380434 + ((2 * (v96 ^ 0xAB) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v35) ^ 0x89u));
  v101 = *(_DWORD *)(v98 + 4 * (BYTE2(v95) ^ 0x8Cu)) ^ *(_DWORD *)&v99[4 * (v17 ^ 0xB6)] ^ ((v17 ^ 0xDB) + 1069380434 + ((2 * (v17 ^ 0xDB) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ ((BYTE2(v95) ^ 0xD0) - 114727250 - ((2 * (HIWORD(v95) ^ 0xC8D0)) & 0x15C));
  v102 = *(_DWORD *)&v97[4 * (HIBYTE(v95) ^ 0xC8)];
  HIDWORD(v15) = ~v102;
  LODWORD(v15) = v102 ^ 0x1DE9534E;
  LODWORD(v92) = v101 + 1312414243 - ((2 * v101) & 0x9C73B446);
  v103 = v100 + 1312414243 - ((2 * v100) & 0x9C73B446);
  LODWORD(v73) = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0x6C)];
  LODWORD(v86) = ((BYTE2(v96) ^ 0xAD) - 114727250 - ((2 * (HIWORD(v96) ^ 0x3FAD)) & 0x15C)) ^ *(_DWORD *)&v99[4 * (v35 ^ 0x1C)] ^ ((v35 ^ 0x71) + 1069380434 + ((2 * (v35 ^ 0x71) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v96) ^ 0xF1u)) ^ (v15 >> 1);
  HIDWORD(v15) = ~(_DWORD)v73;
  LODWORD(v15) = v73 ^ 0x1DE9534E;
  LODWORD(v73) = v15 >> 1;
  v104 = *(_DWORD *)&v97[4 * ((v17 >> 24) ^ 0xB7)];
  HIDWORD(v15) = ~v104;
  LODWORD(v15) = v104 ^ 0x1DE9534E;
  v105 = (uint64_t)*(&off_1E89A15E0 + v80 - 1760);
  v106 = (v95 ^ 0x10) + 1069380434 + ((2 * (v95 ^ 0x10) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  LODWORD(v74) = *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0xDEu)) ^ v232 ^ *(_DWORD *)&v99[4
                                                                                       * (v95 ^ 0x7D)] ^ (v74 + 1312414243 - ((2 * v74) & 0x9C73B446));
  v107 = *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0x66u));
  LODWORD(v17) = v103 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v95) ^ 0x2Fu)) ^ (v15 >> 1);
  LODWORD(v35) = (_DWORD)v17 - ((2 * (_DWORD)v17) & 0x3E5B35E);
  v108 = v74 ^ v106;
  LODWORD(v17) = *(_DWORD *)(v105 + 4 * (BYTE1(v96) ^ 0x29u)) ^ v234 ^ v73 ^ v92;
  LODWORD(v86) = v107 ^ v233 ^ (v86 + 1312414243 - ((2 * v86) & 0x9C73B446));
  LODWORD(v73) = *(_DWORD *)&v97[4 * ((v74 ^ ~v106) >> 24)];
  HIDWORD(v15) = ~(_DWORD)v73;
  LODWORD(v15) = v73 ^ 0x1DE9534E;
  LODWORD(v73) = v15 >> 1;
  LODWORD(v74) = *(_DWORD *)&v97[4 * ((v17 >> 24) ^ 0x91)];
  HIDWORD(v15) = ~(_DWORD)v74;
  LODWORD(v15) = v74 ^ 0x1DE9534E;
  LODWORD(v74) = v15 >> 1;
  v109 = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0xA3)];
  HIDWORD(v15) = ~v109;
  LODWORD(v15) = v109 ^ 0x1DE9534E;
  v110 = v74 ^ *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0xF0u)) ^ ((BYTE2(v86) ^ 0xAC)
                                                              - 114727250
                                                              - 2 * ((WORD1(v86) ^ 0xA3AC) & 0xBF ^ WORD1(v86) & 0x11));
  LODWORD(v74) = (v15 >> 1) ^ *(_DWORD *)&v99[4 * (v17 ^ 0x7B)] ^ *(_DWORD *)(v98
                                                                                             + 4
                                                                                             * (BYTE2(v108) ^ 0x15u)) ^ ((BYTE2(v108) ^ 0x49) - 114727250 - ((2 * (HIWORD(v108) ^ 0xFF49)) & 0x15C)) ^ ((v17 ^ 0x16) + 1069380434 + ((2 * (v17 ^ 0x16) + 254) & 0x1A4 ^ 0xFFC2FFFF));
  LODWORD(v92) = v74 + 1312414243 - ((2 * v74) & 0x9C73B446);
  LODWORD(v35) = ((_DWORD)v35 + 32692655) ^ v231;
  v111 = (v110 + 1312414243 - ((2 * v110) & 0x9C73B446)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v108) ^ 0x2Cu));
  LODWORD(v73) = v73 ^ *(_DWORD *)&v99[4 * (v86 ^ 3)] ^ ((v86 ^ 0x6E)
                                                                                      + 1069380434
                                                                                      + ((2
                                                                                        * (v86 ^ 0x6E)
                                                                                        + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v35) ^ 0x97u)) ^ ((BYTE2(v35) ^ 0xCB) - 114727250 - ((2 * ((v35 >> 16) ^ 0x6FCB)) & 0x15C));
  LODWORD(v74) = *(_DWORD *)(v98 + 4 * (BYTE2(v17) ^ 0x2Eu)) ^ ((BYTE2(v17) ^ 0x72)
                                                                - 114727250
                                                                - ((2 * ((v17 >> 16) ^ 0x9172)) & 0x15C));
  v112 = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0x6F)];
  HIDWORD(v15) = ~v112;
  LODWORD(v15) = v112 ^ 0x1DE9534E;
  LODWORD(v86) = ((v108 ^ 0xFC)
                + 1069380434
                + ((2 * (v108 ^ 0xFC) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v105
                                                                                                 + 4
                                                                                                 * (BYTE1(v86) ^ 0xBDu)) ^ *(_DWORD *)&v99[4 * (v108 ^ 0x91)] ^ (v74 + 1312414243 - ((2 * v74) & 0x9C73B446)) ^ (v15 >> 1);
  v113 = ((v35 ^ 0xE2) - 1726037377) ^ v230 ^ *(_DWORD *)&v99[4 * (v35 ^ 0x8F)] ^ (v111 - 1499549486 - ((2 * v111) & 0x4D3D61A4));
  LODWORD(v17) = *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0x57u)) ^ HIDWORD(v225) ^ ((_DWORD)v73
                                                                                 + 1312414243
                                                                                 - ((2 * (_DWORD)v73) & 0x9C73B446));
  LODWORD(v86) = (v86 - ((2 * v86) & 0x80116EF0) - 1073170568) ^ v228;
  LODWORD(v35) = *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0x42u)) ^ v229 ^ v92;
  v114 = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0x2D)];
  HIDWORD(v15) = ~v114;
  LODWORD(v15) = v114 ^ 0x1DE9534E;
  LODWORD(v74) = ((v35 ^ 0xA1)
                + 1069380434
                + ((2 * (v35 ^ 0xA1) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v35 ^ 0xCC)];
  v115 = *(_DWORD *)(v98 + 4 * (BYTE2(v113) ^ 0xDBu)) ^ ((BYTE2(v113) ^ 0x87)
                                                         - 114727250
                                                         - 2 * ((HIWORD(v113) ^ 0x3A87) & 0xBE ^ HIWORD(v113) & 0x10)) ^ (v15 >> 1);
  LODWORD(v74) = (v74 + 1312414243 - ((2 * v74) & 0x9C73B446)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v113) ^ 0xDEu));
  LODWORD(v73) = ((v113 ^ 0x9E)
                + 1069380434
                + ((2 * (v113 ^ 0x9E) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v113 ^ 0xF3)];
  v116 = (v115 + 1312414243 - ((2 * v115) & 0x9C73B446)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0x57u));
  v117 = ((v17 ^ 0x740CBC3A) >> 16);
  LODWORD(v92) = v117 - 114727250 - (((v17 ^ 0x740CBC3A) >> 15) & 0x15C);
  v118 = *(_DWORD *)&v97[4 * ((v17 >> 24) ^ 0x37)];
  HIDWORD(v15) = ~v118;
  LODWORD(v15) = v118 ^ 0x1DE9534E;
  v119 = v15 >> 1;
  v120 = *(_DWORD *)&v97[4 * (HIBYTE(v113) ^ 0x3A)];
  HIDWORD(v15) = ~v120;
  LODWORD(v15) = v120 ^ 0x1DE9534E;
  v121 = BYTE2(v35) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v35) ^ 0xF6u)) ^ *(_DWORD *)(v105
                                                                                + 4
                                                                                * ((unsigned __int16)((unsigned __int16)v17 ^ 0xBC3A) >> 8)) ^ 0xB710BC27 ^ (v15 >> 1);
  v122 = ((v86 ^ 0x68) - 1726037377) ^ v227 ^ *(_DWORD *)&v99[4 * (v86 ^ 5)] ^ (v121 - 1499549486 - ((2 * v121) & 0x4D3D61A4));
  LODWORD(v17) = ((v17 ^ 0x3A) - 1726037377) ^ HIDWORD(v224) ^ *(_DWORD *)&v99[4
                                                                                              * (v17 ^ 0x57)] ^ (v116 - 1499549486 - ((2 * v116) & 0x4D3D61A4));
  LODWORD(v35) = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0x7C)];
  HIDWORD(v15) = ~(_DWORD)v35;
  LODWORD(v15) = v35 ^ 0x1DE9534E;
  v123 = *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0x8Eu)) ^ v225 ^ BYTE2(v86) ^ v119 ^ (v74
                                                                                   - 114727250
                                                                                   - ((2 * v74) & 0xF252CD5C));
  LODWORD(v35) = *(_DWORD *)(v105 + 4 * (BYTE1(v86) ^ 0x57u)) ^ v226 ^ v92 ^ *(_DWORD *)(v98 + 4 * (v117 ^ 0x5Cu)) ^ (v15 >> 1) ^ ((_DWORD)v73 + 1312414243 - ((2 * (_DWORD)v73) & 0x9C73B446));
  LODWORD(v86) = v123 ^ 0xFA64A511;
  LODWORD(v74) = ((v123 ^ 0x11) + 1069380434 + ((2 * (v123 ^ 0xFA64A511) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v123 ^ 0x7C)];
  LODWORD(v73) = *(_DWORD *)&v97[4 * (HIBYTE(v122) ^ 0x5B)];
  v124 = v74 + 1312414243 - ((2 * v74) & 0x9C73B446);
  HIDWORD(v15) = ~(_DWORD)v73;
  LODWORD(v15) = v73 ^ 0x1DE9534E;
  v125 = *(_DWORD *)&v97[4 * ((v17 >> 24) ^ 0x28)];
  LODWORD(v74) = (v15 >> 1) ^ *(_DWORD *)&v99[4 * (v17 ^ 0x1F)];
  HIDWORD(v15) = ~v125;
  LODWORD(v15) = v125 ^ 0x1DE9534E;
  LODWORD(v73) = v15 >> 1;
  v126 = *(_DWORD *)&v97[4 * (HIBYTE(v123) ^ 0xB9)];
  HIDWORD(v15) = ~v126;
  LODWORD(v15) = v126 ^ 0x1DE9534E;
  v127 = v15 >> 1;
  LODWORD(v74) = v74 ^ ((v17 ^ 0x72)
                      + 1069380434
                      + ((2 * (v17 ^ 0x72) + 254) & 0x1A4 ^ 0xFFC2FFFF));
  v128 = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0xB4)];
  HIDWORD(v15) = ~v128;
  LODWORD(v15) = v128 ^ 0x1DE9534E;
  v129 = v127 ^ *(_DWORD *)&v99[4 * (v35 ^ 0x8B)] ^ ((v35 ^ 0xE6)
                                                                    + 1069380434
                                                                    + ((2 * (v35 ^ 0xE6) + 254) & 0x1A4 ^ 0xFFC2FFFF));
  v130 = BYTE2(v122) ^ 0x95;
  v131 = v130 - 114727250 - ((2 * (HIWORD(v122) ^ 0x5B95)) & 0x15C);
  LODWORD(v83) = v122;
  v132 = (v122 ^ 0xF4) + 1069380434 + ((2 * (v122 ^ 0xF4) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  v133 = ((BYTE2(v17) ^ 0x14)
        - 114727250
        - 2 * (((v17 >> 16) ^ 0x2814) & 0xAF ^ (v17 >> 16) & 1)) ^ v223 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v122) ^ 0x1Fu)) ^ (v129 + 1312414243 - ((2 * v129) & 0x9C73B446)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v17) ^ 0x48u));
  v134 = *(_DWORD *)(v105 + 4 * BYTE1(v86)) ^ v224 ^ ((BYTE2(v35) ^ 0x59)
                                                      - 114727250
                                                      - ((2 * ((v35 >> 16) ^ 0xB459)) & 0x15C)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v35) ^ 5u)) ^ (v74 + 1312414243 - ((2 * v74) & 0x9C73B446));
  LODWORD(v86) = (BYTE2(v86) - 114727250 - ((v86 >> 15) & 0x15C)) ^ HIDWORD(v223) ^ *(_DWORD *)&v99[4 * (v83 ^ 0x99)] ^ v132 ^ ((v15 >> 1) + 1312414243 - ((2 * (v15 >> 1)) & 0x9C73B446)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0x5Cu)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0x12u));
  LODWORD(v35) = *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0x34u)) ^ HIDWORD(v222) ^ v131 ^ *(_DWORD *)(v98 + 4 * (v130 ^ 0x5Cu)) ^ v124 ^ v73;
  LODWORD(v17) = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0xEB)];
  HIDWORD(v15) = ~(_DWORD)v17;
  LODWORD(v15) = v17 ^ 0x1DE9534E;
  LODWORD(v17) = (v15 >> 1) + 1312414243 - ((2 * (v15 >> 1)) & 0x9C73B446);
  v135 = ((BYTE2(v86) ^ 0x81) - 114727250 - ((2 * (WORD1(v86) ^ 0x1481)) & 0x15C)) ^ *(_DWORD *)(v98
                                                                                               + 4
                                                                                               * (BYTE2(v86) ^ 0xDDu));
  v136 = ((v86 ^ 0x51) + 1069380434 + ((2 * (v86 ^ 0x51) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v86 ^ 0x3C)];
  LODWORD(v74) = *(_DWORD *)(v98 + 4 * (BYTE2(v133) ^ 0xDBu)) ^ ((BYTE2(v133) ^ 0x87)
                                                                 - 114727250
                                                                 - ((2 * (HIWORD(v133) ^ 0x7787)) & 0x15C));
  v137 = *(_DWORD *)(v98 + 4 * (((v35 ^ 0xA87CE98B) >> 16) ^ 0x5Cu)) ^ ((v35 ^ 0xA87CE98B) >> 16) ^ (v136 - 114727250 - ((2 * v136) & 0xF252CD5C));
  v138 = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0x14)];
  HIDWORD(v15) = ~v138;
  LODWORD(v15) = v138 ^ 0x1DE9534E;
  v139 = v15 >> 1;
  v140 = *(_DWORD *)&v97[4 * (HIBYTE(v134) ^ 0x9A)];
  HIDWORD(v15) = ~v140;
  LODWORD(v15) = v140 ^ 0x1DE9534E;
  v141 = ((v35 ^ 0x8B)
        + 1069380434
        + ((2 * (v35 ^ 0xA87CE98B) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v105
                                                                                           + 4 * (BYTE1(v133) ^ 0xDEu)) ^ *(_DWORD *)&v99[4 * (v35 ^ 0xE6)] ^ (v135 + 1312414243 - ((2 * v135) & 0x9C73B446)) ^ (v15 >> 1);
  v142 = *(_DWORD *)&v97[4 * (HIBYTE(v133) ^ 0x77)];
  HIDWORD(v15) = ~v142;
  LODWORD(v15) = v142 ^ 0x1DE9534E;
  LODWORD(v17) = *(_DWORD *)(v105 + 4 * (BYTE1(v86) ^ 0x34u)) ^ v221 ^ ((BYTE2(v134) ^ 0xE9)
                                                                        - 114727250
                                                                        - ((2 * (HIWORD(v134) ^ 0x9AE9)) & 0x15C)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v134) ^ 0xB5u)) ^ ((v133 ^ 0x9E) + 1069380434 + ((2 * (v133 ^ 0x9E) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ v17 ^ *(_DWORD *)&v99[4 * (v133 ^ 0xF3)];
  LODWORD(v83) = *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0xBu)) ^ v220 ^ v139 ^ ((v134 ^ 0xA8)
                                                                              + 1069380434
                                                                              + ((2 * (v134 ^ 0xA8)
                                                                                + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v134 ^ 0xC5)] ^ (v74 + 1312414243 - ((2 * v74) & 0x9C73B446));
  v143 = *(_DWORD *)(v105 + 4 * (BYTE1(v134) ^ 0x2Du)) ^ HIDWORD(v221) ^ (v15 >> 1) ^ (v137
                                                                                       + 1312414243
                                                                                       - ((2 * v137) & 0x9C73B446));
  LODWORD(v86) = (v141 - 722293478 - ((2 * v141) & 0xA9E55A34)) ^ v222;
  v144 = *(_DWORD *)&v97[4 * (BYTE3(v83) ^ 0x6D)];
  HIDWORD(v15) = ~v144;
  LODWORD(v15) = v144 ^ 0x1DE9534E;
  v145 = v15 >> 1;
  v146 = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0xFD)];
  v147 = *(_DWORD *)(v98 + 4 * (((v83 ^ 0x2E0E654A) >> 16) ^ 0x5Cu)) ^ (~v146 << 31) ^ (v146 >> 1) ^ (((v83 ^ 0x2E0E654A) >> 16) - 114727250 - (((v83 ^ 0x2E0E654A) >> 15) & 0x15C)) ^ 0xEF4A9A7;
  v148 = ((v83 ^ 0x4A) + 1069380434 + ((2 * (v83 ^ 0x2E0E654A) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v83 ^ 0x27)];
  LODWORD(v73) = v147 + 1312414243 - ((2 * v147) & 0x9C73B446);
  v149 = *(_DWORD *)&v97[4 * (HIBYTE(v143) ^ 0xAE)];
  HIDWORD(v15) = ~v149;
  LODWORD(v15) = v149 ^ 0x1DE9534E;
  v150 = (v15 >> 1) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v86) ^ 0xA4u)) ^ (v148 + 1312414243 - ((2 * v148) & 0x9C73B446));
  LODWORD(v92) = v150 - 114727250 - ((2 * v150) & 0xF252CD5C);
  v151 = *(_DWORD *)(v98 + 4 * (BYTE2(v143) ^ 0x3Au)) ^ v145 ^ *(_DWORD *)&v99[4 * (v86 ^ 0x4D)] ^ ((v86 ^ 0x20) + 1069380434 + ((2 * (v86 ^ 0x20) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ ((BYTE2(v143) ^ 0x66) - 114727250 - 2 * ((HIWORD(v143) ^ 0xAE66) & 0xAF ^ HIWORD(v143) & 1));
  LODWORD(v35) = ((v143 ^ 0xB3)
                - 413623133
                + ((2 * (v143 ^ 0xB3) + 126) & 0x46 ^ 0xEFCE7BFF)) ^ *(_DWORD *)(v105
                                                                                                + 4
                                                                                                * (BYTE1(v83) ^ 0x65u));
  LODWORD(v35) = ((_DWORD)v35 - 1499549486 - ((2 * (_DWORD)v35) & 0x4D3D61A4)) ^ *(_DWORD *)&v99[4
                                                                                               * (v143 ^ 0xDE)];
  LODWORD(v86) = *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0x40u)) ^ ((BYTE2(v86) ^ 0x1C)
                                                                - 114727250
                                                                - ((2 * (WORD1(v86) ^ 0xFD1C)) & 0x15C));
  LODWORD(v86) = (v86 ^ 0xD9E215AF ^ -(v86 ^ 0xD9E215AF) ^ ((v86 ^ v35 ^ 0x431D28D3)
                                                          + (v35 ^ 0x6500C283)
                                                          + 1))
               + (v35 ^ 0x6500C283);
  LODWORD(v35) = *(_DWORD *)&v97[4 * ((v17 ^ 0x3F162902) >> 24)];
  HIDWORD(v15) = ~(_DWORD)v35;
  LODWORD(v15) = v35 ^ 0x1DE9534E;
  v152 = *(_DWORD *)(v105 + 4 * (BYTE1(v143) ^ 0x7Cu));
  v153 = ((v17 ^ 0x3F162902) >> 16) ^ v219 ^ *(_DWORD *)(v98 + 4 * (((v17 ^ 0x3F162902) >> 16) ^ 0x5Cu)) ^ v92;
  v154 = (v15 >> 1) ^ HIDWORD(v218) ^ v86;
  v155 = *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0xCBu)) ^ HIDWORD(v219) ^ (v151 + 1312414243 - ((2 * v151) & 0x9C73B446));
  LODWORD(v35) = v152 ^ HIDWORD(v220) ^ ((v17 ^ 2)
                                       + 1069380434
                                       + ((2 * (v17 ^ 0x3F162902) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v17 ^ 0x6F)] ^ v73;
  LODWORD(v86) = ((BYTE2(v35) ^ 0xE9) - 114727250 - ((2 * ((v35 >> 16) ^ 0xB8E9)) & 0x15C)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v35) ^ 0xB5u));
  v156 = *(_DWORD *)&v97[4 * (HIBYTE(v153) ^ 0x9D)];
  HIDWORD(v15) = ~v156;
  LODWORD(v15) = v156 ^ 0x1DE9534E;
  v157 = v15 >> 1;
  LODWORD(v73) = *(_DWORD *)&v97[4 * (HIBYTE(v155) ^ 0x61)];
  HIDWORD(v15) = ~(_DWORD)v73;
  LODWORD(v15) = v73 ^ 0x1DE9534E;
  LODWORD(v17) = *(_DWORD *)&v99[4 * (v35 ^ 0xC5)] ^ *(_DWORD *)(v98 + 4 * (BYTE2(v153) ^ 0x28u)) ^ ((v35 ^ 0xA8) + 1069380434 + ((2 * (v35 ^ 0xA8) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ ((BYTE2(v153) ^ 0x74) - 114727250 - ((2 * (HIWORD(v153) ^ 0x9D74)) & 0x15C)) ^ (v15 >> 1);
  v158 = v157 ^ ((BYTE2(v154) ^ 0xE6) - 114727250 - 2 * ((HIWORD(v154) ^ 0xB0E6) & 0xAF ^ HIWORD(v154) & 1)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v154) ^ 0xBAu));
  LODWORD(v73) = v153;
  LODWORD(v92) = (v153 ^ 0xD9)
               + 1069380434
               + ((2 * (v153 ^ 0xD9) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  v159 = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0xB8)];
  HIDWORD(v15) = ~v159;
  LODWORD(v15) = v159 ^ 0x1DE9534E;
  v160 = (v155 ^ 0x85) + 1069380434 + ((2 * (v155 ^ 0x85) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  v161 = ((BYTE2(v155) ^ 8) - 114727250 - ((2 * (HIWORD(v155) ^ 0x6108)) & 0x15C)) ^ *(_DWORD *)(v98
                                                                                               + 4
                                                                                               * (BYTE2(v155) ^ 0x54u)) ^ *(_DWORD *)&v99[4 * (v154 ^ 0x29)] ^ ((v154 ^ 0x44) + 1069380434 + ((2 * (v154 ^ 0x44) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ (v15 >> 1);
  LODWORD(v17) = *(_DWORD *)(v105 + 4 * (BYTE1(v154) ^ 0xDDu)) ^ HIDWORD(v217) ^ ((_DWORD)v17
                                                                                  + 1312414243
                                                                                  - ((2 * (_DWORD)v17) & 0x9C73B446));
  LODWORD(v83) = *(_DWORD *)&v97[4 * (HIBYTE(v154) ^ 0xB0)];
  HIDWORD(v15) = ~(_DWORD)v83;
  LODWORD(v15) = v83 ^ 0x1DE9534E;
  v162 = *(_DWORD *)(v105 + 4 * (BYTE1(v153) ^ 0xBDu)) ^ v218 ^ (v161 + 1312414243 - ((2 * v161) & 0x9C73B446));
  v163 = *(_DWORD *)&v99[4 * (v155 ^ 0xE8)];
  v164 = *(_DWORD *)(v105 + 4 * (BYTE1(v155) ^ 0x8Fu)) ^ HIDWORD(v216) ^ *(_DWORD *)&v99[4
                                                                                         * (v73 ^ 0xB4)] ^ v92 ^ (v15 >> 1) ^ (v86 + 1312414243 - ((2 * v86) & 0x9C73B446));
  LODWORD(v86) = v160 ^ v217 ^ v163 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0x2Du)) ^ (v158
                                                                                      + 1312414243
                                                                                      - ((2 * v158) & 0x9C73B446));
  v165 = BYTE2(v162);
  v166 = *(_DWORD *)&v97[4 * (HIBYTE(v164) ^ 0x18)];
  v167 = ((BYTE2(v86) ^ 0x66) - 114727250 - 2 * ((WORD1(v86) ^ 0xAE66) & 0xAF ^ WORD1(v86) & 1)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0x3Au));
  HIDWORD(v15) = ~v166;
  LODWORD(v15) = v166 ^ 0x1DE9534E;
  LODWORD(v35) = ((v15 >> 1) - 114727250 - ((2 * (v15 >> 1)) & 0xF252CD5C)) ^ *(_DWORD *)(v98
                                                                                        + 4 * (BYTE2(v162) ^ 0x40u));
  v168 = *(_DWORD *)&v97[4 * (HIBYTE(v162) ^ 0xEF)];
  HIDWORD(v15) = ~v168;
  LODWORD(v15) = v168 ^ 0x1DE9534E;
  v169 = (v15 >> 1) ^ *(_DWORD *)&v99[4 * (v164 ^ 0x90)] ^ ((v164 ^ 0xFD)
                                                                           + 1069380434
                                                                           + ((2 * (v164 ^ 0xFD) + 254) & 0x1A4 ^ 0xFFC2FFFF));
  LODWORD(v73) = v167 + 1312414243 - ((2 * v167) & 0x9C73B446);
  v170 = *(_DWORD *)&v99[4 * (v17 ^ 0x27)] ^ ((v17 ^ 0x4A)
                                                             + 1069380434
                                                             + ((2 * (v17 ^ 0x4A) + 254) & 0x1A4 ^ 0xFFC2FFFF));
  LODWORD(v83) = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0xAE)];
  HIDWORD(v15) = ~(_DWORD)v83;
  LODWORD(v15) = v83 ^ 0x1DE9534E;
  v171 = (v15 >> 1) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v164) ^ 0xFu)) ^ (v170 - 114727250 - ((2 * v170) & 0xF252CD5C));
  LODWORD(v74) = *(_DWORD *)&v97[4 * ((v17 >> 24) ^ 0xDC)];
  HIDWORD(v15) = ~(_DWORD)v74;
  LODWORD(v15) = v74 ^ 0x1DE9534E;
  v172 = (_DWORD)v35 + 1312414243 - ((2 * (_DWORD)v35) & 0x9C73B446);
  LODWORD(v35) = ((BYTE2(v17) ^ 0xE)
                - 114727250
                - 2 * (((v17 >> 16) ^ 0xDC0E) & 0xBF ^ (v17 >> 16) & 0x11)) ^ v216 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v86) ^ 0x7Cu)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v17) ^ 0x52u)) ^ (v169 + 1312414243 - ((2 * v169) & 0x9C73B446));
  LODWORD(v83) = v86;
  v173 = (v86 ^ 0xB3) + 1069380434 + ((2 * (v86 ^ 0xB3) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  LODWORD(v86) = *(_DWORD *)(v105 + 4 * (BYTE1(v164) ^ 0x1Bu)) ^ HIDWORD(v215) ^ *(_DWORD *)&v99[4
                                                                                                 * (v162 ^ 0x4D)] ^ ((v162 ^ 0x20) + 1069380434 + ((2 * (v162 ^ 0x20) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ (v15 >> 1) ^ v73;
  LODWORD(v17) = v172 ^ HIDWORD(v214) ^ v173 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0x65u)) ^ *(_DWORD *)&v99[4 * (v83 ^ 0xDE)];
  LOBYTE(v73) = v17 ^ BYTE2(v162);
  v174 = *(_DWORD *)(v105 + 4 * (BYTE1(v162) ^ 0xA4u)) ^ v215 ^ (v171 + 1312414243 - ((2 * v171) & 0x9C73B446));
  LODWORD(v92) = v17 ^ v165 ^ 0x7641388B;
  v175 = (v174 ^ BYTE2(v164));
  LODWORD(v83) = *(_DWORD *)&v97[4 * BYTE3(v92)];
  HIDWORD(v15) = ~(_DWORD)v83;
  LODWORD(v15) = v83 ^ 0x1DE9534E;
  LODWORD(v83) = v15 >> 1;
  v176 = *(_DWORD *)&v97[4 * ((v35 ^ 0xF7E9CFA8) >> 24)];
  HIDWORD(v15) = ~v176;
  LODWORD(v15) = v176 ^ 0x1DE9534E;
  v177 = v15 >> 1;
  v178 = (BYTE2(v92) - 114727250 - ((v17 >> 15) & 0x15C)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v92) ^ 0x5Cu));
  v179 = *(_DWORD *)&v97[4 * (HIBYTE(v174) ^ 0xE7)];
  HIDWORD(v15) = ~v179;
  LODWORD(v15) = v179 ^ 0x1DE9534E;
  v180 = v15 >> 1;
  v181 = v83 ^ *(_DWORD *)&v99[4 * (v175 ^ 0x18)] ^ (((v35 ^ 0xF7E9CFA8) >> 16)
                                                   - 114727250
                                                   - (((v35 ^ 0xF7E9CFA8) >> 15) & 0x15C)) ^ *(_DWORD *)(v98 + 4 * (((v35 ^ 0xF7E9CFA8) >> 16) ^ 0x5Cu)) ^ ((~(2 * (v175 ^ 0x75) + 4031742) | 0xFFC2FE5B) + (v175 ^ 0x75) + 1069380434);
  v182 = (v181 + 1312414243 - ((2 * v181) & 0x9C73B446)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v86) ^ 0xECu));
  v183 = v177 ^ *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0xA7u)) ^ ((BYTE2(v86) ^ 0xFB)
                                                               - 114727250
                                                               - ((2 * (WORD1(v86) ^ 0x57FB)) & 0x15C)) ^ (v92 + 1069380434 + ((2 * v92 + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v73 ^ 0xE6)];
  LODWORD(v83) = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0x57)];
  HIDWORD(v15) = ~(_DWORD)v83;
  LODWORD(v15) = v83 ^ 0x1DE9534E;
  v184 = (v183 + 1312414243 - ((2 * v183) & 0x9C73B446)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v174) ^ 0x6Du));
  v185 = HIWORD(v174) ^ 0xE731;
  LODWORD(v98) = *(_DWORD *)(v98 + 4 * (v185 ^ 0x5Cu));
  v186 = *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0x2Du));
  LODWORD(v86) = v86;
  v187 = ((v35 ^ 0xA8)
        + 1069380434
        + ((2 * (v35 ^ 0xF7E9CFA8) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ (v185
                                                                                - 114727250
                                                                                - ((2 * v185) & 0x15C)) ^ *(_DWORD *)&v99[4 * (v35 ^ 0xC5)];
  LODWORD(v83) = *(_DWORD *)&v99[4 * (v86 ^ 0x42)];
  LODWORD(v35) = (v86 ^ 0x2F) + 1069380434 + ((2 * (v86 ^ 0x2F) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  LODWORD(v86) = HIDWORD(v206) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0xDAu)) ^ ((v187 ^ (v15 >> 1) ^ v98)
                                                                                 + 1312414243
                                                                                 - ((2 * (v187 ^ (v15 >> 1) ^ v98)) & 0x9C73B446));
  LODWORD(v17) = (v184 - 512663828 - ((2 * v184) & 0xC2E2BDD8)) ^ v214;
  LODWORD(v105) = (v182 - 595648296 - ((2 * v182) & 0xB8FE41B0)) ^ HIDWORD(v213);
  LODWORD(v99) = v186 ^ v213 ^ v35 ^ v180 ^ v83 ^ (v178 + 1312414243 - ((2 * v178) & 0x9C73B446));
  BYTE2(v187) = BYTE2(v86) ^ 0x8C;
  LODWORD(v35) = v105 ^ 0x351D74B9;
  LODWORD(v34) = *(_DWORD *)(v10 - 116);
  v188 = (char *)*(&off_1E89A15E0 + (int)v34 - 1801) - 4;
  v189 = (char *)*(&off_1E89A15E0 + (int)v34 - 1668) - 8;
  v190 = (char *)*(&off_1E89A15E0 + (int)v34 - 1699) - 8;
  v191 = (*(_DWORD *)&v190[4 * (BYTE2(v17) ^ 0x9E)] - 1066110617) ^ (*(_DWORD *)&v188[4 * (v99 ^ 0xC9)]
                                                                   + 1161575469);
  v192 = *(unsigned int *)&v188[4 * (v86 ^ 0xC8)];
  v193 = (*(_DWORD *)&v190[4 * (BYTE2(v99) ^ 0x38)] - 1066110617) ^ (*(_DWORD *)&v189[4
                                                                                    * ((v86 ^ 0x898C5DC8) >> 24)]
                                                                   + 74050895) ^ (*(_DWORD *)&v188[4
                                                                                                 * (v17 ^ 0xA2)]
                                                                                + 1161575469);
  LODWORD(v98) = *(_DWORD *)&v188[4 * (v105 ^ 0xB9)];
  v194 = *(unsigned int *)&v189[4 * ((v17 >> 24) ^ 0xE7)];
  LODWORD(v188) = *(_DWORD *)&v189[4 * ((v99 >> 24) ^ 0xB8)];
  v195 = (uint64_t)*(&off_1E89A15E0 + (int)v34 - 1817);
  LODWORD(v86) = *(_DWORD *)(v195 + 4 * (BYTE1(v86) ^ 0x61u)) ^ (*(_DWORD *)&v189[4 * (BYTE3(v105) ^ 0x65)] + 74050895);
  LODWORD(v105) = *(_DWORD *)(v195 + 4 * (BYTE1(v17) ^ 0xA0u));
  LODWORD(v99) = *(_DWORD *)(v195 + 4 * (BYTE1(v99) ^ 0xE9u));
  LODWORD(v86) = (v191 - 839040011 - ((2 * v191) & 0x9BFA87EA)) ^ v86;
  LODWORD(v92) = *(_DWORD *)&v190[4 * BYTE2(v187)];
  LODWORD(v189) = *(_DWORD *)&v190[4 * BYTE2(v35)];
  LODWORD(v97) = *(_DWORD *)(v195 + 4 * BYTE1(v35)) ^ HIDWORD(v208) ^ (v193 - 839040011 - ((2 * v193) & 0x9BFA87EA));
  LODWORD(v17) = HIDWORD(a6) ^ HIDWORD(v213) ^ (v86 - 595648296 - ((2 * v86) & 0xB8FE41B0));
  v196 = ((unsigned __int16)(*(_WORD *)(v195 + 4 * BYTE1(v35)) ^ WORD2(v208) ^ (v193
                                                                                                 + 17397
                                                                                                 - ((2 * v193) & 0x87EA))) >> 8) ^ 0x99;
  v197 = (char *)*(&off_1E89A15E0 + (int)v34 - 1741) - 12;
  a1[*(_QWORD *)(v10 - 248)] = v197[v196] ^ 0x5D;
  v198 = (char *)*(&off_1E89A15E0 + (int)v34 - 1818) - 4;
  a1[*(_QWORD *)(v10 - 240)] = (v198[BYTE2(v17) ^ 0xADLL] - 42) ^ 0xC5;
  LODWORD(v196) = v105 ^ HIDWORD(a6) ^ (v192 - ((2 * v192 - 1971816358) & 0x9BFA87EA) + 322535458) ^ ((_DWORD)v188 + 74050895) ^ ((_DWORD)v189 - 1066110617);
  v199 = (char *)*(&off_1E89A15E0 + SHIDWORD(v205)) - 8;
  a1[*(_QWORD *)(v10 - 200)] = v199[v97 ^ 0xFCLL] ^ 0x42;
  a1[*(_QWORD *)(v10 - 216)] = (v198[BYTE2(v196) ^ 0x8CLL] - 42) ^ 0x47;
  v200 = (char *)*(&off_1E89A15E0 + (int)v205) - 12;
  a1[*(_QWORD *)(v10 - 232)] = (v200[(v97 >> 24) ^ 0xDELL] + 24) ^ 0x1B;
  a1[*(_QWORD *)(v10 - 224)] = ((v198[BYTE2(v97) ^ 0x15] + ((v198[BYTE2(v97) ^ 0x15] - 42) ^ 0xDA) - 41) ^ 0xFE)
                             + v198[BYTE2(v97) ^ 0x15]
                             - 42;
  v201 = (v98 + 1161575469);
  v202 = v206 ^ v99 ^ ((_DWORD)v92 - 1066110617) ^ v201 ^ ((_DWORD)v194 - ((2 * (_DWORD)v194 + 148101790) & 0x9BFA87EA) - 764989116);
  a1[*(_QWORD *)(v10 - 208)] = v199[(v206 ^ v99 ^ (v92 + 103) ^ v201 ^ (v194 - ((2 * v194 - 98) & 0xEA) + 68)) ^ 5] ^ 0xB0;
  a1[*(_QWORD *)(v10 - 152)] = (v200[(v17 >> 24) ^ 0x4ELL] + 24) ^ 0xE6;
  a1[*(_QWORD *)(v10 - 144)] = (v200[BYTE3(v196) ^ 0x9CLL] + 24) ^ 0xB8;
  v203 = *(_QWORD *)(v10 - 176);
  a1[v203] = (v200[BYTE3(v202) ^ 0x67] + 24) ^ 0x91;
  a1[*(_QWORD *)(v10 - 160)] = v199[v196 ^ 0xF2] ^ 0xBA;
  a1[*(_QWORD *)(v10 - 192)] = v197[BYTE1(v196) ^ 0x1ELL] ^ 0xFE;
  a1[*(_QWORD *)(v10 - 168)] = v197[((unsigned __int16)(v206 ^ (unsigned __int16)v99 ^ (v92 + 29031) ^ v201 ^ (v194 - ((2 * v194 - 9570) & 0x87EA) + 12612)) >> 8) ^ 0x33] ^ 0xE7;
  a1[*(_QWORD *)(v10 - 184)] = v197[BYTE1(v17) ^ 0xBCLL] ^ 0x29;
  a1[*(_QWORD *)(v10 - 136)] = v199[v17 ^ 0x9FLL] ^ 0x42;
  a1[*(_QWORD *)(v10 - 128)] = (v198[BYTE2(v202) ^ 0xDLL] - 42) ^ 0x8E;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t (**)(int, int, int, int, int, int, int, int, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 - 256) + 8 * (int)((v34 - 568) | (2 * ((((_DWORD)v203 - 1332899240 - ((2 * (_DWORD)v203 + 32) & 0x611B24B0) + 16) ^ 0xB08D9258) < v56 + 9013377)))) - 8))(v201, v202, v194, &off_1E89A15E0, 66, v192, v195, v199, a2, a3, a4, a1, a6, v205, v206, v207, v208, v209, v210,
           v211,
           v212,
           v213,
           v214,
           v215,
           v216,
           v217,
           v218,
           v219,
           v220,
           v221,
           v222,
           v223,
           v224,
           v225);
}

void sub_1CD11EF5C()
{
  JUMPOUT(0x1CD11CE0CLL);
}

uint64_t sub_1CD11EF90(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((253 * (v4 ^ 0x6E) - 204) * (v3 != a3)) ^ v4))
                            - (v4 + 1753)
                            + 1853))();
}

uint64_t sub_1CD11EFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  char v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7
                                                                                        + 8
                                                                                        * ((1004
                                                                                          * ((((v6 & 8) == 0) ^ (a6 + 75)) & 1)) ^ a6))
                                                                            - 8))(a1, a2, a3, (a2 - a3), (a6 + 331) | 0x400u);
}

uint64_t sub_1CD11F004@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  char v15;
  uint64_t v16;
  int8x16x4_t v18;

  *(_DWORD *)(v12 - 128) = v11;
  *(_DWORD *)(v12 - 136) = v7;
  v13 = (a3 ^ 0xFFFFF88F) & v7;
  v14 = -a2;
  *(_DWORD *)(v12 - 144) = v13;
  v15 = v10 + v9 + v8;
  *(_DWORD *)(v12 - 116) = a3 ^ 0x721;
  v16 = (v14 + v10 + v9 + a1);
  v18.val[0].i64[0] = ((_BYTE)v14 + (_BYTE)v10 + (_BYTE)v9 + (_BYTE)a1) & 0xF;
  v18.val[0].i64[1] = ((_BYTE)v14 + v15 - 81) & 0xF;
  v18.val[1].i64[0] = ((_BYTE)v14 + v15 + 5 * *(_BYTE *)(v12 - 116)) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)v14 + v15 - 83) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)v14 + v15 - 84) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)v14 + v15 - 85) & 0xF;
  v18.val[3].i64[0] = ((_BYTE)v14 + v15 - 86) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)v14 + v15 - 87) & 0xF;
  *(int8x8_t *)(a4 - 7 + v16) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v5 + (v16 & 0xF) - 7), *(int8x8_t *)(a4 - 7 + v16)), veor_s8(*(int8x8_t *)((v16 & 0xF) + v4 - 5), *(int8x8_t *)((v16 & 0xF) + v6 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v18, (int8x16_t)xmmword_1CDB7F0B0), (int8x8_t)0x7777777777777777)));
  return (*(uint64_t (**)(__n128))(*(_QWORD *)(v12 - 256) + 8 * (a3 ^ 2 | (2 * (v14 != 8 - v13)))))((__n128)xmmword_1CDB7F0B0);
}

void sub_1CD11F140()
{
  JUMPOUT(0x1CD11F074);
}

uint64_t sub_1CD11F168()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (973 * (*(_DWORD *)(v2 - 136) == *(_DWORD *)(v2 - 144)))))
                            - ((((v0 - 429) | 0x744u) + 4) ^ (v0 + 1431))))();
}

uint64_t sub_1CD11F1AC@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a1 - 141255584);
  *(_BYTE *)(a3 + v8) ^= *(_BYTE *)(v5 + (v8 & 0xF)) ^ *(_BYTE *)((v8 & 0xF) + v4 + 2) ^ *(_BYTE *)((v8 & 0xF) + v6 + 4) ^ (119 * (v8 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((19 * (a1 - 1 != v3)) ^ (a2 - 1753))) - 8))();
}

void sub_1CD11F218()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1807390555)
    v1 = 1645153785;
  else
    v1 = -1645193695;
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_1CD11F27C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((a1 + 2125213654 - 2 * (a1 & 0x7EAC2FD6)) ^ 0x135837DF);
  v3 = *(unint64_t **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unint64_t **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(v2 - 0x7542B2AE577378FLL);
  v11 = v1 + 1224239923 * ((&v7 & 0x62925DD | ~(&v7 | 0x62925DD)) ^ 0xB6527F5) + 865;
  v12 = v6;
  v9 = &STACK[0xC7F991DE6408E4D];
  v10 = v5;
  v7 = v2;
  v8 = v4;
  ((void (*)(uint64_t *))*(&off_1E89A15E0 + v1 - 893))(&v7);
  v7 = *(_QWORD *)(v2 - 0x7542B2AE5773797);
  v8 = &STACK[0xC7F991DE6408E5D];
  LODWORD(v9) = v1
              + 1374699841
              * (((&v7 | 0x7984BEEA) - &v7 + (&v7 & 0x867B4110)) ^ 0x1470A6E3)
              + 406;
  sub_1CD0E22A8((uint64_t)&v7);
  LODWORD(v7) = v1 + 235795823 * (&v7 ^ 0x94AD4959) - 662;
  v8 = v3;
  sub_1CD0EF550((uint64_t)&v7);
  __asm { BR              X8 }
}

uint64_t sub_1CD11F480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t), uint64_t a12)
{
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  *(_DWORD *)(v19 - 112) = v13 + 1224239923 * ((v19 + 1260386870 - 2 * ((v19 - 144) & 0x4B1FFAC6)) ^ 0xB9AC0711) + 1606;
  *(_QWORD *)(v19 - 144) = v14;
  *(_QWORD *)(v19 - 136) = a12;
  *(_QWORD *)(v19 - 104) = v17;
  *(_QWORD *)(v19 - 128) = v17;
  *(_QWORD *)(v19 - 120) = v15;
  v20 = a11(v19 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12
                                                      + 8
                                                      * ((111
                                                        * ((((v16 + v18 - 1) < 0x7FFFFFFF) ^ (((v13 + 53) & 0xAF ^ 0x17) + 1)) & 1)) ^ (v13 - 2068888523) & 0x7B50BEAF))
                                          - 12))(v20);
}

uint64_t sub_1CD11F538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *(_QWORD *)(v19 - 136) = v15;
  *(_QWORD *)(v19 - 128) = v16;
  *(_DWORD *)(v19 - 144) = (v17 + 791) ^ (1225351577
                                        * ((((2 * ((v19 - 144) ^ 0x34E6FF81)) | 0xB1E44DAA)
                                          - ((v19 - 144) ^ 0x34E6FF81)
                                          + 655218987) ^ 0xCF8E0142));
  *(_QWORD *)(v19 - 120) = v16;
  *(_QWORD *)(v19 - 112) = v14;
  ((void (*)(uint64_t))((char *)*(&off_1E89A15E0 + v17 - 260) - 4))(v19 - 144);
  v20 = 1374699841
      * ((~((v19 - 144) ^ 0xCE91F438 | 0xE3331AF3) + (((v19 - 144) ^ 0xCE91F438) & 0xE3331AF3)) ^ 0xBFA9093D);
  *(_DWORD *)(v19 - 144) = (v17 + 1030) ^ v20;
  *(_DWORD *)(v19 - 128) = -313388985 - v20 + v18;
  *(_QWORD *)(v19 - 136) = a13;
  v21 = sub_1CD112754(v19 - 144);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((114 * (*(_DWORD *)(v19 - 140) == 538735252)) ^ v17)))(v21);
}

uint64_t sub_1CD11F65C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((111
                                          * ((((v1 + v3 - 1) < 0x7FFFFFFF) ^ ((v2 ^ 0x17) + 1)) & 1)) ^ v2))
                            - 12))();
}

uint64_t sub_1CD11F6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v5 = *(_QWORD *)(v8 + 24);
  v6 = 1224239923 * ((((v4 - 144) | 0x5ECCF06D) + (~(v4 - 144) | 0xA1330F92)) ^ 0xAC7F0DBB);
  *(_DWORD *)(v4 - 144) = v6 ^ 0x3EAF37E3;
  *(_QWORD *)(v4 - 136) = v10;
  *(_DWORD *)(v4 - 128) = v6 + v3 - 849;
  sub_1CD0E4238((_DWORD *)(v4 - 144));
  *(_QWORD *)(v4 - 144) = v0;
  *(_QWORD *)(v4 - 136) = v10;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 128) = v2;
  *(_QWORD *)(v4 - 120) = v1;
  *(_DWORD *)(v4 - 112) = v3
                        + 1224239923 * ((2 * ((v4 - 144) & 0x10151408) - (v4 - 144) - 269816843) ^ 0x1D591622)
                        + 865;
  v9(v4 - 144);
  *(_DWORD *)(v4 - 128) = v3 + 1374699841 * ((v4 - 144) ^ 0x6DF41809) + 406;
  *(_QWORD *)(v4 - 144) = v2;
  *(_QWORD *)(v4 - 136) = v5;
  return sub_1CD0E22A8(v4 - 144);
}

void sub_1CD11F7C4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~(_DWORD)a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BR              X10 }
}

uint64_t sub_1CD11F894@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * ((2 * (&a4 & 0x17931B20) - &a4 + 1751966942) ^ 0xB6AA5905);
  a8 = v12 ^ 0x6228DDF;
  a7 = &STACK[0x37021DA481391552];
  a4 = &STACK[0x42E48BBDD224DE45];
  a5 = v11;
  a6 = (v10 - 136) ^ v12;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v10 ^ 0x14F)) - 8))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v11 - 0x27681A84B35EB0EDLL) == v8) * ((v10 + 48) ^ 0x53C)) ^ v10)))(v13);
}

uint64_t sub_1CD11F978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((((a10 == v10) ^ (v12 + 1)) & 1 | (8
                                                                                             * (((a10 == v10) ^ (v12 + 1)) & 1))) ^ v12))
                            - 4))();
}

uint64_t sub_1CD11F9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  _BOOL4 v17;

  *(_BYTE *)(v11 + (v13 + v12)) = *(_BYTE *)(a11 + (v13 + v12)) ^ 0x32;
  v17 = ((v16 - 1825813931) & 0x6CD3B57A ^ (v12 + 351)) + v13 < (a10 ^ v14);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((v17 | (8 * v17)) ^ v16)) - 4))();
}

void sub_1CD11FA24(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(*(_QWORD *)(v3 + 24) - 0x1E6EF7153090DC2) = v1;
  *(_DWORD *)(v4 - 0x72E1645BEBB64013) = v2;
  *(_DWORD *)v3 = *a1;
}

void sub_1CD11FA8C(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 108757529 * ((2 * (a1 & 0x5EAB9BD4) - (_DWORD)a1 - 1588304853) ^ 0x41C80600);
  __asm { BR              X14 }
}

uint64_t sub_1CD11FB4C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((*(_DWORD *)(*(_QWORD *)(a1 + 8) + v4) != v3)
                                               * (((v1 + 1019832448) & 0xC336977F) + 614)) ^ (v1 + 1138)))
                            - ((v1 + 670) | 0x304u)
                            + 1800))();
}

uint64_t sub_1CD11FBA4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((((((10 * (v2 ^ 0x731)) ^ 0xF68072D2) + v3) * (v0 - 159353952)) >> 31)
                                               * ((v2 - 1130536225) & 0x4362977E ^ 0x130)) | v2))
                            - 8))();
}

uint64_t sub_1CD11FC08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v2;
  v6 = v3 - 535753261 * ((&v5 & 0xF4826C3B | ~(&v5 | 0xF4826C3B)) ^ 0x1899DEB) - 229;
  v7 = a1;
  v8 = v2;
  return ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v1 + 8 * (v3 - 231)) - 4))(&v5);
}

void sub_1CD11FD50(uint64_t a1)
{
  __asm { BR              X8 }
}

void sub_1CD11FE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned __int8 *v9;
  _BOOL4 v11;

  v9 = *(unsigned __int8 **)(a4 + 8 * (a5 ^ (a5 - 19)));
  v11 = ((**(unsigned __int8 **)(a7 + 80) - (*v9 ^ 0x32)) ^ 0x76DF27E7)
      + ((2 * (**(unsigned __int8 **)(a7 + 80) - (*v9 ^ 0x32))) & 0xEDBE4FCE)
      - 1183589858 == 1608824740 - v7
     && a6 != 2441235919;
  __asm { BR              X15 }
}

uint64_t sub_1CD120F5C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(v2 + (v4 - 266921706)) = *(_BYTE *)(a2 + (v4 - 266921706));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((117 * (((a1 + 94) ^ 0xFFFFFC70) + v4 == v3)) ^ a1)) - 12))();
}

void sub_1CD120FA4(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(_QWORD *)(a1 + 24))
    v2 = *(_DWORD *)(a1 + 20) - v1 == 603303756;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_1CD121050()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 ^ 0x302)))(32) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v3 * ((v2 + 35) ^ 0x3E0)) ^ v2))
                            - ((v2 + 1328486859) & 0xB0D0E3DC ^ 0x18CLL)))();
}

uint64_t sub_1CD1210BC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v4 = v1 != v0 + ((v3 - 1653570193) & 0x628F7D0B) - 1027;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * v4) | (4 * v4)) ^ v3)) - 8))();
}

uint64_t sub_1CD121114@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  v11 = v2 - 603303757;
  v12 = v2 - 1;
  v13 = *(unsigned __int8 *)(v6 + v11);
  if (v13 == 50)
    __asm { BR              X11 }
  if (v13 == 178)
  {
    v14 = 1645153785;
    v15 = *(_QWORD *)(v4 + 8);
    v16 = *(unsigned __int8 *)(v4 + 16) ^ v5;
    *(_QWORD *)result = v6;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v12;
    if (v16 == 24)
      v17 = -1454758981;
    else
      v17 = -1454758982;
    *(_DWORD *)(result + 16) = 310716794;
    *(_DWORD *)(result + 20) = v17;
    *(_DWORD *)(result + 24) = 1645153785;
    *(_QWORD *)(v15 - 0x17594DE9181849F3) = a2;
  }
  else
  {
    result = (*(uint64_t (**)(void))(v8 + 8 * (v9 ^ 0x419)))();
    v14 = -1645193696;
  }
  *(_DWORD *)v4 = v14;
  return result;
}

void sub_1CD1211F8(uint64_t a1)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v2 = 1755732067 * ((2 * ((a1 ^ 0xFDCA5AD1) & 0x4699B354) - (a1 ^ 0xFDCA5AD1) - 1184478037) ^ 0x9A6AABA1);
  v3 = *(_DWORD *)(a1 + 32) - v2;
  v4 = v3
     + 628203409 * (((&v4 | 0x3341E245) + (~&v4 | 0xCCBE1DBA)) ^ 0xB1C9EE77)
     - 231789431;
  nullsub_1(&v4);
  __asm { BR              X17 }
}

uint64_t sub_1CD121390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v3 | (8 * (((v0 + 1) & 0x7FFFFFFC) != v1)))) - 4))();
}

void sub_1CD1213B4()
{
  JUMPOUT(0x1CD12134CLL);
}

uint64_t sub_1CD1213C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  _BOOL4 v5;

  v5 = (*(uint64_t (**)(_QWORD))(a1 + 8 * (int)(v4 - 423)))((*(_DWORD *)(v3 + 24 * v2 + 16)
                                                                                     - 1206753083)) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1176 * v5) ^ v4)) - 4))();
}

uint64_t sub_1CD12140C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;

  v3 = 13 * (v2 ^ 0x29F);
  v4 = v0 - ((2 * v0 + 1881461130) & 0x918F5A50) + ((v3 + 1325647569) & 0xB0FC3DDF) - 2133192674;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1636
                                          * (((2 * v4) & 0xFFFEFB66 ^ 0x918E5A40) + (v4 ^ 0xB738D09B) - 1394876467 != 752573824)) ^ v3))
                            - 8))();
}

uint64_t sub_1CD1214C4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((158 * (v2 ^ 0x7BB)) ^ 0x14B) * ((v1 + v0 - 2147450291) > 7)) ^ v2))
                            - (((v2 ^ 0x7BBu) + 1878) ^ 0x750)))();
}

uint64_t sub_1CD121528(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v2 ^ (((unint64_t)(v1 - a1) > 0x1F) | (2 * ((unint64_t)(v1 - a1) > 0x1F))))))();
}

uint64_t sub_1CD12154C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v0 < 0x20) ^ (((v1 + 42) | 0x11) + 112)) & 1)
                                          * (((((v1 - 1238) | 0x11) - 840300522) & 0x3215F7D7) - 580)) ^ ((v1 - 1238) | 0x11)))
                            - 4))();
}

uint64_t sub_1CD1215A0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v8 = v4 + v3 + v5;
  v9 = v1 + v8;
  v10 = *(_OWORD *)(v9 - 31);
  v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((v2 & 0xFFFFFFE0) == 32) * ((v6 - 446) ^ 0x7B)) ^ (v6 + 981)))
                            - 4))();
}

void sub_1CD1215F8()
{
  JUMPOUT(0x1CD1215BCLL);
}

uint64_t sub_1CD121604(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a2 ^ (477 * (v2 == v3))))
                            - ((a2 - 772328148) & 0x2E08CFDF ^ 0x5C7)))();
}

uint64_t sub_1CD121644(uint64_t a1, int a2)
{
  char v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((a2 + 464) ^ (1777 * ((v2 & 0x18) == 0))))
                            - (a2 + 576)
                            - (a2 + 121)
                            + 1083))();
}

uint64_t sub_1CD12167C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)(a1 - 7 + (v4 + v3 + v5 - v6)) = *(_QWORD *)(v1 - 7 + (v4 + v3 + v5 - v6));
  v9 = v7 - (v2 & 0xFFFFFFF8) - 763 == -v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((8 * v9) | (16 * v9) | v7)) - 12))();
}

uint64_t sub_1CD1216DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_QWORD *)(a3 + (v4 + a4)) = *(_QWORD *)(v5 + (v4 + a4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((8 * (v6 == a4)) | (16 * (v6 == a4)) | v7)) - 12))();
}

uint64_t sub_1CD12170C(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((((v3 + 102) | 0x107) ^ 0x5C8) * (v2 == a2)) ^ v3))
                            - (v3 ^ 0x55Eu)
                            + 312))();
}

uint64_t sub_1CD121748@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  _BOOL4 v7;

  v6 = (a2 - 296) | 0x10A;
  *(_BYTE *)(a1 + (v4 - 752573825)) = *(_BYTE *)(v3 + (v4 - 752573825));
  v7 = v4 - 1 != (v6 ^ 0x4D1 ^ a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((2 * v7) | (32 * v7)) ^ v6)) - 8))();
}

uint64_t sub_1CD121798@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + (v5 + v4)) = *(_BYTE *)(v2 + (v5 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((2 * (v5 - 1 != a2)) | (32 * (v5 - 1 != a2))) ^ v3)) - 8))();
}

uint64_t sub_1CD1217C8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(v1 + 24) != 0x4B30070DAA05F9DDLL) * ((v0 - 838) ^ 0x165)) ^ v0))
                            - 4))();
}

uint64_t sub_1CD121804@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  int v3;
  uint64_t v4;

  *(_BYTE *)(a2 - 0x4B30070DAA05F9DDLL) = 1;
  v4 = *v2;
  *(_QWORD *)(v2[5] - 0xF250A47131524EDLL) = result;
  *(_DWORD *)(v4 - 0x330904BA72E93EC0) = v3;
  *((_DWORD *)v2 + 13) = 1645153785;
  return result;
}

void sub_1CD121898(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CD1218FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  unsigned int v5;

  *(_DWORD *)(*(_QWORD *)(a2 + 96) + 24) = v4;
  v5 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 1881461130) & 0xEDAA0BF4) + 786919103;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * ((83
                                                       * (((2 * v5) & 0xDFDBFDDA ^ 0xCD8A09D0)
                                                        + (v5 ^ 0x1938FB17)
                                                        - 1610946564 != 266921705)) ^ v3))
                                         - 8))(0);
}

uint64_t sub_1CD121990()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((1098 * ((((v2 + v1 - 1877868269) < 8) ^ 0x21) & 1)) ^ 0x179u))
                            - 8))();
}

uint64_t sub_1CD121A00(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((84 * (v4 - a1 - (unint64_t)(a3 + 12) + 385 < 0x20)) | (a3 + 1191))))();
}

uint64_t sub_1CD121A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((((a6 - 252) | 0x460) ^ 0x4E1) * (v8 < 0x20)) ^ a6))
                            - ((a6 - 805399230) & 0xB67BFFFD ^ v7)))();
}

uint64_t sub_1CD121A90@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v9 = v7 + v6 + v8;
  v10 = v4 + v9;
  v11 = *(_OWORD *)(v10 - 31);
  v12 = a3 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v5 & 0xFFFFFFE0) == 32) * (((a2 + 1016589078) & 0x3CED7F3C) + 357)) ^ (a1 + a2 + 1066))))();
}

void sub_1CD121AF8()
{
  JUMPOUT(0x1CD121AB8);
}

uint64_t sub_1CD121B04(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v5
                                                     + 8
                                                     * (int)(((((13 * (a5 ^ 0x105)) ^ (a2 + 1842))
                                                             + ((a5 - 1082458691) & 0xC6FF97EF))
                                                            * (v6 != a3)) ^ a5))
                                         - 8))(0);
}

uint64_t sub_1CD121B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                               + 8
                                                                               * ((244
                                                                                 * (((a6 + 112) ^ ((((a6 + 935) ^ 0x538) & v7) == 0)) & 1)) ^ a6))
                                                                   - 8))((a6 + 1646419312) & 0x9DDDA5FF, a2, a3, (v8 - a3));
}

uint64_t sub_1CD121BA8@<X0>(int a1@<W0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;

  *(_QWORD *)(a3 - 7 + (v7 + v6 + v8 - a2)) = *(_QWORD *)(v4 - 7 + (v7 + v6 + v8 - a2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a2 - (v5 & 0xFFFFFFF8) == -8) * (40 * (a1 ^ 0x4EE) + 209)) ^ a1))
                            - 4))();
}

void sub_1CD121C08()
{
  JUMPOUT(0x1CD121BD4);
}

uint64_t sub_1CD121C14(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  unint64_t v7;
  int v8;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * (((a3 - 183) * (v8 != a6)) | a3))
                                         - ((a3 - a2) ^ v7)))(0);
}

uint64_t sub_1CD121C44@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(a3 + (a1 - 266921706)) = *(_BYTE *)(v5 + (a1 - 266921706));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v3 + 8
                                                          * ((450 * ((a2 ^ 0x1C2) + a1 - 1251 != v4)) ^ a2 ^ 0x1C2))
                                         - 4))(0);
}

uint64_t sub_1CD121C88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;

  *(_BYTE *)(a1 + (v7 + v3)) = *(_BYTE *)(v4 + (v7 + v3));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * (((v6 + v7 - 1251 != v2) * v5) ^ v6)) - 4))(0);
}

uint64_t sub_1CD121CC8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)a1 ^ (1755732067 * ((a1 & 0xECFD530 | ~(a1 | 0xECFD530)) ^ 0x2FF69714));
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E89A15E0 + v1 - 804)
                              + ((1547 * (*(_QWORD *)(a1 + 8) != 0x27681A84B35EB105)) ^ v1)
                              - 1)
                            - 8))();
}

uint64_t sub_1CD121D58()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((1858
                                          * (*(_DWORD *)(v1 - 0x27681A84B35EB0EDLL) == ((v2 + 1851613323) & 0x91A29F6E ^ 0x620F0EB1))) ^ v2))
                            - 8))();
}

uint64_t sub_1CD121DB8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v1 - 0x27681A84B35EB0F5) + 1273267861;
  v4 = *(_DWORD *)(v1 - 0x27681A84B35EB0F9) + 980680899;
  v5 = v4 < (v2 ^ 6u) + 1583983809;
  v6 = v3 < v4;
  if (v3 < 0x5E69B00F != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((2 * !v6) | (4 * !v6)) ^ v2)) - 8))();
}

uint64_t sub_1CD121E54@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2;

  *v2 = a2;
  *(_DWORD *)(result + 16) = -1645193524;
  return result;
}

void sub_1CD121E68(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16)
     - 460628867 * (((a1 ^ 0x68759CF4 | 0x87CE5E15) - ((a1 ^ 0x68759CF4) & 0x87CE5E15)) ^ 0xA32D409C);
  __asm { BR              X10 }
}

uint64_t sub_1CD121FB0()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = *(_DWORD *)(v2 + 48) - v0 != 870327928 && (*(_QWORD *)(v2 + 32) | *(_QWORD *)(v2 + 56)) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((28 * v5) ^ v1))
                            - ((3 * (v1 ^ 0x6E4u)) ^ ((v1 - 974) + 4))))();
}

uint64_t sub_1CD122010()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v4;

  v4 = v1[5] == 0x164C0FDDF1987668 || (*v1 | v1[3]) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((362 * (((v0 - 100) ^ v4) & 1)) ^ v0)) - 8))();
}

uint64_t sub_1CD122070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * (int)(v20 & 0x8E18C33F ^ (124 * (v19 != 0)))) - ((502 * (v20 & 0x8E18C33F ^ 0x33F) - 1894953982) & 0x70F2B3FC) + 1000))(a1, &STACK[0xC7F991DE6408EC5], a2, a3, a4, a5, a6, a7, a1, a10, a11, a12, a13, &STACK[0xC7F991DE6408EC5], a15, a8 - 0x3555E11E9398A6A2, a17, a8 - 0x3555E11E9398A7B2, a19);
}

uint64_t sub_1CD1221B0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  void (*v31)(uint64_t);
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  void (*v43)(uint64_t);
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v29 = v22 ^ 0x22F;
  v30 = ((v28 - 1244544018 - 2 * ((v28 - 144) & 0xB5D1C47E)) ^ 0xF45BC1C) * v27;
  *(_QWORD *)(v28 - 128) = v20;
  *(_QWORD *)(v28 - 120) = a20;
  *(_DWORD *)(v28 - 140) = v22 - v30 - 751;
  *(_DWORD *)(v28 - 136) = v23 + v30 + (v22 ^ 0xD21E8525);
  v46 = a1 + v21;
  ((void (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (v22 - 950)) - 8))(v28 - 144);
  HIDWORD(a10) = 203 * (v29 ^ 0x1C0);
  v47 = v25;
  HIDWORD(v45) = v29 + 1083;
  *(_DWORD *)(v28 - 128) = (v29 + 1083) ^ (628203409
                                         * ((2 * ((v28 - 144) & 0x54E47578) - (v28 - 144) + 723225217) ^ 0xA99386B2));
  *(_QWORD *)(v28 - 144) = a17;
  *(_QWORD *)(v28 - 136) = a18;
  v44 = (void (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (v29 ^ 0x147)) - 12);
  v44(v28 - 144);
  LODWORD(v45) = v29 + 1402;
  *(_QWORD *)(v28 - 120) = a17;
  *(_QWORD *)(v28 - 112) = a19;
  *(_DWORD *)(v28 - 128) = (v29 + 1402) ^ (((((v28 - 144) | 0x680F62BB) - ((v28 - 144) & 0x680F62BB)) ^ 0xD29B1AD9) * v27);
  *(_QWORD *)(v28 - 144) = a18;
  *(_QWORD *)(v28 - 136) = a20;
  v43 = (void (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (v29 ^ 0x1C1)) - 4);
  v43(v28 - 144);
  HIDWORD(v42) = v29 + 1485;
  *(_DWORD *)(v28 - 112) = v29
                         + 1485
                         + 1224239923
                         * ((((v28 - 144) ^ 0xF9BB0CB1 | 0x15437DFD) - (((v28 - 144) ^ 0xF9BB0CB1) & 0x15437DFD)) ^ 0x1E4B8C9B);
  *(_QWORD *)(v28 - 104) = v25;
  *(_QWORD *)(v28 - 128) = a19;
  *(_QWORD *)(v28 - 120) = a17;
  *(_QWORD *)(v28 - 144) = a18;
  *(_QWORD *)(v28 - 136) = a19;
  v31 = *(void (**)(uint64_t))(v26 + 8 * (v29 ^ 0x171));
  v31(v28 - 144);
  LODWORD(v42) = v29 + 469;
  *(_QWORD *)(v28 - 136) = a19;
  *(_QWORD *)(v28 - 128) = a19;
  *(_DWORD *)(v28 - 120) = v29 + 469 + 1225351577 * ((v28 - 144) ^ 0x239AD816);
  *(_QWORD *)(v28 - 112) = a9;
  *(_QWORD *)(v28 - 104) = a17;
  *(_QWORD *)(v28 - 144) = a18;
  v32 = (void (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (v29 - 279)) - 12);
  v32(v28 - 144);
  *(_QWORD *)(v28 - 144) = a13;
  *(_QWORD *)(v28 - 136) = a18;
  *(_DWORD *)(v28 - 128) = (v29 + 1083) ^ (628203409
                                         * ((((v28 - 144) | 0xDED8722D) - ((v28 - 144) & 0xDED8722D)) ^ 0x5C507E1E));
  v44(v28 - 144);
  *(_QWORD *)(v28 - 120) = a13;
  *(_QWORD *)(v28 - 112) = a7;
  *(_DWORD *)(v28 - 128) = (v29 + 1402) ^ (1178560073
                                         * ((989915423 - ((v28 - 144) | 0x3B00E91F) + ((v28 - 144) | 0xC4FF16E0)) ^ 0x7E6B6E82));
  *(_QWORD *)(v28 - 144) = a18;
  *(_QWORD *)(v28 - 136) = a20;
  v43(v28 - 144);
  *(_DWORD *)(v28 - 112) = v29
                         + 1485
                         + 1224239923 * ((((v28 - 144) | 0x639614A3) + (~(v28 - 144) | 0x9C69EB5C)) ^ 0x9125E975);
  *(_QWORD *)(v28 - 104) = v47;
  *(_QWORD *)(v28 - 144) = a18;
  *(_QWORD *)(v28 - 136) = a7;
  *(_QWORD *)(v28 - 128) = a7;
  *(_QWORD *)(v28 - 120) = a13;
  v31(v28 - 144);
  *(_QWORD *)(v28 - 136) = a7;
  *(_QWORD *)(v28 - 128) = a7;
  *(_QWORD *)(v28 - 112) = a11;
  *(_QWORD *)(v28 - 104) = a13;
  *(_DWORD *)(v28 - 120) = v29
                         + 469
                         + 1225351577 * ((((v28 - 144) | 0x59480BB8) - ((v28 - 144) & 0x59480BB8)) ^ 0x7AD2D3AE);
  *(_QWORD *)(v28 - 144) = a18;
  v32(v28 - 144);
  *(_DWORD *)(v28 - 144) = v29
                         - 108757529
                         * (((((v28 - 144) | 0xF475AFFA) ^ 0xFFFFFFFE) - (~(v28 - 144) | 0xB8A5005)) ^ 0xEB16322E)
                         - 81;
  *(_QWORD *)(v28 - 136) = a7;
  *(_QWORD *)(v28 - 128) = a19;
  ((void (*)(uint64_t))((char *)*(&off_1E89A15E0 + (v29 ^ 0x1AB)) - 12))(v28 - 144);
  *(_DWORD *)(v28 - 140) = (v29 + 383) ^ (460628867 * ((v28 - 144) ^ 0x4C96827D));
  *(_QWORD *)(v28 - 136) = a7;
  sub_1CD112038(v28 - 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), void (*)(uint64_t), uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t)))(*(_QWORD *)(v24 + 8 * (v29 | (32 * (*(_DWORD *)(v28 - 144) < (HIDWORD(a10) + 1901766070))))) - 7 * (v29 ^ 0x194u) + 597))(v33, v34, v35, v36, v37, v38, v39, v40, a2, v42, v43, v44, v45, a7, 7 * (v29 ^ 0x194u), a9, a10, (char *)*(&off_1E89A15E0 + (v29 ^ 0x15A)) - 8, v46,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           v31);
}

uint64_t sub_1CD1226B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (*a18)(uint64_t), uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void (*a27)(uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  void (*v35)(uint64_t);
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_DWORD *)(v40 - 144) = (v37 - 204) ^ (235795823 * ((v40 - 101333398 - 2 * ((v40 - 144) & 0xF9F5C6FA)) ^ 0x6D588FA3));
  *(_QWORD *)(v40 - 136) = v39;
  *(_QWORD *)(v40 - 128) = v36;
  v35(v40 - 144);
  *(_QWORD *)(v40 - 144) = a25;
  *(_QWORD *)(v40 - 136) = v39;
  *(_DWORD *)(v40 - 112) = v37
                         + 1327
                         + 1224239923
                         * ((2 * (((v40 - 144) ^ 0xA8FDC33E) & 0x7EE300AA) - ((v40 - 144) ^ 0xA8FDC33E) + 18677589) ^ 0x5B52C1BC);
  *(_QWORD *)(v40 - 128) = v39;
  *(_QWORD *)(v40 - 120) = v36;
  *(_QWORD *)(v40 - 104) = a35;
  a27(v40 - 144);
  *(_DWORD *)(v40 - 112) = v37
                         + 1327
                         + 1224239923
                         * ((((v40 - 144) | 0x595B079F) - (v40 - 144) + ((v40 - 144) & 0xA6A4F860)) ^ 0xABE8FA48);
  *(_QWORD *)(v40 - 144) = a25;
  *(_QWORD *)(v40 - 136) = a19;
  *(_QWORD *)(v40 - 128) = v39;
  *(_QWORD *)(v40 - 120) = v36;
  *(_QWORD *)(v40 - 104) = v39;
  a27(v40 - 144);
  *(_QWORD *)(v40 - 136) = v39;
  *(_QWORD *)(v40 - 128) = a24;
  *(_DWORD *)(v40 - 144) = (v37 - 1882358073) ^ (235795823
                                               * ((((v40 - 144) | 0xEC38560C) - ((v40 - 144) & 0xEC38560C)) ^ 0x78951F55));
  sub_1CD125FBC(v40 - 144);
  *(_DWORD *)(v40 - 144) = (v37 - 204) ^ (235795823
                                        * ((-2026376004 - ((v40 - 144) | 0x8737F4BC) + ((v40 - 144) | 0x78C80B43)) ^ 0xEC65421A));
  *(_QWORD *)(v40 - 136) = v39;
  *(_QWORD *)(v40 - 128) = a26;
  a18(v40 - 144);
  *(_QWORD *)(v40 - 144) = v39;
  *(_QWORD *)(v40 - 136) = a26;
  *(_DWORD *)(v40 - 128) = v37 + 1374699841 * ((v40 - 144) ^ 0x6DF41809) + 868;
  v41 = sub_1CD0E22A8(v40 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38
                                                      + 8
                                                      * ((((((v37 - 577) ^ (a23 == 0)) & 1) == 0) * (v37 - 556)) ^ (v37 + 381)))
                                          - 12))(v41);
}

uint64_t sub_1CD1228F0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v4 = 535753261 * ((((v3 - 144) ^ 0x80BC1318 | 0x67434C63) + ((v3 - 144) ^ 0x26000443 | 0x98BCB39C)) ^ 0xAC481975);
  *(_DWORD *)(v3 - 136) = ((v0 | 0x648) - 403) ^ v4;
  *(_DWORD *)(v3 - 120) = v4 + v7 + 1259132612 + (((v0 | 0x648) - 953243641) & 0x38D157BF);
  *(_QWORD *)(v3 - 144) = v8;
  *(_QWORD *)(v3 - 128) = v2;
  result = ((uint64_t (*)(uint64_t))((char *)*(&off_1E89A15E0 + ((v0 | 0x648) ^ 0x6B6)) - 8))(v3 - 144);
  *(_DWORD *)(v6 - 0x164C0FDDF1987668) = v7;
  *(_DWORD *)(v1 + 64) = 1645153785;
  return result;
}

void sub_1CD122A9C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 1759421093 * ((a1 - 1364022623 - 2 * (a1 & 0xAEB2AAA1)) ^ 0x1DCF1AF5);
  __asm { BR              X9 }
}

uint64_t sub_1CD122B4C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  BOOL v3;

  v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 - 613)))(200) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1636 * ((v3 ^ v1) & 1)) ^ v1)) - 8))();
}

uint64_t sub_1CD122B8C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t result;
  int v10;

  result = (*(uint64_t (**)(uint64_t, _QWORD))(v5 + 8 * ((v7 ^ 0x4D8) - 1826)))(a1, 0);
  if ((_DWORD)result == 16)
  {
    v3 -= 7;
    goto LABEL_7;
  }
  if ((_DWORD)result == 12)
  {
LABEL_7:
    result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v4 & 0x75DAF05A)))(a1);
    v10 = v3;
    goto LABEL_8;
  }
  if ((_DWORD)result)
  {
    v3 -= 6;
    goto LABEL_7;
  }
  *v6 = a1;
  v10 = 2107069443;
LABEL_8:
  *(_DWORD *)(v1 + 12) = v10 ^ v2;
  return result;
}

void sub_1CD122C18(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1374699841 * ((((2 * (_DWORD)a1) | 0x97E9331C) - (_DWORD)a1 + 873162354) ^ 0xA6008187));
  __asm { BR              X10 }
}

uint64_t sub_1CD122CE4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * ((&a4 & 0xC1A12D46 | ~(&a4 | 0xC1A12D46)) ^ 0xE0986F62);
  a7 = &STACK[0x37021DA48139155A];
  a6 = (v10 - 127) ^ v12;
  a4 = &STACK[0x42E48BBDD224DE3D];
  a5 = v11;
  a8 = v12 ^ 0x6BDE6AF;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v10 - 300)) - 8))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((866
                                              * (*(_DWORD *)(v11 - 0x27681A84B35EB0EDLL) == v8
                                                                                          + ((v10 + 682) | 0x24)
                                                                                          - 1063)) ^ v10)))(v13);
}

uint64_t sub_1CD122DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((111 * (a11 != v11 + 4)) ^ v13))
                            - ((v13 - 509929160) & 0x1E64E3F9)
                            + 337))();
}

void sub_1CD122E10(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;

  *a1 = v2;
  *(_DWORD *)(v1 + 4) = -1645193524;
}

void sub_1CD122EC8(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((a1 & 0xB853BF30 | ~(a1 | 0xB853BF30)) ^ 0x996AFD14);
  v2 = *(_QWORD *)a1;
  ((void (*)(char *, void (*)()))*(&off_1E89A15E0 + (v1 ^ 0x345)))((char *)*(&off_1E89A15E0 + v1 - 872) - 4, sub_1CD125DF4);
  __asm { BR              X11 }
}

uint64_t sub_1CD122F98@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = **(_QWORD **)(v2 + 8 * (a1 - 698)) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v3 | (32 * v3)) ^ a1)) - 4))();
}

uint64_t sub_1CD122FC4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x309)))(v1);
}

void sub_1CD122FF4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X8 }
}

uint64_t sub_1CD12307C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((918 * (**(_BYTE **)(a2 + 8) == 0)) ^ 0x94u)) - 12))();
}

uint64_t sub_1CD1230A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _BOOL4 v24;

  *(_QWORD *)(*(_QWORD *)(a17 + 96) + 504) = v19 + 1;
  *(_DWORD *)(*(_QWORD *)(a17 + 96) + 496) = a19 - 1;
  v22 = 1178560073 * ((((v21 - 152) | 0xA18E8F2E) - ((v21 - 152) & 0xA18E8F2E)) ^ 0x1B1AF74C);
  *(_QWORD *)(v21 - 144) = v21 + 0x5C6940C6B1BC6F3ELL;
  *(_DWORD *)(v21 - 136) = 1172345435 - v22;
  *(_DWORD *)(v21 - 152) = 1076023948 - v22;
  v23 = sub_1CD0EF38C(v21 - 152);
  v24 = a19 - 1071279739 + ((2 * (*(_DWORD *)(v21 - 184) & 0x3F)) ^ 0x28) + (*(_DWORD *)(v21 - 184) & 0x3F ^ 0xF7ECD6EB) > 0xFFFFFFBF;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (((4 * v24) | (8 * v24)) ^ 0x283u)) - 12))(v23);
}

uint64_t sub_1CD12329C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  int v20;
  uint64_t v21;
  _BOOL4 v22;

  v22 = v19 + 1552915351 < (a19 + 2020647308);
  if ((a19 + 2020647308) < 0xC05E38C8 != (v19 + 1552915351) < 0xC05E38C8)
    v22 = (a19 + 2020647308) < 0xC05E38C8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 8 * ((v22 * (((v20 - 189) | 0x14) + 430)) ^ v20)) - 4))();
}

uint64_t sub_1CD123308(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v21 = (a1 + 7106602) | 0xC1808080;
  v22 = 628203409 * ((((v20 - 152) | 0xE8E27941) - (v20 - 152) + ((v20 - 152) & 0x171D86B8)) ^ 0x6A6A7572);
  *(_QWORD *)(v20 - 152) = a16;
  *(_DWORD *)(v20 - 144) = v22 + a1 + 992;
  *(_DWORD *)(v20 - 140) = a19 - v22 - 699382058;
  v23 = sub_1CD103BC8(v20 - 152);
  v24 = *(_DWORD *)(v20 - 184) & 0x3F;
  *(_BYTE *)(v20 - 252 + (v24 ^ 0x14)) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * (int)((((v24 ^ 0x14) > 0x37) * (v21 ^ 0xC1ECF534)) ^ a1))
                                          - 12))(v23);
}

uint64_t sub_1CD123428(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * (((v4 == a4 + ((v5 - 202575953) & 0xCDFFFFF7) + 63)
                                              * (((v5 + 225) | 0x400) - 1545)) | v5)))(-1615192458);
}

uint64_t sub_1CD123474(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((103 * ((v3 ^ 0x2Bu) >= ((a3 + (v4 ^ 0x78) - 1625) ^ (a3 + 8)))) ^ v4))
                            - 4))();
}

uint64_t sub_1CD1234B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 252 + a2 + a1) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((51 * (((v3 + 704899974) & 0xD5FC0F78) - 336 == (v2 & 0x38))) ^ v3))
                            - 8))();
}

uint64_t sub_1CD123514@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;

  v10 = v3 < v4;
  *(_BYTE *)(v9 - 252 + (a2 - 1737234171)) = *(_BYTE *)(v6 + (v2 + a1))
                                                         + (~(*(unsigned __int8 *)(v6
                                                                                                  + (v2 + a1)) << (v7 + 27)) | 0x9B)
                                                         + 51;
  v11 = v2 + 1 + v5;
  v12 = v10 ^ (v11 < v4);
  v13 = v11 < v3;
  if (!v12)
    v10 = v13;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v8 + 8 * ((491 * v10) ^ v7)) - 4))((v7 - 169));
}

uint64_t sub_1CD123594(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * ((622 * (((v4 == v3) ^ (a3 + v5 - 92)) & 1)) ^ v5)))();
}

uint64_t sub_1CD1235E4(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(_QWORD, __n128, __n128, __n128, __n128, __n128),int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int32x4_t a33,int32x4_t a34,int32x4_t a35,int32x4_t a36)
{
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD, __n128, __n128, __n128, __n128, __n128);
  __n128 v45;
  const char *v46;
  __n128 v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  uint8x16_t v57;
  uint16x8_t v58;
  int8x16_t v59;
  uint16x8_t v60;
  int8x16_t v61;
  uint8x16_t v62;
  uint16x8_t v63;
  uint16x8_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int8x16_t v68;
  uint8x16_t v69;
  int8x16_t v72;
  int8x16_t v77;
  int32x4_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int v82;
  uint8x16_t v83;
  uint16x8_t v84;
  uint16x8_t v85;
  uint8x16_t v86;
  uint8x16_t v91;
  uint16x8_t v92;
  uint16x8_t v93;
  int32x4_t v94;
  int32x4_t v95;
  int32x4_t v96;
  int32x4_t v97;
  _DWORD *v98;
  int v99;
  unsigned int v100;
  unint64_t v101;
  int8x16x4_t v102;
  int8x16x4_t v103;

  v44 = (uint64_t (*)(_QWORD, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v40 + 8 * (a4 + v36 + 61))
                                                                               - 12);
  v45 = (__n128)vdupq_n_s32(0x620F0DFFu);
  v46 = (const char *)(v43 - 252);
  v47 = (__n128)vdupq_n_s32(0x620F0DF9u);
  v48.n128_u64[0] = 0x3232323232323232;
  v48.n128_u64[1] = 0x3232323232323232;
  a27 = v41 - 16;
  v49 = (v42 - 1);
  v50.n128_u64[0] = 0x6464646464646464;
  v50.n128_u64[1] = 0x6464646464646464;
  v51 = (__n128)vdupq_n_s32(0xC41E1BF2);
  v53 = *(_DWORD *)(v43 - 180);
  v52 = *(_DWORD *)(v43 - 176);
  a26 = v53;
  v54 = *(_DWORD *)(v43 - 172);
  v55 = *(_DWORD *)(v43 - 168);
  v56 = *(_BYTE *)(v43 - 156) ^ 0x5F;
  if (v56 == 2)
  {
    a25 = v44;
    v103 = vld4q_s8(v46);
    v82 = a3 + a4 + 361;
    v83 = (uint8x16_t)veorq_s8(v103.val[0], (int8x16_t)v48);
    v84 = vmovl_u8(*(uint8x8_t *)v83.i8);
    v85 = vmovl_high_u8(v83);
    v86 = (uint8x16_t)veorq_s8(v103.val[1], (int8x16_t)v48);
    _Q22 = vmovl_u8(*(uint8x8_t *)v86.i8);
    _Q21 = vmovl_high_u8(v86);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v91 = (uint8x16_t)veorq_s8(v103.val[2], (int8x16_t)v48);
    v92 = vmovl_high_u8(v91);
    v93 = vmovl_u8(*(uint8x8_t *)v91.i8);
    v103.val[0] = veorq_s8(v103.val[3], (int8x16_t)v48);
    v103.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v103.val[0]);
    v103.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v103.val[1]);
    v103.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v103.val[1].i8);
    v103.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v103.val[0].i8);
    v103.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v103.val[0]);
    v103.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v103.val[0].i8);
    v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v93.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.i8), 0x18uLL)), v103.val[0]);
    v95 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v93, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v84), 0x18uLL)), v103.val[3]);
    v96 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v92.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v85.i8), 0x18uLL)), v103.val[1]);
    v97 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v92, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v85), 0x18uLL)), v103.val[2]);
    v103.val[0] = veorq_s8(vandq_s8((int8x16_t)v94, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)v103.val & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v103.val[3] = veorq_s8(vandq_s8((int8x16_t)v95, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)&v103.val[3] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v103.val[1] = veorq_s8(vandq_s8((int8x16_t)v96, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)&v103.val[1] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v103.val[2] = veorq_s8(vandq_s8((int8x16_t)v97, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)&v103.val[2] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    a35 = vaddq_s32(vsubq_s32(v96, vaddq_s32((int32x4_t)v103.val[1], (int32x4_t)v103.val[1])), (int32x4_t)v47);
    a36 = vaddq_s32(vsubq_s32(v97, vaddq_s32((int32x4_t)v103.val[2], (int32x4_t)v103.val[2])), (int32x4_t)v47);
    a33 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v103.val[0], (int32x4_t)v103.val[0])), (int32x4_t)v47);
    a34 = vaddq_s32(vsubq_s32(v95, vaddq_s32((int32x4_t)v103.val[3], (int32x4_t)v103.val[3])), (int32x4_t)v47);
    v98 = (_DWORD *)&a33 + v39 + 1438604517;
    v99 = *((_DWORD *)&a33 + (v82 ^ 0x475u ^ (unint64_t)(v39 + 788)) + 1438604517) ^ *(v98 - 3);
    v100 = *(v98 - 16) ^ *(v98 - 14) ^ (v99 + v37 - ((2 * v99) & 0xC41E1BF2));
    HIDWORD(v101) = v100 ^ v37;
    LODWORD(v101) = v100;
    *v98 = (v101 >> 31) + v37 - ((2 * (v101 >> 31)) & 0xC41E1BF2);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v40 + 8 * ((1178 * (v41 == 1438604454)) ^ v82)) - 12))(v49);
  }
  else if (v56 == 1)
  {
    a25 = v44;
    v102 = vld4q_s8(v46);
    v57 = (uint8x16_t)veorq_s8(v102.val[0], (int8x16_t)v48);
    v58 = vmovl_high_u8(v57);
    v59 = (int8x16_t)vmovl_high_u16(v58);
    v60 = vmovl_u8(*(uint8x8_t *)v57.i8);
    v61 = (int8x16_t)vmovl_high_u16(v60);
    v62 = (uint8x16_t)veorq_s8(v102.val[1], (int8x16_t)v48);
    v63 = vmovl_u8(*(uint8x8_t *)v62.i8);
    v64 = vmovl_high_u8(v62);
    v65 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v63.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8));
    v66 = vorrq_s8((int8x16_t)vshll_high_n_u16(v63, 8uLL), v61);
    v67 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v64.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v58.i8));
    v68 = vorrq_s8((int8x16_t)vshll_high_n_u16(v64, 8uLL), v59);
    v69 = (uint8x16_t)veorq_s8(v102.val[2], (int8x16_t)v48);
    _Q22 = (int8x16_t)vmovl_high_u8(v69);
    _Q21 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v69.i8);
    v72 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v77 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v102.val[0] = veorq_s8(v102.val[3], (int8x16_t)v48);
    v102.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v102.val[0].i8);
    v102.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v102.val[0]);
    v78 = (int32x4_t)vorrq_s8(vorrq_s8(v65, v72), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v102.val[1].i8), 0x18uLL));
    v102.val[1] = vorrq_s8(vorrq_s8(v66, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v102.val[1]), 0x18uLL));
    v79 = (int32x4_t)vorrq_s8(vorrq_s8(v67, v77), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v102.val[0].i8), 0x18uLL));
    v80 = (int32x4_t)vorrq_s8(vorrq_s8(v68, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v102.val[0]), 0x18uLL));
    a35 = vaddq_s32(vsubq_s32(v79, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v79, v79), (int8x16_t)v51)), (int32x4_t)v47);
    a36 = vaddq_s32(vsubq_s32(v80, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v80, v80), (int8x16_t)v51)), (int32x4_t)v47);
    a33 = vaddq_s32(vsubq_s32(v78, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v78, v78), (int8x16_t)v51)), (int32x4_t)v47);
    a34 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[1], (int32x4_t)v102.val[1]), (int8x16_t)v51)), (int32x4_t)v47);
    return ((uint64_t (*)(uint64_t, __n128))(*(_QWORD *)(v40 + 8
                                                                      * ((62 * (a27 + 1 != v41)) | (a3 + a4 + 129)))
                                                    - 12))(v49, v45);
  }
  else
  {
    *(_DWORD *)(v43 - 180) = (v53 ^ v42) + (a26 ^ v42) + v42 - (v38 & (2 * ((v53 ^ v42) + (a26 ^ v42))));
    *(_DWORD *)(v43 - 176) = 2 * (v52 ^ v42) + v42 - (v38 & (4 * (v52 ^ v42)));
    *(_DWORD *)(v43 - 172) = 2 * (v54 ^ v42) + v42 - (v38 & (4 * (v54 ^ v42)));
    *(_DWORD *)(v43 - 168) = 2 * (v55 ^ v42) + v42 - (v38 & (4 * (v55 ^ v42)));
    a31 = 0;
    return v44(v49, v45, v47, v48, v50, v51);
  }
}

uint64_t sub_1CD124444(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,int a23,unsigned int a24)
{
  uint64_t v24;
  _BOOL4 v25;

  if (a24 < 0xBF7B13B9 != (a21 + 1538029256) < 0xBF7B13B9)
    v25 = (a21 + 1538029256) < 0xBF7B13B9;
  else
    v25 = a21 + 1538029256 > a24;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24 + 8 * ((!v25 * (((a3 ^ (a3 + 160)) - 122) ^ 0x458)) ^ (a4 + a3 + 655)))
                            - 12))();
}

uint64_t sub_1CD1244D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v7
                                                               + 8
                                                               * ((1709
                                                                 * (((v6 + 1) ^ (a5 + v5 + 63 < (v5 - 633048600 + a3 + v6 - 352))) & 1)) ^ v6))
                                                   - 12))(a1, 1456643678);
}

uint64_t sub_1CD124538(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  return ((uint64_t (*)(void))(*(_QWORD *)(v22
                                        + 8
                                        * (((~a19
                                           + v19
                                           - (unint64_t)(v21 + (v20 ^ 0x3A ^ (a3 + 214))) < 0x10)
                                          * ((v20 ^ 0x3A) - 288)) ^ v20 ^ 0x3A))
                            - 12))();
}

uint64_t sub_1CD124580@<X0>(char a1@<W1>, int a2@<W3>, int a3@<W4>, char a4@<W6>, uint64_t a5@<X8>)
{
  int v5;
  int v6;
  uint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v7 + a5) = *(_BYTE *)(v10 + (v5 + a3))
                      - ((*(_BYTE *)(v10 + (v5 + a3)) << (((v6 + v8) & a1) - 87)) & a4)
                      + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a5 == 63) * v9) | (a2 + v6 + 276))) - 8))();
}

uint64_t sub_1CD1245D8(double a1, double a2, int8x16_t a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  int v9;
  int8x16_t *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *v10 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v12 + (v9 + a9)), vandq_s8(vaddq_s8(*(int8x16_t *)(v12 + (v9 + a9)), *(int8x16_t *)(v12 + (v9 + a9))), a4)), a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (v11 + 25)) - 8))();
}

uint64_t sub_1CD124640@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((1030 * ((v3 - a1 + 443 + a3 - 1615192901) < 0x38)) ^ (a2 + v3 + 455))))(-1615192458);
}

uint64_t sub_1CD124684@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2;
  v5 = a1 + a2;
  if ((unint64_t)(v5 + 1) > 0x38)
    v6 = v5 + 1;
  else
    v6 = 56;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1858
                                * (((v2 + 44) ^ (v6 - v4 + 1615192458 < (((v2 + 99) | 0x61u) ^ 0x277uLL))) & 1)) ^ v2)))();
}

uint64_t sub_1CD124700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 252 + v3 + a1) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((58 * (((7 * (v2 ^ 0x22Cu) - 589) & a2) != 8)) ^ (7 * (v2 ^ 0x22C))))
                            - ((7 * (v2 ^ 0x22C) - 147) | 9u)
                            + 439))();
}

uint64_t sub_1CD12476C(double a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(double *)(v3 + v6) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v4 != v6) * v5) ^ v1)) - v2 + 439))();
}

uint64_t sub_1CD124794@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((v3 - 805309644) & 0xF1ECFBF7 ^ 0xFFFFFF72) + (v3 ^ (a1 + 117))) * (a2 == v2)) ^ v3)))();
}

void sub_1CD1247E0(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;

  v5 = *(unsigned __int8 *)(v4 - 156) ^ 0x5F;
  if (v5 == 1)
  {
    v10 = *(_DWORD *)(v4 - 188);
    v9 = *(_DWORD *)(v4 - 184);
    *(_BYTE *)(v4 - 196) = ((8 * v9) ^ 0xA0) + ((a3 + 22) & 0xB7 ^ 0x87) - ((2 * ((8 * v9) ^ 0xA0)) & 0x60);
    *(_BYTE *)(v4 - 195) = ((v9 >> 5) ^ 0xF2) - 2 * (((v9 >> 5) ^ 0xF2) & 0x36 ^ (v9 >> 5) & 4) + 50;
    *(_BYTE *)(v4 - 194) = ((v9 >> 13) ^ 0x8F) - ((2 * ((v9 >> 13) ^ 0x8F)) & 0x64) + 50;
    *(_BYTE *)(v4 - 193) = ((v9 >> 21) ^ 0x39) - ((2 * ((v9 >> 21) ^ 0x39)) & 0x64) + 50;
    HIDWORD(v11) = v10 ^ 0xA;
    LODWORD(v11) = v9 ^ 0x60000000;
    *(_BYTE *)(v4 - 192) = (v11 >> 29) - ((2 * (v11 >> 29)) & 0x64) + 50;
    *(_BYTE *)(v4 - 191) = ((v10 >> 5) ^ 0xA) - 2 * (((v10 >> 5) ^ 0xA) & 0x37 ^ (v10 >> 5) & 5) + 50;
    *(_BYTE *)(v4 - 190) = ((v10 >> 13) ^ 0xA4) - ((2 * ((v10 >> 13) ^ 0xA4)) & 0x64) + 50;
    v8 = ((v10 >> 21) ^ 0xFFFFFFBE) - ((2 * ((v10 >> 21) ^ 0xFFFFFFBE)) & 0x64) + 50;
  }
  else
  {
    if (v5 != 2)
      goto LABEL_6;
    v8 = *(_DWORD *)(v4 - 188);
    v6 = *(_DWORD *)(v4 - 184);
    *(_BYTE *)(v4 - 196) = ((v8 >> 21) ^ 0xBE)
                         + ~(2 * (((v8 >> 21) ^ 0xBE) & (a4 + a3 + 51) ^ ((v8 & 0x200000) != 0)))
                         + 51;
    *(_BYTE *)(v4 - 195) = ((v8 >> 13) ^ 0xA4) + (~(2 * ((v8 >> 13) ^ 0xA4)) | 0x9B) + 51;
    HIDWORD(v7) = v8 ^ 0xA;
    LODWORD(v7) = v6 ^ 0x60000000;
    *(_BYTE *)(v4 - 194) = ((v8 >> 5) ^ 0xA) - 2 * (((v8 >> 5) ^ 0xA) & 0x36 ^ (v8 >> 5) & 4) + 50;
    *(_BYTE *)(v4 - 193) = (v7 >> 29) - ((2 * (v7 >> 29)) & 0x64) + 50;
    *(_BYTE *)(v4 - 192) = ((v6 >> 21) ^ 0x39) - ((2 * ((v6 >> 21) ^ 0x39)) & 0x64) + 50;
    *(_BYTE *)(v4 - 191) = ((v6 >> 13) ^ 0x8F) - ((2 * ((v6 >> 13) ^ 0x8F)) & 0x64) + 50;
    *(_BYTE *)(v4 - 190) = ((v6 >> 5) ^ 0xF2) - ((2 * ((v6 >> 5) ^ 0xF2)) & 0x64) + 50;
    LOBYTE(v8) = ((8 * v6) ^ 0xA0) + (~(2 * ((8 * v6) ^ 0xA0)) | 0x9F) + 51;
  }
  *(_BYTE *)(v4 - 189) = v8;
LABEL_6:
  JUMPOUT(0x1CD1238ACLL);
}

uint64_t sub_1CD124C4C@<X0>(char a1@<W3>, uint64_t a2@<X5>, int a3@<W8>)
{
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  _BOOL4 v11;

  v8 = v5 + a3;
  v9 = *(_DWORD *)(v7 - 252 + ((v5 + a3) & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a2 + v8 + 1) = (BYTE2(v9) ^ 0x3B) - ((2 * (BYTE2(v9) ^ 0x3B)) & 0x64) + 50;
  *(_BYTE *)(a2 + v8) = (HIBYTE(v9) ^ 0x51) - (((HIBYTE(v9) ^ 0x51) << ((v4 - a1 + 1) ^ 0xE6)) & 0x64) + 50;
  *(_BYTE *)(a2 + v8 + 3) = v9 ^ 0x47;
  *(_BYTE *)(a2 + v8 + 2) = (BYTE1(v9) ^ 0xA7) - ((2 * (BYTE1(v9) ^ 0xA7)) & 0x64) + 50;
  v10 = *(_DWORD *)(v7 - 160) - 2026446123;
  if (v5 - 1725448501 < v3 != v10 < v3)
    v11 = v10 < v3;
  else
    v11 = v5 - 1725448501 < v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((510 * !v11) ^ v4)) - 12))();
}

void sub_1CD124DE4()
{
  JUMPOUT(0x1CD124DB4);
}

uint64_t sub_1CD124DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  int v33;
  uint64_t v34;

  *(_DWORD *)(&a33 + a31) = 1037212390;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v34 + 8 * ((22 * (v33 ^ 0x350)) ^ 0x6BD)) - 8))(1398064151, 1037212390, a3, a4, a5, &a33 + a31, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           &a33 + a31 + 392);
}

uint64_t sub_1CD124EA0(int a1)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((51 * (((v3 == a1) ^ (v1 + 33)) & 1)) ^ v1)) - 4))();
}

uint64_t sub_1CD124EE8(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  int v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  unsigned __int8 v34;
  int v35;
  int v36;
  BOOL v37;

  v33 = v30 & 0xDDFDFEFF;
  v34 = v33 + 12;
  v35 = v33 - a3 + 242;
  v36 = a4 + v33 + 67;
  v37 = a30 - 176914108 < (v32 - 1020078970);
  if ((a30 - 176914108) < 0xB206BC1 != (v32 - 1020078970) < 0xB206BC1)
    v37 = (v32 - 1020078970) < 0xB206BC1;
  return (*(uint64_t (**)(void))(v31 + 8 * ((((v34 ^ v37) & 1) * (v35 ^ 0x29)) ^ v36)))();
}

uint64_t sub_1CD125148()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((*(_DWORD *)(v1 + 48 * (v4 + v2) + 36) == v4) ^ ((v0 & 0xBF) - 30)) & 1)
                                          * (((v0 & 0x6937FBBF) + 63) ^ 0x80)) ^ v0 & 0x6937FBBF))
                            - 12))();
}

uint64_t sub_1CD1251A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v34;

  v31 = v27 - a4 - 242;
  v32 = 628203409 * ((((v30 - 152) | 0x36F0807) - ((v30 - 152) & 0x36F0807)) ^ 0x81E70434);
  *(_DWORD *)(v30 - 136) = v27 - v32 + 1552;
  *(_DWORD *)(v30 - 132) = v29 - v32 + 77623025;
  *(_QWORD *)(v30 - 128) = a14;
  *(_QWORD *)(v30 - 112) = v26;
  *(_QWORD *)(v30 - 104) = a12;
  *(_QWORD *)(v30 - 152) = a13;
  *(_QWORD *)(v30 - 144) = a11;
  v34 = v25;
  ((void (*)(uint64_t))*(&off_1E89A15E0 + v27 - 85))(v30 - 152);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((356 * (*(_DWORD *)(v30 - 120) == (v31 ^ 0xA3E3FA51) + (v27 ^ 0x3B1))) ^ v27))
                                                                                       - 8))(1398064151, 1037212390, 3253530855, 1041436441, v34, a25);
}

uint64_t sub_1CD12529C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((*(_DWORD *)(a5 + 48 * (v8 + v5)) != 617625952)
                                * (((a3 + v6 - 835) ^ (a3 - 51)) - 51)) | v6)))();
}

uint64_t sub_1CD1252E8@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((199
                                          * (((((v2 - 1058217968) | 0x1001084) - 2098010104) ^ a2) != v3 - 634403168)) ^ v2))
                            + 3253530843
                            - (v2 - a1 - 83)))();
}

void sub_1CD125358(uint64_t a1, uint64_t a2, int a3, int a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1CD1253E0@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,int a27,int a28)
{
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;

  *(_DWORD *)(a2 + 392) = a3;
  *(_DWORD *)(a2 + 396) = a28;
  *(_QWORD *)(a2 + 400) = a23;
  *(_DWORD *)(a2 + 408) = a25 - v32 + 1642836220;
  *(_QWORD *)(a2 + 416) = v29 + (v32 - 363588221);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48 * v28 + 8))(a12, a19);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                       + 8
                                                                       * ((270
                                                                         * (v35
                                                                          + v30
                                                                          - (((v31 + 510469503) & 0xE192D4B6 ^ (v34 - 140)) & (2 * v35)) == v30)) ^ v31)))(1398064151, 1037212390, 3253530855, 1041436441);
}

uint64_t sub_1CD1254AC()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((39
                                          * ((*(_DWORD *)(v1 + 48 * v0 + 36) + 749419496) < 0x80000003)) ^ v2))
                            - (((v2 - 2124111890) | 0x40885065u) ^ 0xC1ECF0EBLL)))();
}

uint64_t sub_1CD125520(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, _DWORD *a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((598 * (*a6 - 1037212390 < a4 + ((v6 + 30) ^ (a3 - 146)) + 16)) ^ v6))
                            - (((v6 + 30) | 0x40u) ^ 0xFELL)))();
}

uint64_t sub_1CD125578@<X0>(int a1@<W2>, uint64_t a2@<X4>, _DWORD *a3@<X5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _DWORD *v33;

  v33 = &a3[6 * v27];
  v33[2] = v32;
  v33[3] = v28;
  *((_QWORD *)v33 + 2) = v30;
  v33[6] = a26;
  *a3 = v26 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v31
                                        + 8
                                        * (((*(_DWORD *)(a2 + 48 * v29 + 32) + 749419496 < ((a4 + 1033) ^ 0x800004F8))
                                          * ((a1 + a4 - 242) ^ (a1 + 719))) ^ a4))
                            - 8))();
}

uint64_t sub_1CD1255F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v21;
  int v22;
  uint64_t v23;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * (((v22 + 74 * (v21 ^ 0x4F9) == 1645153933) * (((74 * (v21 ^ 0x4F9)) ^ 0x66) + 1545)) ^ (74 * (v21 ^ 0x4F9)))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1CD125654(int a1, int a2, int a3, uint64_t a4, uint64_t a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  int v27;
  uint64_t v28;
  int v29;
  _BOOL4 v31;

  v31 = v29 != a1 || *a6 != a2 + (v27 ^ a27) - a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((1725 * v31) ^ v27)) - 8))();
}

void sub_1CD12569C()
{
  JUMPOUT(0x1CD1256D4);
}

uint64_t sub_1CD125720(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 88) = 47;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1CD125740(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  BOOL v7;
  uint64_t v8;

  v1 = 1374699841 * ((result - 2 * (result & 0xA8F7ECC532399345) - 0x5708133ACDC66CBBLL) ^ 0xA6FB72C95FCD8B4CLL);
  v2 = *(_QWORD *)(result + 16) ^ v1;
  v3 = *(_QWORD *)(result + 8) - v1;
  v4 = v2 >= v3;
  v5 = (uint64_t)v2 < (uint64_t)v3;
  v6 = !v4;
  if (((*(_DWORD *)(result + 24) + 1374699841 * (((_DWORD)result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) & 1) == 0)
    v5 = v6;
  v7 = !v5;
  v8 = 32;
  if (!v7)
    v8 = 28;
  *(_DWORD *)(result + 36) = *(_DWORD *)(result + 40) ^ (1374699841
                                                       * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) ^ *(_DWORD *)(result + v8) ^ (1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C));
  return result;
}

uint64_t sub_1CD1257D0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 24);
  return 0;
}

uint64_t sub_1CD1257E8(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  int v7;
  BOOL v8;
  uint64_t v9;

  v1 = 1178560073 * ((2 * (result & 0x64AC438940A5398ALL) - result + 0x1B53BC76BF5AC675) ^ 0xAFEC9E05CEBE17);
  v2 = *(_QWORD *)(result + 16) - v1;
  v3 = *(_QWORD *)(result + 40) + v1;
  v4 = v3 >= v2;
  v5 = v3 != v2;
  v6 = v4;
  if (((*(_DWORD *)(result + 28) ^ (1178560073 * ((2 * (result & 0x40A5398A) - (_DWORD)result - 1084569995) ^ 0x5CEBE17))) & 1) != 0)
    v7 = v6;
  else
    v7 = v5;
  v8 = v7 == 0;
  v9 = 4;
  if (!v8)
    v9 = 24;
  *(_DWORD *)result = (*(_DWORD *)(result + v9)
                     - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17)) ^ (*(_DWORD *)(result + 8) - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  return result;
}

uint64_t sub_1CD125890(int *a1)
{
  unsigned int v2;
  uint64_t result;
  int v4;

  v2 = a1[1] - 108757529 * (a1 ^ 0xE09C622B);
  result = ((uint64_t (*)(char *, _QWORD))*(&off_1E89A15E0 + (int)(v2 - 1695027228)))((char *)*(&off_1E89A15E0 + (int)(v2 - 1695027372)) - 12, *(&off_1E89A15E0 + (int)(v2 ^ 0x6508107F)));
  v4 = *(_DWORD *)*(&off_1E89A15E0 + (int)(v2 ^ 0x650810DA));
  if ((_DWORD)result)
    v4 = -1645193401;
  *a1 = v4;
  return result;
}

uint64_t sub_1CD12592C(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;
  _BOOL4 v6;
  BOOL v7;
  uint64_t v8;

  v1 = 235795823 * ((~result & 0x2A1D36B9A93A3D3 | result & 0xFD5E2C94656C5C2CLL) ^ 0xA1169950E3EEA8ALL);
  v2 = *(_QWORD *)(result + 16);
  v3 = v2 ^ v1;
  v4 = *(_QWORD *)result == v2;
  v5 = (*(_QWORD *)result ^ v1) > v3;
  if (((*(_DWORD *)(result + 8) + (_DWORD)v1) & 1) != 0)
    v6 = v5;
  else
    v6 = v4;
  v7 = !v6;
  v8 = 28;
  if (!v7)
    v8 = 32;
  *(_DWORD *)(result + 36) = *(_DWORD *)(result + 12) ^ v1 ^ (*(_DWORD *)(result + v8) - v1);
  return result;
}

_BYTE *sub_1CD1259C4(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_1CD125A54 + 4 * byte_1CDB822A7[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_1CD125AB8(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = 628203409 * (((a1 | 0xBB8CAEEC) - (a1 & 0xBB8CAEEC)) ^ 0x3904A2DF);
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_DWORD *)(a1 + 20) + v2;
  v7 = *(_DWORD *)a1 + 2024873124 + v2;
  v8 = 235795823
     * (((&v10 | 0xDE5284D5) - &v10 + (&v10 & 0x21AD7B28)) ^ 0x4AFFCD8C);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = v4;
  v16 = v3;
  v11 = v8 + (v6 ^ 0x1C576372) + 2142240416 + ((2 * v6) & 0xBEFD8FFE ^ 0x8651091A);
  v10 = v5;
  v15 = v8 ^ (v7 + 1820);
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_1E89A15E0 + v7) - 4))(&v10);
  *(_DWORD *)(a1 + 40) = v14;
  return result;
}

uint64_t sub_1CD125C14(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1CD125C2C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1CD125C44(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1CD125C5C(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  unsigned int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v2 = 460628867 * (((a1 | 0x167EA26) - a1 + (a1 & 0xFE9815D9)) ^ 0x4DF1685B);
  v3 = *(_DWORD *)(a1 + 20) - v2;
  v5 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 16) - v2 - ((2 * (*(_DWORD *)(a1 + 16) - v2) + 50606586) & 0x52C224C2) - 1427952802;
  v7 = -400126375 * (*(_DWORD *)(a1 + 24) + v2) - 1847956774;
  v8 = 1755732067
     * (((&v10 | 0x8E52AAAD) - &v10 + (&v10 & 0x71AD5550)) ^ 0x50941776);
  v10 = (v7 ^ 0xFFDDE664) + v8 + ((2 * v7) & 0xFFBBCCC8) + 1370734048;
  v12 = v8 ^ (v3 - 2138962107);
  v13 = v4;
  v14 = v6 ^ v8;
  v11 = v5;
  result = ((uint64_t (*)(unsigned int *))((char *)*(&off_1E89A15E0 + (v3 ^ 0x7F7DFD65)) - 8))(&v10);
  *(_DWORD *)(a1 + 28) = v15;
  return result;
}

void sub_1CD125DF4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v0 = qword_1EFA46A10 ^ (unint64_t)&v1 ^ qword_1EFA46A00;
  qword_1EFA46A10 = 536075833 * v0 + 0x3076D37E12EEFF1CLL;
  qword_1EFA46A00 = 536075833 * (v0 ^ 0x86C548EE6B3237FCLL);
  v3 = 1951 - 1759421093 * ((2 * (&v2 & 0x1AB9A500) - &v2 + 1699109631) ^ 0xD63BEAAB);
  v2 = (uint64_t)*(&off_1E89A15E0
                + ((57 * (qword_1EFA46A10 ^ 0xFC ^ qword_1EFA46A00)) ^ byte_1CDB89950[byte_1CDB85900[(57 * (qword_1EFA46A10 ^ 0xFC ^ qword_1EFA46A00))] ^ 0xF9])
                - 15);
  sub_1CD122A9C((uint64_t)&v2);
}

uint64_t sub_1CD125F1C(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  int v7;
  int v8;

  v1 = 1755732067 * ((2 * (result & 0x155053FA18C8728CLL) - result + 0x6AAFAC05E7378D73) ^ 0xB7040B3A39F130A8);
  v2 = *(_QWORD *)(result + 16) ^ v1;
  v3 = *(_QWORD *)(result + 8) - v1;
  v4 = v3 > v2;
  v5 = v3 == v2;
  v6 = v4;
  if (((*(_DWORD *)(result + 32) - 1755732067 * ((2 * (result & 0x18C8728C) - (_DWORD)result - 415789709) ^ 0x39F130A8)) & 1) != 0)
    v7 = v6;
  else
    v7 = v5;
  if (v7)
    v8 = *(_DWORD *)(result + 24) + 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8);
  else
    v8 = *(_DWORD *)(result + 28) - 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8);
  *(_DWORD *)result = *(_DWORD *)(result + 4) ^ (1755732067
                                               * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8)) ^ v8;
  return result;
}

uint64_t sub_1CD125FBC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 ^ (235795823 * ((2 * (a1 & 0x5AD4AFC8) - a1 + 623595575) ^ 0xB186196E));
  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v5 = v1
     + 1225351577
     * ((2 * ((&v5 ^ 0x618AC2C7) & 0x400DFC4D) - (&v5 ^ 0x618AC2C7) - 1074658382) ^ 0xFDE21963)
     + 1882357917;
  v6 = v2;
  v7 = v3;
  return ((uint64_t (*)(unsigned int *))*(&off_1E89A15E0 + (int)(v1 ^ 0x8FCD81B4)))(&v5);
}

uint64_t sub_1CD1260C0(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = 1374699841 * (a1 ^ 0x6DF41809);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)a1;
  v7 = 1224239923 * ((((2 * &v10) | 0x912C61DA) - &v10 + 929681171) ^ 0x3A25CD3A);
  v8 = (*(_DWORD *)(a1 + 8) ^ v2) - 368400168;
  v11 = v2 + *(_DWORD *)(a1 + 56) - v7 - 707766453;
  v16 = v8 + v7 + 869;
  v13 = v3;
  v14 = v5;
  v10 = v6;
  v12 = v4;
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_1E89A15E0 + v8) - 4))(&v10);
  *(_DWORD *)(a1 + 24) = v15;
  return result;
}

void sub_1CD1261D8()
{
  unint64_t v0;
  unsigned int v1;
  _BYTE v2[8];
  char *v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v0 = (unint64_t)&v2[qword_1EFA46A00 ^ qword_1EFA45E38];
  qword_1EFA45E38 = 536075833 * v0 - 0x793AB71194CDC804;
  qword_1EFA46A00 = 536075833 * (v0 ^ 0x86C548EE6B3237FCLL);
  v3 = (char *)*(&off_1E89A15E0
               + ((57 * ((qword_1EFA46A00 - qword_1EFA45E38) ^ 0xFC)) ^ byte_1CDB85A00[byte_1CDB821A0[(57 * ((qword_1EFA46A00 - qword_1EFA45E38) ^ 0xFC))] ^ 0xCD])
               - 59);
  v4 = 1951 - 1759421093 * (((&v3 | 0x62E542B1) - (&v3 & 0x62E542B1)) ^ 0xD198F2E5);
  sub_1CD122A9C((uint64_t)&v3);
  v4 = 1951 - 1759421093 * ((((2 * &v3) | 0xD19EEED6) - &v3 - 1758426987) ^ 0xDBB2C73F);
  v3 = (char *)*(&off_1E89A15E0
               + ((57 * (qword_1EFA45E38 ^ 0xFC ^ qword_1EFA46A00)) ^ byte_1CDB8E540[byte_1CDB89850[(57 * (qword_1EFA45E38 ^ 0xFC ^ qword_1EFA46A00))] ^ 0x15])
               + 80)
     - 4;
  sub_1CD122A9C((uint64_t)&v3);
  v1 = 1225351577
     * (((&v3 ^ 0x9D172845 | 0xE551A89D)
       - (&v3 ^ 0x9D172845)
       + ((&v3 ^ 0x9D172845) & 0x1AAE5760)) ^ 0x5BDC58CE);
  LODWORD(v3) = v1 + 336;
  BYTE4(v3) = v1 ^ 0x7D;
  sub_1CD0EEC54((uint64_t)&v3);
}

void sub_1CD126400(_DWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)*(&off_1E89A15E0
                  + (int)((*a1 ^ (535753261
                                * ((1711628207 - (a1 | 0x66055FAF) + (a1 | 0x99FAA050)) ^ 0x930EAE7F)))
                        - 426523007));
  v3 = (3804331 * (&v2 ^ 0x7ED525F6)) ^ ((*a1 ^ (535753261
                                                             * ((1711628207
                                                               - (a1 | 0x66055FAF)
                                                               + (a1 | 0x99FAA050)) ^ 0x930EAE7F)))
                                                     - 426522727);
  v2 = v1;
  sub_1CD101F2C((uint64_t)&v2);
}

void significantTimeDidChangeNotification(uint64_t a1, void *a2, uint64_t a3)
{
  id v4;
  void *v5;
  NSObject *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  HMFGetOSLogHandle();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138543618;
    v9 = v7;
    v10 = 2112;
    v11 = a3;
    _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_INFO, "%{public}@System time changed %@", (uint8_t *)&v8, 0x16u);

  }
  objc_autoreleasePoolPop(v5);
  objc_msgSend(v4, "_handleSignificantTimeChange");

}

void sub_1CD128A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCameraUserSettingsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 12) |= 2u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isOwner;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isOwner;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isOwner;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 12) |= 4u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isSharingFaceClassificationsEnabled;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isSharingFaceClassificationsEnabled;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isSharingFaceClassificationsEnabled;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 12) |= 1u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isImportingFromPhotoLibraryEnabled;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        v20 = 0;
        v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isImportingFromPhotoLibraryEnabled;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isImportingFromPhotoLibraryEnabled;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      v20 = 0;
LABEL_50:
    *(_BYTE *)(a1 + *v25) = v20 != 0;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD12BCC4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD12BD34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD12BD9C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD12E110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitMultiUserSettingsValueByKeyPathReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void *v32;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_39;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_41;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_41:
          *(_DWORD *)(a1 + 32) = v19;
          continue;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 24;
          goto LABEL_37;
        case 3u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          break;
        case 4u:
          PBReaderReadData();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 16;
LABEL_37:
          v32 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0)
          goto LABEL_43;
        v26 += 7;
        v14 = v27++ >= 9;
        if (v14)
        {
          v28 = 0;
          goto LABEL_45;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
      if (*(_BYTE *)(a2 + *v5))
        v28 = 0;
LABEL_45:
      *(_QWORD *)(a1 + 8) = v28;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD13340C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1334E4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD13358C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD133624(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1336A8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD13370C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD133788(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD133804(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD137984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1CD139668(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_1CD13D89C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ____shouldFilterHandle_block_invoke()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0C99E60];
  v1 = objc_alloc(MEMORY[0x1E0D343A8]);
  v2 = (void *)objc_msgSend(v1, "initWithUnprefixedURI:", *MEMORY[0x1E0D343E0]);
  v8[0] = v2;
  v3 = objc_alloc(MEMORY[0x1E0D343A8]);
  v4 = (void *)objc_msgSend(v3, "initWithUnprefixedURI:", *MEMORY[0x1E0D343E8]);
  v8[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setWithArray:", v5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)__shouldFilterHandle_blacklistedURIs;
  __shouldFilterHandle_blacklistedURIs = v6;

}

void sub_1CD147E54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __HMDShortcutActionInitializeWithSerializedShortcut(void *a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  objc_class *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v4)
  {
    objc_storeStrong(v3 + 3, a2);
    if (!WorkflowKitLibraryCore_frameworkLibrary)
    {
      v19 = xmmword_1E89A2500;
      v20 = 0;
      WorkflowKitLibraryCore_frameworkLibrary = _sl_dlopen();
    }
    if (WorkflowKitLibraryCore_frameworkLibrary)
    {
      v15 = 0;
      v16 = &v15;
      v17 = 0x2050000000;
      v5 = (void *)getWFHomeWorkflowClass_softClass;
      v18 = getWFHomeWorkflowClass_softClass;
      if (!getWFHomeWorkflowClass_softClass)
      {
        *(_QWORD *)&v19 = MEMORY[0x1E0C809B0];
        *((_QWORD *)&v19 + 1) = 3221225472;
        v20 = __getWFHomeWorkflowClass_block_invoke;
        v21 = &unk_1E89BCDA8;
        v22 = &v15;
        __getWFHomeWorkflowClass_block_invoke((uint64_t)&v19);
        v5 = (void *)v16[3];
      }
      v6 = objc_retainAutorelease(v5);
      _Block_object_dispose(&v15, 8);
      v7 = [v6 alloc];
      v8 = objc_msgSend(v7, "initWithData:", v4, v15);
      v9 = v3[4];
      v3[4] = (id)v8;

      v15 = 0;
      v16 = &v15;
      v17 = 0x2050000000;
      v10 = (void *)getWFHomeWorkflowControllerClass_softClass;
      v18 = getWFHomeWorkflowControllerClass_softClass;
      if (!getWFHomeWorkflowControllerClass_softClass)
      {
        *(_QWORD *)&v19 = MEMORY[0x1E0C809B0];
        *((_QWORD *)&v19 + 1) = 3221225472;
        v20 = __getWFHomeWorkflowControllerClass_block_invoke;
        v21 = &unk_1E89BCDA8;
        v22 = &v15;
        __getWFHomeWorkflowControllerClass_block_invoke((uint64_t)&v19);
        v10 = (void *)v16[3];
      }
      v11 = objc_retainAutorelease(v10);
      _Block_object_dispose(&v15, 8);
      v12 = [v11 alloc];
      v13 = objc_msgSend(v12, "initWithWorkflow:", v3[4], v15);
      v14 = v3[5];
      v3[5] = (id)v13;

    }
  }

}

void sub_1CD1488DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

Class __getWFHomeWorkflowClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  WorkflowKitLibrary();
  result = objc_getClass("WFHomeWorkflow");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFHomeWorkflowClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)__getWFHomeWorkflowControllerClass_block_invoke(v3);
  }
  return result;
}

void __getWFHomeWorkflowControllerClass_block_invoke(uint64_t a1)
{
  WorkflowKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFHomeWorkflowController");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFHomeWorkflowControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    WorkflowKitLibrary();
  }
}

void WorkflowKitLibrary()
{
  void *v0;

  if (!WorkflowKitLibraryCore_frameworkLibrary)
  {
    WorkflowKitLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!WorkflowKitLibraryCore_frameworkLibrary)
    {
      v0 = (void *)abort_report_np();
      free(v0);
    }
  }
}

void sub_1CD151204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDResetConfigPostCleanupStepsToString(uint64_t a1)
{
  __int16 v1;
  __CFString *v2;
  void *v3;
  void *v4;

  if (!a1)
  {
    v2 = CFSTR("Unknown");
    return v2;
  }
  v1 = a1;
  if (a1 != -1)
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = v3;
    if ((v1 & 2) != 0)
    {
      objc_msgSend(v3, "addObject:", CFSTR("working store"));
      if ((v1 & 4) == 0)
      {
LABEL_7:
        if ((v1 & 8) == 0)
          goto LABEL_8;
        goto LABEL_18;
      }
    }
    else if ((v1 & 4) == 0)
    {
      goto LABEL_7;
    }
    objc_msgSend(v4, "addObject:", CFSTR("cloud store"));
    if ((v1 & 8) == 0)
    {
LABEL_8:
      if ((v1 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_19;
    }
LABEL_18:
    objc_msgSend(v4, "addObject:", CFSTR("local store"));
    if ((v1 & 0x10) == 0)
    {
LABEL_9:
      if ((v1 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_20;
    }
LABEL_19:
    objc_msgSend(v4, "addObject:", CFSTR("shared cloud store"));
    if ((v1 & 0x20) == 0)
    {
LABEL_10:
      if ((v1 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_21;
    }
LABEL_20:
    objc_msgSend(v4, "addObject:", CFSTR("HH1 keyed archive"));
    if ((v1 & 0x40) == 0)
    {
LABEL_11:
      if ((v1 & 0x80) == 0)
        goto LABEL_12;
      goto LABEL_22;
    }
LABEL_21:
    objc_msgSend(v4, "addObject:", CFSTR("HH1 SQL store"));
    if ((v1 & 0x80) == 0)
    {
LABEL_12:
      if ((v1 & 0x100) == 0)
      {
LABEL_14:
        objc_msgSend(v4, "componentsJoinedByString:", CFSTR(", "));
        v2 = (__CFString *)objc_claimAutoreleasedReturnValue();

        return v2;
      }
LABEL_13:
      objc_msgSend(v4, "addObject:", CFSTR("client store"));
      goto LABEL_14;
    }
LABEL_22:
    objc_msgSend(v4, "addObject:", CFSTR("everything except demo mode"));
    if ((v1 & 0x100) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
  v2 = CFSTR("everything");
  return v2;
}

void sub_1CD158EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1590CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1592A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD159BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD159F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD15A5D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD15A7A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD162550(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD172F60(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD17389C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD173914(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD17398C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1739F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1784B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4886(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4887(uint64_t a1)
{

}

id arrayToString(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("\n %@ ["), v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "appendString:", v6);

  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v7 = v3;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v19;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v19 != v10)
          objc_enumerationMutation(v7);
        v12 = (void *)MEMORY[0x1E0CB3940];
        objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v11), "descriptionWithIndent:", v4);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "stringWithFormat:", CFSTR(" %@"), v13);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "appendString:", v14);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    }
    while (v9);
  }

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("\n %@ ]"), v4);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "appendString:", v15);

  v16 = (void *)objc_msgSend(v5, "copy");
  return v16;
}

BOOL checkForParseResult(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t *v11;
  uint64_t *v13;

  v13 = &a10;
  if (!a9)
    return 0;
  v10 = 0;
  while (a1 - 1 != v10)
  {
    v11 = v13++;
    ++v10;
    if (!*v11)
      return v10 >= a1;
  }
  return 1;
}

void sub_1CD18EC58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD18F0CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD18F270(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD18F4F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD18FE4C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD19063C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitMessageLocationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 48) |= 8u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_52;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_54;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_52:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_54:
          *(_QWORD *)(a1 + 32) = v20;
          continue;
        case 2u:
          *(_BYTE *)(a1 + 48) |= 4u;
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v47 = 24;
          goto LABEL_70;
        case 3u:
          *(_BYTE *)(a1 + 48) |= 2u;
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v47 = 16;
          goto LABEL_70;
        case 4u:
          *(_BYTE *)(a1 + 48) |= 1u;
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v47 = 8;
LABEL_70:
          *(_QWORD *)(a1 + v47) = v28;
          continue;
        case 5u:
          v33 = 0;
          v34 = 0;
          v35 = 0;
          *(_BYTE *)(a1 + 48) |= 0x20u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v38;
              v35 |= (unint64_t)(v39 & 0x7F) << v33;
              if (v39 < 0)
              {
                v33 += 7;
                v15 = v34++ >= 9;
                if (v15)
                {
                  LODWORD(v35) = 0;
                  goto LABEL_58;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v35) = 0;
LABEL_58:
          v46 = 44;
          goto LABEL_63;
        case 6u:
          v40 = 0;
          v41 = 0;
          v35 = 0;
          *(_BYTE *)(a1 + 48) |= 0x10u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v42 = *v3;
        v43 = *(_QWORD *)(a2 + v42);
        v44 = v43 + 1;
        if (v43 == -1 || v44 > *(_QWORD *)(a2 + *v4))
          break;
        v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
        *(_QWORD *)(a2 + v42) = v44;
        v35 |= (unint64_t)(v45 & 0x7F) << v40;
        if ((v45 & 0x80) == 0)
          goto LABEL_60;
        v40 += 7;
        v15 = v41++ >= 9;
        if (v15)
        {
          LODWORD(v35) = 0;
          goto LABEL_62;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v35) = 0;
LABEL_62:
      v46 = 40;
LABEL_63:
      *(_DWORD *)(a1 + v46) = v35;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD194DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

void __languageChanged()
{
  id v0;

  +[HMDMainDriver driver](HMDMainDriver, "driver");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "localeChanged");

}

void sub_1CD198D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1A51B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1A54F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1A6DC8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDRemoteLoginAccountTypeAsString(uint64_t a1)
{
  if (!a1)
    return CFSTR("HMDRemoteLoginAccountTypeITunes");
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDRemoteLoginAccountType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1CD1A9EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8987(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8988(uint64_t a1)
{

}

uint64_t HMDRemoteEventRouterProtoConnectResponseReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  id v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v17 = objc_alloc_init(MEMORY[0x1E0D32D70]);
        objc_msgSend(a1, "addCachedEvents:", v17);
        if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD1AE514(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1AE5E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1AE7B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1AE820(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1B00F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1B04D4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1B39C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1B7C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,id *location)
{
  id *v44;
  uint64_t v45;

  objc_destroyWeak(v44);
  objc_destroyWeak((id *)(v45 - 144));
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v45 - 168));
  _Unwind_Resume(a1);
}

void sub_1CD1B8DA0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1B8F9C(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1CD1B908C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1B911C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1B91AC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1B9270(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1BA0A0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1BA4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1CD1BF430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id *location,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  id a70;

  objc_destroyWeak(location);
  objc_destroyWeak(&a70);
  _Unwind_Resume(a1);
}

void sub_1CD1C69FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1C7A08(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1CD1C7CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1C9118(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1C91EC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1C9264(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1C96A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD1C9780(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD1CA1C0(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD1CB238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1CFA74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1D2E10(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1D4784(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1D4CAC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1D50B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1D6594(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1D7468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1D7868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1D7A2C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1D8220(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD1DCC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD1DD00C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1DDB24(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1DE790(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1DEA28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1E044C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1E1EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1E4ADC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD1E4D98(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1E53F8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1E5A6C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1E700C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD1EA6D8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_1CD1EB36C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1EDF10(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1EDFB4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD1F19F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_1CD1F21A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  id *v28;
  id *v29;

  objc_destroyWeak(v28);
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1F54C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1F6078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,id location)
{
  id *v45;

  objc_destroyWeak(v45);
  objc_destroyWeak(&location);
  objc_destroyWeak(a14);
  objc_destroyWeak(&a38);
  _Unwind_Resume(a1);
}

void sub_1CD1F773C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id location,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;

  _Block_object_dispose(&a65, 8);
  _Unwind_Resume(a1);
}

void sub_1CD1F8880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1F95C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 176));
  _Unwind_Resume(a1);
}

void sub_1CD1FD268(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x260]);
  _Unwind_Resume(a1);
}

void sub_1CD1FE2A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_1CD1FED38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,id location)
{
  id *v54;

  objc_destroyWeak(v54);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD1FF77C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD200C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2014AC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1CD201A88(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD2021E8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_1CD202454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD202D40(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 48));
  objc_destroyWeak((id *)(v3 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD203CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,id location)
{
  id *v54;

  objc_destroyWeak(v54);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD20498C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD204C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD20615C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  _Block_object_dispose(&a55, 8);
  _Unwind_Resume(a1);
}

void sub_1CD206EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD20722C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD208550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2089FC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_1CD208D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD209580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD20AFF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD20E29C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD21A028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1CD21ADF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD21B238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a20);
  _Unwind_Resume(a1);
}

void sub_1CD21C34C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD21CDA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD222674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD222B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;
  uint64_t v27;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1CD222E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD223044(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1CD2231F8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1CD2234C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  id *v28;

  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD223750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD223E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id a38)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a38);
  _Unwind_Resume(a1);
}

void sub_1CD2243B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  id *v40;
  uint64_t v41;

  objc_destroyWeak(v40);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose(&a40, 8);
  _Block_object_dispose((const void *)(v41 - 200), 8);
  _Block_object_dispose((const void *)(v41 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1CD2246C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  id *v12;
  uint64_t v13;

  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v13 - 112));
  _Unwind_Resume(a1);
}

void sub_1CD224A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
  id *v11;
  id *v12;
  uint64_t v13;

  objc_destroyWeak(v11);
  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v13 - 112));
  _Unwind_Resume(a1);
}

void sub_1CD224B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD224BF4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD224D3C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD224DCC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD224E34(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD224FD8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD225068(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD22531C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD225EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  id location;

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2260E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2263AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2268C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD226A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2271A0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD2273DC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD227458(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD227510(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD227968(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD227D30(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD2285D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD228654(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD2286CC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD228758(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD22A840(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD22E80C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD22EAA4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD22F238(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD22FA3C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD22FE44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11)
{
  id *v11;
  id *v12;

  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(a11);
  _Unwind_Resume(a1);
}

void sub_1CD22FE94()
{
  JUMPOUT(0x1CD22FE84);
}

void sub_1CD2304C4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10535(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10536(uint64_t a1)
{

}

void sub_1CD230A9C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD23117C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2314BC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2318FC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD231D68(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD23241C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD232990(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void __transactionHomeSettingsUpdated(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  int v16;
  void *v17;
  id v18;

  v18 = a1;
  v5 = a2;
  v6 = a3;
  objc_msgSend(v6, "transactionResult");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setProperties");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v8, "containsObject:", CFSTR("automaticSoftwareUpdateEnabled")) & 1) != 0)
  {
    v9 = objc_msgSend(v18, "isAutomaticSoftwareUpdateEnabled");
    objc_msgSend(v5, "automaticSoftwareUpdateEnabled");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "BOOLValue");

    if (v9 != v11)
    {
      objc_msgSend(v5, "automaticSoftwareUpdateEnabled");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setAutomaticSoftwareUpdateEnabled:", objc_msgSend(v12, "BOOLValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  else
  {

  }
  objc_msgSend(v5, "setProperties");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v13, "containsObject:", CFSTR("automaticThirdPartyAccessorySoftwareUpdateEnabled")) & 1) != 0)
  {
    v14 = objc_msgSend(v18, "isAutomaticThirdPartyAccessorySoftwareUpdateEnabled");
    objc_msgSend(v5, "automaticThirdPartyAccessorySoftwareUpdateEnabled");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v15, "BOOLValue");

    if (v14 != v16)
    {
      objc_msgSend(v5, "automaticThirdPartyAccessorySoftwareUpdateEnabled");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setAutomaticThirdPartyAccessorySoftwareUpdateEnabled:", objc_msgSend(v17, "BOOLValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  else
  {

  }
  objc_msgSend(v6, "respondWithPayload:", 0);

}

void __transactionHomeMediaSettingsUpdated(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  void *v14;
  int v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  char v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;

  v29 = a1;
  v5 = a2;
  v6 = a3;
  objc_msgSend(v6, "transactionResult");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setProperties");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v8, "containsObject:", CFSTR("minimumMediaUserPrivilege")) & 1) != 0)
  {
    v9 = objc_msgSend(v29, "minimumMediaUserPrivilege");
    objc_msgSend(v5, "minimumMediaUserPrivilege");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "unsignedIntegerValue");

    if (v9 != v11)
    {
      objc_msgSend(v5, "minimumMediaUserPrivilege");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "setMinimumMediaUserPrivilege:", objc_msgSend(v12, "unsignedIntegerValue"));

      objc_msgSend(v7, "markChanged");
      v13 = 1;
      goto LABEL_6;
    }
  }
  else
  {

  }
  v13 = 0;
LABEL_6:
  objc_msgSend(v5, "setProperties");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v14, "containsObject:", CFSTR("mediaPeerToPeerEnabled")) & 1) != 0)
  {
    v15 = objc_msgSend(v29, "isMediaPeerToPeerEnabled");
    objc_msgSend(v5, "mediaPeerToPeerEnabled");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "BOOLValue");

    if (v15 != v17)
    {
      objc_msgSend(v5, "mediaPeerToPeerEnabled");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "setMediaPeerToPeerEnabled:", objc_msgSend(v18, "BOOLValue"));

      objc_msgSend(v7, "markChanged");
      v13 = 1;
    }
  }
  else
  {

  }
  objc_msgSend(v5, "setProperties");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v19, "containsObject:", CFSTR("mediaPassword")))
  {

LABEL_14:
    if (!v13)
      goto LABEL_17;
    goto LABEL_15;
  }
  objc_msgSend(v29, "mediaPassword");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "mediaPassword");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = HMFEqualObjects();

  if ((v22 & 1) != 0)
    goto LABEL_14;
  objc_msgSend(v5, "mediaPassword");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "setMediaPassword:", v23);

  objc_msgSend(v7, "markChanged");
LABEL_15:
  if (objc_msgSend(v7, "source") == 1)
  {
    v24 = objc_msgSend(v29, "isMediaPeerToPeerEnabled");
    v25 = objc_msgSend(v29, "minimumMediaUserPrivilege");
    objc_msgSend(v29, "mediaPassword");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDWHAAccessControlEvent eventWithP2PEnabled:privilegeLevel:passwordSet:](HMDWHAAccessControlEvent, "eventWithP2PEnabled:privilegeLevel:passwordSet:", v24, v25, v26 != 0);
    v27 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v29, "logEventSubmitter");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "submitLogEvent:", v27);

  }
LABEL_17:
  objc_msgSend(v6, "respondWithPayload:", 0);

}

void __updateAccountHandleForCurrentUser(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  void *v21;
  _QWORD v22[4];
  id v23;
  uint8_t buf[4];
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "primaryHandle");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_msgSend(v3, "currentUser");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "accountHandle");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      if ((HMFEqualObjects() & 1) == 0)
      {
        v8 = (void *)objc_msgSend(v6, "newModelWithChangeType:", 2);
        objc_msgSend(v8, "setAccountHandle:", v5);
        +[HMDAccountHandleFormatter defaultFormatter](HMDAccountHandleFormatter, "defaultFormatter");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "stringForObjectValue:", v5);
        v10 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v8, "setUserID:", v10);
        objc_msgSend(v3, "backingStore");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "transaction:options:", CFSTR("HMDAppleAccountManagerAccountUpdatedNotification"), v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v13, "add:withMessage:", v8, 0);
        v22[0] = MEMORY[0x1E0C809B0];
        v22[1] = 3221225472;
        v22[2] = ____updateAccountHandleForCurrentUser_block_invoke;
        v22[3] = &unk_1E89C2350;
        v23 = v3;
        objc_msgSend(v13, "run:", v22);

      }
    }
    else
    {
      v18 = (void *)MEMORY[0x1D17BA0A0]();
      v19 = v3;
      HMFGetOSLogHandle();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v25 = v21;
        _os_log_impl(&dword_1CD062000, v20, OS_LOG_TYPE_ERROR, "%{public}@Home does not currently have a user account. Not attempting to update handle.", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v18);
    }

  }
  else
  {
    v14 = (void *)MEMORY[0x1D17BA0A0]();
    v15 = v3;
    HMFGetOSLogHandle();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v25 = v17;
      _os_log_impl(&dword_1CD062000, v16, OS_LOG_TYPE_INFO, "%{public}@Cannot update home current user account handle because primary handle cannot be determined", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v14);
  }

}

void ____updateAccountHandleForCurrentUser_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  int v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    v4 = (void *)MEMORY[0x1D17BA0A0]();
    v5 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = 138543362;
      v9 = v7;
      _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to change account handle for current user", (uint8_t *)&v8, 0xCu);

    }
    objc_autoreleasePoolPop(v4);
  }

}

void sub_1CD233CDC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD236288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __decodeAndVerifyCurrentUser(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  int v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "uuidForKey:", CFSTR("kUserUUIDKey"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_msgSend(v3, "currentUser");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "uuid");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "hmf_isEqualToUUID:", v5);

    if ((v8 & 1) != 0)
    {
      v9 = v6;
    }
    else
    {
      v11 = (void *)MEMORY[0x1D17BA0A0]();
      v12 = v3;
      HMFGetOSLogHandle();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = 138543618;
        v18 = v14;
        v19 = 2112;
        v20 = v5;
        _os_log_impl(&dword_1CD062000, v13, OS_LOG_TYPE_ERROR, "%{public}@Specified user identifier does not match current user: %@", (uint8_t *)&v17, 0x16u);

      }
      objc_autoreleasePoolPop(v11);
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 48);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "respondWithError:", v15);

      v9 = 0;
    }

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 27);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "respondWithError:", v10);

    v9 = 0;
  }

  return v9;
}

id HMDSecureAccessErrorCodeForMessage(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  int v5;
  int v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v3 = a1;
  if ((objc_msgSend(v3, "isEntitledForSPIAccess") & 1) != 0)
  {
    v4 = 2003;
  }
  else
  {
    v5 = objc_msgSend(v3, "isInternal");
    if (a2 == 1)
      v6 = 1;
    else
      v6 = v5;
    if (v6)
      v4 = 2003;
    else
      v4 = 10;
  }
  v7 = (void *)MEMORY[0x1E0CB35C8];
  if (+[HMDDeviceCapabilities supportsDeviceLock](HMDDeviceCapabilities, "supportsDeviceLock"))
    v8 = 82;
  else
    v8 = v4;
  objc_msgSend(v7, "hmErrorWithCode:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

void sub_1CD23A228(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD23B2AC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1CD23BD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
  id *v33;

  objc_destroyWeak(v33);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD23CC38(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD23CF04(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD23EE18(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD23F390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location)
{
  id *v39;

  objc_destroyWeak(v39);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2400D8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2401A4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void ____authenticateAcceptedOutgoingInvitation_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  _QWORD block[4];
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v8 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "workQueue");
    v9 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ____authenticateAcceptedOutgoingInvitation_block_invoke_2;
    block[3] = &unk_1E89A8FB8;
    v13 = v6;
    v10 = v8;
    v11 = *(_QWORD *)(a1 + 40);
    v14 = v10;
    v15 = v11;
    v19 = *(_QWORD *)(a1 + 56);
    v16 = v5;
    v17 = *(id *)(a1 + 48);
    v18 = *(id *)(a1 + 32);
    dispatch_async(v9, block);

  }
  else
  {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }

}

uint64_t ____authenticateAcceptedOutgoingInvitation_block_invoke_3821(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  const char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t result;
  int v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  v3 = (void *)MEMORY[0x1D17BA0A0]();
  v4 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v2)
  {
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      goto LABEL_7;
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 138543362;
    v13 = v7;
    v8 = "%{public}@Failed to authenticate invitation";
    v9 = v6;
    v10 = OS_LOG_TYPE_ERROR;
  }
  else
  {
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      goto LABEL_7;
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 138543362;
    v13 = v7;
    v8 = "%{public}@Authenticated invitation after resolving";
    v9 = v6;
    v10 = OS_LOG_TYPE_DEFAULT;
  }
  _os_log_impl(&dword_1CD062000, v9, v10, v8, (uint8_t *)&v12, 0xCu);

LABEL_7:
  objc_autoreleasePoolPop(v3);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
  return result;
}

void ____authenticateAcceptedOutgoingInvitation_block_invoke_2(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  char v11;
  void *v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  int v24;
  void *v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a1 + 32))
  {
    v2 = (void *)MEMORY[0x1D17BA0A0]();
    v3 = *(id *)(a1 + 40);
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 48), "shortDescription");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40);
      v24 = 138543874;
      v25 = v5;
      v26 = 2112;
      v27 = v6;
      v28 = 2112;
      v29 = v7;
      _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_ERROR, "%{public}@Failed to resolve handle, %@, with error: %@", (uint8_t *)&v24, 0x20u);

    }
    objc_autoreleasePoolPop(v2);
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    v10 = *(_QWORD *)(v8 + 40);
    v9 = (id *)(v8 + 40);
    if (!v10)
      objc_storeStrong(v9, *(id *)(a1 + 32));
  }
  else
  {
    v11 = objc_msgSend(*(id *)(a1 + 56), "isEqual:", *(_QWORD *)(a1 + 64));
    v12 = (void *)MEMORY[0x1D17BA0A0]();
    v13 = *(id *)(a1 + 40);
    HMFGetOSLogHandle();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = v14;
    if ((v11 & 1) != 0)
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 48), "shortDescription");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = 138543618;
        v25 = v16;
        v26 = 2112;
        v27 = v17;
        _os_log_impl(&dword_1CD062000, v15, OS_LOG_TYPE_INFO, "%{public}@Authenticated handle: %@", (uint8_t *)&v24, 0x16u);

      }
      objc_autoreleasePoolPop(v12);
    }
    else
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 64), "shortDescription");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 56), "shortDescription");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = 138543874;
        v25 = v18;
        v26 = 2112;
        v27 = v19;
        v28 = 2112;
        v29 = v20;
        _os_log_impl(&dword_1CD062000, v15, OS_LOG_TYPE_ERROR, "%{public}@Invitation response received from account, %@, expected: %@", (uint8_t *)&v24, 0x20u);

      }
      objc_autoreleasePoolPop(v12);
      if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40))
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 55);
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
        v23 = *(void **)(v22 + 40);
        *(_QWORD *)(v22 + 40) = v21;

      }
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));
}

void sub_1CD24180C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD243F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD24508C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;

  _Block_object_dispose(&a65, 8);
  _Unwind_Resume(a1);
}

void sub_1CD2453A4(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD246178(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD246460(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void __handleAccessoryReachabilityRegistration(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void (**v18)(_QWORD, _QWORD, _QWORD);
  void *v19;
  id v20;
  NSObject *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  NSObject *v41;
  void *v42;
  uint64_t j;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t k;
  void *v51;
  void *v52;
  int v53;
  _BOOL8 v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  NSObject *v59;
  void *v60;
  _BOOL8 v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  id v69;
  NSObject *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void (**v81)(_QWORD, _QWORD, _QWORD);
  void *v82;
  id v83;
  NSObject *v84;
  void *v85;
  void *v86;
  uint64_t v87;
  id v88;
  id v89;
  void *v90;
  void *v91;
  void (**v92)(_QWORD, _QWORD, _QWORD);
  void *v93;
  void *v94;
  void *v95;
  id v96;
  void *v97;
  id obj;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  _QWORD v113[2];
  _QWORD v114[2];
  void *v115;
  void *v116;
  _BYTE v117[128];
  _BYTE v118[128];
  uint8_t v119[128];
  uint8_t buf[4];
  void *v121;
  __int16 v122;
  id v123;
  __int16 v124;
  void *v125;
  uint64_t v126;

  v126 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  if (!objc_msgSend(v6, "isRemote") || (objc_msgSend(v6, "isSecureRemote") & 1) != 0)
  {
    objc_msgSend(v6, "stringForKey:", CFSTR("kHomeUUID"));
    v7 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "uuid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "UUIDString");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v92 = (void (**)(_QWORD, _QWORD, _QWORD))v7;
    LOBYTE(v7) = objc_msgSend((id)v7, "isEqualToString:", v9);

    if ((v7 & 1) != 0)
    {
      v93 = 0;
    }
    else
    {
      v10 = (void *)MEMORY[0x1D17BA0A0]();
      v11 = v5;
      HMFGetOSLogHandle();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "uuid");
        v14 = v6;
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "UUIDString");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v121 = v13;
        v122 = 2112;
        v123 = v92;
        v124 = 2112;
        v125 = v16;
        _os_log_impl(&dword_1CD062000, v12, OS_LOG_TYPE_INFO, "%{public}@Home does not match, received: %@, current: %@", buf, 0x20u);

        v6 = v14;
      }

      objc_autoreleasePoolPop(v10);
      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0CB8C70], 2, 0);
      v93 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(v6, "responseHandler");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (v17)
    {
      objc_msgSend(v6, "responseHandler");
      v18 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
      ((void (**)(_QWORD, void *, _QWORD))v18)[2](v18, v93, 0);

    }
    v19 = (void *)MEMORY[0x1D17BA0A0]();
    v20 = v5;
    HMFGetOSLogHandle();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v121 = v22;
      v122 = 2112;
      v123 = v20;
      _os_log_impl(&dword_1CD062000, v21, OS_LOG_TYPE_INFO, "%{public}@Registering for remote reachability for home: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v19);
    objc_msgSend(v6, "remoteSourceID");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDDevice deviceWithDestination:](HMDDevice, "deviceWithDestination:", v23);
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = (void *)v24;
    if (a3)
    {
      v90 = v23;
      v91 = (void *)v24;
      v88 = v6;
      v89 = v5;
      objc_msgSend(v6, "messagePayload");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "hmf_arrayForKey:", CFSTR("kAccessoriesListKey"));
      v27 = (id)objc_claimAutoreleasedReturnValue();

      if (!v27)
      {
        v28 = (void *)MEMORY[0x1E0C99DE8];
        objc_msgSend(v20, "accessories");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "arrayWithCapacity:", objc_msgSend(v29, "count"));
        v30 = (void *)objc_claimAutoreleasedReturnValue();

        v111 = 0u;
        v112 = 0u;
        v109 = 0u;
        v110 = 0u;
        objc_msgSend(v20, "accessories");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v32 = (void *)objc_msgSend(v31, "copy");

        v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v109, v119, 16);
        if (v33)
        {
          v34 = v33;
          v35 = *(_QWORD *)v110;
          do
          {
            for (i = 0; i != v34; ++i)
            {
              if (*(_QWORD *)v110 != v35)
                objc_enumerationMutation(v32);
              objc_msgSend(*(id *)(*((_QWORD *)&v109 + 1) + 8 * i), "uuid");
              v37 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v37, "UUIDString");
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v30, "addObject:", v38);

            }
            v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v109, v119, 16);
          }
          while (v34);
        }

        v27 = v30;
        v39 = (void *)MEMORY[0x1D17BA0A0]();
        v40 = v20;
        HMFGetOSLogHandle();
        v41 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v121 = v42;
          v122 = 2112;
          v123 = v27;
          _os_log_impl(&dword_1CD062000, v41, OS_LOG_TYPE_INFO, "%{public}@Registering for reachability notification for all accessories: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v39);

      }
      objc_msgSend(v20, "homeManager");
      v94 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v27, "count"));
      v97 = (void *)objc_claimAutoreleasedReturnValue();
      v105 = 0u;
      v106 = 0u;
      v107 = 0u;
      v108 = 0u;
      obj = v27;
      v100 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v105, v118, 16);
      if (v100)
      {
        v99 = *(_QWORD *)v106;
        v96 = v20;
        do
        {
          for (j = 0; j != v100; ++j)
          {
            if (*(_QWORD *)v106 != v99)
              objc_enumerationMutation(obj);
            v44 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDString:", *(_QWORD *)(*((_QWORD *)&v105 + 1) + 8 * j));
            if (v44)
            {
              v103 = 0u;
              v104 = 0u;
              v101 = 0u;
              v102 = 0u;
              objc_msgSend(v20, "accessories");
              v45 = (void *)objc_claimAutoreleasedReturnValue();
              v46 = (void *)objc_msgSend(v45, "copy");

              v47 = objc_msgSend(v46, "countByEnumeratingWithState:objects:count:", &v101, v117, 16);
              if (v47)
              {
                v48 = v47;
                v49 = *(_QWORD *)v102;
                while (2)
                {
                  for (k = 0; k != v48; ++k)
                  {
                    if (*(_QWORD *)v102 != v49)
                      objc_enumerationMutation(v46);
                    v51 = *(void **)(*((_QWORD *)&v101 + 1) + 8 * k);
                    objc_msgSend(v51, "uuid");
                    v52 = (void *)objc_claimAutoreleasedReturnValue();
                    v53 = objc_msgSend(v52, "isEqual:", v44);

                    if (v53)
                    {
                      if ((objc_msgSend(v51, "isReachable") & 1) != 0)
                      {
                        v54 = 1;
                      }
                      else
                      {
                        objc_msgSend(v94, "residentMesh");
                        v55 = (void *)objc_claimAutoreleasedReturnValue();
                        objc_msgSend(v55, "deviceForAccessory:residentOrder:reachableResidents:", v51, 1, 0);
                        v56 = (void *)objc_claimAutoreleasedReturnValue();
                        v54 = v56 != 0;

                      }
                      v57 = (void *)MEMORY[0x1D17BA0A0]();
                      v58 = v20;
                      HMFGetOSLogHandle();
                      v59 = objc_claimAutoreleasedReturnValue();
                      if (os_log_type_enabled(v59, OS_LOG_TYPE_INFO))
                      {
                        HMFGetLogIdentifier();
                        v60 = (void *)objc_claimAutoreleasedReturnValue();
                        objc_msgSend(v51, "uuid");
                        v61 = v54;
                        v62 = (void *)objc_claimAutoreleasedReturnValue();
                        objc_msgSend(v62, "UUIDString");
                        v95 = v57;
                        v63 = (void *)objc_claimAutoreleasedReturnValue();
                        *(_DWORD *)buf = 138543874;
                        v121 = v60;
                        v122 = 2112;
                        v123 = v63;
                        v124 = 1024;
                        LODWORD(v125) = v61;
                        _os_log_impl(&dword_1CD062000, v59, OS_LOG_TYPE_INFO, "%{public}@Updating reachability for accessory: %@ to: %d", buf, 0x1Cu);

                        v54 = v61;
                        v57 = v95;

                      }
                      objc_autoreleasePoolPop(v57);
                      objc_msgSend(v51, "uuid");
                      v64 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v64, "UUIDString");
                      v65 = (void *)objc_claimAutoreleasedReturnValue();
                      v115 = v65;
                      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v54);
                      v66 = (void *)objc_claimAutoreleasedReturnValue();
                      v116 = v66;
                      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v116, &v115, 1);
                      v67 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v97, "addObject:", v67);

                      v20 = v96;
                      goto LABEL_45;
                    }
                  }
                  v48 = objc_msgSend(v46, "countByEnumeratingWithState:objects:count:", &v101, v117, 16);
                  if (v48)
                    continue;
                  break;
                }
              }
LABEL_45:

            }
          }
          v100 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v105, v118, 16);
        }
        while (v100);
      }

      v5 = v89;
      v23 = v90;
      if (v90 && v91)
      {
        v68 = (void *)MEMORY[0x1D17BA0A0](objc_msgSend(v20, "_registerDeviceForReachabilityNotification:accessoryList:", v91, obj));
        v69 = v20;
        HMFGetOSLogHandle();
        v70 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v70, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v71 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v121 = v71;
          v122 = 2112;
          v123 = v90;
          _os_log_impl(&dword_1CD062000, v70, OS_LOG_TYPE_INFO, "%{public}@Sending current reachability to destination:%@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v68);
        v113[0] = CFSTR("kAccessoriesListKey");
        v72 = (void *)objc_msgSend(v97, "copy");
        v113[1] = CFSTR("kHomeUUID");
        v114[0] = v72;
        objc_msgSend(v69, "uuid");
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v73, "UUIDString");
        v74 = (void *)objc_claimAutoreleasedReturnValue();
        v114[1] = v74;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v114, v113, 2);
        v75 = (void *)objc_claimAutoreleasedReturnValue();

        +[HMDRemoteMessage messageWithName:identifier:messagePayload:](HMDRemoteMessage, "messageWithName:identifier:messagePayload:", CFSTR("kRemoteReachabilityChangedNotificationKey"), 0, v75);
        v76 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v94, "messageDispatcher");
        v77 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v69, "uuid");
        v78 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v91, "remoteDestinationString");
        v79 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v69, "workQueue");
        v80 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v77, "sendSecureMessage:target:userID:destination:responseQueue:responseHandler:", v76, v78, 0, v79, v80, 0);

        v23 = v90;
      }

      v6 = v88;
      v25 = v91;
    }
    else
    {
      objc_msgSend(v20, "_deregisterDeviceForReachabilityNotification:", v24);
    }

    v81 = v92;
    goto LABEL_56;
  }
  v82 = (void *)MEMORY[0x1D17BA0A0]();
  v83 = v5;
  HMFGetOSLogHandle();
  v84 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v84, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v85 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v121 = v85;
    v122 = 2112;
    v123 = v6;
    _os_log_impl(&dword_1CD062000, v84, OS_LOG_TYPE_DEFAULT, "%{public}@Message not supported: %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v82);
  objc_msgSend(v6, "responseHandler");
  v86 = (void *)objc_claimAutoreleasedReturnValue();

  if (v86)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 17);
    v87 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "responseHandler");
    v81 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    v93 = (void *)v87;
    v81[2](v81, v87, 0);
LABEL_56:

  }
}

void sub_1CD247408(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD248674(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x290]);
  _Unwind_Resume(a1);
}

uint64_t ____disassociateAccessoryIfSupported_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id __createAccessoryBrowserAddAccessoryCompletionHandler(id val, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  _QWORD v19[4];
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id location;

  objc_initWeak(&location, val);
  v9 = a2;
  v10 = a3;
  v11 = a4;
  v12 = a5;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke;
  v19[3] = &unk_1E89A55B0;
  v20 = v9;
  v21 = v11;
  v22 = v12;
  v13 = v12;
  v14 = v11;
  v15 = v9;
  objc_copyWeak(&v24, &location);
  v23 = v10;
  v16 = v10;
  v17 = _Block_copy(v19);

  objc_destroyWeak(&v24);
  objc_destroyWeak(&location);
  return v17;
}

void ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke(id *a1, void *a2, void *a3, uint64_t a4, unsigned int a5, unsigned int a6, void *a7, void *a8)
{
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id WeakRetained;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  NSObject *v30;
  void *v31;
  id v32;
  NSObject *v33;
  void *v34;
  id v35;
  id v36;
  NSObject *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  NSObject *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  void (**v56)(_QWORD, _QWORD, _QWORD);
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  void *context;
  void *contexta;
  void *contextb;
  id v68;
  id v70;
  _QWORD block[4];
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  id v80;
  uint8_t buf[4];
  void *v82;
  __int16 v83;
  id v84;
  __int16 v85;
  void *v86;
  __int16 v87;
  void *v88;
  __int16 v89;
  id v90;
  uint64_t v91;

  v91 = *MEMORY[0x1E0C80C00];
  v12 = a2;
  v70 = a3;
  v13 = a7;
  v68 = a8;
  objc_msgSend(a1[4], "accessoryUUID");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v70 && !v14)
    objc_msgSend(a1[4], "setAccessoryUUID:", v70);
  objc_msgSend(a1[5], "pairedToServer:certificationStatus:addedViaWAC:legacyWAC:", v12, a4, a5, a6);
  objc_msgSend(a1[5], "setAuthenticationMethod:", objc_msgSend(v12, "authMethod"));
  v15 = objc_alloc(MEMORY[0x1E0D28540]);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s(), %s:%ld"), "HMDAccessoryBrowserAddAccessoryCompletionHandler __createAccessoryBrowserAddAccessoryCompletionHandler(HMDHome *__weak, HMSetupAccessoryDescription *__strong, HMDUnpairedHAPAccessoryConfiguration *__strong, HMDAccessoryPairingEvent *__strong, HMFMessage *__strong)_block_invoke", "/Library/Caches/com.apple.xbs/Sources/HomeKit_executables_legacy/Sources/homed/Home/HMDHome.m", 11201);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1[6], "activity");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v80 = (id)objc_msgSend(v15, "initWithName:parent:", v16, v17);

  WeakRetained = objc_loadWeakRetained(a1 + 8);
  v19 = WeakRetained;
  if (!v13 && WeakRetained)
  {
    objc_msgSend(WeakRetained, "workQueue");
    v20 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke_3807;
    block[3] = &unk_1E89A5588;
    v72 = v80;
    v73 = v19;
    v74 = a1[4];
    v75 = a1[7];
    v76 = a1[5];
    v77 = v12;
    v79 = a4;
    v78 = a1[6];
    dispatch_async(v20, block);

    v21 = 0;
    v22 = v72;
    goto LABEL_37;
  }
  if (!WeakRetained)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 2);
    v23 = objc_claimAutoreleasedReturnValue();

    v13 = (id)v23;
  }
  objc_msgSend(a1[5], "vendorDetailsForReporting");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = v13;
  v21 = v24;
  v25 = v24;
  if (v19)
  {
    v25 = v24;
    if (objc_msgSend(v24, "code") == 2010)
    {
      objc_msgSend(v19, "threadNetworkID");
      v26 = (void *)objc_claimAutoreleasedReturnValue();

      if (v26)
        v27 = 2009;
      else
        v27 = 2010;
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmPrivateErrorWithCode:", v27);
      v25 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
  v28 = (void *)MEMORY[0x1D17BA0A0]();
  v29 = v19;
  HMFGetOSLogHandle();
  v30 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138544386;
    v82 = v31;
    v83 = 2112;
    v84 = v70;
    v85 = 2112;
    v86 = v21;
    v87 = 2112;
    v88 = v25;
    v89 = 2112;
    v90 = v68;
    _os_log_impl(&dword_1CD062000, v30, OS_LOG_TYPE_INFO, "%{public}@Add accessory completion handler for accessory uuid %@ error %@ mapped error %@ context %@", buf, 0x34u);

  }
  objc_autoreleasePoolPop(v28);
  if (objc_msgSend(a1[5], "isMatterAccessory") && objc_msgSend(a1[5], "isAddOperation"))
  {
    if (!v68)
    {
      context = (void *)MEMORY[0x1D17BA0A0]();
      v32 = v29;
      HMFGetOSLogHandle();
      v33 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v82 = v34;
        _os_log_impl(&dword_1CD062000, v33, OS_LOG_TYPE_ERROR, "%{public}@Matter pairing end context is nil", buf, 0xCu);

      }
      objc_autoreleasePoolPop(context);
    }
    if (!objc_msgSend(v68, "isCancelled"))
    {
      notifyMatterMetricPairingEnded(v29, v68);
      goto LABEL_29;
    }
    v35 = v29;
    v62 = v68;
    contexta = (void *)MEMORY[0x1D17BA0A0]();
    v36 = v35;
    HMFGetOSLogHandle();
    v37 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v82 = v38;
      v83 = 2112;
      v84 = v62;
      _os_log_impl(&dword_1CD062000, v37, OS_LOG_TYPE_INFO, "%{public}@Notifying matter metric pairing cancelled %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(contexta);
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    contextb = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(contextb, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], CFSTR("HMDMatterAccessoryPairingSubmitKey"));
    objc_msgSend(v62, "error");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(contextb, "setObject:forKeyedSubscript:", v39, CFSTR("HMDMatterAccessoryPairingFailureErrorKey"));

    objc_msgSend(v62, "sourceErrorDomain");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(contextb, "setObject:forKeyedSubscript:", v40, CFSTR("HMDMatterAccessoryPairingSourceErrorDomain"));

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = (void *)objc_msgSend(contextb, "copy");
    objc_msgSend(v41, "postNotificationName:object:userInfo:", CFSTR("HMDMatterAccessoryUpdatePairingMetricNotification"), 0, v42);

  }
  else
  {
    objc_msgSend(v29, "logEventSubmitter");
    v36 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "submitLogEvent:error:", a1[5], v25);
  }

LABEL_29:
  v43 = (void *)MEMORY[0x1D17BA0A0]();
  v44 = v29;
  HMFGetOSLogHandle();
  v45 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG))
  {
    HMFGetLogIdentifier();
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    v47 = a1[4];
    *(_DWORD *)buf = 138543874;
    v82 = v46;
    v83 = 2112;
    v84 = v47;
    v85 = 2112;
    v86 = v25;
    _os_log_impl(&dword_1CD062000, v45, OS_LOG_TYPE_DEBUG, "%{public}@Failed to add accessory %@ with error: %@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v43);
  v48 = v80;
  objc_msgSend(v12, "category");

  objc_msgSend(v22, "model");
  objc_msgSend(v22, "manufacturer");

  objc_msgSend(v22, "firmwareVersion");
  objc_msgSend(a1[5], "linkType");
  v49 = (id)HAPLinkTypeDescription();
  v50 = (id)HMFBooleanToString();
  v51 = (id)HMFBooleanToString();
  v52 = (id)objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a4);
  objc_msgSend(v25, "domain");

  objc_msgSend(v25, "code");
  objc_msgSend(a1[5], "isThreadAccessory");
  v53 = (id)HMFBooleanToString();
  objc_msgSend(a1[5], "accessorySupportsWoL");
  v54 = (id)HMFBooleanToString();

  objc_msgSend(a1[6], "responseHandler");
  v55 = (void *)objc_claimAutoreleasedReturnValue();

  if (v55)
  {
    objc_msgSend(a1[6], "responseHandler");
    v56 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, void *, _QWORD))v56)[2](v56, v25, 0);

  }
  if (v19)
  {
    objc_msgSend(v44, "_removePendingAccessoryAdd:", a1[4]);
    objc_msgSend(v44, "accessoryBrowser");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v57, "removePairingInformationForAccessoryServer:", v12);

    objc_msgSend(a1[7], "networkCredential");
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v58, "clientIdentifier");
    v59 = (void *)objc_claimAutoreleasedReturnValue();

    if (v59)
    {
      objc_msgSend(a1[7], "networkCredential");
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v60, "clientIdentifier");
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "_removeClientConfigurationWithIdentifier:", v61);

    }
  }

LABEL_37:
  __HMFActivityScopeLeave();

}

void sub_1CD24ABC8(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke_3807(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "begin");
  v2 = *(id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "_accessoryPairingDidComplete:configuration:pairingEvent:accessoryServer:certificationStatus:requestMessage:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 80));
  __HMFActivityScopeLeave();

}

void sub_1CD24AC6C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

id HMDHomeCreateAddAccessoryProgressHandler(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  _QWORD aBlock[4];
  id v14;
  id v15;
  id v16;
  id v17;
  id location;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_initWeak(&location, v5);
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __HMDHomeCreateAddAccessoryProgressHandler_block_invoke;
  aBlock[3] = &unk_1E89A48B0;
  v14 = v5;
  v8 = v5;
  objc_copyWeak(&v17, &location);
  v15 = v6;
  v16 = v7;
  v9 = v7;
  v10 = v6;
  v11 = _Block_copy(aBlock);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);
  return v11;
}

void sub_1CD24B108(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD24C0F0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD24C5F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD24D130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD24D70C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

uint64_t _mediaSystemsContainsAccessory(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  _QWORD v7[4];
  id v8;

  v3 = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = ___mediaSystemsContainsAccessory_block_invoke;
  v7[3] = &unk_1E89AA628;
  v8 = v3;
  v4 = v3;
  v5 = objc_msgSend(a1, "na_any:", v7);

  return v5;
}

uint64_t ___mediaSystemsContainsAccessory_block_invoke(uint64_t a1, void *a2)
{
  return _mediaSystemContainsAccessory(a2, *(void **)(a1 + 32));
}

uint64_t _mediaSystemContainsAccessory(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD v8[4];
  id v9;

  v3 = a2;
  objc_msgSend(a1, "components");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = ___mediaSystemContainsAccessory_block_invoke;
  v8[3] = &unk_1E89A5560;
  v9 = v3;
  v5 = v3;
  v6 = objc_msgSend(v4, "na_any:", v8);

  return v6;
}

uint64_t ___mediaSystemContainsAccessory_block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  objc_msgSend(a2, "accessory");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "uuid");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "uuid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v4, "hmf_isEqualToUUID:", v5);

  return v6;
}

void sub_1CD255F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD256034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD256358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD25646C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD256580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD256690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __notifyRegisteredIdentityRemoved(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  char isKindOfClass;
  void *v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  void *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    v6 = (void *)MEMORY[0x1D17BA0A0]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = 138543618;
      v25 = v9;
      v26 = 2112;
      v27 = v5;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Notifying of removed identity: %@", (uint8_t *)&v24, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", 3);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "identity");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setObject:forKeyedSubscript:", v11, CFSTR("HMDIdentityNotificationKey"));

    v12 = v5;
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();
    if ((isKindOfClass & 1) != 0)
      v14 = v12;
    else
      v14 = 0;
    v15 = v14;

    if ((isKindOfClass & 1) != 0)
    {
      objc_msgSend(v12, "device");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v16, CFSTR("HMDDeviceNotificationKey"));

    }
    v17 = v12;
    objc_opt_class();
    v18 = objc_opt_isKindOfClass();
    if ((v18 & 1) != 0)
      v19 = v17;
    else
      v19 = 0;
    v20 = v19;

    if ((v18 & 1) != 0)
    {
      objc_msgSend(v17, "account");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v21, CFSTR("HMDAccountNotificationKey"));

    }
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (void *)objc_msgSend(v10, "copy");
    objc_msgSend(v22, "postNotificationName:object:userInfo:", CFSTR("HMDIdentityRegistryRemovedIdentity"), v7, v23);

  }
}

void __removeRegisteredObjectForRegisteredIdentity(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  id v12;

  v8 = a1;
  v5 = a2;
  v6 = a3;
  if (v8 && v5 && v6)
  {
    objc_msgSend(v8, "lock");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = ____removeRegisteredObjectForRegisteredIdentity_block_invoke;
    v9[3] = &unk_1E89C20C8;
    v10 = v5;
    v11 = v6;
    v12 = v8;
    objc_msgSend(v7, "performBlock:", v9);

  }
}

void ____removeRegisteredObjectForRegisteredIdentity_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  int v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  int v10;
  void *v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "registeredObjects");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));

  objc_msgSend(*(id *)(a1 + 32), "registeredObjects");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "hmf_isEmpty");

  if (v4)
  {
    v5 = (void *)MEMORY[0x1D17BA0A0]();
    v6 = *(id *)(a1 + 48);
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = *(_QWORD *)(a1 + 32);
      v10 = 138543618;
      v11 = v8;
      v12 = 2112;
      v13 = v9;
      _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_INFO, "%{public}@Removing registered identity, %@", (uint8_t *)&v10, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 8), "removeObject:", *(_QWORD *)(a1 + 32));
    __notifyRegisteredIdentityRemoved(*(void **)(a1 + 48), *(void **)(a1 + 32));
  }
}

id __registeredIdentitiesForIdentity(void *a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  int v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  v6 = 0;
  if (v3 && v4)
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 0u;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v8 = v3[1];
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v18;
      do
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v18 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * i);
          objc_msgSend(v13, "identity", (_QWORD)v17);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = objc_msgSend(v14, "isEqual:", v5);

          if (v15)
            objc_msgSend(v7, "addObject:", v13);
        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      }
      while (v10);
    }

    v6 = (void *)objc_msgSend(v7, "copy");
  }

  return v6;
}

void __notifyRegisteredIdentityAdded(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  char isKindOfClass;
  void *v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  void *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    v6 = (void *)MEMORY[0x1D17BA0A0]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = 138543618;
      v25 = v9;
      v26 = 2112;
      v27 = v5;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Notifying of added identity: %@", (uint8_t *)&v24, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", 3);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "identity");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setObject:forKeyedSubscript:", v11, CFSTR("HMDIdentityNotificationKey"));

    v12 = v5;
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();
    if ((isKindOfClass & 1) != 0)
      v14 = v12;
    else
      v14 = 0;
    v15 = v14;

    if ((isKindOfClass & 1) != 0)
    {
      objc_msgSend(v12, "device");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v16, CFSTR("HMDDeviceNotificationKey"));

    }
    v17 = v12;
    objc_opt_class();
    v18 = objc_opt_isKindOfClass();
    if ((v18 & 1) != 0)
      v19 = v17;
    else
      v19 = 0;
    v20 = v19;

    if ((v18 & 1) != 0)
    {
      objc_msgSend(v17, "account");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v21, CFSTR("HMDAccountNotificationKey"));

    }
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (void *)objc_msgSend(v10, "copy");
    objc_msgSend(v22, "postNotificationName:object:userInfo:", CFSTR("HMDIdentityRegistryAddedIdentity"), v7, v23);

  }
}

void __registerObjectForRegisteredIdentity(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(id *);
  void *v17;
  id v18;
  id v19;
  id v20;
  id from;
  id v22;
  id location;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = v7;
  if (v5 && v6 && v7)
  {
    v9 = (void *)MEMORY[0x1D17BA0A0]();
    objc_msgSend(v6, "registeredObjects");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "containsObject:", v8);

    if ((v11 & 1) == 0)
    {
      objc_initWeak(&location, v5);
      objc_initWeak(&v22, v8);
      objc_initWeak(&from, v6);
      v14 = MEMORY[0x1E0C809B0];
      v15 = 3221225472;
      v16 = ____registerObjectForRegisteredIdentity_block_invoke;
      v17 = &unk_1E89B61C0;
      objc_copyWeak(&v18, &location);
      objc_copyWeak(&v19, &from);
      objc_copyWeak(&v20, &v22);
      objc_msgSend(v8, "setDeallocationBlock:", &v14);
      objc_msgSend(v8, "observedObject", v14, v15, v16, v17);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      if (v12)
      {
        objc_msgSend(v6, "registeredObjects");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "addObject:", v8);

      }
      else
      {
        __removeRegisteredObjectForRegisteredIdentity(v5, v6, v8);
      }
      objc_destroyWeak(&v20);
      objc_destroyWeak(&v19);
      objc_destroyWeak(&v18);
      objc_destroyWeak(&from);
      objc_destroyWeak(&v22);
      objc_destroyWeak(&location);
    }
    objc_autoreleasePoolPop(v9);
  }

}

void sub_1CD2586AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17, id a18)
{
  id *v18;
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void ____registerObjectForRegisteredIdentity_block_invoke(id *a1)
{
  id WeakRetained;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained(a1 + 4);
  v3 = objc_loadWeakRetained(a1 + 5);
  v4 = objc_loadWeakRetained(a1 + 6);
  v5 = v4;
  if (WeakRetained && v3 && v4)
  {
    v6 = (void *)MEMORY[0x1D17BA0A0]();
    v7 = WeakRetained;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138543618;
      v11 = v9;
      v12 = 2112;
      v13 = v3;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Registered object deallocated, removing object from identity: %@", (uint8_t *)&v10, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    __removeRegisteredObjectForRegisteredIdentity(v7, v3, v5);
  }

}

uint64_t __Block_byref_object_copy__11135(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11136(uint64_t a1)
{

}

void sub_1CD25FE88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD261444(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2621B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2623EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD262788(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2630E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2639C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD263A6C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD263E74(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2667B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD26DE50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD26F1F4(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x200], 8);
  _Unwind_Resume(a1);
}

void sub_1CD26FC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,id location)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&STACK[0x230], 8);
  _Unwind_Resume(a1);
}

void sub_1CD270B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,id location)
{
  id *v49;

  objc_destroyWeak(v49);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD271BD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1CD273230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id *location)
{
  uint64_t v27;

  objc_destroyWeak((id *)(v27 - 208));
  _Block_object_dispose((const void *)(v27 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1CD277F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,id location)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&STACK[0x250], 8);
  _Unwind_Resume(a1);
}

void sub_1CD27892C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x390], 8);
  _Unwind_Resume(a1);
}

void sub_1CD278F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *location, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a28);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__13024(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13025(uint64_t a1)
{

}

id actionResultForAction(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  void *v4;

  v1 = (objc_class *)MEMORY[0x1E0D880B0];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  objc_msgSend(v2, "aceId");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "setRequestActionId:", v4);
  return v3;
}

uint64_t isActivationCharacteristicType(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqual:", *MEMORY[0x1E0CB89C8]) & 1) != 0)
    v2 = 1;
  else
    v2 = objc_msgSend(v1, "isEqual:", *MEMORY[0x1E0CB8790]);

  return v2;
}

uint64_t isOutcomeSuccess(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D887A8]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D88718]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D88720]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D88798]) & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    v2 = objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D88790]);
  }

  return v2;
}

id getActivationCharacteristicFromServiceIfAny(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *i;
  void *v5;
  void *v6;
  int v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  objc_msgSend(a1, "characteristics", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (id)objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v3 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v2; i = (char *)i + 1)
      {
        if (*(_QWORD *)v10 != v3)
          objc_enumerationMutation(v1);
        v5 = *(void **)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v5, "type");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = isActivationCharacteristicType(v6);

        if (v7)
        {
          v2 = v5;
          goto LABEL_11;
        }
      }
      v2 = (id)objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_11:

  return v2;
}

void sub_1CD27A8F8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t isTemperatureAttribute(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D888B0]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D88860]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D88878]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D88868]) & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    v2 = objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D88880]);
  }

  return v2;
}

uint64_t temperatureConversionIsNeeded(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = v1;
  if (!v1)
  {
    if (isMetricLocale_onceToken != -1)
      dispatch_once(&isMetricLocale_onceToken, &__block_literal_global_128480);
    if (!isMetricLocale_isMetricLocale)
      goto LABEL_3;
LABEL_7:
    v3 = 0;
    goto LABEL_8;
  }
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D88C18]) & 1) == 0)
    goto LABEL_7;
LABEL_3:
  v3 = 1;
LABEL_8:

  return v3;
}

void sub_1CD27C718(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD27C948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD27CD6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD27CE50(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD27CF2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

__CFString *HMDUserSettingsBackingStoreControllerRunStateAsString(unint64_t a1)
{
  __CFString *v1;
  void *v2;
  void *v3;

  if (a1 >= 3)
  {
    v2 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringWithFormat:", CFSTR("Unknown state %@"), v3);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v1 = off_1E89A5C08[a1];
  }
  return v1;
}

void sub_1CD287D88(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_1CD287F60(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD28803C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2880E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD288174(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD288550(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2886C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD28889C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD288918(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD288974(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD289180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2896DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  id *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_1CD28A854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

HMDHTTPDevice *__httpDeviceForNetService(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  HMDHTTPDevice *v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  int v15;
  void *v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = objc_alloc(MEMORY[0x1E0CB3A28]);
  objc_msgSend(v3, "name");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v5, "initWithUUIDString:", v6);

  if (v7)
  {
    v8 = -[HMDHTTPDevice initWithIdentifier:]([HMDHTTPDevice alloc], "initWithIdentifier:", v7);
  }
  else
  {
    v9 = (void *)MEMORY[0x1D17BA0A0]();
    v10 = v4;
    HMFGetOSLogHandle();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "name");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138543618;
      v16 = v12;
      v17 = 2112;
      v18 = v13;
      _os_log_impl(&dword_1CD062000, v11, OS_LOG_TYPE_INFO, "%{public}@Unable to parse UUID from net service name %@", (uint8_t *)&v15, 0x16u);

    }
    objc_autoreleasePoolPop(v9);
    v8 = 0;
  }

  return v8;
}

void sub_1CD28C4E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD28D20C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD28D2C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD28D8F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD28E094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD28E2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD28E86C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD28EA64(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 120));
  _Block_object_dispose((const void *)(v3 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__14674(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14675(uint64_t a1)
{

}

void sub_1CD29CAB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getRadarDraftClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  TapToRadarKitLibrary();
  result = objc_getClass("RadarDraft");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRadarDraftClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)__getRadarComponentClass_block_invoke(v3);
  }
  return result;
}

Class __getRadarComponentClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  TapToRadarKitLibrary();
  result = objc_getClass("RadarComponent");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRadarComponentClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)__125__HMDTTRManager_initiateRadarWithTitle_componentName_componentVersion_componentID_displayReason_attachments_isUserInitiated___block_invoke(v3);
  }
  return result;
}

void TapToRadarKitLibrary()
{
  void *v0;

  if (!TapToRadarKitLibraryCore())
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

uint64_t TapToRadarKitLibraryCore()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = TapToRadarKitLibraryCore_frameworkLibrary;
  v6 = TapToRadarKitLibraryCore_frameworkLibrary;
  if (!TapToRadarKitLibraryCore_frameworkLibrary)
  {
    v7 = xmmword_1E89A5F00;
    v8 = *(_OWORD *)&off_1E89A5F10;
    v1 = _sl_dlopen();
    v4[3] = v1;
    TapToRadarKitLibraryCore_frameworkLibrary = v1;
    v0 = v1;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1CD29D7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

Class __getTapToRadarServiceClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  SEL v4;

  TapToRadarKitLibrary();
  result = objc_getClass("TapToRadarService");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTapToRadarServiceClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (void *)abort_report_np();
    return (Class)+[HMDTTRManager sharedManager](v3, v4);
  }
  return result;
}

void sub_1CD2A4048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__16441(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__16442(uint64_t a1)
{

}

void sub_1CD2A5CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1CD2A63E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1CD2A70D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD2A79FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1CD2A80E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location,char a29)
{
  uint64_t v29;

  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitPresenceEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventType;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventType;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventType;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventGranularity;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventGranularity;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventGranularity;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD2AAA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__17108(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__17109(uint64_t a1)
{

}

void sub_1CD2AF538(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2B0BB0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 128));
  _Unwind_Resume(a1);
}

void sub_1CD2B70F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2B759C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2B9314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2B9674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2B9F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18474(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18475(uint64_t a1)
{

}

void sub_1CD2BE5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18777(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18778(uint64_t a1)
{

}

void sub_1CD2C2B54(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&_lock);
  _Unwind_Resume(a1);
}

void sub_1CD2C2D7C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&_lock);
  _Unwind_Resume(a1);
}

void sub_1CD2C2E20(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&_lock);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCameraSnapshotMessagingReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotResponse;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotResponse;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotResponse;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__receivedSnapshotRequest;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__receivedSnapshotRequest;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__receivedSnapshotRequest;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 20) |= 2u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotRequest;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotRequest;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotRequest;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v20) = 0;
LABEL_50:
    *(_DWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD2C81F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCameraSnapshotIDSTransferReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__sentImage;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__sentImage;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__sentImage;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__receivedImage;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__receivedImage;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__receivedImage;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD2CB014(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD2CDBD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2CDC78(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2CDCF4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2CDE60(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2CE0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2CE2A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2CE50C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2CE608(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2CE7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2CEA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2CF108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2CF2D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  os_unfair_lock_s *v17;

  os_unfair_lock_unlock(v17);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1CD2CF400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  os_unfair_lock_s *v17;

  os_unfair_lock_unlock(v17);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1CD2CF5B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2CF748(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2D045C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2D059C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2D17D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  os_unfair_lock_s *v39;

  os_unfair_lock_unlock(v39);
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_1CD2D24C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2D2768(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id HMDLocalizedStringForKey(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = a1;
  v2 = (void *)MEMORY[0x1D17BA0A0]();
  objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (isAppleTV())
  {
    objc_msgSend(v1, "stringByAppendingString:", CFSTR("_APPLETV"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "localizedStringForKey:value:table:", v4, CFSTR("HMDDefaultLocalizedStringValue"), CFSTR("HomeKitDaemon"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v5, "isEqualToString:", CFSTR("HMDDefaultLocalizedStringValue")) & 1) == 0)
    {

      goto LABEL_6;
    }

  }
  objc_msgSend(v3, "localizedStringForKey:value:table:", v1, &stru_1E89C3E38, CFSTR("HomeKitDaemon"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_6:

  objc_autoreleasePoolPop(v2);
  return v5;
}

id HMDLocalizedStringForKeyWithCount(void *a1, uint64_t a2)
{
  const __CFString *v2;
  void *v3;
  void *v4;

  if (a2 == 1)
    v2 = CFSTR("_SINGULAR");
  else
    v2 = CFSTR("_PLURAL");
  objc_msgSend(a1, "stringByAppendingString:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  HMDLocalizedStringForKey(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1CD2D3E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2D438C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2D43F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2D6F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__20726(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__20727(uint64_t a1)
{

}

void sub_1CD2D7B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD2DBA20(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2DBA90(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2DBB64(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2DC034(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2DC2EC(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1CD2DC8DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2DD2B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2DD6D4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2DE29C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2DE768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2DEA28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2DEF58(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2DF010(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2E0A9C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2E1000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2E116C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD2E12D4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1CD2E1B14(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2E1EA8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2E1F30(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2E1FB0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2E2014(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2EA960(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD2ECE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  _Block_object_dispose(&a50, 8);
  _Unwind_Resume(a1);
}

void sub_1CD2ED784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  id *v43;

  objc_destroyWeak(v43);
  objc_destroyWeak(&location);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD2EDB88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id location,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a44, 8);
  _Block_object_dispose(&a50, 8);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD2EDEF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a40, 8);
  _Block_object_dispose(&a46, 8);
  _Unwind_Resume(a1);
}

uint64_t __HMDActionSetAddActionWithModel(void *a1, void *a2, void *a3, _QWORD *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  char isKindOfClass;
  void *v12;
  id v13;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  if (v7)
  {
    objc_msgSend(v8, "backedObjectWithParent:error:", v7, a4);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      if ((isKindOfClass & 1) != 0)
        v12 = v10;
      else
        v12 = 0;
      v13 = v12;
      if ((isKindOfClass & 1) != 0)
      {
        objc_msgSend(v7, "_handleAddNewAction:message:", v10, v9);
      }
      else if (a4)
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 22);
        *a4 = (id)objc_claimAutoreleasedReturnValue();
      }

    }
    else
    {
      isKindOfClass = 0;
    }

  }
  else if (a4)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 20);
    isKindOfClass = 0;
    *a4 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

uint64_t __Block_byref_object_copy__21847(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__21848(uint64_t a1)
{

}

void sub_1CD2F09B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2F7F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD2FBEE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2FBFF4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FC0DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FC858(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FCA44(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FCC08(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FCDD4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FCE90(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FD03C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FD264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD2FD4BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FD5E4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FD6D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FD800(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FD92C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FDAC0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD2FDBC8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD300CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_1CD3019A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id findResidentDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v3 = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __findResidentDevice_block_invoke;
  v7[3] = &unk_1E89B27D8;
  v8 = v3;
  v4 = v3;
  objc_msgSend(a1, "na_firstObjectPassingTest:", v7);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

uint64_t __findResidentDevice_block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;

  objc_msgSend(a2, "identifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "hmf_isEqualToUUID:", *(_QWORD *)(a1 + 32));

  return v4;
}

void sub_1CD303060(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1CD303D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD303F9C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1CD3041E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3044E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD305038(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3056A4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD305C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id *location)
{
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_1CD3062C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__24326(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__24327(uint64_t a1)
{

}

void sub_1CD307D8C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __parseGlobalDestination(void *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  const __CFString *v24;
  uint64_t v25;

  v9 = a1;
  v10 = v9;
  if (v9)
  {
    v11 = v9;
    v12 = objc_msgSend(v11, "rangeOfString:", CFSTR("/"));
    v13 = v11;
    if (v12 != 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v11, "substringToIndex:", v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();

    }
    if (objc_msgSend(v13, "containsString:", CFSTR("self-token:")))
    {
      v14 = (void *)objc_msgSend(v13, "mutableCopy");
      objc_msgSend(v14, "replaceOccurrencesOfString:withString:options:range:", CFSTR("self-token:"), CFSTR("token:"), 1, 0, objc_msgSend(v14, "length"));
      v15 = objc_msgSend(v14, "copy");

      v13 = (void *)v15;
    }
    if ((objc_msgSend(v13, "hasPrefix:", CFSTR("token:")) & 1) == 0)
    {
      if (a5)
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:description:reason:suggestion:", 19, CFSTR("Invalid destination."), CFSTR("Missing token prefix."), 0);
        v22 = 0;
        *a5 = (id)objc_claimAutoreleasedReturnValue();
LABEL_28:

        goto LABEL_29;
      }
LABEL_27:
      v22 = 0;
      goto LABEL_28;
    }
    if (a2)
    {
      v16 = objc_alloc(MEMORY[0x1E0CB3A28]);
      +[_HMDDeviceHandle identifierNamespace](_HMDDeviceHandle, "identifierNamespace");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "dataUsingEncoding:", 4);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *a2 = (id)objc_msgSend(v16, "initWithNamespace:data:", v17, v18);

    }
    objc_msgSend(v13, "substringFromIndex:", objc_msgSend(CFSTR("token:"), "length"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v19, "length"))
    {
      v20 = objc_alloc(MEMORY[0x1E0C99D50]);
      objc_msgSend(v20, "hmf_initWithHexadecimalString:options:", v19, 0);
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      if (v21)
      {
        if (a3)
          *a3 = objc_retainAutorelease(v21);

        if (a4)
        {
          +[HMDAccountHandle accountHandleForDestination:](HMDAccountHandle, "accountHandleForDestination:", v11);
          *a4 = (id)objc_claimAutoreleasedReturnValue();
        }
        v22 = 1;
        goto LABEL_28;
      }
      if (!a5)
        goto LABEL_26;
      v23 = (void *)MEMORY[0x1E0CB35C8];
      v24 = CFSTR("Invalid token string.");
      v25 = 3;
    }
    else
    {
      if (!a5)
      {
LABEL_26:

        goto LABEL_27;
      }
      v23 = (void *)MEMORY[0x1E0CB35C8];
      v24 = CFSTR("Missing token string.");
      v25 = 19;
    }
    objc_msgSend(v23, "hmErrorWithCode:description:reason:suggestion:", v25, CFSTR("Invalid destination."), v24, 0);
    *a5 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_26;
  }
  if (a5)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 20);
    v22 = 0;
    *a5 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v22 = 0;
  }
LABEL_29:

  return v22;
}

id __parseLocalDestination(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;

  v3 = a1;
  v4 = v3;
  if (!v3)
  {
    if (a2)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 20);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_10:
      v7 = 0;
      *a2 = v9;
      goto LABEL_18;
    }
LABEL_11:
    v7 = 0;
    goto LABEL_18;
  }
  if ((objc_msgSend(v3, "hasPrefix:", CFSTR("device:")) & 1) == 0)
  {
    if (a2)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:description:reason:suggestion:", 19, CFSTR("Invalid destination."), CFSTR("Missing local device prefix."), 0);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  objc_msgSend(v4, "substringFromIndex:", objc_msgSend(CFSTR("device:"), "length"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "length"))
  {
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDString:", v5);
    v7 = v6;
    if (v6)
    {
      v8 = v6;
    }
    else if (a2)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:description:reason:suggestion:", 19, CFSTR("Invalid destination."), CFSTR("Invalid device identifier"), 0);
      *a2 = (id)objc_claimAutoreleasedReturnValue();
    }

  }
  else if (a2)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:description:reason:suggestion:", 19, CFSTR("Invalid destination."), CFSTR("Missing device identifier."), 0);
    v7 = 0;
    *a2 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

LABEL_18:
  return v7;
}

__CFString *HMDCloudShareTrustManagerConfigureStateAsString(unint64_t a1)
{
  __CFString *v1;
  void *v2;
  void *v3;

  if (a1 >= 4)
  {
    v2 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringWithFormat:", CFSTR("Unknown state %@"), v3);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v1 = off_1E89A7B40[a1];
  }
  return v1;
}

uint64_t AWDHomeKitHAPServiceReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD315034(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3154E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD315B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD316340(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD31784C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD317F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __HMDAppleAccountSettingsPostUpdatedNotification(void *a1)
{
  id v1;
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x1D17BA0A0]();
    v3 = v1;
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = 138543362;
      v8 = v5;
      _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_INFO, "%{public}@Notifying of updated Apple account settings", (uint8_t *)&v7, 0xCu);

    }
    objc_autoreleasePoolPop(v2);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "postNotificationName:object:", CFSTR("HMDAppleAccountSettingsUpdatedNotification"), v3);

  }
}

void sub_1CD318E4C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD318F6C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD319014(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD31A724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD31ACA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD31C414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD31C634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __legacyWatchOSCategoryMap_block_invoke()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  id *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if (!BulletinDistributorCompanionLibraryCore_frameworkLibrary)
  {
    v18 = xmmword_1E89A80D8;
    v19 = 0;
    BulletinDistributorCompanionLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (BulletinDistributorCompanionLibraryCore_frameworkLibrary)
  {
    *(_QWORD *)&v18 = 0;
    *((_QWORD *)&v18 + 1) = &v18;
    v19 = 0x2020000000;
    v0 = (id *)getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr;
    v20 = getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr;
    if (!getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr)
    {
      v1 = (void *)BulletinDistributorCompanionLibrary();
      v0 = (id *)dlsym(v1, "BLTBulletinContextKeyWatchLegacyMapKey");
      *(_QWORD *)(*((_QWORD *)&v18 + 1) + 24) = v0;
      getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr = (uint64_t)v0;
    }
    _Block_object_dispose(&v18, 8);
    if (!v0)
      goto LABEL_13;
    v2 = *v0;
    v16 = v2;
    objc_msgSend(&unk_1E8B32B68, "stringValue");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v3;
    *(_QWORD *)&v18 = 0;
    *((_QWORD *)&v18 + 1) = &v18;
    v19 = 0x2020000000;
    v4 = (id *)getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr;
    v20 = getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr;
    if (!getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr)
    {
      v5 = (void *)BulletinDistributorCompanionLibrary();
      v4 = (id *)dlsym(v5, "BLTWatchLegacyMapCategoryIDKey");
      *(_QWORD *)(*((_QWORD *)&v18 + 1) + 24) = v4;
      getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr = (uint64_t)v4;
    }
    _Block_object_dispose(&v18, 8);
    if (!v4)
    {
LABEL_13:
      dlerror();
      abort_report_np();
      __break(1u);
    }
    v12 = *v4;
    v13 = MEMORY[0x1E0C9AA60];
    v6 = (void *)MEMORY[0x1E0C99D80];
    v7 = v12;
    objc_msgSend(v6, "dictionaryWithObjects:forKeys:count:", &v13, &v12, 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v8;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v15, &v14, 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = v9;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)legacyWatchOSCategoryMap_legacyWatchOSCategoryMap;
    legacyWatchOSCategoryMap_legacyWatchOSCategoryMap = v10;

  }
  else
  {
    v2 = (id)legacyWatchOSCategoryMap_legacyWatchOSCategoryMap;
    legacyWatchOSCategoryMap_legacyWatchOSCategoryMap = MEMORY[0x1E0C9AA70];
  }

}

void sub_1CD324D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t BulletinDistributorCompanionLibrary()
{
  uint64_t v0;
  void *v2;

  if (BulletinDistributorCompanionLibraryCore_frameworkLibrary)
    return BulletinDistributorCompanionLibraryCore_frameworkLibrary;
  BulletinDistributorCompanionLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = BulletinDistributorCompanionLibraryCore_frameworkLibrary;
  if (!BulletinDistributorCompanionLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

void sub_1CD32F398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD330B2C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD3312D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _NCSchedulerDateWithMultiple(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  v7 = a3;
  v8 = (objc_class *)MEMORY[0x1E0C99D78];
  v9 = a2;
  v10 = a1;
  v11 = objc_alloc_init(v8);
  if (v11)
  {
    v12 = objc_msgSend(v7, "era");
    if (v12 == 0x7FFFFFFFFFFFFFFFLL)
      v13 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v13 = v12 * a4;
    objc_msgSend(v11, "setEra:", v13);
    v14 = objc_msgSend(v7, "year");
    if (v14 == 0x7FFFFFFFFFFFFFFFLL)
      v15 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v15 = v14 * a4;
    objc_msgSend(v11, "setYear:", v15);
    v16 = objc_msgSend(v7, "month");
    if (v16 == 0x7FFFFFFFFFFFFFFFLL)
      v17 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v17 = v16 * a4;
    objc_msgSend(v11, "setMonth:", v17);
    v18 = objc_msgSend(v7, "day");
    if (v18 == 0x7FFFFFFFFFFFFFFFLL)
      v19 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v19 = v18 * a4;
    objc_msgSend(v11, "setDay:", v19);
    v20 = objc_msgSend(v7, "hour");
    if (v20 == 0x7FFFFFFFFFFFFFFFLL)
      v21 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v21 = v20 * a4;
    objc_msgSend(v11, "setHour:", v21);
    v22 = objc_msgSend(v7, "minute");
    if (v22 == 0x7FFFFFFFFFFFFFFFLL)
      v23 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v23 = v22 * a4;
    objc_msgSend(v11, "setMinute:", v23);
    v24 = objc_msgSend(v7, "second");
    if (v24 == 0x7FFFFFFFFFFFFFFFLL)
      v25 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v25 = v24 * a4;
    objc_msgSend(v11, "setSecond:", v25);
    v26 = objc_msgSend(v7, "weekday");
    if (v26 == 0x7FFFFFFFFFFFFFFFLL)
      v27 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v27 = v26 * a4;
    objc_msgSend(v11, "setWeekday:", v27);
    v28 = objc_msgSend(v7, "weekdayOrdinal");
    if (v28 == 0x7FFFFFFFFFFFFFFFLL)
      v29 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v29 = v28 * a4;
    objc_msgSend(v11, "setWeekdayOrdinal:", v29);
    v30 = objc_msgSend(v7, "quarter");
    if (v30 == 0x7FFFFFFFFFFFFFFFLL)
      v31 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v31 = v30 * a4;
    objc_msgSend(v11, "setQuarter:", v31);
    v32 = objc_msgSend(v7, "weekOfMonth");
    if (v32 == 0x7FFFFFFFFFFFFFFFLL)
      v33 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v33 = v32 * a4;
    objc_msgSend(v11, "setWeekOfMonth:", v33);
    v34 = objc_msgSend(v7, "weekOfYear");
    if (v34 == 0x7FFFFFFFFFFFFFFFLL)
      v35 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v35 = v34 * a4;
    objc_msgSend(v11, "setWeekOfYear:", v35);
    v36 = objc_msgSend(v7, "yearForWeekOfYear");
    if (v36 == 0x7FFFFFFFFFFFFFFFLL)
      v37 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v37 = v36 * a4;
    objc_msgSend(v11, "setYearForWeekOfYear:", v37);
  }
  objc_msgSend(v9, "dateByAddingComponents:toDate:options:", v11, v10, 0);
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  return v38;
}

BOOL HMDRemoteEventRouterProtoChangeRegistrationsMessageReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  HMDRemoteEventRouterProtoTopic *v17;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 3u:
        PBReaderReadString();
        v17 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v17)
          objc_msgSend(a1, "addTopicFilterAdditions:", v17);
        goto LABEL_30;
      case 4u:
        PBReaderReadString();
        v17 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v17)
          objc_msgSend(a1, "addTopicFilterRemovals:", v17);
        goto LABEL_30;
      case 5u:
        v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        objc_msgSend(a1, "addTopicAdditions:", v17);
        goto LABEL_27;
      case 6u:
        v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        objc_msgSend(a1, "addTopicRemovals:", v17);
LABEL_27:
        if (PBReaderPlaceMark() && HMDRemoteEventRouterProtoTopicReadFrom((uint64_t)v17, a2))
        {
          PBReaderRecallMark();
LABEL_30:

LABEL_31:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_31;
    }
  }
}

void sub_1CD33A950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD33B7B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitCharacteristicEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_31:
        *(_BYTE *)(a1 + 8) = v19 != 0;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD33DD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD33DEA4(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

__CFString *HMDAccessorySettingsAuditReasonAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 8)
    return off_1E89A83A0[a1 - 1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDMediaSystemSettingsAuditReason %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1CD340C30(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD340EA4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&HMDAccessoryAllowedHostsPreviewHelperForHome);
  _Unwind_Resume(a1);
}

void sub_1CD34125C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&HMDAccessoryAllowedHostsPreviewHelperForHome);
  _Unwind_Resume(a1);
}

__CFString *HMDEventTriggerActivationTypeAsString(unint64_t a1)
{
  if (a1 < 4)
    return off_1E89A8400[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDEventTriggerActivationType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1CD34164C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD343110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD343C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3444AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD344708(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD344820(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD344970(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD344A9C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD345B54(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD346274(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD346558(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD347374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD347638(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD347AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD348C04(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD349154(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3495C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD349FB8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD34A048(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD34A0C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD34AEF4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD34C2C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 160));
  _Unwind_Resume(a1);
}

void sub_1CD34DDCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD35131C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  id *v30;

  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD351B6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  uint64_t v10;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 168));
  _Unwind_Resume(a1);
}

void sub_1CD3597F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD35A304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitSignificantTimeEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_33:
        *(_BYTE *)(a1 + 16) = v21 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id getIDSSessionOptionsAllowedClasses()
{
  void *v0;
  void *v1;
  void *v2;
  _QWORD v4[9];

  v4[8] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0C99E60];
  v4[0] = objc_opt_class();
  v4[1] = objc_opt_class();
  v4[2] = objc_opt_class();
  v4[3] = objc_opt_class();
  v4[4] = objc_opt_class();
  v4[5] = objc_opt_class();
  v4[6] = objc_opt_class();
  v4[7] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v4, 8);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setWithArray:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1CD35F9D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD360E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3625A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD365674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3675B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD36818C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a44, 8);
  _Block_object_dispose(&a50, 8);
  _Block_object_dispose(&a54, 8);
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

void sub_1CD369540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  uint64_t v11;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 184));
  _Unwind_Resume(a1);
}

void sub_1CD36E2EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD372468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD372E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__32804(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__32805(uint64_t a1)
{

}

void sub_1CD3747E0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD375F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD378CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD37ACA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 152));
  _Unwind_Resume(a1);
}

id sha256(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9;
  id v10;
  void *v11;
  void *v12;
  unsigned __int8 *v13;
  CC_LONG v14;
  id v15;
  CC_LONG v16;
  id *v17;
  id v18;
  void *v19;
  id *v21;
  CC_SHA256_CTX c;
  unsigned __int8 md[8];
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  memset(&c, 0, sizeof(c));
  CC_SHA256_Init(&c);
  v21 = (id *)&a9;
  v10 = v9;
  v11 = v10;
  if (v10)
  {
    v12 = v10;
    do
    {
      *(_QWORD *)md = 0;
      v24 = 0;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v13 = (unsigned __int8 *)objc_msgSend(objc_retainAutorelease(v12), "UTF8String");
        v14 = strlen((const char *)v13);
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            objc_opt_class();
            _HMFPreconditionFailureWithFormat();
          }
          v13 = md;
          objc_msgSend(v12, "getUUIDBytes:", md);
          v16 = 16;
          goto LABEL_10;
        }
        v15 = objc_retainAutorelease(v12);
        v13 = (unsigned __int8 *)objc_msgSend(v15, "bytes");
        v14 = objc_msgSend(v15, "length");
      }
      v16 = v14;
LABEL_10:
      CC_SHA256_Update(&c, v13, v16);
      v17 = v21++;
      v18 = *v17;

      v12 = v18;
    }
    while (v18);
  }
  CC_SHA256_Final(md, &c);
  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytes:length:", md, 32);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  return v19;
}

void sub_1CD37D5FC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD37D6EC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD37D7DC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3811D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD387F60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id location)
{
  uint64_t v38;

  _Block_object_dispose((const void *)(v38 - 160), 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3882C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD38860C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3889FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD38CB74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD38CD50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD38CE28(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void __hds_log_block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(CFSTR("hds"), "stringByReplacingOccurrencesOfString:withString:", CFSTR("_"), CFSTR("."));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  HMFCreateOSLogHandle();
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)hds_log__hmf_once_v1;
  hds_log__hmf_once_v1 = v0;

}

void sub_1CD3941CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD394854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD394A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3995F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;
  id *v25;
  uint64_t v26;

  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  objc_destroyWeak(a11);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v26 - 152));
  objc_destroyWeak((id *)(v26 - 144));
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCharacteristicThresholdEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__minPresent;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__minPresent;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__minPresent;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_BYTE *)(a1 + *v24) = v19 != 0;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 12) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__maxPresent;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__maxPresent;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__maxPresent;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD39B3D0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __getDenylistKeys_block_invoke()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (isInternalBuild())
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", CFSTR("kAuthorizationDataKey"), 0, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  else
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", CFSTR("kAuthorizationDataKey"), CFSTR("kAccessoryPairingPasswordKey"), CFSTR("kAccessoryName"), CFSTR("kServiceName"), CFSTR("kActionSetName"), CFSTR("kTriggerName"), CFSTR("kZoneName"), CFSTR("kHomeName"), CFSTR("kRoomName"), CFSTR("kAccessoryInfoSerialNumberKey"), CFSTR("kUserIDKey"), CFSTR("kUserIDsKey"), CFSTR("kUserDisplayNameKey"), CFSTR("kUserNamesKey"), 0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)getDenylistKeys_denylistKeys;
  getDenylistKeys_denylistKeys = v0;

}

id HMXPCClientEntitlementsToComponents(unint64_t a1)
{
  void *v2;
  uint64_t i;
  const __CFString *v4;
  void *v5;

  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 64);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (a1)
  {
    for (i = 1; i - 1 < a1; i *= 2)
    {
      if ((i & a1) != 0)
      {
        if (i > 4095)
        {
          if (i < 0x20000)
          {
            if (i < 0x4000)
            {
              if (i == 4096)
              {
                v4 = CFSTR("com.apple.private.homekit.messaging");
                goto LABEL_52;
              }
              if (i == 0x2000)
              {
                v4 = CFSTR("com.apple.private.homekit.person-manager");
                goto LABEL_52;
              }
            }
            else
            {
              switch(i)
              {
                case 0x4000:
                  v4 = CFSTR("com.apple.private.homekit.allow-secure-access");
                  goto LABEL_52;
                case 0x8000:
                  v4 = CFSTR("com.apple.private.homekit.diagnostics");
                  goto LABEL_52;
                case 0x10000:
                  v4 = CFSTR("com.apple.private.homekit.state-dump");
                  goto LABEL_52;
              }
            }
          }
          else if (i >= 0x100000)
          {
            switch(i)
            {
              case 0x100000:
                v4 = CFSTR("com.apple.private.homekit.location-feedback-debug");
                goto LABEL_52;
              case 0x200000:
                v4 = CFSTR("com.apple.developer.matter.allow-setup-payload");
                goto LABEL_52;
              case 0x400000:
                v4 = CFSTR("com.apple.private.homekit.modern-messaging");
                goto LABEL_52;
            }
          }
          else
          {
            switch(i)
            {
              case 0x20000:
                v4 = CFSTR("com.apple.private.homekit.wallet-key");
                goto LABEL_52;
              case 0x40000:
                v4 = CFSTR("com.apple.private.homekit.assistant-identifiers");
                goto LABEL_52;
              case 0x80000:
                v4 = CFSTR("com.apple.private.homekit.home-location");
LABEL_52:
                objc_msgSend(v2, "addObject:", v4);
                break;
            }
          }
        }
        else
        {
          if (i <= 63)
          {
            v4 = CFSTR("com.apple.developer.homekit");
            switch(i)
            {
              case 1:
                goto LABEL_52;
              case 2:
                v4 = CFSTR("com.apple.developer.homekit.background-mode");
                goto LABEL_52;
              case 3:
              case 5:
              case 6:
              case 7:
                continue;
              case 4:
                v4 = CFSTR("com.apple.private.homekit");
                goto LABEL_52;
              case 8:
                v4 = CFSTR("com.apple.private.homekit.pairing-identity");
                goto LABEL_52;
              default:
                if (i == 16)
                {
                  v4 = CFSTR("com.apple.private.homekit.pairing-identity.private");
                }
                else
                {
                  if (i != 32)
                    continue;
                  v4 = CFSTR("com.apple.private.homekit.remote-login.private");
                }
                break;
            }
            goto LABEL_52;
          }
          if (i > 511)
          {
            switch(i)
            {
              case 512:
                v4 = CFSTR("com.apple.private.homekit.multi-user.setup");
                goto LABEL_52;
              case 1024:
                v4 = CFSTR("com.apple.private.homekit.location");
                goto LABEL_52;
              case 2048:
                v4 = CFSTR("com.apple.private.homekit.shortcuts-automation-access");
                goto LABEL_52;
            }
          }
          else
          {
            switch(i)
            {
              case 64:
                v4 = CFSTR("com.apple.developer.homekit.allow-setup-payload");
                goto LABEL_52;
              case 128:
                v4 = CFSTR("com.apple.private.homekit.cameraclips");
                goto LABEL_52;
              case 256:
                v4 = CFSTR("com.apple.private.homekit.connectivity-info");
                goto LABEL_52;
            }
          }
        }
      }
    }
  }
  v5 = (void *)objc_msgSend(v2, "copy");

  return v5;
}

BOOL AWDHomeKitCameraIDSSessionSetupReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationSent;
              goto LABEL_53;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationSent;
              goto LABEL_56;
            }
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationSent;
          goto LABEL_54;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationReceived;
              goto LABEL_53;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationReceived;
                goto LABEL_56;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationReceived;
          goto LABEL_54;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnResident;
              goto LABEL_53;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnResident;
                goto LABEL_56;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnResident;
          goto LABEL_54;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 4u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v19 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnReceiver;
          goto LABEL_54;
        }
        v35 += 7;
        v23 = v36++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnReceiver;
          goto LABEL_56;
        }
      }
      v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnReceiver;
LABEL_53:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_56:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL AWDHomeKitLocationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnEntry;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnEntry;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnEntry;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_BYTE *)(a1 + *v24) = v19 != 0;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 12) |= 2u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnExit;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnExit;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnExit;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD39F4F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A03B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A0424(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A049C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A27F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A2C3C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A33BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A51FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__37430(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__37431(uint64_t a1)
{

}

void sub_1CD3A56E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD3A5FFC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A6080(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A60D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A6180(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3A6814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3B452C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD3B477C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD3B51A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  uint64_t v9;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v9 - 256));
  _Unwind_Resume(a1);
}

void sub_1CD3B5308(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD3B5554(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1CD3B58F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;
  uint64_t v26;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v26 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1CD3B5C64(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1CD3B5F20(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1CD3B61EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3B62F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD3B6528(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1CD3B6A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
  id *v34;
  uint64_t v35;

  objc_destroyWeak(v34);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(&a34);
  _Block_object_dispose((const void *)(v35 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1CD3B6BC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD3B6E64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3B714C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1CD3B73B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1CD3B7630(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1CD3B7980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3B7D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3B7EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD3B8144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3B90FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, id *a10, id *a11, id *a12, id *location, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;
  id *v69;
  uint64_t v70;

  objc_destroyWeak(v69);
  objc_destroyWeak(location);
  objc_destroyWeak(a12);
  _Block_object_dispose(&a55, 8);
  objc_destroyWeak(a11);
  _Block_object_dispose(&a69, 8);
  _Block_object_dispose(&STACK[0x200], 8);
  _Block_object_dispose(&STACK[0x220], 8);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v70 - 248));
  _Block_object_dispose((const void *)(v70 - 240), 8);
  _Block_object_dispose((const void *)(v70 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1CD3B989C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3BA574(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1CD3BA530);
  }
  _Unwind_Resume(a1);
}

void sub_1CD3BA74C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1CD3BAA44(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1CD3BAD10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3BB260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3BB33C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD3BB63C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3BBA28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3BC1C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3BC774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3BCC0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3BD150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3BD58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__39198(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__39199(uint64_t a1)
{

}

void sub_1CD3BF538(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C0114(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C034C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C0590(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C1530(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL HMDCloudManagerIsZoneNotExistError(void *a1)
{
  id v1;
  void *v2;
  _BOOL8 v3;

  v1 = a1;
  objc_msgSend(v1, "domain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "isEqualToString:", *MEMORY[0x1E0C947D8]))
    v3 = objc_msgSend(v1, "code") == 26 || objc_msgSend(v1, "code") == 28;
  else
    v3 = 0;

  return v3;
}

void sub_1CD3C1B58(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C1E10(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C26C4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C3360(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_1CD3C55D0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C5A54(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C5DFC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C6FD8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  _Block_object_dispose((const void *)(v4 - 176), 8);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C8070(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C85B4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3C9160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10)
{
  id *v10;
  uint64_t v11;

  objc_destroyWeak(v10);
  objc_destroyWeak(location);
  _Block_object_dispose((const void *)(v11 - 176), 8);
  objc_destroyWeak(a10);
  _Unwind_Resume(a1);
}

void sub_1CD3CB22C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCharacteristicReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 8;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD3CF1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3D86F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&defaultManager_defaultManagerLock);
  _Unwind_Resume(a1);
}

void __notifyDelegateAccountRemoved(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(v3, "clientQueue");
    v5 = objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = ____notifyDelegateAccountRemoved_block_invoke;
    v6[3] = &unk_1E89C2328;
    v7 = v3;
    v8 = v4;
    dispatch_async(v5, v6);

  }
}

void ____notifyDelegateAccountRemoved_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const __CFString *v11;
  uint64_t v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17BA0A0]();
  v3 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "shortDescription");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v14 = v5;
    v15 = 2112;
    v16 = v6;
    _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_INFO, "%{public}@Account removed: %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v2);
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v11 = CFSTR("HMDAccountNotificationKey");
  v12 = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v12, &v11, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "postNotificationName:object:userInfo:", CFSTR("HMDAccountRegistryRemovedAccountNotification"), v9, v10);

}

void __notifyDelegateAccountAdded(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(v3, "clientQueue");
    v5 = objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = ____notifyDelegateAccountAdded_block_invoke;
    v6[3] = &unk_1E89C2328;
    v7 = v3;
    v8 = v4;
    dispatch_async(v5, v6);

  }
}

void ____notifyDelegateAccountAdded_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const __CFString *v11;
  uint64_t v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17BA0A0]();
  v3 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "shortDescription");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v14 = v5;
    v15 = 2112;
    v16 = v6;
    _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_INFO, "%{public}@Account added: %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v2);
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v11 = CFSTR("HMDAccountNotificationKey");
  v12 = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v12, &v11, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "postNotificationName:object:userInfo:", CFSTR("HMDAccountRegistryAddedAccountNotification"), v9, v10);

}

void __cleanupRemoteDevicesWithHandles(void *a1, void *a2)
{
  id v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  int v22;
  void *v23;
  id v24;
  NSObject *v25;
  void *v26;
  void *context;
  void *v28;
  id obj;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint8_t buf[4];
  void *v46;
  __int16 v47;
  void *v48;
  __int16 v49;
  void *v50;
  _BYTE v51[128];
  _BYTE v52[128];
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  context = (void *)MEMORY[0x1D17BA0A0]();
  v35 = v3;
  objc_msgSend(v3, "remoteAccountManager");
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "accounts");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v41, v52, 16);
  if (v31)
  {
    v30 = *(_QWORD *)v42;
    v5 = 0x1E0C99000uLL;
    v33 = v4;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v42 != v30)
          objc_enumerationMutation(obj);
        v32 = v6;
        v7 = *(void **)(*((_QWORD *)&v41 + 1) + 8 * v6);
        v37 = 0u;
        v38 = 0u;
        v39 = 0u;
        v40 = 0u;
        v36 = v7;
        objc_msgSend(v7, "devices");
        v34 = (id)objc_claimAutoreleasedReturnValue();
        v8 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v37, v51, 16);
        if (v8)
        {
          v9 = v8;
          v10 = *(_QWORD *)v38;
          do
          {
            for (i = 0; i != v9; ++i)
            {
              if (*(_QWORD *)v38 != v10)
                objc_enumerationMutation(v34);
              v12 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * i);
              v13 = *(void **)(v5 + 3616);
              objc_msgSend(v12, "handles");
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v13, "setWithArray:", v14);
              v15 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v15, "intersectSet:", v4);
              if (objc_msgSend(v15, "count"))
              {
                v16 = (void *)MEMORY[0x1D17BA0A0]();
                v17 = v35;
                HMFGetOSLogHandle();
                v18 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
                {
                  HMFGetLogIdentifier();
                  v19 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v12, "shortDescription");
                  v20 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138543874;
                  v46 = v19;
                  v47 = 2112;
                  v48 = v20;
                  v49 = 2112;
                  v50 = v36;
                  _os_log_impl(&dword_1CD062000, v18, OS_LOG_TYPE_INFO, "%{public}@Removing duplicate device, %@, from account: %@", buf, 0x20u);

                  v4 = v33;
                  v5 = 0x1E0C99000;
                }

                objc_autoreleasePoolPop(v16);
                objc_msgSend(v36, "removeDevice:", v12);
              }

            }
            v9 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v37, v51, 16);
          }
          while (v9);
        }

        objc_msgSend(v36, "devices");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = objc_msgSend(v21, "hmf_isEmpty");

        v5 = 0x1E0C99000;
        if (v22)
        {
          v23 = (void *)MEMORY[0x1D17BA0A0]();
          v24 = v35;
          HMFGetOSLogHandle();
          v25 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v46 = v26;
            v47 = 2112;
            v48 = v36;
            _os_log_impl(&dword_1CD062000, v25, OS_LOG_TYPE_DEFAULT, "%{public}@Removing duplicate empty account: %@", buf, 0x16u);

            v5 = 0x1E0C99000;
          }

          objc_autoreleasePoolPop(v23);
          objc_msgSend(v28, "removeAccount:", v36);
        }
        v6 = v32 + 1;
        v4 = v33;
      }
      while (v32 + 1 != v31);
      v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v41, v52, 16);
    }
    while (v31);
  }

  objc_autoreleasePoolPop(context);
}

void __cleanupRemoteAccountsRelatedToAccount(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *context;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t buf[4];
  void *v26;
  __int16 v27;
  void *v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v17 = (void *)MEMORY[0x1D17BA0A0]();
  objc_msgSend(v3, "remoteAccountManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  objc_msgSend(v5, "accounts");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v22;
    v18 = v6;
    v19 = v5;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v22 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
        if ((objc_msgSend(v4, "isEqual:", v11) & 1) == 0 && objc_msgSend(v4, "isRelatedToAccount:", v11))
        {
          context = (void *)MEMORY[0x1D17BA0A0]();
          v12 = v3;
          HMFGetOSLogHandle();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v11, "shortDescription");
            v15 = v3;
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v26 = v14;
            v27 = 2112;
            v28 = v16;
            _os_log_impl(&dword_1CD062000, v13, OS_LOG_TYPE_DEFAULT, "%{public}@Detected stale account, %@, removing", buf, 0x16u);

            v3 = v15;
            v6 = v18;

            v5 = v19;
          }

          objc_autoreleasePoolPop(context);
          objc_msgSend(v5, "removeAccount:", v11);
        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
    }
    while (v8);
  }

  objc_autoreleasePoolPop(v17);
}

void __registerForAccountUpdates(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = v3;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138543618;
    v14 = v8;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Registering for account updates: %@", (uint8_t *)&v13, 0x16u);

  }
  objc_autoreleasePoolPop(v5);
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "removeObserver:name:object:", v6, CFSTR("HMDAccountHandlesUpdatedNotification"), 0);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "removeObserver:name:object:", v6, CFSTR("HMDAccountAddedDeviceNotification"), 0);

  if (v4)
  {
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addObserver:selector:name:object:", v6, sel___handleAppleAccountHandlesUpdated_, CFSTR("HMDAccountHandlesUpdatedNotification"), v4);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "addObserver:selector:name:object:", v6, sel___handleAppleAccountDeviceAdded_, CFSTR("HMDAccountAddedDeviceNotification"), v4);

  }
}

id __deviceForDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t j;
  void *v16;
  id v17;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    v5 = v3;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v25;
      v19 = *(_QWORD *)v25;
      do
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v25 != v8)
            objc_enumerationMutation(v5);
          v10 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * i);
          v20 = 0u;
          v21 = 0u;
          v22 = 0u;
          v23 = 0u;
          v11 = v10;
          v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
          if (v12)
          {
            v13 = v12;
            v14 = *(_QWORD *)v21;
            while (2)
            {
              for (j = 0; j != v13; ++j)
              {
                if (*(_QWORD *)v21 != v14)
                  objc_enumerationMutation(v11);
                v16 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * j);
                if ((objc_msgSend(v4, "isRelatedToDevice:", v16) & 1) != 0)
                {
                  v17 = v16;

                  goto LABEL_21;
                }
              }
              v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
              if (v13)
                continue;
              break;
            }
          }

          v8 = v19;
        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
        v17 = 0;
      }
      while (v7);
    }
    else
    {
      v17 = 0;
    }
LABEL_21:

  }
  else
  {
    v17 = 0;
  }

  return v17;
}

id __deviceForHandle(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  v6 = 0;
  if (v3 && v4)
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v7 = v3;
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v15;
      while (2)
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v15 != v10)
            objc_enumerationMutation(v7);
          objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * v11), "deviceForHandle:", v5, (_QWORD)v14);
          v12 = objc_claimAutoreleasedReturnValue();
          if (v12)
          {
            v6 = (void *)v12;
            goto LABEL_13;
          }
          ++v11;
        }
        while (v9 != v11);
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
        if (v9)
          continue;
        break;
      }
    }
    v6 = 0;
LABEL_13:

  }
  return v6;
}

id __accountForHandle(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  char v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v15 = 0u;
    v16 = 0u;
    v13 = 0u;
    v14 = 0u;
    v5 = v3;
    v6 = (id)objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v6)
    {
      v7 = *(_QWORD *)v14;
      while (2)
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(_QWORD *)v14 != v7)
            objc_enumerationMutation(v5);
          v9 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
          objc_msgSend(v9, "handles", (_QWORD)v13);
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = objc_msgSend(v10, "containsObject:", v4);

          if ((v11 & 1) != 0)
          {
            v6 = v9;
            goto LABEL_12;
          }
        }
        v6 = (id)objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
        if (v6)
          continue;
        break;
      }
    }
LABEL_12:

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

void sub_1CD3DCF10(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

__CFString *HMDMatterAccessoryPairingStepAsString(unint64_t a1)
{
  if (a1 < 0x1A)
    return off_1E89AA130[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Undefined HMDMatterAccessoryPairingStep %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1CD3DE33C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3DE540(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3DEAB4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3DEF18(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3DEFA4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3E0994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD3E0A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD3E0B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__41441(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__41442(uint64_t a1)
{

}

void sub_1CD3E1874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD3E18F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3E1968(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3E229C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3E2320(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3E2398(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__41793(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__41794(uint64_t a1)
{

}

void sub_1CD3E35E4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3E8A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__42836(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__42837(uint64_t a1)
{

}

void __createBackboardWatcher(void *a1)
{
  id v1;
  uint64_t ServerPort;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  id location[4];

  location[3] = *(id *)MEMORY[0x1E0C80C00];
  v1 = a1;
  if (!+[HMDDeviceCapabilities supportsBackboard](HMDDeviceCapabilities, "supportsBackboard"))
  {
    v7 = (void *)MEMORY[0x1D17BA0A0]();
    v8 = v1;
    HMFGetOSLogHandle();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(location[0]) = 138543362;
      *(id *)((char *)location + 4) = v10;
      _os_log_impl(&dword_1CD062000, v9, OS_LOG_TYPE_INFO, "%{public}@No backboardd support for device, skipping watcher", (uint8_t *)location, 0xCu);

    }
    goto LABEL_9;
  }
  ServerPort = CARenderServerGetServerPort();
  if ((ServerPort - 1) >= 0xFFFFFFFE)
  {
    v7 = (void *)MEMORY[0x1D17BA0A0]();
    v8 = v1;
    HMFGetOSLogHandle();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(location[0]) = 138543362;
      *(id *)((char *)location + 4) = v11;
      _os_log_impl(&dword_1CD062000, v9, OS_LOG_TYPE_ERROR, "%{public}@Unable to find port for default render server", (uint8_t *)location, 0xCu);

    }
LABEL_9:

    objc_autoreleasePoolPop(v7);
    goto LABEL_10;
  }
  v3 = ServerPort;
  objc_initWeak(location, v1);
  v4 = objc_alloc(MEMORY[0x1E0D01818]);
  objc_msgSend(v1, "clientQueue");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = ____createBackboardWatcher_block_invoke;
  v12[3] = &unk_1E89BE3F8;
  objc_copyWeak(&v13, location);
  v6 = (void *)objc_msgSend(v4, "initWithPort:queue:deathHandler:", v3, v5, v12);
  objc_msgSend(v1, "setBackboardServicesWatcher:", v6);

  objc_destroyWeak(&v13);
  objc_destroyWeak(location);
LABEL_10:

}

void sub_1CD3E96D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____createBackboardWatcher_block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_backboardServicesRelaunched");

}

void sub_1CD3EBFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,uint64_t a63)
{
  id location;
  id *v65;
  uint64_t v66;

  objc_destroyWeak(v65);
  _Block_object_dispose(&a57, 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose((const void *)(v66 - 160), 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3EC984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3ED904(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3ED9C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3EDB24(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3EDCD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD3EFBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__43551(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__43552(uint64_t a1)
{

}

void sub_1CD3F3AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3F4698(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id _findConstraintForType(void *a1, uint64_t a2)
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = ___findConstraintForType_block_invoke;
  v3[3] = &__block_descriptor_40_e38_B16__0__HMAccessorySettingConstraint_8l;
  v3[4] = a2;
  objc_msgSend(a1, "na_firstObjectPassingTest:", v3);
  return (id)objc_claimAutoreleasedReturnValue();
}

BOOL ___findConstraintForType_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "type") == *(_QWORD *)(a1 + 32);
}

void sub_1CD3F5ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3F7C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD3F9FF8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FB3BC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FB440(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FB8E8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FB968(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FB9E8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FBA68(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FBD88(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FBE08(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FDA80(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FDDC8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FDE6C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FE7D4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD3FE8B0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD402CB8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void __transactionAccessoryUpdated(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  NSObject *v22;
  void *v23;
  void *v24;
  char v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  void *v31;
  char v32;
  void *v33;
  int v34;
  char v35;
  void *v36;
  void *v37;
  char v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  char v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  char v50;
  id v51;
  void *v52;
  id v53;
  HMDAccessoryVersion *v54;
  void *v55;
  uint64_t v56;
  HMDAccessoryVersion *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  char v64;
  void *v65;
  void *v66;
  void *v67;
  char v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  char v73;
  void *v74;
  uint64_t v75;
  void *v76;
  void *v77;
  char v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  void *v85;
  id v86;
  NSObject *v87;
  id v88;
  id v89;
  void *v90;
  void *v91;
  uint64_t v92;
  void *v93;
  id v94;
  NSObject *v95;
  id v96;
  id v97;
  void *v98;
  void *v99;
  uint64_t v100;
  void *v101;
  void *v102;
  void *v103;
  char v104;
  void *v105;
  uint64_t v106;
  void *v107;
  void *v108;
  void *v109;
  char v110;
  void *v111;
  uint64_t v112;
  void *v113;
  void *v114;
  void *v115;
  char v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  char v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  char v128;
  id v129;
  void *v130;
  void *v131;
  uint64_t v132;
  void *v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  void *v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  NSObject *v144;
  id v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  void *v149;
  void *v150;
  uint64_t v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  uint64_t v156;
  void *v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  char v165;
  id v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  char v172;
  void *v173;
  uint64_t v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  char v181;
  void *v182;
  void *v183;
  void *v184;
  char v185;
  void *v186;
  void *v187;
  HMDAccessoryNetworkAccessViolation *v188;
  void *v189;
  void *v190;
  HMDAccessoryNetworkAccessViolation *v191;
  _BOOL4 v192;
  int v193;
  void *v194;
  void *v195;
  void *v196;
  _BOOL4 v197;
  double v198;
  void *v199;
  void *v200;
  void *v201;
  uint64_t v202;
  void *v203;
  void *v204;
  void *v205;
  void *v206;
  void *v207;
  char v208;
  void *v209;
  void *v210;
  void *v211;
  void *v212;
  uint64_t v213;
  void *v214;
  int v215;
  void *v216;
  int v217;
  void *v218;
  uint64_t v219;
  void *v220;
  void *v221;
  void *v222;
  char v223;
  void *v224;
  uint64_t v225;
  void *v226;
  int v227;
  void *v228;
  int v229;
  void *v230;
  uint64_t v231;
  void *v232;
  void *v233;
  void *v234;
  char v235;
  void *v236;
  uint64_t v237;
  void *v238;
  void *v239;
  void *v240;
  char v241;
  void *v242;
  id v243;
  NSObject *v244;
  id v245;
  void *v246;
  void *v247;
  NSObject *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t i;
  void *v253;
  void *v254;
  id v255;
  void *v256;
  void *v257;
  void *v258;
  void (**v259)(_QWORD, _QWORD, _QWORD);
  uint64_t v260;
  void *v261;
  void *v262;
  void *v263;
  id v264;
  NSObject *group;
  void *v266;
  void *v267;
  void *v268;
  void *v269;
  id v270;
  void *v271;
  id obj;
  void *v273;
  void *v274;
  void *v275;
  _QWORD v276[4];
  NSObject *v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  _QWORD v282[4];
  id v283;
  id v284;
  _QWORD block[4];
  id v286;
  id v287;
  _BYTE v288[128];
  const __CFString *v289;
  void *v290;
  uint64_t v291;
  void *v292;
  uint64_t v293;
  void *v294;
  _QWORD v295[2];
  _QWORD v296[2];
  void *v297;
  uint8_t buf[4];
  id v299;
  __int16 v300;
  uint64_t v301;
  __int16 v302;
  uint64_t v303;
  __int16 v304;
  id v305;
  const __CFString *v306;
  void *v307;
  const __CFString *v308;
  _QWORD v309[4];

  v309[1] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v264 = a3;
  objc_msgSend(v264, "transactionResult");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "source");
  v8 = (void *)MEMORY[0x1E0C99DE8];
  +[HMDAccessoryTransaction properties](HMDAccessoryTransaction, "properties");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "arrayWithCapacity:", objc_msgSend(v9, "count"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(0, "configurationTracker");
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (v11)
    dispatch_group_enter(v11);
  v273 = v10;
  if ((objc_msgSend(v6, "propertyWasSet:", CFSTR("name")) & 1) != 0
    || objc_msgSend(v6, "propertyWasSet:", CFSTR("configuredName")))
  {
    objc_msgSend(v6, "name");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v5;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v15 = v14;
    else
      v15 = 0;
    v16 = v15;

    if (v16)
    {
      objc_msgSend(v6, "configuredName");
      v17 = objc_claimAutoreleasedReturnValue();

      v13 = (void *)v17;
    }
    objc_msgSend(v14, "configuredName");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "name");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if ((HMFEqualObjects() & 1) == 0)
    {
      objc_msgSend(v14, "setConfiguredName:", v13);
      objc_msgSend(v7, "markChanged");
    }
    objc_msgSend(v14, "name");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = HMFEqualObjects();
    if (v20 && (v21 & 1) == 0)
    {
      objc_msgSend(v7, "markSaveToAssistant");
      objc_msgSend(v14, "workQueue");
      v22 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ____transactionAccessoryUpdated_block_invoke;
      block[3] = &unk_1E89C2328;
      v286 = v14;
      v287 = v20;
      dispatch_async(v22, block);

      v10 = v273;
    }

  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("providedName")))
  {
    objc_msgSend(v5, "providedName");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "providedName");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = HMFEqualObjects();

    if ((v25 & 1) == 0)
    {
      objc_msgSend(v5, "name");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "providedName");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "providedName");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setProvidedName:", v28);

      objc_msgSend(v5, "name");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      if (v29 && (HMFEqualObjects() & 1) == 0)
      {
        objc_msgSend(v7, "markSaveToAssistant");
        objc_msgSend(v5, "workQueue");
        v30 = objc_claimAutoreleasedReturnValue();
        v282[0] = MEMORY[0x1E0C809B0];
        v282[1] = 3221225472;
        v282[2] = ____transactionAccessoryUpdated_block_invoke_2;
        v282[3] = &unk_1E89C2328;
        v283 = v5;
        v284 = v29;
        dispatch_async(v30, v282);

      }
      objc_msgSend(v5, "providedName");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v32 = HMFEqualObjects();

      if ((v32 & 1) == 0)
        objc_msgSend(v7, "markChanged");

    }
  }
  objc_msgSend(v6, "setProperties");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = objc_msgSend(v33, "containsObject:", CFSTR("model"));
  v35 = v34;
  if (!v34)
    goto LABEL_28;
  objc_msgSend(v6, "model");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "model");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = HMFEqualObjects();

  if ((v38 & 1) == 0)
  {
    objc_msgSend(v6, "model");
    v39 = (void *)objc_claimAutoreleasedReturnValue();

    if (v39)
    {
      objc_msgSend(v6, "model");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setModel:", v33);
LABEL_28:

      goto LABEL_30;
    }
  }
  v35 = 0;
LABEL_30:
  objc_msgSend(v6, "setProperties");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v40, "containsObject:", CFSTR("manufacturer")))
  {
LABEL_34:

    goto LABEL_35;
  }
  objc_msgSend(v6, "manufacturer");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "manufacturer");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = HMFEqualObjects();

  if ((v43 & 1) == 0)
  {
    objc_msgSend(v6, "manufacturer");
    v44 = (void *)objc_claimAutoreleasedReturnValue();

    if (v44)
    {
      objc_msgSend(v6, "manufacturer");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setManufacturer:", v40);
      v35 = 1;
      goto LABEL_34;
    }
  }
LABEL_35:
  group = v12;
  objc_msgSend(v6, "firmwareVersion");
  v45 = objc_claimAutoreleasedReturnValue();
  v269 = v6;
  if (v45)
  {
    v46 = (void *)v45;
    objc_msgSend(v6, "firmwareVersion");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "firmwareVersion");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v48, "rawVersionString");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    v50 = HMFEqualObjects();

    if ((v50 & 1) != 0)
    {
      v10 = v273;
    }
    else
    {
      v51 = v5;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v52 = v51;
      else
        v52 = 0;
      v53 = v52;

      if (v53 && objc_msgSend(v53, "supportsCHIP"))
      {
        v54 = [HMDAccessoryVersion alloc];
        objc_msgSend(v6, "firmwareVersion");
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        v56 = -[HMDAccessoryVersion initWithMatterVersionString:](v54, "initWithMatterVersionString:", v55);
      }
      else
      {
        v57 = [HMDAccessoryVersion alloc];
        objc_msgSend(v6, "firmwareVersion");
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        v56 = -[HMDAccessoryVersion initWithVersionString:](v57, "initWithVersionString:", v55);
      }
      v58 = (void *)v56;
      v10 = v273;

      if (v58)
      {
        objc_msgSend(v51, "firmwareVersion");
        v59 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v51, "setFirmwareVersion:", v58);
        if ((objc_msgSend(v58, "isEqualToVersion:", v59) & 1) == 0)
        {
          if (v59)
          {
            v308 = CFSTR("HMDAccessoryPreviousFirmwareVersionKey");
            v309[0] = v59;
            objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v309, &v308, 1);
            v60 = (void *)objc_claimAutoreleasedReturnValue();
          }
          else
          {
            v60 = 0;
          }
          logAndPostNotification(CFSTR("HMDAccessoryFirmwareVersionUpdatedNotification"), v51, v60);

        }
        v35 = 1;
      }

    }
  }
  objc_msgSend(v6, "setProperties");
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v61, "containsObject:", CFSTR("displayableFirmwareVersion")))
    goto LABEL_62;
  objc_msgSend(v6, "displayableFirmwareVersion");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "displayableFirmwareVersion");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v64 = HMFEqualObjects();

  if ((v64 & 1) == 0)
  {
    objc_msgSend(v6, "displayableFirmwareVersion");
    v65 = (void *)objc_claimAutoreleasedReturnValue();

    if (v65)
    {
      objc_msgSend(v5, "displayableFirmwareVersion");
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "displayableFirmwareVersion");
      v66 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setDisplayableFirmwareVersion:", v66);

      objc_msgSend(v6, "displayableFirmwareVersion");
      v67 = (void *)objc_claimAutoreleasedReturnValue();
      v68 = objc_msgSend(v67, "isEqualToString:", v61);

      if ((v68 & 1) == 0)
      {
        if (v61)
        {
          v306 = CFSTR("HMDAccessoryPreviousDisplayableFirmwareVersionKey");
          v307 = v61;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v307, &v306, 1);
          v69 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v69 = 0;
        }
        logAndPostNotification(CFSTR("HMDAccessoryFirmwareDisplayableVersionUpdatedNotification"), v5, v69);

      }
      v35 = 1;
LABEL_62:

    }
  }
  objc_msgSend(v6, "setProperties");
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v70, "containsObject:", CFSTR("serialNumber")))
  {
    objc_msgSend(v6, "serialNumber");
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "serialNumber");
    v72 = (void *)objc_claimAutoreleasedReturnValue();
    v73 = HMFEqualObjects();

    if ((v73 & 1) != 0)
      goto LABEL_68;
    objc_msgSend(v6, "serialNumber");
    v74 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v74)
      goto LABEL_68;
    objc_msgSend(v6, "serialNumber");
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setSerialNumber:", v70);
    v35 = 1;
  }

LABEL_68:
  objc_msgSend(v6, "hostAccessoryUUID");
  v75 = objc_claimAutoreleasedReturnValue();
  v263 = (void *)v75;
  if (v75)
    v268 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDString:", v75);
  else
    v268 = 0;
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("hostAccessoryUUID")))
  {
    objc_msgSend(v5, "hostAccessory");
    v76 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v76, "uuid");
    v77 = (void *)objc_claimAutoreleasedReturnValue();
    v78 = objc_msgSend(v77, "hmf_isEqualToUUID:", v268);

    if ((v78 & 1) == 0)
    {
      objc_msgSend(v5, "_updateHost:", v268);
      objc_msgSend(v7, "markChanged");
      objc_msgSend(v7, "markSaveToAssistant");
    }
  }
  objc_msgSend(v5, "home");
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v79, "homeManager");
  v267 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "productData");
  v80 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "productDataV2");
  v81 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "productData");
  v271 = (void *)objc_claimAutoreleasedReturnValue();
  v82 = v5;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v83 = v82;
  else
    v83 = 0;
  v270 = v83;
  v275 = v82;

  v266 = (void *)v80;
  v260 = v81;
  if (v81)
  {
    v84 = HMFEqualObjects();
    if ((v84 & 1) == 0)
    {
      v90 = v82;
      v91 = (void *)v81;
LABEL_92:
      objc_msgSend(v90, "setProductData:", v91, v260);
      if (v270)
      {
        objc_msgSend(v267, "accessoryFirmwareUpdateManager");
        v98 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v98, "registerAccessory:", v270);

      }
LABEL_94:
      v297 = v275;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v297, 1, v260);
      v99 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v79, "notifyClientsOfAccessoryInfoUpdatedForAccessories:", v99);

      objc_msgSend(v7, "markChanged");
      goto LABEL_95;
    }
  }
  if (v271 && !v80)
  {
    v85 = (void *)MEMORY[0x1D17BA0A0](v84);
    v86 = v275;
    HMFGetOSLogHandle();
    v87 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v87, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v88 = (id)objc_claimAutoreleasedReturnValue();
      +[HMDBackingStoreTransactionOptions stringForHMDBackingStoreTransactionSource:](HMDBackingStoreTransactionOptions, "stringForHMDBackingStoreTransactionSource:", objc_msgSend(v7, "source", v81));
      v89 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v299 = v88;
      v300 = 2112;
      v301 = (uint64_t)v271;
      v302 = 2112;
      v303 = (uint64_t)v89;
      _os_log_impl(&dword_1CD062000, v87, OS_LOG_TYPE_INFO, "%{public}@Applying initial legacy productData %@ (source: %@)", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v85);
    v90 = v86;
    v91 = v271;
    goto LABEL_92;
  }
  if (v271)
  {
    v92 = HMFEqualObjects();
    if ((v92 & 1) == 0)
    {
      v93 = (void *)MEMORY[0x1D17BA0A0](v92);
      v94 = v82;
      HMFGetOSLogHandle();
      v95 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v95, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v96 = (id)objc_claimAutoreleasedReturnValue();
        +[HMDBackingStoreTransactionOptions stringForHMDBackingStoreTransactionSource:](HMDBackingStoreTransactionOptions, "stringForHMDBackingStoreTransactionSource:", objc_msgSend(v7, "source", v260));
        v97 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544130;
        v299 = v96;
        v300 = 2112;
        v301 = (uint64_t)v266;
        v302 = 2112;
        v303 = (uint64_t)v271;
        v304 = 2112;
        v305 = v97;
        _os_log_impl(&dword_1CD062000, v95, OS_LOG_TYPE_INFO, "%{public}@Ignoring legacy productData change %@ -> %@ (source: %@)", buf, 0x2Au);

      }
      objc_autoreleasePoolPop(v93);
    }
  }
  if ((v35 & 1) != 0)
    goto LABEL_94;
LABEL_95:
  objc_msgSend(v6, "initialManufacturer", v260);
  v100 = objc_claimAutoreleasedReturnValue();
  if (v100)
  {
    v101 = (void *)v100;
    objc_msgSend(v6, "initialManufacturer");
    v102 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "initialManufacturer");
    v103 = (void *)objc_claimAutoreleasedReturnValue();
    v104 = HMFEqualObjects();

    if ((v104 & 1) == 0)
    {
      objc_msgSend(v6, "initialManufacturer");
      v105 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setInitialManufacturer:", v105);

      logAndPostNotification(CFSTR("HMDAccessoryManufacturerUpdatedNotification"), v275, 0);
      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "initialModel");
  v106 = objc_claimAutoreleasedReturnValue();
  if (v106)
  {
    v107 = (void *)v106;
    objc_msgSend(v6, "initialModel");
    v108 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "initialModel");
    v109 = (void *)objc_claimAutoreleasedReturnValue();
    v110 = HMFEqualObjects();

    if ((v110 & 1) == 0)
    {
      objc_msgSend(v6, "initialModel");
      v111 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setInitialModel:", v111);

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "initialCategoryIdentifier");
  v112 = objc_claimAutoreleasedReturnValue();
  if (v112)
  {
    v113 = (void *)v112;
    objc_msgSend(v6, "initialCategoryIdentifier");
    v114 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "initialCategoryIdentifier");
    v115 = (void *)objc_claimAutoreleasedReturnValue();
    v116 = HMFEqualObjects();

    if ((v116 & 1) == 0)
    {
      objc_msgSend(v6, "initialCategoryIdentifier");
      v117 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setInitialCategoryIdentifier:", v117);

      logAndPostNotification(CFSTR("HMDAccessoryCategoryUpdatedNotification"), v275, 0);
      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "accessoryCategory");
  v118 = (void *)objc_claimAutoreleasedReturnValue();

  if (v118)
  {
    objc_msgSend(v6, "accessoryCategory");
    v119 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "_updateCategory:notifyClients:", v119, 1);
    v120 = (void *)objc_claimAutoreleasedReturnValue();

    if (v120)
    {
      objc_msgSend(v10, "addObject:", v120);
      objc_msgSend(v7, "markChanged");
      if (v270)
        objc_msgSend(v270, "updatePrimaryServiceIfNeeded");
    }

  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("networkClientIdentifier")))
  {
    objc_msgSend(v6, "networkClientIdentifier");
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "networkClientIdentifier");
    v122 = (void *)objc_claimAutoreleasedReturnValue();
    v123 = HMFEqualObjects();

    if ((v123 & 1) == 0)
    {
      objc_msgSend(v6, "networkClientIdentifier");
      v124 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setNetworkClientIdentifier:", v124);

      objc_msgSend(v7, "markChanged");
    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("networkRouterUUID")))
  {
    objc_msgSend(v6, "networkRouterUUID");
    v125 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "networkRouterUUID");
    v126 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v126, "UUIDString");
    v127 = (void *)objc_claimAutoreleasedReturnValue();
    v128 = HMFEqualObjects();

    if ((v128 & 1) == 0)
    {
      v129 = objc_alloc(MEMORY[0x1E0CB3A28]);
      objc_msgSend(v6, "networkRouterUUID");
      v130 = (void *)objc_claimAutoreleasedReturnValue();
      v131 = (void *)objc_msgSend(v129, "initWithUUIDString:", v130);
      objc_msgSend(v275, "setNetworkRouterUUID:", v131);

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "currentNetworkProtectionMode");
  v132 = objc_claimAutoreleasedReturnValue();
  if (v132)
  {
    v133 = (void *)v132;
    objc_msgSend(v6, "currentNetworkProtectionMode");
    v134 = (void *)objc_claimAutoreleasedReturnValue();
    v135 = objc_msgSend(v134, "integerValue");
    v136 = objc_msgSend(v275, "currentNetworkProtectionMode");

    if (v135 != v136)
    {
      objc_msgSend(v6, "currentNetworkProtectionMode");
      v137 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setCurrentNetworkProtectionMode:", objc_msgSend(v137, "integerValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "wiFiCredentialType");
  v138 = objc_claimAutoreleasedReturnValue();
  if (v138)
  {
    v139 = (void *)v138;
    objc_msgSend(v6, "wiFiCredentialType");
    v140 = (void *)objc_claimAutoreleasedReturnValue();
    v141 = objc_msgSend(v140, "integerValue");
    v142 = objc_msgSend(v275, "wiFiCredentialType");

    if (v141 != v142)
    {
      v143 = (void *)MEMORY[0x1D17BA0A0]();
      HMFGetOSLogHandle();
      v144 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v144, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v145 = (id)objc_claimAutoreleasedReturnValue();
        v146 = objc_msgSend(v275, "wiFiCredentialType");
        objc_msgSend(v6, "wiFiCredentialType");
        v147 = (void *)objc_claimAutoreleasedReturnValue();
        v148 = objc_msgSend(v147, "integerValue");
        *(_DWORD *)buf = 138544130;
        v299 = v145;
        v300 = 2048;
        v301 = v146;
        v302 = 2048;
        v303 = v148;
        v304 = 2112;
        v305 = v275;
        _os_log_impl(&dword_1CD062000, v144, OS_LOG_TYPE_INFO, "%{public}@Updating wiFiCredentialType from [%lu] to [%lu] for accessory: %@", buf, 0x2Au);

      }
      objc_autoreleasePoolPop(v143);
      objc_msgSend(v6, "wiFiCredentialType");
      v149 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setWiFiCredentialType:", objc_msgSend(v149, "integerValue"));

      objc_msgSend(v7, "markChanged");
      v150 = (void *)MEMORY[0x1E0D285D0];
      v151 = *MEMORY[0x1E0CB9650];
      v295[0] = *MEMORY[0x1E0CB9648];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(v275, "supportsWiFiReconfiguration"));
      v152 = (void *)objc_claimAutoreleasedReturnValue();
      v296[0] = v152;
      v295[1] = *MEMORY[0x1E0CB9638];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v275, "wiFiCredentialType"));
      v153 = (void *)objc_claimAutoreleasedReturnValue();
      v296[1] = v153;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v296, v295, 2);
      v154 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v150, "entitledMessageWithName:messagePayload:", v151, v154);
      v155 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "addObject:", v155);

    }
  }
  objc_msgSend(v6, "networkClientLAN");
  v156 = objc_claimAutoreleasedReturnValue();
  if (v156)
  {
    v157 = (void *)v156;
    objc_msgSend(v6, "networkClientLAN");
    v158 = (void *)objc_claimAutoreleasedReturnValue();
    v159 = objc_msgSend(v158, "integerValue");
    v160 = objc_msgSend(v275, "networkClientLAN");

    if (v159 != v160)
    {
      objc_msgSend(v6, "networkClientLAN");
      v161 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setNetworkClientLAN:", objc_msgSend(v161, "integerValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("networkClientProfileFingerprint")))
  {
    objc_msgSend(v6, "networkClientProfileFingerprint");
    v162 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "networkClientProfileFingerprint");
    v163 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v163, "UUIDString");
    v164 = (void *)objc_claimAutoreleasedReturnValue();
    v165 = HMFEqualObjects();

    if ((v165 & 1) == 0)
    {
      v166 = objc_alloc(MEMORY[0x1E0CB3A28]);
      objc_msgSend(v6, "networkClientProfileFingerprint");
      v167 = (void *)objc_claimAutoreleasedReturnValue();
      v168 = (void *)objc_msgSend(v166, "initWithUUIDString:", v167);
      objc_msgSend(v275, "setNetworkClientProfileFingerprint:", v168);

      objc_msgSend(v7, "markChanged");
    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("appliedFirewallWANRules")))
  {
    objc_msgSend(v6, "appliedFirewallWANRules");
    v169 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDAccessoryAllowedHost allowedHostsFromJSONFirewallWANRules:](HMDAccessoryAllowedHost, "allowedHostsFromJSONFirewallWANRules:", v169);
    v170 = (void *)objc_claimAutoreleasedReturnValue();

    if (v170)
    {
      objc_msgSend(v275, "allowedHosts");
      v171 = (void *)objc_claimAutoreleasedReturnValue();
      v172 = HMFEqualObjects();

      if ((v172 & 1) == 0)
      {
        objc_msgSend(v275, "setAllowedHosts:", v170);
        objc_msgSend(v7, "markChanged");
        v173 = (void *)MEMORY[0x1E0D285D0];
        v174 = *MEMORY[0x1E0CB9628];
        v293 = *MEMORY[0x1E0CB9620];
        objc_msgSend(v275, "allowedHosts");
        v175 = (void *)objc_claimAutoreleasedReturnValue();
        encodeRootObjectForSPIClients(v175);
        v176 = (void *)objc_claimAutoreleasedReturnValue();
        v294 = v176;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v294, &v293, 1);
        v177 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v173, "entitledMessageWithName:messagePayload:", v174, v177);
        v178 = (void *)objc_claimAutoreleasedReturnValue();

        v10 = v273;
        objc_msgSend(v273, "addObject:", v178);

      }
    }

  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("wiFiUniquePreSharedKey")))
  {
    objc_msgSend(v6, "wiFiUniquePreSharedKey");
    v179 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "wiFiUniquePreSharedKey");
    v180 = (void *)objc_claimAutoreleasedReturnValue();
    v181 = HMFEqualObjects();

    if ((v181 & 1) == 0)
    {
      objc_msgSend(v6, "wiFiUniquePreSharedKey");
      v182 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setWiFiUniquePreSharedKey:", v182);

      objc_msgSend(v7, "markChanged");
    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("pendingConfigurationIdentifier")))
  {
    objc_msgSend(v6, "pendingConfigurationIdentifier");
    v183 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "pendingConfigurationIdentifier");
    v184 = (void *)objc_claimAutoreleasedReturnValue();
    v185 = HMFEqualObjects();

    if ((v185 & 1) == 0)
    {
      objc_msgSend(v6, "pendingConfigurationIdentifier");
      v186 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setPendingConfigurationIdentifier:", v186);

      objc_msgSend(v7, "markChanged");
    }
  }
  v262 = v79;
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("lastNetworkAccessViolationOccurrenceSince1970"))
    && objc_msgSend(v6, "propertyWasSet:", CFSTR("lastNetworkAccessViolationResetSince1970")))
  {
    objc_msgSend(v275, "networkAccessViolation");
    v187 = (void *)objc_claimAutoreleasedReturnValue();
    v188 = [HMDAccessoryNetworkAccessViolation alloc];
    objc_msgSend(v6, "lastNetworkAccessViolationOccurrenceSince1970");
    v189 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "lastNetworkAccessViolationResetSince1970");
    v190 = (void *)objc_claimAutoreleasedReturnValue();
    v191 = -[HMDAccessoryNetworkAccessViolation initWithLastViolationTimeInterval:lastViolationResetTimeInterval:](v188, "initWithLastViolationTimeInterval:lastViolationResetTimeInterval:", v189, v190);

    if ((HMFEqualObjects() & 1) == 0)
    {
      objc_msgSend(v275, "setNetworkAccessViolation:", v191);
      v192 = -[HMDAccessoryNetworkAccessViolation hasCurrentViolation](v191, "hasCurrentViolation");
      v193 = v192 ^ objc_msgSend(v187, "hasCurrentViolation");
      objc_msgSend(v187, "lastViolationDate");
      v194 = (void *)objc_claimAutoreleasedReturnValue();
      -[HMDAccessoryNetworkAccessViolation lastViolationDate](v191, "lastViolationDate");
      v195 = (void *)objc_claimAutoreleasedReturnValue();
      v196 = v195;
      v197 = 0;
      if (v194 && v191)
      {
        objc_msgSend(v195, "timeIntervalSinceDate:", v194);
        v197 = v198 >= 86400.0;
      }
      v199 = v196;
      if ((v193 | v197) == 1)
        objc_msgSend(v7, "markChanged");
      else
        objc_msgSend(v7, "markLocalChanged");
      v6 = v269;
      encodeRootObjectForSPIClients(v191);
      v200 = (void *)objc_claimAutoreleasedReturnValue();
      v201 = (void *)MEMORY[0x1E0D285D0];
      v202 = *MEMORY[0x1E0CB9618];
      v291 = *MEMORY[0x1E0CB9610];
      v292 = v200;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v292, &v291, 1);
      v203 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v201, "entitledMessageWithName:messagePayload:", v202, v203);
      v204 = (void *)objc_claimAutoreleasedReturnValue();

      v10 = v273;
      objc_msgSend(v273, "addObject:", v204);

    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("configuredNetworkProtectionGroupUUIDString")))
  {
    objc_msgSend(v6, "configuredNetworkProtectionGroupUUIDString");
    v205 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "configuredNetworkProtectionGroupUUID");
    v206 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v206, "UUIDString");
    v207 = (void *)objc_claimAutoreleasedReturnValue();
    v208 = HMFEqualObjects();

    if ((v208 & 1) == 0)
    {
      objc_msgSend(v6, "configuredNetworkProtectionGroupUUIDString");
      v209 = (void *)objc_claimAutoreleasedReturnValue();
      if (v209)
        v210 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDString:", v209);
      else
        v210 = 0;
      objc_msgSend(v275, "configuredNetworkProtectionGroupUUID");
      v211 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setConfiguredNetworkProtectionGroupUUID:", v210);
      if (v211)
      {
        v289 = CFSTR("HMDAccessoryPreviousConfiguredNetworkProtectionGroupUUIDKey");
        v290 = v211;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v290, &v289, 1);
        v212 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v212 = 0;
      }
      logAndPostNotification(CFSTR("HMDAccessoryConfiguredNetworkProtectionGroupUpdatedNotification"), v275, v212);
      objc_msgSend(v7, "markChanged");

    }
  }
  objc_msgSend(v6, "suspendCapable");
  v213 = objc_claimAutoreleasedReturnValue();
  if (v213)
  {
    v214 = (void *)v213;
    v215 = objc_msgSend(v275, "isSuspendCapable");
    objc_msgSend(v6, "suspendCapable");
    v216 = (void *)objc_claimAutoreleasedReturnValue();
    v217 = objc_msgSend(v216, "BOOLValue");

    if (v215 != v217)
    {
      objc_msgSend(v6, "suspendCapable");
      v218 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setSuspendCapable:", objc_msgSend(v218, "BOOLValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "lastSeenDate");
  v219 = objc_claimAutoreleasedReturnValue();
  if (v219)
  {
    v220 = (void *)v219;
    objc_msgSend(v6, "lastSeenDate");
    v221 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v275, "lastSeenDate");
    v222 = (void *)objc_claimAutoreleasedReturnValue();
    v223 = objc_msgSend(v221, "isEqualToDate:", v222);

    if ((v223 & 1) == 0)
    {
      objc_msgSend(v6, "lastSeenDate");
      v224 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setLastSeenDate:", v224);

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "lowBattery");
  v225 = objc_claimAutoreleasedReturnValue();
  if (v225)
  {
    v226 = (void *)v225;
    v227 = objc_msgSend(v275, "isLowBattery");
    objc_msgSend(v6, "lowBattery");
    v228 = (void *)objc_claimAutoreleasedReturnValue();
    v229 = objc_msgSend(v228, "BOOLValue");

    if (v227 != v229)
    {
      objc_msgSend(v6, "lowBattery");
      v230 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setLowBattery:", objc_msgSend(v230, "BOOLValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "sharedAdminAddedTimestamp");
  v231 = objc_claimAutoreleasedReturnValue();
  if (v231)
  {
    v232 = (void *)v231;
    objc_msgSend(v275, "sharedAdminAddedTimestamp");
    v233 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "sharedAdminAddedTimestamp");
    v234 = (void *)objc_claimAutoreleasedReturnValue();
    v235 = HMFEqualObjects();

    if ((v235 & 1) == 0)
    {
      objc_msgSend(v6, "sharedAdminAddedTimestamp");
      v236 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v275, "setSharedAdminAddedTimestamp:", v236);

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "pairingsAuditedTimestamp");
  v237 = objc_claimAutoreleasedReturnValue();
  if (v237)
  {
    v238 = (void *)v237;
    objc_msgSend(v275, "pairingsAuditedTimestamp");
    v239 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "pairingsAuditedTimestamp");
    v240 = (void *)objc_claimAutoreleasedReturnValue();
    v241 = HMFEqualObjects();

    if ((v241 & 1) == 0)
    {
      v242 = (void *)MEMORY[0x1D17BA0A0]();
      v243 = v275;
      HMFGetOSLogHandle();
      v244 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v244, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v245 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "pairingsAuditedTimestamp");
        v246 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v299 = v245;
        v300 = 2112;
        v301 = (uint64_t)v246;
        _os_log_impl(&dword_1CD062000, v244, OS_LOG_TYPE_INFO, "%{public}@Setting pairings audit timestamp to %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v242);
      objc_msgSend(v6, "pairingsAuditedTimestamp");
      v247 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v243, "setPairingsAuditedTimestamp:", v247);

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v264, "transport");
  v274 = (void *)objc_claimAutoreleasedReturnValue();
  v248 = dispatch_group_create();
  v278 = 0u;
  v279 = 0u;
  v280 = 0u;
  v281 = 0u;
  obj = v10;
  v249 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v278, v288, 16);
  if (v249)
  {
    v250 = v249;
    v251 = *(_QWORD *)v279;
    do
    {
      for (i = 0; i != v250; ++i)
      {
        if (*(_QWORD *)v279 != v251)
          objc_enumerationMutation(obj);
        v253 = *(void **)(*((_QWORD *)&v278 + 1) + 8 * i);
        dispatch_group_enter(v248);
        if (v264)
        {
          v254 = (void *)objc_msgSend(v253, "mutableCopy");
          objc_msgSend(v254, "setTransport:", v274);
          v255 = (id)objc_msgSend(v254, "copy");

        }
        else
        {
          v255 = v253;
        }
        objc_msgSend(v275, "msgDispatcher");
        v256 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v275, "uuid");
        v257 = (void *)objc_claimAutoreleasedReturnValue();
        v276[0] = MEMORY[0x1E0C809B0];
        v276[1] = 3221225472;
        v276[2] = ____transactionAccessoryUpdated_block_invoke_1003;
        v276[3] = &unk_1E89C2730;
        v277 = v248;
        objc_msgSend(v256, "sendMessage:target:andInvokeCompletionHandler:", v255, v257, v276);

      }
      v250 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v278, v288, 16);
    }
    while (v250);
  }

  dispatch_group_wait(v248, 0);
  objc_msgSend(v264, "responseHandler");
  v258 = (void *)objc_claimAutoreleasedReturnValue();

  if (v258)
  {
    objc_msgSend(v264, "responseHandler");
    v259 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    v259[2](v259, 0, 0);

  }
  if (group)
    dispatch_group_leave(group);

}

uint64_t ____transactionAccessoryUpdated_block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleUpdatedName:", *(_QWORD *)(a1 + 40));
}

uint64_t ____transactionAccessoryUpdated_block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleUpdatedName:", *(_QWORD *)(a1 + 40));
}

void ____transactionAccessoryUpdated_block_invoke_1003(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1CD41034C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a24);
  _Unwind_Resume(a1);
}

void sub_1CD418F3C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD418FA4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD41900C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD419628(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD419AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD419CA8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD41A03C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD41B048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_1CD41B504(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD41B724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1CD41BB54(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD41C378(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD41CD5C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD41D404(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD41D860(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCameraStreamMessagingReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedNegotiationRequest;
              goto LABEL_85;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedNegotiationRequest;
              goto LABEL_88;
            }
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedNegotiationRequest;
          goto LABEL_86;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationRequest;
              goto LABEL_85;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationRequest;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationRequest;
          goto LABEL_86;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 0x20u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationResponse;
              goto LABEL_85;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationResponse;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationResponse;
          goto LABEL_86;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedStartRequest;
              goto LABEL_85;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedStartRequest;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedStartRequest;
          goto LABEL_86;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 0x40u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartRequest;
              goto LABEL_85;
            }
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v19 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v23 = v41++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartRequest;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartRequest;
          goto LABEL_86;
        case 6u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 0x80u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartResponse;
              goto LABEL_85;
            }
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v19 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v23 = v46++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartResponse;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartResponse;
          goto LABEL_86;
        case 7u:
          v50 = 0;
          v51 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 8u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentConnSetup;
              goto LABEL_85;
            }
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v19 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v23 = v51++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentConnSetup;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentConnSetup;
          goto LABEL_86;
        case 8u:
          v55 = 0;
          v56 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v57 = *v3;
        v58 = *(_QWORD *)(a2 + v57);
        if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          break;
        v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
        *(_QWORD *)(a2 + v57) = v58 + 1;
        v19 |= (unint64_t)(v59 & 0x7F) << v55;
        if ((v59 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedConnSetup;
          goto LABEL_86;
        }
        v55 += 7;
        v23 = v56++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedConnSetup;
          goto LABEL_88;
        }
      }
      v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedConnSetup;
LABEL_85:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_86:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_88:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id addOrReplaceElements(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[4];
  id v14;
  id v15;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v5, "count"))
  {
    v8 = (void *)objc_msgSend(v6, "mutableCopy");
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __addOrReplaceElements_block_invoke;
    v13[3] = &unk_1E89AAF28;
    v9 = v8;
    v14 = v9;
    v15 = v7;
    objc_msgSend(v5, "na_each:", v13);
    v10 = v15;
    v11 = v9;

  }
  else
  {
    v11 = v6;
  }

  return v11;
}

void __addOrReplaceElements_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v3 = a2;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __addOrReplaceElements_block_invoke_2;
  v8[3] = &unk_1E89AAF00;
  v4 = *(void **)(a1 + 32);
  v10 = *(id *)(a1 + 40);
  v7 = v3;
  v9 = v7;
  v5 = objc_msgSend(v4, "indexOfObjectPassingTest:", v8);
  v6 = *(void **)(a1 + 32);
  if (v5 == 0x7FFFFFFFFFFFFFFFLL)
    objc_msgSend(v6, "addObject:", v7);
  else
    objc_msgSend(v6, "replaceObjectAtIndex:withObject:", v5, v7);

}

uint64_t __addOrReplaceElements_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), a2);
  if ((_DWORD)result)
    *a4 = 1;
  return result;
}

void sub_1CD423CD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_1CD4240D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__47972(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__47973(uint64_t a1)
{

}

void sub_1CD4277A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD427FFC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD428170(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD428610(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD428704(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD42879C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD4288F4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD429170(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD42CB5C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD42CBF0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD42D1B0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD42D40C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD42D488(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD42F22C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD42F610(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD42F7BC(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1CD42F970(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1CD42FAD0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD42FC38(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD430FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4310A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1CD4315B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD43172C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD431BCC(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD432084(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD432424(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD4352A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD43598C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4364E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  uint64_t v11;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 216));
  _Unwind_Resume(a1);
}

void sub_1CD437340(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD437A68(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_1CD438ED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *a13, id *a14, id *location)
{
  uint64_t v15;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v15 - 200));
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD4392C0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1CD439554(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_1CD43A068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location)
{
  uint64_t v15;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v15 - 176));
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD43BE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location)
{
  uint64_t v14;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)&STACK[0x260]);
  _Block_object_dispose(&STACK[0x268], 8);
  _Block_object_dispose((const void *)(v14 - 192), 8);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD43CC04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD43DF84(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD440240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD440600(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1CD4411B0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD444568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD444924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD445504(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD4459D4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD44679C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD446A4C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD446CF0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD446EF4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD447118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__48424(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__48425(uint64_t a1)
{

}

void __transactionAccessoryUpdated_48426(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  char v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  NSObject *v34;
  id v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  char v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  char v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  char v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  NSObject *v80;
  id v81;
  id v82;
  void *v83;
  void *v84;
  int v85;
  uint64_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  id v92;
  NSObject *v93;
  id v94;
  id v95;
  void *v96;
  id v97;
  void *v98;
  uint64_t v99;
  void *v100;
  void *v101;
  void *v102;
  char v103;
  void *v104;
  uint64_t v105;
  void *v106;
  void *v107;
  void *v108;
  char v109;
  void *v110;
  uint64_t v111;
  void *v112;
  int v113;
  void *v114;
  int v115;
  void *v116;
  uint64_t v117;
  void *v118;
  void *v119;
  void *v120;
  char v121;
  void *v122;
  uint64_t v123;
  void *v124;
  void *v125;
  void *v126;
  char v127;
  void *v128;
  uint64_t v129;
  void *v130;
  void *v131;
  void *v132;
  char v133;
  void *v134;
  void *v135;
  id v136;
  void *v137;
  void *v138;
  void *v139;
  char v140;
  void *v141;
  uint64_t v142;
  void *v143;
  void *v144;
  void *v145;
  char v146;
  void *v147;
  id v148;
  NSObject *v149;
  id v150;
  void *v151;
  void *v152;
  uint64_t v153;
  void *v154;
  void *v155;
  void *v156;
  char v157;
  void *v158;
  uint64_t v159;
  void *v160;
  void *v161;
  void *v162;
  char v163;
  void *v164;
  uint64_t v165;
  void *v166;
  void *v167;
  void *v168;
  int v169;
  void *v170;
  NSObject *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t i;
  void *v176;
  void *v177;
  void *v178;
  id v179;
  void *v180;
  void *v181;
  id v182;
  void *v183;
  void *v184;
  void *v185;
  void *v186;
  void *v187;
  void *v188;
  void *v189;
  id obj;
  id obja;
  id v192;
  _QWORD v193[4];
  id v194;
  _QWORD v195[4];
  NSObject *v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  uint8_t v201[128];
  uint8_t buf[4];
  id v203;
  __int16 v204;
  id v205;
  __int16 v206;
  id v207;
  __int16 v208;
  id v209;
  uint64_t v210;

  v210 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v192 = a3;
  objc_msgSend(v192, "transactionResult");
  v189 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)MEMORY[0x1E0C99DE8];
  +[HMDHAPAccessoryTransaction properties](HMDHAPAccessoryTransaction, "properties");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "arrayWithCapacity:", objc_msgSend(v8, "count"));
  v187 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "home");
  v9 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "uniqueIdentifier");
  v10 = objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    v11 = (void *)v10;
    objc_msgSend(v5, "uniqueIdentifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "uniqueIdentifier");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v12, "isEqual:", v13);

    if ((v14 & 1) == 0)
    {
      objc_msgSend(v6, "uniqueIdentifier");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setUniqueIdentifier:", v15);

      objc_msgSend(v189, "markChanged");
    }
  }
  v188 = (void *)v9;
  objc_msgSend(v6, "bridgeUUID");
  v16 = objc_claimAutoreleasedReturnValue();
  if (v16)
  {
    v17 = (void *)v16;
    objc_msgSend(v5, "bridge");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "uuid");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "UUIDString");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "bridgeUUID");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v20, "isEqual:", v21);

    if ((v22 & 1) == 0)
    {
      v23 = objc_alloc(MEMORY[0x1E0CB3A28]);
      objc_msgSend(v6, "bridgeUUID");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = (void *)objc_msgSend(v23, "initWithUUIDString:", v24);
      objc_msgSend(v5, "_updateHost:", v25);

      objc_msgSend(v189, "markChanged");
      objc_msgSend(v189, "markSaveToAssistant");
    }
  }
  objc_msgSend(v6, "roomUUID");
  v26 = (void *)objc_claimAutoreleasedReturnValue();

  obj = v5;
  if (v26)
  {
    objc_msgSend(v5, "room");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "name");
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    v29 = objc_alloc(MEMORY[0x1E0CB3A28]);
    objc_msgSend(v6, "roomUUID");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = (void *)objc_msgSend(v29, "initWithUUIDString:", v30);

    v32 = (void *)MEMORY[0x1D17BA0A0]();
    v33 = v5;
    HMFGetOSLogHandle();
    v34 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v35 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "home");
      v185 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v185, "roomWithUUID:", v31);
      v184 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v184, "name");
      v183 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "room");
      v36 = v32;
      v37 = v28;
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v38, "uuid");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      HMFEqualObjects();

      v5 = obj;
      v28 = v37;
      v32 = v36;
      HMFBooleanToString();
      v40 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544130;
      v203 = v35;
      v204 = 2112;
      v205 = v28;
      v206 = 2112;
      v207 = v183;
      v208 = 2112;
      v209 = v40;
      _os_log_impl(&dword_1CD062000, v34, OS_LOG_TYPE_INFO, "%{public}@transactionObjectUpdated: old: %@, new:%@, same Room: %@", buf, 0x2Au);

    }
    objc_autoreleasePoolPop(v32);
    if (v31 && objc_msgSend(v33, "_updateRoom:source:", v31, objc_msgSend(v189, "source")))
    {
      objc_msgSend(v189, "markChanged");
      objc_msgSend(v189, "markSaveToAssistant");
    }
    objc_msgSend(v33, "_handleRoomChangedFromOldRoomName:", v28);

  }
  objc_msgSend(v6, "accessoryFlags");
  v41 = objc_claimAutoreleasedReturnValue();
  if (v41)
  {
    v42 = (void *)v41;
    objc_msgSend(v5, "accessoryFlags");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "accessoryFlags");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = objc_msgSend(v43, "isEqual:", v44);

    if ((v45 & 1) == 0)
    {
      objc_msgSend(v6, "accessoryFlags");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "updateAccessoryFlagsAndNotifyClients:", v46);
      v47 = (void *)objc_claimAutoreleasedReturnValue();

      if (v47)
      {
        objc_msgSend(v187, "addObject:", v47);
        objc_msgSend(v189, "markChanged");
      }

    }
  }
  objc_msgSend(v6, "certificationStatus");
  v48 = objc_claimAutoreleasedReturnValue();
  v49 = v192;
  if (v48)
  {
    v50 = (void *)v48;
    objc_msgSend(v6, "certificationStatus");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v51, "unsignedIntegerValue"))
    {
      v52 = objc_msgSend(v5, "certificationStatus");
      objc_msgSend(v6, "certificationStatus");
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      v54 = objc_msgSend(v53, "unsignedIntegerValue");

      if (v52 != v54)
      {
        objc_msgSend(v6, "certificationStatus");
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setCertificationStatus:", objc_msgSend(v55, "unsignedIntegerValue"));

        objc_msgSend(v189, "markChanged");
      }
    }
    else
    {

    }
  }
  objc_msgSend(v6, "broadcastKey");
  v56 = objc_claimAutoreleasedReturnValue();
  if (v56)
  {
    v57 = (void *)v56;
    objc_msgSend(v5, "broadcastKey");
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "broadcastKey");
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    v60 = objc_msgSend(v58, "isEqualToData:", v59);

    if ((v60 & 1) == 0)
    {
      objc_msgSend(v6, "broadcastKey");
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setBroadcastKey:", v61);

      objc_msgSend(v6, "broadcastKey");
      v62 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "keyUpdatedStateNumber");
      v63 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "keyUpdatedTime");
      v64 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setBroadcastKey:keyUpdatedStateNumber:keyUpdatedTime:", v62, v63, v64);

      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "pairingUsername");
  v65 = objc_claimAutoreleasedReturnValue();
  if (v65)
  {
    v66 = (void *)v65;
    objc_msgSend(v6, "publicKey");
    v67 = objc_claimAutoreleasedReturnValue();
    if (!v67)
    {

      goto LABEL_35;
    }
    v68 = (void *)v67;
    objc_msgSend(obj, "pairingUsername");
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "pairingUsername");
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v69, "isEqual:", v70))
    {
      objc_msgSend(obj, "publicKey");
      v71 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "publicKey");
      v72 = (void *)objc_claimAutoreleasedReturnValue();
      v73 = objc_msgSend(v71, "isEqual:", v72);

      v49 = v192;
      if ((v73 & 1) != 0)
        goto LABEL_35;
    }
    else
    {

    }
    objc_msgSend(v6, "pairingUsername");
    v74 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "publicKey");
    v75 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(obj, "setPairingUsername:publicKey:", v74, v75);

    objc_msgSend(v189, "markChanged");
  }
LABEL_35:
  objc_msgSend(v6, "transportInformation");
  v76 = (void *)objc_claimAutoreleasedReturnValue();

  v77 = obj;
  if (v76)
  {
    v78 = (void *)MEMORY[0x1D17BA0A0]();
    objc_opt_class();
    v79 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v80 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v80, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v81 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v189, "source");
      HMFBooleanToString();
      v82 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "transportInformation");
      v83 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v203 = v81;
      v204 = 2112;
      v205 = v82;
      v206 = 2112;
      v207 = v83;
      _os_log_impl(&dword_1CD062000, v80, OS_LOG_TYPE_INFO, "%{public}@Received updated transportInformation from localSource: %@, transportInformation: %@", buf, 0x20u);

      v49 = v192;
    }

    objc_autoreleasePoolPop(v78);
    objc_msgSend(v6, "transportInformation");
    v84 = (void *)objc_claimAutoreleasedReturnValue();
    v85 = objc_msgSend(obj, "updateTransportInformation:localSource:", v84, (unint64_t)objc_msgSend(v189, "source") < 2);

    if (v85)
      objc_msgSend(v189, "markChanged");
  }
  objc_msgSend(v6, "communicationProtocol");
  v86 = objc_claimAutoreleasedReturnValue();
  if (v86)
  {
    v87 = (void *)v86;
    objc_msgSend(v6, "communicationProtocol");
    v88 = (void *)objc_claimAutoreleasedReturnValue();
    v89 = objc_msgSend(v88, "integerValue");
    v90 = objc_msgSend(obj, "communicationProtocol");

    if (v89 != v90)
    {
      v91 = (void *)MEMORY[0x1D17BA0A0]();
      v92 = obj;
      HMFGetOSLogHandle();
      v93 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v93, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v94 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v92, "communicationProtocol");
        HAPCommunicationProtocolDescription();
        v95 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "communicationProtocol");
        v96 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v96, "integerValue");
        HAPCommunicationProtocolDescription();
        v97 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v203 = v94;
        v204 = 2112;
        v205 = v95;
        v206 = 2112;
        v207 = v97;
        _os_log_impl(&dword_1CD062000, v93, OS_LOG_TYPE_INFO, "%{public}@Updating communication protocol from %@ to %@", buf, 0x20u);

        v49 = v192;
        v77 = obj;

      }
      objc_autoreleasePoolPop(v91);
      objc_msgSend(v6, "communicationProtocol");
      v98 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v92, "setCommunicationProtocol:", objc_msgSend(v98, "integerValue"));

      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "accessorySetupHash");
  v99 = objc_claimAutoreleasedReturnValue();
  if (v99)
  {
    v100 = (void *)v99;
    objc_msgSend(v77, "setupHash");
    v101 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "accessorySetupHash");
    v102 = (void *)objc_claimAutoreleasedReturnValue();
    v103 = objc_msgSend(v101, "isEqual:", v102);

    if ((v103 & 1) == 0)
    {
      objc_msgSend(v6, "accessorySetupHash");
      v104 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v77, "setSetupHash:", v104);

      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "targetUUIDs");
  v105 = objc_claimAutoreleasedReturnValue();
  if (v105)
  {
    v106 = (void *)v105;
    objc_msgSend(v77, "targetUUIDs");
    v107 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "targetUUIDs");
    v108 = (void *)objc_claimAutoreleasedReturnValue();
    v109 = objc_msgSend(v107, "isEqual:", v108);

    if ((v109 & 1) == 0)
    {
      objc_msgSend(v6, "targetUUIDs");
      v110 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v77, "updateTargetUUIDs:", v110);

      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "hardwareSupport");
  v111 = objc_claimAutoreleasedReturnValue();
  if (v111)
  {
    v112 = (void *)v111;
    v113 = objc_msgSend(v77, "hardwareSupport");
    objc_msgSend(v6, "hardwareSupport");
    v114 = (void *)objc_claimAutoreleasedReturnValue();
    v115 = objc_msgSend(v114, "BOOLValue");

    if (v113 != v115)
    {
      objc_msgSend(v6, "hardwareSupport");
      v116 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v77, "setHardwareSupport:", objc_msgSend(v116, "BOOLValue"));

      objc_msgSend(v77, "notifyClientsOfTargetControlSupportUpdate");
      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "connectivityInfo");
  v117 = objc_claimAutoreleasedReturnValue();
  if (v117)
  {
    v118 = (void *)v117;
    objc_msgSend(v77, "connectivityInfo");
    v119 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "connectivityInfo");
    v120 = (void *)objc_claimAutoreleasedReturnValue();
    v121 = HMFEqualObjects();

    if ((v121 & 1) == 0)
    {
      objc_msgSend(v6, "connectivityInfo");
      v122 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v77, "setConnectivityInfo:", v122);

      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "wiFiTransportCapabilities");
  v123 = objc_claimAutoreleasedReturnValue();
  if (v123)
  {
    v124 = (void *)v123;
    objc_msgSend(v77, "wiFiTransportCapabilities");
    v125 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "wiFiTransportCapabilities");
    v126 = (void *)objc_claimAutoreleasedReturnValue();
    v127 = objc_msgSend(v125, "isEqualToNumber:", v126);

    if ((v127 & 1) == 0)
    {
      objc_msgSend(v6, "wiFiTransportCapabilities");
      v128 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v77, "setWiFiTransportCapabilities:", v128);

      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "sleepInterval");
  v129 = objc_claimAutoreleasedReturnValue();
  if (v129)
  {
    v130 = (void *)v129;
    objc_msgSend(v77, "sleepInterval");
    v131 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "sleepInterval");
    v132 = (void *)objc_claimAutoreleasedReturnValue();
    v133 = objc_msgSend(v131, "isEqualToNumber:", v132);

    if ((v133 & 1) == 0)
    {
      objc_msgSend(v6, "sleepInterval");
      v134 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v77, "setSleepInterval:", v134);

      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "primaryProfileVersion");
  v135 = (void *)objc_claimAutoreleasedReturnValue();

  if (v135)
  {
    v136 = objc_alloc(MEMORY[0x1E0D286E0]);
    objc_msgSend(v6, "primaryProfileVersion");
    v137 = (void *)objc_claimAutoreleasedReturnValue();
    v138 = (void *)objc_msgSend(v136, "initWithVersionString:", v137);

    if (v138)
    {
      objc_msgSend(v77, "primaryProfileVersion");
      v139 = (void *)objc_claimAutoreleasedReturnValue();
      v140 = objc_msgSend(v138, "isEqualToVersion:", v139);

      if ((v140 & 1) == 0)
      {
        objc_msgSend(v77, "setPrimaryProfileVersion:", v138);
        objc_msgSend(v77, "networkRouterController");
        v141 = (void *)objc_claimAutoreleasedReturnValue();

        if (v141)
          objc_msgSend(v188, "_evaluateNetworkRouterManagementForTransaction:", v189);
        objc_msgSend(v189, "markChanged");
      }
    }

  }
  objc_msgSend(v6, "hasOnboardedForNaturalLighting");
  v142 = objc_claimAutoreleasedReturnValue();
  if (v142)
  {
    v143 = (void *)v142;
    objc_msgSend(v77, "hasOnboardedForNaturalLighting");
    v144 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "hasOnboardedForNaturalLighting");
    v145 = (void *)objc_claimAutoreleasedReturnValue();
    v146 = objc_msgSend(v144, "isEqualToNumber:", v145);

    if ((v146 & 1) == 0)
    {
      v147 = (void *)MEMORY[0x1D17BA0A0]();
      v148 = v77;
      HMFGetOSLogHandle();
      v149 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v149, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v150 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "hasOnboardedForNaturalLighting");
        v151 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v203 = v150;
        v204 = 2112;
        v205 = v151;
        _os_log_impl(&dword_1CD062000, v149, OS_LOG_TYPE_INFO, "%{public}@Updating has onboarded accessory for natural lighting: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v147);
      objc_msgSend(v6, "hasOnboardedForNaturalLighting");
      v152 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v148, "setHasOnboardedForNaturalLighting:", v152);

      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "initialServiceTypeUUIDs");
  v153 = objc_claimAutoreleasedReturnValue();
  if (v153)
  {
    v154 = (void *)v153;
    objc_msgSend(v6, "initialServiceTypeUUIDs");
    v155 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v77, "initialServiceTypeUUIDs");
    v156 = (void *)objc_claimAutoreleasedReturnValue();
    v157 = HMFEqualObjects();

    if ((v157 & 1) == 0)
    {
      objc_msgSend(v6, "initialServiceTypeUUIDs");
      v158 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v77, "setInitialServiceTypeUUIDs:", v158);

      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "needsOnboarding");
  v159 = objc_claimAutoreleasedReturnValue();
  if (v159)
  {
    v160 = (void *)v159;
    objc_msgSend(v6, "needsOnboarding");
    v161 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v77, "needsOnboarding");
    v162 = (void *)objc_claimAutoreleasedReturnValue();
    v163 = HMFEqualObjects();

    if ((v163 & 1) == 0)
    {
      objc_msgSend(v6, "needsOnboarding");
      v164 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v77, "setNeedsOnboarding:", v164);

      objc_msgSend(v189, "markChanged");
    }
  }
  objc_msgSend(v6, "suspendedState");
  v165 = objc_claimAutoreleasedReturnValue();
  if (v165)
  {
    v166 = (void *)v165;
    objc_msgSend(v6, "suspendedState");
    v167 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v77, "suspendedState"));
    v168 = (void *)objc_claimAutoreleasedReturnValue();
    v169 = objc_msgSend(v167, "isEqualToNumber:", v168);

    if (v169)
    {
      objc_msgSend(v6, "suspendedState");
      v170 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v77, "setSuspendedState:", objc_msgSend(v170, "unsignedIntegerValue"));

      objc_msgSend(v189, "markChanged");
    }
  }
  v186 = v6;
  objc_msgSend(v77, "handleUpdatedCHIPPropertiesOnAccessoryModel:actions:", v6, v189);
  v171 = dispatch_group_create();
  v197 = 0u;
  v198 = 0u;
  v199 = 0u;
  v200 = 0u;
  obja = v187;
  v172 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v197, v201, 16);
  if (v172)
  {
    v173 = v172;
    v174 = *(_QWORD *)v198;
    do
    {
      for (i = 0; i != v173; ++i)
      {
        if (*(_QWORD *)v198 != v174)
          objc_enumerationMutation(obja);
        v176 = *(void **)(*((_QWORD *)&v197 + 1) + 8 * i);
        dispatch_group_enter(v171);
        if (v49)
        {
          v177 = (void *)objc_msgSend(v176, "mutableCopy");
          objc_msgSend(v49, "transport");
          v178 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v177, "setTransport:", v178);
          v179 = (id)objc_msgSend(v177, "copy");

        }
        else
        {
          v179 = v176;
        }
        objc_msgSend(v77, "msgDispatcher");
        v180 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v77, "uuid");
        v181 = (void *)objc_claimAutoreleasedReturnValue();
        v195[0] = MEMORY[0x1E0C809B0];
        v195[1] = 3221225472;
        v195[2] = ____transactionAccessoryUpdated_block_invoke_48433;
        v195[3] = &unk_1E89C2730;
        v196 = v171;
        objc_msgSend(v180, "sendMessage:target:andInvokeCompletionHandler:", v179, v181, v195);

        v49 = v192;
      }
      v173 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v197, v201, 16);
    }
    while (v173);
  }

  dispatch_group_wait(v171, 0);
  v193[0] = MEMORY[0x1E0C809B0];
  v193[1] = 3221225472;
  v193[2] = ____transactionAccessoryUpdated_block_invoke_2_48434;
  v193[3] = &unk_1E89C02B8;
  v182 = v189;
  v194 = v182;
  objc_msgSend(v77, "transactionAccessoryUpdatedForPreferredMediaUser:completionHandler:", v186, v193);
  objc_msgSend(v49, "respondWithSuccess");

}

void ____transactionAccessoryUpdated_block_invoke_48433(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t ____transactionAccessoryUpdated_block_invoke_2_48434(uint64_t result, int a2)
{
  if (a2)
    return objc_msgSend(*(id *)(result + 32), "markChanged");
  return result;
}

void sub_1CD44D018(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD44EC00(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4504F8(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD450844(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD45091C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD450A04(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD450D0C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD450DF8(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD450F14(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD451C98(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD451D98(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD4525A8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4526A8(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD452B6C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD452D44(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void __handleUpdatedPassword(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  _BOOL4 v21;
  unsigned int v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  NSObject *v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  id obj;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  _QWORD v44[4];
  id v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  void *v55;
  _BYTE v56[5];
  _BYTE v57[128];
  __int128 buf;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v79 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v42 = a2;
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v40 = v3;
  objc_msgSend(v3, "services");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v4, "copy");

  obj = v5;
  v38 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v50, v57, 16);
  if (v38)
  {
    v37 = *(_QWORD *)v51;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v51 != v37)
        {
          v7 = v6;
          objc_enumerationMutation(obj);
          v6 = v7;
        }
        v39 = v6;
        v8 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * v6);
        objc_msgSend(v8, "type");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v9, "isEqualToString:", CFSTR("000000DA-0000-1000-8000-0026BB765291"));

        if (v10)
        {
          v48 = 0u;
          v49 = 0u;
          v46 = 0u;
          v47 = 0u;
          objc_msgSend(v8, "characteristics");
          v41 = (id)objc_claimAutoreleasedReturnValue();
          v11 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v46, v56, 16);
          if (!v11)
            goto LABEL_46;
          v43 = *(_QWORD *)v47;
          while (1)
          {
            v12 = 0;
            do
            {
              if (*(_QWORD *)v47 != v43)
                objc_enumerationMutation(v41);
              v13 = *(void **)(*((_QWORD *)&v46 + 1) + 8 * v12);
              objc_msgSend(v13, "type");
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              v15 = objc_msgSend(v14, "isEqualToString:", CFSTR("000000E4-0000-1000-8000-0026BB765291"));

              if (v15)
              {
                objc_msgSend(v13, "value");
                v16 = (void *)objc_claimAutoreleasedReturnValue();

                if (v16)
                {
                  objc_msgSend(v13, "value");
                  v17 = (void *)objc_claimAutoreleasedReturnValue();
                  v18 = v17;
                  if (v17)
                  {
                    v19 = objc_retainAutorelease(v17);
                    objc_msgSend(v19, "bytes");
                    objc_msgSend(v19, "length");

                    *(_QWORD *)&buf = 0;
                    v54 = 0;
                    v55 = 0;
                    v20 = 0;
                    v21 = 0;
                    if (!TLV8Get() && v54 == 1)
                    {
                      v22 = *(unsigned __int8 *)buf;
                      if (v22 > 1)
                        goto LABEL_21;
                      v23 = TLV8GetOrCopyCoalesced();
                      if (v23 == -6727 || !v54)
                      {
                        v20 = 0;
                        if (!v22)
                          goto LABEL_29;
                      }
                      else
                      {
                        if (v23)
                        {
LABEL_21:
                          v21 = 0;
                          v20 = 0;
                          goto LABEL_30;
                        }
                        v25 = objc_alloc(MEMORY[0x1E0CB3940]);
                        v20 = (id)objc_msgSend(v25, "initWithBytes:length:encoding:", (_QWORD)buf, v54, 4);
                        if (v55)
                        {
                          free(v55);
                          v55 = 0;
                        }
                        if (v20)
                        {
LABEL_29:
                          v21 = v22 != 0;
                          v20 = objc_retainAutorelease(v20);
                          goto LABEL_30;
                        }
                      }
                      v21 = 0;
                    }
LABEL_30:

                  }
                  else
                  {
                    v21 = 0;
                    v20 = 0;
                  }
                  v24 = v20;

                }
                else
                {
                  v21 = 0;
                  v24 = 0;
                }
                v77 = 0u;
                v78 = 0u;
                v75 = 0u;
                v76 = 0u;
                v73 = 0u;
                v74 = 0u;
                v71 = 0u;
                v72 = 0u;
                v69 = 0u;
                v70 = 0u;
                v67 = 0u;
                v68 = 0u;
                v65 = 0u;
                v66 = 0u;
                v63 = 0u;
                v64 = 0u;
                v61 = 0u;
                v62 = 0u;
                v59 = 0u;
                v60 = 0u;
                buf = 0u;
                v26 = v42;
                TLV8BufferInit();
                v27 = objc_retainAutorelease(v26);
                objc_msgSend(v27, "UTF8String");
                objc_msgSend(v27, "length");

                if (TLV8BufferAppend() || (LOBYTE(v55) = v42 != 0, TLV8BufferAppend()))
                {
                  v28 = 0;
                }
                else
                {
                  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytes:length:", buf);
                  v28 = (void *)objc_claimAutoreleasedReturnValue();
                }
                TLV8BufferFree();
                if (v21 != (v42 != 0) || v42 && (objc_msgSend(v24, "isEqualToString:", v27) & 1) == 0)
                {
                  v29 = (void *)MEMORY[0x1D17BA0A0]();
                  v30 = v40;
                  HMFGetOSLogHandle();
                  v31 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
                  {
                    HMFGetLogIdentifier();
                    v32 = (void *)objc_claimAutoreleasedReturnValue();
                    LODWORD(buf) = 138543362;
                    *(_QWORD *)((char *)&buf + 4) = v32;
                    _os_log_impl(&dword_1CD062000, v31, OS_LOG_TYPE_INFO, "%{public}@password does not match send update", (uint8_t *)&buf, 0xCu);

                  }
                  objc_autoreleasePoolPop(v29);
                  v33 = v28;
                  objc_initWeak((id *)&buf, v30);
                  objc_msgSend(v30, "workQueue");
                  v34 = (void *)objc_claimAutoreleasedReturnValue();
                  v44[0] = MEMORY[0x1E0C809B0];
                  v44[1] = 3221225472;
                  v44[2] = ____handleUpdatedPassword_block_invoke;
                  v44[3] = &unk_1E89C0678;
                  objc_copyWeak(&v45, (id *)&buf);
                  objc_msgSend(v30, "writeValue:toCharacteristic:queue:completion:", v33, v13, v34, v44);

                  objc_destroyWeak(&v45);
                  objc_destroyWeak((id *)&buf);

                }
              }
              ++v12;
            }
            while (v11 != v12);
            v35 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v46, v56, 16);
            v11 = v35;
            if (!v35)
            {
LABEL_46:

              break;
            }
          }
        }
        v6 = v39 + 1;
      }
      while (v39 + 1 != v38);
      v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v57, 16);
    }
    while (v38);
  }

}

void sub_1CD455CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)&STACK[0x220]);
  _Unwind_Resume(a1);
}

void ____handleUpdatedPassword_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = WeakRetained;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138543618;
    v10 = v8;
    v11 = 2112;
    v12 = v3;
    _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@unable to update password setting value with error: %@", (uint8_t *)&v9, 0x16u);

  }
  objc_autoreleasePoolPop(v5);

}

void __handleUpdatedMinimumUserPrivilege(void *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  BOOL v17;
  void *v18;
  id v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  NSObject *v28;
  void *v29;
  void *v30;
  id obj;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  _QWORD v37[4];
  id v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint8_t buf[4];
  void *v49;
  _BYTE v50[128];
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v35 = a1;
  objc_msgSend(v35, "services");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_msgSend(v3, "copy");

  obj = v4;
  v33 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v44, v51, 16);
  if (v33)
  {
    v32 = *(_QWORD *)v45;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v45 != v32)
        {
          v6 = v5;
          objc_enumerationMutation(obj);
          v5 = v6;
        }
        v34 = v5;
        v7 = *(void **)(*((_QWORD *)&v44 + 1) + 8 * v5);
        objc_msgSend(v7, "type");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "isEqualToString:", CFSTR("000000DA-0000-1000-8000-0026BB765291"));

        if (v9)
        {
          v42 = 0u;
          v43 = 0u;
          v40 = 0u;
          v41 = 0u;
          objc_msgSend(v7, "characteristics");
          v36 = (id)objc_claimAutoreleasedReturnValue();
          v10 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v40, v50, 16);
          if (v10)
          {
            v11 = *(_QWORD *)v41;
            do
            {
              for (i = 0; i != v10; ++i)
              {
                if (*(_QWORD *)v41 != v11)
                  objc_enumerationMutation(v36);
                v13 = *(void **)(*((_QWORD *)&v40 + 1) + 8 * i);
                objc_msgSend(v13, "type");
                v14 = (void *)objc_claimAutoreleasedReturnValue();
                v15 = objc_msgSend(v14, "isEqualToString:", CFSTR("000000E5-0000-1000-8000-0026BB765291"));

                if (v15)
                {
                  objc_msgSend(v13, "value");
                  v16 = (void *)objc_claimAutoreleasedReturnValue();
                  v17 = objc_msgSend(v16, "integerValue") == a2;

                  if (!v17)
                  {
                    v18 = (void *)MEMORY[0x1D17BA0A0]();
                    v19 = v35;
                    HMFGetOSLogHandle();
                    v20 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
                    {
                      HMFGetLogIdentifier();
                      v21 = (void *)objc_claimAutoreleasedReturnValue();
                      *(_DWORD *)buf = 138543362;
                      v49 = v21;
                      _os_log_impl(&dword_1CD062000, v20, OS_LOG_TYPE_INFO, "%{public}@privilege does not match send update", buf, 0xCu);

                    }
                    objc_autoreleasePoolPop(v18);
                    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a2);
                    v22 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a2);
                    v23 = (void *)objc_claimAutoreleasedReturnValue();
                    v39 = v22;
                    objc_msgSend(v13, "validateValueForWrite:outValue:", v23, &v39);
                    v24 = (void *)objc_claimAutoreleasedReturnValue();
                    v25 = v39;

                    if (v24)
                    {
                      v26 = (void *)MEMORY[0x1D17BA0A0]();
                      v27 = v19;
                      HMFGetOSLogHandle();
                      v28 = objc_claimAutoreleasedReturnValue();
                      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
                      {
                        HMFGetLogIdentifier();
                        v29 = (void *)objc_claimAutoreleasedReturnValue();
                        *(_DWORD *)buf = 138543362;
                        v49 = v29;
                        _os_log_impl(&dword_1CD062000, v28, OS_LOG_TYPE_ERROR, "%{public}@invalid minimum user privilege value", buf, 0xCu);

                      }
                      objc_autoreleasePoolPop(v26);
                    }
                    else
                    {
                      objc_initWeak((id *)buf, v19);
                      objc_msgSend(v19, "workQueue");
                      v30 = (void *)objc_claimAutoreleasedReturnValue();
                      v37[0] = MEMORY[0x1E0C809B0];
                      v37[1] = 3221225472;
                      v37[2] = ____handleUpdatedMinimumUserPrivilege_block_invoke;
                      v37[3] = &unk_1E89C0678;
                      objc_copyWeak(&v38, (id *)buf);
                      objc_msgSend(v19, "writeValue:toCharacteristic:queue:completion:", v25, v13, v30, v37);

                      objc_destroyWeak(&v38);
                      objc_destroyWeak((id *)buf);
                    }

                  }
                }
              }
              v10 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v40, v50, 16);
            }
            while (v10);
          }

        }
        v5 = v34 + 1;
      }
      while (v34 + 1 != v33);
      v33 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v44, v51, 16);
    }
    while (v33);
  }

}

void sub_1CD456254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id a41)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a41);
  _Unwind_Resume(a1);
}

void ____handleUpdatedMinimumUserPrivilege_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = WeakRetained;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138543618;
    v10 = v8;
    v11 = 2112;
    v12 = v3;
    _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@unable to update privilege privilege value with error: %@", (uint8_t *)&v9, 0x16u);

  }
  objc_autoreleasePoolPop(v5);

}

void completeWithError(void *a1, void *a2)
{
  id v3;
  void *v4;
  void (**v5)(id, id);

  v5 = a1;
  v3 = a2;
  if (v5)
  {
    if (v3)
    {
      v5[2](v5, v3);
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 52);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5[2](v5, v4);

    }
  }

}

id makeConfigurationControl(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = objc_alloc_init(MEMORY[0x1E0D16628]);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D16630]), "initWithValue:", a1);
  objc_msgSend(v2, "setOperationType:", v3);

  return v2;
}

id makeStationConfiguration(void *a1, void *a2)
{
  id v3;
  objc_class *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v3 = a2;
  v4 = (objc_class *)MEMORY[0x1E0D16640];
  v5 = a1;
  v6 = objc_alloc_init(v4);
  objc_msgSend(v6, "setSSID:", v5);

  v7 = objc_alloc(MEMORY[0x1E0D16638]);
  if (v3)
  {
    v8 = (void *)objc_msgSend(v7, "initWithValue:", 1);
    objc_msgSend(v6, "setSecurityMode:", v8);

    objc_msgSend(v6, "setPSK:", v3);
  }
  else
  {
    v9 = (void *)objc_msgSend(v7, "initWithValue:", 0);
    objc_msgSend(v6, "setSecurityMode:", v9);

  }
  return v6;
}

id encodeRootObjectForRemote(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (void *)MEMORY[0x1D17BA0A0]();
  v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D28628]), "initWithName:", CFSTR("com.apple.homed.hmdutil.encode-remote."));
  v10 = -[HMDRemoteKeyedArchiver initForWritingWithRemoteDeviceIsOnSameAccount:remoteGateway:remoteUserIsAdministrator:user:supportedFeatures:]([HMDRemoteKeyedArchiver alloc], "initForWritingWithRemoteDeviceIsOnSameAccount:remoteGateway:remoteUserIsAdministrator:user:supportedFeatures:", 0, 0, 0, v6, v7);
  objc_msgSend(v10, "encodeObject:forKey:", v5, *MEMORY[0x1E0CB2CD0]);
  objc_msgSend(v10, "finishEncoding");
  objc_msgSend(v10, "encodedData");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v8);
  return v11;
}

id encodeRootObjectForRemoteDeviceOnSameAccountMigrateToHH2(void *a1, int a2, int a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;

  v5 = a1;
  v6 = (void *)MEMORY[0x1D17BA0A0]();
  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D28628]), "initWithName:", CFSTR("com.apple.homed.hmdutil.encode-remote-same."));
  if (a2)
  {
    v8 = (id)homedSupportedFeatures;
    if (a3)
    {
      objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithArray:", v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "addObject:", &unk_1E8B32F58);
      v10 = objc_msgSend(v9, "copy");

      v11 = 4;
      v8 = (id)v10;
    }
    else
    {
      v11 = 4;
    }
  }
  else
  {
    v8 = &unk_1E8B31E00;
    v11 = 3;
  }
  v12 = -[HMDRemoteKeyedArchiver initForWritingWithRemoteDeviceIsOnSameAccount:remoteGateway:remoteUserIsAdministrator:user:dataVersion:supportedFeatures:]([HMDRemoteKeyedArchiver alloc], "initForWritingWithRemoteDeviceIsOnSameAccount:remoteGateway:remoteUserIsAdministrator:user:dataVersion:supportedFeatures:", 1, 0, 1, 0, v11, v8);
  objc_msgSend(v12, "encodeObject:forKey:", v5, *MEMORY[0x1E0CB2CD0]);
  objc_msgSend(v12, "finishEncoding");
  objc_msgSend(v12, "encodedData");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v6);
  return v13;
}

id encodeRootObjectForSPIClients(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = (void *)MEMORY[0x1E0D285D0];
  v2 = a1;
  objc_msgSend(v1, "internalMessageWithName:messagePayload:", CFSTR("kDummyMessageForEntitledXPC"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  encodeRootObjectForIncomingXPCMessage(v2, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void launchURL(uint64_t a1)
{
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", a1);
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "openSensitiveURL:withOptions:", v2, 0);

}

__CFString *regionAsString(void *a1)
{
  id v1;
  __CFString *v2;

  v1 = a1;
  if (v1)
  {
    if (isInternalBuild())
    {
      objc_msgSend(v1, "hm_description");
      v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v2 = CFSTR("[]");
    }
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

void createDirectory(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  int v6;
  void *v7;
  NSObject *v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  id v16;
  __int16 v17;
  id v18;
  uint64_t v19;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v19 = *MEMORY[0x1E0CB2AA8];
  v20[0] = &unk_1E8B33018;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v20, &v19, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0;
  if ((objc_msgSend(v3, "fileExistsAtPath:isDirectory:", v1, &v12) & 1) != 0)
  {
    v4 = 0;
    if (v12)
    {
LABEL_3:
      v10 = v4;
      objc_msgSend(v3, "setAttributes:ofItemAtPath:error:", v2, v1, &v10);
      v5 = v10;

      v4 = v5;
      goto LABEL_8;
    }
  }
  else
  {
    v11 = 0;
    v6 = objc_msgSend(v3, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v1, 1, v2, &v11);
    v4 = v11;
    v12 = v6;
    if (v6)
      goto LABEL_3;
  }
  v7 = (void *)MEMORY[0x1D17BA0A0]();
  HMFGetOSLogHandle();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    HMFGetLogIdentifier();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543874;
    v14 = v9;
    v15 = 2112;
    v16 = v1;
    v17 = 2112;
    v18 = v4;
    _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_ERROR, "%{public}@Could not create directory path %@ - error %@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v7);
LABEL_8:

}

id mapHAPPairingErrorToHMError(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  const __CFString *v5;
  uint64_t v6;
  const __CFString *v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  void *v12;
  const __CFString *v13;
  uint64_t v14;

  v1 = a1;
  objc_msgSend(v1, "domain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)*MEMORY[0x1E0D160B0];

  if (v2 == v3)
  {
    v11 = objc_msgSend(v1, "code");
    switch(v11)
    {
      case 18:
        v4 = (void *)MEMORY[0x1E0CB35C8];
        v5 = CFSTR("Accessory is already paired");
        v6 = 13;
        goto LABEL_3;
      case 19:
      case 22:
      case 24:
      case 27:
      case 28:
      case 29:
      case 31:
      case 32:
      case 33:
        break;
      case 20:
        v4 = (void *)MEMORY[0x1E0CB35C8];
        v5 = CFSTR("Currently associated WiFi network is not compatible with the accessory");
        v7 = CFSTR("Associate with a 2.4 GHz WiFi network and try again");
        v6 = 90;
        goto LABEL_4;
      case 21:
        v4 = (void *)MEMORY[0x1E0CB35C8];
        v5 = CFSTR("This device is not currently associated to a Home WiFi network");
        v7 = CFSTR("Associate to a WiFi network (from Settings -> WiFi) and try again");
        v6 = 78;
        goto LABEL_4;
      case 23:
        v4 = (void *)MEMORY[0x1E0CB35C8];
        v5 = CFSTR("Accessories cannot be added to enterprise network");
        v6 = 99;
        goto LABEL_3;
      case 25:
        v12 = (void *)MEMORY[0x1E0CB35C8];
        v13 = CFSTR("Accessory did not join the configured network");
        v14 = 2016;
        goto LABEL_17;
      case 26:
        v4 = (void *)MEMORY[0x1E0CB35C8];
        v5 = CFSTR("Failed to join WiFi network");
        v7 = CFSTR("Ensure there is good WiFi signal and try again");
        v6 = 102;
        goto LABEL_4;
      case 30:
        v12 = (void *)MEMORY[0x1E0CB35C8];
        v13 = CFSTR("No supported Thread router or Thread credentials not found");
        v14 = 2010;
        goto LABEL_17;
      case 34:
        v12 = (void *)MEMORY[0x1E0CB35C8];
        v13 = CFSTR("Failed to connect");
        v14 = 2015;
LABEL_17:
        objc_msgSend(v12, "hmPrivateErrorWithCode:description:underlyingError:", v14, v13, v1);
        v8 = objc_claimAutoreleasedReturnValue();
        goto LABEL_5;
      case 35:
        v4 = (void *)MEMORY[0x1E0CB35C8];
        v5 = CFSTR("Home hub required");
        v7 = CFSTR("Add a Home hub to Apple Home and try again");
        v6 = 91;
        goto LABEL_4;
      case 36:
        v4 = (void *)MEMORY[0x1E0CB35C8];
        v6 = 79;
        v5 = 0;
        goto LABEL_3;
      default:
        if (v11 != 8)
          break;
        v4 = (void *)MEMORY[0x1E0CB35C8];
        v5 = CFSTR("Connection was lost with the accessory");
        v7 = CFSTR("Ensure there is good WiFi signal, reset the accessory and try again");
        v6 = 54;
        goto LABEL_4;
    }
  }
  v4 = (void *)MEMORY[0x1E0CB35C8];
  v5 = CFSTR("Pairing Failed");
  v6 = 18;
LABEL_3:
  v7 = 0;
LABEL_4:
  objc_msgSend(v4, "hmErrorWithCode:description:reason:suggestion:underlyingError:", v6, v5, 0, v7, v1);
  v8 = objc_claimAutoreleasedReturnValue();
LABEL_5:
  v9 = (void *)v8;

  return v9;
}

id determineHomeKitDaemonRootStorePath()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  const __CFString *v5;
  void *v6;

  NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 1uLL, 1);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "firstObject");
  v1 = objc_claimAutoreleasedReturnValue();
  if (v1)
  {
    v2 = (void *)v1;
    objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "productPlatform");

    if (v4 == 1)
      v5 = CFSTR("HomeKit");
    else
      v5 = CFSTR("homed");
    objc_msgSend(v2, "stringByAppendingPathComponent:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

void __initializePaths_block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  _QWORD v62[4];
  id v63;
  _QWORD v64[3];
  uint64_t v65;
  _QWORD v66[2];

  v66[1] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1D17BA0A0]();
  determineHomeKitDaemonRootStorePath();
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)storeDirectoryPath;
  storeDirectoryPath = v1;

  if (storeDirectoryPath)
  {
    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("protected-home.config"));
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = (void *)configProtectedDataStorePath;
    configProtectedDataStorePath = v3;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("vendor-id-store"));
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = (void *)configVendorIDStorePath;
    configVendorIDStorePath = v5;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("protected-metadata.config"));
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = (void *)configProtectedMetadataPath;
    configProtectedMetadataPath = v7;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("plain-metadata.config"));
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = (void *)configPlainMetadataPath;
    configPlainMetadataPath = v9;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("server-token"));
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)serverTokenDataStorePath;
    serverTokenDataStorePath = v11;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("transaction-journal"));
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = (void *)transactionJournalDataStorePath;
    transactionJournalDataStorePath = v13;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("datasync-journal"));
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = (void *)idsDataSyncJournalDataStorePath;
    idsDataSyncJournalDataStorePath = v15;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("blacklisted-bundles"));
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = (void *)blacklistedBundlesStorePath;
    blacklistedBundlesStorePath = v17;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("registered-applications"));
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = (void *)registeredApplicationsDataStorePath;
    registeredApplicationsDataStorePath = v19;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("bulletin-board"));
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = (void *)bulletinBoardDataStorePath;
    bulletinBoardDataStorePath = v21;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("cloud-cache"));
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = (void *)cloudCachePath;
    cloudCachePath = v23;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("datastore.sqlite"));
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = (void *)sqlitePath;
    sqlitePath = v25;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("eventstore-devel.sqlite"));
    v27 = objc_claimAutoreleasedReturnValue();
    v28 = (void *)eventStorePath;
    eventStorePath = v27;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingString:", CFSTR("/BLECache"));
    v29 = objc_claimAutoreleasedReturnValue();
    v30 = (void *)bleAccessoryCachePath;
    bleAccessoryCachePath = v29;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("com.apple.relaunch.assertion.plist"));
    v31 = objc_claimAutoreleasedReturnValue();
    v32 = (void *)launchdAssertionPlistPath;
    launchdAssertionPlistPath = v31;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("metricsCounters"));
    v33 = objc_claimAutoreleasedReturnValue();
    v34 = (void *)metricsCountersPersistentStorePath;
    metricsCountersPersistentStorePath = v33;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("eventcounters-groupstore"));
    v35 = objc_claimAutoreleasedReturnValue();
    v36 = (void *)eventCountersDataStorePath;
    eventCountersDataStorePath = v35;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("eventcounters-datastore"));
    v37 = objc_claimAutoreleasedReturnValue();
    v38 = (void *)eventCountersDataStoreLegacyPath;
    eventCountersDataStoreLegacyPath = v37;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("eventflags-datastore"));
    v39 = objc_claimAutoreleasedReturnValue();
    v40 = (void *)eventFlagsDataStorePath;
    eventFlagsDataStorePath = v39;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("core.sql"));
    v41 = objc_claimAutoreleasedReturnValue();
    v42 = (void *)coreDataDataStorePath;
    coreDataDataStorePath = v41;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("/HH1ToHH2PerDeviceMigration"));
    v43 = objc_claimAutoreleasedReturnValue();
    v44 = (void *)hh1ToHH2PerDeviceMigrationDirectoryPath;
    hh1ToHH2PerDeviceMigrationDirectoryPath = v43;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("/hh1TestArchives"));
    v45 = objc_claimAutoreleasedReturnValue();
    v46 = (void *)hh1TestArchivesDirectoryPath;
    hh1TestArchivesDirectoryPath = v45;

    HMDCreateHomeKitDaemonCacheDirectory();
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v47, "stringByAppendingPathComponent:", CFSTR("hh2MigratorRecordStore.plist"));
    v48 = objc_claimAutoreleasedReturnValue();
    v49 = (void *)hh2MigratorRecordStorePath;
    hh2MigratorRecordStorePath = v48;

    objc_msgSend(v47, "stringByAppendingPathComponent:", CFSTR("hh2MigrationFailureRecordStore.plist"));
    v50 = objc_claimAutoreleasedReturnValue();
    v51 = (void *)hh2MigrationFailureRecordStorePath;
    hh2MigrationFailureRecordStorePath = v50;

    objc_msgSend(v47, "stringByAppendingPathComponent:", CFSTR("hh2MigrationLogEventStore.plist"));
    v52 = objc_claimAutoreleasedReturnValue();
    v53 = (void *)hh2MigrationLogEventPath;
    hh2MigrationLogEventPath = v52;

    v65 = *MEMORY[0x1E0CB2AA8];
    v66[0] = &unk_1E8B33018;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v66, &v65, 1);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    v64[0] = storeDirectoryPath;
    v64[1] = bleAccessoryCachePath;
    v64[2] = hh1ToHH2PerDeviceMigrationDirectoryPath;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v64, 3);
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    v62[0] = MEMORY[0x1E0C809B0];
    v62[1] = 3221225472;
    v62[2] = ___initializeProtectedStorePaths_block_invoke;
    v62[3] = &unk_1E89ABE90;
    v63 = v54;
    v56 = v54;
    objc_msgSend(v55, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v62);

  }
  objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithIdentifier:", CFSTR("com.apple.HomeKitDaemon"));
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v57, "pathForResource:ofType:", CFSTR("plain-metadata-full.config"), 0);
  v58 = objc_claimAutoreleasedReturnValue();
  v59 = (void *)builtinConfigMetadataDictionaryPath;
  builtinConfigMetadataDictionaryPath = v58;

  if (!builtinConfigMetadataDictionaryPath)
  {
    objc_msgSend(v57, "pathForResource:ofType:", CFSTR("plain-metadata.config"), 0);
    v60 = objc_claimAutoreleasedReturnValue();
    v61 = (void *)builtinConfigMetadataDictionaryPath;
    builtinConfigMetadataDictionaryPath = v60;

  }
  objc_autoreleasePoolPop(v0);
}

void ___initializeProtectedStorePaths_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  NSObject *v10;
  void *v11;
  const char *v12;
  id v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  id v17;
  __int16 v18;
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v5 = v3;
  v6 = v4;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v7, "fileExistsAtPath:isDirectory:", v5, 0) & 1) != 0)
  {
    v13 = 0;
    objc_msgSend(v7, "setAttributes:ofItemAtPath:error:", v6, v5, &v13);
    v8 = v13;
    v9 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v15 = v11;
      v16 = 2112;
      v17 = v5;
      v18 = 2112;
      v19 = v8;
      v12 = "%{public}@Setting attributes to directory path %@ resulted into error : %@";
LABEL_6:
      _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_INFO, v12, buf, 0x20u);

    }
  }
  else
  {
    v13 = 0;
    objc_msgSend(v7, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v5, 1, v6, &v13);
    v8 = v13;
    v9 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v15 = v11;
      v16 = 2112;
      v17 = v5;
      v18 = 2112;
      v19 = v8;
      v12 = "%{public}@Create store directory path %@ finished with error %@";
      goto LABEL_6;
    }
  }

  objc_autoreleasePoolPop(v9);
}

void __initializeCapabilitiesAndTimeouts_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  const void *v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  __CFString *v13;
  __CFString *v14;
  const __CFString *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  HMDHomeKitVersion *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  int v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t Int64;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t i;
  uint64_t v70;
  void *v71;
  id v72;
  void *v73;
  void *v74;
  void *v75;
  id v76;
  uint64_t v77;
  const void *v78;
  uint64_t v79;
  void *v80;
  NSObject *v81;
  NSObject *v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  void *v173;
  void *v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  int v179;
  _BYTE buf[24];
  __CFString *v181;
  uint64_t v182;

  v182 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17BA0A0]();
  v3 = *(id *)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  HMFGetOSLogHandle();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    *(_QWORD *)&buf[4] = v7;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v4;
    _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Initializing with product info: %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v5);

  v8 = MGCopyAnswer();
  if (v8)
  {
    v9 = (const void *)v8;
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithString:", v8);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)uniqueDeviceId;
    uniqueDeviceId = v10;

    CFRelease(v9);
  }
  v12 = +[HMDDeviceCapabilities isAppleMediaAccessory](HMDDeviceCapabilities, "isAppleMediaAccessory");
  v13 = CFSTR("00000000-0000-0000-0000-C2EE6102B308");
  if (!v12)
    v13 = CFSTR("20BC605A-C33B-4D36-B885-C2EE6102B308");
  v14 = v13;
  if ((-[__CFString isEqualToString:](v14, "isEqualToString:", CFSTR("20BC605A-C33B-4D36-B885-C2EE6102B308")) & 1) != 0)
  {
    v15 = CFSTR("NonMediaDevice/");
  }
  else if (-[__CFString isEqualToString:](v14, "isEqualToString:", CFSTR("00000000-0000-0000-0000-C2EE6102B308")))
  {
    v15 = CFSTR("UnknownMediaDevice/");
  }
  else
  {
    v15 = &stru_1E89C3E38;
  }
  v16 = (void *)MEMORY[0x1D17BA0A0]();
  HMFGetOSLogHandle();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543874;
    *(_QWORD *)&buf[4] = v18;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v15;
    *(_WORD *)&buf[22] = 2112;
    v181 = v14;
    _os_log_impl(&dword_1CD062000, v17, OS_LOG_TYPE_DEFAULT, "%{public}@Setting media remote ID: %@%@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v16);
  v19 = (void *)_mediaRouteIdentifier;
  _mediaRouteIdentifier = (uint64_t)v14;

  +[HMDHomeKitVersion currentVersion](HMDHomeKitVersion, "currentVersion");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%tu.%tu"), objc_msgSend(v20, "majorVersion"), objc_msgSend(v20, "minorVersion"));
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(v21, "doubleValue");
  objc_msgSend(v22, "numberWithDouble:");
  v23 = objc_claimAutoreleasedReturnValue();
  v24 = (void *)homedVersion;
  homedVersion = v23;

  v25 = -[HMDHomeKitVersion initWithVersionString:]([HMDHomeKitVersion alloc], "initWithVersionString:", CFSTR("3.0"));
  v26 = (void *)minimumSupportedResidentHomeKitVersion;
  minimumSupportedResidentHomeKitVersion = (uint64_t)v25;

  v27 = (void *)homedSupportedFeatures;
  homedSupportedFeatures = (uint64_t)&unk_1E8B31E18;

  if (isiOSDevice() || isTVOSDevice())
  {
    objc_msgSend((id)homedSupportedFeatures, "arrayByAddingObjectsFromArray:", &unk_1E8B31E30);
    v28 = objc_claimAutoreleasedReturnValue();
    v29 = (void *)homedSupportedFeatures;
    homedSupportedFeatures = v28;

  }
  +[HMDDeviceCapabilities deviceCapabilities](HMDDeviceCapabilities, "deviceCapabilities");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = objc_msgSend(v30, "supportsFaceClassification");

  if (v31)
  {
    objc_msgSend((id)homedSupportedFeatures, "arrayByAddingObject:", &unk_1E8B330A8);
    v32 = objc_claimAutoreleasedReturnValue();
    v33 = (void *)homedSupportedFeatures;
    homedSupportedFeatures = v32;

  }
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:", CFSTR("NSDebugDescription"), CFSTR("NSLocalizedDescription"), CFSTR("RequestUUID"), CFSTR("ServerErrorDescription"), CFSTR("CKErrorDescription"), 0);
  v34 = objc_claimAutoreleasedReturnValue();
  v35 = (void *)ckErrorUserInfoKeys;
  ckErrorUserInfoKeys = v34;

  LODWORD(v175) = 0;
  CFDictionaryGetTypeID();
  v36 = (void *)CFPrefs_CopyTypedValue();
  if (v36)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v36, "objectForKey:", CFSTR("kHomesDataBlobKey"));
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v36, "objectForKey:", CFSTR("kDataSignatureKey"));
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      if (v37)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          if (v38)
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              v174 = v2;
              v39 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBase64EncodedString:options:", CFSTR("KQveymsUTHc1aqyc73tl3VuYb4Ls0j1+RnvdDxNymjU="), 0);
              v172 = objc_retainAutorelease(v37);
              objc_msgSend(v172, "bytes");
              objc_msgSend(v172, "length");
              objc_msgSend(objc_retainAutorelease(v38), "bytes");
              v40 = objc_retainAutorelease(v39);
              objc_msgSend(v40, "bytes");
              if (!cced25519_verify_compat())
              {
                v173 = (void *)MEMORY[0x1E0CB3710];
                v41 = (void *)MEMORY[0x1E0C99E60];
                *(_QWORD *)buf = objc_opt_class();
                *(_QWORD *)&buf[8] = objc_opt_class();
                *(_QWORD *)&buf[16] = objc_opt_class();
                objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", buf, 3);
                v42 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v41, "setWithArray:", v42);
                v43 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v173, "deserializeObjectWithData:allowedClasses:", v172, v43);
                v44 = (void *)objc_claimAutoreleasedReturnValue();

                if (v44)
                {
                  objc_opt_class();
                  if ((objc_opt_isKindOfClass() & 1) != 0)
                  {
                    objc_msgSend(v44, "objectForKey:", CFSTR("kHomeDataBlobKey"));
                    v45 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v44, "objectForKey:", CFSTR("kControllerKeyPairKey"));
                    v46 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v44, "objectForKey:", CFSTR("kControllerPairingNameKey"));
                    v47 = objc_claimAutoreleasedReturnValue();
                    v48 = (void *)v47;
                    if (v45 && v46 && v47)
                    {
                      objc_msgSend(MEMORY[0x1E0D165F0], "systemStore");
                      v49 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v49, "removeControllerKeyPairWithError:", 0);
                      if (objc_msgSend(v49, "saveKeyPair:username:syncable:error:", v46, v48, 0, 0))
                      {
                        v50 = (id)configProtectedDataStorePath;
                        v51 = +[HMDPersistentStore writeData:toStorePath:dataLabel:](HMDPersistentStore, "writeData:toStorePath:dataLabel:", v45, v50, CFSTR("home data"));

                        retailDemoDataEncoded = 1;
                      }

                    }
                  }
                }

              }
              v2 = v174;
            }
          }
        }
      }

    }
  }

  if ((isInternalBuild() & 1) != 0
    || (objc_msgSend(MEMORY[0x1E0D28690], "productInfo"),
        v52 = (void *)objc_claimAutoreleasedReturnValue(),
        v53 = objc_msgSend(v52, "productVariant"),
        v52,
        v53 == 2))
  {
    *(_DWORD *)buf = 0;
    Int64 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      skipAuthPromptDialog = Int64 != 0;
    *(_DWORD *)buf = 0;
    v55 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      showAuthDialog = v55 != 0;
    *(_DWORD *)buf = 0;
    v56 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      disableCloudDataSync = v56 != 0;
    *(_DWORD *)buf = 0;
    v57 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      disableLegacyCloudDataSync = v57 != 0;
    *(_DWORD *)buf = 0;
    v58 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      enableWakeNotifications = v58 != 0;
    *(_DWORD *)buf = 0;
    v59 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      disableWACBrowser = v59 != 0;
    *(_DWORD *)buf = 0;
    v60 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      delayBatchedReadWrite = v60 != 0;
    *(_DWORD *)buf = 0;
    v61 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      enableNetworkLogging = v61 != 0;
    *(_DWORD *)buf = 0;
    v62 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      enableRetailDemoSetup = v62 != 0;
    v179 = 0;
    CFDictionaryGetTypeID();
    v63 = (void *)CFPrefs_CopyTypedValue();
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v64 = (void *)objc_claimAutoreleasedReturnValue();
    v175 = 0u;
    v176 = 0u;
    v177 = 0u;
    v178 = 0u;
    v65 = v63;
    v66 = objc_msgSend(v65, "countByEnumeratingWithState:objects:count:", &v175, buf, 16);
    if (v66)
    {
      v67 = v66;
      v68 = *(_QWORD *)v176;
      do
      {
        for (i = 0; i != v67; ++i)
        {
          if (*(_QWORD *)v176 != v68)
            objc_enumerationMutation(v65);
          v70 = *(_QWORD *)(*((_QWORD *)&v175 + 1) + 8 * i);
          v71 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDString:", v70);
          v72 = objc_alloc(MEMORY[0x1E0CB3A28]);
          objc_msgSend(v65, "objectForKey:", v70);
          v73 = (void *)objc_claimAutoreleasedReturnValue();
          v74 = (void *)objc_msgSend(v72, "initWithUUIDString:", v73);

          objc_msgSend(v64, "setObject:forKey:", v74, v71);
        }
        v67 = objc_msgSend(v65, "countByEnumeratingWithState:objects:count:", &v175, buf, 16);
      }
      while (v67);
    }

    v75 = (void *)preferredPrimaryForHome;
    preferredPrimaryForHome = (uint64_t)v64;
    v76 = v64;

    CFStringGetTypeID();
    v77 = CFPrefs_CopyTypedValue();
    if (v77)
    {
      v78 = (const void *)v77;
      v79 = CKContainerEnvironmentFromString();
      v80 = (void *)MEMORY[0x1D17BA0A0]();
      HMFGetOSLogHandle();
      v81 = (id)objc_claimAutoreleasedReturnValue();
      v82 = v81;
      if (v79)
      {
        if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v83 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          *(_QWORD *)&buf[4] = v83;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v78;
          _os_log_impl(&dword_1CD062000, v82, OS_LOG_TYPE_DEFAULT, "%{public}@Overriding CloudKit container environment to %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v80);
        cloudKitContainerEnvironment = v79;
      }
      else
      {
        if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v84 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          *(_QWORD *)&buf[4] = v84;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v78;
          _os_log_impl(&dword_1CD062000, v82, OS_LOG_TYPE_ERROR, "%{public}@Invalid CloudKit environment %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v80);
      }
      CFRelease(v78);
    }
    *(_DWORD *)buf = 0;
    v85 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudPushBatchLimit = v85;
    *(_DWORD *)buf = 0;
    v86 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maxCloudOperationRetries = v86;
    CFPrefs_GetDouble();
    minimumTimerRecurrence = v87;
    *(_DWORD *)buf = 0;
    v88 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudUploadTimerInterval = v88;
    *(_DWORD *)buf = 0;
    v89 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudUploadMaximumTimerInterval = v89;
    *(_DWORD *)buf = 0;
    v90 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudUploadTimerIntervalExponentialFactor = v90;
    *(_DWORD *)buf = 0;
    v91 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudZoneUploadTimerInitialInterval = v91;
    *(_DWORD *)buf = 0;
    v92 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudZoneUploadTimerInterval = v92;
    *(_DWORD *)buf = 0;
    v93 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudRecordSizeLimit = v93;
    *(_DWORD *)buf = 0;
    v94 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      userPushCacheTimeInterval = v94;
    *(_DWORD *)buf = 0;
    v95 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      aggressiveControllerKeyPollInterval = v95;
    *(_DWORD *)buf = 0;
    v96 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      watchdogControllerKeyPollTimeout = v96;
    *(_DWORD *)buf = 0;
    v97 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      controllerKeyPollInterval = v97;
    *(_DWORD *)buf = 0;
    v98 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      keychainPopupTimerInterval = v98;
    *(_DWORD *)buf = 0;
    v99 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      checkRemoteAccessTimeout = v99;
    *(_DWORD *)buf = 0;
    v100 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsCommitTimeoutNanoseconds = 1000000000 * v100;
    *(_DWORD *)buf = 0;
    v101 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsIdleClientTimeoutNanoseconds = 1000000000 * v101;
    *(_DWORD *)buf = 0;
    v102 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsIdleServertTimeoutNanoseconds = 1000000000 * v102;
    *(_DWORD *)buf = 0;
    v103 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsSendInternalRequestTimeoutNanoseconds = 1000000000 * v103;
    *(_DWORD *)buf = 0;
    v104 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsSendInternalRequestToWatchTimeoutNanoseconds = 1000000000 * v104;
    *(_DWORD *)buf = 0;
    v105 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsSendUserRequestTimeoutNanoseconds = 1000000000 * v105;
    *(_DWORD *)buf = 0;
    v106 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      btleReachabilityTimerNanoseconds = 1000000000 * v106;
    *(_DWORD *)buf = 0;
    v107 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      btleReachabilityLeewayNanoseconds = 1000000000 * v107;
    *(_DWORD *)buf = 0;
    v108 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      btleReachabilityProbeReduceFactor = v108;
    *(_DWORD *)buf = 0;
    v109 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      remotePendingResponseTimerNanoseconds = 1000000000 * v109;
    *(_DWORD *)buf = 0;
    v110 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      remotePendingResponseLeewayNanoseconds = 1000000000 * v110;
    *(_DWORD *)buf = 0;
    v111 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      remotePendingResponseDecayScale = v111;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      accessoryConnectivityWaitPeriod = v112;
    *(_DWORD *)buf = 0;
    v113 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudDataSyncInProgressWaitPeriod = v113;
    *(_DWORD *)buf = 0;
    v114 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      controllerKeyNotLandingWaitPeriod = v114;
    *(_DWORD *)buf = 0;
    v115 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      controllerKeyNotLandingShortCircuitWaitPeriod = v115;
    if (isHomePod())
      assistantClientReadWriteTimeoutSeconds = 0x4022000000000000;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      assistantClientReadWriteTimeoutSeconds = v116;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      assistantClientActionSetTimeoutSeconds = v117;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      disableNotificationsDeferPeriod = v118;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      coalesceNotificationsPeriod = v119;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      pendingResponseTickPeriod = v120;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      pendingResponseMaxPeriod = v121;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      delayNotificationsPeriod = v122;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      remoteReachabilityNotificationsDeferPeriod = v123;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      remoteReachabilityDeregistrationDeferPeriod = v124;
    *(_DWORD *)buf = 0;
    v125 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      deviceConnectionKeepAliveTimerPeriod = v125;
    *(_DWORD *)buf = 0;
    v126 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      deviceConnectionKeepAliveResponseTimeoutPeriod = v126;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      pairingInterruptionGracePeriod = v127;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      pairingReconfirmWaitPeriod = v128;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      vendorInfoFetchPeriod = v129;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      attestationInfoFetchPeriod = v130;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      keyTransferBroadcastMaximumDelay = v131;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      mediaBrowserProcessingInterval = v132;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      disableReprivsionBrowsingPeriodInMinutes = v133;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      authServerRetryTimeIntervalInSeconds = v134;
    *(_DWORD *)buf = 0;
    v135 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      authServerRetryCount = v135;
    _overrideNumberArray((void **)&supportedResolutions);
    _overrideNumberArray((void **)&supportedVideoCodecs);
    _overrideNumberArray((void **)&supportedAudioCodecs);
    _overrideNumberArray((void **)&supportedSRTPAuths);
    *(_DWORD *)buf = 0;
    v136 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      videoAttributesUpgradeDebouceTimer = v136;
    *(_DWORD *)buf = 0;
    v137 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      videoAttributesDowngradeDebouceTimer = v137;
    *(_DWORD *)buf = 0;
    v138 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cameraStreamNetworkAdaptation = v138 != 0;
    _overrideNumber((id *)&rtpPtime);
    _overrideNumber((id *)&snapshotResolution);
    *(_DWORD *)buf = 0;
    v139 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumSimultaneousRemoteStreams = v139;
    *(_DWORD *)buf = 0;
    v140 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumSecureRemoteStreams = v140;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      secureSessionMessageTimeout = v141;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      snapshotCacheValidPeriod = v142;
    *(_DWORD *)buf = 0;
    v143 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumHomes = v143;
    *(_DWORD *)buf = 0;
    v144 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumAccessoriesPerHome = v144;
    *(_DWORD *)buf = 0;
    v145 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumRoomsPerHome = v145;
    *(_DWORD *)buf = 0;
    v146 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumZonesPerHome = v146;
    *(_DWORD *)buf = 0;
    v147 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumTriggersPerHome = v147;
    *(_DWORD *)buf = 0;
    v148 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumActionSetsPerHome = v148;
    *(_DWORD *)buf = 0;
    v149 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumServiceGroupsPerHome = v149;
    *(_DWORD *)buf = 0;
    v150 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumUsersPerHome = v150;
    *(_DWORD *)buf = 0;
    v151 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumRoomsPerZone = v151;
    *(_DWORD *)buf = 0;
    v152 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumActionsPerActionSet = v152;
    *(_DWORD *)buf = 0;
    v153 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumServicesPerServiceGroup = v153;
    *(_DWORD *)buf = 0;
    v154 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumAccessoriesPerBridge = v154;
    *(_DWORD *)buf = 0;
    v155 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumServicesPerAccessory = v155;
    *(_DWORD *)buf = 0;
    v156 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumCharacteristicsPerService = v156;
    *(_DWORD *)buf = 0;
    v157 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumDataSyncFragmentSize = v157;
    *(_DWORD *)buf = 0;
    CFPrefs_GetInt64();
    *(_DWORD *)buf = 0;
    CFPrefs_GetInt64();
    *(_DWORD *)buf = 0;
    v158 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      bulletinSecureTriggerTimeoutInSeconds = v158;
    *(_DWORD *)buf = 0;
    v159 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      secureTriggerUserResponseTimeoutInSeconds = v159;
    *(_DWORD *)buf = 0;
    v160 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      broadcastKeyRefreshTimeInSeconds = v160;
    *(_DWORD *)buf = 0;
    v161 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      bluetoothGSNMaxValue = v161;
    objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
    v162 = (void *)objc_claimAutoreleasedReturnValue();
    allowAnonymousServerConnections = objc_msgSend(v162, "BOOLForKey:", CFSTR("allowAnonymousServerConnections"));

    _overrideNSString((id *)&vendorInfoDatabaseServerURLOverride);
    _overrideNSString((id *)&appleConfigurationServer);
    _overrideNSString((id *)&homeKitConfigurationPath);
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      remoteDeviceMonitorHealthTimerTimeInterval = v163;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      remoteDeviceMonitorRetryTimerMinimumTimeInterval = v164;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      remoteDeviceMonitorRetryTimerMaximumTimeInterval = v165;
    *(_DWORD *)buf = 0;
    v166 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      remoteDeviceMonitorRetryTimerFactor = v166;
    *(_DWORD *)buf = 0;
    v167 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      presenceFeedRefreshInMinutes = v167;
    *(_DWORD *)buf = 0;
    v168 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      presenceMonitorAuditInMinutes = v168;
    *(_DWORD *)buf = 0;
    v169 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      presenceMonitorRefreshGracePeriodInMinutes = v169;
    *(_DWORD *)buf = 0;
    v170 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      startCharacteristicsMonitorWaitPeriod = v170;
    *(_DWORD *)buf = 0;
    v171 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      requestHomeDataSyncRetryPeriodInMinutes = v171;
  }
  objc_autoreleasePoolPop(v2);
}

BOOL isTVOSDevice()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productPlatform") == 4;

  return v1;
}

void _overrideNumberArray(void **a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v13 = 0;
  CFArrayGetTypeID();
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = (id)CFPrefs_CopyTypedValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v10;
    while (2)
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v2);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          v8 = v2;
          goto LABEL_11;
        }
        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v14, 16);
      if (v4)
        continue;
      break;
    }
  }

  v7 = v2;
  v8 = *a1;
  *a1 = v7;
LABEL_11:

}

void _overrideNumber(id *a1)
{
  void *v2;

  CFNumberGetTypeID();
  v2 = (void *)CFPrefs_CopyTypedValue();
  objc_storeStrong(a1, v2);

}

void _overrideNSString(id *a1)
{
  void *v2;

  CFStringGetTypeID();
  v2 = (void *)CFPrefs_CopyTypedValue();
  objc_storeStrong(a1, v2);

}

BOOL isMac()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productPlatform") == 1;

  return v1;
}

uint64_t isBTLECapableDevice()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x1E0D286B8], "systemInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "supportsBLE");

  return v1;
}

id deviceName()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0D286B8], "systemInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "name");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

__CFString *getDeviceClass()
{
  if (isAppleTV())
    return CFSTR("kDeviceClassTypeResident");
  else
    return CFSTR("kDeviceClassTypeTransient");
}

BOOL isPasscodeEnabledOnThisDevice()
{
  int v0;
  void *v1;
  NSObject *v2;
  void *v3;
  void *v5;
  NSObject *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  if (+[HMDDeviceCapabilities supportsDeviceLock](HMDDeviceCapabilities, "supportsDeviceLock"))
  {
    v0 = MKBGetDeviceLockState();
    v1 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = 138543618;
      v9 = v3;
      v10 = 2048;
      v11 = v0;
      _os_log_impl(&dword_1CD062000, v2, OS_LOG_TYPE_INFO, "%{public}@Device lock state (passcode): %ld", (uint8_t *)&v8, 0x16u);

    }
    objc_autoreleasePoolPop(v1);
    return v0 != 3;
  }
  else
  {
    v5 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = 138543362;
      v9 = v7;
      _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_INFO, "%{public}@Device does not support device lock (passcode).", (uint8_t *)&v8, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
    return 0;
  }
}

uint64_t getHMMaximumUsersPerHome()
{
  return maximumUsersPerHome;
}

id getBLEAccessoryCachePath()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  int v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  NSObject *v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  void *v15;
  id v16;
  id v18;
  id v19;
  char v20;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  void *v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = v0;
  v20 = 0;
  if (storeDirectoryPath)
  {
    if (!bleAccessoryCachePath
      || (objc_msgSend(v0, "fileExistsAtPath:isDirectory:", bleAccessoryCachePath, &v20) & 1) == 0)
    {
      v27 = *MEMORY[0x1E0CB2AA8];
      v28[0] = &unk_1E8B33018;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v28, &v27, 1);
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend((id)storeDirectoryPath, "stringByAppendingString:", CFSTR("/BLECache"));
      v3 = objc_claimAutoreleasedReturnValue();
      v4 = (void *)bleAccessoryCachePath;
      bleAccessoryCachePath = v3;

      v19 = 0;
      v5 = objc_msgSend(v1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", bleAccessoryCachePath, 1, v2, &v19);
      v6 = v19;
      v7 = v6;
      v20 = v5;
      if (v5)
      {
        v18 = v6;
        objc_msgSend(v1, "setAttributes:ofItemAtPath:error:", v2, bleAccessoryCachePath, &v18);
        v8 = v18;

        v7 = v8;
      }
      else
      {
        v13 = (void *)MEMORY[0x1D17BA0A0]();
        HMFGetOSLogHandle();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v22 = v15;
          v23 = 2112;
          v24 = bleAccessoryCachePath;
          v25 = 2112;
          v26 = v7;
          _os_log_impl(&dword_1CD062000, v14, OS_LOG_TYPE_ERROR, "%{public}@Could not create BLE Cache directory path %@ - error %@", buf, 0x20u);

        }
        objc_autoreleasePoolPop(v13);
      }

    }
  }
  else
  {
    v9 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v22 = v11;
      v23 = 2112;
      v24 = storeDirectoryPath;
      v12 = (id)storeDirectoryPath;
      _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_ERROR, "%{public}@Store Directory not initialized: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v9);
  }
  v16 = (id)bleAccessoryCachePath;

  return v16;
}

id getImagesPath()
{
  void *v0;
  void *v1;

  HMDCreateHomeKitDaemonCacheDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingString:", CFSTR("/Snapshots"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id getBulletinImagesPath()
{
  void *v0;
  void *v1;

  HMDCreateHomeKitDaemonCacheDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingString:", CFSTR("/BulletinSnapshots"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id HMDHomeKitDaemonDemoModePersistencePath()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = (void *)MEMORY[0x1E0C99E98];
  HMDCreateHomeKitDaemonCacheDirectory();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "fileURLWithPath:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "URLByAppendingPathComponent:", CFSTR("DemoMode.data"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

BOOL compareCharacteristicValue(void *a1, void *a2, void *a3, void *a4)
{
  unint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _BOOL4 v13;
  _BOOL8 v14;
  id v15;
  id v16;
  int v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  BOOL v31;
  void *v32;
  NSObject *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  BOOL v38;
  void *v39;
  NSObject *v40;
  void *v41;
  void *v42;
  void *context;
  uint8_t buf[4];
  void *v46;
  __int16 v47;
  double v48;
  __int16 v49;
  id v50;
  __int16 v51;
  double v52;
  __int16 v53;
  uint64_t v54;
  __int16 v55;
  double v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a4;
  if (!v7 || !v8)
  {
    v14 = (v7 | v8) == 0;
    goto LABEL_49;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v10 = (id)v8;
      v11 = (id)v7;
      v12 = objc_retainAutorelease(v10);
      v13 = *(_BYTE *)objc_msgSend(v12, "objCType") == 102
         || *(unsigned __int8 *)objc_msgSend(objc_retainAutorelease(v12), "objCType") == 100;
      v15 = objc_retainAutorelease(v11);
      if (*(_BYTE *)objc_msgSend(v15, "objCType") == 102
        || ((v16 = objc_retainAutorelease(v15), *(_BYTE *)objc_msgSend(v16, "objCType") == 100)
          ? (v17 = 1)
          : (v17 = v13),
            v17 == 1))
      {
        objc_msgSend(v12, "doubleValue");
        v19 = v18;
        v20 = objc_msgSend(v15, "doubleValue");
        v22 = v21;
        v23 = 0.00999999978;
        if (v9)
        {
          v20 = objc_msgSend(v9, "doubleValue");
          if (fabs(v24) >= 2.22044605e-16)
          {
            v20 = objc_msgSend(v9, "doubleValue");
            v23 = v25;
          }
        }
        context = (void *)MEMORY[0x1D17BA0A0](v20);
        HMFGetOSLogHandle();
        v26 = objc_claimAutoreleasedReturnValue();
        v27 = (uint64_t)(v19 * (1.0 / v23));
        v28 = (uint64_t)(v22 * (1.0 / v23));
        if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138544642;
          v46 = v29;
          v47 = 2048;
          v48 = v19;
          v49 = 2048;
          v50 = (id)(uint64_t)(v19 * (1.0 / v23));
          v51 = 2048;
          v52 = v22;
          v53 = 2048;
          v54 = (uint64_t)(v22 * (1.0 / v23));
          v55 = 2048;
          v56 = v23;
          _os_log_impl(&dword_1CD062000, v26, OS_LOG_TYPE_INFO, "%{public}@Saved double value: %lf (%ld), current double value: %lf (%ld), step value: %lf", buf, 0x3Eu);

        }
        objc_autoreleasePoolPop(context);
        switch((unint64_t)a3)
        {
          case 0uLL:
            v14 = v28 < v27;
            break;
          case 1uLL:
            v14 = v28 <= v27;
            break;
          case 2uLL:
            v14 = v28 > v27;
            break;
          case 3uLL:
            v14 = v28 >= v27;
            break;
          case 5uLL:
            v14 = v28 != v27;
            break;
          default:
            v14 = v28 == v27;
            break;
        }

        goto LABEL_49;
      }

    }
  }
  if ((objc_opt_respondsToSelector() & 1) != 0 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    v30 = objc_msgSend((id)v7, "compare:", v8);
    switch((unint64_t)a3)
    {
      case 0uLL:
        v31 = v30 == -1;
        goto LABEL_37;
      case 1uLL:
        v38 = v30 + 1 >= 2;
        goto LABEL_33;
      case 2uLL:
        v31 = v30 == 1;
        goto LABEL_37;
      case 3uLL:
        v38 = v30 >= 2;
LABEL_33:
        v14 = !v38;
        break;
      case 5uLL:
        v14 = v30 != 0;
        break;
      default:
        v31 = v30 == 0;
LABEL_37:
        v14 = v31;
        break;
    }
    v39 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v40 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      HMFBooleanToString();
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544386;
      v46 = v41;
      v47 = 2112;
      v48 = *(double *)&v7;
      v49 = 2048;
      v50 = a3;
      v51 = 2112;
      v52 = *(double *)&v8;
      v53 = 2112;
      v54 = (uint64_t)v42;
      _os_log_impl(&dword_1CD062000, v40, OS_LOG_TYPE_INFO, "%{public}@Comparing characteristic value %@ (op:%tu) %@, result: %@", buf, 0x34u);

    }
    objc_autoreleasePoolPop(v39);
  }
  else
  {
    v32 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v33 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      v35 = (void *)objc_opt_class();
      v36 = v35;
      *(_DWORD *)buf = 138543874;
      v46 = v34;
      v47 = 2112;
      v48 = *(double *)&v35;
      v49 = 2112;
      v50 = (id)objc_opt_class();
      v37 = v50;

    }
    objc_autoreleasePoolPop(v32);
    v14 = 0;
  }
LABEL_49:

  return v14;
}

uint64_t HMDShouldRedactBundleId(void *a1)
{
  id v1;
  char v2;
  uint64_t v3;

  v1 = a1;
  v2 = isInternalBuild();
  v3 = HMDShouldRedactBundleIdForBuildType(v1, v2);

  return v3;
}

id spiClientIdentifierForUUIDAndSalts(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a2;
  v4 = a1;
  +[HMDProcessInfo privateClientIdentifierSalt](HMDProcessInfo, "privateClientIdentifierSalt");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3A28], "hm_deriveUUIDFromBaseUUID:identifierSalt:withSalts:", v4, v5, v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

uint64_t shouldLogPrivateInformation()
{
  void *v0;
  void *v1;
  uint64_t v2;

  objc_msgSend(MEMORY[0x1E0D28678], "sharedPreferences");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "preferenceForKey:", CFSTR("shouldLogPrivateInformation"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "BOOLValue");

  return v2;
}

HMDHomeKitVersion *fixHomeKitVersion(void *a1)
{
  id v1;
  HMDHomeKitVersion *v2;
  HMDHomeKitVersion *v3;
  HMDHomeKitVersion *v4;
  double v5;

  v1 = a1;
  if ((unint64_t)objc_msgSend(v1, "minorVersion") >= 0xA && objc_msgSend(v1, "minorVersion"))
  {
    v2 = -[HMDHomeKitVersion initWithVersionString:]([HMDHomeKitVersion alloc], "initWithVersionString:", CFSTR("10.0"));
    if (objc_msgSend(v1, "isAtLeastVersion:", v2))
    {
      v3 = (HMDHomeKitVersion *)v1;
    }
    else
    {
      v5 = round(log10((double)(unint64_t)objc_msgSend(v1, "minorVersion")));
      v3 = -[HMDHomeKitVersion initWithMajorVersion:minorVersion:updateVersion:]([HMDHomeKitVersion alloc], "initWithMajorVersion:minorVersion:updateVersion:", objc_msgSend(v1, "majorVersion"), llround((double)(unint64_t)objc_msgSend(v1, "minorVersion") / __exp10((double)(uint64_t)v5)), objc_msgSend(v1, "updateVersion"));
    }
    v4 = v3;

  }
  else
  {
    v4 = (HMDHomeKitVersion *)v1;
  }

  return v4;
}

_DWORD *createStateData(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  size_t v6;
  _DWORD *v7;

  v3 = a1;
  objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", a2, 200, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = objc_msgSend(v4, "length");
    v7 = malloc_type_calloc(1uLL, v6 + 200, 0x84EEA7FFuLL);
    *v7 = 1;
    v7[1] = v6;
    objc_msgSend(objc_retainAutorelease(v3), "UTF8String");
    __strlcpy_chk();
    memcpy(v7 + 50, (const void *)objc_msgSend(objc_retainAutorelease(v5), "bytes"), v6);
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id generateWiFiUniquePreSharedKey()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  NSObject *v4;
  void *v5;
  uint8_t buf[4];
  void *v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v0 = (void *)SecPasswordGenerate();
  v1 = v0;
  if (v0)
  {
    v2 = v0;
  }
  else
  {
    v3 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v8 = v5;
      v9 = 2112;
      v10 = 0;
      _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_ERROR, "%{public}@Failed to generate WiFi Pre-Shared Key with error: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v3);

  }
  return v1;
}

uint64_t defaultAccessoryShouldDisconnectOnIdleForHome(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  int v6;

  v1 = a1;
  if ((objc_msgSend(v1, "isCurrentDevicePrimaryResident") & 1) != 0)
    goto LABEL_12;
  if ((objc_msgSend(v1, "isCurrentDeviceAvailableResident") & 1) == 0)
  {
    if (!objc_msgSend(v1, "isResidentFirstAccessoryCommunicationEnabled"))
      goto LABEL_12;
    objc_msgSend(v1, "enabledResidents");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "hmf_isEmpty");

    if ((v4 & 1) != 0)
      goto LABEL_12;
    objc_msgSend(v1, "primaryResident");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "isReachable");

    if (!v6)
      goto LABEL_12;
  }
  if ((objc_msgSend(v1, "isResidentFirstAccessoryCommunicationEnabled") & 1) != 0
    || (objc_msgSend(v1, "isCurrentDevicePrimaryResident") & 1) == 0
    && objc_msgSend(v1, "isCurrentDeviceAvailableResident")
    && !isiPadDevice())
  {
    v2 = 1;
  }
  else
  {
LABEL_12:
    v2 = 0;
  }

  return v2;
}

uint64_t __Block_byref_object_copy__50268(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__50269(uint64_t a1)
{

}

id __isPersistedConnectionRequiredForAccessory_block_invoke(uint64_t a1)
{
  void *v1;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  id v15;
  id v16;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  if (v1)
    return v1;
  objc_msgSend(MEMORY[0x1E0C99E20], "setWithObject:", *(_QWORD *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "identifiersForBridgedAccessories");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = MEMORY[0x1E0C809B0];
  v12 = 3221225472;
  v13 = __isPersistedConnectionRequiredForAccessory_block_invoke_2;
  v14 = &unk_1E89ABDD8;
  v15 = *(id *)(a1 + 32);
  v16 = v4;
  v6 = v4;
  objc_msgSend(v5, "hmf_enumerateWithAutoreleasePoolUsingBlock:", &v11);

  v7 = objc_msgSend(v6, "copy", v11, v12, v13, v14);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v7;

  v10 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  return v10;
}

uint64_t __isPersistedConnectionRequiredForAccessory_block_invoke_680(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t result;

  result = objc_msgSend(a2, "supportsTargetController");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  *a3 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void __isPersistedConnectionRequiredForAccessory_block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "home");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "accessoryWithUUID:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v7 = v6;
  else
    v7 = 0;
  v9 = v7;

  v8 = v9;
  if (v9)
  {
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v9);
    v8 = v9;
  }

}

void __shouldEnableInternalDebugInterfaces_block_invoke()
{
  void *v0;
  id v1;

  if ((isInternalBuild() & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0D28678], "sharedPreferences");
    v1 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "preferenceForKey:", CFSTR("shouldEnableInternalDebugInterfaces"));
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    shouldEnableInternalDebugInterfaces__hmf_once_v34 = objc_msgSend(v0, "BOOLValue");

  }
  else
  {
    shouldEnableInternalDebugInterfaces__hmf_once_v34 = 0;
  }
}

id getCKContainer()
{
  __CFString *v0;
  __CFString *v1;
  id v2;
  _QWORD block[4];
  const __CFString *v5;

  v0 = CFSTR("com.apple.willow.config");
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __getCKContainer_block_invoke;
  block[3] = &unk_1E89C2730;
  v5 = CFSTR("com.apple.willow.config");
  if (getCKContainer_onceToken == -1)
  {
    v1 = CFSTR("com.apple.willow.config");
  }
  else
  {
    dispatch_once(&getCKContainer_onceToken, block);
    v1 = (__CFString *)v5;
  }
  v2 = (id)getCKContainer_container;

  return v2;
}

void __getCKContainer_block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C94C40]), "initWithContainerIdentifier:environment:", *(_QWORD *)(a1 + 32), cloudKitContainerEnvironment);
  v1 = objc_msgSend(objc_alloc(MEMORY[0x1E0C94C28]), "initWithContainerID:", v3);
  v2 = (void *)getCKContainer_container;
  getCKContainer_container = v1;

}

id shortHAPTypeDescription(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = (void *)*MEMORY[0x1E0D16320];
  if (objc_msgSend(v1, "hasSuffix:", *MEMORY[0x1E0D16320]))
  {
    objc_msgSend(v1, "substringToIndex:", objc_msgSend(v1, "length") - objc_msgSend(v2, "length"));
    v3 = objc_claimAutoreleasedReturnValue();

    v1 = (id)v3;
  }
  return v1;
}

uint64_t isThisDeviceDesignatedFMFDevice()
{
  void *v0;
  uint64_t v1;

  +[HMDFMFHandler sharedHandler](HMDFMFHandler, "sharedHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isThisDesignatedFMFDevice");

  return v1;
}

void clearPrimaryPreference(int a1)
{
  void *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  int v9;
  void *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  const __CFString *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17BA0A0](CFSTR("hmd.preferred.primary.homeutil"));
  HMFGetOSLogHandle();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    HMFBooleanToString();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138543874;
    v10 = v4;
    v11 = 2112;
    v12 = v5;
    v13 = 2112;
    v14 = CFSTR("hmd.preferred.primary.homeutil");
    _os_log_impl(&dword_1CD062000, v3, OS_LOG_TYPE_DEFAULT, "%{public}@Clearing preferred primary with requireOneTime: %@ ...withApplication: %@", (uint8_t *)&v9, 0x20u);

  }
  objc_autoreleasePoolPop(v2);
  v6 = (void *)CFPreferencesCopyAppValue(CFSTR("hmd.preferred.primary.one.time"), CFSTR("hmd.preferred.primary.homeutil"));
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, "BOOLValue");
    if (!a1 || v8)
      CFPreferencesSetAppValue(CFSTR("hmd.preferred.primary"), 0, CFSTR("hmd.preferred.primary.homeutil"));
  }

}

uint64_t isTransientCloudKitError(void *a1)
{
  id v1;
  void *v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  v1 = a1;
  objc_msgSend(v1, "domain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isEqualToString:", *MEMORY[0x1E0C947D8]);

  if (v3)
  {
    v4 = objc_msgSend(v1, "code");
    if (v4 <= 0x17)
      v5 = (0x8000D8u >> v4) & 1;
    else
      v5 = 0;
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void __isFirstLaunchAfterBoot_block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  int v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  char v15;
  size_t v16;
  uint8_t buf[4];
  void *v18;
  uint8_t v19[16];
  _BYTE v20[21];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  determineHomeKitDaemonRootStorePath();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = v0;
  if (v0)
  {
    objc_msgSend(v0, "stringByAppendingPathComponent:", CFSTR("lastBootUuid"));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    *(_OWORD *)v19 = 0u;
    memset(v20, 0, sizeof(v20));
    v16 = 37;
    v3 = sysctlbyname("kern.bootsessionuuid", v19, &v16, 0, 0);
    if (v3)
    {
      if (v3 == -1)
      {
        __error();
        _os_assumes_log();
      }
      v4 = (void *)MEMORY[0x1D17BA0A0]();
      HMFGetOSLogHandle();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v18 = v6;
        _os_log_impl(&dword_1CD062000, v5, OS_LOG_TYPE_ERROR, "%{public}@Failed to get kern.bootsessionuuid", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v4);
      isFirstLaunchAfterBoot_firstLaunchAfterBoot = 1;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithContentsOfFile:encoding:error:", v2, 4, 0);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v10)
      {
        v11 = (void *)MEMORY[0x1D17BA0A0]();
        HMFGetOSLogHandle();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          HMFGetLogIdentifier();
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v18 = v13;
          _os_log_impl(&dword_1CD062000, v12, OS_LOG_TYPE_DEBUG, "%{public}@Failed to load existing boot uuid", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v11);
      }
      v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", v19);
      v15 = 1;
      objc_msgSend(v14, "writeToFile:atomically:encoding:error:", v2, 1, 4, 0);
      if (v10)
        v15 = objc_msgSend(v14, "isEqualToString:", v10) ^ 1;
      isFirstLaunchAfterBoot_firstLaunchAfterBoot = v15;

    }
  }
  else
  {
    v7 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)v19 = 138543362;
      *(_QWORD *)&v19[4] = v9;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_ERROR, "%{public}@Failed to get HomeKit daemon root store path!", v19, 0xCu);

    }
    objc_autoreleasePoolPop(v7);
    isFirstLaunchAfterBoot_firstLaunchAfterBoot = 1;
  }

}

void sub_1CD462238(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD462900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4629C4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD462C1C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void __callResolveBlocks(void *a1, void *a2, void *a3)
{
  id v5;
  unint64_t v6;
  unint64_t v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v5, "underlyingQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  dispatch_assert_queue_V2(v8);

  if (v5 && v6 | v7)
  {
    v17 = 0u;
    v18 = 0u;
    v15 = 0u;
    v16 = 0u;
    objc_msgSend(v5, "resolveBlocks", 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v16;
      do
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v16 != v12)
            objc_enumerationMutation(v9);
          (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v13++) + 16))();
        }
        while (v11 != v13);
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      }
      while (v11);
    }

    objc_msgSend(v5, "resolveBlocks");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "removeAllObjects");

  }
}

void sub_1CD468210(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD46A474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _approximateSizeOfPlistValue(const __CFString *a1, CFStringRef *a2, CFIndex *a3)
{
  CFTypeID v6;
  CFIndex Length;
  BOOL v8;
  char v9;
  CFIndex v10;
  CFStringRef v11;
  uint64_t v12;
  const __CFString *v13;
  CFIndex Count;
  CFIndex *p_usedBufLen;
  CFIndex v16;
  CFIndex v17;
  CFIndex ByteSize;
  uint64_t v20;
  CFIndex *v21;
  CFIndex usedBufLen;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  CFRange v27;

  if (!a1)
    return 0;
  v6 = CFGetTypeID(a1);
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  switch(v6)
  {
    case 7uLL:
      Length = CFStringGetLength(a1);
      usedBufLen = 0;
      v27.location = 0;
      v27.length = Length;
      if (CFStringGetBytes(a1, v27, 0x600u, 0, 0, 0, 0, &usedBufLen))
        v8 = usedBufLen == Length;
      else
        v8 = 0;
      v9 = !v8;
      v10 = Length << v9;
      v24[3] = v10;
      if (a2)
      {
        v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E0C9AE30], 0, CFSTR("string value, approximate encoded size: %ld"), v10);
        goto LABEL_25;
      }
      break;
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
      break;
    case 0x10uLL:
      if (a2)
      {
        v13 = CFSTR("deleted value");
        goto LABEL_30;
      }
      break;
    case 0x12uLL:
      usedBufLen = 0;
      CFDictionaryApplyBlock();
      if (a2)
      {
        Count = CFDictionaryGetCount((CFDictionaryRef)a1);
        v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E0C9AE30], 0, CFSTR("dictionary value, count: %ld, total nested objects: %ld, approximate encoded size: %ld"), Count, usedBufLen, v24[3]);
        goto LABEL_25;
      }
      break;
    case 0x13uLL:
      usedBufLen = 0;
      CFArrayGetCount((CFArrayRef)a1);
      p_usedBufLen = &usedBufLen;
      v20 = MEMORY[0x1E0C809B0];
      if (a3)
        p_usedBufLen = a3;
      v21 = p_usedBufLen;
      CFArrayApplyBlock();
      if (a2)
      {
        v16 = CFArrayGetCount((CFArrayRef)a1);
        v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E0C9AE30], 0, CFSTR("array value, count: %ld, tested nested objects: %ld, approximate encoded size: %ld"), v16, usedBufLen, v24[3], v20, 3221225472, ___approximateSizeOfPlistValue_block_invoke_2, &unk_1E89AC1D8, &v23, v21);
        goto LABEL_25;
      }
      break;
    case 0x14uLL:
      v17 = CFDataGetLength((CFDataRef)a1);
      v24[3] = v17;
      if (a2)
      {
        v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E0C9AE30], 0, CFSTR("data value, size: %ld"), v17);
LABEL_25:
        *a2 = v11;
      }
      break;
    case 0x15uLL:
      v26 = 1;
      if (a2)
      {
        v13 = CFSTR("BOOLean value");
        goto LABEL_30;
      }
      break;
    case 0x16uLL:
      ByteSize = CFNumberGetByteSize((CFNumberRef)a1);
      v24[3] = ByteSize;
      if (a2)
      {
        v13 = CFSTR("number value");
        goto LABEL_30;
      }
      break;
    default:
      if (v6 == 42)
      {
        v26 = 8;
        if (a2)
        {
          v13 = CFSTR("date value");
LABEL_30:
          *a2 = v13;
        }
      }
      break;
  }
  if (a3)
    ++*a3;
  v12 = v24[3];
  _Block_object_dispose(&v23, 8);
  return v12;
}

void sub_1CD46ACA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t ___approximateSizeOfPlistValue_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;

  v5 = _approximateSizeOfPlistValue(a2, 0, *(_QWORD *)(a1 + 40));
  result = _approximateSizeOfPlistValue(a3, 0, *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result + v5;
  return result;
}

uint64_t ___approximateSizeOfPlistValue_block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = _approximateSizeOfPlistValue(a2, 0, *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

void _handleNetworkInterfaceChanged(uint64_t a1, uint64_t a2, void *a3)
{
  const char *v3;
  const char *v4;
  _BYTE *v5;

  v5 = a3;
  v5[16] = _isNetworkIntefaceActive();
  if (gLogCategory_HMDPowerManager <= 30
    && (gLogCategory_HMDPowerManager != -1 || _LogCategory_Initialize()))
  {
    if (v5[16])
      v3 = "yes";
    else
      v3 = "no";
    v4 = v3;
    LogPrintF();
  }
  objc_msgSend(v5, "_update", v4);

}

uint64_t _isNetworkIntefaceActive()
{
  int v0;
  char *ifa_name;
  uint64_t v2;
  ifaddrs *v3;
  ifaddrs *v5;

  v0 = socket(2, 2, 0);
  if (v0 < 0 && (!*__error() || *__error()))
    return 0;
  v5 = 0;
  getifaddrs(&v5);
  v3 = v5;
  if (!v5)
  {
    if (v0 < 0)
      return 0;
    goto LABEL_19;
  }
  do
  {
    if ((v3->ifa_flags & 8) == 0)
    {
      ifa_name = v3->ifa_name;
      if (ifa_name)
      {
        if (!SocketGetInterfaceInfo()
          && gLogCategory_HMDPowerManager <= 20
          && (gLogCategory_HMDPowerManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
    v3 = v3->ifa_next;
  }
  while (v3);
  if (v5)
    MEMORY[0x1D17B9CB0](v5, ifa_name, v2);
  if ((v0 & 0x80000000) == 0)
  {
LABEL_19:
    if (close(v0) && *__error())
      __error();
  }
  return 0;
}

BOOL AWDHomeKitCameraStreamIDSConnSetupParametersReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionRequested;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionRequested;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionRequested;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionComplete;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionComplete;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionComplete;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD471CF8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD471D70(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD471DE8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD471E44(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD472BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD472EFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1CD4733D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD476880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD477D68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _parseTargetList(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    v2 = objc_retainAutorelease(v1);
    objc_msgSend(v2, "bytes");
    objc_msgSend(v2, "length");
    while (!TLV8GetNext())
      ;
  }

  return 0;
}

id _parseTargetButtonConfiguration(void *a1, uint64_t a2)
{
  id v2;
  void *v3;
  id v4;
  void *v5;

  v2 = a1;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_retainAutorelease(v2);
  objc_msgSend(v4, "bytes");
  objc_msgSend(v4, "length");
  while (!TLV8GetNext())
    ;
  v5 = (void *)objc_msgSend(v3, "copy", a2);

  return v5;
}

unint64_t targetConfigurationTLVSize(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t i;
  void *v10;
  unint64_t v11;
  id v12;
  const char *v13;
  size_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  unint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v21;
    v8 = 32;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v21 != v7)
          objc_enumerationMutation(v3);
        v10 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
        v11 = v8 + 12;
        objc_msgSend(v10, "name");
        v12 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v13 = (const char *)objc_msgSend(v12, "UTF8String");

        if (v13)
        {
          v14 = strlen(v13);
          if (v14 >= 0x80)
            v15 = 128;
          else
            v15 = v14;
          v11 += v15;
        }
        objc_msgSend(v10, "buttonConfiguration");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v16, "count"))
        {
          objc_msgSend(v10, "buttonConfiguration");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          v18 = buttonConfigurationTLVSize(v17);

        }
        else
        {
          v18 = buttonConfigurationTLVSize(v4);
        }
        v8 = v18 + v11;

      }
      v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v6);
  }
  else
  {
    v8 = 32;
  }

  return v8 + 2 * (v8 / 0xFF);
}

uint64_t __addButtonConfigurationTLV(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  const char *v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  if (objc_msgSend(v2, "count"))
  {
    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v19 = 0u;
    buttonConfigurationTLVSize(v2);
    TLV8BufferInit();
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v3 = v2;
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v15;
LABEL_4:
      v7 = 0;
      while (1)
      {
        if (*(_QWORD *)v15 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * v7);
        objc_msgSend(v8, "identifier");
        v9 = TLV8BufferAppend();
        if ((_DWORD)v9)
          break;
        objc_msgSend(v8, "type");
        v9 = TLV8BufferAppend();
        if ((_DWORD)v9)
          break;
        objc_msgSend(v8, "name");
        v10 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v11 = (const char *)objc_msgSend(v10, "UTF8String");

        if (v11)
        {
          strlen(v11);
          v9 = TLV8BufferAppend();
          if ((_DWORD)v9)
            break;
        }
        if (v5 == ++v7)
        {
          v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
          if (v5)
            goto LABEL_4;
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:

      objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytes:length:", v19);
      v3 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      objc_msgSend(v3, "bytes");
      objc_msgSend(v3, "length");
      v9 = TLV8BufferAppend();
    }
    v12 = v9;

    TLV8BufferFree();
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

unint64_t buttonConfigurationTLVSize(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t i;
  id v7;
  const char *v8;
  size_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v13;
    v5 = 32;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v13 != v4)
          objc_enumerationMutation(v1);
        v5 += 9;
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * i), "name");
        v7 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v8 = (const char *)objc_msgSend(v7, "UTF8String");

        if (v8)
        {
          v9 = strlen(v8);
          if (v9 >= 0x80)
            v10 = 128;
          else
            v10 = v9;
          v5 += v10;
        }
      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v3);
  }
  else
  {
    v5 = 32;
  }

  return v5 + 2 * (v5 / 0xFF);
}

uint64_t __Block_byref_object_copy__52637(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__52638(uint64_t a1)
{

}

void sub_1CD47C384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id readDataFromCKRecordOptionalAssetField(uint64_t a1)
{
  void *v1;
  unint64_t v2;
  unint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  NSObject *v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint8_t buf[4];
  void *v34;
  __int16 v35;
  unint64_t v36;
  _BYTE v37[4096];
  uint64_t v38;

  v1 = (void *)MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v5 = v4;
  v38 = *MEMORY[0x1E0C80C00];
  v6 = v1;
  v7 = v5;
  filePathFromCKRecordOptionalAssetField(v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
  {
    createInputStreamWithFilePath(v8, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (!v10)
    {
      v19 = 0;
LABEL_24:

      goto LABEL_25;
    }
    v12 = v10;
    objc_msgSend(MEMORY[0x1E0C99DF0], "data");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "open");
    v14 = objc_msgSend(v12, "read:maxLength:", v37, 4096);
    if (v14 < 1)
    {
LABEL_12:
      v18 = objc_msgSend(v12, "close");
      if ((v14 & 0x8000000000000000) == 0)
      {
        v19 = (void *)objc_msgSend(v13, "copy");
LABEL_23:

        goto LABEL_24;
      }
      v20 = MEMORY[0x1D17BA0A0](v18);
      objc_opt_class();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      HMFGetOSLogHandle();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "streamError");
        v31 = v20;
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v34 = v23;
        v35 = 2112;
        v36 = (unint64_t)v24;
        _os_log_impl(&dword_1CD062000, v22, OS_LOG_TYPE_ERROR, "%{public}@Error reading data from input stream: %@", buf, 0x16u);

        v20 = v31;
      }

      v25 = (void *)v20;
    }
    else
    {
      while (1)
      {
        if (v3)
        {
          v15 = objc_msgSend(v13, "length");
          v16 = __CFADD__(v14, v15);
          v17 = v16 << 63 >> 63;
          if (v17 != v16 || v17 < 0 || v14 + v15 > v3)
            break;
        }
        objc_msgSend(v13, "appendBytes:length:", v37, v14);
        v14 = objc_msgSend(v12, "read:maxLength:", v37, 4096);
        if (v14 <= 0)
          goto LABEL_12;
      }
      v26 = MEMORY[0x1D17BA0A0](objc_msgSend(v12, "close"));
      objc_opt_class();
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      HMFGetOSLogHandle();
      v28 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v32 = v26;
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v34 = v29;
        v35 = 2048;
        v36 = v3;
        _os_log_impl(&dword_1CD062000, v28, OS_LOG_TYPE_ERROR, "%{public}@Data from input stream has exceeded the maximum %lu bytes allowed", buf, 0x16u);

        v26 = v32;
      }

      v25 = (void *)v26;
    }
    objc_autoreleasePoolPop(v25);
    v19 = 0;
    goto LABEL_23;
  }
  v19 = 0;
LABEL_25:

  return v19;
}

id dataFromCKRecordRequiredField(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  int v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  NSObject *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v31;
  id v32;
  id v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  id v37;
  __int16 v38;
  void *v39;
  __int16 v40;
  id v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  objc_msgSend(v5, "objectForKeyedSubscript:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    v9 = v7;
    objc_opt_class();
    v10 = objc_opt_isKindOfClass() & 1;
    if (v10)
      v11 = v9;
    else
      v11 = 0;
    v12 = v11;

    v13 = (void *)MEMORY[0x1D17BA0A0]();
    objc_opt_class();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = v15;
    if (v10)
    {
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        HMFGetLogIdentifier();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "recordID");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "hmbDescription");
        v32 = v12;
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v35 = v17;
        v36 = 2112;
        v37 = v6;
        v38 = 2112;
        v39 = v19;
        _os_log_impl(&dword_1CD062000, v16, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' NSData for record %@", buf, 0x20u);

        v12 = v32;
      }

      objc_autoreleasePoolPop(v13);
      v20 = v9;
    }
    else
    {
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v31 = v13;
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "recordID");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "hmbDescription");
        v33 = v12;
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544130;
        v35 = v27;
        v36 = 2112;
        v37 = v6;
        v38 = 2112;
        v39 = v29;
        v40 = 2112;
        v41 = v9;
        _os_log_impl(&dword_1CD062000, v16, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a NSData on record %@: %@", buf, 0x2Au);

        v12 = v33;
        v13 = v31;
      }

      objc_autoreleasePoolPop(v13);
      if (a3)
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 43);
        v20 = 0;
        *a3 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v20 = 0;
      }
    }

  }
  else
  {
    v21 = (void *)MEMORY[0x1D17BA0A0]();
    objc_opt_class();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "recordID");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "hmbDescription");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v35 = v24;
      v36 = 2112;
      v37 = v6;
      v38 = 2112;
      v39 = v26;
      _os_log_impl(&dword_1CD062000, v23, OS_LOG_TYPE_ERROR, "%{public}@Field '%@' does not exist on record %@", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v21);
    if (a3)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 43);
      v20 = 0;
      *a3 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
  }

  return v20;
}

id filePathFromCKRecordOptionalAssetField(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  int v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  uint8_t buf[4];
  void *v31;
  __int16 v32;
  id v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "objectForKeyedSubscript:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    v7 = v5;
    objc_opt_class();
    v8 = objc_opt_isKindOfClass() & 1;
    if (v8)
      v9 = v7;
    else
      v9 = 0;
    v10 = v9;

    v11 = (void *)MEMORY[0x1D17BA0A0]();
    objc_opt_class();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v8)
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        HMFGetLogIdentifier();
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "recordID");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "hmbDescription");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "fileURL");
        v27 = v10;
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "path");
        v28 = v11;
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544130;
        v31 = v15;
        v32 = 2112;
        v33 = v4;
        v34 = 2112;
        v35 = v16;
        v36 = 2112;
        v37 = v18;
        _os_log_impl(&dword_1CD062000, v14, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' CKAsset for record %@ from %@", buf, 0x2Au);

        v11 = v28;
        v10 = v27;

      }
      objc_autoreleasePoolPop(v11);
      objc_msgSend(v7, "fileURL");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "path");
      v20 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v29 = v11;
        v21 = v10;
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "recordID");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "hmbDescription");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544130;
        v31 = v22;
        v32 = 2112;
        v33 = v4;
        v34 = 2112;
        v35 = v24;
        v36 = 2112;
        v37 = v7;
        _os_log_impl(&dword_1CD062000, v14, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a CKAsset on record %@: %@", buf, 0x2Au);

        v10 = v21;
        v11 = v29;
      }

      objc_autoreleasePoolPop(v11);
      v20 = 0;
    }

  }
  else
  {
    v20 = 0;
  }

  return v20;
}

id createInputStreamWithFilePath(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  int v12;
  void *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  objc_msgSend(MEMORY[0x1E0C99DB0], "inputStreamWithFileAtPath:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = v4;
  }
  else
  {
    v7 = (void *)MEMORY[0x1D17BA0A0]();
    objc_opt_class();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543618;
      v13 = v10;
      v14 = 2112;
      v15 = v3;
      _os_log_impl(&dword_1CD062000, v9, OS_LOG_TYPE_ERROR, "%{public}@Failed to create input stream for file at path: %@", (uint8_t *)&v12, 0x16u);

    }
    objc_autoreleasePoolPop(v7);
    if (a2)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 52);
      *a2 = (id)objc_claimAutoreleasedReturnValue();
    }
  }

  return v5;
}

id stringFromCKRecord(void *a1, void *a2, void *a3, uint64_t a4, _QWORD *a5)
{
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  int v19;
  id v20;
  void *v21;
  NSObject *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v37;
  void *v38;
  void *context;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  _QWORD *v45;
  _QWORD *v46;
  uint8_t buf[4];
  void *v48;
  __int16 v49;
  id v50;
  __int16 v51;
  void *v52;
  __int16 v53;
  id v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = a3;
  if (!v10
    || (readDataFromCKRecordOptionalAssetField((uint64_t)v8), (v11 = objc_claimAutoreleasedReturnValue()) == 0)
    || (v12 = (void *)v11,
        v13 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithData:encoding:", v11, 4),
        v12,
        !v13))
  {
    v14 = v8;
    v15 = v9;
    objc_msgSend(v14, "objectForKeyedSubscript:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = v16;
    if (v16)
    {
      v45 = a5;
      v18 = v16;
      objc_opt_class();
      v19 = objc_opt_isKindOfClass() & 1;
      v20 = v19 ? v18 : 0;
      v40 = v20;

      context = (void *)MEMORY[0x1D17BA0A0]();
      objc_opt_class();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      HMFGetOSLogHandle();
      v22 = objc_claimAutoreleasedReturnValue();
      v23 = v22;
      if (v19)
      {
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
        {
          HMFGetLogIdentifier();
          v37 = v8;
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "recordID");
          v42 = v9;
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v25, "hmbDescription");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v48 = v24;
          v49 = 2112;
          v50 = v15;
          v51 = 2112;
          v52 = v26;
          _os_log_impl(&dword_1CD062000, v23, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' NSString for record %@", buf, 0x20u);

          v9 = v42;
          v8 = v37;
        }

        objc_autoreleasePoolPop(context);
        v13 = v18;
        a5 = v45;
      }
      else
      {
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "recordID");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v38, "hmbDescription");
          v44 = v9;
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138544130;
          v48 = v33;
          v49 = 2112;
          v50 = v15;
          v51 = 2112;
          v52 = v34;
          v53 = 2112;
          v54 = v18;
          _os_log_impl(&dword_1CD062000, v23, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a NSData on record %@: %@", buf, 0x2Au);

          v9 = v44;
        }

        objc_autoreleasePoolPop(context);
        a5 = v45;
        if (v45)
        {
          objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 43);
          v13 = 0;
          *v45 = (id)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v13 = 0;
        }
      }

    }
    else
    {
      v43 = v9;
      v27 = (void *)MEMORY[0x1D17BA0A0]();
      objc_opt_class();
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      HMFGetOSLogHandle();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v46 = a5;
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "recordID");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v31, "hmbDescription");
        v41 = v27;
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v48 = v30;
        v49 = 2112;
        v50 = v15;
        v51 = 2112;
        v52 = v32;
        _os_log_impl(&dword_1CD062000, v29, OS_LOG_TYPE_ERROR, "%{public}@Field '%@' does not exist on record %@", buf, 0x20u);

        v27 = v41;
        a5 = v46;
      }

      objc_autoreleasePoolPop(v27);
      if (a5)
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 43);
        v13 = 0;
        *a5 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v13 = 0;
      }
      v9 = v43;
    }

    if (!v13)
      goto LABEL_29;
  }
  if (!objc_msgSend(v13, "length"))
  {
    if (a5)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 51);
      v35 = 0;
      *a5 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_30;
    }
LABEL_29:
    v35 = 0;
    goto LABEL_30;
  }
  v13 = v13;
  v35 = v13;
LABEL_30:

  return v35;
}

uint64_t significantEventReasonFromVideoAnalyzerEventClass(void *a1)
{
  void *v3;
  NSObject *v4;
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0
    || (objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
  {
    return 2;
  }
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return 3;
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return 4;
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return 5;
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) == 0)
  {
    v3 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 138543618;
      v7 = v5;
      v8 = 2112;
      v9 = a1;
      _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_ERROR, "%{public}@Unknown video analyzer event class: %@", (uint8_t *)&v6, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
  }
  return 1;
}

HMDNetworkRouterLANIdentifierList *createIdentifierListFromLANRule(void *a1)
{
  objc_class *v1;
  id v2;
  void *v3;
  void *v4;
  int v5;
  void *v6;
  HMDNetworkRouterLANIdentifierList *v7;

  v1 = (objc_class *)MEMORY[0x1E0D16610];
  v2 = a1;
  v3 = (void *)objc_msgSend([v1 alloc], "initWithValue:", &unk_1E8B33108);
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithObject:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v2, "areConnectionsWithOtherAccessoriesAllowed");

  if (v5)
  {
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D16610]), "initWithValue:", &unk_1E8B33150);
    objc_msgSend(v4, "addObject:", v6);

  }
  v7 = -[HMDNetworkRouterLANIdentifierList initWithIdentifiers:]([HMDNetworkRouterLANIdentifierList alloc], "initWithIdentifiers:", v4);

  return v7;
}

void sub_1CD487590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD488220(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD489E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDSleepConfigurationOperationStatusAsString(unint64_t a1)
{
  if (a1 < 4)
    return off_1E89AC6A0[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDSleepConfigurationOperationStatus %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDSleepConfigurationOperationTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 4)
    return off_1E89AC6C0[a1 - 1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDSleepConfigurationOperationType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1CD48CA9C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD48CC44(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD48CEE4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD48CF54(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD491878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__55523(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__55524(uint64_t a1)
{

}

void sub_1CD499FF0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD49A544(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD49ABF0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD49AC60(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD49C828(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD49CF08(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD49D224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD49D56C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A0760(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A08E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A0970(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A0BAC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A0D18(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A0ED0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A3188(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t isAccessoryInDefaultGroup(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "defaultNetworkProtectionGroupUUID");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(v1, "networkProtectionGroupUUID");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v2, "isEqual:", v3);

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_1CD4A5638(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1CD4A56AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A5780(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A5958(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A5B60(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A5D58(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A6414(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A6588(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A670C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A6A54(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A6C50(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A823C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4A8688(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __HMDAccountAddHandle(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = a1;
  v4 = a2;
  if (v3
    && (os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4),
        (objc_msgSend(*((id *)v3 + 3), "containsObject:", v4) & 1) == 0))
  {
    v6 = (void *)objc_msgSend(*((id *)v3 + 3), "mutableCopy");
    objc_msgSend(v6, "addObject:", v4);
    v7 = objc_msgSend(v6, "copy");
    v8 = (void *)*((_QWORD *)v3 + 3);
    *((_QWORD *)v3 + 3) = v7;

    v5 = 1;
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void __HMDAccountDidUpdateHandles(void *a1)
{
  id v1;
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x1D17BA0A0]();
    v3 = v1;
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = 138543362;
      v8 = v5;
      _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_INFO, "%{public}@Handles updated", (uint8_t *)&v7, 0xCu);

    }
    objc_autoreleasePoolPop(v2);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "postNotificationName:object:", CFSTR("HMDAccountHandlesUpdatedNotification"), v3);

  }
}

uint64_t __HMDAccountAddDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  v6 = 0;
  if (v3 && v4)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    if ((objc_msgSend(*((id *)v3 + 4), "containsObject:", v5) & 1) != 0)
    {
      v6 = 0;
    }
    else
    {
      objc_msgSend(*((id *)v3 + 4), "addObject:", v5);
      v6 = 1;
    }
  }

  return v6;
}

void __HMDAccountDidAddDevice(void *a1, void *a2)
{
  os_unfair_lock *v3;
  id v4;
  void *v5;
  void *v6;
  os_unfair_lock *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  const __CFString *v12;
  void *v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    os_unfair_lock_assert_not_owner(v3 + 4);
    v6 = (void *)MEMORY[0x1D17BA0A0]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v15 = v9;
      v16 = 2112;
      v17 = v5;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_INFO, "%{public}@Device added: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = CFSTR("HMDDeviceNotificationKey");
    v13 = v5;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v13, &v12, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "postNotificationName:object:userInfo:", CFSTR("HMDAccountAddedDeviceNotification"), v7, v11);

  }
}

id __HMDAccountRemoveHandle(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = a1;
  if (v3)
  {
    v4 = a2;
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    objc_msgSend(*((id *)v3 + 3), "member:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
    {
      v6 = (void *)objc_msgSend(*((id *)v3 + 3), "mutableCopy");
      objc_msgSend(v6, "removeObject:", v5);
      v7 = objc_msgSend(v6, "copy");
      v8 = (void *)*((_QWORD *)v3 + 3);
      *((_QWORD *)v3 + 3) = v7;

    }
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

id __HMDAccountRemoveDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = a1;
  if (v3)
  {
    v4 = a2;
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    objc_msgSend(*((id *)v3 + 4), "member:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
      objc_msgSend(*((id *)v3 + 4), "removeObject:", v5);
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void __HMDAccountDidRemoveDevice(void *a1, void *a2)
{
  os_unfair_lock *v3;
  id v4;
  void *v5;
  os_unfair_lock *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  const __CFString *v11;
  id v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    os_unfair_lock_assert_not_owner(v3 + 4);
    v5 = (void *)MEMORY[0x1D17BA0A0]();
    v6 = v3;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v14 = v8;
      v15 = 2112;
      v16 = v4;
      _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_INFO, "%{public}@Device removed: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = CFSTR("HMDDeviceNotificationKey");
    v12 = v4;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v12, &v11, 1);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "postNotificationName:object:userInfo:", CFSTR("HMDAccountRemovedDeviceNotification"), v6, v10);

  }
}

void sub_1CD4AA928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4AACA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4AB0D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4AB5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD4AB858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD4ABAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD4ABFBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4AC2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1CD4AC594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__57465(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__57466(uint64_t a1)
{

}

void sub_1CD4AF06C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4AF314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4AF658(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

BOOL __lookupDeviceForRemoteCommands(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  _BOOL8 v12;
  id v13;
  NSObject *v14;
  void *v16;
  void *context;
  id v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = v3;
  if (a2)
  {
    objc_msgSend(v3, "accessory");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "home");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      v7 = v4;
      objc_msgSend(v7, "accessory");
      v8 = (id)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v9 = v8;
      else
        v9 = 0;
      v10 = v9;

      objc_msgSend(v10, "device");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11 != 0;
      if (v11)
      {
        context = (void *)MEMORY[0x1D17BA0A0]();
        v18 = v7;
        v13 = v7;
        HMFGetOSLogHandle();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v20 = v16;
          v21 = 2112;
          v22 = v11;
          _os_log_impl(&dword_1CD062000, v14, OS_LOG_TYPE_INFO, "%{public}@Routing the command to the device backing the media accessory %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(context);
        *a2 = objc_retainAutorelease(v11);
        v7 = v18;
      }

    }
    else
    {
      v12 = 0;
    }

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void sub_1CD4B16CC(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_1CD4B1F70(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD4B202C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD4B20E8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD4B21D4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD4B22D4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

__CFString *HMDLowPowerModeStateMachineDescription(unint64_t a1)
{
  __CFString *v1;
  void *v2;
  void *v3;

  if (a1 >= 5)
  {
    v2 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringWithFormat:", CFSTR("Unknown (%@)"), v3);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v1 = off_1E89AD2D0[a1];
  }
  return v1;
}

id findMatchingCharacteristic(void *a1, void *a2)
{
  id v3;
  __CFString *v4;
  __CFString *v5;
  id v6;
  void *v7;
  _QWORD v9[4];
  id v10;
  __CFString *v11;

  v3 = a1;
  v4 = CFSTR("00000221-0000-1000-8000-0026BB765291");
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __findMatchingCharacteristic_block_invoke;
  v9[3] = &unk_1E89AD290;
  v10 = v3;
  v11 = CFSTR("00000221-0000-1000-8000-0026BB765291");
  v5 = CFSTR("00000221-0000-1000-8000-0026BB765291");
  v6 = v3;
  objc_msgSend(a2, "hmf_objectPassingTest:", v9);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

uint64_t __findMatchingCharacteristic_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "type");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v7, "isEqualToString:", *(_QWORD *)(a1 + 32)))
    {
      objc_msgSend(v6, "service");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "serviceType");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v9, "isEqualToString:", *(_QWORD *)(a1 + 40));

    }
    else
    {
      v10 = 0;
    }

  }
  else
  {
    v10 = 0;
  }

  return v10;
}

id deserializeObject(objc_class *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  int v7;
  id v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  id v15;
  uint8_t buf[4];
  void *v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  if (v5 && -[objc_class conformsToProtocol:](a1, "conformsToProtocol:", &unk_1EFA84E10))
  {
    v6 = objc_alloc_init(a1);
    v15 = 0;
    v7 = objc_msgSend(v6, "parseFromData:error:", v5, &v15);
    v8 = v15;
    if (v8 || !v6 || !v7)
    {
      v9 = (void *)MEMORY[0x1D17BA0A0]();
      HMFGetOSLogHandle();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        NSStringFromClass(a1);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v17 = v11;
        v18 = 2112;
        v19 = v12;
        v20 = 2112;
        v21 = v8;
        _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_ERROR, "%{public}@Failed to create an object of class: %@ with error: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v9);

      goto LABEL_15;
    }
  }
  else
  {
    v6 = 0;
  }
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_15:
    v13 = 0;
    goto LABEL_16;
  }
  v6 = v6;
  v13 = v6;
LABEL_16:

  return v13;
}

id HMDLowPowerModeOperationStatusDescription(unint64_t a1)
{
  void *v1;
  void *v2;

  HMDSleepConfigurationOperationStatusAsString(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByReplacingOccurrencesOfString:withString:", CFSTR("HMDSleepConfigurationOperationStatus"), &stru_1E89C3E38);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id HMDLowPowerModeOperationTypeDescription(uint64_t a1)
{
  void *v1;
  void *v2;

  HMDSleepConfigurationOperationTypeAsString(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByReplacingOccurrencesOfString:withString:", CFSTR("HMDSleepConfigurationOperationType"), &stru_1E89C3E38);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1CD4B5224(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id HMDLowPowerModeWoWLANInfoForSupportedSleepConfiguration(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  HMFWoWLANInfo *v19;
  HMFWoWLANInfo *v20;
  HMFWoWLANInfo *v21;
  id v23;
  id v24;
  id obj;
  HMFWoWLANInfo *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v24 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "version");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "value");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "unsignedCharValue");

  objc_msgSend(v1, "supportedWoLPacketConfigurations");
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
  if (v5)
  {
    v6 = v5;
    v23 = v1;
    v26 = 0;
    v7 = *(_QWORD *)v28;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v28 != v7)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * i);
        objc_msgSend(v9, "wakePacketType", v23);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_msgSend(v10, "value");

        objc_msgSend(v9, "wakeDestinationPort");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "value");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_msgSend(v13, "unsignedShortValue");

        objc_msgSend(v9, "wakeDestinationAddress");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "wakeType");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v16, "value");

        objc_msgSend(v9, "wakePattern");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = -[HMFWoWLANInfo initWithWakeVersion:wakePort:wakeAddress:wakeType:wakePacketType:wakePattern:]([HMFWoWLANInfo alloc], "initWithWakeVersion:wakePort:wakeAddress:wakeType:wakePacketType:wakePattern:", v4, v14, v15, v17, v11, v18);
        v20 = v19;
        if (v19)
        {
          if (v26 || -[HMFWoWLANInfo wakeType](v19, "wakeType") != 2)
            objc_msgSend(v24, "addObject:", v20);
          else
            v26 = v20;
        }

      }
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
    }
    while (v6);
    v21 = v26;
    if (v26)
      objc_msgSend(v24, "insertObject:atIndex:", v26, 0);
    v1 = v23;
  }
  else
  {
    v21 = 0;
  }

  return v24;
}

void sub_1CD4B8FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4B91A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4B9350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4B950C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4B96DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL HMDRemoteEventRouterProtoTopicReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 3)
        break;
      if ((v10 >> 3) == 2)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 8;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id entityFromObject(void *a1, int a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  int v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  int v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t i;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  void *v72;
  uint64_t v73;
  id v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  int v87;
  void *v88;
  void *v89;
  id obj;
  void *v91;
  void *v92;
  _QWORD v93[4];
  id v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _BYTE v99[128];
  uint64_t v100;

  v100 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = objc_alloc_init(MEMORY[0x1E0D880D0]);
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectName"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setName:", v5);

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectType"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setEntityType:", v6);

  v7 = (void *)MEMORY[0x1E0C99E98];
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectIdentifier"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "URLWithString:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setIdentifier:", v9);

  if (a2)
  {
    objc_msgSend(v3, "hmf_arrayForKey:", CFSTR("objectRelatedIdentifiers"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v10, "count"))
    {
      hmd_urlsFromStrings(v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setRelatedEntityIdentifiers:", v11);

    }
  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectHome"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectHome"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setHome:", v13);

    if (a2)
    {
      v14 = (void *)MEMORY[0x1E0C99E98];
      objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectHomeIdentifier"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "URLWithString:", v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setHomeIdentifier:", v16);

    }
  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectRoom"));
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectRoom"));
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setRoom:", v18);

    if (!a2)
      goto LABEL_20;
    v19 = (void *)MEMORY[0x1E0C99E98];
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectRoomIdentifier"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "URLWithString:", v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setRoomIdentifier:", v21);

  }
  else if (!a2)
  {
    goto LABEL_20;
  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectZones"));
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  if (v22)
  {
    objc_msgSend(v3, "hmf_arrayForKey:", CFSTR("objectZones"));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "firstObject");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setZone:", v24);

    objc_msgSend(v3, "hmf_arrayForKey:", CFSTR("objectZoneIdentifiers"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v25, "count"))
    {
      hmd_urlsFromStrings(v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setZoneIdentifiers:", v26);

    }
  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectAccessoryPrimaryServiceIdentifier"));
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  if (v27)
  {
    v28 = (void *)MEMORY[0x1E0C99E98];
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectAccessoryPrimaryServiceIdentifier"));
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "URLWithString:", v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setPrimaryServiceIdentifier:", v30);

  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectAccessory"));
  v31 = (void *)objc_claimAutoreleasedReturnValue();

  if (v31)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectAccessory"));
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setAccessory:", v32);

    v33 = (void *)MEMORY[0x1E0C99E98];
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectAccessoryIdentifier"));
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "URLWithString:", v34);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setAccessoryIdentifier:", v35);

  }
LABEL_20:
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectType"));
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = objc_msgSend(v36, "isEqualToString:", *MEMORY[0x1E0D88A30]);

  if (v37)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectSceneType"));
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    mapToSiriSceneType(v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSceneType:", v39);

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectStatus"));
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setStatus:", v40);

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectSceneActions"));
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSceneActions:", v41);

  }
  +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectServiceType"));
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectServiceSubType"));
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v92 = v42;
  if (!v43)
  {
LABEL_41:
    if (!a2)
      goto LABEL_44;
    goto LABEL_42;
  }
  if ((objc_msgSend(v43, "isEqual:", *MEMORY[0x1E0D88C00]) & 1) == 0
    && (objc_msgSend(v43, "isEqual:", *MEMORY[0x1E0D88BE0]) & 1) == 0
    && !objc_msgSend(v43, "isEqual:", *MEMORY[0x1E0D88BD8]))
  {
    if (objc_msgSend(v43, "isEqualToString:", *MEMORY[0x1E0D88BF0]))
    {
      v50 = v4;
      v51 = v43;
    }
    else
    {
      objc_msgSend(v42, "mapToAssistantServiceName:", v43);
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setServiceType:", v52);

      objc_msgSend(v4, "serviceType");
      v53 = (void *)objc_claimAutoreleasedReturnValue();

      if (v53)
        goto LABEL_39;
      v51 = (void *)*MEMORY[0x1E0D88BE8];
      v50 = v4;
    }
    objc_msgSend(v50, "setServiceType:", v51);
LABEL_39:
    if (v44)
      objc_msgSend(v4, "setServiceSubType:", v44);
    goto LABEL_41;
  }
  objc_msgSend(v4, "setServiceType:", v43);
  if (v44)
    objc_msgSend(v4, "setServiceSubType:", v44);
  if (a2)
  {
    getAttributeForMediaProfile(v4);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setAttributes:", v45);

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectReference"));
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v47 = v46;
    else
      v47 = 0;
    v48 = v47;

    v49 = objc_msgSend(v48, "isCurrentAccessory");
    v42 = v92;
    if (v49)
      objc_msgSend(v4, "setCurrentDevice:", MEMORY[0x1E0C9AAB0]);
LABEL_42:
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectHashedRouteUID"));
    v54 = (void *)objc_claimAutoreleasedReturnValue();

    if (v54)
    {
      objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectHashedRouteUID"));
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setHashedRouteUID:", v55);

    }
  }
LABEL_44:
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectCharacteristics"));
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v57 = v56;
  if (a2 && v56)
  {
    v85 = v44;
    v86 = v43;
    v87 = a2;
    v88 = v3;
    v89 = v4;
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v56, "count"));
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = v92;
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v57, "count"));
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    v95 = 0u;
    v96 = 0u;
    v97 = 0u;
    v98 = 0u;
    v83 = v57;
    obj = v57;
    v59 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v95, v99, 16);
    if (v59)
    {
      v60 = v59;
      v61 = *(_QWORD *)v96;
      do
      {
        for (i = 0; i != v60; ++i)
        {
          if (*(_QWORD *)v96 != v61)
            objc_enumerationMutation(obj);
          v63 = *(_QWORD *)(*((_QWORD *)&v95 + 1) + 8 * i);
          objc_msgSend(v42, "mapToAssistantCharacteristicName:", v63, v83);
          v64 = (void *)objc_claimAutoreleasedReturnValue();
          if (v64)
          {
            objc_msgSend(v42, "mapReadCharacteristicFromAssistantName:", v64);
            v65 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v42, "getAliasedCharacteristicTypes:", v65);
            v66 = (void *)objc_claimAutoreleasedReturnValue();
            if ((objc_msgSend(v58, "containsObject:", v64) & 1) == 0
              && ((objc_msgSend(v65, "isEqualToString:", v63) & 1) != 0
               || objc_msgSend(v66, "containsObject:", v63)))
            {
              objc_msgSend(v58, "addObject:", v64);
            }
            objc_msgSend(v42, "mapWriteCharacteristicFromAssistantName:", v64);
            v67 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v42, "getAliasedCharacteristicTypes:", v67);
            v68 = (void *)objc_claimAutoreleasedReturnValue();

            if ((objc_msgSend(v91, "containsObject:", v64) & 1) == 0
              && ((objc_msgSend(v67, "isEqual:", v63) & 1) != 0
               || objc_msgSend(v68, "containsObject:", v63))
              && (HMFEqualObjects() & 1) == 0)
            {
              objc_msgSend(v91, "addObject:", v64);
            }

            v42 = v92;
          }

        }
        v60 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v95, v99, 16);
      }
      while (v60);
    }

    v43 = v86;
    v3 = v88;
    v4 = v89;
    if (objc_msgSend(v86, "isEqualToString:", *MEMORY[0x1E0CB9A70]))
    {
      objc_msgSend(v88, "objectForKeyedSubscript:", CFSTR("objectReference"));
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v70 = v69;
      else
        v70 = 0;
      v71 = v70;

      objc_msgSend(v71, "accessory");
      v72 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v72, "lightProfiles");
      v73 = objc_claimAutoreleasedReturnValue();
      v93[0] = MEMORY[0x1E0C809B0];
      v93[1] = 3221225472;
      v93[2] = __entityFromObject_block_invoke;
      v93[3] = &unk_1E89ADFA0;
      v94 = v71;
      v74 = v71;
      objc_msgSend((id)v73, "na_firstObjectPassingTest:", v93);
      v75 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v75, "settings");
      v76 = (void *)objc_claimAutoreleasedReturnValue();
      LOBYTE(v73) = objc_msgSend(v76, "supportedFeatures");

      if ((v73 & 1) != 0)
        objc_msgSend(v58, "addObject:", *MEMORY[0x1E0D88850]);

      v42 = v92;
    }
    a2 = v87;
    v44 = v85;
    if (objc_msgSend(v58, "count", v83))
    {
      objc_msgSend(v89, "setAttributes:", v58);
      if (objc_msgSend(v91, "count"))
        objc_msgSend(v89, "setTargetAttributes:", v91);
    }

    v57 = v84;
  }
  if (a2)
  {
    objc_msgSend(v3, "objectForKey:", CFSTR("objectGroups"));
    v77 = (void *)objc_claimAutoreleasedReturnValue();

    if (v77)
    {
      objc_msgSend(v3, "hmf_arrayForKey:", CFSTR("objectGroups"));
      v78 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v78, "firstObject");
      v79 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setServiceGroup:", v79);

      objc_msgSend(v3, "hmf_arrayForKey:", CFSTR("objectGroupIdentifiers"));
      v80 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v80, "count"))
      {
        hmd_urlsFromStrings(v80);
        v81 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "setServiceGroupIdentifiers:", v81);

      }
      v42 = v92;
    }
  }

  return v4;
}

id hmd_urlsFromStrings(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  uint64_t v30;
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v23, v31, 16);
  if (v4)
  {
    v6 = v4;
    v7 = *(_QWORD *)v24;
    v8 = 0x1E0C99000uLL;
    *(_QWORD *)&v5 = 138543618;
    v21 = v5;
    do
    {
      v9 = 0;
      v22 = v6;
      do
      {
        if (*(_QWORD *)v24 != v7)
          objc_enumerationMutation(v3);
        v10 = *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * v9);
        objc_msgSend(*(id *)(v8 + 3736), "URLWithString:", v10, v21);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
        {
          objc_msgSend(v2, "addObject:", v11);
        }
        else
        {
          v12 = (void *)MEMORY[0x1D17BA0A0]();
          HMFGetOSLogHandle();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          {
            HMFGetLogIdentifier();
            v14 = v7;
            v15 = v8;
            v16 = v2;
            v17 = v3;
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = v21;
            v28 = v18;
            v29 = 2112;
            v30 = v10;
            _os_log_impl(&dword_1CD062000, v13, OS_LOG_TYPE_ERROR, "%{public}@Unable to map NSString '%@' to NSURL", buf, 0x16u);

            v3 = v17;
            v2 = v16;
            v8 = v15;
            v7 = v14;
            v6 = v22;
          }

          objc_autoreleasePoolPop(v12);
        }

        ++v9;
      }
      while (v6 != v9);
      v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v23, v31, 16);
    }
    while (v6);
  }

  v19 = (void *)objc_msgSend(v2, "copy");
  return v19;
}

id mapToSiriSceneType(void *a1)
{
  id v1;
  id v2;
  id *v3;
  id v4;

  v1 = a1;
  v2 = (id)*MEMORY[0x1E0D88AA8];
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0CB8240]) & 1) != 0)
  {
    v3 = (id *)MEMORY[0x1E0D88A88];
LABEL_9:
    v4 = *v3;

    v2 = v4;
    goto LABEL_10;
  }
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0CB8228]) & 1) != 0)
  {
    v3 = (id *)MEMORY[0x1E0D88A90];
    goto LABEL_9;
  }
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0CB8210]) & 1) != 0)
  {
    v3 = (id *)MEMORY[0x1E0D88A98];
    goto LABEL_9;
  }
  if (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0CB8218]))
  {
    v3 = (id *)MEMORY[0x1E0D88AA0];
    goto LABEL_9;
  }
LABEL_10:

  return v2;
}

id getAttributeForMediaProfile(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;

  v1 = a1;
  if (getAttributeForMediaProfile_onceToken != -1)
    dispatch_once(&getAttributeForMediaProfile_onceToken, &__block_literal_global_59697);
  objc_msgSend(v1, "serviceType");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "serviceSubType");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v2)
    goto LABEL_16;
  objc_msgSend(v1, "entityType");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEqualToString:", *MEMORY[0x1E0D88A38]);

  if (!v5)
    goto LABEL_16;
  if ((objc_msgSend(v2, "isEqualToString:", *MEMORY[0x1E0D88BE0]) & 1) == 0)
  {
    v7 = *MEMORY[0x1E0D88C00];
    if (objc_msgSend(v2, "isEqualToString:", *MEMORY[0x1E0D88C00])
      && (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0D88B80]) & 1) != 0)
    {
      v6 = &getAttributeForMediaProfile_homePodAttributes;
      goto LABEL_15;
    }
    if (objc_msgSend(v2, "isEqualToString:", *MEMORY[0x1E0D88BD8])
      && (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0D88B40]) & 1) != 0
      || objc_msgSend(v2, "isEqualToString:", v7)
      && objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0D88B40]))
    {
      v6 = &getAttributeForMediaProfile_thirdPartyAttributes;
      goto LABEL_15;
    }
LABEL_16:
    v8 = 0;
    goto LABEL_17;
  }
  v6 = &getAttributeForMediaProfile_atvAttributes;
LABEL_15:
  v8 = (id)*v6;
LABEL_17:

  return v8;
}

uint64_t __entityFromObject_block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(a2, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "isEqual:", v3);

  return v4;
}

void __getAttributeForMediaProfile_block_invoke()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];

  v9[2] = *MEMORY[0x1E0C80C00];
  v0 = *MEMORY[0x1E0D88890];
  v9[0] = *MEMORY[0x1E0D888A8];
  v9[1] = v0;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 2);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)getAttributeForMediaProfile_atvAttributes;
  getAttributeForMediaProfile_atvAttributes = v1;

  v8 = v0;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v8, 1);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)getAttributeForMediaProfile_homePodAttributes;
  getAttributeForMediaProfile_homePodAttributes = v3;

  v7 = v0;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v7, 1);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = (void *)getAttributeForMediaProfile_thirdPartyAttributes;
  getAttributeForMediaProfile_thirdPartyAttributes = v5;

}

id entityForService(void *a1, void *a2, void *a3, int a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  int v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v9 = a3;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v10)
  {
    v11 = v10;
    v21 = a4;
    v22 = v8;
    v12 = *(_QWORD *)v24;
    while (2)
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v24 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * i);
        objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("objectIdentifier"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "urlString");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v16, "isEqual:", v15);

        if (v17)
        {
          entityFromObject(v14, v21);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v18 = v19;
          v8 = v22;
          if (v22)
            objc_msgSend(v19, "setServiceType:", v22);

          goto LABEL_14;
        }

      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
      if (v11)
        continue;
      break;
    }
    v18 = 0;
    v8 = v22;
  }
  else
  {
    v18 = 0;
  }
LABEL_14:

  return v18;
}

id entityForMediaProfile(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  void *v15;
  int v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v6 = a2;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v7)
  {
    v8 = v7;
    v17 = a3;
    v9 = *(_QWORD *)v19;
    while (2)
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * i);
        objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("objectIdentifier"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "urlString");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_msgSend(v13, "isEqual:", v12);

        if ((v14 & 1) != 0)
        {
          entityFromObject(v11, v17);
          v15 = (void *)objc_claimAutoreleasedReturnValue();

          goto LABEL_11;
        }

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      if (v8)
        continue;
      break;
    }
  }
  v15 = 0;
LABEL_11:

  return v15;
}

void __HMDHomeDataCopyProperties(void *a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  _QWORD *v54;

  v5 = a2;
  v54 = a1;
  objc_msgSend(v5, "homes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "copyWithZone:", a3);
  v8 = (void *)v54[2];
  v54[2] = v7;

  objc_msgSend(v5, "accessories");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "copyWithZone:", a3);
  v11 = (void *)v54[3];
  v54[3] = v10;

  objc_msgSend(v5, "primaryHomeUUID");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "copyWithZone:", a3);
  v14 = (void *)v54[4];
  v54[4] = v13;

  objc_msgSend(v5, "lastCurrentHomeUUID");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "copyWithZone:", a3);
  v17 = (void *)v54[5];
  v54[5] = v16;

  v54[7] = objc_msgSend(v5, "schemaVersion");
  v54[6] = objc_msgSend(v5, "dataVersion");
  v54[8] = objc_msgSend(v5, "recoveryVersion");
  objc_msgSend(v5, "dataTag");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "copyWithZone:", a3);
  v20 = (void *)v54[9];
  v54[9] = v19;

  objc_msgSend(v5, "UUIDsOfRemovedHomes");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = objc_msgSend(v21, "copyWithZone:", a3);
  v23 = (void *)v54[10];
  v54[10] = v22;

  objc_msgSend(v5, "cloudZones");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = objc_msgSend(v24, "copyWithZone:", a3);
  v26 = (void *)v54[11];
  v54[11] = v25;

  objc_msgSend(v5, "incomingInvitations");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = objc_msgSend(v27, "copyWithZone:", a3);
  v29 = (void *)v54[12];
  v54[12] = v28;

  objc_msgSend(v5, "currentDevice");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = objc_msgSend(v30, "copyWithZone:", a3);
  v32 = (void *)v54[13];
  v54[13] = v31;

  objc_msgSend(v5, "pendingReasonSaved");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = objc_msgSend(v33, "copyWithZone:", a3);
  v35 = (void *)v54[14];
  v54[14] = v34;

  objc_msgSend(v5, "pendingUserManagementOperations");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = objc_msgSend(v36, "copyWithZone:", a3);
  v38 = (void *)v54[15];
  v54[15] = v37;

  objc_msgSend(v5, "unprocessedOperationIdentifiers");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v40 = objc_msgSend(v39, "copyWithZone:", a3);
  v41 = (void *)v54[16];
  v54[16] = v40;

  objc_msgSend(v5, "applicationData");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = objc_msgSend(v42, "copyWithZone:", a3);
  v44 = (void *)v54[17];
  v54[17] = v43;

  v54[18] = objc_msgSend(v5, "residentEnabledState");
  objc_msgSend(v5, "account");
  v45 = objc_claimAutoreleasedReturnValue();
  v46 = (void *)v54[19];
  v54[19] = v45;

  objc_msgSend(v5, "remoteAccounts");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v48 = objc_msgSend(v47, "copyWithZone:", a3);
  v49 = (void *)v54[20];
  v54[20] = v48;

  objc_msgSend(v5, "primaryAccountHandle");
  v50 = objc_claimAutoreleasedReturnValue();
  v51 = (void *)v54[21];
  v54[21] = v50;

  *((_BYTE *)v54 + 8) = objc_msgSend(v5, "accessAllowedWhenLocked");
  objc_msgSend(v5, "demoAccessories");
  v52 = objc_claimAutoreleasedReturnValue();
  v53 = (void *)v54[22];
  v54[22] = v52;

  LOBYTE(a3) = objc_msgSend(v5, "demoFinalized");
  *((_BYTE *)v54 + 9) = a3;

}

void sub_1CD4C5228(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1CD4CB7D4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD4CBE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__60405(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__60406(uint64_t a1)
{

}

void sub_1CD4D48C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4D498C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4D5904(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD4D5A90(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __anonymizeUnknownVendorString_block_invoke()
{
  void *v0;

  v0 = (void *)anonymizeUnknownVendorString_allowedNames;
  anonymizeUnknownVendorString_allowedNames = (uint64_t)&unk_1E8B31F08;

}

BOOL AWDHomeKitCameraStreamIDSConnSetupReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  AWDHomeKitCameraStreamIDSConnSetupParameters *v18;
  uint64_t v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v18 = objc_alloc_init(AWDHomeKitCameraStreamIDSConnSetupParameters);
        v19 = 16;
      }
      else if ((_DWORD)v17 == 2)
      {
        v18 = objc_alloc_init(AWDHomeKitCameraStreamIDSConnSetupParameters);
        v19 = 8;
      }
      else
      {
        if ((_DWORD)v17 != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
          continue;
        }
        v18 = objc_alloc_init(AWDHomeKitCameraStreamIDSConnSetupParameters);
        v19 = 24;
      }
      objc_storeStrong((id *)(a1 + v19), v18);
      if (!PBReaderPlaceMark() || !AWDHomeKitCameraStreamIDSConnSetupParametersReadFrom((uint64_t)v18, a2))
      {

        return 0;
      }
      PBReaderRecallMark();

    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD4F70F8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD4F7AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4F899C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4F8CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4F91BC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1CD4F9824(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD4F9900(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD4F9D90(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD4F9E6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD4FCBF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id location)
{
  id *v35;

  objc_destroyWeak(v35);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD4FE688(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x300], 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__64693(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__64694(uint64_t a1)
{

}

void ___legacyMultiUserSettings_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  HMDAnalyticsMultiUserSettingsValueByKeyPath *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;

  v13 = a2;
  v5 = a3;
  v6 = objc_alloc_init(HMDAnalyticsMultiUserSettingsValueByKeyPath);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v7 = v13;
    if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedUserSplitMediaAccountWarning")) & 1) != 0)
    {
      v8 = 2;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedIdentifyVoiceOnboarding")) & 1) != 0)
    {
      v8 = 4;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedTVViewingProfileOnboarding")) & 1) != 0)
    {
      v8 = 6;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedTVViewingProfileSetupBanner")) & 1) != 0)
    {
      v8 = 7;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedCameraRecordingOnboarding")) & 1) != 0)
    {
      v8 = 8;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedCameraRecordingSetupBanner")) & 1) != 0)
    {
      v8 = 9;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("shared.root.siri.identifyVoice")) & 1) != 0)
    {
      v8 = 10;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("shared.root.music.playbackInfluencesForYou")) & 1) != 0)
    {
      v8 = 11;
    }
    else
    {
      v8 = objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedIdentifyVoiceSetupBanner"))? 5: 0;
    }

    -[HMDAnalyticsMultiUserSettingsValueByKeyPath setType:](v6, "setType:", v8);
    if (-[HMDAnalyticsMultiUserSettingsValueByKeyPath type](v6, "type"))
    {
      v9 = v5;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v10 = v9;
      else
        v10 = 0;
      v11 = v10;

      v12 = objc_msgSend(v11, "longLongValue");
      -[HMDAnalyticsMultiUserSettingsValueByKeyPath setMultiUserSettingsValueInteger:](v6, "setMultiUserSettingsValueInteger:", v12);
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:", v6);
    }
  }

}

void sub_1CD50300C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD505AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

uint64_t HMDHH2AutoMigrationHasSharedUserOrPendingInvitation(void *a1)
{
  id v1;
  void *v2;
  char v3;
  uint64_t v4;
  void *v5;

  v1 = a1;
  objc_msgSend(v1, "users");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "na_any:", &__block_literal_global_189_64979);

  if ((v3 & 1) != 0)
  {
    v4 = 1;
  }
  else
  {
    objc_msgSend(v1, "outgoingInvitations");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v5, "na_any:", &__block_literal_global_188_64990);

  }
  return v4;
}

void sub_1CD50B1FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD50C9CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD511348(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDCompanionManagerUpdateWithConnectedDevices(void *a1, void *a2)
{
  void *v3;
  os_unfair_lock_s *v4;
  NSObject *v5;
  void *v6;
  HMDDevice *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  HMDDevice *v12;
  void *v13;
  HMDDevice *v14;
  void *v15;
  os_unfair_lock_s *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  os_unfair_lock_s *v20;
  NSObject *v21;
  void *v22;
  os_unfair_lock_s *v23;
  void *v24;
  id *v25;
  NSObject *v26;
  id v27;
  HMDDevice *v28;
  void *v29;
  id v30;
  HMDDevice *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint8_t v36[128];
  uint8_t buf[4];
  id v38;
  __int16 v39;
  HMDDevice *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v30 = a1;
  v31 = a2;
  if (v30)
  {
    v3 = (void *)MEMORY[0x1D17BA0A0]();
    v4 = (os_unfair_lock_s *)v30;
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v38 = v6;
      v39 = 2112;
      v40 = v31;
      _os_log_impl(&dword_1CD062000, v5, OS_LOG_TYPE_INFO, "%{public}@Updating connected devices: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
    v7 = v31;
    v8 = -[HMDDevice countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
    if (v8)
    {
      v9 = *(_QWORD *)v33;
      while (2)
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v33 != v9)
            objc_enumerationMutation(v7);
          v11 = *(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * i);
          if (+[HMDCompanionManager isCompatibleCompanionDevice:](HMDCompanionManager, "isCompatibleCompanionDevice:", v11, v30))
          {
            v12 = [HMDDevice alloc];
            -[os_unfair_lock_s service](v4, "service");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            v14 = -[HMDDevice initWithService:device:](v12, "initWithService:device:", v13, v11);

            if (v14)
            {
              v19 = (void *)MEMORY[0x1D17BA0A0]();
              v20 = v4;
              HMFGetOSLogHandle();
              v21 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
              {
                HMFGetLogIdentifier();
                v22 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                v38 = v22;
                v39 = 2112;
                v40 = v14;
                _os_log_impl(&dword_1CD062000, v21, OS_LOG_TYPE_INFO, "%{public}@Found connected companion device: %@", buf, 0x16u);

              }
              objc_autoreleasePoolPop(v19);

              goto LABEL_19;
            }
          }
        }
        v8 = -[HMDDevice countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
        if (v8)
          continue;
        break;
      }
    }

    v15 = (void *)MEMORY[0x1D17BA0A0]();
    v16 = v4;
    HMFGetOSLogHandle();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v38 = v18;
      _os_log_impl(&dword_1CD062000, v17, OS_LOG_TYPE_INFO, "%{public}@No connected companion found", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v15);
    v14 = 0;
LABEL_19:
    v23 = v4 + 2;
    os_unfair_lock_lock_with_options();
    if ((HMFEqualObjects() & 1) != 0)
    {
      os_unfair_lock_unlock(v4 + 2);
    }
    else
    {
      v24 = (void *)MEMORY[0x1D17BA0A0]();
      v25 = v4;
      HMFGetOSLogHandle();
      v26 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v27 = (id)objc_claimAutoreleasedReturnValue();
        -[HMDDevice shortDescription](v14, "shortDescription");
        v28 = (HMDDevice *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v38 = v27;
        v39 = 2112;
        v40 = v28;
        _os_log_impl(&dword_1CD062000, v26, OS_LOG_TYPE_DEFAULT, "%{public}@Updated companion to: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v24);
      objc_storeStrong(v25 + 3, v14);
      os_unfair_lock_unlock(v23);
      objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "postNotificationName:object:", CFSTR("HMDCompanionManagerUpdatedCompanionNotification"), v25);

    }
  }

}

void sub_1CD514328(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD514744(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5148D0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5155A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location, uint64_t a14, id *a15)
{
  uint64_t v15;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v15 - 144));
  _Unwind_Resume(a1);
}

void sub_1CD5158B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD515BA0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD515DEC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5164C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD516614(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD517414(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD51747C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5174E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5180C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5185D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD518ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD518FEC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5190A4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD519B0C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD519BC4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD51A3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD51A870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD51B5A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __run(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1 = a1;
  v2 = v1;
  switch(v1[19])
  {
    case 0:
      v1[19] = 1;
      goto LABEL_3;
    case 1:
LABEL_3:
      objc_msgSend(v1, "_requestUserPermission");
      goto LABEL_7;
    case 3:
      objc_msgSend(v1, "_configureDevice");
      goto LABEL_7;
    case 5:
      objc_msgSend(v1, "_waitForPostWACMatch");
      goto LABEL_7;
    case 6:
      objc_msgSend(v1, "_postWACMatchTimeout");
LABEL_7:
      v1 = v2;
      break;
    default:
      break;
  }

}

void __callCompletion(void *a1, void *a2, void *a3, uint64_t a4)
{
  id *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id *v13;
  NSObject *v14;
  void *v15;
  id v16;
  int v17;
  void *v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  objc_msgSend(v7[18], "suspend");
  v10 = v7[18];
  v7[18] = 0;

  v11 = v7[20];
  v7[20] = 0;

  if (v7[17])
  {
    v12 = (void *)MEMORY[0x1D17BA0A0]();
    v13 = v7;
    HMFGetOSLogHandle();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = 138543618;
      v18 = v15;
      v19 = 2080;
      v20 = a4;
      _os_log_impl(&dword_1CD062000, v14, OS_LOG_TYPE_DEBUG, "%{public}@Calling completion from %s", (uint8_t *)&v17, 0x16u);

    }
    objc_autoreleasePoolPop(v12);
    (*((void (**)(void))v13[17] + 2))();
    v16 = v13[17];
    v13[17] = 0;

  }
}

void sub_1CD51C518(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD51C62C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD51C78C(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

__CFString *HMDXPCCounterTypeAsString(uint64_t a1)
{
  __CFString *v1;
  __CFString *v2;

  if (a1 == 2)
  {
    v1 = CFSTR("XPCSentNotifications");
  }
  else if (a1 == 1)
  {
    v1 = CFSTR("XPCDroppedRequests");
  }
  else
  {
    if (a1)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown counter type:%lu"), a1);
      v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
      return v1;
    }
    v1 = CFSTR("XPCAcceptedRequests");
  }
  v2 = v1;
  return v1;
}

void sub_1CD51F3A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD51F798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD520044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id HMDSWAuthFeaturesToString(char a1)
{
  __CFString *v2;
  uint64_t v3;
  void *v4;

  if ((a1 & 1) == 0)
  {
    v2 = CFSTR("<");
    if ((a1 & 2) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  objc_msgSend(CFSTR("<"), "stringByAppendingString:", CFSTR(" HAP"));
  v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if ((a1 & 2) != 0)
  {
LABEL_5:
    -[__CFString stringByAppendingString:](v2, "stringByAppendingString:", CFSTR(" HAPAirPlay2"));
    v3 = objc_claimAutoreleasedReturnValue();

    v2 = (__CFString *)v3;
  }
LABEL_6:
  -[__CFString stringByAppendingString:](v2, "stringByAppendingString:", CFSTR(" >"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1CD520424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id DateFromEpochInterval(void *a1)
{
  void *v1;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0C99D68];
    objc_msgSend(a1, "doubleValue");
    objc_msgSend(v1, "dateWithTimeIntervalSince1970:");
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

void sub_1CD52F1D0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD531C48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5323D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  id *v28;

  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD532628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD535914(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD536518(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD536610(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD53A23C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD53D2F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD542A38(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD54385C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD543934(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD5439B8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD543A90(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD54711C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD549460(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void BFSTraverseGroupWithBlock(void *a1, void *a2)
{
  id v3;
  uint64_t (**v4)(id, void *, void *);
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int v19;
  void *v20;
  id obj;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = 0x1E0C99000uLL;
  v6 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v20 = v3;
  objc_msgSend(v6, "addObject:", v3);
  for (; objc_msgSend(v6, "count"); v5 = 0x1E0C99000)
  {
    v7 = v6;
    v6 = objc_alloc_init(*(Class *)(v5 + 3560));
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    obj = v7;
    v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v31, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v27;
      while (2)
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v27 != v10)
            objc_enumerationMutation(obj);
          v12 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * v11);
          v22 = 0u;
          v23 = 0u;
          v24 = 0u;
          v25 = 0u;
          objc_msgSend(v12, "groups");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
          if (v14)
          {
            v15 = v14;
            v16 = *(_QWORD *)v23;
            do
            {
              v17 = 0;
              do
              {
                if (*(_QWORD *)v23 != v16)
                  objc_enumerationMutation(v13);
                objc_msgSend(v6, "addObject:", *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * v17++));
              }
              while (v15 != v17);
              v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
            }
            while (v15);
          }

          objc_msgSend(v12, "settings");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v19 = v4[2](v4, v12, v18);

          if (!v19)
          {

            goto LABEL_20;
          }
          ++v11;
        }
        while (v11 != v9);
        v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v31, 16);
        if (v9)
          continue;
        break;
      }
    }

  }
LABEL_20:

}

uint64_t isReconfigurationPossible(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "supportsWiFiReconfiguration"))
    v2 = objc_msgSend(v1, "isReachable");
  else
    v2 = 0;

  return v2;
}

void sub_1CD5509A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id __modelIdentifierForURI(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD v14[3];

  v14[2] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (__modelIdentifierForURI_onceToken != -1)
    dispatch_once(&__modelIdentifierForURI_onceToken, &__block_literal_global_206);
  v5 = (void *)MEMORY[0x1E0CB3A28];
  if (v4)
  {
    v6 = __modelIdentifierForURI_namespace;
    objc_msgSend(v4, "UUIDString");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = v7;
    objc_msgSend(v3, "prefixedURI");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v14[1] = v8;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 2);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "hm_deriveUUIDFromBaseUUID:withSalts:", v6, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v11 = objc_alloc(MEMORY[0x1E0CB3A28]);
    v12 = __modelIdentifierForURI_namespace;
    objc_msgSend(v3, "prefixedURI");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "dataUsingEncoding:", 4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v11, "initWithNamespace:data:", v12, v8);
  }

  return v10;
}

void ____modelIdentifierForURI_block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDString:", CFSTR("F48EA8E5-696C-4EA4-B767-16D13368CB16"));
  v1 = (void *)__modelIdentifierForURI_namespace;
  __modelIdentifierForURI_namespace = v0;

}

uint64_t __Block_byref_object_copy__73788(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__73789(uint64_t a1)
{

}

void ____identifierForURI_block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDString:", CFSTR("297A1FDB-8A3E-443F-A8A8-1F3360785587"));
  v1 = (void *)__identifierForURI_namespace;
  __identifierForURI_namespace = v0;

}

void sub_1CD55529C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&cachedInstanceForCharacteristicMetadata__lock);
  _Unwind_Resume(a1);
}

void sub_1CD555E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD556450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD556724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD557470(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD55B760(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD55BA94(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD55BC20(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void addLogEventsToResponse(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v8 = a1;
  v5 = a2;
  v6 = a3;
  objc_msgSend(v6, "objectForKeyedSubscript:", v8);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v7, v8);
  }
  objc_msgSend(v7, "addObjectsFromArray:", v5);

}

id Siri_log()
{
  if (Siri_log__hmf_once_t0 != -1)
    dispatch_once(&Siri_log__hmf_once_t0, &__block_literal_global_75300);
  return (id)Siri_log__hmf_once_v1;
}

void sub_1CD563190(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD563258(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5632FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCameraStreamConfigureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 2u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__resolution;
              goto LABEL_61;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__resolution;
              goto LABEL_64;
            }
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__resolution;
          goto LABEL_62;
        case 3u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__framerate;
              goto LABEL_61;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__framerate;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__framerate;
          goto LABEL_62;
        case 4u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__audioCodec;
              goto LABEL_61;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__audioCodec;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__audioCodec;
          goto LABEL_62;
        case 5u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 0x10u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__sampleRate;
              goto LABEL_61;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__sampleRate;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__sampleRate;
          goto LABEL_62;
        case 6u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v42 = *v3;
        v43 = *(_QWORD *)(a2 + v42);
        if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
        *(_QWORD *)(a2 + v42) = v43 + 1;
        v19 |= (unint64_t)(v44 & 0x7F) << v40;
        if ((v44 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__cryptoSuite;
          goto LABEL_62;
        }
        v40 += 7;
        v23 = v41++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__cryptoSuite;
          goto LABEL_64;
        }
      }
      v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__cryptoSuite;
LABEL_61:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_64:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD566318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__76331(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__76332(uint64_t a1)
{

}

void sub_1CD5682CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD568D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD56B8E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&sharedCommissioner_lock);
  _Unwind_Resume(a1);
}

id parseMediaSourceDisplayOrder(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  __int128 v6;
  uint64_t Next;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  __int128 v13;
  uint64_t v14;
  uint8_t buf[4];
  void *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v2 = v1;
  else
    v2 = 0;
  v3 = v2;

  if (objc_msgSend(v3, "length"))
  {
    v4 = objc_retainAutorelease(v3);
    objc_msgSend(v4, "bytes");
    objc_msgSend(v4, "length");
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    *(_QWORD *)&v6 = 138543618;
    v13 = v6;
    do
      Next = TLV8GetNext();
    while (!(_DWORD)Next);
    if ((_DWORD)Next != -6727)
    {
      v8 = (void *)MEMORY[0x1D17BA0A0](Next);
      HMFGetOSLogHandle();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = v13;
        v16 = v10;
        v17 = 2112;
        v18 = v4;
        _os_log_impl(&dword_1CD062000, v9, OS_LOG_TYPE_ERROR, "%{public}@TLV parsing failed - %@ - dropping", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v8);

      v5 = 0;
    }
    v11 = (void *)objc_msgSend(v5, "copy", v13, v14);

  }
  else
  {
    v11 = (void *)MEMORY[0x1E0C9AA60];
  }

  return v11;
}

void sub_1CD56CB28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD56CBDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD56DA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__76889(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__76890(uint64_t a1)
{

}

void sub_1CD5712C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD571FB8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD572010(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id _statisticsArrayFromDictionary(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v1 = (void *)MEMORY[0x1E0C99DE8];
  v2 = a1;
  objc_msgSend(v1, "array");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = ___statisticsArrayFromDictionary_block_invoke;
  v7[3] = &unk_1E89AF3D0;
  v8 = v3;
  v4 = v3;
  objc_msgSend(v2, "enumerateKeysAndObjectsUsingBlock:", v7);

  v5 = (void *)objc_msgSend(v4, "copy");
  return v5;
}

void ___statisticsArrayFromDictionary_block_invoke(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD v15[5];
  _QWORD v16[6];

  v16[5] = *MEMORY[0x1E0C80C00];
  v4 = *(void **)(a1 + 32);
  v16[0] = a2;
  v15[0] = CFSTR("name");
  v15[1] = CFSTR("min");
  v5 = (void *)MEMORY[0x1E0CB37E8];
  v6 = a3;
  v7 = a2;
  objc_msgSend(v5, "numberWithInteger:", objc_msgSend(v6, "minValue"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v16[1] = v8;
  v15[2] = CFSTR("max");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v6, "maxValue"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v16[2] = v9;
  v15[3] = CFSTR("average");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v6, "averageValue"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v16[3] = v10;
  v15[4] = CFSTR("count");
  v11 = (void *)MEMORY[0x1E0CB37E8];
  v12 = objc_msgSend(v6, "valueCount");

  objc_msgSend(v11, "numberWithInteger:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v16[4] = v13;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v16, v15, 5);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addObject:", v14);

}

id _counterArrayFromDictionary(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v1 = (void *)MEMORY[0x1E0C99DE8];
  v2 = a1;
  objc_msgSend(v1, "array");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = ___counterArrayFromDictionary_block_invoke;
  v7[3] = &unk_1E89AFD40;
  v8 = v3;
  v4 = v3;
  objc_msgSend(v2, "enumerateKeysAndObjectsUsingBlock:", v7);

  v5 = (void *)objc_msgSend(v4, "copy");
  return v5;
}

void ___counterArrayFromDictionary_block_invoke(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  _QWORD v9[2];
  _QWORD v10[3];

  v10[2] = *MEMORY[0x1E0C80C00];
  v4 = *(void **)(a1 + 32);
  v9[0] = CFSTR("name");
  v9[1] = CFSTR("value");
  v10[0] = a2;
  v10[1] = a3;
  v5 = (void *)MEMORY[0x1E0C99D80];
  v6 = a3;
  v7 = a2;
  objc_msgSend(v5, "dictionaryWithObjects:forKeys:count:", v10, v9, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addObject:", v8);

}

BOOL HMDRemoteEventRouterProtoDisconnectMessageReadFrom(uint64_t a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;

  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = *(unsigned __int8 *)(a1 + *v4);
    if (*(_QWORD *)(a1 + *v2) >= *(_QWORD *)(a1 + *v3))
      return v6 == 0;
    if (*(_BYTE *)(a1 + *v4))
    {
      v6 = 1;
      return v6 == 0;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)(a1 + v10);
      if (v11 == -1 || v11 >= *(_QWORD *)(a1 + *v3))
        break;
      v12 = *(_BYTE *)(*(_QWORD *)(a1 + *v5) + v11);
      *(_QWORD *)(a1 + v10) = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = *(unsigned __int8 *)(a1 + *v4);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a1 + *v4) = 1;
LABEL_12:
    v6 = *(unsigned __int8 *)(a1 + *v4);
    if (*(_BYTE *)(a1 + *v4))
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      return v6 == 0;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      return 0;
  }
}

void ____transactionSettingUpdated_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = (void *)MEMORY[0x1D17BA0A0]();
  v5 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = 138543618;
    v9 = v7;
    v10 = 2112;
    v11 = v3;
    _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_INFO, "%{public}@Sent updated setting notification. Error : %@", (uint8_t *)&v8, 0x16u);

  }
  objc_autoreleasePoolPop(v4);

}

void sub_1CD581840(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD584D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD58584C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id location)
{
  id *v13;

  objc_destroyWeak(v13);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitVendorInformationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_27;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_27;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_27;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_27;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_27;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
LABEL_27:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_28;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_28:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t AWDHomeKitCloudSyncInfoTupleReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD591094(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD591158(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5911D0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD591290(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD591428(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5915D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD59164C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5916D0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5919C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD591B24(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD591C78(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5927A4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD592BC0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD592D3C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t getAccessoryFirmwareUpdateActiveTransport(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "isReachable"))
  {
    if ((objc_msgSend(v1, "isThreadTheCurrentlyActiveTransport") & 1) != 0)
    {
      v2 = 4;
    }
    else if ((objc_msgSend(v1, "hasBTLELink") & 1) != 0)
    {
      v2 = 3;
    }
    else if (objc_msgSend(v1, "hasIPLink"))
    {
      v2 = 2;
    }
    else
    {
      v2 = 1;
    }
  }
  else
  {
    v2 = 1;
  }

  return v2;
}

void sub_1CD593340(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5933D4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD593E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD594394(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD59450C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD594E68(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void __disconnectFromEndpoint(uint64_t a1)
{
  const void *ExternalDevice;
  const void *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    ExternalDevice = (const void *)MRAVEndpointGetExternalDevice();
    if (ExternalDevice)
    {
      v3 = ExternalDevice;
      CFRetain(ExternalDevice);
      if (MRExternalDeviceGetConnectionState() == 3)
      {
        CFRelease(v3);
      }
      else
      {
        v4 = (void *)MEMORY[0x1D17BA0A0]();
        HMFGetOSLogHandle();
        v5 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v6 = (void *)objc_claimAutoreleasedReturnValue();
          v8 = 138543618;
          v9 = v6;
          v10 = 2112;
          v11 = a1;
          _os_log_impl(&dword_1CD062000, v5, OS_LOG_TYPE_INFO, "%{public}@Resetting the connection state callback for endpoint %@", (uint8_t *)&v8, 0x16u);

        }
        objc_autoreleasePoolPop(v4);
        dispatch_get_global_queue(0, 0);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        MRExternalDeviceSetConnectionStateCallback();

        MRExternalDeviceDisconnect();
        CFRelease(v3);
      }
    }
  }
}

void sub_1CD595598(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD59AE58(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD59AED4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD59D2A4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD59E1B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD59E24C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __shouldAcceptMessage(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void (**v13)(_QWORD, _QWORD, _QWORD);
  int v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "accessory");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v5, "isCurrentAccessory") & 1) != 0 || (objc_msgSend(v5, "supportsFirmwareUpdate") & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    v8 = (void *)MEMORY[0x1D17BA0A0]();
    v9 = v3;
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543362;
      v15 = v11;
      _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_INFO, "%{public}@Cannot update state for other accessory", (uint8_t *)&v14, 0xCu);

    }
    objc_autoreleasePoolPop(v8);
    objc_msgSend(v4, "responseHandler");
    v6 = objc_claimAutoreleasedReturnValue();

    if (v6)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 10);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "responseHandler");
      v13 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
      ((void (**)(_QWORD, void *, _QWORD))v13)[2](v13, v12, 0);

      v6 = 0;
    }
  }

  return v6;
}

void __registerDocumentationMetadata(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(v3, "dataSource");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "notificationCenterForSoftwareUpdate:", v3);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "removeObserver:name:object:", v3, CFSTR("HMDSoftwareUpdateDocumentationAssetStateUpdatedNotification"), 0);
    if (v4)
    {
      v8 = (void *)MEMORY[0x1D17BA0A0](v7);
      v9 = v3;
      HMFGetOSLogHandle();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = 138543618;
        v16 = v11;
        v17 = 2112;
        v18 = v4;
        _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_INFO, "%{public}@Registering documentation metadata: %@", (uint8_t *)&v15, 0x16u);

      }
      objc_autoreleasePoolPop(v8);
      +[HMDSoftwareUpdateDocumentationManager sharedManager](HMDSoftwareUpdateDocumentationManager, "sharedManager");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "registerDocumentationMetadata:", v4);

      +[HMDSoftwareUpdateDocumentationManager sharedManager](HMDSoftwareUpdateDocumentationManager, "sharedManager");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "assetForDocumentationMetadata:", v4);
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v6, "addObserver:selector:name:object:", v9, sel__handleDocumentationStateNotification_, CFSTR("HMDSoftwareUpdateDocumentationAssetStateUpdatedNotification"), v14);
    }

  }
}

void __unregisterDocumentationMetadata(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    objc_msgSend(v3, "dataSource");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "notificationCenterForSoftwareUpdate:", v3);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)MEMORY[0x1D17BA0A0](objc_msgSend(v7, "removeObserver:name:object:", v3, CFSTR("HMDSoftwareUpdateDocumentationAssetStateUpdatedNotification"), 0));
    v9 = v3;
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138543618;
      v14 = v11;
      v15 = 2112;
      v16 = v5;
      _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_INFO, "%{public}@Unregistering documentation metadata: %@", (uint8_t *)&v13, 0x16u);

    }
    objc_autoreleasePoolPop(v8);
    +[HMDSoftwareUpdateDocumentationManager sharedManager](HMDSoftwareUpdateDocumentationManager, "sharedManager");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "unregisterDocumentationMetadata:", v5);

  }
}

void sub_1CD5A1EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5A2BA0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A2C94(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A2D24(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A2E9C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A2F34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A3060(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A3260(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A33BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A3504(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1CD5A3650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  os_unfair_lock_s *v19;

  os_unfair_lock_unlock(v19);
  _Block_object_dispose(&a15, 8);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1CD5A3ABC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void notifyObservers(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v14;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v14 != v11)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v12++), "updatedCounter:fromOldValue:toNewValue:", v8, a3, a4);
      }
      while (v10 != v12);
      v10 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v10);
  }

}

uint64_t __Block_byref_object_copy__82623(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__82624(uint64_t a1)
{

}

void sub_1CD5A6704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __findAssociatedCharacteristicWithService(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;

  objc_msgSend(a1, "characteristicsOfType:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "firstObject");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1CD5A7BA4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A7C1C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A7EB0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5A831C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5A8CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD5AA308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5AA644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5AB0A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD5AB15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD5AB294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD5AB3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD5ACE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *HMDStringFromDataStreamMessageStatus(unsigned int a1)
{
  if (a1 < 7)
    return off_1E89B00D0[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<unknown status: %d>"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1CD5B990C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5B9CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  id *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_1CD5BBAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5BBBC8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD5BC818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5BC980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5BD17C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5BD1F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5BD9FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5BDE30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location)
{
  id *v39;

  objc_destroyWeak(v39);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5BE6D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 248));
  _Unwind_Resume(a1);
}

void sub_1CD5BF4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5C2E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5C76B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&localDeviceIDSIdentifier_lock);
  _Unwind_Resume(a1);
}

void sub_1CD5C806C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5CB4F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id failedActionResultFor(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v1 = (objc_class *)MEMORY[0x1E0D880B0];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  objc_msgSend(v2, "actions");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "firstObject");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "aceId");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setRequestActionId:", v6);

  objc_msgSend(v3, "setOutcome:", *MEMORY[0x1E0D88740]);
  objc_msgSend(v2, "actions");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "firstObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "value");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setResultValue:", v9);

  objc_msgSend(v2, "actions");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "firstObject");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "attribute");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setResultAttribute:", v12);

  return v3;
}

void __mapToFailureActionOutcome_block_invoke()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[3];
  _QWORD v6[4];

  v6[3] = *MEMORY[0x1E0C80C00];
  v0 = *MEMORY[0x1E0D88748];
  v1 = *MEMORY[0x1E0D88928];
  v5[0] = *MEMORY[0x1E0D88918];
  v5[1] = v1;
  v2 = *MEMORY[0x1E0D88770];
  v6[0] = v0;
  v6[1] = v2;
  v5[2] = *MEMORY[0x1E0D88950];
  v6[2] = *MEMORY[0x1E0D88780];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, v5, 3);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)mapToFailureActionOutcome_outcomeMap;
  mapToFailureActionOutcome_outcomeMap = v3;

}

void sub_1CD5CD86C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5CDAD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
  id *v12;

  objc_destroyWeak(v12);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5CDEC0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD5CDF94(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD5CE608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5CED3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5CF26C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5CF5EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD5CFA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD5D00EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __configurationFromAdvertisement(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  __CFString *v16;
  void *v17;
  char v18;
  void *v19;
  id v20;
  NSObject *v21;
  void *v22;
  const __CFString *v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSObject *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", 3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "name");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "name");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = HMFEqualObjects();

    if ((v8 & 1) == 0)
    {
      v9 = (void *)MEMORY[0x1D17BA0A0]();
      v10 = v3;
      HMFGetOSLogHandle();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "name");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v35 = v12;
        v36 = 2112;
        v37 = v13;
        _os_log_impl(&dword_1CD062000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@Detected that the accessory name, %@, is out of sync", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v9);
      objc_msgSend(v10, "name");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v14, CFSTR("name"));

    }
    objc_msgSend(v3, "home");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "mediaPassword");
    v16 = (__CFString *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "password");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = HMFEqualObjects();

    if ((v18 & 1) == 0)
    {
      v19 = (void *)MEMORY[0x1D17BA0A0]();
      v20 = v3;
      HMFGetOSLogHandle();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v35 = v22;
        _os_log_impl(&dword_1CD062000, v21, OS_LOG_TYPE_DEFAULT, "%{public}@Detected that the accessory password is out of sync", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v19);
      if (v16)
        v23 = v16;
      else
        v23 = &stru_1E89C3E38;
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v23, CFSTR("password"));
    }
    v24 = objc_msgSend(v15, "minimumMediaUserPrivilege");
    if (objc_msgSend(v3, "minimumUserPriviledge") != v24)
    {
      v25 = (void *)MEMORY[0x1D17BA0A0]();
      v26 = v3;
      HMFGetOSLogHandle();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "minimumUserPriviledge");
        HMUserPrivilegeToString();
        v33 = v25;
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v35 = v28;
        v36 = 2112;
        v37 = v29;
        _os_log_impl(&dword_1CD062000, v27, OS_LOG_TYPE_DEFAULT, "%{public}@Detected that the accessory minimum user privilege, %@, is out of sync", buf, 0x16u);

        v25 = v33;
      }

      objc_autoreleasePoolPop(v25);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v24);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v30, CFSTR("privilege"));

    }
    v31 = (void *)objc_msgSend(v5, "copy");

  }
  else
  {
    v31 = 0;
  }

  return v31;
}

void __updateConfiguration(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  id v25;
  NSObject *v26;
  void *v27;
  void *v28;
  id v29;
  NSObject *v30;
  void *v31;
  _QWORD v32[4];
  id v33;
  id v34;
  id v35;
  _QWORD aBlock[4];
  id v37;
  id v38;
  uint8_t buf[4];
  void *v40;
  __int16 v41;
  id v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (void *)MEMORY[0x1D17BA0A0]();
  if (v5)
  {
    v9 = v5;
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v40 = v11;
      v41 = 2112;
      v42 = v6;
      _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_INFO, "%{public}@Updating configuration to: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v8);
    objc_msgSend(v9, "home");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "isOwnerUser");

    if ((v13 & 1) != 0)
    {
      objc_msgSend(v9, "advertisement");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "outputDevice");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "av_OutputDevice");
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v16)
      {
        v17 = MEMORY[0x1E0C809B0];
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 3221225472;
        aBlock[2] = ____updateConfiguration_block_invoke;
        aBlock[3] = &unk_1E89B0920;
        v37 = v6;
        v18 = v9;
        v38 = v18;
        v19 = _Block_copy(aBlock);
        objc_initWeak((id *)buf, v18);
        __outputDeviceConfigurationOptions();
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v32[0] = v17;
        v32[1] = 3221225472;
        v32[2] = ____updateConfiguration_block_invoke_212;
        v32[3] = &unk_1E89B0870;
        v33 = v14;
        objc_copyWeak(&v35, (id *)buf);
        v34 = v7;
        objc_msgSend(v16, "configureUsingBlock:options:completionHandler:", v19, v20, v32);

        objc_destroyWeak(&v35);
        objc_destroyWeak((id *)buf);

        v21 = v37;
      }
      else
      {
        v28 = (void *)MEMORY[0x1D17BA0A0]();
        v29 = v9;
        HMFGetOSLogHandle();
        v30 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v40 = v31;
          _os_log_impl(&dword_1CD062000, v30, OS_LOG_TYPE_INFO, "%{public}@Missing output device", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v28);
        __startConfigurationRetryTimer(v29);
        objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 4);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, void *))v7 + 2))(v7, v21);
      }

    }
    else
    {
      v24 = (void *)MEMORY[0x1D17BA0A0]();
      v25 = v9;
      HMFGetOSLogHandle();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v40 = v27;
        _os_log_impl(&dword_1CD062000, v26, OS_LOG_TYPE_INFO, "%{public}@Only owner can update configuration", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v24);
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 17);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *))v7 + 2))(v7, v14);
    }
  }
  else
  {
    HMFGetOSLogHandle();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v40 = v23;
      _os_log_impl(&dword_1CD062000, v22, OS_LOG_TYPE_ERROR, "%{public}@Missing required paramter", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v8);
    objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 3);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, void *))v7 + 2))(v7, v14);
  }

}

void sub_1CD5D0A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __stopConfigurationRetryTimer(void *a1)
{
  id v1;
  void *v2;
  NSObject *v3;
  _QWORD block[4];
  id v5;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "workQueue");
    v3 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ____stopConfigurationRetryTimer_block_invoke;
    block[3] = &unk_1E89C2730;
    v5 = v2;
    dispatch_async(v3, block);

  }
}

void ____stopConfigurationRetryTimer_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "configurationRetryTimer");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    v3 = (void *)MEMORY[0x1D17BA0A0]();
    v4 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138543362;
      v11 = v6;
      _os_log_impl(&dword_1CD062000, v5, OS_LOG_TYPE_INFO, "%{public}@Stopping configuration retry timer", (uint8_t *)&v10, 0xCu);

    }
    objc_autoreleasePoolPop(v3);
    objc_msgSend(*(id *)(a1 + 32), "configurationRetryTimer");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "suspend");

    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 504);
    *(_QWORD *)(v8 + 504) = 0;

  }
}

void __startConfigurationRetryTimer(void *a1)
{
  id v1;
  void *v2;
  NSObject *v3;
  _QWORD block[4];
  id v5;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "workQueue");
    v3 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ____startConfigurationRetryTimer_block_invoke;
    block[3] = &unk_1E89C2730;
    v5 = v2;
    dispatch_async(v3, block);

  }
}

void ____updateConfiguration_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "hmf_stringForKey:", CFSTR("name"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
    objc_msgSend(v3, "setDeviceName:", v4);

  objc_msgSend(*(id *)(a1 + 32), "hmf_stringForKey:", CFSTR("password"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
    objc_msgSend(v3, "setDevicePassword:", v5);

  objc_msgSend(*(id *)(a1 + 32), "hmf_numberForKey:", CFSTR("privilege"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
    objc_msgSend(v3, "startAutomaticallyAllowingConnectionsFromPeersInHomeGroupAndRejectOtherConnections:", objc_msgSend(v6, "integerValue") != 0);

  v8 = (void *)MEMORY[0x1D17BA0A0]();
  v9 = *(id *)(a1 + 40);
  HMFGetOSLogHandle();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 138543618;
    v13 = v11;
    v14 = 2112;
    v15 = v3;
    _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_INFO, "%{public}@Configuring with configuration: %@", (uint8_t *)&v12, 0x16u);

  }
  objc_autoreleasePoolPop(v8);

}

id __outputDeviceConfigurationOptions()
{
  uint64_t v1;
  _QWORD v2[2];

  v2[1] = *MEMORY[0x1E0C80C00];
  v1 = *MEMORY[0x1E0C8AB80];
  v2[0] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v2, &v1, 1);
  return (id)objc_claimAutoreleasedReturnValue();
}

void ____updateConfiguration_block_invoke_212(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  id WeakRetained;
  void *v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  id v21;
  id v22;
  void *v23;
  NSObject *v24;
  id v25;
  _QWORD v26[4];
  id v27;
  id v28;
  _BYTE buf[24];
  void *v30;
  id v31;
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v12 = (void *)MEMORY[0x1D17BA0A0]();
  v13 = WeakRetained;
  HMFGetOSLogHandle();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v8)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      *(_QWORD *)&buf[4] = v16;
      _os_log_impl(&dword_1CD062000, v15, OS_LOG_TYPE_INFO, "%{public}@Successfully updated configuration", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v12);
    __stopConfigurationRetryTimer(v13);
    v17 = 0;
  }
  else
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      *(_QWORD *)&buf[4] = v18;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v10;
      *(_WORD *)&buf[22] = 2112;
      v30 = v9;
      _os_log_impl(&dword_1CD062000, v15, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to update configuration with error: %@, cancellationReason: %@", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v12);
    objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:description:reason:suggestion:underlyingError:", 54, CFSTR("Communication failure"), CFSTR("Failed to set configuration."), 0, v10);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    __startConfigurationRetryTimer(v13);
  }
  v19 = *(_QWORD *)(a1 + 40);
  if (!v19)
  {
LABEL_11:
    if (v8)
    {
      v21 = v13;
      v22 = v8;
      if (v21)
      {
        v23 = v22;
        objc_msgSend(v21, "workQueue");
        v24 = objc_claimAutoreleasedReturnValue();
        *(_QWORD *)buf = MEMORY[0x1E0C809B0];
        *(_QWORD *)&buf[8] = 3221225472;
        *(_QWORD *)&buf[16] = ____updateWithCurrentConfiguration_block_invoke;
        v30 = &unk_1E89C2328;
        v31 = v21;
        v32 = v23;
        dispatch_async(v24, buf);

      }
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  if (v13)
  {
    objc_msgSend(v13, "workQueue");
    v20 = objc_claimAutoreleasedReturnValue();
    v26[0] = MEMORY[0x1E0C809B0];
    v26[1] = 3221225472;
    v26[2] = ____updateConfiguration_block_invoke_213;
    v26[3] = &unk_1E89C1D68;
    v28 = *(id *)(a1 + 40);
    v27 = v17;
    dispatch_async(v20, v26);

    goto LABEL_11;
  }
  (*(void (**)(uint64_t, void *))(v19 + 16))(v19, v17);
  if (v8)
  {
    v25 = v8;
LABEL_16:

  }
LABEL_17:

}

uint64_t ____updateConfiguration_block_invoke_213(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void ____updateWithCurrentConfiguration_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  NSObject *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  int v42;
  void *v43;
  __int16 v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17BA0A0]();
  v3 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(a1 + 40);
    v42 = 138543618;
    v43 = v5;
    v44 = 2112;
    v45 = v6;
    _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_INFO, "%{public}@Updating with configuration: %@", (uint8_t *)&v42, 0x16u);

  }
  objc_autoreleasePoolPop(v2);
  objc_msgSend(*(id *)(a1 + 40), "devicePassword");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v7, "length"))
  {

    v7 = 0;
  }
  objc_msgSend(*(id *)(a1 + 32), "password");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = HMFEqualObjects();

  if ((v9 & 1) == 0)
  {
    v10 = (void *)MEMORY[0x1D17BA0A0]();
    v11 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = 138543362;
      v43 = v13;
      _os_log_impl(&dword_1CD062000, v12, OS_LOG_TYPE_INFO, "%{public}@Caching updated password", (uint8_t *)&v42, 0xCu);

    }
    objc_autoreleasePoolPop(v10);
    v14 = *(void **)(a1 + 32);
    if (v14)
    {
      v15 = v14;
      v16 = v7;
      objc_msgSend(v15, "transactionWithObjectChangeType:", 2);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v18 = v17;
      else
        v18 = 0;
      v19 = v18;

      objc_msgSend(v19, "setPassword:", v16);
      objc_msgSend(v15, "home");
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v20, "backingStore");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "transaction:options:", CFSTR("Update Password"), v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v23, "add:withMessage:", v19, 0);
      objc_msgSend(v23, "run");

    }
  }

  v24 = objc_msgSend(*(id *)(a1 + 40), "onlyAllowsConnectionsFromPeersInHomeGroup");
  v25 = objc_msgSend(*(id *)(a1 + 32), "minimumUserPriviledge");
  if (v25 >= 1)
    v26 = 1;
  else
    v26 = v25;
  if (v26 != v24)
  {
    v27 = (void *)MEMORY[0x1D17BA0A0]();
    v28 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = 138543362;
      v43 = v30;
      _os_log_impl(&dword_1CD062000, v29, OS_LOG_TYPE_INFO, "%{public}@Caching updated user minimum privilege", (uint8_t *)&v42, 0xCu);

    }
    objc_autoreleasePoolPop(v27);
    v31 = *(void **)(a1 + 32);
    if (v31)
    {
      v32 = v24;
      v33 = v31;
      objc_msgSend(v33, "transactionWithObjectChangeType:", 2);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v35 = v34;
      else
        v35 = 0;
      v36 = v35;

      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v32);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v36, "setMinimumUserPriviledge:", v37);

      objc_msgSend(v33, "home");
      v38 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v38, "backingStore");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "transaction:options:", CFSTR("Update Minimum User Privilege"), v40);
      v41 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v41, "add:withMessage:", v36, 0);
      objc_msgSend(v41, "run");

    }
  }
}

void ____startConfigurationRetryTimer_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  void *v13;
  double v14;
  double v15;
  void *v16;
  id obj;
  id obja;

  objc_msgSend(*(id *)(a1 + 32), "configurationRetryTimer");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v2)
  {
    objc_msgSend(MEMORY[0x1E0D28678], "sharedPreferences");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "preferenceForKey:", CFSTR("airPlayConfigurationRetryMinimum"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0D28678], "sharedPreferences");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "preferenceForKey:", CFSTR("airPlayConfigurationRetryMaximum"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0D28678], "sharedPreferences");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "preferenceForKey:", CFSTR("airPlayConfigurationRetryFactor"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    v9 = objc_alloc(MEMORY[0x1E0D28578]);
    objc_msgSend(v4, "numberValue");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "doubleValue");
    v12 = v11;
    objc_msgSend(v6, "numberValue");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "doubleValue");
    v15 = v14;
    objc_msgSend(v8, "numberValue");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    obj = (id)objc_msgSend(v9, "initWithMinimumTimeInterval:maximumTimeInterval:exponentialFactor:options:", objc_msgSend(v16, "integerValue"), 0, v12, v15);

    objc_msgSend(obj, "setDelegate:", *(_QWORD *)(a1 + 32));
    objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 504), obj);

    v2 = obj;
  }
  obja = v2;
  objc_msgSend(v2, "resume");

}

uint64_t __Block_byref_object_copy__87105(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__87106(uint64_t a1)
{

}

void sub_1CD5D27D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____updatePassword_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint32_t v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = WeakRetained;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v3)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543618;
      v15 = v9;
      v16 = 2112;
      v17 = v3;
      v10 = "%{public}@Failed to update password with error: %@";
      v11 = v8;
      v12 = OS_LOG_TYPE_DEFAULT;
      v13 = 22;
LABEL_6:
      _os_log_impl(&dword_1CD062000, v11, v12, v10, (uint8_t *)&v14, v13);

    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 138543362;
    v15 = v9;
    v10 = "%{public}@Successfully updated password";
    v11 = v8;
    v12 = OS_LOG_TYPE_INFO;
    v13 = 12;
    goto LABEL_6;
  }

  objc_autoreleasePoolPop(v5);
}

void sub_1CD5D2B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____updateMinimumUserPrivilege_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint32_t v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = WeakRetained;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v3)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543618;
      v15 = v9;
      v16 = 2112;
      v17 = v3;
      v10 = "%{public}@Failed to minimum user privilege with error: %@";
      v11 = v8;
      v12 = OS_LOG_TYPE_DEFAULT;
      v13 = 22;
LABEL_6:
      _os_log_impl(&dword_1CD062000, v11, v12, v10, (uint8_t *)&v14, v13);

    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 138543362;
    v15 = v9;
    v10 = "%{public}@Successfully updated minimum user privilege";
    v11 = v8;
    v12 = OS_LOG_TYPE_INFO;
    v13 = 12;
    goto LABEL_6;
  }

  objc_autoreleasePoolPop(v5);
}

void ____updateName_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint32_t v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = WeakRetained;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v3)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543618;
      v15 = v9;
      v16 = 2112;
      v17 = v3;
      v10 = "%{public}@Failed to update name with error: %@";
      v11 = v8;
      v12 = OS_LOG_TYPE_DEFAULT;
      v13 = 22;
LABEL_6:
      _os_log_impl(&dword_1CD062000, v11, v12, v10, (uint8_t *)&v14, v13);

    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 138543362;
    v15 = v9;
    v10 = "%{public}@Successfully updated name";
    v11 = v8;
    v12 = OS_LOG_TYPE_INFO;
    v13 = 12;
    goto LABEL_6;
  }

  objc_autoreleasePoolPop(v5);
}

__CFString *HMDCameraRecordingMediaContainerTypeAsString(uint64_t a1)
{
  if (!a1)
    return CFSTR("HMDCameraRecordingMediaContainerTypeFragmentedMP4");
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingMediaContainerType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

id HMDCameraRecordingEventTriggerOptionsAsString(char a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if ((a1 & 1) != 0)
    objc_msgSend(v2, "addObject:", CFSTR("HMDCameraRecordingEventTriggerOptionsMotion"));
  if ((a1 & 2) != 0)
    objc_msgSend(v3, "addObject:", CFSTR("HMDCameraRecordingEventTriggerOptionsDoorbell"));
  v4 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(v3, "componentsJoinedByString:", CFSTR(", "));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringWithFormat:", CFSTR("[%@]"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void sub_1CD5D5D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__87667(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__87668(uint64_t a1)
{

}

void sub_1CD5D9B1C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5D9C3C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5D9D20(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5D9D88(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5D9E00(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5D9E78(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5D9EE0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5D9F58(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5D9FD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id mapButtonConfigurationForTVReceiver(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  unint64_t v9;
  THAButton *v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99E20], "setWithCapacity:", objc_msgSend(v1, "count"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v14 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * i);
        v9 = objc_msgSend(v8, "type", (_QWORD)v13) - 1;
        if (v9 <= 0xB && ((0xCFFu >> v9) & 1) != 0)
        {
          v10 = -[THAButton initWithType:identifier:]([THAButton alloc], "initWithType:identifier:", qword_1CDB8F568[v9], objc_msgSend(v8, "identifier"));
          objc_msgSend(v2, "addObject:", v10);

        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v5);
  }

  v11 = (void *)objc_msgSend(v2, "copy");
  return v11;
}

id __findUserWithUUID(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  v3 = (objc_class *)MEMORY[0x1E0CB3A28];
  v4 = a2;
  v5 = a1;
  v6 = (void *)objc_msgSend([v3 alloc], "initWithUUIDString:", v5);

  objc_msgSend(v4, "userWithUUID:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

uint64_t AWDHomeKitHomeConfigurationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t result;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  AWDHomeKitEventTrigger *v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  unsigned int v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  char v139;
  unsigned int v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  char v154;
  unsigned int v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  char v159;
  unsigned int v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  char v164;
  unsigned int v165;
  uint64_t v166;
  unsigned int v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  char v171;
  unsigned int v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  char v176;
  unsigned int v177;
  uint64_t v178;
  unsigned int v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  char v183;
  unsigned int v184;
  uint64_t v185;
  unint64_t v186;
  char v187;
  char v188;
  unsigned int v189;
  uint64_t v190;
  unint64_t v191;
  char v192;
  char v193;
  unsigned int v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  char v198;
  unsigned int v199;
  uint64_t v200;
  unint64_t v201;
  char v202;
  char v203;
  unsigned int v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  char v208;
  unsigned int v209;
  uint64_t v210;
  unint64_t v211;
  char v212;
  char v213;
  unsigned int v214;
  uint64_t v215;
  unint64_t v216;
  char v217;
  char v218;
  unsigned int v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  char v223;
  unsigned int v224;
  uint64_t v225;
  unint64_t v226;
  char v227;
  char v228;
  unsigned int v229;
  uint64_t v230;
  unint64_t v231;
  char v232;
  char v233;
  unsigned int v234;
  uint64_t v235;
  unint64_t v236;
  char v237;
  char v238;
  unsigned int v239;
  uint64_t v240;
  unint64_t v241;
  char v242;
  char v243;
  unsigned int v244;
  uint64_t v245;
  unint64_t v246;
  char v247;
  char v248;
  unsigned int v249;
  uint64_t v250;
  unint64_t v251;
  char v252;
  char v253;
  unsigned int v254;
  uint64_t v255;
  unint64_t v256;
  char v257;
  char v258;
  unsigned int v259;
  uint64_t v260;
  unint64_t v261;
  char v262;
  char v263;
  unsigned int v264;
  uint64_t v265;
  unint64_t v266;
  char v267;
  char v268;
  unsigned int v269;
  uint64_t v270;
  unint64_t v271;
  char v272;
  char v273;
  unsigned int v274;
  uint64_t v275;
  unint64_t v276;
  char v277;
  char v278;
  unsigned int v279;
  uint64_t v280;
  unint64_t v281;
  char v282;
  char v283;
  unsigned int v284;
  uint64_t v285;
  unint64_t v286;
  char v287;
  char v288;
  unsigned int v289;
  uint64_t v290;
  unint64_t v291;
  char v292;
  char v293;
  unsigned int v294;
  uint64_t v295;
  unint64_t v296;
  char v297;
  char v298;
  unsigned int v299;
  uint64_t v300;
  unint64_t v301;
  char v302;
  char v303;
  unsigned int v304;
  uint64_t v305;
  unint64_t v306;
  char v307;
  char v308;
  unsigned int v309;
  uint64_t v310;
  unint64_t v311;
  char v312;
  char v313;
  unsigned int v314;
  uint64_t v315;
  unint64_t v316;
  char v317;
  char v318;
  unsigned int v319;
  uint64_t v320;
  unint64_t v321;
  char v322;
  char v323;
  unsigned int v324;
  uint64_t v325;
  unint64_t v326;
  char v327;
  char v328;
  unsigned int v329;
  uint64_t v330;
  unint64_t v331;
  char v332;
  char v333;
  unsigned int v334;
  uint64_t v335;
  unint64_t v336;
  char v337;
  char v338;
  unsigned int v339;
  uint64_t v340;
  unint64_t v341;
  char v342;
  char v343;
  unsigned int v344;
  uint64_t v345;
  unint64_t v346;
  char v347;
  char v348;
  unsigned int v349;
  uint64_t v350;
  uint64_t v351;
  unint64_t v352;
  char v353;
  char v354;
  unsigned int v355;
  uint64_t v356;
  unint64_t v357;
  char v358;
  char v359;
  unsigned int v360;
  uint64_t v361;
  unint64_t v362;
  char v363;
  char v364;
  unsigned int v365;
  uint64_t v366;
  unint64_t v367;
  char v368;
  char v369;
  unsigned int v370;
  uint64_t v371;
  unint64_t v372;
  char v373;
  char v374;
  unsigned int v375;
  uint64_t v376;
  unint64_t v377;
  char v378;
  char v379;
  unsigned int v380;
  uint64_t v381;
  unint64_t v382;
  char v383;
  char v384;
  unsigned int v385;
  uint64_t v386;
  unint64_t v387;
  char v388;
  char v389;
  unsigned int v390;
  uint64_t v391;
  unint64_t v392;
  char v393;
  char v394;
  unsigned int v395;
  uint64_t v396;
  unint64_t v397;
  char v398;
  char v399;
  unsigned int v400;
  uint64_t v401;
  unint64_t v402;
  char v403;
  char v404;
  unsigned int v405;
  uint64_t v406;
  unint64_t v407;
  char v408;
  char v409;
  unsigned int v410;
  uint64_t v411;
  unint64_t v412;
  char v413;
  char v414;
  unsigned int v415;
  uint64_t v416;
  unint64_t v417;
  char v418;
  char v419;
  unsigned int v420;
  uint64_t v421;
  unint64_t v422;
  char v423;
  char v424;
  unsigned int v425;
  uint64_t v426;
  unint64_t v427;
  char v428;
  char v429;
  unsigned int v430;
  uint64_t v431;
  unint64_t v432;
  char v433;
  char v434;
  unsigned int v435;
  uint64_t v436;
  unint64_t v437;
  char v438;
  char v439;
  unsigned int v440;
  uint64_t v441;
  unint64_t v442;
  char v443;
  char v444;
  unsigned int v445;
  uint64_t v446;
  unint64_t v447;
  char v448;
  uint64_t v449;
  BOOL v450;
  uint64_t v451;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x40uLL;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_623;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_625;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_623:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_625:
        v449 = 72;
        goto LABEL_959;
      case 2u:
        v23 = 0;
        v24 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x10u;
        while (2)
        {
          v25 = *v3;
          v26 = *(_QWORD *)(a2 + v25);
          if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v19 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              v14 = v24++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_629;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_629:
        v449 = 320;
        goto LABEL_959;
      case 3u:
        v28 = 0;
        v29 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x800u;
        while (2)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
            *(_QWORD *)(a2 + v30) = v31 + 1;
            v19 |= (unint64_t)(v32 & 0x7F) << v28;
            if (v32 < 0)
            {
              v28 += 7;
              v14 = v29++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_633;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_633:
        v449 = 348;
        goto LABEL_959;
      case 4u:
        v33 = 0;
        v34 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x8000uLL;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v19 |= (unint64_t)(v37 & 0x7F) << v33;
            if (v37 < 0)
            {
              v33 += 7;
              v14 = v34++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_637;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_637:
        v449 = 108;
        goto LABEL_959;
      case 5u:
        v38 = 0;
        v39 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 8u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v19 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_641;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_641:
        v449 = 316;
        goto LABEL_959;
      case 6u:
        v43 = 0;
        v44 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x400u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v19 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v14 = v44++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_645;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_645:
        v449 = 344;
        goto LABEL_959;
      case 7u:
        v48 = 0;
        v49 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x400000000uLL;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v19 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_649;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_649:
        v449 = 184;
        goto LABEL_959;
      case 8u:
        v53 = 0;
        v54 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x100u;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v19 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v14 = v54++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_653;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_653:
        v449 = 336;
        goto LABEL_959;
      case 9u:
        v58 = 0;
        v59 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x4000uLL;
        while (2)
        {
          v60 = *v3;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v19 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              v14 = v59++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_657;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_657:
        v449 = 104;
        goto LABEL_959;
      case 0xAu:
        v63 = 0;
        v64 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 4u;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v19 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              v14 = v64++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_661;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_661:
        v449 = 312;
        goto LABEL_959;
      case 0xBu:
        v68 = 0;
        v69 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x4000u;
        while (2)
        {
          v70 = *v3;
          v71 = *(_QWORD *)(a2 + v70);
          if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v19 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              v14 = v69++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_665;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_665:
        v449 = 360;
        goto LABEL_959;
      case 0xDu:
        v74 = 0;
        v75 = 0;
        v76 = 0;
        v77 = ((*(unsigned __int8 *)(a1 + 402) << 16) | 0x40000u) >> 16;
        *(_WORD *)(a1 + 400) = *(_WORD *)(a1 + 400);
        *(_BYTE *)(a1 + 402) = v77;
        while (2)
        {
          v78 = *v3;
          v79 = *(_QWORD *)(a2 + v78);
          if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v14 = v75++ >= 9;
              if (v14)
              {
                v76 = 0;
                goto LABEL_669;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v76 = 0;
LABEL_669:
        v450 = v76 != 0;
        v451 = 387;
        goto LABEL_882;
      case 0xEu:
        v81 = 0;
        v82 = 0;
        v83 = 0;
        v84 = ((*(unsigned __int8 *)(a1 + 402) << 16) | 0x20000u) >> 16;
        *(_WORD *)(a1 + 400) = *(_WORD *)(a1 + 400);
        *(_BYTE *)(a1 + 402) = v84;
        while (2)
        {
          v85 = *v3;
          v86 = *(_QWORD *)(a2 + v85);
          if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              v14 = v82++ >= 9;
              if (v14)
              {
                v83 = 0;
                goto LABEL_673;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v83 = 0;
LABEL_673:
        v450 = v83 != 0;
        v451 = 386;
        goto LABEL_882;
      case 0xFu:
        v88 = 0;
        v89 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x200000uLL;
        while (2)
        {
          v90 = *v3;
          v91 = *(_QWORD *)(a2 + v90);
          if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v91);
            *(_QWORD *)(a2 + v90) = v91 + 1;
            v19 |= (unint64_t)(v92 & 0x7F) << v88;
            if (v92 < 0)
            {
              v88 += 7;
              v14 = v89++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_677;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_677:
        v449 = 132;
        goto LABEL_959;
      case 0x10u:
        v93 = 0;
        v94 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x200000000000000uLL;
        while (2)
        {
          v95 = *v3;
          v96 = *(_QWORD *)(a2 + v95);
          if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v19 |= (unint64_t)(v97 & 0x7F) << v93;
            if (v97 < 0)
            {
              v93 += 7;
              v14 = v94++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_681;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_681:
        v449 = 276;
        goto LABEL_959;
      case 0x11u:
        v98 = 0;
        v99 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x40000000uLL;
        while (2)
        {
          v100 = *v3;
          v101 = *(_QWORD *)(a2 + v100);
          if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v101);
            *(_QWORD *)(a2 + v100) = v101 + 1;
            v19 |= (unint64_t)(v102 & 0x7F) << v98;
            if (v102 < 0)
            {
              v98 += 7;
              v14 = v99++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_685;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_685:
        v449 = 168;
        goto LABEL_959;
      case 0x12u:
        v103 = objc_alloc_init(AWDHomeKitEventTrigger);
        objc_msgSend((id)a1, "addEventTriggers:", v103);
        if (!PBReaderPlaceMark() || (AWDHomeKitEventTriggerReadFrom((uint64_t)v103, a2) & 1) == 0)
          goto LABEL_962;
        goto LABEL_348;
      case 0x13u:
        v104 = 0;
        v105 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x800000000uLL;
        while (2)
        {
          v106 = *v3;
          v107 = *(_QWORD *)(a2 + v106);
          if (v107 == -1 || v107 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
            *(_QWORD *)(a2 + v106) = v107 + 1;
            v19 |= (unint64_t)(v108 & 0x7F) << v104;
            if (v108 < 0)
            {
              v104 += 7;
              v14 = v105++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_689;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_689:
        v449 = 188;
        goto LABEL_959;
      case 0x14u:
        v109 = 0;
        v110 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x20000uLL;
        while (2)
        {
          v111 = *v3;
          v112 = *(_QWORD *)(a2 + v111);
          if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
            *(_QWORD *)(a2 + v111) = v112 + 1;
            v19 |= (unint64_t)(v113 & 0x7F) << v109;
            if (v113 < 0)
            {
              v109 += 7;
              v14 = v110++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_693;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_693:
        v449 = 116;
        goto LABEL_959;
      case 0x15u:
        v114 = 0;
        v115 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x1000u;
        while (2)
        {
          v116 = *v3;
          v117 = *(_QWORD *)(a2 + v116);
          if (v117 == -1 || v117 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v118 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v117);
            *(_QWORD *)(a2 + v116) = v117 + 1;
            v19 |= (unint64_t)(v118 & 0x7F) << v114;
            if (v118 < 0)
            {
              v114 += 7;
              v14 = v115++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_697;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_697:
        v449 = 352;
        goto LABEL_959;
      case 0x16u:
        v119 = 0;
        v120 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x10000uLL;
        while (2)
        {
          v121 = *v3;
          v122 = *(_QWORD *)(a2 + v121);
          if (v122 == -1 || v122 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v122);
            *(_QWORD *)(a2 + v121) = v122 + 1;
            v19 |= (unint64_t)(v123 & 0x7F) << v119;
            if (v123 < 0)
            {
              v119 += 7;
              v14 = v120++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_701;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_701:
        v449 = 112;
        goto LABEL_959;
      case 0x17u:
        v124 = 0;
        v125 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x80000uLL;
        while (2)
        {
          v126 = *v3;
          v127 = *(_QWORD *)(a2 + v126);
          if (v127 == -1 || v127 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v128 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
            *(_QWORD *)(a2 + v126) = v127 + 1;
            v19 |= (unint64_t)(v128 & 0x7F) << v124;
            if (v128 < 0)
            {
              v124 += 7;
              v14 = v125++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_705;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_705:
        v449 = 124;
        goto LABEL_959;
      case 0x18u:
        v129 = 0;
        v130 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x800000uLL;
        while (2)
        {
          v131 = *v3;
          v132 = *(_QWORD *)(a2 + v131);
          if (v132 == -1 || v132 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v132);
            *(_QWORD *)(a2 + v131) = v132 + 1;
            v19 |= (unint64_t)(v133 & 0x7F) << v129;
            if (v133 < 0)
            {
              v129 += 7;
              v14 = v130++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_709;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_709:
        v449 = 140;
        goto LABEL_959;
      case 0x19u:
        v134 = 0;
        v135 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x800000000000uLL;
        while (2)
        {
          v136 = *v3;
          v137 = *(_QWORD *)(a2 + v136);
          if (v137 == -1 || v137 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v138 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v137);
            *(_QWORD *)(a2 + v136) = v137 + 1;
            v19 |= (unint64_t)(v138 & 0x7F) << v134;
            if (v138 < 0)
            {
              v134 += 7;
              v14 = v135++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_713;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_713:
        v449 = 236;
        goto LABEL_959;
      case 0x1Au:
        v139 = 0;
        v140 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x40u;
        while (2)
        {
          v141 = *v3;
          v142 = *(_QWORD *)(a2 + v141);
          if (v142 == -1 || v142 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v142);
            *(_QWORD *)(a2 + v141) = v142 + 1;
            v19 |= (unint64_t)(v143 & 0x7F) << v139;
            if (v143 < 0)
            {
              v139 += 7;
              v14 = v140++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_717;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_717:
        v449 = 328;
        goto LABEL_959;
      case 0x1Bu:
        v144 = 0;
        v145 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x100000000uLL;
        while (2)
        {
          v146 = *v3;
          v147 = *(_QWORD *)(a2 + v146);
          if (v147 == -1 || v147 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v148 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v147);
            *(_QWORD *)(a2 + v146) = v147 + 1;
            v19 |= (unint64_t)(v148 & 0x7F) << v144;
            if (v148 < 0)
            {
              v144 += 7;
              v14 = v145++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_721;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_721:
        v449 = 176;
        goto LABEL_959;
      case 0x1Cu:
        v149 = 0;
        v150 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x400000uLL;
        while (2)
        {
          v151 = *v3;
          v152 = *(_QWORD *)(a2 + v151);
          if (v152 == -1 || v152 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v152);
            *(_QWORD *)(a2 + v151) = v152 + 1;
            v19 |= (unint64_t)(v153 & 0x7F) << v149;
            if (v153 < 0)
            {
              v149 += 7;
              v14 = v150++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_725;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_725:
        v449 = 136;
        goto LABEL_959;
      case 0x1Du:
        v154 = 0;
        v155 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x80000000uLL;
        while (2)
        {
          v156 = *v3;
          v157 = *(_QWORD *)(a2 + v156);
          if (v157 == -1 || v157 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v158 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v157);
            *(_QWORD *)(a2 + v156) = v157 + 1;
            v19 |= (unint64_t)(v158 & 0x7F) << v154;
            if (v158 < 0)
            {
              v154 += 7;
              v14 = v155++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_729;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_729:
        v449 = 172;
        goto LABEL_959;
      case 0x1Eu:
        v159 = 0;
        v160 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x200000000uLL;
        while (2)
        {
          v161 = *v3;
          v162 = *(_QWORD *)(a2 + v161);
          if (v162 == -1 || v162 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v163 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v162);
            *(_QWORD *)(a2 + v161) = v162 + 1;
            v19 |= (unint64_t)(v163 & 0x7F) << v159;
            if (v163 < 0)
            {
              v159 += 7;
              v14 = v160++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_733;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_733:
        v449 = 180;
        goto LABEL_959;
      case 0x1Fu:
        v164 = 0;
        v165 = 0;
        v166 = 0;
        v167 = ((*(unsigned __int8 *)(a1 + 402) << 16) | 0x10000u) >> 16;
        *(_WORD *)(a1 + 400) = *(_WORD *)(a1 + 400);
        *(_BYTE *)(a1 + 402) = v167;
        while (2)
        {
          v168 = *v3;
          v169 = *(_QWORD *)(a2 + v168);
          if (v169 == -1 || v169 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v170 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v169);
            *(_QWORD *)(a2 + v168) = v169 + 1;
            v166 |= (unint64_t)(v170 & 0x7F) << v164;
            if (v170 < 0)
            {
              v164 += 7;
              v14 = v165++ >= 9;
              if (v14)
              {
                v166 = 0;
                goto LABEL_737;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v166 = 0;
LABEL_737:
        v450 = v166 != 0;
        v451 = 385;
        goto LABEL_882;
      case 0x20u:
        v171 = 0;
        v172 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 2u;
        while (2)
        {
          v173 = *v3;
          v174 = *(_QWORD *)(a2 + v173);
          if (v174 == -1 || v174 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v175 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v174);
            *(_QWORD *)(a2 + v173) = v174 + 1;
            v19 |= (unint64_t)(v175 & 0x7F) << v171;
            if (v175 < 0)
            {
              v171 += 7;
              v14 = v172++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_741;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_741:
        v449 = 308;
        goto LABEL_959;
      case 0x21u:
        v176 = 0;
        v177 = 0;
        v178 = 0;
        v179 = ((*(unsigned __int8 *)(a1 + 402) << 16) | 0x80000u) >> 16;
        *(_WORD *)(a1 + 400) = *(_WORD *)(a1 + 400);
        *(_BYTE *)(a1 + 402) = v179;
        while (2)
        {
          v180 = *v3;
          v181 = *(_QWORD *)(a2 + v180);
          if (v181 == -1 || v181 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v182 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v181);
            *(_QWORD *)(a2 + v180) = v181 + 1;
            v178 |= (unint64_t)(v182 & 0x7F) << v176;
            if (v182 < 0)
            {
              v176 += 7;
              v14 = v177++ >= 9;
              if (v14)
              {
                v178 = 0;
                goto LABEL_745;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v178 = 0;
LABEL_745:
        v450 = v178 != 0;
        v451 = 388;
        goto LABEL_882;
      case 0x22u:
        v183 = 0;
        v184 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x80u;
        while (2)
        {
          v185 = *v3;
          v186 = *(_QWORD *)(a2 + v185);
          if (v186 == -1 || v186 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v187 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v186);
            *(_QWORD *)(a2 + v185) = v186 + 1;
            v19 |= (unint64_t)(v187 & 0x7F) << v183;
            if (v187 < 0)
            {
              v183 += 7;
              v14 = v184++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_749;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_749:
        v449 = 332;
        goto LABEL_959;
      case 0x23u:
        v188 = 0;
        v189 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x20uLL;
        while (2)
        {
          v190 = *v3;
          v191 = *(_QWORD *)(a2 + v190);
          if (v191 == -1 || v191 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v192 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v191);
            *(_QWORD *)(a2 + v190) = v191 + 1;
            v19 |= (unint64_t)(v192 & 0x7F) << v188;
            if (v192 < 0)
            {
              v188 += 7;
              v14 = v189++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_753;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_753:
        v449 = 68;
        goto LABEL_959;
      case 0x24u:
        v193 = 0;
        v194 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x2000uLL;
        while (2)
        {
          v195 = *v3;
          v196 = *(_QWORD *)(a2 + v195);
          if (v196 == -1 || v196 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v197 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v196);
            *(_QWORD *)(a2 + v195) = v196 + 1;
            v19 |= (unint64_t)(v197 & 0x7F) << v193;
            if (v197 < 0)
            {
              v193 += 7;
              v14 = v194++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_757;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_757:
        v449 = 100;
        goto LABEL_959;
      case 0x25u:
        v198 = 0;
        v199 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x80uLL;
        while (2)
        {
          v200 = *v3;
          v201 = *(_QWORD *)(a2 + v200);
          if (v201 == -1 || v201 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v202 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v201);
            *(_QWORD *)(a2 + v200) = v201 + 1;
            v19 |= (unint64_t)(v202 & 0x7F) << v198;
            if (v202 < 0)
            {
              v198 += 7;
              v14 = v199++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_761;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_761:
        v449 = 76;
        goto LABEL_959;
      case 0x26u:
        v203 = 0;
        v204 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x200uLL;
        while (2)
        {
          v205 = *v3;
          v206 = *(_QWORD *)(a2 + v205);
          if (v206 == -1 || v206 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v207 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v206);
            *(_QWORD *)(a2 + v205) = v206 + 1;
            v19 |= (unint64_t)(v207 & 0x7F) << v203;
            if (v207 < 0)
            {
              v203 += 7;
              v14 = v204++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_765;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_765:
        v449 = 84;
        goto LABEL_959;
      case 0x27u:
        v208 = 0;
        v209 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x100uLL;
        while (2)
        {
          v210 = *v3;
          v211 = *(_QWORD *)(a2 + v210);
          if (v211 == -1 || v211 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v212 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v211);
            *(_QWORD *)(a2 + v210) = v211 + 1;
            v19 |= (unint64_t)(v212 & 0x7F) << v208;
            if (v212 < 0)
            {
              v208 += 7;
              v14 = v209++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_769;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_769:
        v449 = 80;
        goto LABEL_959;
      case 0x28u:
        v213 = 0;
        v214 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x400uLL;
        while (2)
        {
          v215 = *v3;
          v216 = *(_QWORD *)(a2 + v215);
          if (v216 == -1 || v216 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v217 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v216);
            *(_QWORD *)(a2 + v215) = v216 + 1;
            v19 |= (unint64_t)(v217 & 0x7F) << v213;
            if (v217 < 0)
            {
              v213 += 7;
              v14 = v214++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_773;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_773:
        v449 = 88;
        goto LABEL_959;
      case 0x29u:
        v218 = 0;
        v219 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x800uLL;
        while (2)
        {
          v220 = *v3;
          v221 = *(_QWORD *)(a2 + v220);
          if (v221 == -1 || v221 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v222 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v221);
            *(_QWORD *)(a2 + v220) = v221 + 1;
            v19 |= (unint64_t)(v222 & 0x7F) << v218;
            if (v222 < 0)
            {
              v218 += 7;
              v14 = v219++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_777;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_777:
        v449 = 92;
        goto LABEL_959;
      case 0x2Au:
        v223 = 0;
        v224 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x1000uLL;
        while (2)
        {
          v225 = *v3;
          v226 = *(_QWORD *)(a2 + v225);
          if (v226 == -1 || v226 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v227 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v226);
            *(_QWORD *)(a2 + v225) = v226 + 1;
            v19 |= (unint64_t)(v227 & 0x7F) << v223;
            if (v227 < 0)
            {
              v223 += 7;
              v14 = v224++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_781;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_781:
        v449 = 96;
        goto LABEL_959;
      case 0x2Bu:
        v228 = 0;
        v229 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x20u;
        while (2)
        {
          v230 = *v3;
          v231 = *(_QWORD *)(a2 + v230);
          if (v231 == -1 || v231 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v232 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v231);
            *(_QWORD *)(a2 + v230) = v231 + 1;
            v19 |= (unint64_t)(v232 & 0x7F) << v228;
            if (v232 < 0)
            {
              v228 += 7;
              v14 = v229++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_785;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_785:
        v449 = 324;
        goto LABEL_959;
      case 0x2Cu:
        v103 = objc_alloc_init(AWDHomeKitMultiUserSettings);
        objc_msgSend((id)a1, "addHomeKitMultiUserSettings:", v103);
        if (!PBReaderPlaceMark() || (AWDHomeKitMultiUserSettingsReadFrom(v103, a2) & 1) == 0)
          goto LABEL_962;
        goto LABEL_348;
      case 0x2Du:
        v233 = 0;
        v234 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x8000000000uLL;
        while (2)
        {
          v235 = *v3;
          v236 = *(_QWORD *)(a2 + v235);
          if (v236 == -1 || v236 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v237 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v236);
            *(_QWORD *)(a2 + v235) = v236 + 1;
            v19 |= (unint64_t)(v237 & 0x7F) << v233;
            if (v237 < 0)
            {
              v233 += 7;
              v14 = v234++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_789;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_789:
        v449 = 204;
        goto LABEL_959;
      case 0x2Eu:
        v238 = 0;
        v239 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x2000000000uLL;
        while (2)
        {
          v240 = *v3;
          v241 = *(_QWORD *)(a2 + v240);
          if (v241 == -1 || v241 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v242 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v241);
            *(_QWORD *)(a2 + v240) = v241 + 1;
            v19 |= (unint64_t)(v242 & 0x7F) << v238;
            if (v242 < 0)
            {
              v238 += 7;
              v14 = v239++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_793;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_793:
        v449 = 196;
        goto LABEL_959;
      case 0x2Fu:
        v243 = 0;
        v244 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x4000000000uLL;
        while (2)
        {
          v245 = *v3;
          v246 = *(_QWORD *)(a2 + v245);
          if (v246 == -1 || v246 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v247 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v246);
            *(_QWORD *)(a2 + v245) = v246 + 1;
            v19 |= (unint64_t)(v247 & 0x7F) << v243;
            if (v247 < 0)
            {
              v243 += 7;
              v14 = v244++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_797;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_797:
        v449 = 200;
        goto LABEL_959;
      case 0x30u:
        v248 = 0;
        v249 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x10000000uLL;
        while (2)
        {
          v250 = *v3;
          v251 = *(_QWORD *)(a2 + v250);
          if (v251 == -1 || v251 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v252 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v251);
            *(_QWORD *)(a2 + v250) = v251 + 1;
            v19 |= (unint64_t)(v252 & 0x7F) << v248;
            if (v252 < 0)
            {
              v248 += 7;
              v14 = v249++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_801;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_801:
        v449 = 160;
        goto LABEL_959;
      case 0x33u:
        v103 = objc_alloc_init(AWDHomeKitHAPService);
        objc_msgSend((id)a1, "addHapServicesList:", v103);
        goto LABEL_346;
      case 0x34u:
        v103 = objc_alloc_init(AWDHomeKitHAPService);
        objc_msgSend((id)a1, "addPrimaryHAPServicesList:", v103);
        goto LABEL_346;
      case 0x35u:
        v103 = objc_alloc_init(AWDHomeKitHAPService);
        objc_msgSend((id)a1, "addHapServicesListCertified:", v103);
        goto LABEL_346;
      case 0x36u:
        v103 = objc_alloc_init(AWDHomeKitHAPService);
        objc_msgSend((id)a1, "addPrimaryHAPServicesListCertified:", v103);
LABEL_346:
        if (PBReaderPlaceMark() && (AWDHomeKitHAPServiceReadFrom((uint64_t)v103, a2) & 1) != 0)
        {
LABEL_348:
          PBReaderRecallMark();

LABEL_960:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_962:

        return 0;
      case 0x37u:
        v253 = 0;
        v254 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x40000000000uLL;
        while (2)
        {
          v255 = *v3;
          v256 = *(_QWORD *)(a2 + v255);
          if (v256 == -1 || v256 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v257 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v256);
            *(_QWORD *)(a2 + v255) = v256 + 1;
            v19 |= (unint64_t)(v257 & 0x7F) << v253;
            if (v257 < 0)
            {
              v253 += 7;
              v14 = v254++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_805;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_805:
        v449 = 216;
        goto LABEL_959;
      case 0x38u:
        v258 = 0;
        v259 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 1u;
        while (2)
        {
          v260 = *v3;
          v261 = *(_QWORD *)(a2 + v260);
          if (v261 == -1 || v261 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v262 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v261);
            *(_QWORD *)(a2 + v260) = v261 + 1;
            v19 |= (unint64_t)(v262 & 0x7F) << v258;
            if (v262 < 0)
            {
              v258 += 7;
              v14 = v259++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_809;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_809:
        v449 = 304;
        goto LABEL_959;
      case 0x39u:
        v263 = 0;
        v264 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x200u;
        while (2)
        {
          v265 = *v3;
          v266 = *(_QWORD *)(a2 + v265);
          if (v266 == -1 || v266 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v267 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v266);
            *(_QWORD *)(a2 + v265) = v266 + 1;
            v19 |= (unint64_t)(v267 & 0x7F) << v263;
            if (v267 < 0)
            {
              v263 += 7;
              v14 = v264++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_813;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_813:
        v449 = 340;
        goto LABEL_959;
      case 0x3Eu:
        v268 = 0;
        v269 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x4000000uLL;
        while (2)
        {
          v270 = *v3;
          v271 = *(_QWORD *)(a2 + v270);
          if (v271 == -1 || v271 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v272 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v271);
            *(_QWORD *)(a2 + v270) = v271 + 1;
            v19 |= (unint64_t)(v272 & 0x7F) << v268;
            if (v272 < 0)
            {
              v268 += 7;
              v14 = v269++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_817;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_817:
        v449 = 152;
        goto LABEL_959;
      case 0x3Fu:
        v273 = 0;
        v274 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x2000000uLL;
        while (2)
        {
          v275 = *v3;
          v276 = *(_QWORD *)(a2 + v275);
          if (v276 == -1 || v276 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v277 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v276);
            *(_QWORD *)(a2 + v275) = v276 + 1;
            v19 |= (unint64_t)(v277 & 0x7F) << v273;
            if (v277 < 0)
            {
              v273 += 7;
              v14 = v274++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_821;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_821:
        v449 = 148;
        goto LABEL_959;
      case 0x40u:
        v278 = 0;
        v279 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x8000000uLL;
        while (2)
        {
          v280 = *v3;
          v281 = *(_QWORD *)(a2 + v280);
          if (v281 == -1 || v281 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v282 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v281);
            *(_QWORD *)(a2 + v280) = v281 + 1;
            v19 |= (unint64_t)(v282 & 0x7F) << v278;
            if (v282 < 0)
            {
              v278 += 7;
              v14 = v279++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_825;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_825:
        v449 = 156;
        goto LABEL_959;
      case 0x41u:
        v283 = 0;
        v284 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x1000000uLL;
        while (2)
        {
          v285 = *v3;
          v286 = *(_QWORD *)(a2 + v285);
          if (v286 == -1 || v286 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v287 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v286);
            *(_QWORD *)(a2 + v285) = v286 + 1;
            v19 |= (unint64_t)(v287 & 0x7F) << v283;
            if (v287 < 0)
            {
              v283 += 7;
              v14 = v284++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_829;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_829:
        v449 = 144;
        goto LABEL_959;
      case 0x42u:
        v288 = 0;
        v289 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x20000000uLL;
        while (2)
        {
          v290 = *v3;
          v291 = *(_QWORD *)(a2 + v290);
          if (v291 == -1 || v291 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v292 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v291);
            *(_QWORD *)(a2 + v290) = v291 + 1;
            v19 |= (unint64_t)(v292 & 0x7F) << v288;
            if (v292 < 0)
            {
              v288 += 7;
              v14 = v289++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_833;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_833:
        v449 = 164;
        goto LABEL_959;
      case 0x43u:
        v293 = 0;
        v294 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 2uLL;
        while (2)
        {
          v295 = *v3;
          v296 = *(_QWORD *)(a2 + v295);
          if (v296 == -1 || v296 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v297 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v296);
            *(_QWORD *)(a2 + v295) = v296 + 1;
            v19 |= (unint64_t)(v297 & 0x7F) << v293;
            if (v297 < 0)
            {
              v293 += 7;
              v14 = v294++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_837;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_837:
        v449 = 12;
        goto LABEL_959;
      case 0x44u:
        v298 = 0;
        v299 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x200000000000uLL;
        while (2)
        {
          v300 = *v3;
          v301 = *(_QWORD *)(a2 + v300);
          if (v301 == -1 || v301 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v302 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v301);
            *(_QWORD *)(a2 + v300) = v301 + 1;
            v19 |= (unint64_t)(v302 & 0x7F) << v298;
            if (v302 < 0)
            {
              v298 += 7;
              v14 = v299++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_841;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_841:
        v449 = 228;
        goto LABEL_959;
      case 0x45u:
        v303 = 0;
        v304 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x100000000000uLL;
        while (2)
        {
          v305 = *v3;
          v306 = *(_QWORD *)(a2 + v305);
          if (v306 == -1 || v306 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v307 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v306);
            *(_QWORD *)(a2 + v305) = v306 + 1;
            v19 |= (unint64_t)(v307 & 0x7F) << v303;
            if (v307 < 0)
            {
              v303 += 7;
              v14 = v304++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_845;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_845:
        v449 = 224;
        goto LABEL_959;
      case 0x46u:
        v308 = 0;
        v309 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x400000000000uLL;
        while (2)
        {
          v310 = *v3;
          v311 = *(_QWORD *)(a2 + v310);
          if (v311 == -1 || v311 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v312 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v311);
            *(_QWORD *)(a2 + v310) = v311 + 1;
            v19 |= (unint64_t)(v312 & 0x7F) << v308;
            if (v312 < 0)
            {
              v308 += 7;
              v14 = v309++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_849;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_849:
        v449 = 232;
        goto LABEL_959;
      case 0x47u:
        v313 = 0;
        v314 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x10000000000000uLL;
        while (2)
        {
          v315 = *v3;
          v316 = *(_QWORD *)(a2 + v315);
          if (v316 == -1 || v316 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v317 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v316);
            *(_QWORD *)(a2 + v315) = v316 + 1;
            v19 |= (unint64_t)(v317 & 0x7F) << v313;
            if (v317 < 0)
            {
              v313 += 7;
              v14 = v314++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_853;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_853:
        v449 = 256;
        goto LABEL_959;
      case 0x48u:
        v318 = 0;
        v319 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x4000000000000uLL;
        while (2)
        {
          v320 = *v3;
          v321 = *(_QWORD *)(a2 + v320);
          if (v321 == -1 || v321 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v322 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v321);
            *(_QWORD *)(a2 + v320) = v321 + 1;
            v19 |= (unint64_t)(v322 & 0x7F) << v318;
            if (v322 < 0)
            {
              v318 += 7;
              v14 = v319++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_857;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_857:
        v449 = 248;
        goto LABEL_959;
      case 0x49u:
        v323 = 0;
        v324 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x20000000000000uLL;
        while (2)
        {
          v325 = *v3;
          v326 = *(_QWORD *)(a2 + v325);
          if (v326 == -1 || v326 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v327 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v326);
            *(_QWORD *)(a2 + v325) = v326 + 1;
            v19 |= (unint64_t)(v327 & 0x7F) << v323;
            if (v327 < 0)
            {
              v323 += 7;
              v14 = v324++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_861;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_861:
        v449 = 260;
        goto LABEL_959;
      case 0x4Au:
        v328 = 0;
        v329 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x100000000000000uLL;
        while (2)
        {
          v330 = *v3;
          v331 = *(_QWORD *)(a2 + v330);
          if (v331 == -1 || v331 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v332 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v331);
            *(_QWORD *)(a2 + v330) = v331 + 1;
            v19 |= (unint64_t)(v332 & 0x7F) << v328;
            if (v332 < 0)
            {
              v328 += 7;
              v14 = v329++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_865;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_865:
        v449 = 272;
        goto LABEL_959;
      case 0x4Bu:
        v333 = 0;
        v334 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x40000000000000uLL;
        while (2)
        {
          v335 = *v3;
          v336 = *(_QWORD *)(a2 + v335);
          if (v336 == -1 || v336 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v337 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v336);
            *(_QWORD *)(a2 + v335) = v336 + 1;
            v19 |= (unint64_t)(v337 & 0x7F) << v333;
            if (v337 < 0)
            {
              v333 += 7;
              v14 = v334++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_869;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_869:
        v449 = 264;
        goto LABEL_959;
      case 0x4Cu:
        v338 = 0;
        v339 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x80000000000000uLL;
        while (2)
        {
          v340 = *v3;
          v341 = *(_QWORD *)(a2 + v340);
          if (v341 == -1 || v341 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v342 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v341);
            *(_QWORD *)(a2 + v340) = v341 + 1;
            v19 |= (unint64_t)(v342 & 0x7F) << v338;
            if (v342 < 0)
            {
              v338 += 7;
              v14 = v339++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_873;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_873:
        v449 = 268;
        goto LABEL_959;
      case 0x4Du:
        v343 = 0;
        v344 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x8000000000000uLL;
        while (2)
        {
          v345 = *v3;
          v346 = *(_QWORD *)(a2 + v345);
          if (v346 == -1 || v346 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v347 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v346);
            *(_QWORD *)(a2 + v345) = v346 + 1;
            v19 |= (unint64_t)(v347 & 0x7F) << v343;
            if (v347 < 0)
            {
              v343 += 7;
              v14 = v344++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_877;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_877:
        v449 = 252;
        goto LABEL_959;
      case 0x4Eu:
        v348 = 0;
        v349 = 0;
        v350 = 0;
        *(_WORD *)(a1 + 400) |= 0x8000u;
        while (2)
        {
          v351 = *v3;
          v352 = *(_QWORD *)(a2 + v351);
          if (v352 == -1 || v352 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v353 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v352);
            *(_QWORD *)(a2 + v351) = v352 + 1;
            v350 |= (unint64_t)(v353 & 0x7F) << v348;
            if (v353 < 0)
            {
              v348 += 7;
              v14 = v349++ >= 9;
              if (v14)
              {
                v350 = 0;
                goto LABEL_881;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v350 = 0;
LABEL_881:
        v450 = v350 != 0;
        v451 = 384;
LABEL_882:
        *(_BYTE *)(a1 + v451) = v450;
        goto LABEL_960;
      case 0x4Fu:
        v354 = 0;
        v355 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x1000000000uLL;
        while (2)
        {
          v356 = *v3;
          v357 = *(_QWORD *)(a2 + v356);
          if (v357 == -1 || v357 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v358 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v357);
            *(_QWORD *)(a2 + v356) = v357 + 1;
            v19 |= (unint64_t)(v358 & 0x7F) << v354;
            if (v358 < 0)
            {
              v354 += 7;
              v14 = v355++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_886;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_886:
        v449 = 192;
        goto LABEL_959;
      case 0x50u:
        v359 = 0;
        v360 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x10000000000uLL;
        while (2)
        {
          v361 = *v3;
          v362 = *(_QWORD *)(a2 + v361);
          if (v362 == -1 || v362 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v363 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v362);
            *(_QWORD *)(a2 + v361) = v362 + 1;
            v19 |= (unint64_t)(v363 & 0x7F) << v359;
            if (v363 < 0)
            {
              v359 += 7;
              v14 = v360++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_890;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_890:
        v449 = 208;
        goto LABEL_959;
      case 0x51u:
        v364 = 0;
        v365 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x20000000000uLL;
        while (2)
        {
          v366 = *v3;
          v367 = *(_QWORD *)(a2 + v366);
          if (v367 == -1 || v367 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v368 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v367);
            *(_QWORD *)(a2 + v366) = v367 + 1;
            v19 |= (unint64_t)(v368 & 0x7F) << v364;
            if (v368 < 0)
            {
              v364 += 7;
              v14 = v365++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_894;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_894:
        v449 = 212;
        goto LABEL_959;
      case 0x52u:
        v369 = 0;
        v370 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 8uLL;
        while (2)
        {
          v371 = *v3;
          v372 = *(_QWORD *)(a2 + v371);
          if (v372 == -1 || v372 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v373 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v372);
            *(_QWORD *)(a2 + v371) = v372 + 1;
            v19 |= (unint64_t)(v373 & 0x7F) << v369;
            if (v373 < 0)
            {
              v369 += 7;
              v14 = v370++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_898;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_898:
        v449 = 48;
        goto LABEL_959;
      case 0x53u:
        v374 = 0;
        v375 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 4uLL;
        while (2)
        {
          v376 = *v3;
          v377 = *(_QWORD *)(a2 + v376);
          if (v377 == -1 || v377 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v378 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v377);
            *(_QWORD *)(a2 + v376) = v377 + 1;
            v19 |= (unint64_t)(v378 & 0x7F) << v374;
            if (v378 < 0)
            {
              v374 += 7;
              v14 = v375++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_902;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_902:
        v449 = 24;
        goto LABEL_959;
      case 0x54u:
        v379 = 0;
        v380 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 1uLL;
        while (2)
        {
          v381 = *v3;
          v382 = *(_QWORD *)(a2 + v381);
          if (v382 == -1 || v382 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v383 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v382);
            *(_QWORD *)(a2 + v381) = v382 + 1;
            v19 |= (unint64_t)(v383 & 0x7F) << v379;
            if (v383 < 0)
            {
              v379 += 7;
              v14 = v380++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_906;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_906:
        v449 = 8;
        goto LABEL_959;
      case 0x55u:
        v384 = 0;
        v385 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x8000000000000000;
        while (2)
        {
          v386 = *v3;
          v387 = *(_QWORD *)(a2 + v386);
          if (v387 == -1 || v387 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v388 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v387);
            *(_QWORD *)(a2 + v386) = v387 + 1;
            v19 |= (unint64_t)(v388 & 0x7F) << v384;
            if (v388 < 0)
            {
              v384 += 7;
              v14 = v385++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_910;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_910:
        v449 = 300;
        goto LABEL_959;
      case 0x56u:
        v389 = 0;
        v390 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x4000000000000000uLL;
        while (2)
        {
          v391 = *v3;
          v392 = *(_QWORD *)(a2 + v391);
          if (v392 == -1 || v392 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v393 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v392);
            *(_QWORD *)(a2 + v391) = v392 + 1;
            v19 |= (unint64_t)(v393 & 0x7F) << v389;
            if (v393 < 0)
            {
              v389 += 7;
              v14 = v390++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_914;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_914:
        v449 = 296;
        goto LABEL_959;
      case 0x57u:
        v394 = 0;
        v395 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x1000000000000uLL;
        while (2)
        {
          v396 = *v3;
          v397 = *(_QWORD *)(a2 + v396);
          if (v397 == -1 || v397 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v398 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v397);
            *(_QWORD *)(a2 + v396) = v397 + 1;
            v19 |= (unint64_t)(v398 & 0x7F) << v394;
            if (v398 < 0)
            {
              v394 += 7;
              v14 = v395++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_918;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_918:
        v449 = 240;
        goto LABEL_959;
      case 0x58u:
        v399 = 0;
        v400 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x2000000000000uLL;
        while (2)
        {
          v401 = *v3;
          v402 = *(_QWORD *)(a2 + v401);
          if (v402 == -1 || v402 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v403 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v402);
            *(_QWORD *)(a2 + v401) = v402 + 1;
            v19 |= (unint64_t)(v403 & 0x7F) << v399;
            if (v403 < 0)
            {
              v399 += 7;
              v14 = v400++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_922;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_922:
        v449 = 244;
        goto LABEL_959;
      case 0x59u:
        v404 = 0;
        v405 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x10uLL;
        while (2)
        {
          v406 = *v3;
          v407 = *(_QWORD *)(a2 + v406);
          if (v407 == -1 || v407 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v408 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v407);
            *(_QWORD *)(a2 + v406) = v407 + 1;
            v19 |= (unint64_t)(v408 & 0x7F) << v404;
            if (v408 < 0)
            {
              v404 += 7;
              v14 = v405++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_926;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_926:
        v449 = 64;
        goto LABEL_959;
      case 0x5Au:
        v409 = 0;
        v410 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x80000000000uLL;
        while (2)
        {
          v411 = *v3;
          v412 = *(_QWORD *)(a2 + v411);
          if (v412 == -1 || v412 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v413 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v412);
            *(_QWORD *)(a2 + v411) = v412 + 1;
            v19 |= (unint64_t)(v413 & 0x7F) << v409;
            if (v413 < 0)
            {
              v409 += 7;
              v14 = v410++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_930;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_930:
        v449 = 220;
        goto LABEL_959;
      case 0x5Bu:
        v414 = 0;
        v415 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x100000uLL;
        while (2)
        {
          v416 = *v3;
          v417 = *(_QWORD *)(a2 + v416);
          if (v417 == -1 || v417 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v418 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v417);
            *(_QWORD *)(a2 + v416) = v417 + 1;
            v19 |= (unint64_t)(v418 & 0x7F) << v414;
            if (v418 < 0)
            {
              v414 += 7;
              v14 = v415++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_934;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_934:
        v449 = 128;
        goto LABEL_959;
      case 0x5Cu:
        v419 = 0;
        v420 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x2000u;
        while (2)
        {
          v421 = *v3;
          v422 = *(_QWORD *)(a2 + v421);
          if (v422 == -1 || v422 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v423 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v422);
            *(_QWORD *)(a2 + v421) = v422 + 1;
            v19 |= (unint64_t)(v423 & 0x7F) << v419;
            if (v423 < 0)
            {
              v419 += 7;
              v14 = v420++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_938;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_938:
        v449 = 356;
        goto LABEL_959;
      case 0x5Du:
        v424 = 0;
        v425 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x800000000000000uLL;
        while (2)
        {
          v426 = *v3;
          v427 = *(_QWORD *)(a2 + v426);
          if (v427 == -1 || v427 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v428 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v427);
            *(_QWORD *)(a2 + v426) = v427 + 1;
            v19 |= (unint64_t)(v428 & 0x7F) << v424;
            if (v428 < 0)
            {
              v424 += 7;
              v14 = v425++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_942;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_942:
        v449 = 284;
        goto LABEL_959;
      case 0x5Eu:
        v429 = 0;
        v430 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x1000000000000000uLL;
        while (2)
        {
          v431 = *v3;
          v432 = *(_QWORD *)(a2 + v431);
          if (v432 == -1 || v432 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v433 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v432);
            *(_QWORD *)(a2 + v431) = v432 + 1;
            v19 |= (unint64_t)(v433 & 0x7F) << v429;
            if (v433 < 0)
            {
              v429 += 7;
              v14 = v430++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_946;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_946:
        v449 = 288;
        goto LABEL_959;
      case 0x5Fu:
        v434 = 0;
        v435 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x2000000000000000uLL;
        while (2)
        {
          v436 = *v3;
          v437 = *(_QWORD *)(a2 + v436);
          if (v437 == -1 || v437 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v438 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v437);
            *(_QWORD *)(a2 + v436) = v437 + 1;
            v19 |= (unint64_t)(v438 & 0x7F) << v434;
            if (v438 < 0)
            {
              v434 += 7;
              v14 = v435++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_950;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_950:
        v449 = 292;
        goto LABEL_959;
      case 0x60u:
        v439 = 0;
        v440 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x400000000000000uLL;
        while (2)
        {
          v441 = *v3;
          v442 = *(_QWORD *)(a2 + v441);
          if (v442 == -1 || v442 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v443 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v442);
            *(_QWORD *)(a2 + v441) = v442 + 1;
            v19 |= (unint64_t)(v443 & 0x7F) << v439;
            if (v443 < 0)
            {
              v439 += 7;
              v14 = v440++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_954;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_954:
        v449 = 280;
        goto LABEL_959;
      case 0x61u:
        v444 = 0;
        v445 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x40000uLL;
        while (2)
        {
          v446 = *v3;
          v447 = *(_QWORD *)(a2 + v446);
          if (v447 == -1 || v447 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v448 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v447);
            *(_QWORD *)(a2 + v446) = v447 + 1;
            v19 |= (unint64_t)(v448 & 0x7F) << v444;
            if (v448 < 0)
            {
              v444 += 7;
              v14 = v445++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_958;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_958:
        v449 = 120;
LABEL_959:
        *(_DWORD *)(a1 + v449) = v19;
        goto LABEL_960;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_960;
    }
  }
}

void sub_1CD5F49A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD5F5114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__89923(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__89924(uint64_t a1)
{

}

void sub_1CD5F8514(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5F8664(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5F86E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5F8778(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5F8994(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5F8B30(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5F8D80(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL isNameValidWithVoiceShortcut(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  void *v6;
  _BOOL8 v7;
  NSObject *v8;
  void *v9;
  NSObject *v10;
  dispatch_time_t v11;
  _QWORD v13[4];
  NSObject *v14;
  __int128 *p_buf;
  __int128 buf;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "productClass");

  if (v3 == 6)
  {
    v4 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138543362;
      *(_QWORD *)((char *)&buf + 4) = v6;
      _os_log_impl(&dword_1CD062000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@siriactiond does not run on HomePod", (uint8_t *)&buf, 0xCu);

    }
    objc_autoreleasePoolPop(v4);
    v7 = 1;
  }
  else
  {
    v8 = dispatch_group_create();
    dispatch_group_enter(v8);
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v17 = 0x2020000000;
    v18 = 1;
    objc_msgSend(MEMORY[0x1E0DC7958], "standardClient");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __isNameValidWithVoiceShortcut_block_invoke;
    v13[3] = &unk_1E89B0AD8;
    p_buf = &buf;
    v10 = v8;
    v14 = v10;
    objc_msgSend(v9, "getVoiceShortcutWithPhrase:completion:", v1, v13);

    v11 = dispatch_time(0, 5000000000);
    dispatch_group_wait(v10, v11);
    v7 = *(_BYTE *)(*((_QWORD *)&buf + 1) + 24) != 0;

    _Block_object_dispose(&buf, 8);
  }

  return v7;
}

void sub_1CD5F9044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __isNameValidWithVoiceShortcut_block_invoke(uint64_t a1, uint64_t a2)
{
  if (a2)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

HMDCUWiFiDeviceWrapper *__wrapCUWiFiDevice(void *a1, void *a2)
{
  id v3;
  _QWORD *v4;
  HMDCUWiFiDeviceWrapper *v5;
  uint64_t v6;
  HMDCUWiFiDeviceWrapper *v7;

  v3 = a2;
  v4 = a1;
  v5 = [HMDCUWiFiDeviceWrapper alloc];
  v6 = v4[1];

  v7 = -[HMDCUWiFiDeviceWrapper initWithCUWiFiDevice:dispatchQueue:](v5, "initWithCUWiFiDevice:dispatchQueue:", v3, v6);
  return v7;
}

void sub_1CD5F9B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__90272(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__90273(uint64_t a1)
{

}

void sub_1CD5FAC60(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  id *v5;
  uint64_t v6;

  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 152));
  _Unwind_Resume(a1);
}

void ____start_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  id v16;
  _QWORD block[4];
  id v18;
  id v19;
  id v20;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = (void *)MEMORY[0x1D17BA0A0]();
    v6 = WeakRetained;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v22 = v8;
      v23 = 2112;
      v24 = v3;
      _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Found device %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(v6, "delegate");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      __wrapCUWiFiDevice(v6, v3);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = (void *)MEMORY[0x1D17BA0A0]();
      v12 = v6;
      HMFGetOSLogHandle();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v22 = v14;
        v23 = 2112;
        v24 = v10;
        _os_log_impl(&dword_1CD062000, v13, OS_LOG_TYPE_INFO, "%{public}@Device %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v11);
      objc_msgSend(v12, "delegateQueue");
      v15 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_137;
      block[3] = &unk_1E89C20C8;
      v18 = v9;
      v19 = v12;
      v20 = v10;
      v16 = v10;
      dispatch_async(v15, block);

    }
  }

}

void ____start_block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  id v14;
  _QWORD block[4];
  id v16;
  id v17;
  id v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = (void *)MEMORY[0x1D17BA0A0]();
    v6 = WeakRetained;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "ssid");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "identifier");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v20 = v8;
      v21 = 2112;
      v22 = v9;
      v23 = 2112;
      v24 = v10;
      _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Lost device %@: (%@)", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(v6, "delegate");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      __wrapCUWiFiDevice(v6, v3);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "delegateQueue");
      v13 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_139;
      block[3] = &unk_1E89C20C8;
      v16 = v11;
      v17 = v6;
      v18 = v12;
      v14 = v12;
      dispatch_async(v13, block);

    }
  }

}

void ____start_block_invoke_2_140(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  id v9;
  _QWORD block[4];
  id v11;
  id v12;
  id v13;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "delegate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      __wrapCUWiFiDevice(v5, v3);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "delegateQueue");
      v8 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_3;
      block[3] = &unk_1E89C20C8;
      v11 = v6;
      v12 = v5;
      v13 = v7;
      v9 = v7;
      dispatch_async(v8, block);

    }
  }

}

void ____start_block_invoke_4(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  _QWORD block[4];
  id v12;
  id *v13;
  id v14;
  uint8_t buf[4];
  void *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = (void *)MEMORY[0x1D17BA0A0]();
    v6 = (id *)WeakRetained;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v16 = v8;
      v17 = 2112;
      v18 = v3;
      _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_ERROR, "%{public}@Error %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(v6, "delegate");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      objc_msgSend(v6, "delegateQueue");
      v10 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_142;
      block[3] = &unk_1E89C20C8;
      v12 = v9;
      v13 = v6;
      v14 = v3;
      dispatch_async(v10, block);

    }
    objc_msgSend(v6[2], "invalidate");

  }
}

void ____start_block_invoke_2_144(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  _QWORD *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  _QWORD v9[4];
  id v10;
  id v11;
  uint8_t buf[4];
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = (void *)MEMORY[0x1D17BA0A0]();
    v3 = WeakRetained;
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v13 = v5;
      _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_INFO, "%{public}@CUWiFiScanner invalidated", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v2);
    v6 = (void *)v3[2];
    v3[2] = 0;

  }
  objc_msgSend(WeakRetained, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    objc_msgSend(WeakRetained, "delegateQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = ____start_block_invoke_145;
    v9[3] = &unk_1E89C2328;
    v10 = v7;
    v11 = WeakRetained;
    dispatch_async(v8, v9);

  }
}

uint64_t ____start_block_invoke_145(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scannerDidStop:", *(_QWORD *)(a1 + 40));
}

uint64_t ____start_block_invoke_142(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scanner:didError:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t ____start_block_invoke_3(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scanner:didUpdateDevice:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t ____start_block_invoke_139(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scanner:didRemoveDevice:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t ____start_block_invoke_137(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scanner:didAddDevice:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1CD5FBB4C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5FBBCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5FBD84(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5FD6EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5FD81C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5FD8FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5FDA7C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD5FF3F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&HMDDatabaseSharedInstanceLock);
  _Unwind_Resume(a1);
}

void sub_1CD5FF68C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&HMDDatabaseSharedInstanceLock);
  _Unwind_Resume(a1);
}

void sub_1CD6043E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD60DAFC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD60DDDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD60EE88(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD60F674(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1CD60FDB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD61016C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1CD6108AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD610A0C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1CD611508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD611754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD611A4C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD612040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD612678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *a13, id *location)
{
  uint64_t v14;

  objc_destroyWeak(location);
  objc_destroyWeak(a13);
  objc_destroyWeak((id *)(v14 - 184));
  _Unwind_Resume(a1);
}

void sub_1CD61457C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1CD6180AC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD61812C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD61883C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD618AF4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD6191B4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD6192FC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD6199D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __bootstrapSupportedStereoPairVersions(void *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  BOOL v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  id v21;
  NSObject *v22;
  void *v23;
  uint8_t buf[16];
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "identifier");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  v3 = (id)_mediaRouteIdentifier;
  if ((objc_msgSend(v2, "isEqual:", v3) & 1) == 0)
  {
    v4 = objc_msgSend(v1, "supportedStereoPairVersions");

    if (v4)
      goto LABEL_5;
    objc_msgSend(v1, "softwareVersion");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5;
    if (v5)
    {
      v2 = v5;
    }
    else
    {
      objc_msgSend(v1, "device");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "productInfo");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "softwareVersion");
      v2 = (id)objc_claimAutoreleasedReturnValue();

    }
    if ((objc_msgSend(v1, "isHomePod") & 1) != 0)
    {
      v9 = 0;
      if (!v2)
      {
LABEL_13:
        *(_OWORD *)buf = *MEMORY[0x1E0D280A0];
        v25 = *(_QWORD *)(MEMORY[0x1E0D280A0] + 16);
        v12 = HMFOperatingSystemVersionCompare();
        if (v2)
          objc_msgSend(v2, "operatingSystemVersion");
        *(_OWORD *)buf = *MEMORY[0x1E0D28198];
        v25 = *(_QWORD *)(MEMORY[0x1E0D28198] + 16);
        v13 = HMFOperatingSystemVersionCompare();
        v19 = v12 != 1 || v9;
        if ((v19 & 1) == 0 && v13 != 1)
        {
          v20 = (void *)MEMORY[0x1D17BA0A0](v13, v14, v15, v16, v17, v18);
          v21 = v1;
          HMFGetOSLogHandle();
          v22 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            HMFGetLogIdentifier();
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            *(_QWORD *)&buf[4] = v23;
            _os_log_impl(&dword_1CD062000, v22, OS_LOG_TYPE_INFO, "%{public}@Bootstrapping stereo pair version to V1", buf, 0xCu);

          }
          objc_autoreleasePoolPop(v20);
          objc_msgSend(v21, "setSupportedStereoPairVersions:", 1);
        }
        goto LABEL_3;
      }
    }
    else
    {
      objc_msgSend(v1, "device");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "productInfo");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v11, "productClass") != 6;

      if (!v2)
        goto LABEL_13;
    }
    objc_msgSend(v2, "operatingSystemVersion");
    goto LABEL_13;
  }

LABEL_3:
LABEL_5:

}

void __HMDAppleMediaAccessoryHandleUpdatedDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void (**v12)(void);
  void *v13;
  int v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = v3;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 138543618;
    v18 = v8;
    v19 = 2112;
    v20 = v4;
    _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@Device updated to: %@", (uint8_t *)&v17, 0x16u);

  }
  objc_autoreleasePoolPop(v5);
  objc_msgSend(v6, "notificationCenter");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "removeObserver:name:object:", v6, CFSTR("HMDDeviceUpdatedNotification"), 0);

  if (v4)
  {
    objc_msgSend(v6, "startMonitoringReachability");
    objc_msgSend(v6, "symptomsHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleAccessoryDeviceUpdated");

    objc_msgSend(v6, "identifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "deviceMediaRouteIdentifierFactory");
    v12 = (void (**)(void))objc_claimAutoreleasedReturnValue();
    v12[2]();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v11, "isEqual:", v13);

    if (v14)
    {
      objc_msgSend(v6, "notificationCenter");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "addObserver:selector:name:object:", v6, sel_handleCurrentDeviceUpdated_, CFSTR("HMDDeviceUpdatedNotification"), v4);

      if (objc_msgSend(v6, "shouldUpdateWithDevice:initialConfiguration:", v4, 0))
        objc_msgSend(v6, "updateWithDevice:", v4);
    }
    __bootstrapSupportedStereoPairVersions(v6);
    objc_msgSend(v6, "notificationCenter");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "postNotificationName:object:", CFSTR("HMDAppleMediaAccessoryDeviceUpdatedNotification"), v6);

  }
  objc_msgSend(v6, "registerForPublishingNotifications");

}

uint64_t __Block_byref_object_copy__92037(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__92038(uint64_t a1)
{

}

id __HMDAppleMediaAccessoryGetDeviceController(void *a1)
{
  id *v1;
  id v2;

  v1 = a1;
  os_unfair_recursive_lock_lock_with_options();
  v2 = v1[61];
  os_unfair_recursive_lock_unlock();

  return v2;
}

uint64_t ____transactionAccessoryUpdated_block_invoke_92051(uint64_t result, int a2)
{
  if (a2)
    return objc_msgSend(*(id *)(result + 32), "markChanged");
  return result;
}

id getMCProfileConnectionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMCProfileConnectionClass_softClass;
  v7 = getMCProfileConnectionClass_softClass;
  if (!getMCProfileConnectionClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getMCProfileConnectionClass_block_invoke;
    v3[3] = &unk_1E89BCDA8;
    v3[4] = &v4;
    __getMCProfileConnectionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1CD61E1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getMCProfileConnectionClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
  {
    ManagedConfigurationLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!ManagedConfigurationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("MCProfileConnection");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)abort_report_np();
    free(v3);
  }
  getMCProfileConnectionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id addressesFromWANRule(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "subject");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "hostnames");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    objc_msgSend(v1, "hostnames");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(v1, "addresses");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    if (v4)
    {
      objc_msgSend(v1, "addresses");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "na_map:", &__block_literal_global_65);
      v6 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v1, "addressRange");
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v7)
      {
        v3 = (void *)MEMORY[0x1E0C9AA60];
        goto LABEL_8;
      }
      v8 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(v1, "addressRange");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "addressStart");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "addressString");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "addressRange");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "addressEnd");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "addressString");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "stringWithFormat:", CFSTR("%@ - %@"), v11, v14);
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      v16[0] = v5;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 1);
      v6 = objc_claimAutoreleasedReturnValue();
    }
    v3 = (void *)v6;

  }
LABEL_8:

  return v3;
}

uint64_t __addressesFromWANRule_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "addressString");
}

id wanRuleFromJSONRule(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  const char *v13;
  id v15;
  uint8_t buf[4];
  void *v17;
  __int16 v18;
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)MEMORY[0x1E0CB36D8];
  objc_msgSend(v1, "dataUsingEncoding:", 4);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0;
  objc_msgSend(v2, "JSONObjectWithData:options:error:", v3, 0, &v15);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v15;

  v6 = v4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v7 = v6;
  else
    v7 = 0;
  v8 = v7;

  if (!v8)
  {
    v10 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v17 = v12;
      v18 = 2112;
      v19 = v1;
      v13 = "%{public}@Failed to convert JSON string %@ to dictionary";
      goto LABEL_10;
    }
LABEL_11:

    objc_autoreleasePoolPop(v10);
    v9 = 0;
    goto LABEL_12;
  }
  +[HMDNetworkRouterFirewallRuleWAN createWithJSONDictionary:error:](HMDNetworkRouterFirewallRuleWAN, "createWithJSONDictionary:error:", v8, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v9)
  {
    v10 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v17 = v12;
      v18 = 2112;
      v19 = v8;
      v13 = "%{public}@Failed to convert dictionary %@ to HMDNetworkRouterFirewallRuleWAN";
LABEL_10:
      _os_log_impl(&dword_1CD062000, v11, OS_LOG_TYPE_ERROR, v13, buf, 0x16u);

      goto LABEL_11;
    }
    goto LABEL_11;
  }
LABEL_12:

  return v9;
}

__CFString *HMDCameraRemoteStreamSessionStateAsString(uint64_t a1)
{
  uint64_t v2;
  __CFString *v3;

  v2 = a1 - 1;
  v3 = CFSTR("Unknown");
  switch(v2)
  {
    case 0:
      return v3;
    case 1:
      v3 = CFSTR("START-STREAM-SENT");
      return v3;
    case 2:
    case 4:
    case 5:
    case 6:
      goto LABEL_7;
    case 3:
      return CFSTR("STREAM-NEGOTIATED");
    case 7:
      return CFSTR("IDS-SESSION-CREATED");
    default:
      if (a1 == 16)
        return CFSTR("STREAMING-STARTED-ON-DEVICE");
LABEL_7:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDCameraRemoteStreamSessionState %tu"), a1);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
      return v3;
  }
}

void sub_1CD624A80(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD625C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__92963(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__92964(uint64_t a1)
{

}

void sub_1CD627E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD628584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 184), 8);
  _Unwind_Resume(a1);
}

void addFallbackLANRules(_BYTE *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = a3;
  if (objc_msgSend(v5, "hasFullAccessToLAN"))
  {
    *a1 = 1;
  }
  else
  {
    objc_msgSend(v5, "lanRules");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "count");

    if (v7)
    {
      objc_msgSend(v5, "lanRules");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "addObjectsFromArray:", v8);

    }
  }

}

void sub_1CD62C584(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD62CAA0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD62D238(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD62E58C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD62E6B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD62E734(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD62EA60(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD62EDE4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD62F268(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD631208(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1CD6325B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD632998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD632D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD633158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6332D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD633364(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6367E4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD63684C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6368C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD63693C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6369B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD636A2C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD636AF8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD636B7C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD637D8C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD637EF4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6381A8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6382F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638388(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638538(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638B1C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638BD8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638C40(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638CA8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638D10(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638D78(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638DF0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638E88(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD638FB8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD639068(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD639230(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD639350(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD639400(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6395D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD639660(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6396F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD639794(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD63982C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6398C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD639A34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD639AD4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD639BD4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD63A0E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD63A6F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD63CDE0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD63D138(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD63D1B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD63D20C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD642804(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6429AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD642B18(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD642BB8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD642DF0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDDeviceControllerUpdateDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = (void *)MEMORY[0x1D17BA0A0]();
    v6 = v3;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543618;
      v15 = v8;
      v16 = 2112;
      v17 = v4;
      _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Updating device: %@", (uint8_t *)&v14, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    os_unfair_lock_lock_with_options();
    if (*((id *)v6 + 3) == v4)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)v6 + 2);
    }
    else
    {
      objc_storeStrong((id *)v6 + 3, a2);
      os_unfair_lock_unlock((os_unfair_lock_t)v6 + 2);
      v9 = (void *)MEMORY[0x1D17BA0A0]();
      v10 = v6;
      HMFGetOSLogHandle();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = 138543618;
        v15 = v12;
        v16 = 2112;
        v17 = v4;
        _os_log_impl(&dword_1CD062000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@Updated device: %@", (uint8_t *)&v14, 0x16u);

      }
      objc_autoreleasePoolPop(v9);
      objc_msgSend(v10, "delegate");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v13, "deviceController:didUpdateDevice:", v10, v4);

    }
  }

}

__CFString *HMDNetworkRouterControlOperationStatusTypeAsString(unint64_t a1)
{
  if (a1 < 0xC)
    return off_1E89B1C10[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDNetworkRouterControlOperationStatusType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1CD64CFF4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD64E420(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD652C08(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD652DC0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD652FE8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD65331C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD65356C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD654584(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD654CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id location)
{
  id *v37;

  objc_destroyWeak(v37);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD654F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD658AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitValueReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  void *v41;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 40;
          goto LABEL_43;
        case 2u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 52) |= 2u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if (v27 < 0)
              {
                v21 += 7;
                v15 = v22++ >= 9;
                if (v15)
                {
                  v23 = 0;
                  goto LABEL_47;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v23 = 0;
LABEL_47:
          *(_QWORD *)(a1 + 16) = v23;
          continue;
        case 3u:
          *(_BYTE *)(a1 + 52) |= 4u;
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(_QWORD *)(a2 + *v4))
          {
            v30 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v30 = 0;
          }
          *(_DWORD *)(a1 + 32) = v30;
          continue;
        case 4u:
          *(_BYTE *)(a1 + 52) |= 1u;
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v33 = 0;
          }
          *(_QWORD *)(a1 + 8) = v33;
          continue;
        case 5u:
          v34 = 0;
          v35 = 0;
          v36 = 0;
          *(_BYTE *)(a1 + 52) |= 8u;
          break;
        case 6u:
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 24;
LABEL_43:
          v41 = *(void **)(a1 + v19);
          *(_QWORD *)(a1 + v19) = v18;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        v39 = v38 + 1;
        if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
          break;
        v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v39;
        v36 |= (unint64_t)(v40 & 0x7F) << v34;
        if ((v40 & 0x80) == 0)
          goto LABEL_49;
        v34 += 7;
        v15 = v35++ >= 9;
        if (v15)
        {
          v36 = 0;
          goto LABEL_51;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
      if (*(_BYTE *)(a2 + *v5))
        v36 = 0;
LABEL_51:
      *(_BYTE *)(a1 + 48) = v36 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

__CFString *HMDVideoCodecTypeAsString(uint64_t a1)
{
  if (!a1)
    return CFSTR("HMDVideoCodecTypeH264");
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDVideoCodecType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDH264ProfileTypeAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_1E89B20A0[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDH264ProfileType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDH264LevelTypeAsString(unint64_t a1)
{
  if (a1 < 4)
    return off_1E89B20B8[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDH264LevelType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDPacketizationModeTypeAsString(uint64_t a1)
{
  if (!a1)
    return CFSTR("HMDPacketizationModeTypeSingleNonInterleaved");
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDPacketizationModeType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDAudioCodecGroupTypeAsString(unint64_t a1)
{
  if (a1 < 7)
    return off_1E89B21C0[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDAudioCodecGroupType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDBitRateSettingTypeAsString(uint64_t a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("HMDBitRateSettingTypeVariable");
  if (a1 == 1)
  {
    v1 = CFSTR("HMDBitRateSettingTypeConstant");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDBitRateSettingType %tu"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

__CFString *HMDAudioSampleRateTypeAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_1E89B21F8[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDAudioSampleRateType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDSRTPCryptoSuiteTypeAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_1E89B2210[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDSRTPCryptoSuiteType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDStreamControlPointResponseStatusAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_1E89B2250[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDSessionControlCommand %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDStreamingStatusTypeAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_1E89B2268[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDStreamingStatusType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1CD660F50(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD661D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD663028(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6632A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6632FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD663474(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD663640(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD663850(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD663A50(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD663CD4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD663D80(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD663E24(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD663FC4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD66407C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD664168(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void notifyMatterMetricPairingStep(void *a1, unint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = (void *)MEMORY[0x1D17BA0A0]();
  v5 = v3;
  HMFGetOSLogHandle();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    HMDMatterAccessoryPairingStepAsString(a2);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138543618;
    v14 = v7;
    v15 = 2112;
    v16 = v8;
    _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_INFO, "%{public}@Notifying matter metric pairing step %@", (uint8_t *)&v13, 0x16u);

  }
  objc_autoreleasePoolPop(v4);
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setObject:forKeyedSubscript:", v10, CFSTR("HMDMatterAccessoryPairingStepKey"));

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v9, "copy");
  objc_msgSend(v11, "postNotificationName:object:userInfo:", CFSTR("HMDMatterAccessoryUpdatePairingMetricNotification"), 0, v12);

}

void notifyMatterMetricPairingEnded(void *a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint8_t buf[4];
  void *v19;
  __int16 v20;
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB37D0];
  v4 = a2;
  v5 = a1;
  objc_msgSend(v3, "defaultCenter");
  v17 = (id)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  v7 = v4;
  v8 = (void *)MEMORY[0x1D17BA0A0]();
  v9 = v6;
  HMFGetOSLogHandle();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v19 = v11;
    v20 = 2112;
    v21 = v7;
    _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_INFO, "%{public}@Notifying matter metric pairing ended %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v8);
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], CFSTR("HMDMatterAccessoryPairingSubmitKey"));
  objc_msgSend(v7, "step");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setObject:forKeyedSubscript:", v13, CFSTR("HMDMatterAccessoryPairingStepKey"));

  objc_msgSend(v7, "error");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setObject:forKeyedSubscript:", v14, CFSTR("HMDMatterAccessoryPairingFailureErrorKey"));

  objc_msgSend(v7, "sourceErrorDomain");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setObject:forKeyedSubscript:", v15, CFSTR("HMDMatterAccessoryPairingSourceErrorDomain"));

  v16 = (void *)objc_msgSend(v12, "copy");
  objc_msgSend(v17, "postNotificationName:object:userInfo:", CFSTR("HMDMatterAccessoryUpdatePairingMetricNotification"), 0, v16);

}

void sub_1CD664F88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD665268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD667BC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD669D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a14);
  _Unwind_Resume(a1);
}

void sub_1CD66B808(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDDefaultRoomName()
{
  __CFString *v0;
  __CFString *v1;
  __CFString *v2;

  HMDLocalizedStringForKey(CFSTR("DEFAULT_ROOM"));
  v0 = (__CFString *)objc_claimAutoreleasedReturnValue();
  v1 = v0;
  if (!v0)
    v0 = CFSTR("Default Room");
  v2 = v0;

  return v2;
}

void sub_1CD66EC8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD66FBFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6717EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD671A88(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD671B34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6721A8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_1CD672660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location,uint64_t a28,char a29)
{
  id *v29;
  id *v30;

  objc_destroyWeak(v29);
  objc_destroyWeak(v30);
  _Block_object_dispose(&a29, 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__100854(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__100855(uint64_t a1)
{

}

void sub_1CD672964(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  uint64_t v5;

  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 104));
  _Unwind_Resume(a1);
}

void sub_1CD673728(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6737C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD67384C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD673988(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6742C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6743F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD674530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD674668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6754D8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t _validateClientRequest(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  char isKindOfClass;
  void *v18;
  id v19;
  uint64_t v20;
  id v22;

  v3 = a1;
  objc_msgSend(v3, "headerFields");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "hmf_stringForKey:", CFSTR("Protocol-Version"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    v6 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0D286E0]), "initWithVersionString:", v5);
    if (v6)
    {
      +[HMDHTTPServerMessageTransport maximumSupportedProtocolVersion](HMDHTTPServerMessageTransport, "maximumSupportedProtocolVersion");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_msgSend(v6, "isAtLeastVersion:", v7);

      if (v8)
      {
        if (a2)
        {
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("The client's protocol version, %@, is not supported"), v6);
LABEL_22:
          *a2 = (id)objc_claimAutoreleasedReturnValue();
          goto LABEL_23;
        }
        goto LABEL_23;
      }
    }

  }
  objc_msgSend(v3, "headerFields");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "hmf_UUIDForKey:", CFSTR("Client-Identifier"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    objc_msgSend(v3, "body");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "length");

    if (v12)
    {
      v13 = (void *)MEMORY[0x1E0CB38B0];
      objc_msgSend(v3, "body");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = 0;
      objc_msgSend(v13, "propertyListWithData:options:format:error:", v14, 0, 0, &v22);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v22;

      if (!v15)
      {
        if (a2)
        {
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Failed to deserialize message payload with error: %@"), v6);
          goto LABEL_22;
        }
LABEL_23:

        goto LABEL_24;
      }
      v16 = v15;
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      if ((isKindOfClass & 1) != 0)
        v18 = v16;
      else
        v18 = 0;
      v19 = v18;

      if (a2 && (isKindOfClass & 1) == 0)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Invalid message class type: %@"), objc_opt_class());
        *a2 = (id)objc_claimAutoreleasedReturnValue();
      }

      if ((isKindOfClass & 1) == 0)
        goto LABEL_24;
    }
    v20 = 1;
  }
  else
  {
    if (!a2)
    {
LABEL_24:
      v20 = 0;
      goto LABEL_25;
    }
    v20 = 0;
    *a2 = CFSTR("Missing the client identifier from the request");
  }
LABEL_25:

  return v20;
}

void sub_1CD676268(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6779E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD679D3C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD679E8C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __handleUpdatedDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = v3;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = 138543618;
    v11 = v8;
    v12 = 2112;
    v13 = v4;
    _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_INFO, "%{public}@Device updated to: %@", (uint8_t *)&v10, 0x16u);

  }
  objc_autoreleasePoolPop(v5);
  if (v4)
  {
    __registerForDeviceNotifications(v6, v4);
    objc_msgSend(v6, "residentDeviceManager");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "notifyClientsOfUpdatedResidentDevice:", v6);

  }
  else
  {
    __deregisterForDeviceNotifications(v6);
  }

}

void __registerForDeviceNotifications(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    v6 = (void *)MEMORY[0x1D17BA0A0]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "shortDescription");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543618;
      v13 = v9;
      v14 = 2112;
      v15 = v10;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Registering for device notifications for: %@", (uint8_t *)&v12, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    __deregisterForDeviceNotifications(v7);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addObserver:selector:name:object:", v7, sel___deviceUpdated_, CFSTR("HMDDeviceUpdatedNotification"), v5);

  }
}

void __deregisterForDeviceNotifications(void *a1)
{
  id v1;
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x1D17BA0A0]();
    v3 = v1;
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = 138543362;
      v8 = v5;
      _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_DEBUG, "%{public}@Deregistering for device notifications", (uint8_t *)&v7, 0xCu);

    }
    objc_autoreleasePoolPop(v2);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "removeObserver:name:object:", v3, CFSTR("HMDDeviceUpdatedNotification"), 0);

  }
}

uint64_t residentCapabilitiesForDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  HMDHomeKitVersion *v6;
  int v7;
  uint64_t v8;
  void *v9;
  HMDHomeKitVersion *v10;
  int v11;
  uint64_t v12;
  void *v13;
  HMDHomeKitVersion *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  v3 = a2;
  v4 = a1;
  objc_msgSend(v3, "version");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[HMDHomeKitVersion initWithVersionString:]([HMDHomeKitVersion alloc], "initWithVersionString:", CFSTR("3.0"));
  v7 = objc_msgSend(v5, "isAtLeastVersion:", v6);

  if (v7)
    v8 = 7;
  else
    v8 = 0;
  objc_msgSend(v3, "version");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = -[HMDHomeKitVersion initWithVersionString:]([HMDHomeKitVersion alloc], "initWithVersionString:", CFSTR("4.0"));
  v11 = objc_msgSend(v9, "isAtLeastVersion:", v10);

  if (v11)
    v12 = v8 | 8;
  else
    v12 = v8;
  objc_msgSend(v3, "version");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = -[HMDHomeKitVersion initWithVersionString:]([HMDHomeKitVersion alloc], "initWithVersionString:", CFSTR("4.3"));
  v15 = objc_msgSend(v13, "isAtLeastVersion:", v14);

  if (v15)
    v16 = v12 | 0x10;
  else
    v16 = v12;
  if (objc_msgSend(v4, "supportsMediaActions"))
    v16 |= 0x220uLL;
  if (objc_msgSend(v4, "supportsShortcutActions"))
    v16 |= 0x100uLL;
  if (objc_msgSend(v4, "supportsCameraRecording"))
    v16 |= 0x40uLL;
  if (objc_msgSend(v4, "supportsRouterManagement"))
    v16 |= 0x80uLL;
  if (objc_msgSend(v4, "supportsFirmwareUpdate"))
    v16 |= 0x800uLL;
  if (objc_msgSend(v4, "supportsResidentFirmwareUpdate"))
    v16 |= 0x800000uLL;
  if (objc_msgSend(v4, "supportsCameraActivityZones"))
    v16 |= 0x1000uLL;
  if (objc_msgSend(v4, "supportsFaceClassification"))
    v16 |= 0x2000uLL;
  if (objc_msgSend(v4, "supportsNaturalLighting"))
    v16 |= 0x4000uLL;
  if (objc_msgSend(v4, "supportsAnnounce"))
    v16 |= 0x8000uLL;
  if (objc_msgSend(v4, "supportsThreadBorderRouter"))
    v16 |= 0x10000uLL;
  if (objc_msgSend(v4, "supportsCameraRecordingReachabilityNotifications"))
    v16 |= 0x20000uLL;
  if (objc_msgSend(v4, "supportsWalletKey"))
    v16 |= 0x40000uLL;
  if (objc_msgSend(v4, "supportsAccessCodes"))
    v16 |= 0x200000uLL;
  if (objc_msgSend(v4, "supportsLockNotificationContext"))
    v16 |= 0x80000uLL;
  if (objc_msgSend(v4, "supportsCameraPackageDetection"))
    v16 |= 0x100000uLL;
  if (objc_msgSend(v4, "supportsCHIP"))
    v16 |= 0x400000uLL;
  if (objc_msgSend(v4, "supportsCustomMediaApplicationDestination"))
    v16 |= 0x1000000uLL;
  if (objc_msgSend(v4, "supportsThreadNetworkCredentialSharing"))
    v16 |= 0x2000000uLL;
  if (objc_msgSend(v4, "supportsMatterSharedAdminPairing"))
    v16 |= 0x4000000uLL;
  if (objc_msgSend(v4, "supportsEventLog"))
    v16 |= 0x8000000uLL;
  if (objc_msgSend(v4, "supportsUWB"))
    v16 |= 0x20000000uLL;
  if (objc_msgSend(v4, "supportsMatterTTU"))
    v16 |= 0x10000000uLL;
  if (objc_msgSend(v4, "supportsRestrictedGuest"))
    v17 = v16 | 0x40000000;
  else
    v17 = v16;
  v18 = objc_msgSend(v4, "supportsMatterOwnerCertFetch");

  if (v18)
    return v17 | 0x80000000;
  else
    return v17;
}

void sub_1CD67C888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  __HMFActivityScopeLeave();
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD67D8EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD67D948(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD67D9CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD67FFC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD68009C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD6803B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD682204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location)
{
  uint64_t v15;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v15 - 160));
  _Unwind_Resume(a1);
}

void sub_1CD6831CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id a41)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a41);
  _Unwind_Resume(a1);
}

void sub_1CD689CC0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id uuidSetFromArrayOfStrings(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v7);
        v9 = objc_alloc(MEMORY[0x1E0CB3A28]);
        v10 = (void *)objc_msgSend(v9, "initWithUUIDString:", v8, (_QWORD)v12);
        objc_msgSend(v2, "addObject:", v10);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v5);
  }

  return v2;
}

void sub_1CD69126C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1CD691AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1CD692744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__103594(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__103595(uint64_t a1)
{

}

void sub_1CD6969B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD696B54(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD698B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD698D70(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD6990A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6A1F9C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6A218C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6A2200(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6A235C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6A254C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6A269C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6A2CBC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6A4B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD6A4C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__105376(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__105377(uint64_t a1)
{

}

void __registerXPCRelayForMessageClass(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[4];
  id v9[2];
  id location;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  objc_initWeak(&location, v3);
  objc_msgSend(v3, "msgDispatcher");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a2, "xpcMessageName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[HMDXPCMessagePolicy policyWithEntitlements:](HMDXPCMessagePolicy, "policyWithEntitlements:", 5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v11, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = ____registerXPCRelayForMessageClass_block_invoke;
  v8[3] = &unk_1E89B2E38;
  objc_copyWeak(v9, &location);
  v9[1] = a2;
  objc_msgSend(v4, "registerForMessage:receiver:policies:messageHandler:", v5, v3, v7, v8);

  objc_destroyWeak(v9);
  objc_destroyWeak(&location);

}

void sub_1CD6A6E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____registerXPCRelayForMessageClass_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "remoteMessageSender");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "messageName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "messagePayload");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = ____registerXPCRelayForMessageClass_block_invoke_2;
  v9[3] = &unk_1E89C0E20;
  v10 = v3;
  v8 = v3;
  objc_msgSend(v5, "sendRemoteMessageWithName:payload:responseHandler:", v6, v7, v9);

}

void ____registerXPCRelayForMessageClass_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  id v8;

  v8 = a2;
  v5 = a3;
  objc_msgSend(*(id *)(a1 + 32), "responseHandler");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "responseHandler");
    v7 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, id, id))v7)[2](v7, v8, v5);

  }
}

void sub_1CD6A7890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6A79E0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD6A7A5C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD6A83AC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void __updateAccount(void *a1, int a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  int v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  void *v18;
  uint64_t updated;
  void *v20;
  id v21;
  NSObject *v22;
  void *v23;
  void *v24;
  id v25;
  NSObject *v26;
  _BOOL4 v27;
  void *v28;
  const char *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t i;
  void *v44;
  void *v45;
  id v46;
  NSObject *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t j;
  void *v59;
  void *v60;
  void *v61;
  HMDAccountHandleModel *v62;
  void *v63;
  void *v64;
  HMDAccountHandleModel *v65;
  void *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t k;
  void *v74;
  void *v75;
  id v76;
  NSObject *v77;
  void *v78;
  void *v79;
  void *v80;
  id v81;
  NSObject *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  id v87;
  NSObject *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  int v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _QWORD v104[5];
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  _BYTE v113[128];
  uint8_t v114[128];
  uint8_t buf[4];
  void *v116;
  __int16 v117;
  void *v118;
  _BYTE v119[128];
  uint64_t v120;

  v120 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "accountChangeBackoffTimer");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "suspend");

    v6 = (void *)MEMORY[0x1D17BA0A0]();
    v7 = v4;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v116 = v9;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_INFO, "%{public}@Updating account", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(v7, "account");
    v98 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v98)
    {
      v20 = (void *)MEMORY[0x1D17BA0A0]();
      v21 = v7;
      HMFGetOSLogHandle();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v116 = v23;
        _os_log_impl(&dword_1CD062000, v22, OS_LOG_TYPE_INFO, "%{public}@Failed to update account, there is no account", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v20);
      goto LABEL_67;
    }
    objc_msgSend(MEMORY[0x1E0D286B8], "systemInfo");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "isMigrating");

    v97 = v7;
    objc_msgSend(v7, "service");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "hmd_isActive");

    if ((v11 & 1) == 0 && v13)
    {
      __createAccountHandles(v7);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v14, "hmf_isEmpty"))
      {
        v15 = (void *)MEMORY[0x1D17BA0A0]();
        v16 = v97;
        HMFGetOSLogHandle();
        v17 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v116 = v18;
          _os_log_impl(&dword_1CD062000, v17, OS_LOG_TYPE_INFO, "%{public}@Failed to create handles", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v15);
        updated = __updateCurrentDevice(v16, v98);
      }
      else
      {
        v93 = a2;
        v94 = v4;
        +[HMDBackingStoreTransactionOptions optionsWithSource:destination:mustReplay:mustPush:](HMDBackingStoreTransactionOptions, "optionsWithSource:destination:mustReplay:mustPush:", 0, 2, 0, 0);
        v31 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "backingStore");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        v92 = (void *)v31;
        objc_msgSend(v32, "transaction:options:", CFSTR("Update Handles"), v31);
        v91 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v99 = (void *)objc_claimAutoreleasedReturnValue();
        v33 = (void *)MEMORY[0x1E0C99E60];
        objc_msgSend(v7, "account");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v34, "handles");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "setWithArray:", v35);
        v36 = (void *)objc_claimAutoreleasedReturnValue();

        v111 = 0u;
        v112 = 0u;
        v109 = 0u;
        v110 = 0u;
        v96 = v14;
        objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v14);
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        v95 = v36;
        objc_msgSend(v36, "hmf_addedObjectsFromSet:", v37);
        v38 = (void *)objc_claimAutoreleasedReturnValue();

        v39 = objc_msgSend(v38, "countByEnumeratingWithState:objects:count:", &v109, v119, 16);
        if (v39)
        {
          v40 = v39;
          v41 = v97;
          v42 = *(_QWORD *)v110;
          do
          {
            for (i = 0; i != v40; ++i)
            {
              if (*(_QWORD *)v110 != v42)
                objc_enumerationMutation(v38);
              v44 = *(void **)(*((_QWORD *)&v109 + 1) + 8 * i);
              v45 = (void *)MEMORY[0x1D17BA0A0]();
              v46 = v41;
              HMFGetOSLogHandle();
              v47 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
              {
                HMFGetLogIdentifier();
                v48 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                v116 = v48;
                v117 = 2112;
                v118 = v44;
                _os_log_impl(&dword_1CD062000, v47, OS_LOG_TYPE_INFO, "%{public}@Adding handle: %@", buf, 0x16u);

                v41 = v97;
              }

              objc_autoreleasePoolPop(v45);
              objc_msgSend(v98, "modelIdentifier");
              v49 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v44, "setModelParentIdentifier:", v49);

              objc_msgSend(v44, "modelObjectWithChangeType:version:", 1, 4);
              v50 = (void *)objc_claimAutoreleasedReturnValue();
              if (v50)
                objc_msgSend(v99, "addObject:", v50);

            }
            v40 = objc_msgSend(v38, "countByEnumeratingWithState:objects:count:", &v109, v119, 16);
          }
          while (v40);
        }

        v107 = 0u;
        v108 = 0u;
        v105 = 0u;
        v106 = 0u;
        v51 = v96;
        objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v96);
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v95, "hmf_commonObjectsFromSet:", v52);
        v53 = (void *)objc_claimAutoreleasedReturnValue();

        v54 = objc_msgSend(v53, "countByEnumeratingWithState:objects:count:", &v105, v114, 16);
        if (v54)
        {
          v55 = v54;
          v56 = *(_QWORD *)v106;
          v57 = MEMORY[0x1E0C809B0];
          do
          {
            for (j = 0; j != v55; ++j)
            {
              if (*(_QWORD *)v106 != v56)
                objc_enumerationMutation(v53);
              v59 = *(void **)(*((_QWORD *)&v105 + 1) + 8 * j);
              v104[0] = v57;
              v104[1] = 3221225472;
              v104[2] = ____updateAccount_block_invoke;
              v104[3] = &unk_1E89B2F20;
              v104[4] = v59;
              objc_msgSend(v51, "hmf_objectPassingTest:", v104);
              v60 = (void *)objc_claimAutoreleasedReturnValue();
              if (v60
                && (objc_opt_respondsToSelector() & 1) != 0
                && (objc_msgSend(v59, "isBackingStorageEqual:", v60) & 1) == 0)
              {
                v61 = v53;
                v62 = [HMDAccountHandleModel alloc];
                objc_msgSend(v59, "modelIdentifier");
                v63 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v59, "modelParentIdentifier");
                v64 = (void *)objc_claimAutoreleasedReturnValue();
                v65 = -[HMDBackingStoreModelObject initWithObjectChangeType:uuid:parentUUID:](v62, "initWithObjectChangeType:uuid:parentUUID:", 2, v63, v64);

                objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(v60, "isLocal"));
                v66 = (void *)objc_claimAutoreleasedReturnValue();
                -[HMDAccountHandleModel setLocal:](v65, "setLocal:", v66);

                if (v65)
                  objc_msgSend(v99, "addObject:", v65);

                v53 = v61;
                v57 = MEMORY[0x1E0C809B0];
              }

              v51 = v96;
            }
            v55 = objc_msgSend(v53, "countByEnumeratingWithState:objects:count:", &v105, v114, 16);
          }
          while (v55);
        }

        v102 = 0u;
        v103 = 0u;
        v100 = 0u;
        v101 = 0u;
        objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v51);
        v67 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v95, "hmf_removedObjectsFromSet:", v67);
        v68 = (void *)objc_claimAutoreleasedReturnValue();

        v69 = objc_msgSend(v68, "countByEnumeratingWithState:objects:count:", &v100, v113, 16);
        v70 = v97;
        if (v69)
        {
          v71 = v69;
          v72 = *(_QWORD *)v101;
          do
          {
            for (k = 0; k != v71; ++k)
            {
              if (*(_QWORD *)v101 != v72)
                objc_enumerationMutation(v68);
              v74 = *(void **)(*((_QWORD *)&v100 + 1) + 8 * k);
              v75 = (void *)MEMORY[0x1D17BA0A0]();
              v76 = v70;
              HMFGetOSLogHandle();
              v77 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v77, OS_LOG_TYPE_INFO))
              {
                HMFGetLogIdentifier();
                v78 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                v116 = v78;
                v117 = 2112;
                v118 = v74;
                _os_log_impl(&dword_1CD062000, v77, OS_LOG_TYPE_INFO, "%{public}@Removing handle: %@", buf, 0x16u);

                v70 = v97;
              }

              objc_autoreleasePoolPop(v75);
              objc_msgSend(v74, "modelObjectWithChangeType:version:", 3, 4);
              v79 = (void *)objc_claimAutoreleasedReturnValue();
              if (v79)
                objc_msgSend(v99, "addObject:", v79);

            }
            v71 = objc_msgSend(v68, "countByEnumeratingWithState:objects:count:", &v100, v113, 16);
          }
          while (v71);
        }

        if ((objc_msgSend(v99, "hmf_isEmpty") & 1) == 0)
        {
          objc_msgSend(v91, "addObjects:", v99);
          objc_msgSend(v91, "run");
        }

        updated = __updateCurrentDevice(v70, v98);
        v4 = v94;
        v14 = v96;
        a2 = v93;
        if ((_DWORD)updated)
        {
          v80 = (void *)MEMORY[0x1D17BA0A0]();
          v81 = v97;
          HMFGetOSLogHandle();
          v82 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v82, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v83 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v116 = v83;
            _os_log_impl(&dword_1CD062000, v82, OS_LOG_TYPE_DEFAULT, "%{public}@Successfully updated account", buf, 0xCu);

          }
          objc_autoreleasePoolPop(v80);
          objc_msgSend(v81, "accountChangeBackoffTimer");
          v84 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v84, "reset");

          objc_msgSend(v81, "devicesChangeBackoffTimer");
          v85 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v85, "suspend");

          objc_msgSend(v81, "__updateMergeIDOnAccount");
          goto LABEL_66;
        }
      }
      if (a2)
      {
        v86 = (void *)MEMORY[0x1D17BA0A0](updated);
        v87 = v97;
        HMFGetOSLogHandle();
        v88 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v88, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v89 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v116 = v89;
          _os_log_impl(&dword_1CD062000, v88, OS_LOG_TYPE_INFO, "%{public}@Failed to update the account, will try again later", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v86);
        objc_msgSend(v87, "accountChangeBackoffTimer");
        v90 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v90, "resume");

      }
LABEL_66:

      goto LABEL_67;
    }
    v24 = (void *)MEMORY[0x1D17BA0A0]();
    v25 = v7;
    HMFGetOSLogHandle();
    v26 = objc_claimAutoreleasedReturnValue();
    v27 = os_log_type_enabled(v26, OS_LOG_TYPE_INFO);
    if (v11)
    {
      if (v27)
      {
        HMFGetLogIdentifier();
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v116 = v28;
        v29 = "%{public}@Skipping updating of account during migration, will try again later";
LABEL_19:
        _os_log_impl(&dword_1CD062000, v26, OS_LOG_TYPE_INFO, v29, buf, 0xCu);

      }
    }
    else if (v27)
    {
      HMFGetLogIdentifier();
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v116 = v28;
      v29 = "%{public}@Skipping updating of account while the service is inactive, will try again later";
      goto LABEL_19;
    }

    objc_autoreleasePoolPop(v24);
    objc_msgSend(v25, "accountChangeBackoffTimer");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "resume");

LABEL_67:
  }

}

void __updateDevices(void *a1, char a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  void *v28;
  void *v29;
  _QWORD *v30;
  NSObject *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t j;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  _QWORD *v41;
  NSObject *v42;
  void *v43;
  void *v44;
  int v45;
  void *v46;
  void *v47;
  int v48;
  void *v49;
  void *v50;
  _QWORD *v51;
  NSObject *v52;
  void *v53;
  void *v54;
  char v55;
  void *v56;
  void *v57;
  _QWORD *v58;
  NSObject *v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t k;
  void *v67;
  void *v68;
  _QWORD *v69;
  NSObject *v70;
  void *v71;
  int v72;
  void *v73;
  void *v74;
  NSObject *v75;
  char v76;
  uint64_t v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  NSObject *v84;
  void *v85;
  id v86;
  NSObject *v87;
  void *v88;
  void *v89;
  id v90;
  NSObject *v91;
  _BOOL4 v92;
  void *v93;
  const char *v94;
  void *v95;
  char v96;
  void *v97;
  void *v98;
  void *v99;
  id obj;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void *v104;
  void *v105;
  _QWORD block[4];
  id v107;
  char v108;
  _QWORD v109[4];
  NSObject *v110;
  _QWORD v111[4];
  NSObject *v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  _BYTE v125[128];
  _BYTE v126[128];
  uint8_t v127[128];
  uint8_t buf[4];
  void *v129;
  __int16 v130;
  uint64_t v131;
  uint64_t v132;

  v132 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "devicesChangeBackoffTimer");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "suspend");

    objc_msgSend(v4, "account");
    v104 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v104)
    {
      v85 = (void *)MEMORY[0x1D17BA0A0]();
      v86 = v4;
      HMFGetOSLogHandle();
      v87 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v87, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v88 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v129 = v88;
        _os_log_impl(&dword_1CD062000, v87, OS_LOG_TYPE_INFO, "%{public}@Failed to determine devices on our account, there is no account", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v85);
      goto LABEL_73;
    }
    objc_msgSend(MEMORY[0x1E0D286B8], "systemInfo");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "isMigrating");

    objc_msgSend(v4, "service");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "hmd_isActive");

    if ((v7 & 1) == 0 && v9)
    {
      v96 = a2;
      v10 = (void *)MEMORY[0x1E0C99E20];
      __createDevices(v4);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setWithArray:", v11);
      v12 = objc_claimAutoreleasedReturnValue();

      v13 = (void *)MEMORY[0x1D17BA0A0]();
      v97 = v4;
      v14 = v4;
      HMFGetOSLogHandle();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v129 = v16;
        v130 = 2112;
        v131 = v12;
        _os_log_impl(&dword_1CD062000, v15, OS_LOG_TYPE_INFO, "%{public}@Updating account with peer devices: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v13);
      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v103 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = (void *)MEMORY[0x1E0C99E60];
      objc_msgSend(v14, "account");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "devices");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "hmf_objectsPassingTest:", &__block_literal_global_491);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setWithArray:", v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      v123 = 0u;
      v124 = 0u;
      v121 = 0u;
      v122 = 0u;
      v98 = v22;
      v99 = (void *)v12;
      objc_msgSend(v22, "hmf_addedObjectsFromSet:", v12);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v121, v127, 16);
      v105 = v17;
      if (v24)
      {
        v25 = v24;
        v26 = *(_QWORD *)v122;
        do
        {
          for (i = 0; i != v25; ++i)
          {
            if (*(_QWORD *)v122 != v26)
              objc_enumerationMutation(v23);
            v28 = *(void **)(*((_QWORD *)&v121 + 1) + 8 * i);
            v29 = (void *)MEMORY[0x1D17BA0A0]();
            v30 = v14;
            HMFGetOSLogHandle();
            v31 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
            {
              HMFGetLogIdentifier();
              v32 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138543618;
              v129 = v32;
              v130 = 2112;
              v131 = (uint64_t)v28;
              _os_log_impl(&dword_1CD062000, v31, OS_LOG_TYPE_INFO, "%{public}@Adding device: %@", buf, 0x16u);

              v17 = v105;
            }

            objc_autoreleasePoolPop(v29);
            objc_msgSend(v28, "setAccount:", v104);
            objc_msgSend(v28, "backingStoreObjectsWithChangeType:version:", 1, 4);
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "addObjectsFromArray:", v33);

          }
          v25 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v121, v127, 16);
        }
        while (v25);
      }

      v119 = 0u;
      v120 = 0u;
      v117 = 0u;
      v118 = 0u;
      v34 = v99;
      objc_msgSend(v98, "hmf_commonObjectsFromSet:", v99);
      obj = (id)objc_claimAutoreleasedReturnValue();
      v102 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v117, v126, 16);
      if (v102)
      {
        v101 = *(_QWORD *)v118;
        do
        {
          for (j = 0; j != v102; ++j)
          {
            if (*(_QWORD *)v118 != v101)
              objc_enumerationMutation(obj);
            v36 = *(void **)(*((_QWORD *)&v117 + 1) + 8 * j);
            objc_msgSend(v34, "member:", v36);
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            v38 = v37;
            if (v37)
            {
              objc_msgSend(v37, "version");
              v39 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v36, "setLocalOnlyVersionFromIDS:", v39);

            }
            if ((objc_msgSend(v36, "isLocallyTracked") & 1) == 0)
            {
              v40 = (void *)MEMORY[0x1D17BA0A0]();
              v41 = v14;
              HMFGetOSLogHandle();
              v42 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v42, OS_LOG_TYPE_DEBUG))
              {
                HMFGetLogIdentifier();
                v43 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v36, "shortDescription");
                v44 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                v129 = v43;
                v130 = 2112;
                v131 = (uint64_t)v44;
                _os_log_impl(&dword_1CD062000, v42, OS_LOG_TYPE_DEBUG, "%{public}@Tracking device locally: %@", buf, 0x16u);

                v34 = v99;
              }

              objc_autoreleasePoolPop(v40);
              objc_msgSend(v36, "setLocallyTracked:", 1);
            }
            v45 = objc_msgSend(v14, "isDeviceLocallyPairedWatch:", v36);
            if (!objc_msgSend(v36, "isCloudTracked"))
              goto LABEL_30;
            if (isWatch())
            {
              objc_msgSend(v36, "setCloudTracked:", 0);
LABEL_30:
              if (!v38)
                goto LABEL_44;
LABEL_31:
              objc_msgSend(v36, "version");
              v46 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v38, "version");
              v47 = (void *)objc_claimAutoreleasedReturnValue();
              v48 = objc_msgSend(v46, "isGreaterThanVersion:", v47);

              if (v48)
              {
                objc_msgSend(v38, "setAccount:", v104);
                objc_msgSend(v36, "version");
                v49 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v38, "updateVersion:", v49);

              }
              if ((objc_msgSend(v36, "isBackingStorageEqual:", v38) & 1) == 0)
              {
                v50 = (void *)MEMORY[0x1D17BA0A0]();
                v51 = v14;
                HMFGetOSLogHandle();
                v52 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v52, OS_LOG_TYPE_INFO))
                {
                  HMFGetLogIdentifier();
                  v53 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138543618;
                  v129 = v53;
                  v130 = 2112;
                  v131 = (uint64_t)v38;
                  _os_log_impl(&dword_1CD062000, v52, OS_LOG_TYPE_INFO, "%{public}@Updating device: %@", buf, 0x16u);

                }
                objc_autoreleasePoolPop(v50);
                objc_msgSend(v38, "setAccount:", v104);
                objc_msgSend(v38, "backingStoreObjectsWithChangeType:version:", 2, 4);
                v54 = (void *)objc_claimAutoreleasedReturnValue();
                if (!v45 || (v55 = objc_msgSend(v36, "isCloudTracked"), v56 = v103, (v55 & 1) == 0))
                  v56 = v105;
                objc_msgSend(v56, "addObjectsFromArray:", v54);

              }
              goto LABEL_44;
            }
            if (v45)
            {
              v57 = (void *)MEMORY[0x1D17BA0A0]();
              v58 = v14;
              HMFGetOSLogHandle();
              v59 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v59, OS_LOG_TYPE_INFO))
              {
                HMFGetLogIdentifier();
                v60 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v36, "identifier");
                v61 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                v129 = v60;
                v130 = 2112;
                v131 = (uint64_t)v61;
                _os_log_impl(&dword_1CD062000, v59, OS_LOG_TYPE_INFO, "%{public}@Processing update for connected watch: %@", buf, 0x16u);

                v34 = v99;
              }

              objc_autoreleasePoolPop(v57);
              if (v38)
                goto LABEL_31;
            }
LABEL_44:

          }
          v102 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v117, v126, 16);
        }
        while (v102);
      }

      v115 = 0u;
      v116 = 0u;
      v113 = 0u;
      v114 = 0u;
      objc_msgSend(v98, "hmf_removedObjectsFromSet:", v34);
      v62 = (void *)objc_claimAutoreleasedReturnValue();
      v63 = objc_msgSend(v62, "countByEnumeratingWithState:objects:count:", &v113, v125, 16);
      if (v63)
      {
        v64 = v63;
        v65 = *(_QWORD *)v114;
        do
        {
          for (k = 0; k != v64; ++k)
          {
            if (*(_QWORD *)v114 != v65)
              objc_enumerationMutation(v62);
            v67 = *(void **)(*((_QWORD *)&v113 + 1) + 8 * k);
            v68 = (void *)MEMORY[0x1D17BA0A0]();
            v69 = v14;
            HMFGetOSLogHandle();
            v70 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v70, OS_LOG_TYPE_INFO))
            {
              HMFGetLogIdentifier();
              v71 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138543618;
              v129 = v71;
              v130 = 2112;
              v131 = (uint64_t)v67;
              _os_log_impl(&dword_1CD062000, v70, OS_LOG_TYPE_INFO, "%{public}@Removing device: %@", buf, 0x16u);

            }
            objc_autoreleasePoolPop(v68);
            v72 = objc_msgSend(v67, "isCloudTracked");
            objc_msgSend(v67, "backingStoreObjectsWithChangeType:version:", 3, 4);
            v73 = (void *)objc_claimAutoreleasedReturnValue();
            if (v72)
              v74 = v103;
            else
              v74 = v105;
            objc_msgSend(v74, "addObjectsFromArray:", v73);

          }
          v64 = objc_msgSend(v62, "countByEnumeratingWithState:objects:count:", &v113, v125, 16);
        }
        while (v64);
      }

      v75 = dispatch_group_create();
      v76 = objc_msgSend(v103, "hmf_isEmpty");
      v77 = MEMORY[0x1E0C809B0];
      if ((v76 & 1) == 0)
      {
        dispatch_group_enter(v75);
        +[HMDBackingStoreTransactionOptions optionsWithSource:destination:mustReplay:mustPush:](HMDBackingStoreTransactionOptions, "optionsWithSource:destination:mustReplay:mustPush:", 0, 2, 0, 0);
        v78 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "backingStore");
        v79 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v79, "transaction:options:", CFSTR("Update Devices"), v78);
        v80 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v80, "addObjects:", v103);
        v111[0] = v77;
        v111[1] = 3221225472;
        v111[2] = ____updateDevices_block_invoke_492;
        v111[3] = &unk_1E89C2350;
        v112 = v75;
        objc_msgSend(v80, "run:", v111);

      }
      if ((objc_msgSend(v105, "hmf_isEmpty") & 1) == 0)
      {
        dispatch_group_enter(v75);
        objc_msgSend(v14, "backingStore");
        v81 = (void *)objc_claimAutoreleasedReturnValue();
        +[HMDBackingStoreTransactionOptions defaultLocalOptions](HMDBackingStoreTransactionOptions, "defaultLocalOptions");
        v82 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v81, "transaction:options:", CFSTR("Update Devices"), v82);
        v83 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v83, "addObjects:", v105);
        v109[0] = v77;
        v109[1] = 3221225472;
        v109[2] = ____updateDevices_block_invoke_2;
        v109[3] = &unk_1E89C2350;
        v110 = v75;
        objc_msgSend(v83, "run:", v109);

      }
      objc_initWeak((id *)buf, v14);
      v84 = v14[2];
      block[0] = v77;
      block[1] = 3221225472;
      block[2] = ____updateDevices_block_invoke_3;
      block[3] = &unk_1E89BCB70;
      objc_copyWeak(&v107, (id *)buf);
      v108 = v96;
      dispatch_group_notify(v75, v84, block);
      objc_destroyWeak(&v107);
      objc_destroyWeak((id *)buf);

      v4 = v97;
      goto LABEL_73;
    }
    v89 = (void *)MEMORY[0x1D17BA0A0]();
    v90 = v4;
    HMFGetOSLogHandle();
    v91 = objc_claimAutoreleasedReturnValue();
    v92 = os_log_type_enabled(v91, OS_LOG_TYPE_INFO);
    if (v7)
    {
      if (v92)
      {
        HMFGetLogIdentifier();
        v93 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v129 = v93;
        v94 = "%{public}@Skipping updating of devices during migration, will try again later";
LABEL_71:
        _os_log_impl(&dword_1CD062000, v91, OS_LOG_TYPE_INFO, v94, buf, 0xCu);

      }
    }
    else if (v92)
    {
      HMFGetLogIdentifier();
      v93 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v129 = v93;
      v94 = "%{public}@Skipping updating of devices while the service is inactive, will try again later";
      goto LABEL_71;
    }

    objc_autoreleasePoolPop(v89);
    objc_msgSend(v90, "devicesChangeBackoffTimer");
    v95 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v95, "resume");

LABEL_73:
  }

}

id __createDevices(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  HMDDevice *v16;
  void *v17;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)MEMORY[0x1E0C99E20];
  objc_msgSend(v1, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "devices");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setWithCapacity:", objc_msgSend(v4, "count"));
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  objc_msgSend(v1, "service");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "devices");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = v6;
  v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v21;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v21 != v10)
          objc_enumerationMutation(v7);
        v12 = *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v11);
        objc_msgSend(v1, "service");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v14 = v13;
        else
          v14 = 0;
        v15 = v14;

        v16 = -[HMDDevice initWithService:device:]([HMDDevice alloc], "initWithService:device:", v15, v12);
        if (v16)
          objc_msgSend(v19, "addObject:", v16);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v9);
  }

  objc_msgSend(v19, "allObjects");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  return v17;
}

void ____updateDevices_block_invoke_492(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void ____updateDevices_block_invoke_2(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void ____updateDevices_block_invoke_3(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = (void *)MEMORY[0x1D17BA0A0]();
    v4 = WeakRetained;
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = 138543362;
      v9 = v6;
      _os_log_impl(&dword_1CD062000, v5, OS_LOG_TYPE_INFO, "%{public}@Resolved", (uint8_t *)&v8, 0xCu);

    }
    objc_autoreleasePoolPop(v3);
    if (*(_BYTE *)(a1 + 40))
    {
      objc_msgSend(v4, "notificationCenter");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "postNotificationName:object:", CFSTR("HMDAppleAccountManagerResolved"), v4);

    }
  }

}

uint64_t ____updateDevices_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isCurrentDevice") ^ 1;
}

id __createAccountHandles(void *a1)
{
  id v1;
  void *v2;
  int v3;
  void *v4;
  void *v5;

  v1 = a1;
  objc_msgSend(v1, "service");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "hmd_isActive");

  if (v3)
  {
    objc_msgSend(v1, "service");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "hmd_handles");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = (void *)MEMORY[0x1E0C9AA60];
  }

  return v5;
}

uint64_t __updateCurrentDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id *v15;
  void *v16;
  id v17;
  id *v18;
  id v19;
  id *v20;
  void *v21;
  void *v22;
  id v23;
  NSObject *v24;
  void *v25;
  void *v26;
  id v27;
  NSObject *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t i;
  void *v39;
  void *v40;
  id v41;
  NSObject *v42;
  id v43;
  void *v44;
  void *v45;
  void *v47;
  unsigned int v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _QWORD v57[4];
  id v58;
  id v59;
  id v60;
  _QWORD v61[4];
  id v62;
  id v63;
  id v64;
  id v65;
  uint8_t v66[128];
  uint8_t buf[4];
  void *v68;
  __int16 v69;
  void *v70;
  uint64_t v71;

  v71 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = (void *)MEMORY[0x1D17BA0A0]();
    v6 = v3;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v68 = v8;
      _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_INFO, "%{public}@Updating device", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
    __createCurrentDevice(v6);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v9;
    v11 = v9 != 0;
    if (v9)
    {
      v51 = v6;
      v49 = v3;
      objc_msgSend(v9, "identifier");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "deviceForIdentifier:", v12);
      v13 = objc_claimAutoreleasedReturnValue();

      v48 = v11;
      v47 = (void *)v13;
      if (v13)
      {
        v61[0] = MEMORY[0x1E0C809B0];
        v61[1] = 3221225472;
        v61[2] = ____updateCurrentDevice_block_invoke;
        v61[3] = &unk_1E89BA850;
        v14 = (void *)v13;
        v15 = &v62;
        v16 = v6;
        v17 = v6;
        v62 = v17;
        v18 = &v63;
        v19 = v10;
        v63 = v19;
        v20 = &v64;
        v64 = v14;
        v65 = v4;
        __HMDAppleAccountManagerUpdateRPIndentityForCurrentDevice(v17, v19, v61);

        v21 = v10;
      }
      else
      {
        v26 = (void *)MEMORY[0x1D17BA0A0]();
        v27 = v6;
        HMFGetOSLogHandle();
        v28 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v68 = v29;
          v69 = 2112;
          v70 = v10;
          _os_log_impl(&dword_1CD062000, v28, OS_LOG_TYPE_DEFAULT, "%{public}@Adding current device: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v26);
        v57[0] = MEMORY[0x1E0C809B0];
        v57[1] = 3221225472;
        v57[2] = ____updateCurrentDevice_block_invoke_487;
        v57[3] = &unk_1E89C0DA8;
        v15 = &v58;
        v30 = v27;
        v58 = v30;
        v18 = &v59;
        v21 = v10;
        v31 = v10;
        v59 = v31;
        v20 = &v60;
        v60 = v4;
        __HMDAppleAccountManagerUpdateRPIndentityForCurrentDevice(v30, v31, v57);
        v16 = v51;
      }

      v55 = 0u;
      v56 = 0u;
      v53 = 0u;
      v54 = 0u;
      objc_msgSend(v16, "account");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v32, "devices");
      v33 = (void *)objc_claimAutoreleasedReturnValue();

      v34 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v53, v66, 16);
      v35 = v16;
      if (v34)
      {
        v36 = v34;
        v37 = *(_QWORD *)v54;
        v50 = v21;
        v52 = v33;
        do
        {
          for (i = 0; i != v36; ++i)
          {
            if (*(_QWORD *)v54 != v37)
              objc_enumerationMutation(v33);
            v39 = *(void **)(*((_QWORD *)&v53 + 1) + 8 * i);
            if ((objc_msgSend(v39, "isEqual:", v21) & 1) == 0
              && objc_msgSend(v39, "isRelatedToDevice:", v21))
            {
              v40 = (void *)MEMORY[0x1D17BA0A0]();
              v41 = v35;
              HMFGetOSLogHandle();
              v42 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
              {
                HMFGetLogIdentifier();
                v43 = v4;
                v44 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v39, "shortDescription");
                v45 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                v68 = v44;
                v69 = 2112;
                v70 = v45;
                _os_log_impl(&dword_1CD062000, v42, OS_LOG_TYPE_DEFAULT, "%{public}@Removing stale device: %@", buf, 0x16u);

                v35 = v51;
                v4 = v43;
                v21 = v50;
              }

              objc_autoreleasePoolPop(v40);
              objc_msgSend(v4, "removeDevice:", v39);
              v33 = v52;
            }
          }
          v36 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v53, v66, 16);
        }
        while (v36);
      }

      __handleUpdatedDevice_106206(v35, v21);
      v3 = v49;
      v10 = v21;
      v11 = v48;
    }
    else
    {
      v22 = (void *)MEMORY[0x1D17BA0A0]();
      v23 = v6;
      HMFGetOSLogHandle();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v68 = v25;
        _os_log_impl(&dword_1CD062000, v24, OS_LOG_TYPE_INFO, "%{public}@Failed to create current device", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v22);
    }

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

uint64_t ____updateAccount_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isEqual:", *(_QWORD *)(a1 + 32));
}

HMDDevice *__createCurrentDevice(void *a1)
{
  id v1;
  void *v2;
  char v3;
  void *v4;
  void *v5;
  _HMDLocalDeviceHandle *v6;
  HMDDeviceHandle *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _HMDGlobalDeviceHandle *v12;
  HMDDeviceHandle *v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  void *v18;
  HMDDevice *v19;
  void *v20;
  void *v21;
  void *v22;
  HMDDevice *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  NSObject *v31;
  void *v32;
  int v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "service");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "hmd_isActive");

  if ((v3 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDDeviceAddress localDeviceIDSIdentifier](HMDDeviceAddress, "localDeviceIDSIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      v6 = -[_HMDLocalDeviceHandle initWithDeviceIdentifier:]([_HMDLocalDeviceHandle alloc], "initWithDeviceIdentifier:", v5);
      v7 = -[HMDDeviceHandle initWithInternal:]([HMDDeviceHandle alloc], "initWithInternal:", v6);
      objc_msgSend(v4, "addObject:", v7);

    }
    objc_msgSend(v1, "pushConnection");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "publicToken");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v9)
    {
      objc_msgSend(v1, "service");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "iCloudAccount");
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v21, "pushToken");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v22;
      if (!v22 || objc_msgSend(v22, "hmf_isZeroed"))
      {

        goto LABEL_16;
      }

    }
    objc_msgSend(v1, "service");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "hmd_preferredHandle");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = -[_HMDGlobalDeviceHandle initWithPushToken:accountHandle:]([_HMDGlobalDeviceHandle alloc], "initWithPushToken:accountHandle:", v9, v11);
    v13 = -[HMDDeviceHandle initWithInternal:]([HMDDeviceHandle alloc], "initWithInternal:", v12);
    if (v13)
    {
      objc_msgSend(v4, "addObject:", v13);
      -[HMDDeviceHandle identifier](v13, "identifier");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }

    if (v14)
    {
      v23 = [HMDDevice alloc];
      objc_msgSend(MEMORY[0x1E0D286B8], "systemInfo");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "name");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D28690], "productInfo");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      +[HMDHomeKitVersion currentVersion](HMDHomeKitVersion, "currentVersion");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      +[HMDDeviceCapabilities deviceCapabilities](HMDDeviceCapabilities, "deviceCapabilities");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = -[HMDDevice initWithIdentifier:handles:name:productInfo:version:capabilities:](v23, "initWithIdentifier:handles:name:productInfo:version:capabilities:", v14, v4, v25, v26, v27, v28);

LABEL_19:
      goto LABEL_20;
    }
LABEL_16:
    v29 = (void *)MEMORY[0x1D17BA0A0]();
    v30 = v1;
    HMFGetOSLogHandle();
    v31 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = 138543362;
      v35 = v32;
      _os_log_impl(&dword_1CD062000, v31, OS_LOG_TYPE_ERROR, "%{public}@Failed to create device identifier", (uint8_t *)&v34, 0xCu);

    }
    objc_autoreleasePoolPop(v29);
    v19 = 0;
    goto LABEL_19;
  }
  v15 = (void *)MEMORY[0x1D17BA0A0]();
  v16 = v1;
  HMFGetOSLogHandle();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = 138543362;
    v35 = v18;
    _os_log_impl(&dword_1CD062000, v17, OS_LOG_TYPE_INFO, "%{public}@Cannot create current device; Service is not active",
      (uint8_t *)&v34,
      0xCu);

  }
  objc_autoreleasePoolPop(v15);
  v19 = 0;
LABEL_20:

  return v19;
}

void ____updateCurrentDevice_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    v4 = (void *)MEMORY[0x1D17BA0A0]();
    v5 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = *(_QWORD *)(a1 + 40);
      v18 = 138543618;
      v19 = v7;
      v20 = 2112;
      v21 = v8;
      _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to determine rapport identity for current device: %@", (uint8_t *)&v18, 0x16u);

    }
    objc_autoreleasePoolPop(v4);
  }
  if ((objc_msgSend(*(id *)(a1 + 48), "isBackingStorageEqual:", *(_QWORD *)(a1 + 40)) & 1) == 0)
  {
    v9 = (void *)MEMORY[0x1D17BA0A0]();
    v10 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(a1 + 40);
      v18 = 138543618;
      v19 = v12;
      v20 = 2112;
      v21 = v13;
      _os_log_impl(&dword_1CD062000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@Updating current device: %@", (uint8_t *)&v18, 0x16u);

    }
    objc_autoreleasePoolPop(v9);
    +[HMDBackingStoreTransactionOptions optionsWithSource:destination:mustReplay:mustPush:](HMDBackingStoreTransactionOptions, "optionsWithSource:destination:mustReplay:mustPush:", 0, 2, 1, 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "backingStore");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "transaction:options:", CFSTR("Update Device"), v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 40), "setAccount:", *(_QWORD *)(a1 + 56));
    objc_msgSend(*(id *)(a1 + 40), "backingStoreObjectsWithChangeType:version:", 1, 4);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "addObjects:", v17);

    objc_msgSend(v16, "run");
  }

}

void __HMDAppleAccountManagerUpdateRPIndentityForCurrentDevice(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  _QWORD *v9;
  NSObject *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD *v14;
  id v15;
  id v16;
  _QWORD v17[4];
  id v18;
  id v19;
  id v20;
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (void *)MEMORY[0x1D17BA0A0]();
  v9 = v5;
  HMFGetOSLogHandle();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    v23 = v11;
    _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_INFO, "%{public}@Updating device rapport identity on current device", buf, 0xCu);

  }
  objc_autoreleasePoolPop(v8);
  v12 = objc_alloc_init(MEMORY[0x1E0D838E8]);
  objc_msgSend(v12, "setDispatchQueue:", v9[2]);
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = ____HMDAppleAccountManagerUpdateRPIndentityForCurrentDevice_block_invoke;
  v17[3] = &unk_1E89BFF60;
  v18 = v12;
  v19 = v9;
  v20 = v6;
  v21 = v7;
  v13 = v12;
  v14 = v9;
  v15 = v7;
  v16 = v6;
  objc_msgSend(v13, "getIdentitiesWithFlags:completion:", 1, v17);

}

void ____updateCurrentDevice_block_invoke_487(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    v4 = (void *)MEMORY[0x1D17BA0A0]();
    v5 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = *(_QWORD *)(a1 + 40);
      v9 = 138543618;
      v10 = v7;
      v11 = 2112;
      v12 = v8;
      _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to determine rapport identity for current device: %@", (uint8_t *)&v9, 0x16u);

    }
    objc_autoreleasePoolPop(v4);
  }
  objc_msgSend(*(id *)(a1 + 48), "addDevice:", *(_QWORD *)(a1 + 40));

}

void __handleUpdatedDevice_106206(void *a1, void *a2)
{
  _QWORD *v3;
  id v4;
  NSObject *v5;
  _QWORD v6[4];
  _QWORD *v7;
  id v8;

  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = v3[2];
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = ____handleUpdatedDevice_block_invoke;
    v6[3] = &unk_1E89C2328;
    v7 = v3;
    v8 = v4;
    dispatch_async(v5, v6);

  }
}

void ____handleUpdatedDevice_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  uint64_t v11;
  uint8_t buf[4];
  void *v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D17BA0A0]();
  v3 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    v13 = v5;
    v14 = 2112;
    v15 = v6;
    _os_log_impl(&dword_1CD062000, v4, OS_LOG_TYPE_INFO, "%{public}@Updated device: %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v2);
  v7 = *(_QWORD *)(a1 + 40);
  if (v7)
  {
    v10 = CFSTR("HMDDeviceNotificationKey");
    v11 = v7;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v11, &v10, 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(*(id *)(a1 + 32), "notificationCenter");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "postNotificationName:object:userInfo:", CFSTR("HMDAppleAccountManagerDeviceUpdatedNotification"), *(_QWORD *)(a1 + 32), v8);

}

void __setAccount(void *a1, void *a2, int a3)
{
  id *v5;
  id v6;
  id v7;
  id v8;
  id *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id *v15;
  uint64_t v16;
  void *v17;
  id *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  _BOOL4 v24;
  void *v25;
  void *v26;
  void *v27;
  int v28;
  int v29;
  void *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  if (v5)
  {
    os_unfair_recursive_lock_lock_with_options();
    if ((HMFEqualObjects() & 1) != 0)
    {
      os_unfair_recursive_lock_unlock();
      v7 = 0;
    }
    else
    {
      v8 = v5[7];
      objc_storeStrong(v5 + 7, a2);
      objc_msgSend(v6, "setManager:", v5);
      v9 = v5;
      v7 = v8;
      v10 = v6;
      if (v7)
      {
        objc_msgSend(v9, "notificationCenter");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "removeObserver:name:object:", v9, CFSTR("HMDAccountAddedDeviceNotification"), v7);

        objc_msgSend(v9, "notificationCenter");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "removeObserver:name:object:", v9, CFSTR("HMDAccountRemovedDeviceNotification"), v7);

      }
      if (v10)
      {
        objc_msgSend(v9, "notificationCenter");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "addObserver:selector:name:object:", v9, sel___deviceAddedToCurrentAccount_, CFSTR("HMDAccountAddedDeviceNotification"), v10);

        objc_msgSend(v9, "notificationCenter");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "addObserver:selector:name:object:", v9, sel___deviceRemovedFromCurrentAccount_, CFSTR("HMDAccountRemovedDeviceNotification"), v10);

      }
      objc_msgSend(v7, "manager");
      v15 = (id *)objc_claimAutoreleasedReturnValue();

      if (v15 == v9)
        objc_msgSend(v7, "setManager:", 0);
      v16 = os_unfair_recursive_lock_unlock();
      v17 = (void *)MEMORY[0x1D17BA0A0](v16);
      v18 = v9;
      HMFGetOSLogHandle();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "shortDescription");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v29 = 138543618;
        v30 = v20;
        v31 = 2112;
        v32 = v21;
        _os_log_impl(&dword_1CD062000, v19, OS_LOG_TYPE_INFO, "%{public}@Updated account: %@", (uint8_t *)&v29, 0x16u);

      }
      objc_autoreleasePoolPop(v17);
      if (a3)
      {
        objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", 2);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = v22;
        if (v10)
          objc_msgSend(v22, "setObject:forKeyedSubscript:", v10, CFSTR("HMDAccountNotificationKey"));
        if (v7)
          objc_msgSend(v23, "setObject:forKeyedSubscript:", v7, CFSTR("HMDPreviousAccountNotificationKey"));
        v24 = v10 == 0;
        objc_msgSend(v18, "notificationCenter");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v26 = (void *)objc_msgSend(v23, "copy");
        objc_msgSend(v25, "postNotificationName:object:userInfo:", CFSTR("HMDAppleAccountManagerAccountUpdatedNotification"), v18, v26);

        objc_msgSend(v18, "device");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        if (v27)
          v28 = 1;
        else
          v28 = v24;
        if (v28 == 1)
          __handleUpdatedDevice_106206(v18, v27);

      }
    }

  }
}

void sub_1CD6AE3D8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void __removeAccount(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = (void *)MEMORY[0x1D17BA0A0]();
    v6 = v3;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138543618;
      v14 = v8;
      v15 = 2112;
      v16 = v4;
      _os_log_impl(&dword_1CD062000, v7, OS_LOG_TYPE_INFO, "%{public}@Removing account: %@", (uint8_t *)&v13, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(v6, "backingStore");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDBackingStoreTransactionOptions defaultLocalOptions](HMDBackingStoreTransactionOptions, "defaultLocalOptions");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "transaction:options:", CFSTR("Remove Account"), v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v4, "modelObjectWithChangeType:version:", 3, 4);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "add:", v12);

    objc_msgSend(v11, "run");
  }

}

void __updateAccountContext(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _QWORD v4[4];
  id v5;

  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x1D17BA0A0]();
    v3 = (void *)MEMORY[0x1E0D28540];
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = ____updateAccountContext_block_invoke;
    v4[3] = &unk_1E89C2730;
    v5 = v1;
    objc_msgSend(v3, "activityWithName:parent:options:block:", CFSTR("Accounts.Context"), 0, 1, v4);

    objc_autoreleasePoolPop(v2);
  }

}

HMDAccount *__createAccount(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  HMDAccount *v12;
  void *v13;
  id v14;
  NSObject *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  NSObject *v31;
  void *v32;
  void *v33;
  void *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t v40[128];
  uint8_t buf[4];
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "accountContext");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      +[HMDAccountIdentifier accountIdentifierForAppleAccountContext:](HMDAccountIdentifier, "accountIdentifierForAppleAccountContext:", v3);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "service");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = objc_msgSend(v5, "hmd_isActive");

      if (v6)
      {
        __createAccountHandles(v2);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v7, "hmf_isEmpty"))
        {
          v8 = (void *)MEMORY[0x1D17BA0A0]();
          v9 = v2;
          HMFGetOSLogHandle();
          v10 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v42 = v11;
            _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to create handles", buf, 0xCu);

          }
          objc_autoreleasePoolPop(v8);
        }
        else
        {
          v38 = 0u;
          v39 = 0u;
          v36 = 0u;
          v37 = 0u;
          v18 = v7;
          v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
          if (v19)
          {
            v20 = v19;
            v21 = *(_QWORD *)v37;
            do
            {
              for (i = 0; i != v20; ++i)
              {
                if (*(_QWORD *)v37 != v21)
                  objc_enumerationMutation(v18);
                objc_msgSend(*(id *)(*((_QWORD *)&v36 + 1) + 8 * i), "setLocallyTracked:", 1);
              }
              v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
            }
            while (v20);
          }

        }
        objc_msgSend(v2, "service");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "iCloudAccount");
        v24 = (void *)objc_claimAutoreleasedReturnValue();

        v25 = (void *)MEMORY[0x1E0C99E20];
        objc_msgSend(v24, "devices");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v25, "setWithCapacity:", objc_msgSend(v26, "count") + 1);
        v27 = (void *)objc_claimAutoreleasedReturnValue();

        __createCurrentDevice(v2);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        if (v28)
        {
          objc_msgSend(v27, "addObject:", v28);
        }
        else
        {
          v29 = (void *)MEMORY[0x1D17BA0A0]();
          v30 = v2;
          HMFGetOSLogHandle();
          v31 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v35 = v29;
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v42 = v32;
            _os_log_impl(&dword_1CD062000, v31, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to create current device", buf, 0xCu);

            v29 = v35;
          }

          objc_autoreleasePoolPop(v29);
        }
        __createDevices(v2);
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "addObjectsFromArray:", v33);

        objc_msgSend(v27, "allObjects");
        v17 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        v17 = (void *)MEMORY[0x1E0C9AA60];
        v7 = (void *)MEMORY[0x1E0C9AA60];
      }
      v12 = -[HMDAccount initWithIdentifier:handles:devices:]([HMDAccount alloc], "initWithIdentifier:handles:devices:", v4, v7, v17);

    }
    else
    {
      v13 = (void *)MEMORY[0x1D17BA0A0]();
      v14 = v2;
      HMFGetOSLogHandle();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v42 = v16;
        _os_log_impl(&dword_1CD062000, v15, OS_LOG_TYPE_ERROR, "%{public}@Context is required to create account", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v13);
      v12 = 0;
    }

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void __addAccount(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t j;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  NSObject *v34;
  uint64_t v35;
  id v36;
  id v37;
  void (**v38)(_QWORD);
  void *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  dispatch_time_t v43;
  id v44;
  _QWORD v45[4];
  id v46;
  NSObject *v47;
  void (**v48)(_QWORD);
  _QWORD aBlock[4];
  id v50;
  id v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _BYTE v60[128];
  uint8_t v61[128];
  uint8_t buf[4];
  void *v63;
  __int16 v64;
  id v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  if (v5)
  {
    v7 = (void *)MEMORY[0x1D17BA0A0]();
    v44 = v5;
    v8 = v5;
    HMFGetOSLogHandle();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v63 = v10;
      v64 = 2112;
      v65 = v6;
      _os_log_impl(&dword_1CD062000, v9, OS_LOG_TYPE_INFO, "%{public}@Adding account: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v7);
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "modelObjectWithChangeType:version:", 1, 4);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addObject:", v12);

    v58 = 0u;
    v59 = 0u;
    v56 = 0u;
    v57 = 0u;
    objc_msgSend(v6, "handles");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v56, v61, 16);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)v57;
      do
      {
        for (i = 0; i != v15; ++i)
        {
          if (*(_QWORD *)v57 != v16)
            objc_enumerationMutation(v13);
          v18 = *(void **)(*((_QWORD *)&v56 + 1) + 8 * i);
          if (!a3 || objc_msgSend(*(id *)(*((_QWORD *)&v56 + 1) + 8 * i), "isLocallyTracked"))
          {
            objc_msgSend(v18, "modelObjectWithChangeType:version:", 1, 4, v44);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v11, "addObject:", v19);

          }
        }
        v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v56, v61, 16);
      }
      while (v15);
    }

    if (objc_msgSend(v11, "count"))
    {
      +[HMDBackingStoreTransactionOptions optionsWithSource:destination:mustReplay:mustPush:](HMDBackingStoreTransactionOptions, "optionsWithSource:destination:mustReplay:mustPush:", 0, 2, 0, 0);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "backingStore");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "transaction:options:", CFSTR("Add Account"), v20);
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v22, "addObjects:", v11);
      objc_msgSend(v22, "run");

    }
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v52 = 0u;
    v53 = 0u;
    v54 = 0u;
    v55 = 0u;
    objc_msgSend(v6, "devices");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v52, v60, 16);
    if (v25)
    {
      v26 = v25;
      v27 = *(_QWORD *)v53;
      do
      {
        for (j = 0; j != v26; ++j)
        {
          if (*(_QWORD *)v53 != v27)
            objc_enumerationMutation(v24);
          v29 = *(void **)(*((_QWORD *)&v52 + 1) + 8 * j);
          if ((objc_msgSend(v29, "isCurrentDevice", v44) & 1) == 0
            && (!a3 || objc_msgSend(v29, "isLocallyTracked")))
          {
            objc_msgSend(v29, "backingStoreObjectsWithChangeType:version:", 1, 4);
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "addObjectsFromArray:", v30);

          }
        }
        v26 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v52, v60, 16);
      }
      while (v26);
    }

    if (objc_msgSend(v23, "count"))
    {
      +[HMDBackingStoreTransactionOptions defaultLocalOptions](HMDBackingStoreTransactionOptions, "defaultLocalOptions");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "backingStore");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v32, "transaction:options:", CFSTR("Add Account"), v31);
      v33 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v33, "addObjects:", v23);
      objc_msgSend(v33, "run");

    }
    v34 = dispatch_group_create();
    dispatch_group_enter(v34);
    v35 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = ____addAccount_block_invoke;
    aBlock[3] = &unk_1E89C2328;
    v36 = v6;
    v50 = v36;
    v37 = v8;
    v51 = v37;
    v38 = (void (**)(_QWORD))_Block_copy(aBlock);
    objc_msgSend(v37, "cloudCache");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "homeManagerZone");
    v40 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v36, "modelIdentifier");
    v41 = objc_claimAutoreleasedReturnValue();
    v42 = (void *)v41;
    if (v40 && v41)
    {
      v45[0] = v35;
      v45[1] = 3221225472;
      v45[2] = ____addAccount_block_invoke_2;
      v45[3] = &unk_1E89B8D30;
      v46 = v37;
      v48 = v38;
      v47 = v34;
      objc_msgSend(v40, "allDescendentsCloudRecordsForParentID:completionHandler:", v42, v45);

    }
    else
    {
      v38[2](v38);
      dispatch_group_leave(v34);
    }
    v5 = v44;
    v43 = dispatch_time(0, 60000000000);
    if (dispatch_group_wait(v34, v43))
      v38[2](v38);

  }
}

void ____addAccount_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "currentDeviceModelsWithChangeType:version:", 1, 4);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "count"))
  {
    +[HMDBackingStoreTransactionOptions optionsWithSource:destination:mustReplay:mustPush:](HMDBackingStoreTransactionOptions, "optionsWithSource:destination:mustReplay:mustPush:", 0, 2, 1, 0);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "backingStore");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "transaction:options:", CFSTR("Add Account"), v2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v4, "addObjects:", v5);
    objc_msgSend(v4, "run");

  }
}

void ____addAccount_block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = v5;
  if (!a3)
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v5, "count"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v8 = v6;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v19;
      do
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v19 != v11)
            objc_enumerationMutation(v8);
          objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v12), "extractObjectChange", (_QWORD)v18);
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          v14 = v13;
          if (v13)
          {
            objc_msgSend(v13, "setObjectChangeType:", 1);
            objc_msgSend(v7, "addObject:", v14);
          }

          ++v12;
        }
        while (v10 != v12);
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      }
      while (v10);
    }

    if (objc_msgSend(v7, "count"))
    {
      +[HMDBackingStoreTransactionOptions optionsWithSource:destination:mustReplay:mustPush:](HMDBackingStoreTransactionOptions, "optionsWithSource:destination:mustReplay:mustPush:", 2, 2, 0, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "backingStore");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "transaction:options:", CFSTR("Add Account Reprocess Cloud Cache"), v15);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v17, "addObjects:", v7);
      objc_msgSend(v17, "run");

    }
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void ____updateAccountContext_block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  NSObject *v8;
  HMDAppleAccountContext *v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  NSObject *v17;
  void *v18;
  HMDAppleAccountContext *v19;
  int v20;
  void *v21;
  __int16 v22;
  HMDAppleAccountContext *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  os_unfair_recursive_lock_lock_with_options();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "aa_primaryAppleAccount");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    *(_BYTE *)(v3 + 48) = 1;
    v4 = (void *)MEMORY[0x1D17BA0A0]();
    v5 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v6 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = 138543362;
      v21 = v7;
      _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Primary apple account is logged in", (uint8_t *)&v20, 0xCu);

    }
    objc_autoreleasePoolPop(v4);
    v8 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 40);
    if (os_signpost_enabled(v8))
    {
      LOWORD(v20) = 0;
      _os_signpost_emit_with_name_impl(&dword_1CD062000, v8, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "PrimaryAppleAccountLoggedIn", "", (uint8_t *)&v20, 2u);
    }
    v9 = -[HMDAppleAccountContext initWithAccount:]([HMDAppleAccountContext alloc], "initWithAccount:", v2);
    if ((HMFEqualObjects() & 1) == 0)
    {
      v10 = (void *)MEMORY[0x1D17BA0A0]();
      v11 = *(id *)(a1 + 32);
      HMFGetOSLogHandle();
      v12 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = 138543618;
        v21 = v13;
        v22 = 2112;
        v23 = v9;
        _os_log_impl(&dword_1CD062000, v12, OS_LOG_TYPE_INFO, "%{public}@Updated account context: %@", (uint8_t *)&v20, 0x16u);

      }
      objc_autoreleasePoolPop(v10);
      objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 64), v9);
    }

  }
  else
  {
    *(_BYTE *)(v3 + 48) = 0;
  }

  v14 = os_unfair_recursive_lock_unlock();
  v15 = (void *)MEMORY[0x1D17BA0A0](v14);
  v16 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    HMFBooleanToString();
    v19 = (HMDAppleAccountContext *)objc_claimAutoreleasedReturnValue();
    v20 = 138543618;
    v21 = v18;
    v22 = 2112;
    v23 = v19;
    _os_log_impl(&dword_1CD062000, v17, OS_LOG_TYPE_INFO, "%{public}@Primary iCloud (Apple) account login status: Logged In : %@", (uint8_t *)&v20, 0x16u);

  }
  objc_autoreleasePoolPop(v15);
}

void sub_1CD6AFE14(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD6B4BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6B5A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6B5CB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6B7B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6BB0FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6BB8F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6BBD5C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6BC188(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6BC530(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6BC8C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6BCC60(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6C0B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__107560(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__107561(uint64_t a1)
{

}

void sub_1CD6C3B00(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6C3B8C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6C3CCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6C3FD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6C5290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6C554C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6C983C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6C9F74(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6CA1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD6CA274(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6CC420(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6CCC18(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6CD10C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6CD188(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6CDF48(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 144));
  _Unwind_Resume(a1);
}

void sub_1CD6CF658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  id *v11;
  uint64_t v12;

  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  _Block_object_dispose((const void *)(v12 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1CD6CF8B8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__108952(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__108953(uint64_t a1)
{

}

void __removeAllAccessories(void *a1)
{
  id *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  objc_msgSend(v1[3], "allKeys", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        __removeUnassociatedAccessory(v1, *(void **)(*((_QWORD *)&v7 + 1) + 8 * v6++));
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

  objc_msgSend(v1[3], "removeAllObjects");
}

void __removeUnassociatedAccessory(void *a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  void *v6;
  id *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _QWORD v12[4];
  id v13;
  id v14;
  uint8_t buf[4];
  void *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3[3], "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v6 = (void *)MEMORY[0x1D17BA0A0]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v16 = v9;
      v17 = 2112;
      v18 = v4;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_INFO, "%{public}@Removing unassociated accessory %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(v3[3], "removeObjectForKey:", v4);
    objc_msgSend(v7, "delegate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      objc_msgSend(v7, "delegateQueue");
      v11 = objc_claimAutoreleasedReturnValue();
      v12[0] = MEMORY[0x1E0C809B0];
      v12[1] = 3221225472;
      v12[2] = ____removeUnassociatedAccessory_block_invoke;
      v12[3] = &unk_1E89C2328;
      v13 = v10;
      v14 = v5;
      dispatch_async(v11, v12);

    }
  }

}

uint64_t ____removeUnassociatedAccessory_block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeUnassociatedWACAccessory:", *(_QWORD *)(a1 + 40));
}

uint64_t ____updateDevice_block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateUnassociatedWACAccessory:", *(_QWORD *)(a1 + 40));
}

void __addDevice(void *a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  HMDUnassociatedWACAccessory *v12;
  void *v13;
  void *v14;
  void *v15;
  HMDUnassociatedWACAccessory *v16;
  void *v17;
  id *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  id *v22;
  HMDUnassociatedWACAccessory *v23;
  void *v24;
  NSObject *v25;
  _BYTE v26[24];
  HMDUnassociatedWACAccessory *v27;
  id v28;
  HMDUnassociatedWACAccessory *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v4, "isConfigured"))
  {
    objc_msgSend(v4, "identifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    __removeUnassociatedAccessory(v3, v5);
LABEL_3:

    goto LABEL_11;
  }
  v6 = v3[3];
  objc_msgSend(v4, "identifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v8 && objc_msgSend(v4, "supportsAirPlay2"))
  {
    v9 = (void *)MEMORY[0x1E0CBA1D8];
    v10 = objc_alloc(MEMORY[0x1E0CB3A28]);
    v11 = (void *)objc_msgSend(v10, "initWithUUIDString:", *MEMORY[0x1E0CB7AA8]);
    objc_msgSend(v9, "categoryWithIdentifier:", v11);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = [HMDUnassociatedWACAccessory alloc];
    objc_msgSend(v4, "identifier");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "UUIDString");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "name");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = -[HMDUnassociatedWACAccessory initWithIdentifier:name:category:messageDispatcher:wacDevice:](v12, "initWithIdentifier:name:category:messageDispatcher:wacDevice:", v14, v15, v5, v3[4], v4);

    v17 = (void *)MEMORY[0x1D17BA0A0]();
    v18 = v3;
    HMFGetOSLogHandle();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)v26 = 138543874;
      *(_QWORD *)&v26[4] = v20;
      *(_WORD *)&v26[12] = 2048;
      *(_QWORD *)&v26[14] = v16;
      *(_WORD *)&v26[22] = 2112;
      v27 = v16;
      _os_log_impl(&dword_1CD062000, v19, OS_LOG_TYPE_INFO, "%{public}@New WAC Accessory discovered: %p %@", v26, 0x20u);

    }
    objc_autoreleasePoolPop(v17);
    objc_msgSend(v4, "identifier");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = v18;
    v23 = v16;
    objc_msgSend(v3[3], "setObject:forKey:", v23, v21);
    objc_msgSend(v22, "delegate");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    if (v24)
    {
      objc_msgSend(v22, "delegateQueue");
      v25 = objc_claimAutoreleasedReturnValue();
      *(_QWORD *)v26 = MEMORY[0x1E0C809B0];
      *(_QWORD *)&v26[8] = 3221225472;
      *(_QWORD *)&v26[16] = ____addUnassociatedAccessory_block_invoke;
      v27 = (HMDUnassociatedWACAccessory *)&unk_1E89C2328;
      v28 = v24;
      v29 = v23;
      dispatch_async(v25, v26);

    }
    goto LABEL_3;
  }
LABEL_11:

}

uint64_t ____addUnassociatedAccessory_block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addUnassociatedWACAccessory:", *(_QWORD *)(a1 + 40));
}

void sub_1CD6D743C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6D7878(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6D7DF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1CD6D8144(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1CD6D84EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1CD6D887C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1CD6D8BD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6D8F40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1CD6D9294(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6D9514(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1CD6D97E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6D9B98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6D9E04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6D9F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DA09C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1CD6DA1B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1CD6DA290(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DA644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1CD6DA824(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DA9A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DAB24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DACA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DAE50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DB360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1CD6DB940(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DBCF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DBE5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1CD6DBF80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1CD6DC8A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  void *v28;
  void *v29;
  void *v30;
  void *v31;

  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

_QWORD *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  uint64_t v7;
  int v8;
  int v9;
  const std::locale::facet *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  size_t v16;
  std::locale::__imp *p_b;
  uint64_t v18;
  uint64_t v19;
  std::locale *v20;
  uint64_t v21;
  _BYTE v23[16];
  std::locale __b;
  size_t v25;
  int64_t v26;

  MEMORY[0x1D17B9764](v23, a1);
  if (v23[0])
  {
    v6 = (char *)a1 + *(_QWORD *)(*a1 - 24);
    v7 = *((_QWORD *)v6 + 5);
    v8 = *((_DWORD *)v6 + 2);
    v9 = *((_DWORD *)v6 + 36);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)));
      v10 = std::locale::use_facet(&__b, MEMORY[0x1E0DE4A90]);
      v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&__b);
      *((_DWORD *)v6 + 36) = v9;
    }
    v11 = a2 + a3;
    if ((v8 & 0xB0) == 0x20)
      v12 = a2 + a3;
    else
      v12 = a2;
    if (!v7)
      goto LABEL_29;
    v13 = *((_QWORD *)v6 + 3);
    v14 = v13 <= a3;
    v15 = v13 - a3;
    v16 = v14 ? 0 : v15;
    if (v12 - a2 >= 1
      && (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v7 + 96))(v7, a2, v12 - a2) != v12 - a2)
    {
      goto LABEL_29;
    }
    if ((uint64_t)v16 >= 1)
    {
      if (v16 >= 0x7FFFFFFFFFFFFFF8)
        std::string::__throw_length_error[abi:ne180100]();
      if (v16 >= 0x17)
      {
        v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v16 | 7) != 0x17)
          v18 = v16 | 7;
        v19 = v18 + 1;
        p_b = (std::locale::__imp *)operator new(v18 + 1);
        v25 = v16;
        v26 = v19 | 0x8000000000000000;
        __b.__locale_ = p_b;
      }
      else
      {
        HIBYTE(v26) = v16;
        p_b = (std::locale::__imp *)&__b;
      }
      memset(p_b, v9, v16);
      *((_BYTE *)p_b + v16) = 0;
      v20 = v26 >= 0 ? &__b : (std::locale *)__b.__locale_;
      v21 = (*(uint64_t (**)(uint64_t, std::locale *, size_t))(*(_QWORD *)v7 + 96))(v7, v20, v16);
      if (SHIBYTE(v26) < 0)
        operator delete(__b.__locale_);
      if (v21 != v16)
        goto LABEL_29;
    }
    if (v11 - v12 < 1
      || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v7 + 96))(v7, v12, v11 - v12) == v11 - v12)
    {
      *((_QWORD *)v6 + 3) = 0;
    }
    else
    {
LABEL_29:
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x1D17B9770](v23);
  return a1;
}

void sub_1CD6DCC08(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  _QWORD *v17;

  if (a17 < 0)
    operator delete(__p);
  MEMORY[0x1D17B9770](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v17 + *(_QWORD *)(*v17 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x1CD6DCBDCLL);
}

void sub_1CD6DCC68(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t std::ostringstream::~ostringstream(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DE4F60];
  v3 = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)a1 = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 8) = MEMORY[0x1E0DE4FB8] + 16;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1D17B97DC](a1 + 112);
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]();
}

void std::__throw_length_error[abi:ne180100]()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception);
  __cxa_throw(exception, (struct type_info *)off_1E899A678, MEMORY[0x1E0DE42D0]);
}

void sub_1CD6DCD40(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, "basic_string");
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5020] + 16);
  return result;
}

_QWORD *std::string::basic_string[abi:ne180100]<0>(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:ne180100]();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_1CD6DCE94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DCF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1CD6DD1C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;

  _Unwind_Resume(a1);
}

void sub_1CD6DD2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DD344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1CD6DD560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1CD6DD790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1CD6DDA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1CD6DDC58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1CD6DDE94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1CD6DE0D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

uint64_t std::shared_ptr<CtrXPC::Event>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_1CD6DE1F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DE370(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DE558(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6DE5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DE680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1CD6DE7B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6DE834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DE904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1CD6DEA6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1CD6DEAFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DEB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1CD6DECC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6DED4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DEE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1CD6DEF30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6DEFB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DF1C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DF338(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6DF3BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DF550(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1CD6DF758(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1CD6DF7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1CD6DF850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

__CFString *HMDUserPresenceRegionStatusAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_1E89B3788[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDUserPresenceRegionStatus %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1CD6E1208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6E4444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6E6C5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6E73EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6E74E0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6E7708(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

HMDApplicationInfo *__HMDApplicationRegistryApplicationInfoForApplicationProxy(void *a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  void *v6;
  HMDApplicationInfo *v7;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "bundleIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_msgSend(v4, "bundleURL");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
      __HMDApplicationRegistryApplicationForBundleURL(v3, v6);
    else
      __HMDApplicationRegistryApplicationWithBundleIdentifier(v3, v5);
    v7 = (HMDApplicationInfo *)objc_claimAutoreleasedReturnValue();
    if (!v7)
      v7 = -[HMDApplicationInfo initWithBundleIdentifier:bundleURL:]([HMDApplicationInfo alloc], "initWithBundleIdentifier:bundleURL:", v5, v6);

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id *__HMDApplicationRegistryApplicationWithBundleIdentifier(id *a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD v6[4];
  id v7;

  v3 = a2;
  if (a1)
  {
    objc_msgSend(a1[2], "allObjects");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = ____HMDApplicationRegistryApplicationWithBundleIdentifier_block_invoke;
    v6[3] = &unk_1E89B3A98;
    v7 = v3;
    objc_msgSend(v4, "hmf_objectPassingTest:", v6);
    a1 = (id *)objc_claimAutoreleasedReturnValue();

  }
  return a1;
}

void sub_1CD6EF550(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6EF7F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6F02FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6F0998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD6F4D7C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1CD6F7C4C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6F8128(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6F833C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6F8514(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6F8888(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6F8964(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6F8A38(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6F9110(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6F9314(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6F9570(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6FC6A4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD6FC7DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __transactionDeviceUpdated(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  int v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  NSObject *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  NSObject *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  NSObject *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id obj;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  id v44;
  uint8_t buf[4];
  void *v46;
  __int16 v47;
  void *v48;
  _BYTE v49[128];
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v7, "transactionResult");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "modelObjectWithChangeType:version:", 0, 4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v10 = v9;
  else
    v10 = 0;
  v11 = v10;

  v38 = v6;
  if (v11)
  {
    v44 = 0;
    v12 = objc_msgSend(v11, "diff:differingFields:", v6, &v44);
    v13 = v44;
    v14 = v13;
    if (!v12)
      goto LABEL_38;
    v36 = v11;
    v37 = v7;
    v42 = 0u;
    v43 = 0u;
    v40 = 0u;
    v41 = 0u;
    obj = v13;
    v15 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v40, v49, 16);
    if (!v15)
      goto LABEL_32;
    v16 = v15;
    v17 = *(_QWORD *)v41;
    while (1)
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v41 != v17)
          objc_enumerationMutation(obj);
        v19 = *(void **)(*((_QWORD *)&v40 + 1) + 8 * v18);
        v20 = (void *)MEMORY[0x1D17BA0A0]();
        v21 = v5;
        HMFGetOSLogHandle();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v46 = v23;
          v47 = 2112;
          v48 = v19;
          _os_log_impl(&dword_1CD062000, v22, OS_LOG_TYPE_INFO, "%{public}@Updating device information for %@", buf, 0x16u);

          v6 = v38;
        }

        objc_autoreleasePoolPop(v20);
        if (objc_msgSend(v19, "isEqualToString:", CFSTR("handles")))
        {
          objc_msgSend(v6, "deviceHandles");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          if (v24)
            objc_msgSend(v21, "setHandles:", v24);
          goto LABEL_25;
        }
        if (objc_msgSend(v19, "isEqualToString:", CFSTR("name")))
        {
          objc_msgSend(v6, "name");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v25 = (void *)objc_msgSend(v24, "copy");
          objc_msgSend(v21, "setName:", v25);
LABEL_24:

LABEL_25:
          objc_msgSend(v8, "markChanged");
          goto LABEL_26;
        }
        if (objc_msgSend(v19, "isEqualToString:", CFSTR("version")))
        {
          objc_msgSend(v6, "version");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v25 = (void *)objc_msgSend(v24, "copy");
          objc_msgSend(v21, "setVersion:", v25);
          goto LABEL_24;
        }
        if (objc_msgSend(v19, "isEqualToString:", CFSTR("productInfo")))
        {
          objc_msgSend(v6, "productInfo");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v25 = (void *)objc_msgSend(v24, "copy");
          objc_msgSend(v21, "setProductInfo:", v25);
          goto LABEL_24;
        }
        if (objc_msgSend(v19, "isEqualToString:", CFSTR("rpIdentity")))
        {
          objc_msgSend(v6, "rpIdentity");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v25 = (void *)objc_msgSend(v24, "copy");
          objc_msgSend(v21, "setRpIdentity:", v25);
          goto LABEL_24;
        }
        v26 = (void *)MEMORY[0x1D17BA0A0]();
        v27 = v21;
        HMFGetOSLogHandle();
        v28 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v46 = v29;
          v47 = 2112;
          v48 = v19;
          _os_log_impl(&dword_1CD062000, v28, OS_LOG_TYPE_ERROR, "%{public}@Unexpected field! -- changedField: %@", buf, 0x16u);

          v6 = v38;
        }

        objc_autoreleasePoolPop(v26);
LABEL_26:
        ++v18;
      }
      while (v16 != v18);
      v30 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v40, v49, 16);
      v16 = v30;
      if (!v30)
      {
LABEL_32:
        v14 = obj;

        if (objc_msgSend(v8, "changed"))
        {
          objc_msgSend(v5, "setDirty:", 1);
          objc_msgSend(v8, "backingStore");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          __HMDDeviceMarkDirty(v5, v31);

        }
        v11 = v36;
        v7 = v37;
        goto LABEL_38;
      }
    }
  }
  v32 = (void *)MEMORY[0x1D17BA0A0]();
  v33 = v5;
  HMFGetOSLogHandle();
  v34 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
  {
    HMFGetLogIdentifier();
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    v46 = v35;
    _os_log_impl(&dword_1CD062000, v34, OS_LOG_TYPE_ERROR, "%{public}@Unable to retrieve device model for updated device", buf, 0xCu);

  }
  objc_autoreleasePoolPop(v32);
  objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", -1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "respondWithError:", v14);
  v6 = v38;
LABEL_38:

}

void __HMDDeviceMarkDirty(void *a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;

  v3 = a1;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = ____HMDDeviceMarkDirty_block_invoke;
  v5[3] = &unk_1E89C2350;
  v6 = v3;
  v4 = v3;
  objc_msgSend(a2, "submitBlock:", v5);

}

void ____idsIdentifierHashFromIDSIdentifier_block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDString:", CFSTR("A08F6CA5-EC1E-4DD6-A068-377BA45247B6"));
  v1 = (void *)__idsIdentifierHashFromIDSIdentifier_namespace;
  __idsIdentifierHashFromIDSIdentifier_namespace = v0;

}

void __deregisterForAccountHandleUpdates(void *a1)
{
  void *v1;
  id v2;
  id v3;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0CB37D0];
    v2 = a1;
    objc_msgSend(v1, "defaultCenter");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "removeObserver:name:object:", v2, CFSTR("HMDAccountHandlesUpdatedNotification"), 0);

  }
}

id __deviceHandlesForAccount(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  int v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  _HMDGlobalDeviceHandle *v19;
  void *v20;
  _HMDGlobalDeviceHandle *v21;
  HMDDeviceHandle *v22;
  id v24;
  id v25;
  id obj;
  id v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[4];
  id v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v27 = a3;
  v7 = 0;
  if (v5 && v6)
  {
    v8 = objc_msgSend(v6, "hmf_isEmpty");
    if (!v27 || v8)
    {
      v7 = v5;
    }
    else
    {
      v32[0] = MEMORY[0x1E0C809B0];
      v32[1] = 3221225472;
      v32[2] = ____deviceHandlesForAccount_block_invoke;
      v32[3] = &unk_1E89B3F50;
      v33 = v6;
      objc_msgSend(v5, "hmf_objectsPassingTest:", v32);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v9, "hmf_isEmpty"))
      {
        v7 = v5;
      }
      else
      {
        v24 = v6;
        v25 = v5;
        v10 = (void *)objc_msgSend(v5, "mutableCopy");
        v28 = 0u;
        v29 = 0u;
        v30 = 0u;
        v31 = 0u;
        obj = v9;
        v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v28, v34, 16);
        if (v11)
        {
          v12 = v11;
          v13 = *(_QWORD *)v29;
          do
          {
            for (i = 0; i != v12; ++i)
            {
              if (*(_QWORD *)v29 != v13)
                objc_enumerationMutation(obj);
              v15 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * i);
              objc_msgSend(v15, "internal");
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0)
                v17 = v16;
              else
                v17 = 0;
              v18 = v17;

              if (v18)
              {
                v19 = [_HMDGlobalDeviceHandle alloc];
                objc_msgSend(v18, "pushToken");
                v20 = (void *)objc_claimAutoreleasedReturnValue();
                v21 = -[_HMDGlobalDeviceHandle initWithPushToken:accountHandle:](v19, "initWithPushToken:accountHandle:", v20, v27);

                v22 = -[HMDDeviceHandle initWithInternal:]([HMDDeviceHandle alloc], "initWithInternal:", v21);
                if (v22)
                {
                  objc_msgSend(v10, "removeObject:", v15);
                  objc_msgSend(v10, "addObject:", v22);
                }

              }
            }
            v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v28, v34, 16);
          }
          while (v12);
        }

        v7 = (id)objc_msgSend(v10, "copy");
        v6 = v24;
        v5 = v25;
      }

    }
  }

  return v7;
}

uint64_t ____deviceHandlesForAccount_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = a2;
  if (objc_msgSend(v3, "isGlobal"))
  {
    objc_msgSend(v3, "accountHandle");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
      v5 = objc_msgSend(*(id *)(a1 + 32), "containsObject:", v4) ^ 1;
    else
      v5 = 1;

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_1CD6FFDD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7017F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id *location,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,id a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  _Block_object_dispose(&a69, 8);
  _Block_object_dispose(&STACK[0x300], 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__113972(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__113973(uint64_t a1)
{

}

void sub_1CD703640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD705304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void sub_1CD70661C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void bindStringSQLite3(sqlite3_stmt *a1, int a2, void *a3, _QWORD *a4)
{
  id v7;
  void *v8;
  int v9;
  id v10;
  id v11;

  v7 = a3;
  v8 = v7;
  if (!*a4)
  {
    v11 = v7;
    if (v7)
      v9 = sqlite3_bind_text(a1, a2, (const char *)objc_msgSend(objc_retainAutorelease(v7), "UTF8String"), -1, 0);
    else
      v9 = sqlite3_bind_null(a1, a2);
    v8 = v11;
    if (v9)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Statement:", a1);
      v10 = (id)objc_claimAutoreleasedReturnValue();
      v8 = v11;
      *a4 = v10;
    }
  }

}

id execSQLite3(sqlite3_stmt *a1)
{
  void *v2;

  if (sqlite3_step(a1) == 101)
  {
    v2 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Statement:", a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  if (sqlite3_reset(a1) && !v2)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Statement:", a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

void bindDataSQLite3(sqlite3_stmt *a1, int a2, void *a3, _QWORD *a4)
{
  id v7;
  void *v8;
  id v9;
  int v10;
  id v11;
  id v12;

  v7 = a3;
  v8 = v7;
  if (!*a4)
  {
    v12 = v7;
    if (v7)
    {
      if (objc_msgSend(v7, "length"))
      {
        v9 = objc_retainAutorelease(v12);
        v10 = sqlite3_bind_blob64(a1, a2, (const void *)objc_msgSend(v9, "bytes"), objc_msgSend(v9, "length"), 0);
      }
      else
      {
        v10 = sqlite3_bind_zeroblob(a1, a2, 0);
      }
    }
    else
    {
      v10 = sqlite3_bind_null(a1, a2);
    }
    v8 = v12;
    if (v10)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Statement:", a1);
      v11 = (id)objc_claimAutoreleasedReturnValue();
      v8 = v12;
      *a4 = v11;
    }
  }

}

sqlite3_int64 steplastrowresetSQLite3(sqlite3_stmt *a1, _QWORD *a2)
{
  sqlite3 *v4;
  sqlite3_int64 insert_rowid;
  void *v6;

  if (sqlite3_step(a1) != 101)
  {
    if (a2)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Statement:", a1);
      *a2 = (id)objc_claimAutoreleasedReturnValue();
      if (sqlite3_reset(a1))
      {
        v6 = (void *)MEMORY[0x1E0CB35C8];
        goto LABEL_8;
      }
    }
    else
    {
      sqlite3_reset(a1);
    }
    return 0;
  }
  v4 = sqlite3_db_handle(a1);
  insert_rowid = sqlite3_last_insert_rowid(v4);
  if (sqlite3_reset(a1))
  {
    if (a2)
    {
      v6 = (void *)MEMORY[0x1E0CB35C8];
LABEL_8:
      objc_msgSend(v6, "errorWithSQLite3Statement:", a1);
      insert_rowid = 0;
      *a2 = (id)objc_claimAutoreleasedReturnValue();
      return insert_rowid;
    }
    return 0;
  }
  return insert_rowid;
}

sqlite3_stmt *bindIntSQLite3(sqlite3_stmt *result, int a2, sqlite3_int64 a3, _QWORD *a4)
{
  sqlite3_stmt *v5;

  if (!*a4)
  {
    v5 = result;
    result = (sqlite3_stmt *)sqlite3_bind_int64(result, a2, a3);
    if ((_DWORD)result)
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Statement:", v5);
      result = (sqlite3_stmt *)(id)objc_claimAutoreleasedReturnValue();
      *a4 = result;
    }
  }
  return result;
}

id _handleFetchWithRawCallback(sqlite3_stmt *a1, void *a2)
{
  uint64_t (**v3)(id, void *, sqlite3_int64, void *, void *, _QWORD);
  int v4;
  void *v5;
  sqlite3_int64 v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = a2;
  sqlite3_reset(a1);
  while (1)
  {
    v4 = sqlite3_step(a1);
    if (v4 != 100)
      break;
    objc_msgSend(MEMORY[0x1E0C99D50], "dataWithSQLite3Column:column:", a1, 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = sqlite3_column_int64(a1, 2);
    objc_msgSend(MEMORY[0x1E0C99D50], "dataWithSQLite3Column:column:", a1, 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithSQLite3Column:column:", a1, 3);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v6) = v3[2](v3, v5, v6, v7, v8, 0);

    if ((v6 & 1) == 0)
      goto LABEL_6;
  }
  if (v4 == 101)
  {
LABEL_6:
    v9 = 0;
    goto LABEL_8;
  }
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Statement:", a1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  ((uint64_t (**)(id, void *, sqlite3_int64, void *, void *, void *))v3)[2](v3, 0, 0, 0, 0, v9);
LABEL_8:
  sqlite3_reset(a1);

  return v9;
}

id selectSQLite3(sqlite3 *a1, const char *a2, void *a3, _QWORD *a4)
{
  id v7;
  void *v8;
  void *v9;
  id v10;
  int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  const char *v16;
  void *v17;
  void *v18;
  id v19;
  char isKindOfClass;
  void *v21;
  id v22;
  id v23;
  char v24;
  void *v25;
  id v26;
  char v27;
  void *v28;
  id v29;
  void *v30;
  objc_class *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  const char *v55;
  const char *v56;
  id v57;
  sqlite3_stmt *ppStmt;
  _QWORD v59[3];
  _QWORD v60[3];
  _QWORD v61[3];
  _QWORD v62[3];
  _QWORD v63[3];
  _QWORD v64[5];

  v64[3] = *MEMORY[0x1E0C80C00];
  v7 = a3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = 0;
  v10 = 0;
  ppStmt = 0;
  if (!*a4)
  {
    if (sqlite3_prepare_v2(a1, a2, -1, &ppStmt, 0))
    {
      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Context:statement:", a1, a2);
      v9 = 0;
      v10 = 0;
      *a4 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_48;
    }
    v11 = sqlite3_bind_parameter_count(ppStmt);
    if (v11 >= 2)
    {
      v12 = v11;
      v13 = 1;
      v14 = 0x1E0CB3000uLL;
      v54 = *MEMORY[0x1E0D27FC8];
      v55 = a2;
      while (1)
      {
        if (*a4)
          goto LABEL_46;
        v15 = sqlite3_bind_parameter_name(ppStmt, v13);
        if (!v15)
        {
          v42 = (void *)MEMORY[0x1E0CB35C8];
          v64[0] = &unk_1E8B33C48;
          v63[0] = CFSTR("extcode");
          v63[1] = CFSTR("text");
          objc_msgSend(*(id *)(v14 + 2368), "stringWithFormat:", CFSTR("statement cannot contain nameless parameters (%d is nameless)"), v13);
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          v64[1] = v43;
          v63[2] = CFSTR("statement");
          objc_msgSend(*(id *)(v14 + 2368), "stringWithUTF8String:", a2);
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          v64[2] = v44;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v64, v63, 3);
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v42, "errorWithDomain:code:userInfo:", v54, 3, v45);
          *a4 = (id)objc_claimAutoreleasedReturnValue();

          goto LABEL_46;
        }
        v16 = v15;
        objc_msgSend(*(id *)(v14 + 2368), "stringWithUTF8String:", v15);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "objectForKey:", v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();

        if (v18)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
            break;
        }
        sqlite3_bind_null(ppStmt, v13);
LABEL_29:

        v13 = (v13 + 1);
        if (v12 == (_DWORD)v13)
          goto LABEL_32;
      }
      v19 = v18;
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      if ((isKindOfClass & 1) != 0)
        v21 = v19;
      else
        v21 = 0;
      v57 = v21;

      if ((isKindOfClass & 1) != 0)
      {
        bindDataSQLite3(ppStmt, v13, v19, a4);
LABEL_16:
        v22 = 0;
        v23 = 0;
LABEL_28:

        v14 = 0x1E0CB3000;
        goto LABEL_29;
      }
      v22 = v19;
      objc_opt_class();
      v24 = objc_opt_isKindOfClass();
      if ((v24 & 1) != 0)
        v25 = v22;
      else
        v25 = 0;
      v26 = v25;

      if ((v24 & 1) != 0)
      {
        bindStringSQLite3(ppStmt, v13, v22, a4);
        v23 = 0;
      }
      else
      {
        v23 = v22;
        objc_opt_class();
        v27 = objc_opt_isKindOfClass();
        if ((v27 & 1) != 0)
          v28 = v23;
        else
          v28 = 0;
        v29 = v28;

        if ((v27 & 1) == 0)
        {
          v52 = (void *)MEMORY[0x1E0CB35C8];
          v62[0] = &unk_1E8B33C48;
          v61[0] = CFSTR("extcode");
          v61[1] = CFSTR("text");
          v30 = (void *)MEMORY[0x1E0CB3940];
          v31 = (objc_class *)objc_opt_class();
          NSStringFromClass(v31);
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "stringWithFormat:", CFSTR("bind parameter %s is not of a recognized type %@ is not a (NSNull, NSData, NSString, or NSNumber)"), v16, v53);
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          v62[1] = v32;
          v61[2] = CFSTR("statement");
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v55);
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          v62[2] = v33;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v62, v61, 3);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v52, "errorWithDomain:code:userInfo:", v54, 3, v34);
          *a4 = (id)objc_claimAutoreleasedReturnValue();

          a2 = v55;
          goto LABEL_16;
        }
        bindIntSQLite3(ppStmt, v13, objc_msgSend(v23, "longLongValue"), a4);
        v22 = 0;
      }
      a2 = v55;
      goto LABEL_28;
    }
LABEL_32:
    if (*a4)
    {
LABEL_46:
      v9 = 0;
LABEL_47:
      v10 = 0;
    }
    else
    {
      v56 = a2;
      v35 = 0;
      v36 = sqlite3_column_count(ppStmt);
      while (1)
      {
        v37 = sqlite3_step(ppStmt);
        if (v37 != 100)
          break;
        objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", v36);
        v9 = (void *)objc_claimAutoreleasedReturnValue();

        if ((int)v36 >= 1)
        {
          v38 = 0;
          do
          {
            v39 = sqlite3_column_type(ppStmt, v38);
            switch((int)v39)
            {
              case 1:
                objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", sqlite3_column_int64(ppStmt, v38));
                v40 = objc_claimAutoreleasedReturnValue();
                break;
              case 2:
                objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", sqlite3_column_double(ppStmt, v38));
                v40 = objc_claimAutoreleasedReturnValue();
                break;
              case 3:
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithSQLite3Column:column:", ppStmt, v38);
                v40 = objc_claimAutoreleasedReturnValue();
                break;
              case 4:
                objc_msgSend(MEMORY[0x1E0C99D50], "dataWithSQLite3Column:column:", ppStmt, v38);
                v40 = objc_claimAutoreleasedReturnValue();
                break;
              case 5:
                objc_msgSend(MEMORY[0x1E0C99E38], "null");
                v40 = objc_claimAutoreleasedReturnValue();
                break;
              default:
                v47 = (void *)MEMORY[0x1E0CB35C8];
                v48 = *MEMORY[0x1E0D27FC8];
                v60[0] = &unk_1E8B33C48;
                v59[0] = CFSTR("extcode");
                v59[1] = CFSTR("text");
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("column %d is of SQLite3 type %d (not recognized)"), v38, v39);
                v49 = (void *)objc_claimAutoreleasedReturnValue();
                v60[1] = v49;
                v59[2] = CFSTR("statement");
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v56);
                v50 = (void *)objc_claimAutoreleasedReturnValue();
                v60[2] = v50;
                objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v60, v59, 3);
                v51 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v47, "errorWithDomain:code:userInfo:", v48, 3, v51);
                *a4 = (id)objc_claimAutoreleasedReturnValue();

                goto LABEL_47;
            }
            v41 = (void *)v40;
            objc_msgSend(v9, "addObject:", v40);

            v38 = (v38 + 1);
          }
          while ((_DWORD)v36 != (_DWORD)v38);
        }
        objc_msgSend(v8, "addObject:", v9);
        v35 = v9;
      }
      if (v37 != 101)
      {
        objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Statement:", ppStmt);
        *a4 = (id)objc_claimAutoreleasedReturnValue();
      }
      sqlite3_finalize(ppStmt);
      if (*a4)
        v10 = 0;
      else
        v10 = v8;
      v9 = v35;
    }
  }
LABEL_48:

  return v10;
}

id runSQLite3(sqlite3 *a1, const char *a2)
{
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  int v10;
  void *v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  const char *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  if (sqlite3_exec(a1, a2, 0, 0, 0))
  {
    v4 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Context:", a1);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138543874;
      v11 = v6;
      v12 = 2112;
      v13 = v7;
      v14 = 2080;
      v15 = a2;
      _os_log_impl(&dword_1CD062000, v5, OS_LOG_TYPE_ERROR, "%{public}@Got Error %@ on %s", (uint8_t *)&v10, 0x20u);

    }
    objc_autoreleasePoolPop(v4);
    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Context:statement:", a1, a2);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }
  return v8;
}

sqlite3_stmt *prepareSQLite3(sqlite3 *a1, const char *a2, _QWORD *a3)
{
  id v6;
  sqlite3_stmt *result;
  sqlite3_stmt *ppStmt;

  ppStmt = 0;
  if (!sqlite3_prepare_v2(a1, a2, -1, &ppStmt, 0))
    return ppStmt;
  if (!a3)
    return 0;
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithSQLite3Context:statement:", a1, a2);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  result = 0;
  *a3 = v6;
  return result;
}

uint64_t __Block_byref_object_copy__114852(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__114853(uint64_t a1)
{

}

uint64_t AWDHomeKitHomeCameraConfigurationsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  AWDHomeKitCameraUserSettings *v17;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  BOOL v37;
  uint64_t v38;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(AWDHomeKitCameraUserSettings);
        objc_msgSend((id)a1, "addHomeKitCameraUserSettings:", v17);
        if (PBReaderPlaceMark() && AWDHomeKitCameraUserSettingsReadFrom((uint64_t)v17, a2))
          goto LABEL_26;
        goto LABEL_63;
      case 2u:
        v17 = objc_alloc_init(AWDHomeKitCameraSettings);
        objc_msgSend((id)a1, "addHomeKitCameraSettings:", v17);
        if (PBReaderPlaceMark() && (AWDHomeKitCameraSettingsReadFrom((uint64_t)v17, a2) & 1) != 0)
        {
LABEL_26:
          PBReaderRecallMark();

LABEL_61:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_63:

        return 0;
      case 3u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 36) |= 1u;
        while (2)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              v14 = v20++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_51:
        *(_DWORD *)(a1 + 8) = v21;
        goto LABEL_61;
      case 4u:
        v25 = 0;
        v26 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + 36) |= 2u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                v27 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v27 = 0;
LABEL_55:
        v37 = v27 != 0;
        v38 = 32;
        goto LABEL_60;
      case 5u:
        v31 = 0;
        v32 = 0;
        v33 = 0;
        *(_BYTE *)(a1 + 36) |= 4u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              v14 = v32++ >= 9;
              if (v14)
              {
                v33 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v33 = 0;
LABEL_59:
        v37 = v33 != 0;
        v38 = 33;
LABEL_60:
        *(_BYTE *)(a1 + v38) = v37;
        goto LABEL_61;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_61;
    }
  }
}

void sub_1CD7108AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void meDeviceChangedNotificationCallback()
{
  id v0;

  +[HMDFMFHandler sharedHandler](HMDFMFHandler, "sharedHandler");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "meDeviceChanged");

}

void fmfDevicesChangedNotificationCallback()
{
  id v0;

  +[HMDFMFHandler sharedHandler](HMDFMFHandler, "sharedHandler");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "fmfDevicesChanged");

}

void sub_1CD713458(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  id *v5;
  uint64_t v6;

  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 128));
  _Unwind_Resume(a1);
}

void sub_1CD714514(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1CD715154(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD715D34(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD715F20(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD716194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7175FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1CD71ACAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1CD71B5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD71BA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__115957(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__115958(uint64_t a1)
{

}

void sub_1CD7211F4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7213EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD721534(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD722C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____handleFinishedUnarchive_block_invoke(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  NSObject *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  BOOL v25;
  void *v26;
  id v27;
  NSObject *v28;
  NSObject *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  NSObject *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  NSObject *v49;
  NSObject *v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  NSObject *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  uint8_t buf[4];
  void *v66;
  __int16 v67;
  id v68;
  uint64_t v69;

  v69 = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(*(id *)(a1 + 32), "state");
  v3 = (void *)MEMORY[0x1D17BA0A0]();
  v4 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v2 == 3)
  {
    if (v6)
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      v66 = v7;
      v67 = 2112;
      v68 = v8;
      _os_log_impl(&dword_1CD062000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Finished unarchive with error: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
    v9 = *(void **)(a1 + 32);
    if (*(_QWORD *)(a1 + 40))
    {
      objc_msgSend(v9, "setState:", 2);
LABEL_40:
      objc_msgSend(*(id *)(a1 + 32), "setExtractor:", 0);
      return;
    }
    v11 = v9;
    v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D28628]), "initWithName:", CFSTR("HMDSoftwareUpdateDocumentationAsset.validation"));
    v13 = (void *)MEMORY[0x1D17BA0A0]();
    v14 = (void *)MEMORY[0x1E0CB34D0];
    objc_msgSend(v11, "bundleURL");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "bundleWithURL:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16)
    {
      v63 = v13;
      v64 = v12;
      objc_msgSend(MEMORY[0x1E0CBA8A8], "localizationsForBundle:", v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_msgSend(v17, "count");
      v19 = (void *)MEMORY[0x1D17BA0A0]();
      v20 = v11;
      HMFGetOSLogHandle();
      v21 = objc_claimAutoreleasedReturnValue();
      v22 = v21;
      if (v18)
      {
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v66 = v23;
          v67 = 2112;
          v68 = v17;
          _os_log_impl(&dword_1CD062000, v22, OS_LOG_TYPE_INFO, "%{public}@Available localizations: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v19);
        v24 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CBA8A8]), "initWithBundle:", v16);
        v25 = v24 != 0;
        v26 = (void *)MEMORY[0x1D17BA0A0]();
        v27 = v20;
        HMFGetOSLogHandle();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = v28;
        if (v24)
        {
          if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
          {
            HMFGetLogIdentifier();
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v66 = v30;
            v67 = 2112;
            v68 = v24;
            _os_log_impl(&dword_1CD062000, v29, OS_LOG_TYPE_INFO, "%{public}@Cached documentation: %@", buf, 0x16u);

          }
          objc_autoreleasePoolPop(v26);
          v31 = 0;
        }
        else
        {
          if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v66 = v40;
            v67 = 2112;
            v68 = v16;
            _os_log_impl(&dword_1CD062000, v29, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to parse documentation for asset bundle: %@", buf, 0x16u);

          }
          objc_autoreleasePoolPop(v26);
          objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 2);
          v31 = (void *)objc_claimAutoreleasedReturnValue();
        }

      }
      else
      {
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v66 = v39;
          v67 = 2112;
          v68 = v16;
          _os_log_impl(&dword_1CD062000, v22, OS_LOG_TYPE_DEFAULT, "%{public}@No available localization for asset bundle: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v19);
        objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 2);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v25 = 0;
      }
      v13 = v63;
      v12 = v64;

    }
    else
    {
      v32 = (void *)MEMORY[0x1D17BA0A0]();
      v33 = v11;
      HMFGetOSLogHandle();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v35 = v12;
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "bundleURL");
        v37 = v13;
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v66 = v36;
        v67 = 2112;
        v68 = v38;
        _os_log_impl(&dword_1CD062000, v34, OS_LOG_TYPE_DEFAULT, "%{public}@Unable to create bundle from: %@", buf, 0x16u);

        v13 = v37;
        v12 = v35;
      }

      objc_autoreleasePoolPop(v32);
      objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 52);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = 0;
    }

    objc_autoreleasePoolPop(v13);
    v41 = objc_retainAutorelease(v31);

    v42 = v41;
    v43 = v42;
    if (v25)
    {
      v44 = v42;
    }
    else
    {
      v45 = *(id *)(a1 + 32);
      v46 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CBA8A8]), "initWithAsset:", v45);
      v47 = (void *)MEMORY[0x1D17BA0A0]();
      v48 = v45;
      HMFGetOSLogHandle();
      v49 = objc_claimAutoreleasedReturnValue();
      v50 = v49;
      if (v46)
      {
        if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v66 = v51;
          v67 = 2112;
          v68 = v46;
          _os_log_impl(&dword_1CD062000, v50, OS_LOG_TYPE_INFO, "%{public}@Cached documentation: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v47);
        v52 = v43;
      }
      else
      {
        if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v48, "URL");
          v54 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v66 = v53;
          v67 = 2112;
          v68 = v54;
          _os_log_impl(&dword_1CD062000, v50, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to parse documentation from asset url: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v47);
        objc_msgSend(MEMORY[0x1E0CB35C8], "hmfErrorWithCode:", 2);
        v52 = (id)objc_claimAutoreleasedReturnValue();
      }

      v44 = v52;
      if (!v46)
      {
        v57 = (void *)MEMORY[0x1D17BA0A0]();
        v58 = *(id *)(a1 + 32);
        HMFGetOSLogHandle();
        v59 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v60 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v66 = v60;
          v67 = 2112;
          v68 = v44;
          _os_log_impl(&dword_1CD062000, v59, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to validate asset with error: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v57);
        objc_msgSend(*(id *)(a1 + 32), "setState:", 0);
        objc_msgSend(*(id *)(a1 + 32), "increaseDownloadRetryCount");
        objc_msgSend(*(id *)(a1 + 32), "fileManager");
        v61 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "bundleURL");
        v62 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v61, "removeItemAtURL:error:", v62, 0);

        goto LABEL_39;
      }
    }
    objc_msgSend(*(id *)(a1 + 32), "setState:", 4);
    objc_msgSend(*(id *)(a1 + 32), "resetDownloadRetryCount");
LABEL_39:
    objc_msgSend(*(id *)(a1 + 32), "fileManager");
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "archiveURL");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "removeItemAtURL:error:", v56, 0);

    goto LABEL_40;
  }
  if (v6)
  {
    HMFGetLogIdentifier();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    v66 = v10;
    _os_log_impl(&dword_1CD062000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Unable to finish unarchive, not currently unarchiving", buf, 0xCu);

  }
  objc_autoreleasePoolPop(v3);
}

void sub_1CD723CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____handleStartedUnarchive_block_invoke(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)MEMORY[0x1D17BA0A0]();
  v4 = *(id *)(a1 + 40);
  HMFGetOSLogHandle();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v2)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = *(_QWORD *)(a1 + 32);
      v12 = 138543618;
      v13 = v7;
      v14 = 2112;
      v15 = v8;
      _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to start unarchive with error: %@", (uint8_t *)&v12, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
    objc_msgSend(*(id *)(a1 + 40), "cancelUnarchive");
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543362;
      v13 = v9;
      _os_log_impl(&dword_1CD062000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Started unarchive", (uint8_t *)&v12, 0xCu);

    }
    objc_autoreleasePoolPop(v3);
    objc_msgSend(*(id *)(a1 + 40), "extractor");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setExtractorDelegate:", *(_QWORD *)(a1 + 40));

    objc_msgSend(*(id *)(a1 + 40), "archivedFileStream");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "open");

    __processNextArchivedData(*(void **)(a1 + 40));
  }
}

void __processNextArchivedData(void *a1)
{
  _QWORD *v1;
  void *v2;
  NSObject *v3;
  _QWORD block[4];
  _QWORD *v5;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v3 = v1[2];
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ____processNextArchivedData_block_invoke;
    block[3] = &unk_1E89C2730;
    v5 = v1;
    dispatch_async(v3, block);

  }
}

void ____processNextArchivedData_block_invoke(uint64_t a1)
{
  id *v2;
  void *v3;
  int v4;
  void *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  id *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id location;
  uint8_t buf[4];
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v2 = (id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "archivedFileStream");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "hasBytesAvailable");

  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = *v2;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v4)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v21 = v9;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Reading next chunk from the archive", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
    v11 = *(void **)(a1 + 32);
    v10 = (id *)(a1 + 32);
    objc_msgSend(v11, "archivedFileStream");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "read:maxLength:", buf, 4096);

    objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytes:length:", buf, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_initWeak(&location, *v10);
    objc_msgSend(*v10, "extractor");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = ____processNextArchivedData_block_invoke_367;
    v17[3] = &unk_1E89B4658;
    objc_copyWeak(&v18, &location);
    objc_msgSend(v15, "supplyBytes:withCompletionBlock:", v14, v17);

    objc_destroyWeak(&v18);
    objc_destroyWeak(&location);

  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v21 = v16;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_INFO, "%{public}@Reached end of input stream", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(*(id *)(a1 + 32), "finishUnarchive");
  }
}

void sub_1CD724220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____processNextArchivedData_block_invoke_367(uint64_t a1, void *a2, int a3)
{
  id v5;
  id WeakRetained;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7 = WeakRetained;
  if (v5)
  {
    v8 = (void *)MEMORY[0x1D17BA0A0]();
    v9 = v7;
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543618;
      v13 = v11;
      v14 = 2112;
      v15 = v5;
      _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_INFO, "%{public}@Failed to append data with error: %@", (uint8_t *)&v12, 0x16u);

    }
    objc_autoreleasePoolPop(v8);
    objc_msgSend(v9, "cancelUnarchive");
  }
  else if (a3)
  {
    objc_msgSend(WeakRetained, "finishUnarchive");
  }
  else
  {
    __processNextArchivedData();
  }

}

id __resourceBundleForBundle(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  int v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "URLForResource:withExtension:", CFSTR("AssetData"), 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithURL:", v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = (void *)MEMORY[0x1D17BA0A0]();
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = 138543362;
      v9 = v6;
      _os_log_impl(&dword_1CD062000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to find resource bundle", (uint8_t *)&v8, 0xCu);

    }
    objc_autoreleasePoolPop(v4);
    v3 = 0;
  }

  return v3;
}

id __htmlDocumentForResource(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  id v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v8 = v6;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v33, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v24;
    while (2)
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v24 != v11)
          objc_enumerationMutation(v8);
        objc_msgSend(v5, "URLForResource:withExtension:subdirectory:localization:", v7, CFSTR("html"), 0, *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * v12));
        v13 = objc_claimAutoreleasedReturnValue();
        if (v13)
        {
          v15 = (void *)v13;
          v22 = 0;
          v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CBA520]), "initWithURL:error:", v13, &v22);
          v16 = v22;
          if (!v14)
          {
            v17 = (void *)MEMORY[0x1D17BA0A0]();
            HMFGetOSLogHandle();
            v18 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
            {
              HMFGetLogIdentifier();
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "path");
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138543874;
              v28 = v19;
              v29 = 2112;
              v30 = v20;
              v31 = 2112;
              v32 = v16;
              _os_log_impl(&dword_1CD062000, v18, OS_LOG_TYPE_INFO, "%{public}@Unable to load document, %@, with error: %@", buf, 0x20u);

            }
            objc_autoreleasePoolPop(v17);
          }

          goto LABEL_15;
        }
        ++v12;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v33, 16);
      if (v10)
        continue;
      break;
    }
  }
  v14 = 0;
LABEL_15:

  return v14;
}

void sub_1CD72D590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  os_unfair_lock_s *v18;

  os_unfair_lock_unlock(v18);
  _Unwind_Resume(a1);
}

void sub_1CD72D970(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD72DA4C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD72DBB8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD72DC30(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD72DF2C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD72E090(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD738A00(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__119422(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__119423(uint64_t a1)
{

}

void sub_1CD73A8F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location,id a31)
{
  id *v31;
  id *v32;
  id *v33;
  uint64_t v34;

  objc_destroyWeak(v33);
  objc_destroyWeak(v31);
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a31);
  objc_destroyWeak((id *)(v34 - 160));
  _Unwind_Resume(a1);
}

void sub_1CD73B998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD73C1B8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

uint64_t hasAssistantHashingKeyChanged()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v0 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D286C0]), "initWithKey:options:domain:defaultValue:", CFSTR("HMDAssistantLastHashingKey"), 0, CFSTR("com.apple.homed"), 0);

  objc_msgSend(v0, "stringValue");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  +[HMDHelper sharedHelper](HMDHelper, "sharedHelper");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "hashedRouteIDForIdentifier:", CFSTR("A77C551E-C3FA-414E-ACD8-A7DF3D64E9D6"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = HMFEqualObjects() ^ 1;
  return v4;
}

void sub_1CD73C354(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void __HMDLostModeManagerLostModeChangeNotification(uint64_t a1, void *a2)
{
  void *v3;
  os_unfair_lock_s *v4;
  void *v5;
  int v6;
  void *v7;
  os_unfair_lock_s *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1D17BA0A0]();
  v4 = a2;
  if (v4)
  {
    os_unfair_lock_lock_with_options();
    objc_msgSend(MEMORY[0x1E0D21380], "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "lostModeIsActive");

    if (LOBYTE(v4[3]._os_unfair_lock_opaque) == v6)
    {
      os_unfair_lock_unlock(v4 + 2);
    }
    else
    {
      LOBYTE(v4[3]._os_unfair_lock_opaque) = v6;
      os_unfair_lock_unlock(v4 + 2);
      v7 = (void *)MEMORY[0x1D17BA0A0]();
      v8 = v4;
      HMFGetOSLogHandle();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        HMFBooleanToString();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = 138543618;
        v14 = v10;
        v15 = 2112;
        v16 = v11;
        _os_log_impl(&dword_1CD062000, v9, OS_LOG_TYPE_DEFAULT, "%{public}@Received notification lost mode is active: %@", (uint8_t *)&v13, 0x16u);

      }
      objc_autoreleasePoolPop(v7);
      objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "postNotificationName:object:", CFSTR("HMDLostModeManagerUpdatedNotification"), v8);

    }
  }

  objc_autoreleasePoolPop(v3);
}

void sub_1CD73CCBC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDLostModeManagerExitLostModeWithAuthCompleteNotification(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  int v4;
  void *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  objc_msgSend(MEMORY[0x1E0D21380], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "needsLostModeExitAuth");

  v5 = (void *)MEMORY[0x1D17BA0A0]();
  v6 = v2;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v4)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543362;
      v13 = v9;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_INFO, "%{public}@Received lost mode exit auth notification, but findmy indicates device hasn't exited lost mode with auth", (uint8_t *)&v12, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543362;
      v13 = v10;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_DEFAULT, "%{public}@Sending lost mode exit with auth complete notification", (uint8_t *)&v12, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "postNotificationName:object:", CFSTR("HMDLostModeManagerDidExitLostModeWithAuthCompleteNotification"), v6);

  }
}

void sub_1CD74128C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD741400(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD741584(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD741708(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD741930(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD741AC0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD742104(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD742218(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD742B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;
  uint64_t v22;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v22 - 128));
  _Unwind_Resume(a1);
}

void __deleteAccountModel(void *a1, void *a2)
{
  _QWORD *v3;
  id v4;
  NSObject *v5;
  id v6;
  _QWORD *v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v3 = a1;
  v4 = a2;
  v5 = v3[1];
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = ____deleteAccountModel_block_invoke;
  v8[3] = &unk_1E89C2328;
  v9 = v3;
  v10 = v4;
  v6 = v4;
  v7 = v3;
  dispatch_async(v5, v8);

}

void __notifyDelegateAccountRemoved_120148(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  const __CFString *v12;
  void *v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    v6 = (void *)MEMORY[0x1D17BA0A0]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v15 = v9;
      v16 = 2112;
      v17 = v5;
      _os_log_impl(&dword_1CD062000, v8, OS_LOG_TYPE_INFO, "%{public}@Account removed: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = CFSTR("HMDAccountNotificationKey");
    v13 = v5;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v13, &v12, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "postNotificationName:object:userInfo:", CFSTR("HMDRemoteAccountManagerRemovedAccountNotification"), v7, v11);

  }
}

void ____deleteAccountModel_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  if (objc_msgSend(*(id *)(a1 + 32), "shouldSyncAccount:", *(_QWORD *)(a1 + 40)))
  {
    objc_msgSend(*(id *)(a1 + 32), "backingStore");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "modelBackedObjects");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "deleteModelObjects:destination:", v2, 2);

  }
}

void ____addAccountModel_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  if (objc_msgSend(*(id *)(a1 + 32), "shouldSyncAccount:", *(_QWORD *)(a1 + 40)))
  {
    objc_msgSend(*(id *)(a1 + 32), "backingStore");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "modelBackedObjects");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "updateModelObjects:destination:", v2, 2);

  }
}

void sub_1CD744AB0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD745218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
  id *v12;

  objc_destroyWeak(v12);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____handleUnregisteredDestination_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  const char *v14;
  void *v15;
  id v16;
  NSObject *v17;
  void *v18;
  void *v19;
  id v20;
  int v21;
  void *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (v6)
    {
      v8 = (void *)MEMORY[0x1D17BA0A0]();
      v9 = WeakRetained;
      HMFGetOSLogHandle();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 40), "shortDescription");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "shortDescription");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = 138543874;
        v22 = v11;
        v23 = 2112;
        v24 = v12;
        v25 = 2112;
        v26 = v13;
        v14 = "%{public}@Account handle, %@, failed to resolve, removing from account: %@";
LABEL_12:
        _os_log_impl(&dword_1CD062000, v10, OS_LOG_TYPE_DEFAULT, v14, (uint8_t *)&v21, 0x20u);

        goto LABEL_13;
      }
      goto LABEL_13;
    }
    if ((objc_msgSend(*(id *)(a1 + 32), "isEqual:", v5) & 1) == 0)
    {
      v8 = (void *)MEMORY[0x1D17BA0A0]();
      v20 = WeakRetained;
      HMFGetOSLogHandle();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 40), "shortDescription");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "shortDescription");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = 138543874;
        v22 = v11;
        v23 = 2112;
        v24 = v12;
        v25 = 2112;
        v26 = v13;
        v14 = "%{public}@Account handle, %@, now registered to account: %@";
        goto LABEL_12;
      }
LABEL_13:

      objc_autoreleasePoolPop(v8);
      objc_msgSend(*(id *)(a1 + 32), "removeHandle:", *(_QWORD *)(a1 + 40));
      goto LABEL_14;
    }
    if (*(_QWORD *)(a1 + 48))
    {
      v15 = (void *)MEMORY[0x1D17BA0A0]();
      v16 = WeakRetained;
      HMFGetOSLogHandle();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = *(void **)(a1 + 48);
        v21 = 138543618;
        v22 = v18;
        v23 = 2112;
        v24 = v19;
        _os_log_impl(&dword_1CD062000, v17, OS_LOG_TYPE_INFO, "%{public}@Removing unregistered device: %@", (uint8_t *)&v21, 0x16u);

      }
      objc_autoreleasePoolPop(v15);
      objc_msgSend(*(id *)(a1 + 32), "removeDevice:", *(_QWORD *)(a1 + 48));
    }
  }
LABEL_14:

}

void sub_1CD745690(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD74572C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7457D4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD745854(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD746D3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD74771C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD747848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7480BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
  id *v19;
  id *v20;
  id *v21;
  uint64_t v22;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  objc_destroyWeak((id *)(v22 - 72));
  _Unwind_Resume(a1);
}

void sub_1CD7485E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__120473(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__120474(uint64_t a1)
{

}

void sub_1CD749310(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD74A42C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,id location,id a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  char a69;
  id *v69;

  objc_destroyWeak(v69);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a63, 8);
  _Block_object_dispose(&a69, 8);
  _Unwind_Resume(a1);
}

void sub_1CD75027C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD750340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7505A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD751C58(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD751D10(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD751DEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD751EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD752478(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD752664(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD753D40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD754738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD75493C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD755124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __documentationMaxSize_block_invoke()
{
  void *v0;
  id v1;

  v0 = (void *)MEMORY[0x1E0D28678];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", 0x200000);
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setDefaultValue:forPreferenceKey:", v1, CFSTR("firmwareUpdateDocumentationMaxSize"));

}

uint64_t minimumApplyDurationAllowance()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  objc_msgSend(MEMORY[0x1E0D28678], "sharedPreferences");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "preferenceForKey:", CFSTR("firmwareUpdateMinimumApplyDurationAllowance"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "numberValue");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "unsignedIntValue");

  return v3;
}

void sub_1CD75A908(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void __maxSocketIdleDuration_block_invoke()
{
  void *v0;
  id v1;

  v0 = (void *)MEMORY[0x1E0D28678];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", 60);
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setDefaultValue:forPreferenceKey:", v1, CFSTR("firmwareUpdateMaxSocketIdleDuration"));

}

void sub_1CD75B478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitEventTriggerEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  AWDHomeKitCharacteristicEvent *v24;
  uint64_t v25;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_54;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_56;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_56:
        *(_BYTE *)(a1 + 72) = v19 != 0;
        goto LABEL_51;
      case 2u:
        v24 = objc_alloc_init(AWDHomeKitCharacteristicEvent);
        objc_storeStrong((id *)(a1 + 16), v24);
        if (!PBReaderPlaceMark() || (AWDHomeKitCharacteristicEventReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_58;
        goto LABEL_50;
      case 3u:
        v24 = objc_alloc_init(AWDHomeKitLocationEvent);
        objc_storeStrong((id *)(a1 + 40), v24);
        if (!PBReaderPlaceMark() || !AWDHomeKitLocationEventReadFrom((uint64_t)v24, a2))
          goto LABEL_58;
        goto LABEL_50;
      case 4u:
        v24 = objc_alloc_init(AWDHomeKitCharacteristicThresholdEvent);
        v25 = 24;
        goto LABEL_42;
      case 5u:
        v24 = objc_alloc_init(AWDHomeKitCalendarEvent);
        objc_storeStrong((id *)(a1 + 8), v24);
        if (!PBReaderPlaceMark() || !HMDRemoteEventRouterProtoDisconnectMessageReadFrom(a2))
          goto LABEL_58;
        goto LABEL_50;
      case 6u:
        v24 = objc_alloc_init(AWDHomeKitSignificantTimeEvent);
        objc_storeStrong((id *)(a1 + 56), v24);
        if (!PBReaderPlaceMark() || (AWDHomeKitSignificantTimeEventReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_58;
        goto LABEL_50;
      case 7u:
        v24 = objc_alloc_init(AWDHomeKitCharacteristicThresholdEvent);
        v25 = 64;
LABEL_42:
        objc_storeStrong((id *)(a1 + v25), v24);
        if (!PBReaderPlaceMark() || !AWDHomeKitCharacteristicThresholdEventReadFrom((uint64_t)v24, a2))
          goto LABEL_58;
        goto LABEL_50;
      case 8u:
        v24 = objc_alloc_init(AWDHomeKitPresenceEvent);
        objc_storeStrong((id *)(a1 + 48), v24);
        if (!PBReaderPlaceMark() || !AWDHomeKitPresenceEventReadFrom((uint64_t)v24, a2))
          goto LABEL_58;
        goto LABEL_50;
      case 9u:
        v24 = objc_alloc_init(AWDHomeKitDurationEvent);
        objc_storeStrong((id *)(a1 + 32), v24);
        if (PBReaderPlaceMark() && HMDRemoteEventRouterProtoDisconnectMessageReadFrom(a2))
        {
LABEL_50:
          PBReaderRecallMark();

LABEL_51:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_58:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_51;
    }
  }
}

void sub_1CD75F1EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD75F3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD762658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD762CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7637F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7643C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1CD764A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__122125(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__122126(uint64_t a1)
{

}

HMDHomeKitVersion *HMDMinimumHomeKitVersionSupportingHH2()
{
  int v0;
  HMDHomeKitVersion *v1;
  const __CFString *v2;

  v0 = isInternalBuild();
  v1 = [HMDHomeKitVersion alloc];
  if (v0)
    v2 = CFSTR("10.3");
  else
    v2 = CFSTR("10.4");
  return -[HMDHomeKitVersion initWithVersionString:](v1, "initWithVersionString:", v2);
}

void sub_1CD768C00(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD7694FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD76BD94(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD76C6AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD76CA68(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD76CB14(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD76D424(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD76EAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD771118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD771204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD771544(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 144));
  _Unwind_Resume(a1);
}

void sub_1CD7717C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD7721DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD772370(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1CD772830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD773160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD773774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7737F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD773C8C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD773F88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD77425C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7753D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;
  id *v11;

  objc_destroyWeak(v11);
  objc_destroyWeak(v10);
  objc_destroyWeak((id *)&a9);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7756F4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD776B14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD778978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__123406(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__123407(uint64_t a1)
{

}

void sub_1CD77A6D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD77A8C0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD77CABC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1CD77CD34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD77D234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDNetworkRouterSupportAsString(unint64_t a1)
{
  void *v2;
  void *v3;
  unint64_t v4;
  __CFString *v5;
  __CFString *v6;
  __CFString *v7;

  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 3);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = a1;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("Home Protection Mode Update"));
    v4 = a1 & 0xFFFFFFFFFFFFFFFELL;
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  objc_msgSend(v3, "addObject:", CFSTR("Accessory Protection Mode Update"));
  v4 &= ~2uLL;
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  objc_msgSend(v3, "addObject:", CFSTR("Add Network Router"));
  v4 &= ~4uLL;
  if ((a1 & 8) != 0)
  {
LABEL_5:
    objc_msgSend(v3, "addObject:", CFSTR("WiFi Unique PreShared Key"));
    v4 &= ~8uLL;
  }
LABEL_6:
  if (objc_msgSend(v3, "count"))
  {
    objc_msgSend(v3, "componentsJoinedByString:", CFSTR(","));
    v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = CFSTR("Unknown");
    if (!v4)
      v6 = CFSTR("Disabled");
    v5 = v6;
  }
  v7 = v5;

  return v7;
}

void sub_1CD781384(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7813FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD781474(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7817D0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1CD7872B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

HMDNetworkRouterAccessViolationControl *accessViolationControlWithType(uint64_t a1)
{
  HMDNetworkRouterAccessViolationControlOperation *v1;
  HMDNetworkRouterAccessViolationControl *v2;

  v1 = -[HMDNetworkRouterAccessViolationControlOperation initWithOperation:]([HMDNetworkRouterAccessViolationControlOperation alloc], "initWithOperation:", a1);
  v2 = -[HMDNetworkRouterAccessViolationControl initWithOperation:clientIdentifierList:]([HMDNetworkRouterAccessViolationControl alloc], "initWithOperation:clientIdentifierList:", v1, 0);

  return v2;
}

HMDNetworkRouterClientControl *clientControlWithOperationType(uint64_t a1)
{
  HMDNetworkRouterControlOperation *v1;
  HMDNetworkRouterClientConfiguration *v2;
  HMDNetworkRouterClientControlOperation *v3;
  void *v4;
  HMDNetworkRouterClientControl *v5;

  v1 = -[HMDNetworkRouterControlOperation initWithOperation:]([HMDNetworkRouterControlOperation alloc], "initWithOperation:", a1);
  v2 = objc_alloc_init(HMDNetworkRouterClientConfiguration);
  v3 = -[HMDNetworkRouterClientControlOperation initWithOperation:configuration:]([HMDNetworkRouterClientControlOperation alloc], "initWithOperation:configuration:", v1, v2);

  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithObject:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[HMDNetworkRouterClientControl initWithOperations:]([HMDNetworkRouterClientControl alloc], "initWithOperations:", v4);

  return v5;
}

void sub_1CD79615C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__125865(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__125866(uint64_t a1)
{

}

uint64_t HMDRemoteEventRouterProtoFetchEventsMessageReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  HMDRemoteEventRouterProtoTopic *v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 3)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_33;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_35:
        *(_DWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3) == 2)
      {
        v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        objc_msgSend((id)a1, "addTopics:", v17);
        if (!PBReaderPlaceMark() || !HMDRemoteEventRouterProtoTopicReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1CD7A0E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__126645(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__126646(uint64_t a1)
{

}

uint64_t isRecordingAllowedForSettings(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  objc_msgSend(v1, "accessModeAtHome");
  if ((HMIsRecordingAllowedForCameraAccessMode() & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    objc_msgSend(v1, "accessModeNotAtHome");
    v2 = HMIsRecordingAllowedForCameraAccessMode();
  }

  return v2;
}

void sub_1CD7A8208(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7A827C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7A94F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7A9E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 160), 8);
  _Unwind_Resume(a1);
}

id __destinationForAccountHandle(uint64_t a1, void *a2)
{
  void *v3;

  v3 = 0;
  if (a1 && a2)
  {
    objc_msgSend(a2, "remoteDestinationString");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v3;
}

void sub_1CD7AFD9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7B06CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDUserConfirmationResponseAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 4)
    return off_1E89B6058[a1 - 1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDUserConfirmationResponse %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

id actionSetFromObject(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;

  v1 = a1;
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("objectReference"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "hmf_stringForKey:", CFSTR("objectType"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v3, "isEqualToString:", CFSTR("SCENE"))
    && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v4 = v2;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id valueWithAssistantUnits(void *a1, void *a2, void *a3, void *a4, unsigned int a5, int a6)
{
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  char v20;
  int v21;
  id v22;
  void *v23;
  char v24;
  void *v25;
  int v26;
  void *v27;
  id v28;
  int v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  double v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v48;
  id v49;
  void *v51;

  v49 = a4;
  v10 = a3;
  v11 = a2;
  v12 = a1;
  +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v12;
  v14 = v10;
  v15 = v11;
  +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "characteristicValueUnit:", v15);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17)
    v18 = v17;
  else
    v18 = v13;
  v19 = v18;
  v20 = objc_msgSend(v16, "supportsLocalization:", v14);

  if ((v20 & 1) != 0)
  {
    v21 = a6;
    v22 = v17;
    v23 = (void *)*MEMORY[0x1E0CB8740];
    v24 = objc_msgSend(v22, "isEqualToString:", *MEMORY[0x1E0CB8740]);
    v25 = (void *)*MEMORY[0x1E0CB8748];
    if ((v24 & 1) != 0 || (v26 = objc_msgSend(v22, "isEqualToString:", *MEMORY[0x1E0CB8748]), v27 = v22, v26))
    {
      if (v21)
        v27 = v23;
      else
        v27 = v25;
    }
    v28 = v27;

    if (!v13 || (v29 = objc_msgSend(v13, "isEqualToString:", v28), v30 = v13, v29))
      v30 = v28;
    v31 = v30;

    v19 = v31;
  }
  else
  {
    v23 = (void *)*MEMORY[0x1E0CB8740];
    v25 = (void *)*MEMORY[0x1E0CB8748];
  }

  objc_msgSend(v51, "characteristicValueUnit:", v15);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  v33 = v49;
  v34 = v32;
  v35 = v19;
  v36 = v33;
  if (objc_msgSend(v34, "isEqualToString:", v23))
  {
    v37 = v36;
    if (!objc_msgSend(v35, "isEqualToString:", v25))
      goto LABEL_22;
    objc_msgSend(v36, "floatValue");
    v38 = (void *)MEMORY[0x1E0CB37E8];
    *(float *)&v39 = (float)(*(float *)&v39 * 1.8) + 32.0;
    goto LABEL_21;
  }
  v37 = v36;
  if (objc_msgSend(v34, "isEqualToString:", v25))
  {
    v37 = v36;
    if (objc_msgSend(v35, "isEqualToString:", v23))
    {
      objc_msgSend(v36, "floatValue");
      v38 = (void *)MEMORY[0x1E0CB37E8];
      *(float *)&v39 = (float)((float)(*(float *)&v39 + -32.0) * 5.0) / 9.0;
LABEL_21:
      objc_msgSend(v38, "numberWithFloat:", v39);
      v37 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
LABEL_22:

  objc_msgSend(v51, "mapToAssistantCharacteristicValue:name:getActionType:", v37, v14, a5);
  v40 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v51, "mapToAssistantUnitName:", v35);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v51, "mapCharacteristicValueType:", v14);
  v42 = (void *)objc_claimAutoreleasedReturnValue();

  v43 = v40;
  v44 = v42;
  v45 = v41;
  if (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x1E0CB86F8]))
  {
    v46 = objc_alloc_init(MEMORY[0x1E0D880B8]);
    objc_msgSend(v46, "setValue:", objc_msgSend(v43, "BOOLValue"));
  }
  else if ((objc_msgSend(v44, "isEqualToString:", *MEMORY[0x1E0CB8708]) & 1) != 0
         || (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x1E0CB8730]) & 1) != 0
         || (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x1E0CB8718]) & 1) != 0
         || (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x1E0CB8720]) & 1) != 0
         || objc_msgSend(v44, "isEqualToString:", *MEMORY[0x1E0CB8728]))
  {
    v46 = objc_alloc_init(MEMORY[0x1E0D880E8]);
    objc_msgSend(v46, "setValue:", objc_msgSend(v43, "integerValue"));
  }
  else if (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x1E0CB8700]))
  {
    v46 = objc_alloc_init(MEMORY[0x1E0D880D8]);
    objc_msgSend(v43, "floatValue");
    objc_msgSend(v46, "setValue:");
  }
  else if (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x1E0CB8710]))
  {
    v46 = objc_alloc_init(MEMORY[0x1E0D88100]);
    v48 = (void *)objc_msgSend(v43, "copy");
    objc_msgSend(v46, "setValue:", v48);

  }
  else
  {
    v46 = 0;
  }
  objc_msgSend(v46, "setUnits:", v45);

  return v46;
}

HMDAssistantCharacteristicTuple *getTupleForCharacteristic(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  void *v13;
  HMDAssistantCharacteristicTuple *v14;

  v5 = a2;
  v6 = a1;
  +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "characteristicType");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "mapToAssistantCharacteristicName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "mapCharacteristicValueType:", v9);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = (void *)v10;
  if (v9)
    v12 = v10 == 0;
  else
    v12 = 1;
  if (v12)
  {
    v14 = 0;
  }
  else
  {
    valueWithAssistantUnits(0, v8, v9, v5, 1u, a3);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = -[HMDAssistantCharacteristicTuple initWithAttribute:value:]([HMDAssistantCharacteristicTuple alloc], "initWithAttribute:value:", v9, v13);

  }
  return v14;
}

void __isMetricLocale_block_invoke()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectForKey:", *MEMORY[0x1E0C99840]);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  isMetricLocale_isMetricLocale = objc_msgSend(v0, "BOOLValue");

}

uint64_t applyGuardTime()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  if (applyGuardTime_onceToken != -1)
    dispatch_once(&applyGuardTime_onceToken, &__block_literal_global_74_128525);
  objc_msgSend(MEMORY[0x1E0D28678], "sharedPreferences");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "preferenceForKey:", CFSTR("firmwareUpdateApplyGuardTime"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "numberValue");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  v3 = objc_msgSend(v2, "unsignedIntValue");
  return v3;
}

uint64_t __applyGuardTime_block_invoke()
{
  return objc_msgSend(MEMORY[0x1E0D28678], "setDefaultValue:forPreferenceKey:", &unk_1E8B340B0, CFSTR("firmwareUpdateApplyGuardTime"));
}

void sub_1CD7B50BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7B56D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__128855(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__128856(uint64_t a1)
{

}

void sub_1CD7B5C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7B6614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7B6B78(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD7B6C94(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD7B6DB0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1CD7B7A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18, id a19)
{
  id *v19;
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_1CD7C1644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7C18A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7C199C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7C22F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7C24E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1CD7C277C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1CD7C2A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7C2C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1CD7C2E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1CD7C2FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1CD7C32B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__130172(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__130173(uint64_t a1)
{

}

id __descriptionsForRecordIDArray(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "na_map:", &__block_literal_global_393_130184);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_msgSend(v1, "copy");

  return v2;
}

uint64_t ____descriptionsForRecordIDArray_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "hmbDescription");
}

id __descriptionsForRecordIDSet(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "na_map:", &__block_literal_global_392);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_msgSend(v1, "copy");

  return v2;
}

uint64_t ____descriptionsForRecordIDSet_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "hmbDescription");
}

void sub_1CD7C5368(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7C6288(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD7C63A4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7C6478(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7CCD40(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD7CE02C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7CE690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7CE898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7CEE58(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7D0070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7D032C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7D0948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7D0BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7D0E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CD7D1080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__130996(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__130997(uint64_t a1)
{

}

void sub_1CD7D13A8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1CD7D3108(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&defaultStore_lock);
  _Unwind_Resume(a1);
}

void sub_1CD7D32FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&_testOnlyStore_lock);
  _Unwind_Resume(a1);
}

void sub_1CD7D732C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7D7DD8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7D82E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7D8EF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_1CD7D988C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7D9A28(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t HMDRemoteEventRouterProtoConnectMessageReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  HMDRemoteEventRouterProtoTopic *v24;
  uint64_t v25;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 2u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_40;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_42;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_42:
        *(_DWORD *)(a1 + 16) = v19;
        goto LABEL_43;
      case 3u:
        v24 = (HMDRemoteEventRouterProtoTopic *)objc_alloc_init(MEMORY[0x1E0D32D70]);
        v25 = 8;
        goto LABEL_30;
      case 4u:
        v24 = (HMDRemoteEventRouterProtoTopic *)objc_alloc_init(MEMORY[0x1E0D32D70]);
        v25 = 40;
LABEL_30:
        objc_storeStrong((id *)(a1 + v25), v24);
        if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0)
          goto LABEL_45;
        goto LABEL_37;
      case 5u:
        PBReaderReadString();
        v24 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addTopicFilterAdditions:", v24);
        goto LABEL_38;
      case 6u:
        v24 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        objc_msgSend((id)a1, "addTopicAdditions:", v24);
        if (PBReaderPlaceMark() && HMDRemoteEventRouterProtoTopicReadFrom((uint64_t)v24, a2))
        {
LABEL_37:
          PBReaderRecallMark();
LABEL_38:

LABEL_43:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_45:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_43;
    }
  }
}

__CFString *HMDCameraRecordingVideoCodecTypeAsString(uint64_t a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("HMDCameraRecordingVideoCodecTypeH264");
  if (a1 == 1)
  {
    v1 = CFSTR("HMDCameraRecordingVideoCodecTypeH265");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingVideoCodecType %ld"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

__CFString *HMDCameraRecordingH264ProfileTypeAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_1E89B6AA8[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingH264ProfileType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDCameraRecordingH264LevelTypeAsString(unint64_t a1)
{
  if (a1 < 4)
    return off_1E89B6AC0[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingH264LevelType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void translateResolutionWidthHeight(void *a1, void *a2, uint64_t *a3)
{
  id v5;
  uint64_t v6;
  id v7;

  v7 = a1;
  v5 = a2;
  if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34140)
    && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34158) & 1) != 0)
  {
    v6 = 1;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34170)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34188) & 1) != 0)
  {
    v6 = 2;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B341A0)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B341B8) & 1) != 0)
  {
    v6 = 3;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B341D0)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B341E8) & 1) != 0)
  {
    v6 = 4;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34140)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34200) & 1) != 0)
  {
    v6 = 5;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B341A0)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34218) & 1) != 0)
  {
    v6 = 6;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34230)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34248) & 1) != 0)
  {
    v6 = 7;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34260)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34278) & 1) != 0)
  {
    v6 = 8;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34218)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B341A0) & 1) != 0)
  {
    v6 = 9;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34248)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34230) & 1) != 0)
  {
    v6 = 10;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34290)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B342A8) & 1) != 0)
  {
    v6 = 11;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B342C0)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34248) & 1) != 0)
  {
    v6 = 12;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B342A8)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34290) & 1) != 0)
  {
    v6 = 13;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34248)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B342C0) & 1) != 0)
  {
    v6 = 14;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B341B8)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B341A0) & 1) != 0)
  {
    v6 = 15;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34188)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34170) & 1) != 0)
  {
    v6 = 16;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E8B34278)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_1E8B34260) & 1) != 0)
  {
    v6 = 17;
  }
  else
  {
    v6 = 0;
  }
  *a3 = v6;

}

void sub_1CD7DFFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7E09F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7E0AAC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7E0F34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7E2318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7E2D3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7E3910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7E4038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7E4294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7E44D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CD7E5420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  uint64_t v10;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 152));
  _Unwind_Resume(a1);
}

id logDescriptionForAccessory(void *a1)
{
  id v1;
  char isKindOfClass;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v1 = a1;
  if (v1)
  {
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();
    if ((isKindOfClass & 1) != 0)
      v3 = v1;
    else
      v3 = 0;
    v4 = v3;
    if ((isKindOfClass & 1) != 0)
      objc_msgSend(v1, "needsAirplayAccess");
    v6 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v1, "name");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "uuid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "identifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    HMFBooleanToString();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    HMFBooleanToString();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "stringWithFormat:", CFSTR("'%@' (%@ / %@, HAP=%@, Airplay=%@)"), v7, v8, v9, v10, v11);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_1CD7E6888(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1CD7E6AE0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void ContinueRouterOperationOnWorkQueue(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;
  id v17;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  if (v7)
  {
    objc_msgSend(v7, "workQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __ContinueRouterOperationOnWorkQueue_block_invoke;
    v13[3] = &unk_1E89B71F0;
    v14 = v7;
    v15 = v8;
    v16 = v9;
    v17 = v10;
    dispatch_async(v11, v13);

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "hmErrorWithCode:", 23);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, void *))v9 + 2))(v9, v12);

  }
}

void sub_1CD7E76C8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

uint64_t credentialTypeForCredential(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  _BOOL4 v5;

  v1 = a1;
  objc_msgSend(v1, "psk");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    v3 = 3;
  }
  else
  {
    objc_msgSend(v1, "macAddress");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v4 != 0;

    v3 = 2 * v5;
  }

  return v3;
}

