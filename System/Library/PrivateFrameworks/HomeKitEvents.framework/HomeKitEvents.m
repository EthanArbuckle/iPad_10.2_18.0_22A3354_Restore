BOOL sub_23E8E9018(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23E8E902C()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t sub_23E8E9070()
{
  return sub_23E9461C0();
}

uint64_t sub_23E8E9098()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

id sub_23E8E9130()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudKitQueryLogEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23E8E91A0()
{
  return type metadata accessor for CloudKitQueryLogEvent();
}

uint64_t type metadata accessor for CloudKitQueryLogEvent()
{
  uint64_t result;

  result = qword_256D9E480;
  if (!qword_256D9E480)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E8E91E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E945A10();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for HMMCoreAnalyticsEventOptions(uint64_t a1)
{
  sub_23E8E9BDC(a1, &qword_256D9E5B0);
}

void type metadata accessor for QualityOfService(uint64_t a1)
{
  sub_23E8E9BDC(a1, &qword_256D9E5B8);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CloudKitQueryLogEvent.CloudKitQueryState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudKitQueryLogEvent.CloudKitQueryState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23E8E937C + 4 * byte_23E946985[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23E8E93B0 + 4 * byte_23E946980[v4]))();
}

uint64_t sub_23E8E93B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E8E93B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E8E93C0);
  return result;
}

uint64_t sub_23E8E93CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E8E93D4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23E8E93D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E8E93E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E8E93EC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23E8E93F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CloudKitQueryLogEvent.CloudKitQueryState()
{
  return &type metadata for CloudKitQueryLogEvent.CloudKitQueryState;
}

void type metadata accessor for Scope(uint64_t a1)
{
  sub_23E8E9BDC(a1, &qword_256D9E5C0);
}

unint64_t sub_23E8E9428()
{
  unint64_t result;

  result = qword_256D9E5C8;
  if (!qword_256D9E5C8)
  {
    result = MEMORY[0x24265637C](&unk_23E946AF0, &type metadata for CloudKitQueryLogEvent.CloudKitQueryState);
    atomic_store(result, (unint64_t *)&qword_256D9E5C8);
  }
  return result;
}

id sub_23E8E946C()
{
  id *v0;

  return *v0;
}

uint64_t sub_23E8E9474@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

_QWORD *sub_23E8E947C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_23E8E948C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_23E8E9498(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_23E8E94A0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_23E8E94B4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_23E8E94C8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23E8E94DC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_23E8E950C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23E8E9538@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_23E8E955C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_23E8E9570(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_23E8E9584(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_23E8E9598@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23E8E95AC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23E8E95C0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23E8E95D4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23E8E95E8()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_23E8E95F8()
{
  return sub_23E945F2C();
}

_QWORD *sub_23E8E9610(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_23E8E9624@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23E8E9630()
{
  return sub_23E945B18();
}

uint64_t sub_23E8E9640()
{
  sub_23E8E99C8(&qword_256DA0EA0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946E40);
  return sub_23E9458FC();
}

uint64_t sub_23E8E9680()
{
  sub_23E8E99C8(&qword_256DA0EA0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946E40);
  return sub_23E9458CC();
}

uint64_t sub_23E8E96C0(void *a1)
{
  id v2;

  sub_23E8E99C8(&qword_256DA0EA0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946E40);
  v2 = a1;
  return sub_23E9458C0();
}

uint64_t sub_23E8E9724()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_23E945EF0();

  return v2;
}

uint64_t sub_23E8E9758()
{
  sub_23E8E99C8(&qword_256DA0EA0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946E40);
  return sub_23E9458F0();
}

uint64_t sub_23E8E97A8()
{
  sub_23E9461B4();
  sub_23E945AE8();
  return sub_23E9461E4();
}

uint64_t sub_23E8E9804@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_23E8E9A60(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_23E8E9840()
{
  sub_23E8E99C8(&qword_256D9E6D0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946DFC);
  return sub_23E946178();
}

uint64_t sub_23E8E9880()
{
  sub_23E8E99C8(&qword_256D9E6D0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946DFC);
  return sub_23E94616C();
}

uint64_t sub_23E8E98C4()
{
  sub_23E8E99C8(&qword_256DA0EA0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946E40);
  return sub_23E9458B4();
}

uint64_t sub_23E8E9904()
{
  sub_23E8E99C8(&qword_256DA0EA0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946E40);
  return sub_23E9458D8();
}

BOOL sub_23E8E995C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23E8E9970()
{
  return sub_23E8E99C8(&qword_256D9E5D0, (uint64_t (*)(uint64_t))type metadata accessor for HMMCoreAnalyticsEventOptions, (uint64_t)&unk_23E946B5C);
}

uint64_t sub_23E8E999C()
{
  return sub_23E8E99C8(&qword_256D9E5D8, (uint64_t (*)(uint64_t))type metadata accessor for HMMCoreAnalyticsEventOptions, (uint64_t)&unk_23E946B28);
}

uint64_t sub_23E8E99C8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24265637C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E8E9A08()
{
  return sub_23E8E99C8(&qword_256D9E5E0, (uint64_t (*)(uint64_t))type metadata accessor for HMMCoreAnalyticsEventOptions, (uint64_t)&unk_23E946B88);
}

uint64_t sub_23E8E9A34()
{
  return sub_23E8E99C8(&qword_256D9E5E8, (uint64_t (*)(uint64_t))type metadata accessor for HMMCoreAnalyticsEventOptions, (uint64_t)&unk_23E946BC4);
}

uint64_t sub_23E8E9A60(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for CKError(uint64_t a1)
{
  sub_23E8E9BDC(a1, &qword_256D9E6B0);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_23E8E9BDC(a1, &qword_256D9E6B8);
}

uint64_t sub_23E8E9AC0()
{
  return sub_23E8E99C8(&qword_256D9E6C0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946D14);
}

uint64_t sub_23E8E9AEC()
{
  return sub_23E8E99C8(&qword_256D9E6C8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946D40);
}

uint64_t sub_23E8E9B18()
{
  return sub_23E8E99C8(&qword_256D9E6D0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946DFC);
}

uint64_t sub_23E8E9B44()
{
  return sub_23E8E99C8(&qword_256D9E6D8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946DC8);
}

uint64_t sub_23E8E9B70()
{
  return sub_23E8E99C8(&qword_256D9E6E0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946D84);
}

uint64_t sub_23E8E9B9C()
{
  return sub_23E8E99C8(&qword_256D9E6E8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23E946EE8);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_23E8E9BDC(a1, (unint64_t *)&unk_256D9E710);
}

void sub_23E8E9BDC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_23E8E9C20()
{
  return sub_23E8E99C8(&qword_256D9E6F0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23E946EAC);
}

unint64_t sub_23E8E9C50()
{
  unint64_t result;

  result = qword_256D9E6F8;
  if (!qword_256D9E6F8)
  {
    result = MEMORY[0x24265637C](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_256D9E6F8);
  }
  return result;
}

uint64_t sub_23E8E9C94()
{
  return sub_23E8E99C8((unint64_t *)&unk_256D9E700, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23E946F24);
}

uint64_t sub_23E8E9CC0()
{
  return sub_23E8E99C8(&qword_256DA0EA0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946E40);
}

uint64_t getEnumTagSinglePayload for InternalAccessoryEventStateCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalAccessoryEventStateCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E8E9DDC + 4 * byte_23E946F75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E8E9E10 + 4 * asc_23E946F70[v4]))();
}

uint64_t sub_23E8E9E10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E8E9E18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E8E9E20);
  return result;
}

uint64_t sub_23E8E9E2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E8E9E34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E8E9E38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E8E9E40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23E8E9E4C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for InternalAccessoryEventStateCodingKeys()
{
  return &type metadata for InternalAccessoryEventStateCodingKeys;
}

uint64_t sub_23E8E9E68(char *a1, char *a2)
{
  return sub_23E8EA284(*a1, *a2);
}

uint64_t sub_23E8E9E74(char a1, char a2)
{
  char v2;

  if (qword_23E947190[a1] == qword_23E947190[a2])
    v2 = 1;
  else
    v2 = sub_23E946130();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

void sub_23E8E9ED8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23E8E9F3C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E8EA060 + 4 * byte_23E946F85[a2]))(0x446C616974696E49);
}

uint64_t sub_23E8EA060(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x446C616974696E49 && v1 == 0xEF64616F6C6E776FLL)
    v2 = 1;
  else
    v2 = sub_23E946130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23E8EA1BC(char a1, char a2)
{
  char v2;

  if (qword_23E9471A8[a1] == qword_23E9471A8[a2])
    v2 = 1;
  else
    v2 = sub_23E946130();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_23E8EA220(char a1, char a2)
{
  char v2;

  if (*(_QWORD *)&aData_2[8 * a1] == *(_QWORD *)&aData_2[8 * a2])
    v2 = 1;
  else
    v2 = sub_23E946130();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_23E8EA284(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6574617473;
  else
    v3 = 115;
  if (v2)
    v4 = 0xE100000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6574617473;
  else
    v5 = 115;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE100000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23E946130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23E8EA318()
{
  sub_23E9461B4();
  sub_23E945B6C();
  swift_bridgeObjectRelease();
  return sub_23E9461E4();
}

uint64_t sub_23E8EA388()
{
  sub_23E945B6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E8EA3D4()
{
  sub_23E9461B4();
  sub_23E945B6C();
  swift_bridgeObjectRelease();
  return sub_23E9461E4();
}

uint64_t sub_23E8EA440@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23E94604C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23E8EA49C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 115;
  if (*v1)
    v2 = 0x6574617473;
  v3 = 0xE100000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23E8EA4CC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574617473;
  else
    return 115;
}

uint64_t sub_23E8EA4F8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23E94604C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_23E8EA558()
{
  return 0;
}

void sub_23E8EA564(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23E8EA570()
{
  sub_23E8EA698();
  return sub_23E946208();
}

uint64_t sub_23E8EA598()
{
  sub_23E8EA698();
  return sub_23E946214();
}

unint64_t sub_23E8EA5C4()
{
  unint64_t result;

  result = qword_256D9E7E0;
  if (!qword_256D9E7E0)
  {
    result = MEMORY[0x24265637C](&unk_23E947110, &type metadata for InternalAccessoryEventStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9E7E0);
  }
  return result;
}

unint64_t sub_23E8EA60C()
{
  unint64_t result;

  result = qword_256D9E7E8;
  if (!qword_256D9E7E8)
  {
    result = MEMORY[0x24265637C](&unk_23E947048, &type metadata for InternalAccessoryEventStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9E7E8);
  }
  return result;
}

unint64_t sub_23E8EA654()
{
  unint64_t result;

  result = qword_256D9E7F0;
  if (!qword_256D9E7F0)
  {
    result = MEMORY[0x24265637C](&unk_23E947070, &type metadata for InternalAccessoryEventStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9E7F0);
  }
  return result;
}

unint64_t sub_23E8EA698()
{
  unint64_t result;

  result = qword_256D9E7F8;
  if (!qword_256D9E7F8)
  {
    result = MEMORY[0x24265637C](&unk_23E947138, &type metadata for InternalAccessoryEventStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9E7F8);
  }
  return result;
}

void sub_23E8EA6DC(void *a1, uint64_t a2)
{
  void *v3;
  _QWORD v4[6];

  v4[4] = sub_23E8EA920;
  v4[5] = a2;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_23E924584;
  v4[3] = &block_descriptor;
  v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_resetConfigurationWithReply_, v3);
  _Block_release(v3);
}

void sub_23E8EA780(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E808, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E8EA920(void *a1)
{
  uint64_t v1;

  sub_23E8EA780(a1, v1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242656364]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23E8EA988(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E8EAB34;
  return sub_23E8EB8F8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E8EAA08()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E8EAA2C(uint64_t a1)
{
  uint64_t v1;

  return sub_23E933238(a1, (id *)(v1 + 16));
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E8EAA6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E8EAAEC;
  return sub_23E8EB8F8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E8EAAEC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t static HMVCommands.clearLocalDatabase(homes:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E8EAB50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(void))((char *)&dword_256D9E818 + dword_256D9E818);
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_23E8EABD0;
  return v5();
}

uint64_t sub_23E8EABD0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E8EAC3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8EAC48()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E8EAC7C(void *a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v6;
  _QWORD v7[6];

  v3 = a3;
  if (a3)
  {
    sub_23E945A10();
    v3 = (void *)sub_23E945C14();
  }
  v7[4] = sub_23E8ECFC8;
  v7[5] = a2;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_23E924584;
  v7[3] = &block_descriptor_0;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilClearLocalDatabaseWithHomes_reply_, v3, v6);
  _Block_release(v6);

}

void sub_23E8EAD50(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23E8EAC7C(a1, a2, *(void **)(v2 + 16));
}

void sub_23E8EAD58(void *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    v7 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = a2;
    v8[5] = sub_23E8ED010;
    v8[6] = v6;
    v9 = a1;
    swift_retain();
    v10 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v5, (uint64_t)&unk_256D9E8D8, (uint64_t)v8);
    swift_release();
    swift_release();

  }
  else
  {
    v11 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = a2;
    v12[5] = sub_23E8EA980;
    v12[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v5, (uint64_t)&unk_256D9E8D0, (uint64_t)v12);
    swift_release();
  }
}

uint64_t sub_23E8EAEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_23E945A34();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E8EAF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  if (qword_256D9E420 != -1)
    swift_once();
  if (byte_256D9F370 == 1)
  {
    type metadata accessor for XPCHMVUtilClient();
    v1 = swift_allocObject();
    *(_QWORD *)(v0 + 64) = v1;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_QWORD *)(v1 + 48) = 0;
    v11 = *(_OWORD *)(v0 + 24);
    sub_23E92324C();
    v2 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *(_QWORD *)(v2 + 16) = v1;
    *(_OWORD *)(v2 + 24) = v11;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_23E8EB158;
    return sub_23E946148();
  }
  else
  {
    sub_23E9308A0(*(_QWORD *)(v0 + 56));
    v5 = sub_23E945A1C();
    v6 = sub_23E945DE8();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23E8E7000, v5, v6, "Rejected request to connect because device does not have an internal build", v7, 2u);
      MEMORY[0x24265643C](v7, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v10 = *(_QWORD *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_23E8EB8B4();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E8EB158()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E8EB1C4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8EB200()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8EB244(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[4] = a1;
  v2[5] = a2;
  v3 = sub_23E945A34();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E8EB2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  if (qword_256D9E420 != -1)
    swift_once();
  if (byte_256D9F370 == 1)
  {
    type metadata accessor for XPCHMVUtilClient();
    v1 = swift_allocObject();
    *(_QWORD *)(v0 + 72) = v1;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_QWORD *)(v1 + 48) = 0;
    v11 = *(_OWORD *)(v0 + 32);
    sub_23E92324C();
    v2 = swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    *(_QWORD *)(v2 + 16) = v1;
    *(_OWORD *)(v2 + 24) = v11;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_23E8EB4A0;
    return sub_23E946148();
  }
  else
  {
    sub_23E9308A0(*(_QWORD *)(v0 + 64));
    v5 = sub_23E945A1C();
    v6 = sub_23E945DE8();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23E8E7000, v5, v6, "Rejected request to connect because device does not have an internal build", v7, 2u);
      MEMORY[0x24265643C](v7, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_23E8EB8B4();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E8EB4A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E8EB50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23E8EB55C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8EB5A0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_23E945A34();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E8EB600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  if (qword_256D9E420 != -1)
    swift_once();
  if (byte_256D9F370 == 1)
  {
    type metadata accessor for XPCHMVUtilClient();
    v1 = swift_allocObject();
    *(_QWORD *)(v0 + 64) = v1;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_QWORD *)(v1 + 48) = 0;
    v11 = *(_OWORD *)(v0 + 24);
    sub_23E92324C();
    v2 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *(_QWORD *)(v2 + 16) = v1;
    *(_OWORD *)(v2 + 24) = v11;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E830);
    *v3 = v0;
    v3[1] = sub_23E8EB804;
    return sub_23E946148();
  }
  else
  {
    sub_23E9308A0(*(_QWORD *)(v0 + 56));
    v5 = sub_23E945A1C();
    v6 = sub_23E945DE8();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23E8E7000, v5, v6, "Rejected request to connect because device does not have an internal build", v7, 2u);
      MEMORY[0x24265643C](v7, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v10 = *(_QWORD *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_23E8EB8B4();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E8EB804()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E8EB870()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

unint64_t sub_23E8EB8B4()
{
  unint64_t result;

  result = qword_256D9E828;
  if (!qword_256D9E828)
  {
    result = MEMORY[0x24265637C](&unk_23E949B9C, &type metadata for HMVCommandError);
    atomic_store(result, (unint64_t *)&qword_256D9E828);
  }
  return result;
}

uint64_t sub_23E8EB8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E878);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
  v6[13] = v7;
  v6[14] = *(_QWORD *)(v7 - 8);
  v6[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E8EB998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64) + *(_QWORD *)(**(_QWORD **)(v0 + 64) + 112);
  swift_beginAccess();
  sub_23E8ECF20(v4, v3, &qword_256D9E878);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23E8ECF64(*(_QWORD *)(v0 + 96), &qword_256D9E878);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = *(void (**)(uint64_t))(v0 + 72);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v5, *(_QWORD *)(v0 + 96), v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, 1, 1, v7);
    swift_beginAccess();
    sub_23E8ECE28(v8, v4, &qword_256D9E878);
    swift_endAccess();
    v9(v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8EBAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E890);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E898);
  v6[13] = v7;
  v6[14] = *(_QWORD *)(v7 - 8);
  v6[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E8EBB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64) + *(_QWORD *)(**(_QWORD **)(v0 + 64) + 112);
  swift_beginAccess();
  sub_23E8ECF20(v4, v3, &qword_256D9E890);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23E8ECF64(*(_QWORD *)(v0 + 96), &qword_256D9E890);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = *(void (**)(uint64_t))(v0 + 72);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v5, *(_QWORD *)(v0 + 96), v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, 1, 1, v7);
    swift_beginAccess();
    sub_23E8ECE28(v8, v4, &qword_256D9E890);
    swift_endAccess();
    v9(v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8EBCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E838);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E840);
  v6[13] = v7;
  v6[14] = *(_QWORD *)(v7 - 8);
  v6[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E8EBD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64) + *(_QWORD *)(**(_QWORD **)(v0 + 64) + 112);
  swift_beginAccess();
  sub_23E8ECF20(v4, v3, &qword_256D9E838);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23E8ECF64(*(_QWORD *)(v0 + 96), &qword_256D9E838);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = *(void (**)(uint64_t))(v0 + 72);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v5, *(_QWORD *)(v0 + 96), v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, 1, 1, v7);
    swift_beginAccess();
    sub_23E8ECE28(v8, v4, &qword_256D9E838);
    swift_endAccess();
    v9(v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8EBEC8(uint64_t a1, _QWORD *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v18)(void);

  v18 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E878);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E8C0);
  v12 = swift_allocObject();
  swift_defaultActor_initialize();
  v13 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 112);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v14(v13, 1, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v11, v8);
  v14((uint64_t)v7, 0, 1, v8);
  swift_beginAccess();
  sub_23E8ECE28((uint64_t)v7, v13, &qword_256D9E878);
  swift_endAccess();
  v15 = a2[5];
  a2[5] = sub_23E8ECFB0;
  a2[6] = v12;
  swift_retain();
  sub_23E8ECC14(v15);
  v16 = a2[3];
  a2[3] = sub_23E8ECFB8;
  a2[4] = v12;
  swift_retain();
  sub_23E8ECC14(v16);
  sub_23E923594();
  v18();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23E8EC0AC(uint64_t a1, _QWORD *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v18)(void);

  v18 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E890);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E898);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E8A0);
  v12 = swift_allocObject();
  swift_defaultActor_initialize();
  v13 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 112);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v14(v13, 1, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v11, v8);
  v14((uint64_t)v7, 0, 1, v8);
  swift_beginAccess();
  sub_23E8ECE28((uint64_t)v7, v13, &qword_256D9E890);
  swift_endAccess();
  v15 = a2[5];
  a2[5] = sub_23E8ECE6C;
  a2[6] = v12;
  swift_retain();
  sub_23E8ECC14(v15);
  v16 = a2[3];
  a2[3] = sub_23E8ECE74;
  a2[4] = v12;
  swift_retain();
  sub_23E8ECC14(v16);
  sub_23E923594();
  v18();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23E8EC290(uint64_t a1, _QWORD *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v18)(void);

  v18 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E838);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E840);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E848);
  v12 = swift_allocObject();
  swift_defaultActor_initialize();
  v13 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 112);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v14(v13, 1, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v11, v8);
  v14((uint64_t)v7, 0, 1, v8);
  swift_beginAccess();
  sub_23E8ECE28((uint64_t)v7, v13, &qword_256D9E838);
  swift_endAccess();
  v15 = a2[5];
  a2[5] = sub_23E8ECC0C;
  a2[6] = v12;
  swift_retain();
  sub_23E8ECC14(v15);
  v16 = a2[3];
  a2[3] = sub_23E8ECC24;
  a2[4] = v12;
  swift_retain();
  sub_23E8ECC14(v16);
  sub_23E923594();
  v18();
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_23E8EC474(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8ECC2C();
  v5 = (void *)swift_allocError();
  *v6 = 0;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  v8 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_23E8ED010;
  v9[6] = v7;
  v10 = v5;
  swift_retain();
  swift_retain();
  sub_23E901EB8((uint64_t)v4, (uint64_t)&unk_256D9E8C8, (uint64_t)v9);
  swift_release();
  swift_release();

}

void sub_23E8EC5B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8ECC2C();
  v5 = (void *)swift_allocError();
  *v6 = 0;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  v8 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_23E8ED00C;
  v9[6] = v7;
  v10 = v5;
  swift_retain();
  swift_retain();
  sub_23E901EB8((uint64_t)v4, (uint64_t)&unk_256D9E8B8, (uint64_t)v9);
  swift_release();
  swift_release();

}

void sub_23E8EC6F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8ECC2C();
  v5 = (void *)swift_allocError();
  *v6 = 0;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  v8 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_23E8ED008;
  v9[6] = v7;
  v10 = v5;
  swift_retain();
  swift_retain();
  sub_23E901EB8((uint64_t)v4, (uint64_t)&unk_256D9E868, (uint64_t)v9);
  swift_release();
  swift_release();

}

void sub_23E8EC834(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8ECC2C();
  v5 = (void *)swift_allocError();
  *v6 = 1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  v8 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_23E8EAA2C;
  v9[6] = v7;
  v10 = v5;
  swift_retain();
  swift_retain();
  sub_23E901EB8((uint64_t)v4, (uint64_t)&unk_256D9E800, (uint64_t)v9);
  swift_release();
  swift_release();

}

void sub_23E8EC978(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8ECC2C();
  v5 = (void *)swift_allocError();
  *v6 = 1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  v8 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_23E8ECE7C;
  v9[6] = v7;
  v10 = v5;
  swift_retain();
  swift_retain();
  sub_23E901EB8((uint64_t)v4, (uint64_t)&unk_256D9E8B0, (uint64_t)v9);
  swift_release();
  swift_release();

}

void sub_23E8ECABC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8ECC2C();
  v5 = (void *)swift_allocError();
  *v6 = 1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  v8 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_23E8ECCF4;
  v9[6] = v7;
  v10 = v5;
  swift_retain();
  swift_retain();
  sub_23E901EB8((uint64_t)v4, (uint64_t)&unk_256D9E860, (uint64_t)v9);
  swift_release();
  swift_release();

}

uint64_t sub_23E8ECC00(uint64_t a1)
{
  uint64_t v1;

  return sub_23E8EC290(a1, *(_QWORD **)(v1 + 16), *(void (**)(void))(v1 + 24));
}

void sub_23E8ECC0C()
{
  uint64_t v0;

  sub_23E8EC6F4(v0);
}

uint64_t sub_23E8ECC14(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_23E8ECC24()
{
  uint64_t v0;

  sub_23E8ECABC(v0);
}

unint64_t sub_23E8ECC2C()
{
  unint64_t result;

  result = qword_256D9E850;
  if (!qword_256D9E850)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for XPCConnectionError, &type metadata for XPCConnectionError);
    atomic_store(result, &qword_256D9E850);
  }
  return result;
}

uint64_t sub_23E8ECC70(uint64_t a1, id *a2)
{
  return sub_23E8ECC88(a1, a2, &qword_256D9E898);
}

uint64_t sub_23E8ECC7C(uint64_t a1, id *a2)
{
  return sub_23E8ECC88(a1, a2, &qword_256D9E840);
}

uint64_t sub_23E8ECC88(uint64_t a1, id *a2, uint64_t *a3)
{
  id v4;

  v4 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_23E945CB0();
}

uint64_t sub_23E8ECCD0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E8ECCF4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E8ECC88(a1, (id *)(v1 + 16), &qword_256D9E840);
}

uint64_t sub_23E8ECD18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E8EAB34;
  return sub_23E8EBCD8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E8ECD9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E8EAAEC;
  return sub_23E8EBCD8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E8ECE1C(uint64_t a1)
{
  uint64_t v1;

  return sub_23E8EC0AC(a1, *(_QWORD **)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_23E8ECE28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_23E8ECE6C()
{
  uint64_t v0;

  sub_23E8EC5B4(v0);
}

void sub_23E8ECE74()
{
  uint64_t v0;

  sub_23E8EC978(v0);
}

uint64_t sub_23E8ECE7C(uint64_t a1)
{
  uint64_t v1;

  return sub_23E8ECC88(a1, (id *)(v1 + 16), &qword_256D9E898);
}

uint64_t sub_23E8ECEA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E8EAB34;
  return sub_23E8EBAE8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E8ECF20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23E8ECF64(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23E8ECFA4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E8EBEC8(a1, *(_QWORD **)(v1 + 16), *(void (**)(void))(v1 + 24));
}

void sub_23E8ECFB0()
{
  uint64_t v0;

  sub_23E8EC474(v0);
}

void sub_23E8ECFB8()
{
  uint64_t v0;

  sub_23E8EC834(v0);
}

void sub_23E8ECFC8(void *a1)
{
  uint64_t v1;

  sub_23E8EAD58(a1, v1);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

char *sub_23E8ED014(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E945A10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_23E9459A4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v13 = a3[8];
    *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
    a1[v13] = a2[v13];
  }
  return a1;
}

uint64_t sub_23E8ED0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23E9459A4();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 24), v6);
}

uint64_t sub_23E8ED184(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v6 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E9459A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t sub_23E8ED23C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E9459A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_23E8ED2F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v6 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E9459A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t sub_23E8ED3B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v6 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E9459A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t sub_23E8ED468()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E8ED474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_23E945A10();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23E9459A4();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

uint64_t sub_23E8ED518()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E8ED524(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_23E945A10();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_23E9459A4();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for QueryBase()
{
  uint64_t result;

  result = qword_256D9E938;
  if (!qword_256D9E938)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E8ED604()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E945A10();
  if (v1 <= 0x3F)
  {
    result = sub_23E9459A4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t HomeQuery.categories.getter()
{
  type metadata accessor for HomeQuery();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for HomeQuery()
{
  uint64_t result;

  result = qword_256D9EA48;
  if (!qword_256D9EA48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t HomeQuery.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t HomeQuery.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for QueryBase() + 20);
  v4 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HomeQuery.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for QueryBase() + 24);
  v4 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HomeQuery.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for QueryBase() + 28));
}

uint64_t HomeQuery.scope.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for QueryBase();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t sub_23E8ED824@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X5>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *Base;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  _BYTE *v41;
  unsigned __int8 v42;

  v5 = v4;
  v39 = a3;
  v40 = a2;
  v38 = a1;
  v41 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E945A10();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v35 - v12;
  v14 = sub_23E9459A4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v35 - v19;
  v21 = sub_23E945860();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  Base = (int *)type metadata accessor for QueryBase();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v25(v20, v5 + Base[5], v14);
  v25(v18, v5 + Base[6], v14);
  sub_23E94583C();
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v26(v13, v5, v8);
  v27 = (uint64_t)v36;
  v26(v36, v38, v8);
  v28 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for HomeQuery() + 20));
  v29 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v37, 1, 1, v8);
  v30 = *(_QWORD *)(v5 + Base[7]);
  v42 = *(_BYTE *)(v5 + Base[8]);
  v31 = v39;
  v32 = v39;
  v33 = v40;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return sub_23E8F1F9C((uint64_t)v23, (uint64_t)v13, v27, v28, v29, v30, 0, 0, v41, 0, &v42, 17, 0, v33, v31);
}

uint64_t sub_23E8EDAA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_23E8EDAD8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E8EDAE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for QueryBase() + 20);
  v4 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23E8EDB2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for QueryBase() + 24);
  v4 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23E8EDB74()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for QueryBase() + 28));
}

uint64_t sub_23E8EDB94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for QueryBase();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t static QueryController.homeQuery(homeIdentifier:startDate:endDate:categories:limit:scope:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v13;
  uint64_t v14;
  int *Base;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  v13 = *a6;
  v14 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a7, a1, v14);
  Base = (int *)type metadata accessor for QueryBase();
  v16 = a7 + Base[5];
  v17 = sub_23E9459A4();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v16, a2, v17);
  v18(a7 + Base[6], a3, v17);
  *(_QWORD *)(a7 + Base[7]) = a5;
  *(_BYTE *)(a7 + Base[8]) = v13;
  *(_QWORD *)(a7 + *(int *)(type metadata accessor for HomeQuery() + 20)) = a4;
  return swift_bridgeObjectRetain();
}

uint64_t QueryController.homeQuery(homeIdentifier:startDate:endDate:categories:limit:scope:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v13;
  uint64_t v14;
  int *Base;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  v13 = *a6;
  v14 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a7, a1, v14);
  Base = (int *)type metadata accessor for QueryBase();
  v16 = a7 + Base[5];
  v17 = sub_23E9459A4();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v16, a2, v17);
  v18(a7 + Base[6], a3, v17);
  *(_QWORD *)(a7 + Base[7]) = a5;
  *(_BYTE *)(a7 + Base[8]) = v13;
  *(_QWORD *)(a7 + *(int *)(type metadata accessor for HomeQuery() + 20)) = a4;
  return swift_bridgeObjectRetain();
}

uint64_t static QueryFactory.createHomeQuery(homeIdentifier:startDate:endDate:limit:scope:eventCategory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, unsigned __int8 *a6@<X5>, uint64_t a7@<X8>)
{
  char v12;
  int v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  int *Base;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v12 = *a5;
  v13 = *a6;
  if (v13 == 3)
  {
    v14 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E980);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E947240;
    *(_BYTE *)(inited + 32) = v13;
    v14 = sub_23E8EDEBC(inited);
    swift_setDeallocating();
  }
  v16 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a7, a1, v16);
  Base = (int *)type metadata accessor for QueryBase();
  v18 = a7 + Base[5];
  v19 = sub_23E9459A4();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v18, a2, v19);
  v20(a7 + Base[6], a3, v19);
  *(_QWORD *)(a7 + Base[7]) = a4;
  *(_BYTE *)(a7 + Base[8]) = v12;
  result = type metadata accessor for HomeQuery();
  *(_QWORD *)(a7 + *(int *)(result + 20)) = v14;
  return result;
}

uint64_t sub_23E8EDEBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EA80);
    v3 = sub_23E945F50();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      sub_23E9461B4();
      sub_23E9461C0();
      result = sub_23E9461E4();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(unsigned __int8 *)(v14 + v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

char *initializeBufferWithCopyOfBuffer for HomeQuery(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *Base;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E945A10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    Base = (int *)type metadata accessor for QueryBase();
    v9 = Base[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_23E9459A4();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&a1[Base[6]], &a2[Base[6]], v12);
    *(_QWORD *)&a1[Base[7]] = *(_QWORD *)&a2[Base[7]];
    a1[Base[8]] = a2[Base[8]];
    *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for HomeQuery(uint64_t a1)
{
  uint64_t v2;
  uint64_t Base;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  Base = type metadata accessor for QueryBase();
  v4 = a1 + *(int *)(Base + 20);
  v5 = sub_23E9459A4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(Base + 24), v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HomeQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *Base;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  Base = (int *)type metadata accessor for QueryBase();
  v8 = Base[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23E9459A4();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12(a1 + Base[6], a2 + Base[6], v11);
  *(_QWORD *)(a1 + Base[7]) = *(_QWORD *)(a2 + Base[7]);
  *(_BYTE *)(a1 + Base[8]) = *(_BYTE *)(a2 + Base[8]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HomeQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *Base;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  Base = (int *)type metadata accessor for QueryBase();
  v8 = Base[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23E9459A4();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v12(a1 + Base[6], a2 + Base[6], v11);
  *(_QWORD *)(a1 + Base[7]) = *(_QWORD *)(a2 + Base[7]);
  *(_BYTE *)(a1 + Base[8]) = *(_BYTE *)(a2 + Base[8]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for HomeQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *Base;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  Base = (int *)type metadata accessor for QueryBase();
  v8 = Base[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23E9459A4();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + Base[6], a2 + Base[6], v11);
  *(_QWORD *)(a1 + Base[7]) = *(_QWORD *)(a2 + Base[7]);
  *(_BYTE *)(a1 + Base[8]) = *(_BYTE *)(a2 + Base[8]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for HomeQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *Base;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  Base = (int *)type metadata accessor for QueryBase();
  v8 = Base[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23E9459A4();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(a1 + Base[6], a2 + Base[6], v11);
  *(_QWORD *)(a1 + Base[7]) = *(_QWORD *)(a2 + Base[7]);
  *(_BYTE *)(a1 + Base[8]) = *(_BYTE *)(a2 + Base[8]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E8EE510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Base;
  uint64_t v7;
  unint64_t v9;
  int v10;

  Base = type metadata accessor for QueryBase();
  v7 = *(_QWORD *)(Base - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, Base);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E8EE5A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for QueryBase();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_23E8EE61C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for QueryBase();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of HomeQueryLegacyProtocol.homeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HomeQueryLegacyProtocol.categories.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void sub_23E8EE6A0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23E8EE8EC(a1, (void (*)(uint64_t))sub_23E8F0B14, a2);
}

void sub_23E8EE6C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v7[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EC30);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v7[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E8EA698();
  sub_23E9461F0();
  if (!v1)
  {
    v7[15] = 1;
    sub_23E8F0AD0();
    sub_23E946088();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_23E8EE838(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23E8EE8EC(a1, (void (*)(uint64_t))sub_23E8F0A8C, a2);
}

void sub_23E8EE85C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23E8EE8EC(a1, (void (*)(uint64_t))sub_23E8F0A48, a2);
}

void sub_23E8EE880(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23E8EE8EC(a1, (void (*)(uint64_t))sub_23E8F0A04, a2);
}

void sub_23E8EE8A4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23E8EE8EC(a1, (void (*)(uint64_t))sub_23E8F09C0, a2);
}

void sub_23E8EE8C8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23E8EE8EC(a1, (void (*)(uint64_t))sub_23E8F097C, a2);
}

void sub_23E8EE8EC(_QWORD *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v11[2];
  char v12;

  v11[1] = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EC30);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E8EA698();
  v10 = sub_23E9461F0();
  if (!v3)
  {
    v12 = 1;
    a2(v10);
    sub_23E946088();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

HomeKitEvents::LockEvent::State_optional __swiftcall LockEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 6;
  if ((unint64_t)rawValue < 6)
    v2 = rawValue;
  *v1 = v2;
  return (HomeKitEvents::LockEvent::State_optional)rawValue;
}

void *static LockEvent.State.allCases.getter()
{
  return &unk_250F17F30;
}

uint64_t LockEvent.State.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HomeKitEvents::LockEvent::State_optional sub_23E8EEA94(Swift::Int *a1)
{
  return LockEvent.State.init(rawValue:)(*a1);
}

void sub_23E8EEA9C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_23E8EEAA8(_QWORD *a1@<X8>)
{
  *a1 = &unk_250F17F30;
}

uint64_t LockEvent.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LockEvent();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for LockEvent()
{
  uint64_t result;

  result = qword_256D9EBF0;
  if (!qword_256D9EBF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LockEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t LockEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LockEvent.category.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventBase(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t LockEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LockEvent.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LockEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LockEvent.accessoryName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LockEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);
  return sub_23E8EED0C(v3, a1);
}

uint64_t sub_23E8EED0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t LockEvent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for LockEvent();
  return sub_23E9461C0();
}

BOOL static LockEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2))
    return 0;
  v4 = type metadata accessor for LockEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t LockEvent.hashValue.getter()
{
  sub_23E9461B4();
  LockEvent.hash(into:)();
  return sub_23E9461E4();
}

uint64_t sub_23E8EF020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23E8EF068()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23E8EF0A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23E8EF0EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23E8EF128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);
  return sub_23E8EED0C(v3, a1);
}

uint64_t sub_23E8EF158@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 20));
  return result;
}

uint64_t sub_23E8EF168@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_23E8EF1A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23E8EF1E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventBase(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t sub_23E8EF218()
{
  sub_23E9461B4();
  LockEvent.hash(into:)();
  return sub_23E9461E4();
}

uint64_t sub_23E8EF258()
{
  sub_23E9461B4();
  LockEvent.hash(into:)();
  return sub_23E9461E4();
}

BOOL sub_23E8EF290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20));
}

uint64_t LockEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  int *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t result;
  char v29;

  v29 = *a10;
  v18 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = type metadata accessor for EventBase(0);
  v20 = a9 + *(int *)(v19 + 20);
  v21 = sub_23E945A10();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
  v22(v20, a2, v21);
  *(_BYTE *)(a9 + *(int *)(v19 + 24)) = 0;
  v23 = (int *)type metadata accessor for AccessoryEventBase(0);
  v22(a9 + v23[5], a3, v21);
  v24 = (_QWORD *)(a9 + v23[6]);
  *v24 = a4;
  v24[1] = a5;
  v22(a9 + v23[7], a6, v21);
  v25 = (_QWORD *)(a9 + v23[8]);
  *v25 = a7;
  v25[1] = a8;
  sub_23E8EF720(a11, a9 + v23[9]);
  result = type metadata accessor for LockEvent();
  *(_BYTE *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t LockEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  char v9;
  _BYTE v11[40];

  v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E8EF768((uint64_t)a1, (uint64_t)v11);
  sub_23E937208((uint64_t)v11, (uint64_t)v7);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_23E8EE8EC(a1, (void (*)(uint64_t))sub_23E8EFB90, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v11[0];
  sub_23E8EF808((uint64_t)v7, a2);
  result = type metadata accessor for LockEvent();
  *(_BYTE *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t LockEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EA98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = sub_23E937628(a1);
  if (!v2)
  {
    v9[15] = *(_BYTE *)(v1 + *(int *)(type metadata accessor for LockEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_23E8EA698();
    sub_23E9461FC();
    v9[14] = 1;
    sub_23E8EF870();
    sub_23E9460C4();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_23E8EF644@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LockEvent.init(from:)(a1, a2);
}

uint64_t sub_23E8EF658(_QWORD *a1)
{
  return LockEvent.encode(to:)(a1);
}

uint64_t sub_23E8EF66C()
{
  return 1;
}

uint64_t sub_23E8EF678()
{
  sub_23E8F0938();
  return sub_23E945C08();
}

uint64_t sub_23E8EF6D4()
{
  sub_23E8F0938();
  return sub_23E945BFC();
}

uint64_t sub_23E8EF720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E8EF768(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23E8EF7CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessoryEventBaseLegacy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E8EF808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessoryEventBaseLegacy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23E8EF870()
{
  unint64_t result;

  result = qword_256D9EAA0;
  if (!qword_256D9EAA0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for LockEvent.State, &type metadata for LockEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EAA0);
  }
  return result;
}

unint64_t sub_23E8EF8B8()
{
  unint64_t result;

  result = qword_256D9EAA8;
  if (!qword_256D9EAA8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for LockEvent.State, &type metadata for LockEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EAA8);
  }
  return result;
}

unint64_t sub_23E8EF900()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D9EAB0;
  if (!qword_256D9EAB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D9EAB8);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D9EAB0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242656370](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23E8EF994()
{
  unint64_t result;

  result = qword_256D9EAC0;
  if (!qword_256D9EAC0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for LockEvent.State, &type metadata for LockEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EAC0);
  }
  return result;
}

uint64_t sub_23E8EF9D8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8((unint64_t *)&unk_256DA02A0, (uint64_t (*)(uint64_t))type metadata accessor for LockEvent, (uint64_t)&protocol conformance descriptor for LockEvent);
  a1[2] = sub_23E8E99C8(&qword_256D9EB20, (uint64_t (*)(uint64_t))type metadata accessor for LockEvent, (uint64_t)&protocol conformance descriptor for LockEvent);
  result = sub_23E8E99C8(&qword_256D9EB28, (uint64_t (*)(uint64_t))type metadata accessor for LockEvent, (uint64_t)&protocol conformance descriptor for LockEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E8EFA50()
{
  return sub_23E8E99C8(&qword_256D9EB30, (uint64_t (*)(uint64_t))type metadata accessor for LockEvent, (uint64_t)&protocol conformance descriptor for LockEvent);
}

uint64_t sub_23E8EFA7C(uint64_t a1)
{
  uint64_t result;

  result = sub_23E8E99C8(&qword_256D9EB18, (uint64_t (*)(uint64_t))type metadata accessor for LockEvent, (uint64_t)&protocol conformance descriptor for LockEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23E8EFAB8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256D9EB38, (uint64_t (*)(uint64_t))type metadata accessor for LockEvent, (uint64_t)&protocol conformance descriptor for LockEvent);
  a1[2] = sub_23E8E99C8(&qword_256D9EB40, (uint64_t (*)(uint64_t))type metadata accessor for LockEvent, (uint64_t)&unk_23E9474C4);
  result = sub_23E8E99C8(&qword_256D9EB48, (uint64_t (*)(uint64_t))type metadata accessor for LockEvent, (uint64_t)&protocol conformance descriptor for LockEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E8EFB30()
{
  return sub_23E8E99C8(&qword_256D9EB38, (uint64_t (*)(uint64_t))type metadata accessor for LockEvent, (uint64_t)&protocol conformance descriptor for LockEvent);
}

unint64_t sub_23E8EFB5C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23E8EFB90();
  a1[2] = sub_23E8EF870();
  result = sub_23E8EFBD4();
  a1[3] = result;
  return result;
}

unint64_t sub_23E8EFB90()
{
  unint64_t result;

  result = qword_256D9EB80;
  if (!qword_256D9EB80)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for LockEvent.State, &type metadata for LockEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EB80);
  }
  return result;
}

unint64_t sub_23E8EFBD4()
{
  unint64_t result;

  result = qword_256D9EB88;
  if (!qword_256D9EB88)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for LockEvent.State, &type metadata for LockEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EB88);
  }
  return result;
}

unint64_t sub_23E8EFC18(uint64_t a1)
{
  unint64_t result;

  result = sub_23E8EFC3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23E8EFC3C()
{
  unint64_t result;

  result = qword_256D9EB90;
  if (!qword_256D9EB90)
  {
    result = MEMORY[0x24265637C](&unk_23E9475AC, &type metadata for LockEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EB90);
  }
  return result;
}

unint64_t sub_23E8EFC80(uint64_t a1)
{
  unint64_t result;

  result = sub_23E8EF994();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for LockEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E9459A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for EventBase(0);
    v9 = *(int *)(v8 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23E945A10();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v10, v11, v12);
    *((_BYTE *)a1 + *(int *)(v8 + 24)) = *((_BYTE *)a2 + *(int *)(v8 + 24));
    v15 = (int *)type metadata accessor for AccessoryEventBase(0);
    v14((char *)a1 + v15[5], (char *)a2 + v15[5], v12);
    v16 = v15[6];
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v15[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    swift_bridgeObjectRetain();
    v14(v21, v22, v12);
    v23 = v15[8];
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v15[9];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v30(v29, 1, v12))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v14(v28, v29, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v28, 0, 1, v12);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for LockEvent(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  v2 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = a1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  v4 = sub_23E945A10();
  v5 = *(_QWORD *)(v4 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(v3, v4);
  v6 = (int *)type metadata accessor for AccessoryEventBase(0);
  v9(a1 + v6[5], v4);
  swift_bridgeObjectRelease();
  v9(a1 + v6[7], v4);
  swift_bridgeObjectRelease();
  v7 = a1 + v6[9];
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v4);
  return result;
}

uint64_t initializeWithCopy for LockEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  uint64_t v30;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for EventBase(0);
  v8 = *(int *)(v7 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23E945A10();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
  v13(v9, v10, v11);
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
  v14 = (int *)type metadata accessor for AccessoryEventBase(0);
  v13((void *)(a1 + v14[5]), (const void *)(a2 + v14[5]), v11);
  v15 = v14[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v14[7];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  swift_bridgeObjectRetain();
  v13(v20, v21, v11);
  v22 = v14[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = v14[9];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v29(v28, 1, v11))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v13(v27, v28, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for LockEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t (*v24)(const void *, uint64_t, uint64_t);
  int v25;
  uint64_t v26;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for EventBase(0);
  v8 = *(int *)(v7 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23E945A10();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 24);
  v13(v9, v10, v11);
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
  v14 = (int *)type metadata accessor for AccessoryEventBase(0);
  v13((void *)(a1 + v14[5]), (const void *)(a2 + v14[5]), v11);
  v15 = v14[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13((void *)(a1 + v14[7]), (const void *)(a2 + v14[7]), v11);
  v18 = v14[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v14[9];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(v10) = v24((const void *)(a1 + v21), 1, v11);
  v25 = v24(v23, 1, v11);
  if (!(_DWORD)v10)
  {
    if (!v25)
    {
      v13(v22, v23, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v22, v11);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v22, v23, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for LockEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  int *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for EventBase(0);
  v8 = *(int *)(v7 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23E945A10();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
  v14 = (int *)type metadata accessor for AccessoryEventBase(0);
  v13((void *)(a1 + v14[5]), (const void *)(a2 + v14[5]), v11);
  *(_OWORD *)(a1 + v14[6]) = *(_OWORD *)(a2 + v14[6]);
  v13((void *)(a1 + v14[7]), (const void *)(a2 + v14[7]), v11);
  *(_OWORD *)(a1 + v14[8]) = *(_OWORD *)(a2 + v14[8]);
  v15 = v14[9];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v15, 1, v11))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v13(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for LockEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t (*v28)(const void *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for EventBase(0);
  v8 = *(int *)(v7 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23E945A10();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
  v14 = (int *)type metadata accessor for AccessoryEventBase(0);
  v13((void *)(a1 + v14[5]), (const void *)(a2 + v14[5]), v11);
  v15 = v14[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v13((void *)(a1 + v14[7]), (const void *)(a2 + v14[7]), v11);
  v20 = v14[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = v14[9];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  v28 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(v10) = v28((const void *)(a1 + v25), 1, v11);
  v29 = v28(v27, 1, v11);
  if (!(_DWORD)v10)
  {
    if (!v29)
    {
      v13(v26, v27, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v26, v11);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v26, v27, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for LockEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E8F0670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 6)
    return v9 - 5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LockEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E8F06F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryEventBaseLegacy(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 5;
  return result;
}

uint64_t sub_23E8F076C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LockEvent.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LockEvent.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23E8F08B8 + 4 * byte_23E9472F5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23E8F08EC + 4 * asc_23E9472F0[v4]))();
}

uint64_t sub_23E8F08EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E8F08F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E8F08FCLL);
  return result;
}

uint64_t sub_23E8F0908(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E8F0910);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23E8F0914(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E8F091C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LockEvent.State()
{
  return &type metadata for LockEvent.State;
}

unint64_t sub_23E8F0938()
{
  unint64_t result;

  result = qword_256D9EC28;
  if (!qword_256D9EC28)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for LockEvent.State, &type metadata for LockEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EC28);
  }
  return result;
}

unint64_t sub_23E8F097C()
{
  unint64_t result;

  result = qword_256D9EC38;
  if (!qword_256D9EC38)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for ContactSensorEvent.State, &type metadata for ContactSensorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EC38);
  }
  return result;
}

unint64_t sub_23E8F09C0()
{
  unint64_t result;

  result = qword_256D9EC40;
  if (!qword_256D9EC40)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for DoorEvent.State, &type metadata for DoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EC40);
  }
  return result;
}

unint64_t sub_23E8F0A04()
{
  unint64_t result;

  result = qword_256D9EC48;
  if (!qword_256D9EC48)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for GarageDoorEvent.State, &type metadata for GarageDoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EC48);
  }
  return result;
}

unint64_t sub_23E8F0A48()
{
  unint64_t result;

  result = qword_256D9EC50;
  if (!qword_256D9EC50)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for WindowEvent.State, &type metadata for WindowEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EC50);
  }
  return result;
}

unint64_t sub_23E8F0A8C()
{
  unint64_t result;

  result = qword_256D9EC58;
  if (!qword_256D9EC58)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SmokeDetectorEvent.State, &type metadata for SmokeDetectorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EC58);
  }
  return result;
}

unint64_t sub_23E8F0AD0()
{
  unint64_t result;

  result = qword_256D9EC60;
  if (!qword_256D9EC60)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for FakeEvent.State, &type metadata for FakeEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EC60);
  }
  return result;
}

unint64_t sub_23E8F0B14()
{
  unint64_t result;

  result = qword_256D9EC68;
  if (!qword_256D9EC68)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SecuritySystemEvent.State, &type metadata for SecuritySystemEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9EC68);
  }
  return result;
}

void sub_23E8F0C0C(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_pendingQueryLogEvents);
  v4 = (os_unfair_lock_s *)(v3 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  v5 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v5 + 16)
    && (v6 = sub_23E93520C((uint64_t)&a1[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier]),
        (v7 & 1) != 0))
  {
    v22 = (char *)*(id *)(*(_QWORD *)(v5 + 56) + 8 * v6);
    os_unfair_lock_unlock(v4);
    if (v22)
    {
      v8 = objc_msgSend(a1, sel_error);
      if (v8)
      {

        v9 = v22;
        v10 = objc_msgSend(a1, sel_error);
        if (v10)
        {
          v11 = v10;
          v12 = (void *)sub_23E945908();

        }
        else
        {
          v12 = 0;
        }
        objc_msgSend(v9, sel_setError_, v12);

      }
      v13 = *(_QWORD *)&a1[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords];
      v14 = *(_QWORD *)&v22[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numFetchedCKRecords];
      v15 = __OFADD__(v14, v13);
      v16 = v14 + v13;
      if (v15)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)&v22[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numFetchedCKRecords] = v16;
        v17 = *(_QWORD *)&a1[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize];
        v18 = *(_QWORD *)&v22[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_totalCKRecordSize];
        v15 = __OFADD__(v18, v17);
        v19 = v18 + v17;
        if (!v15)
        {
          *(_QWORD *)&v22[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_totalCKRecordSize] = v19;
          objc_msgSend(a1, sel_startTime);
          v20 = &v22[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionEndTime];
          *(_QWORD *)v20 = v21;
          v20[8] = 0;
          __asm { BR              X10 }
        }
      }
      __break(1u);
      JUMPOUT(0x23E8F0ECCLL);
    }
  }
  else
  {
    os_unfair_lock_unlock(v4);
  }
}

void sub_23E8F0EF8(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  char *v16;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_pendingQueryLogEvents);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  v4 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v4 + 16)
    && (v5 = sub_23E93520C((uint64_t)&a1[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier]),
        (v6 & 1) != 0))
  {
    v16 = (char *)*(id *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    if (v16)
    {
      v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents];
      v8 = *(_QWORD *)&v16[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEmittedEvents];
      v9 = __OFADD__(v8, v7);
      v10 = v8 + v7;
      if (!v9)
      {
        *(_QWORD *)&v16[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEmittedEvents] = v10;
        v11 = objc_msgSend(a1, sel_error);
        if (v11)
        {

          v12 = v16;
          v13 = objc_msgSend(a1, sel_error);
          if (v13)
          {
            v14 = v13;
            v15 = (void *)sub_23E945908();

          }
          else
          {
            v15 = 0;
          }
          objc_msgSend(v12, sel_setError_, v15);

        }
        __asm { BR              X11 }
      }
      __break(1u);
      JUMPOUT(0x23E8F12A0);
    }
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  }
}

void sub_23E8F12EC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _QWORD v32[5];

  v7 = v6;
  v29 = a5;
  v30 = a1;
  v27 = a4;
  v28 = a2 & 1;
  v10 = sub_23E945A10();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E9459A4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v27 - v19;
  LOBYTE(a6) = *a6;
  sub_23E8EF768(v7 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_features, (uint64_t)v32);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v21(v20, a3, v14);
  v21(v18, v27, v14);
  v31 = (char)a6;
  v22 = objc_allocWithZone((Class)type metadata accessor for QueryLogEvent());
  v23 = sub_23E93CD8C((uint64_t)v32, v28, (uint64_t)v20, (uint64_t)v18, v29, &v31);
  v24 = *(_QWORD *)(v7 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_pendingQueryLogEvents);
  os_unfair_lock_lock((os_unfair_lock_t)(v24 + 24));
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v30, v10);
  v25 = v23;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32[0] = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v24 + 16) = 0x8000000000000000;
  sub_23E93D358((uint64_t)v25, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v24 + 16) = v32[0];
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 24));

}

id sub_23E8F1500()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QueryMetricsObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for QueryMetricsObserver()
{
  return objc_opt_self();
}

uint64_t sub_23E8F15A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23E93520C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23E93625C();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_23E945A10();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_23E8F1680(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_23E8F1680(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v4 = sub_23E945A10();
  v31 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v32 = a2 + 64;
    result = sub_23E945F44();
    v11 = v32;
    if ((*(_QWORD *)(v32 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v31 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_23E8F18E4();
        v15 = sub_23E945ADC();
        result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 >= v12 && a1 >= (uint64_t)v16)
          {
LABEL_17:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v13 * a1;
            if (v13 * a1 < v14 || result >= v19 + v14 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v14)
            {
              result = swift_arrayInitWithTakeBackToFront();
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = (_QWORD *)(v20 + 8 * a1);
            v22 = (_QWORD *)(v20 + 8 * v9);
            v11 = v32;
            if (a1 != v9 || (a1 = v9, v21 >= v22 + 1))
            {
              *v21 = *v22;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v16 >= v12 || a1 >= (uint64_t)v16)
        {
          goto LABEL_17;
        }
        v11 = v32;
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v11 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v23 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E8F18E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D9EA90;
  if (!qword_256D9EA90)
  {
    v1 = sub_23E945A10();
    result = MEMORY[0x24265637C](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&qword_256D9EA90);
  }
  return result;
}

id sub_23E8F192C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  objc_class *MetricsObserver;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_super v16;
  uint64_t v17[5];

  v17[3] = a4;
  v17[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  MetricsObserver = (objc_class *)type metadata accessor for QueryMetricsObserver();
  v11 = (char *)objc_allocWithZone(MetricsObserver);
  v12 = OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_pendingQueryLogEvents;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED30);
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 16) = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v11[v12] = v13;
  *(_QWORD *)&v11[OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logEventDispatcher] = 0;
  sub_23E8EF768((uint64_t)v17, (uint64_t)&v11[OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_features]);
  *(_QWORD *)&v11[OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logSubmitter] = a2;
  v16.receiver = v11;
  v16.super_class = MetricsObserver;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14;
}

void sub_23E8F1A14(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;

  *(_QWORD *)(a2 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logEventDispatcher) = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9ED20);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23E947650;
  *(_QWORD *)(v4 + 32) = type metadata accessor for CloudKitQueryLogEvent();
  *(_QWORD *)(v4 + 40) = type metadata accessor for EventsAsyncSequenceLogEvent();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9ED28);
  v5 = (id)sub_23E945C14();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_addObserver_forEventClasses_, a2, v5);

}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t static HMVCommands.createFakeEvents(date:homeIdentifier:count:uploadOnly:saveOnly:skipZoneCreation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 66) = a6;
  *(_BYTE *)(v6 + 65) = a5;
  *(_BYTE *)(v6 + 64) = a4;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E8F1B44()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 66);
  v2 = *(_BYTE *)(v0 + 65);
  v3 = *(_BYTE *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v5 + 32) = v4;
  *(_BYTE *)(v5 + 40) = v3;
  *(_BYTE *)(v5 + 41) = v2;
  *(_BYTE *)(v5 + 42) = v1;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256D9E818 + dword_256D9E818);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v6;
  *v6 = v0;
  v6[1] = sub_23E8F1BF0;
  return v8((uint64_t)v8, (uint64_t)sub_23E8F1D98, v5);
}

uint64_t sub_23E8F1BF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E8F1C5C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E8F1C90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  void *v14;
  void *v15;
  void *v16;
  _QWORD aBlock[6];

  v14 = (void *)sub_23E94595C();
  v15 = (void *)sub_23E9459C8();
  aBlock[4] = sub_23E8F1F50;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E924584;
  aBlock[3] = &block_descriptor_1;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilCreateFakeEventsWithDate_homeIdentifier_count_uploadOnly_saveOnly_skipZoneCreation_reply_, v14, v15, a5, a6 & 1, a7 & 1, a8 & 1, v16);
  _Block_release(v16);

}

void sub_23E8F1D98(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23E8F1C90(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_BYTE *)(v2 + 41), *(_BYTE *)(v2 + 42));
}

void sub_23E8F1DB0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9ED48, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E8F1F50(void *a1)
{
  uint64_t v1;

  sub_23E8F1DB0(a1, v1);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_23E8F1F74()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E8F1F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, _BYTE *a9@<X8>, char a10, unsigned __int8 *a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  int v30;
  id v31;
  id v32;
  void *v33;
  char **v34;
  const char *v35;
  id v36;
  void (*v37)(_BYTE *, uint64_t);
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  id v43;
  uint64_t v44;
  void (*v45)(_BYTE *, uint64_t, uint64_t);
  uint64_t v46;
  _BYTE *v47;
  char v48;
  void (*v49)(_BYTE *, id);
  void (*v50)(_BYTE *, uint64_t);
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  int *v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  void (*v59)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v60;
  uint64_t result;
  _BYTE v62[12];
  int v63;
  uint64_t v64;
  id v65;
  _BYTE *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  _BYTE *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;

  v67 = a8;
  v74 = a7;
  v73 = a6;
  v69 = a5;
  v70 = a3;
  v75 = a4;
  v68 = a2;
  v84 = a1;
  v16 = sub_23E9459A4();
  v17 = *(_QWORD *)(v16 - 8);
  v79 = (void *)v16;
  v80 = v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = &v62[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v78 = &v62[-v21];
  v81 = sub_23E945860();
  v83 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v77 = &v62[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = sub_23E945D1C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = &v62[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v25);
  v29 = &v62[-v28];
  v30 = *a11;
  v66 = a9;
  *a9 = 7;
  v82 = a13;
  if (a15)
  {
    v31 = a15;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v32 = objc_msgSend(v82, sel_defaultConfiguration);
    if (!v32)
    {
      result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    v33 = v32;
    v31 = objc_msgSend(v32, sel_container);

    if (!v31)
    {
LABEL_6:
      if (qword_256D9E428 != -1)
        swift_once();
      v31 = (id)qword_256D9F8E0;
    }
  }
  v76 = v20;
  v71 = a15;
  v34 = &selRef_sharedCloudDatabase;
  if (!v30)
    v34 = &selRef_privateCloudDatabase;
  v35 = *v34;
  v72 = v31;
  v36 = objc_msgSend(v31, v35);
  sub_23E945D34();
  sub_23E945CE0();
  v63 = sub_23E945CEC();
  v37 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
  v38 = v27;
  v39 = a14;
  v37(v38, v23);
  v37(v29, v23);
  v65 = v36;
  if (!a14)
  {
    v40 = v84;
    v42 = v77;
    v41 = v78;
    v43 = v79;
    if (qword_256D9E438 != -1)
      goto LABEL_30;
    goto LABEL_14;
  }
  v64 = a14;
  v40 = v84;
  v42 = v77;
  v41 = v78;
  v43 = v79;
  while (1)
  {
    v44 = v83;
    v45 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v83 + 16);
    v46 = v40;
    v40 = v81;
    v45(v42, v46, v81);
    v79 = (void *)v39;
    swift_unknownObjectRetain();
    sub_23E945848();
    v47 = v76;
    sub_23E945938();
    v39 = sub_23E8E99C8(&qword_256D9EF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v48 = sub_23E945AF4();
    v49 = *(void (**)(_BYTE *, id))(v80 + 8);
    v49(v47, v43);
    v49(v41, v43);
    v50 = *(void (**)(_BYTE *, uint64_t))(v44 + 8);
    v50(v42, v40);
    if ((v48 & 1) != 0)
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v45(v42, v84, v40);
    sub_23E945830();
    sub_23E945848();
    v51 = sub_23E945AF4();
    v49(v47, v43);
    v49(v41, v43);
    v50(v42, v40);
    if ((v51 & 1) != 0)
      goto LABEL_27;
    v52 = v75;
    if (v75 && !*(_QWORD *)(v75 + 16))
      goto LABEL_28;
    v53 = v74;
    if ((v74 & 1) != 0)
      break;

    swift_unknownObjectRelease();
    v42 = (_BYTE *)v73;
    v43 = v82;
    if (v73 >= 1)
      goto LABEL_22;
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once();
LABEL_14:
    v64 = *((_QWORD *)off_256D9FCC0 + 2);
    swift_unknownObjectRetain();
  }
  swift_unknownObjectRelease();

  v43 = v82;
  v42 = (_BYTE *)v73;
LABEL_22:
  if ((v63 & 1) != 0)
    v54 = 25;
  else
    v54 = a12;
  v55 = (int *)type metadata accessor for EventQuery();
  v56 = v66;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v83 + 32))(&v66[v55[5]], v84, v40);
  v56[v55[6]] = v67 & 1;
  v56[v55[7]] = a10 & 1;
  v57 = &v56[v55[8]];
  v58 = sub_23E945A10();
  v59 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32);
  v59(v57, v68, v58);
  *(_QWORD *)&v56[v55[9]] = v52;
  sub_23E90136C(v69, (uint64_t)&v56[v55[10]], (uint64_t *)&unk_256D9ED50);
  v60 = &v56[v55[11]];
  *(_QWORD *)v60 = v42;
  v60[8] = v53 & 1;
  *(_QWORD *)&v56[v55[12]] = v54;
  result = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v59)(&v56[v55[13]], v70, v58);
  *(_QWORD *)&v56[v55[15]] = v43;
  *(_QWORD *)&v56[v55[14]] = v64;
  *(_QWORD *)&v56[v55[16]] = v65;
  return result;
}

uint64_t EventQuery.init(dateInterval:homeIdentifier:queryIdentifier:categories:accessoryIdentifier:resultsLimit:dateIntervalStartOpen:dateIntervalEndOpen:scope:qualityOfService:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, int a8@<W7>, _BYTE *a9@<X8>, unsigned __int8 a10, unsigned __int8 *a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  void (*v32)(uint64_t, uint64_t);
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  _BYTE *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  unsigned __int8 v48;

  v47 = a8;
  v45 = a4;
  v46 = a6;
  v39 = a2;
  v40 = a5;
  v37 = a1;
  v43 = a9;
  v42 = a10;
  v41 = a12;
  v44 = a7 & 1;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v14);
  v38 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_23E945A10();
  v36 = *(_QWORD *)(v16 - 8);
  v17 = v36;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = &v34[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v22 = &v34[-v21];
  v23 = sub_23E945860();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = &v34[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = *a11;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 16))(v26, a1, v23);
  v27 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16);
  v28 = v39;
  v27(v22, v39, v16);
  v29 = a3;
  v27(v20, a3, v16);
  v30 = v40;
  v31 = v38;
  sub_23E8ECF20(v40, (uint64_t)v38, (uint64_t *)&unk_256D9ED50);
  v48 = v35;
  sub_23E8F1F9C((uint64_t)v26, (uint64_t)v22, (uint64_t)v20, v45, (uint64_t)v31, v46, v44, v47, v43, v42, &v48, v41, 0, 0, 0);
  sub_23E8ECF64(v30, (uint64_t *)&unk_256D9ED50);
  v32 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v32(v29, v16);
  v32(v28, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v37, v23);
}

uint64_t EventQuery.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v6[16];
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F730);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v0;
  type metadata accessor for SomeEvent();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE6CA0], v1);
  return sub_23E945D7C();
}

uint64_t sub_23E8F2808(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9EE50);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EventQuery();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_23E9011A0(a2, (uint64_t)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v19, v3);
  v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v15 = (v9 + *(unsigned __int8 *)(v4 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  sub_23E901220((uint64_t)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v14, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v15, v6, v3);
  sub_23E901EB8((uint64_t)v12, (uint64_t)&unk_256D9EE68, v16);
  return swift_release();
}

uint64_t sub_23E8F29C4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E8F2808(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23E8F29CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[20] = a4;
  v5[21] = a5;
  v6 = sub_23E945CD4();
  v5[22] = v6;
  v5[23] = *(_QWORD *)(v6 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = type metadata accessor for EventQuery();
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v7 = sub_23E945A34();
  v5[31] = v7;
  v5[32] = *(_QWORD *)(v7 - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v8 = sub_23E945A10();
  v5[37] = v8;
  v5[38] = *(_QWORD *)(v8 - 8);
  v5[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E8F2AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  objc_class *v12;
  _BYTE *v13;
  id v14;
  void (*v15)(uint64_t, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(int *)(v7 + 56);
  *(_DWORD *)(v0 + 368) = v8;
  v9 = *(void **)(v6 + v8);
  v34 = *(_QWORD *)(v0 + 240);
  v36 = *(_QWORD *)(v0 + 232);
  v10 = *(int *)(v7 + 52);
  *(_DWORD *)(v0 + 372) = v10;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(_QWORD *)(v1 + 320) = v11;
  v11(v3, v6 + v10, v5);
  v12 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
  *(_QWORD *)(v1 + 328) = v12;
  v13 = objc_allocWithZone(v12);
  v11((uint64_t)&v13[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v3, v5);
  v13[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
  *(_QWORD *)(v1 + 16) = v13;
  *(_QWORD *)(v1 + 24) = v12;
  v14 = objc_msgSendSuper2((objc_super *)(v1 + 16), sel_init);
  v15 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v1 + 336) = v15;
  v15(v3, v5);
  objc_msgSend(v9, sel_submitLogEvent_, v14);

  sub_23E930C54(v4);
  sub_23E9011A0(v6, v34, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
  sub_23E9011A0(v6, v36, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
  v16 = sub_23E945A1C();
  v17 = sub_23E945E18();
  if (os_log_type_enabled(v16, v17))
  {
    v33 = *(_QWORD *)(v1 + 256);
    v18 = *(_QWORD *)(v1 + 240);
    v35 = *(_QWORD *)(v1 + 248);
    v37 = *(_QWORD *)(v1 + 288);
    v19 = *(_QWORD *)(v1 + 232);
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v38 = v21;
    *(_DWORD *)v20 = 136446466;
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v22 = sub_23E9460E8();
    *(_QWORD *)(v1 + 144) = sub_23E90F65C(v22, v23, &v38);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    sub_23E9011E4(v18, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    *(_WORD *)(v20 + 12) = 2080;
    v24 = EventQuery.description.getter();
    *(_QWORD *)(v1 + 152) = sub_23E90F65C(v24, v25, &v38);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    sub_23E9011E4(v19, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    _os_log_impl(&dword_23E8E7000, v16, v17, "Beginning query %{public}s: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v21, -1, -1);
    MEMORY[0x24265643C](v20, -1, -1);

    v26 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v26(v37, v35);
  }
  else
  {
    v27 = *(_QWORD *)(v1 + 288);
    v28 = *(_QWORD *)(v1 + 248);
    v29 = *(_QWORD *)(v1 + 256);
    v30 = *(_QWORD *)(v1 + 232);
    sub_23E9011E4(*(_QWORD *)(v1 + 240), (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    sub_23E9011E4(v30, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);

    v26 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v26(v27, v28);
  }
  *(_QWORD *)(v1 + 344) = v26;
  v31 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 352) = v31;
  *v31 = v1;
  v31[1] = sub_23E8F2E8C;
  return sub_23E8F39A4(*(_QWORD *)(v1 + 168));
}

uint64_t sub_23E8F2E8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E8F2EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _BYTE *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 160);
  sub_23E930C54(*(_QWORD *)(v0 + 280));
  sub_23E9011A0(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
  v3 = sub_23E945A1C();
  v4 = sub_23E945E18();
  if (os_log_type_enabled(v3, v4))
  {
    v24 = *(_QWORD *)(v0 + 280);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    v23 = *(_QWORD *)(v0 + 248);
    v5 = *(_QWORD *)(v0 + 224);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v26 = v7;
    *(_DWORD *)v6 = 136446210;
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v8 = sub_23E9460E8();
    *(_QWORD *)(v0 + 136) = sub_23E90F65C(v8, v9, &v26);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    sub_23E9011E4(v5, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    _os_log_impl(&dword_23E8E7000, v3, v4, "Finished query %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v7, -1, -1);
    MEMORY[0x24265643C](v6, -1, -1);

    v25(v24, v23);
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    v11 = *(_QWORD *)(v0 + 280);
    v12 = *(_QWORD *)(v0 + 248);
    sub_23E9011E4(*(_QWORD *)(v0 + 224), (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);

    v10(v11, v12);
  }
  v13 = *(objc_class **)(v0 + 328);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
  v15 = *(_QWORD *)(v0 + 312);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  v17 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD *)(v0 + 160);
  v19 = *(void **)(v18 + *(int *)(v0 + 368));
  v16(v15, v18 + *(int *)(v0 + 372), v17);
  v20 = objc_allocWithZone(v13);
  v16((uint64_t)&v20[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v15, v17);
  v20[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
  *(_QWORD *)(v0 + 32) = v20;
  *(_QWORD *)(v0 + 40) = v13;
  v21 = objc_msgSendSuper2((objc_super *)(v0 + 32), sel_init);
  v14(v15, v17);
  objc_msgSend(v19, sel_submitLogEvent_, v21);

  *(_QWORD *)(v0 + 128) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9EE50);
  sub_23E945D4C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8F3254()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void *v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  objc_class *v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _BYTE *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  void *v54;
  _BYTE *v55;
  id v56;
  void *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v1 = *(void **)(v0 + 360);
  *(_QWORD *)(v0 + 120) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E70);
  v3 = swift_dynamicCast();
  v4 = *(void **)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 160);
  if ((v3 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 272);
    v7 = *(_QWORD *)(v0 + 216);

    sub_23E930C54(v6);
    sub_23E9011A0(v5, v7, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    v8 = sub_23E945A1C();
    v9 = sub_23E945E18();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    if (v10)
    {
      v60 = *(_QWORD *)(v0 + 248);
      v63 = *(_QWORD *)(v0 + 272);
      v12 = *(_QWORD *)(v0 + 216);
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v66 = v14;
      *(_DWORD *)v13 = 136446210;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v15 = sub_23E9460E8();
      *(_QWORD *)(v0 + 112) = sub_23E90F65C(v15, v16, &v66);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E9011E4(v12, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
      _os_log_impl(&dword_23E8E7000, v8, v9, "Query %{public}s was canceled", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v14, -1, -1);
      MEMORY[0x24265643C](v13, -1, -1);

      v11(v63, v60);
    }
    else
    {
      v33 = *(_QWORD *)(v0 + 272);
      v34 = *(_QWORD *)(v0 + 248);
      sub_23E9011E4(*(_QWORD *)(v0 + 216), (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);

      v11(v33, v34);
    }
    v35 = *(objc_class **)(v0 + 328);
    v36 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v37 = *(_QWORD *)(v0 + 312);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
    v39 = *(_QWORD *)(v0 + 296);
    v40 = *(_QWORD *)(v0 + 184);
    v41 = *(_QWORD *)(v0 + 160);
    v62 = *(_QWORD *)(v0 + 176);
    v65 = *(_QWORD *)(v0 + 192);
    v42 = *(void **)(v41 + *(int *)(v0 + 368));
    v38(v37, v41 + *(int *)(v0 + 372), v39);
    v43 = objc_allocWithZone(v35);
    v38((uint64_t)&v43[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v37, v39);
    v43[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 2;
    *(_QWORD *)&v43[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v43[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v43[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(_QWORD *)(v0 + 64) = v43;
    *(_QWORD *)(v0 + 72) = v35;
    v44 = objc_msgSendSuper2((objc_super *)(v0 + 64), sel_init);
    v36(v37, v39);
    objc_msgSend(v42, sel_submitLogEvent_, v44);

    *(_QWORD *)(v0 + 104) = 0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9EE50);
    sub_23E945D4C();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v65, v62);

  }
  else
  {
    v17 = *(_QWORD *)(v0 + 264);
    v18 = *(_QWORD *)(v0 + 208);

    sub_23E930C54(v17);
    sub_23E9011A0(v5, v18, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    v19 = v4;
    v20 = v4;
    v21 = sub_23E945A1C();
    v22 = sub_23E945E00();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(void **)(v0 + 360);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    if (v23)
    {
      v61 = *(_QWORD *)(v0 + 248);
      v64 = *(_QWORD *)(v0 + 264);
      v26 = *(_QWORD *)(v0 + 208);
      v27 = swift_slowAlloc();
      v28 = (_QWORD *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      v66 = v59;
      *(_DWORD *)v27 = 136446466;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v29 = sub_23E9460E8();
      *(_QWORD *)(v0 + 80) = sub_23E90F65C(v29, v30, &v66);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E9011E4(v26, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
      *(_WORD *)(v27 + 12) = 2114;
      v31 = v24;
      v32 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 88) = v32;
      sub_23E945F08();
      *v28 = v32;

      _os_log_impl(&dword_23E8E7000, v21, v22, "Query %{public}s failed: %{public}@", (uint8_t *)v27, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v28, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v59, -1, -1);
      MEMORY[0x24265643C](v27, -1, -1);

      v25(v64, v61);
    }
    else
    {
      v45 = *(_QWORD *)(v0 + 264);
      v46 = *(_QWORD *)(v0 + 248);
      sub_23E9011E4(*(_QWORD *)(v0 + 208), (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);

      v25(v45, v46);
    }
    v47 = *(_QWORD *)(v0 + 360);
    v48 = *(objc_class **)(v0 + 328);
    v49 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v50 = *(_QWORD *)(v0 + 312);
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
    v52 = *(_QWORD *)(v0 + 296);
    v53 = *(_QWORD *)(v0 + 160);
    v54 = *(void **)(v53 + *(int *)(v0 + 368));
    v51(v50, v53 + *(int *)(v0 + 372), v52);
    v55 = objc_allocWithZone(v48);
    v51((uint64_t)&v55[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v50, v52);
    v55[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 14;
    *(_QWORD *)&v55[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v55[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v55[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(_QWORD *)(v0 + 48) = v55;
    *(_QWORD *)(v0 + 56) = v48;
    v56 = objc_msgSendSuper2((objc_super *)(v0 + 48), sel_init);
    v49(v50, v52);
    v57 = (void *)sub_23E945908();
    objc_msgSend(v54, sel_submitLogEvent_error_, v56, v57);

    *(_QWORD *)(v0 + 96) = v47;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9EE50);
    sub_23E945D4C();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8F39A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for EventQuery();
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E8F3A00()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  void *v13;

  v1 = v0[3];
  v2 = *(void **)(v1 + *(int *)(v0[4] + 60));
  sub_23E9011A0(v1, v0[5], (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
  if (v2)
  {
    v3 = v2;
  }
  else
  {
    v4 = v0[5];
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9190]), sel_init);
    v13 = v3;
    sub_23E8F4F28(&v13, v4);
  }
  v0[6] = v3;
  v5 = v0[5];
  v7 = v0[2];
  v6 = v0[3];
  v8 = v2;
  sub_23E9011E4(v5, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
  v9 = swift_task_alloc();
  v0[7] = v9;
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v7;
  v10 = v3;
  v11 = (_QWORD *)swift_task_alloc();
  v0[8] = v11;
  *v11 = v0;
  v11[1] = sub_23E8F3B20;
  return sub_23E945DC4();
}

uint64_t sub_23E8F3B20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23E8F3B94()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8F3BD0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EventQuery.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  int *v6;
  int *v8;
  char v9;
  uint64_t v10;
  unint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_23E945F5C();
  v4 = (int *)type metadata accessor for EventQuery();
  v8 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9ED60);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  sub_23E945A10();
  sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E9460E8();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  sub_23E9460E8();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  sub_23E945860();
  sub_23E8E99C8(&qword_256D9ED70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB8B8]);
  sub_23E9460E8();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  v8 = *(int **)(v0 + v4[9]);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9ED78);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  sub_23E8ECF20(v0 + v4[10], (uint64_t)v3, (uint64_t *)&unk_256D9ED50);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  v5 = v0 + v4[11];
  v6 = *(int **)v5;
  LOBYTE(v5) = *(_BYTE *)(v5 + 8);
  v8 = v6;
  v9 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9ED80);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  v8 = (int *)objc_msgSend(*(id *)(v0 + v4[16]), sel_scope);
  type metadata accessor for Scope(0);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  return v10;
}

uint64_t type metadata accessor for EventQuery()
{
  uint64_t result;

  result = qword_256D9EDE0;
  if (!qword_256D9EDE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static EventQuery.logCategory.getter()
{
  return 0x7972657551;
}

uint64_t sub_23E8F3FE8()
{
  return 0x7972657551;
}

_QWORD *initializeBufferWithCopyOfBuffer for EventQuery(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_23E945860();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v4 + v11) = *((_BYTE *)a2 + v11);
    v12 = a3[8];
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23E945A10();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v17(v13, v14, v15);
    v18 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v21(v20, 1, v15))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v17(v19, v20, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
    v24 = a3[11];
    v25 = a3[12];
    v26 = (char *)v4 + v24;
    v27 = (char *)a2 + v24;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v28 = *(_QWORD *)((char *)a2 + v25);
    v26[8] = v27[8];
    *(_QWORD *)((char *)v4 + v25) = v28;
    v17((char *)v4 + a3[13], (char *)a2 + a3[13], v15);
    v29 = a3[15];
    *(_QWORD *)((char *)v4 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
    v30 = *(void **)((char *)a2 + v29);
    *(_QWORD *)((char *)v4 + v29) = v30;
    v31 = a3[16];
    v32 = *(void **)((char *)a2 + v31);
    *(_QWORD *)((char *)v4 + v31) = v32;
    swift_unknownObjectRetain();
    v33 = v30;
    v34 = v32;
  }
  return v4;
}

void destroy for EventQuery(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  v4 = a1 + a2[5];
  v5 = sub_23E945860();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[8];
  v7 = sub_23E945A10();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  swift_bridgeObjectRelease();
  v10 = a1 + a2[10];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  v9(a1 + a2[13], v7);
  swift_unknownObjectRelease();

}

_BYTE *initializeWithCopy for EventQuery(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  unsigned int (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23E945860();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v10] = a2[v10];
  v11 = a3[8];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_23E945A10();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 16);
  v16(v12, v13, v14);
  v17 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (v20(v19, 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v16(v18, v19, v14);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  v22 = a3[11];
  v23 = a3[12];
  v24 = &a1[v22];
  v25 = &a2[v22];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = *(_QWORD *)&a2[v23];
  v24[8] = v25[8];
  *(_QWORD *)&a1[v23] = v26;
  v16(&a1[a3[13]], &a2[a3[13]], v14);
  v27 = a3[15];
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  v28 = *(void **)&a2[v27];
  *(_QWORD *)&a1[v27] = v28;
  v29 = a3[16];
  v30 = *(void **)&a2[v29];
  *(_QWORD *)&a1[v29] = v30;
  swift_unknownObjectRetain();
  v31 = v28;
  v32 = v30;
  return a1;
}

_BYTE *assignWithCopy for EventQuery(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t (*v19)(_BYTE *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23E945860();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  a1[a3[6]] = a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  v10 = a3[8];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_23E945A10();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[10];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19(&a1[v16], 1, v13);
  v21 = v19(v18, 1, v13);
  if (!v20)
  {
    if (!v21)
    {
      v15(v17, v18, v13);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v17, v18, v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
LABEL_7:
  v23 = a3[11];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *(_QWORD *)v25;
  v24[8] = v25[8];
  *(_QWORD *)v24 = v26;
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  v15(&a1[a3[13]], &a2[a3[13]], v13);
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v27 = a3[15];
  v28 = *(void **)&a1[v27];
  v29 = *(void **)&a2[v27];
  *(_QWORD *)&a1[v27] = v29;
  v30 = v29;

  v31 = a3[16];
  v32 = *(void **)&a2[v31];
  v33 = *(void **)&a1[v31];
  *(_QWORD *)&a1[v31] = v32;
  v34 = v32;

  return a1;
}

_BYTE *initializeWithTake for EventQuery(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23E945860();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v10] = a2[v10];
  v11 = a3[8];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_23E945A10();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32);
  v16(v12, v13, v14);
  v17 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(&a2[v17], 1, v14))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v16(v18, v19, v14);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  v21 = a3[11];
  v22 = a3[12];
  v23 = &a1[v21];
  v24 = &a2[v21];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v25 = *(_QWORD *)&a2[v22];
  v23[8] = v24[8];
  *(_QWORD *)&a1[v22] = v25;
  v16(&a1[a3[13]], &a2[a3[13]], v14);
  v26 = a3[15];
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  *(_QWORD *)&a1[v26] = *(_QWORD *)&a2[v26];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  return a1;
}

_BYTE *assignWithTake for EventQuery(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t (*v20)(_BYTE *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23E945860();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v10] = a2[v10];
  v11 = a3[8];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_23E945A10();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 40);
  v16(v12, v13, v14);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  v17 = a3[10];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48);
  v21 = v20(&a1[v17], 1, v14);
  v22 = v20(v19, 1, v14);
  if (!v21)
  {
    if (!v22)
    {
      v16(v18, v19, v14);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v18, v14);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32))(v18, v19, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
LABEL_7:
  v24 = a3[11];
  v25 = a3[12];
  v26 = &a1[v24];
  v27 = &a2[v24];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = *(_QWORD *)&a2[v25];
  v26[8] = v27[8];
  *(_QWORD *)&a1[v25] = v28;
  v16(&a1[a3[13]], &a2[a3[13]], v14);
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  swift_unknownObjectRelease();
  v29 = a3[15];
  v30 = *(void **)&a1[v29];
  *(_QWORD *)&a1[v29] = *(_QWORD *)&a2[v29];

  v31 = a3[16];
  v32 = *(void **)&a1[v31];
  *(_QWORD *)&a1[v31] = *(_QWORD *)&a2[v31];

  return a1;
}

uint64_t getEnumTagSinglePayload for EventQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E8F49F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;

  v6 = sub_23E945860();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_23E945A10();
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  v7 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v9 = a3[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v13 = *(_QWORD *)(a1 + a3[14]);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for EventQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E8F4AD0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v8 = sub_23E945860();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  v12 = sub_23E945A10();
  v9 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v12;
    v11 = a4[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[14]) = (a2 - 1);
  return result;
}

void sub_23E8F4B98()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23E945860();
  if (v0 <= 0x3F)
  {
    sub_23E945A10();
    if (v1 <= 0x3F)
    {
      sub_23E8F4C94();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_23E8F4C94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D9EDF0)
  {
    sub_23E945A10();
    v0 = sub_23E945EFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D9EDF0);
  }
}

uint64_t sub_23E8F4CE8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, uint64_t);
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v1 = (int *)type metadata accessor for EventQuery();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v15 = *(_QWORD *)(v2 + 64);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9EE50);
  v4 = *(_QWORD *)(v17 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_unknownObjectRelease();
  v16 = v3;
  v6 = v0 + v3;
  v7 = v0 + v3 + v1[5];
  v8 = sub_23E945860();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v3 + v1[8];
  v10 = sub_23E945A10();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  swift_bridgeObjectRelease();
  v13 = v6 + v1[10];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10))
    v12(v13, v10);
  v12(v6 + v1[13], v10);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v16 + v15 + v5) & ~v5), v17);
  return swift_deallocObject();
}

uint64_t sub_23E8F4E70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for EventQuery() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9EE50) - 8)
                          + 80);
  v8 = (v6 + v7) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v8;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23E8EAAEC;
  return sub_23E8F29CC(a1, v9, v10, v11, v12);
}

void sub_23E8F4F28(void **a1, uint64_t a2)
{
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[4];
  _QWORD v14[4];

  v3 = *a1;
  v14[2] = 0;
  v14[3] = 0xE000000000000000;
  v14[0] = 47;
  v14[1] = 0xE100000000000000;
  v13[2] = v14;
  v4 = (_QWORD *)sub_23E92E630(0x7FFFFFFFFFFFFFFFLL, 1, sub_23E901350, (uint64_t)v13, 0xD00000000000001ELL, 0x800000023E94C2C0);
  if (v4[2])
  {
    v5 = v4[4];
    v6 = v4[5];
    v7 = v4[6];
    v8 = v4[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x24265586C](v5, v6, v7, v8);
    sub_23E945BA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E945BA8();
    v9 = type metadata accessor for EventQuery();
    v14[0] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9ED60);
    sub_23E945B48();
    sub_23E945BA8();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_23E945B0C();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setName_, v10);

    objc_msgSend(v3, sel_setExpectedSendSize_, 1);
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9188]), sel_init);
    v12 = objc_msgSend(*(id *)(a2 + *(int *)(v9 + 64)), sel_container);
    objc_msgSend(v11, sel_setContainer_, v12);

    objc_msgSend(v11, sel_setQualityOfService_, *(_QWORD *)(a2 + *(int *)(v9 + 48)));
    objc_msgSend(v3, sel_setDefaultConfiguration_, v11);

  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
}

uint64_t sub_23E8F5130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  v6 = a3 + *(int *)(type metadata accessor for EventQuery() + 32);
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256D9F280 + dword_256D9F280);
  v7 = (_QWORD *)swift_task_alloc();
  v4[5] = v7;
  *v7 = v4;
  v7[1] = sub_23E8F51B8;
  return v9(a2, v6, 1);
}

uint64_t sub_23E8F51B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 48) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_23E8F522C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_23E8F5368();
  v0[7] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23E8F5294;
  return sub_23E8F5FB0(v0[2], v0[6], v1, v0[4]);
}

uint64_t sub_23E8F5294()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E8F52F8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8F5330()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8F5368()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  _BYTE *v31;
  uint64_t result;
  _BYTE *v33;
  double v34;
  double v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  void (*v40)(os_log_t, _BYTE *, uint64_t);
  _BYTE *v41;
  os_log_t v42;
  _BYTE *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(NSObject *, uint64_t);
  NSObject *v55;
  uint64_t v56;
  unint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  os_log_t v62;
  uint64_t v63;
  unint64_t v64;
  os_log_t v65;
  _BYTE *v66;
  int v67;
  int v68;
  _BYTE *v69;
  _BYTE *v70;
  NSObject *v71;
  os_log_type_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  void (*v79)(_BYTE *, uint64_t);
  _BYTE *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  os_log_t v84;
  _BYTE *v85;
  void (*v86)(os_log_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  void *v95;
  id v96;
  void *v97;
  uint64_t v98;
  id v99;
  void *v100;
  id v101;
  void *v102;
  uint64_t v103;
  void (*v104)(_BYTE *, uint64_t);
  _BYTE v105[4];
  int v106;
  os_log_t v107;
  _BYTE *v108;
  _BYTE *v109;
  _BYTE *v110;
  _BYTE *v111;
  os_log_t v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  _BYTE *v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;

  v1 = (_BYTE *)type metadata accessor for EventQuery();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v111 = &v105[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = MEMORY[0x24BDAC7A8](v2);
  v108 = &v105[-v5];
  v6 = MEMORY[0x24BDAC7A8](v4);
  v113 = &v105[-v7];
  MEMORY[0x24BDAC7A8](v6);
  v110 = &v105[-v8];
  v9 = sub_23E945A34();
  v115 = *(_QWORD *)(v9 - 8);
  v116 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v109 = &v105[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v114 = &v105[-v12];
  v13 = sub_23E9459A4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v112 = (os_log_t)&v105[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v119 = &v105[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = &v105[-v20];
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = &v105[-v23];
  MEMORY[0x24BDAC7A8](v22);
  v26 = &v105[-v25];
  type metadata accessor for Configuration();
  v27 = static Configuration.cloudKitRecordDateCoalescingWindowSeconds.getter();
  v120 = v24;
  v121 = v26;
  v117 = v13;
  v118 = v14;
  if (v27 < 1)
  {
    sub_23E945848();
    v67 = *(unsigned __int8 *)(v0 + *((int *)v1 + 6));
    sub_23E945830();
    v68 = *(unsigned __int8 *)(v0 + *((int *)v1 + 7));
    v69 = v109;
    sub_23E930C54((uint64_t)v109);
    v70 = v108;
    sub_23E9011A0(v0, (uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    sub_23E9011A0(v0, (uint64_t)v111, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    v71 = sub_23E945A1C();
    v72 = sub_23E945DF4();
    v73 = v72;
    if (os_log_type_enabled(v71, v72))
    {
      v74 = swift_slowAlloc();
      v112 = v71;
      v75 = v74;
      v113 = (_BYTE *)swift_slowAlloc();
      v123 = (uint64_t)v113;
      *(_DWORD *)v75 = 136315394;
      v107 = (os_log_t)(v75 + 4);
      LODWORD(v110) = v73;
      sub_23E945848();
      sub_23E8E99C8(&qword_256D9EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v76 = sub_23E9460E8();
      LODWORD(v119) = v68;
      v78 = v77;
      LODWORD(v114) = v67;
      v79 = *(void (**)(_BYTE *, uint64_t))(v118 + 8);
      v79(v21, v13);
      v122 = sub_23E90F65C(v76, v78, &v123);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E9011E4((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
      *(_WORD *)(v75 + 12) = 2080;
      v80 = v111;
      sub_23E945830();
      v81 = sub_23E9460E8();
      v83 = v82;
      v79(v21, v13);
      v122 = sub_23E90F65C(v81, v83, &v123);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E9011E4((uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
      v84 = v112;
      _os_log_impl(&dword_23E8E7000, v112, (os_log_type_t)v110, "Not using coalescing window, start date %s, end date %s", (uint8_t *)v75, 0x16u);
      v85 = v113;
      swift_arrayDestroy();
      MEMORY[0x24265643C](v85, -1, -1);
      MEMORY[0x24265643C](v75, -1, -1);

    }
    else
    {
      sub_23E9011E4((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
      sub_23E9011E4((uint64_t)v111, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);

    }
    (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v69, v116);
    goto LABEL_18;
  }
  v28 = v27;
  v111 = v1;
  sub_23E945848();
  sub_23E945944();
  v30 = v29;
  v31 = *(_BYTE **)(v14 + 8);
  result = ((uint64_t (*)(_BYTE *, uint64_t))v31)(v21, v13);
  if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((unsigned __int128)((uint64_t)v30 / v28 * (__int128)v28) >> 64 != ((uint64_t)v30 / v28 * v28) >> 63)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v33 = v121;
  sub_23E945938();
  sub_23E945830();
  sub_23E945944();
  v35 = v34;
  result = ((uint64_t (*)(_BYTE *, uint64_t))v31)(v21, v13);
  if ((~*(_QWORD *)&v35 & 0x7FF0000000000000) == 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v35 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v35 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v36 = (uint64_t)v35 / v28;
  if (__OFADD__(v36, 1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if ((unsigned __int128)((v36 + 1) * (__int128)v28) >> 64 == ((v36 + 1) * v28) >> 63)
  {
    v109 = v31;
    v37 = v120;
    sub_23E945938();
    v38 = v114;
    sub_23E930C54((uint64_t)v114);
    v39 = v110;
    sub_23E9011A0(v0, (uint64_t)v110, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    v40 = *(void (**)(os_log_t, _BYTE *, uint64_t))(v14 + 16);
    v40(v119, v33, v13);
    v41 = v113;
    sub_23E9011A0(v0, (uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    v42 = v112;
    v43 = v37;
    v44 = v13;
    v40(v112, v43, v13);
    v45 = sub_23E945A1C();
    v46 = sub_23E945DF4();
    v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      v48 = swift_slowAlloc();
      v108 = (_BYTE *)swift_slowAlloc();
      v122 = v28;
      v123 = (uint64_t)v108;
      *(_DWORD *)v48 = 134219010;
      sub_23E945F08();
      *(_WORD *)(v48 + 12) = 2080;
      v107 = v45;
      v106 = v47;
      sub_23E945848();
      sub_23E8E99C8(&qword_256D9EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v49 = sub_23E9460E8();
      v51 = v50;
      v52 = v44;
      v53 = v44;
      v54 = v109;
      ((void (*)(_BYTE *, uint64_t))v109)(v21, v52);
      v122 = sub_23E90F65C(v49, v51, &v123);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E9011E4((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
      *(_WORD *)(v48 + 22) = 2080;
      v55 = v119;
      v56 = sub_23E9460E8();
      v122 = sub_23E90F65C(v56, v57, &v123);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      ((void (*)(NSObject *, uint64_t))v54)(v55, v53);
      *(_WORD *)(v48 + 32) = 2080;
      v58 = v113;
      sub_23E945830();
      v59 = sub_23E9460E8();
      v61 = v60;
      ((void (*)(_BYTE *, uint64_t))v54)(v21, v53);
      v122 = sub_23E90F65C(v59, v61, &v123);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E9011E4((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
      *(_WORD *)(v48 + 42) = 2080;
      v62 = v112;
      v63 = sub_23E9460E8();
      v122 = sub_23E90F65C(v63, v64, &v123);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      ((void (*)(os_log_t, uint64_t))v54)(v62, v53);
      v65 = v107;
      _os_log_impl(&dword_23E8E7000, v107, (os_log_type_t)v106, "Using coalescing window of %ld seconds, adjusted start date %s => %s, end date %s => %s", (uint8_t *)v48, 0x34u);
      v66 = v108;
      swift_arrayDestroy();
      MEMORY[0x24265643C](v66, -1, -1);
      MEMORY[0x24265643C](v48, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v114, v116);
    }
    else
    {
      sub_23E9011E4((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
      v86 = (void (*)(os_log_t, uint64_t))v109;
      ((void (*)(NSObject *, uint64_t))v109)(v119, v44);
      sub_23E9011E4((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
      v86(v42, v44);

      (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v38, v116);
    }
LABEL_18:
    v123 = 0;
    v124 = 0xE000000000000000;
    sub_23E945F5C();
    swift_bridgeObjectRelease();
    v123 = 1042303781;
    v124 = 0xE400000000000000;
    sub_23E945BA8();
    swift_bridgeObjectRelease();
    sub_23E945BA8();
    v119 = sub_23E901318(0, &qword_256D9EF78);
    sub_23E945BA8();
    swift_bridgeObjectRelease();
    sub_23E945BA8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF80);
    v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = xmmword_23E9476D0;
    v88 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v87 + 56) = MEMORY[0x24BEE0D00];
    v89 = sub_23E90127C();
    *(_QWORD *)(v87 + 64) = v89;
    *(_QWORD *)(v87 + 32) = 1702125924;
    *(_QWORD *)(v87 + 40) = 0xE400000000000000;
    v90 = sub_23E94595C();
    v91 = sub_23E901318(0, &qword_256D9EF90);
    *(_QWORD *)(v87 + 96) = v91;
    v92 = sub_23E9012C0();
    *(_QWORD *)(v87 + 72) = v90;
    *(_QWORD *)(v87 + 136) = v88;
    *(_QWORD *)(v87 + 144) = v89;
    *(_QWORD *)(v87 + 104) = v92;
    *(_QWORD *)(v87 + 112) = 1702125924;
    *(_QWORD *)(v87 + 120) = 0xE400000000000000;
    v93 = v120;
    v94 = sub_23E94595C();
    *(_QWORD *)(v87 + 176) = v91;
    *(_QWORD *)(v87 + 184) = v92;
    *(_QWORD *)(v87 + 152) = v94;
    v95 = (void *)sub_23E945DDC();
    swift_bridgeObjectRelease();
    sub_23E901318(0, &qword_256D9EFA0);
    v96 = v95;
    v97 = (void *)sub_23E945EC0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EFA8);
    v98 = swift_allocObject();
    *(_OWORD *)(v98 + 16) = xmmword_23E9476E0;
    v99 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
    v100 = (void *)sub_23E945B0C();
    v101 = objc_msgSend(v99, sel_initWithKey_ascending_, v100, 0);

    *(_QWORD *)(v98 + 32) = v101;
    v123 = v98;
    sub_23E945C38();
    sub_23E901318(0, (unint64_t *)&unk_256D9EFB0);
    v102 = (void *)sub_23E945C14();
    swift_bridgeObjectRelease();
    objc_msgSend(v97, sel_setSortDescriptors_, v102);

    v103 = v117;
    v104 = *(void (**)(_BYTE *, uint64_t))(v118 + 8);
    v104(v93, v117);
    v104(v121, v103);
    return (uint64_t)v97;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E8F5FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[95] = v4;
  v5[94] = a4;
  v5[93] = a3;
  v5[92] = a2;
  v5[91] = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEA0);
  v5[96] = v6;
  v5[97] = *(_QWORD *)(v6 - 8);
  v5[98] = swift_task_alloc();
  v5[99] = swift_task_alloc();
  v5[100] = swift_task_alloc();
  v5[101] = type metadata accessor for EventRecord.DecodedEvent(0);
  v5[102] = swift_task_alloc();
  type metadata accessor for SomeEvent();
  v5[103] = swift_task_alloc();
  v5[104] = swift_task_alloc();
  v7 = sub_23E945A34();
  v5[105] = v7;
  v5[106] = *(_QWORD *)(v7 - 8);
  v5[107] = swift_task_alloc();
  v5[108] = swift_task_alloc();
  v5[109] = swift_task_alloc();
  v5[110] = swift_task_alloc();
  v5[111] = swift_task_alloc();
  v5[112] = swift_task_alloc();
  v5[113] = swift_task_alloc();
  v5[114] = swift_task_alloc();
  v5[115] = swift_task_alloc();
  v5[116] = swift_task_alloc();
  v5[117] = swift_task_alloc();
  v5[118] = swift_task_alloc();
  v5[119] = type metadata accessor for EventRecord(0);
  v5[120] = swift_task_alloc();
  v5[121] = swift_task_alloc();
  v5[122] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  v5[123] = swift_task_alloc();
  v8 = sub_23E945A10();
  v5[124] = v8;
  v5[125] = *(_QWORD *)(v8 - 8);
  v5[126] = swift_task_alloc();
  v5[127] = swift_task_alloc();
  v5[128] = swift_task_alloc();
  v5[129] = swift_task_alloc();
  v5[130] = swift_task_alloc();
  v5[131] = swift_task_alloc();
  v5[132] = swift_task_alloc();
  v5[133] = swift_task_alloc();
  v5[134] = swift_task_alloc();
  v5[135] = swift_task_alloc();
  v5[136] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEA8);
  v5[137] = v9;
  v5[138] = *(_QWORD *)(v9 - 8);
  v5[139] = swift_task_alloc();
  v10 = sub_23E9459A4();
  v5[140] = v10;
  v5[141] = *(_QWORD *)(v10 - 8);
  v5[142] = swift_task_alloc();
  v5[143] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEB0);
  v5[144] = v11;
  v5[145] = *(_QWORD *)(v11 - 8);
  v5[146] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEB8);
  v5[147] = v12;
  v5[148] = *(_QWORD *)(v12 - 8);
  v5[149] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9EEC0);
  v5[150] = swift_task_alloc();
  v5[151] = swift_task_alloc();
  v5[152] = swift_task_alloc();
  v5[153] = swift_task_alloc();
  v5[154] = type metadata accessor for CKQueryAsyncSequence();
  v5[155] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E8F6378()
{
  uint64_t v0;
  _QWORD *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  _QWORD *v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD **)(v0 + 1240);
  v2 = *(int **)(v0 + 1232);
  v39 = *(_QWORD *)(v0 + 1160);
  v37 = *(_QWORD *)(v0 + 1168);
  v38 = *(_QWORD *)(v0 + 1152);
  v32 = *(_QWORD *)(v0 + 1224);
  v33 = *(_QWORD *)(v0 + 1144);
  v30 = *(_QWORD *)(v0 + 1128);
  v31 = *(_QWORD *)(v0 + 1120);
  v34 = *(_QWORD *)(v0 + 1104);
  v35 = *(_QWORD *)(v0 + 1112);
  v36 = *(_QWORD *)(v0 + 1096);
  v3 = *(_QWORD *)(v0 + 1000);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 760);
  v6 = *(void **)(v0 + 744);
  v7 = *(void **)(v0 + 736);
  v8 = *(void **)(v0 + 728);
  v29 = sub_23E8F98E8(v5);
  v28 = v9;
  v10 = (int *)type metadata accessor for EventQuery();
  *(_QWORD *)(v0 + 1248) = v10;
  v11 = v10[13];
  *(_DWORD *)(v0 + 1320) = v11;
  v12 = v5 + v11;
  v13 = (char *)v1 + v2[8];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 1256) = v14;
  v14(v13, v12, v4);
  v15 = *(_QWORD *)(v5 + v10[12]);
  v16 = v10[14];
  *(_DWORD *)(v0 + 1324) = v16;
  v17 = *(_QWORD *)(v5 + v16);
  *v1 = v8;
  v1[2] = v7;
  v1[3] = v6;
  *(_QWORD *)((char *)v1 + v2[9]) = &unk_250F180D8;
  v18 = (char *)v1 + v2[10];
  *(_QWORD *)v18 = v29;
  v18[8] = v28 & 1;
  v1[1] = 0;
  v19 = (char *)v1 + v2[11];
  *(_QWORD *)v19 = v15;
  v19[8] = 0;
  *(_QWORD *)((char *)v1 + v2[12]) = v17;
  *(_QWORD *)(v0 + 584) = 0;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
  *(_QWORD *)(v0 + 1264) = v20;
  v20(v32, 1, 1, v31);
  *(_QWORD *)(v0 + 664) = MEMORY[0x24BEE4AF8];
  v21 = v8;
  v22 = v7;
  v23 = v6;
  swift_unknownObjectRetain();
  sub_23E945998();
  v24 = swift_task_alloc();
  *(_QWORD *)(v24 + 16) = v1;
  *(_QWORD *)(v24 + 24) = v33;
  sub_23E901318(0, &qword_256DA00D0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v35, *MEMORY[0x24BEE6CA0], v36);
  sub_23E945D7C();
  v25 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  *(_QWORD *)(v0 + 1272) = v25;
  v25(v33, v31);
  swift_task_dealloc();
  sub_23E945D58();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1280) = v26;
  *v26 = v0;
  v26[1] = sub_23E8F6608;
  return sub_23E945D64();
}

uint64_t sub_23E8F6608()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_OWORD *)(v2 + 1288) = 0u;
  return swift_task_switch();
}

uint64_t sub_23E8F6680()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t *v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  _QWORD *v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  objc_class *v61;
  _BYTE *v62;
  id v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  void *v71;
  uint64_t v72;
  char *v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  id v79;
  char *v80;
  id v81;
  NSObject *v82;
  _BOOL4 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  id v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  objc_class *v102;
  _BYTE *v103;
  id v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  _BOOL4 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  void (*v125)(uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  objc_class *v131;
  _BYTE *v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  unsigned __int8 *v136;
  int v137;
  void (*v138)(uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  _BOOL4 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint8_t *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  void (*v155)(uint64_t, uint64_t);
  void (*v156)(uint64_t, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  objc_class *v163;
  _BYTE *v164;
  id v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  objc_class *v176;
  _BYTE *v177;
  id v178;
  uint64_t v179;
  int EnumCaseMultiPayload;
  void (*v181)(uint64_t, uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  NSObject *v186;
  os_log_type_t v187;
  _BOOL4 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  void (*v199)(uint64_t, uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  NSObject *v203;
  os_log_type_t v204;
  _BOOL4 v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  void (*v214)(uint64_t, uint64_t);
  uint64_t DynamicType;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void (*v223)(uint64_t, uint64_t, uint64_t);
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  void *v229;
  objc_class *v230;
  _BYTE *v231;
  id v232;
  char v233;
  void (*v234)(uint64_t, uint64_t, uint64_t);
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  NSObject *v238;
  os_log_type_t v239;
  _BOOL4 v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  NSObject *v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  NSObject *v256;
  os_log_type_t v257;
  _BOOL4 v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  void (*v284)(uint64_t, uint64_t, uint64_t);
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  void *v291;
  objc_class *v292;
  _BYTE *v293;
  id v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t result;
  void (*v298)(uint64_t, uint64_t);
  uint64_t v299;
  uint64_t v300;
  char v301;
  uint64_t v302;
  uint64_t v303;
  unint64_t v304;
  unint64_t v305;
  unint64_t v306;
  int64_t v307;
  uint64_t v308;
  void (*v309)(uint64_t, uint64_t);
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  _QWORD *v321;
  uint64_t v322;
  int v323;
  uint64_t v324;
  uint64_t v325;
  char v326;
  void (*v327)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  NSObject *v331;
  os_log_type_t v332;
  uint8_t *v333;
  void (*v334)(uint64_t, uint64_t);
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unint64_t v351;
  int64_t v352;
  void (*v353)(uint64_t, uint64_t);
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  NSObject *v362;
  os_log_type_t v363;
  uint8_t *v364;
  NSObject *v365;
  uint64_t v366;
  void (*v367)(uint64_t, uint64_t, uint64_t);
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  void *v376;
  objc_class *v377;
  _BYTE *v378;
  id v379;
  void (*v380)(uint64_t, uint64_t);
  void *v381;
  uint64_t v382;
  _BYTE *v383;
  id v384;
  char v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  os_log_type_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  NSObject *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  os_log_type_t v398;
  void (*v399)(uint64_t, uint64_t, uint64_t);
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  os_log_type_t v404;
  uint64_t v405;
  uint64_t v406;
  char *v407;
  os_log_type_t v408;
  char *v409;
  uint64_t *v410;
  void (*v411)(uint64_t, uint64_t);
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  os_log_type_t v417;
  uint64_t v418;
  void (*v419)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v420;
  void (*v421)(uint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t *v422;
  void (*v423)(uint64_t, uint64_t);
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  _QWORD *v430;
  uint64_t v431;
  uint64_t *v432;
  uint64_t v433;
  void (*v434)(uint64_t, uint64_t);
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  char *v444;
  uint64_t v445;
  uint64_t v446;
  void (*v447)(uint64_t, uint64_t);
  uint64_t v448;
  void (*v449)(uint64_t, uint64_t);
  uint64_t v450;
  uint64_t v451;
  void (*v452)(uint64_t, uint64_t, uint64_t);
  void (*v453)(uint64_t, uint64_t);
  void (*v454)(uint64_t, uint64_t, uint64_t);
  uint64_t v455[3];

  v1 = (_QWORD *)(v0 + 584);
  v2 = (unint64_t *)(v0 + 664);
  v3 = *(uint64_t **)(v0 + 632);
  if (!v3)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1184) + 8))(*(_QWORD *)(v0 + 1192), *(_QWORD *)(v0 + 1176));
    v441 = *(_QWORD *)(v0 + 1296);
    goto LABEL_7;
  }
  v4 = *(_QWORD *)(v0 + 1296);
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  *(_QWORD *)(v0 + 1304) = v6;
  if (v5)
  {
    __break(1u);
    goto LABEL_64;
  }
  v422 = (unint64_t *)(v0 + 664);
  v441 = v6;
  v7 = *(_QWORD *)(v0 + 1000);
  v8 = *(_QWORD *)(v0 + 992);
  v9 = *(_QWORD *)(v0 + 984);
  v10 = objc_msgSend(v3, sel_recordID);
  v11 = objc_msgSend(v10, sel_recordName);

  sub_23E945B18();
  sub_23E9459B0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v8) == 1)
  {
    v12 = *(_QWORD *)(v0 + 880);
    sub_23E8ECF64(*(_QWORD *)(v0 + 984), (uint64_t *)&unk_256D9ED50);
    sub_23E930C54(v12);
    v13 = v3;
    v14 = sub_23E945A1C();
    v15 = sub_23E945DE8();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 880);
    v18 = *(_QWORD *)(v0 + 848);
    v19 = *(_QWORD *)(v0 + 840);
    if (v16)
    {
      v442 = *(_QWORD *)(v0 + 848);
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v455[0] = v21;
      *(_DWORD *)v20 = 141558274;
      *(_QWORD *)(v20 + 4) = 1752392040;
      *(_WORD *)(v20 + 12) = 2080;
      v22 = objc_msgSend(v13, sel_recordID);
      v431 = v17;
      v23 = objc_msgSend(v22, sel_recordName);

      v24 = sub_23E945B18();
      v25 = v19;
      v27 = v26;

      *(_QWORD *)(v20 + 14) = sub_23E90F65C(v24, v27, v455);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23E8E7000, v14, v15, "Ignoring record with non-UUID record name: %{mask.hash}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v21, -1, -1);
      MEMORY[0x24265643C](v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v442 + 8))(v431, v25);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v56 = *(_QWORD *)(v0 + 1072);
    v57 = *(_QWORD *)(v0 + 1000);
    v58 = *(_QWORD *)(v0 + 992);
    v59 = *(_QWORD *)(v0 + 760);
    v60 = *(void **)(v59 + *(int *)(v0 + 1324));
    v55(v56, v59 + *(int *)(v0 + 1320), v58);
    v61 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    v62 = objc_allocWithZone(v61);
    v55((uint64_t)&v62[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v56, v58);
    v62[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 9;
    *(_QWORD *)&v62[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v62[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v62[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(_QWORD *)(v0 + 344) = v62;
    *(_QWORD *)(v0 + 352) = v61;
    v63 = objc_msgSendSuper2((objc_super *)(v0 + 344), sel_init);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
    objc_msgSend(v60, sel_submitLogEvent_, v63);

    goto LABEL_62;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1000) + 32))(*(_QWORD *)(v0 + 1088), *(_QWORD *)(v0 + 984), *(_QWORD *)(v0 + 992));
  v432 = v3;
  if ((objc_msgSend(v3, sel_isExpired) & 1) != 0)
  {
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v38 = *(_QWORD *)(v0 + 1088);
    v39 = *(_QWORD *)(v0 + 1024);
    v40 = *(_QWORD *)(v0 + 992);
    sub_23E930C54(*(_QWORD *)(v0 + 888));
    v37(v39, v38, v40);
    v41 = sub_23E945A1C();
    v42 = sub_23E945DE8();
    v43 = os_log_type_enabled(v41, v42);
    v44 = *(_QWORD *)(v0 + 1024);
    v45 = *(_QWORD *)(v0 + 1000);
    v46 = *(_QWORD *)(v0 + 992);
    v47 = *(_QWORD *)(v0 + 888);
    v48 = *(_QWORD *)(v0 + 848);
    v49 = *(_QWORD *)(v0 + 840);
    if (v43)
    {
      v50 = swift_slowAlloc();
      v443 = v47;
      v51 = swift_slowAlloc();
      v455[0] = v51;
      *(_DWORD *)v50 = 136446210;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v52 = sub_23E9460E8();
      *(_QWORD *)(v50 + 4) = sub_23E90F65C(v52, v53, v455);
      swift_bridgeObjectRelease();
      v54 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
      v54(v44, v46);
      _os_log_impl(&dword_23E8E7000, v41, v42, "Ignoring record that has expired: %{public}s", (uint8_t *)v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v51, -1, -1);
      MEMORY[0x24265643C](v50, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v443, v49);
    }
    else
    {
      v54 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
      v54(*(_QWORD *)(v0 + 1024), *(_QWORD *)(v0 + 992));

      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    }
    v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v97 = *(_QWORD *)(v0 + 1088);
    v98 = *(_QWORD *)(v0 + 1072);
    v99 = *(_QWORD *)(v0 + 992);
    v100 = *(_QWORD *)(v0 + 760);
    v101 = *(void **)(v100 + *(int *)(v0 + 1324));
    v96(v98, v100 + *(int *)(v0 + 1320), v99);
    v102 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    v103 = objc_allocWithZone(v102);
    v96((uint64_t)&v103[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v98, v99);
    v103[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 7;
    *(_QWORD *)&v103[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v103[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v103[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(_QWORD *)(v0 + 520) = v103;
    *(_QWORD *)(v0 + 528) = v102;
    v104 = objc_msgSendSuper2((objc_super *)(v0 + 520), sel_init);
    v54(v98, v99);
    objc_msgSend(v101, sel_submitLogEvent_, v104);

    v54(v97, v99);
    goto LABEL_62;
  }
  v64 = sub_23E945EE4();
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 1264);
  v66 = *(_QWORD *)(v0 + 1216);
  if (!v64)
  {
    v65(*(_QWORD *)(v0 + 1216), 1, 1, *(_QWORD *)(v0 + 1120));
    goto LABEL_25;
  }
  v67 = *(_QWORD *)(v0 + 1128);
  v68 = *(_QWORD *)(v0 + 1120);
  *(_QWORD *)(v0 + 720) = v64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EED0);
  v69 = swift_dynamicCast();
  v65(v66, v69 ^ 1u, 1, v68);
  v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  if (v70(v66, 1, v68) == 1)
  {
LABEL_25:
    v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v106 = *(_QWORD *)(v0 + 1088);
    v107 = *(_QWORD *)(v0 + 1032);
    v108 = *(_QWORD *)(v0 + 992);
    v109 = *(_QWORD *)(v0 + 896);
    sub_23E8ECF64(*(_QWORD *)(v0 + 1216), (uint64_t *)&unk_256D9EEC0);
    sub_23E930C54(v109);
    v105(v107, v106, v108);
    v110 = sub_23E945A1C();
    v111 = sub_23E945DE8();
    v112 = os_log_type_enabled(v110, v111);
    v113 = *(_QWORD *)(v0 + 1032);
    v114 = *(_QWORD *)(v0 + 1000);
    v115 = *(_QWORD *)(v0 + 992);
    v116 = *(_QWORD *)(v0 + 896);
    v117 = *(_QWORD *)(v0 + 848);
    v118 = *(_QWORD *)(v0 + 840);
    if (v112)
    {
      v119 = swift_slowAlloc();
      v445 = v116;
      v120 = swift_slowAlloc();
      v455[0] = v120;
      *(_DWORD *)v119 = 136446210;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v121 = sub_23E9460E8();
      *(_QWORD *)(v119 + 4) = sub_23E90F65C(v121, v122, v455);
      swift_bridgeObjectRelease();
      v123 = v115;
      v124 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
      v124(v113, v123);
      _os_log_impl(&dword_23E8E7000, v110, v111, "Ignoring record with no date: %{public}s", (uint8_t *)v119, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v120, -1, -1);
      MEMORY[0x24265643C](v119, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v445, v118);
    }
    else
    {
      v124 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
      v124(*(_QWORD *)(v0 + 1032), *(_QWORD *)(v0 + 992));

      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v116, v118);
    }
    v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v126 = *(_QWORD *)(v0 + 1088);
    v127 = *(_QWORD *)(v0 + 1072);
    v128 = *(_QWORD *)(v0 + 992);
    v129 = *(_QWORD *)(v0 + 760);
    v130 = *(void **)(v129 + *(int *)(v0 + 1324));
    v125(v127, v129 + *(int *)(v0 + 1320), v128);
    v131 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    v132 = objc_allocWithZone(v131);
    v125((uint64_t)&v132[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v127, v128);
    v132[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 8;
    *(_QWORD *)&v132[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v132[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v132[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(_QWORD *)(v0 + 360) = v132;
    *(_QWORD *)(v0 + 368) = v131;
    v133 = objc_msgSendSuper2((objc_super *)(v0 + 360), sel_init);
    v124(v127, v128);
    objc_msgSend(v130, sel_submitLogEvent_, v133);

    v124(v126, v128);
    goto LABEL_62;
  }
  v71 = *(void **)(v0 + 1288);
  v72 = *(_QWORD *)(v0 + 968);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1128) + 32))(*(_QWORD *)(v0 + 1136), *(_QWORD *)(v0 + 1216), *(_QWORD *)(v0 + 1120));
  v73 = v3;
  EventRecord.init(from:)(v73, v72);
  if (v71)
  {
    v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v75 = *(_QWORD *)(v0 + 1088);
    v76 = *(_QWORD *)(v0 + 1016);
    v77 = *(_QWORD *)(v0 + 992);
    sub_23E930C54(*(_QWORD *)(v0 + 864));
    v74(v76, v75, v77);
    v78 = v73;
    v79 = v71;
    v80 = v78;
    v81 = v71;
    v82 = sub_23E945A1C();
    v408 = sub_23E945E00();
    v83 = os_log_type_enabled(v82, v408);
    v84 = *(_QWORD *)(v0 + 1016);
    v85 = *(_QWORD *)(v0 + 1000);
    v86 = *(_QWORD *)(v0 + 992);
    v87 = *(_QWORD *)(v0 + 864);
    v415 = *(_QWORD *)(v0 + 848);
    v88 = *(_QWORD *)(v0 + 840);
    v444 = v80;
    if (v83)
    {
      v394 = v82;
      v89 = swift_slowAlloc();
      v402 = v87;
      v90 = (_QWORD *)swift_slowAlloc();
      v395 = swift_slowAlloc();
      v455[0] = v395;
      *(_DWORD *)v89 = 136446722;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v91 = sub_23E9460E8();
      *(_QWORD *)(v0 + 688) = sub_23E90F65C(v91, v92, v455);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      v423 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
      v423(v84, v86);
      *(_WORD *)(v89 + 12) = 2112;
      *(_QWORD *)(v0 + 672) = v80;
      v93 = v80;
      sub_23E945F08();
      *v90 = v432;

      *(_WORD *)(v89 + 22) = 2114;
      v94 = v71;
      v95 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 640) = v95;
      sub_23E945F08();
      v90[1] = v95;

      _os_log_impl(&dword_23E8E7000, v394, v408, "Ignoring invalid record: %{public}s (%@), %{public}@", (uint8_t *)v89, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v90, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v395, -1, -1);
      MEMORY[0x24265643C](v89, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v415 + 8))(v402, v88);
    }
    else
    {
      v423 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
      v423(v84, v86);

      (*(void (**)(uint64_t, uint64_t))(v415 + 8))(v87, v88);
    }
    v434 = *(void (**)(uint64_t, uint64_t))(v0 + 1272);
    v156 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v157 = *(_QWORD *)(v0 + 1136);
    v158 = *(_QWORD *)(v0 + 1120);
    v416 = *(_QWORD *)(v0 + 1088);
    v159 = *(_QWORD *)(v0 + 1072);
    v160 = *(_QWORD *)(v0 + 992);
    v161 = *(_QWORD *)(v0 + 760);
    v162 = *(void **)(v161 + *(int *)(v0 + 1324));
    v156(v159, v161 + *(int *)(v0 + 1320), v160);
    v163 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    v164 = objc_allocWithZone(v163);
    v156((uint64_t)&v164[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v159, v160);
    v164[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 15;
    *(_QWORD *)&v164[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v164[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v164[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(_QWORD *)(v0 + 392) = v164;
    *(_QWORD *)(v0 + 400) = v163;
    v165 = objc_msgSendSuper2((objc_super *)(v0 + 392), sel_init);
    v423(v159, v160);
    objc_msgSend(v162, sel_submitLogEvent_, v165);

    v434(v157, v158);
    v423(v416, v160);
    goto LABEL_62;
  }
  v134 = *(_QWORD *)(v0 + 976);
  v135 = *(_QWORD *)(v0 + 952);
  v136 = *(unsigned __int8 **)(v0 + 760);
  sub_23E901220(*(_QWORD *)(v0 + 968), v134, type metadata accessor for EventRecord);
  v137 = *(unsigned __int8 *)(v134 + *(int *)(v135 + 28));
  if (*v136 == v137)
  {
    v409 = v73;
    v138 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v139 = *(_QWORD *)(v0 + 1088);
    v140 = *(_QWORD *)(v0 + 1080);
    v141 = *(_QWORD *)(v0 + 992);
    sub_23E930C54(*(_QWORD *)(v0 + 944));
    v138(v140, v139, v141);
    v142 = sub_23E945A1C();
    v143 = sub_23E945DF4();
    v144 = os_log_type_enabled(v142, v143);
    v145 = *(_QWORD *)(v0 + 1080);
    v146 = *(_QWORD *)(v0 + 1000);
    v147 = *(_QWORD *)(v0 + 992);
    v148 = *(_QWORD *)(v0 + 944);
    v149 = *(_QWORD *)(v0 + 848);
    v150 = *(_QWORD *)(v0 + 840);
    if (v144)
    {
      v446 = *(_QWORD *)(v0 + 944);
      v151 = (uint8_t *)swift_slowAlloc();
      v433 = v149;
      v152 = swift_slowAlloc();
      v455[0] = v152;
      *(_DWORD *)v151 = 136315138;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v153 = sub_23E9460E8();
      *(_QWORD *)(v0 + 696) = sub_23E90F65C(v153, v154, v455);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      v155 = *(void (**)(uint64_t, uint64_t))(v146 + 8);
      v155(v145, v147);
      _os_log_impl(&dword_23E8E7000, v142, v143, "Ignoring fake record: %s", v151, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v152, -1, -1);
      MEMORY[0x24265643C](v151, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v433 + 8))(v446, v150);
    }
    else
    {
      v155 = *(void (**)(uint64_t, uint64_t))(v146 + 8);
      v155(*(_QWORD *)(v0 + 1080), *(_QWORD *)(v0 + 992));

      (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v148, v150);
    }
    v447 = *(void (**)(uint64_t, uint64_t))(v0 + 1272);
    v169 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v170 = *(_QWORD *)(v0 + 1136);
    v424 = *(_QWORD *)(v0 + 1120);
    v435 = *(_QWORD *)(v0 + 1088);
    v171 = *(_QWORD *)(v0 + 1072);
    v172 = *(_QWORD *)(v0 + 992);
    v173 = *(_QWORD *)(v0 + 760);
    v174 = *(_QWORD *)(v0 + 976);
    v175 = *(void **)(v173 + *(int *)(v0 + 1324));
    v169(v171, v173 + *(int *)(v0 + 1320), v172);
    v176 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    v177 = objc_allocWithZone(v176);
    v169((uint64_t)&v177[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v171, v172);
    v177[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 16;
    *(_QWORD *)&v177[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v177[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v177[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(_QWORD *)(v0 + 376) = v177;
    *(_QWORD *)(v0 + 384) = v176;
    v178 = objc_msgSendSuper2((objc_super *)(v0 + 376), sel_init);
    v155(v171, v172);
    objc_msgSend(v175, sel_submitLogEvent_, v178);

    sub_23E9011E4(v174, type metadata accessor for EventRecord);
    v447(v170, v424);
    v155(v435, v172);
    goto LABEL_62;
  }
  v166 = (uint64_t *)(*(_QWORD *)(v0 + 976) + *(int *)(*(_QWORD *)(v0 + 952) + 32));
  v167 = *v166;
  v168 = v166[1];
  *(_BYTE *)(v0 + 1329) = v137;
  sub_23E91AC18(v167, v168, v0 + 1329);
  v179 = *(_QWORD *)(v0 + 816);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v181 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
  v182 = *(_QWORD *)(v0 + 1088);
  v436 = *(_QWORD *)(v0 + 992);
  v407 = v73;
  if (EnumCaseMultiPayload == 1)
  {
    v183 = *(_QWORD *)(v0 + 1064);
    v184 = *(_QWORD *)(v0 + 976);
    v185 = *(_QWORD *)(v0 + 960);
    sub_23E930C54(*(_QWORD *)(v0 + 936));
    sub_23E9011A0(v184, v185, type metadata accessor for EventRecord);
    v181(v183, v182, v436);
    v186 = sub_23E945A1C();
    v187 = sub_23E945E00();
    v188 = os_log_type_enabled(v186, v187);
    v189 = *(_QWORD *)(v0 + 1064);
    v190 = *(_QWORD *)(v0 + 1000);
    v191 = *(_QWORD *)(v0 + 992);
    v192 = *(_QWORD *)(v0 + 960);
    if (v188)
    {
      v417 = v187;
      v193 = *(_QWORD *)(v0 + 952);
      v448 = *(_QWORD *)(v0 + 936);
      v425 = *(_QWORD *)(v0 + 848);
      v437 = *(_QWORD *)(v0 + 840);
      v194 = swift_slowAlloc();
      v412 = swift_slowAlloc();
      v455[0] = v412;
      *(_DWORD *)v194 = 136315394;
      *(_BYTE *)(v0 + 1328) = *(_BYTE *)(v192 + *(int *)(v193 + 28));
      v195 = sub_23E945B48();
      *(_QWORD *)(v0 + 704) = sub_23E90F65C(v195, v196, v455);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E9011E4(v192, type metadata accessor for EventRecord);
      *(_WORD *)(v194 + 12) = 2080;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v197 = sub_23E9460E8();
      *(_QWORD *)(v0 + 712) = sub_23E90F65C(v197, v198, v455);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      v199 = *(void (**)(uint64_t, uint64_t))(v190 + 8);
      v199(v189, v191);
      _os_log_impl(&dword_23E8E7000, v186, v417, "Ignoring fake record that had mismatched dataType (%s): %s", (uint8_t *)v194, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v412, -1, -1);
      MEMORY[0x24265643C](v194, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v425 + 8))(v448, v437);
    }
    else
    {
      v220 = *(_QWORD *)(v0 + 936);
      v221 = *(_QWORD *)(v0 + 848);
      v222 = *(_QWORD *)(v0 + 840);
      sub_23E9011E4(*(_QWORD *)(v0 + 960), type metadata accessor for EventRecord);
      v199 = *(void (**)(uint64_t, uint64_t))(v190 + 8);
      v199(v189, v191);

      (*(void (**)(uint64_t, uint64_t))(v221 + 8))(v220, v222);
    }
    v449 = *(void (**)(uint64_t, uint64_t))(v0 + 1272);
    v223 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v224 = *(_QWORD *)(v0 + 1136);
    v438 = *(_QWORD *)(v0 + 1088);
    v225 = *(_QWORD *)(v0 + 1072);
    v226 = *(_QWORD *)(v0 + 992);
    v227 = *(_QWORD *)(v0 + 976);
    v228 = *(_QWORD *)(v0 + 760);
    v418 = *(_QWORD *)(v0 + 1120);
    v426 = *(_QWORD *)(v0 + 816);
    v229 = *(void **)(v228 + *(int *)(v0 + 1324));
    v223(v225, v228 + *(int *)(v0 + 1320), v226);
    v230 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    v231 = objc_allocWithZone(v230);
    v223((uint64_t)&v231[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v225, v226);
    v231[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 16;
    *(_QWORD *)&v231[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v231[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v231[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(_QWORD *)(v0 + 408) = v231;
    *(_QWORD *)(v0 + 416) = v230;
    v232 = objc_msgSendSuper2((objc_super *)(v0 + 408), sel_init);
    v199(v225, v226);
    objc_msgSend(v229, sel_submitLogEvent_, v232);

    sub_23E9011E4(v227, type metadata accessor for EventRecord);
    v449(v224, v418);
    v199(v438, v226);
    sub_23E9011E4(v426, type metadata accessor for EventRecord.DecodedEvent);
    goto LABEL_62;
  }
  v396 = *(_QWORD *)(v0 + 1056);
  v200 = *(_QWORD *)(v0 + 928);
  v399 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
  v201 = *(_QWORD *)(v0 + 832);
  v202 = *(_QWORD *)(v0 + 824);
  sub_23E901220(v179, v202, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
  sub_23E9011A0(v202, v201, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
  SomeEvent.anyEvent.getter((uint64_t *)(v0 + 216));
  sub_23E9011E4(v202, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
  sub_23E930C54(v200);
  v399(v396, v182, v436);
  v430 = (_QWORD *)(v0 + 216);
  v403 = v0 + 256;
  sub_23E8EF768(v0 + 216, v0 + 256);
  v203 = sub_23E945A1C();
  v204 = sub_23E945DF4();
  v205 = os_log_type_enabled(v203, v204);
  v206 = *(_QWORD *)(v0 + 1056);
  v207 = *(_QWORD *)(v0 + 1000);
  v208 = *(_QWORD *)(v0 + 992);
  v209 = *(_QWORD *)(v0 + 928);
  v400 = *(_QWORD *)(v0 + 848);
  v210 = *(_QWORD *)(v0 + 840);
  if (v205)
  {
    v397 = *(_QWORD *)(v0 + 840);
    v211 = swift_slowAlloc();
    v391 = swift_slowAlloc();
    v455[0] = v391;
    *(_DWORD *)v211 = 136315394;
    v390 = v204;
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v212 = sub_23E9460E8();
    v392 = v209;
    *(_QWORD *)(v0 + 656) = sub_23E90F65C(v212, v213, v455);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    v214 = *(void (**)(uint64_t, uint64_t))(v207 + 8);
    v214(v206, v208);
    *(_WORD *)(v211 + 12) = 2080;
    sub_23E8EF768(v403, v0 + 56);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
    DynamicType = swift_getDynamicType();
    v216 = *(_QWORD *)(v0 + 88);
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    *(_QWORD *)(v0 + 424) = DynamicType;
    *(_QWORD *)(v0 + 432) = v216;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EED8);
    v217 = sub_23E945B48();
    *(_QWORD *)(v0 + 680) = sub_23E90F65C(v217, v218, v455);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v403);
    _os_log_impl(&dword_23E8E7000, v203, v390, "Successfully decoded record %s: %s", (uint8_t *)v211, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v391, -1, -1);
    MEMORY[0x24265643C](v211, -1, -1);

    v219 = *(uint64_t **)(v400 + 8);
    ((void (*)(uint64_t, uint64_t))v219)(v392, v397);
  }
  else
  {
    v214 = *(void (**)(uint64_t, uint64_t))(v207 + 8);
    v214(v206, v208);
    __swift_destroy_boxed_opaque_existential_1(v403);

    v219 = *(uint64_t **)(v400 + 8);
    ((void (*)(uint64_t, uint64_t))v219)(v209, v210);
  }
  v411 = v214;
  v233 = sub_23E8F99B0(v430);
  v234 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
  v235 = *(_QWORD *)(v0 + 1088);
  v236 = *(_QWORD *)(v0 + 992);
  if ((v233 & 1) == 0)
  {
    v255 = *(_QWORD *)(v0 + 1048);
    sub_23E930C54(*(_QWORD *)(v0 + 920));
    v234(v255, v235, v236);
    sub_23E8EF768((uint64_t)v430, v0 + 16);
    v256 = sub_23E945A1C();
    v257 = sub_23E945DE8();
    v258 = os_log_type_enabled(v256, v257);
    v259 = *(_QWORD *)(v0 + 1048);
    v260 = *(_QWORD *)(v0 + 992);
    v261 = *(_QWORD *)(v0 + 920);
    v262 = *(_QWORD *)(v0 + 840);
    if (v258)
    {
      v404 = v257;
      v263 = swift_slowAlloc();
      v264 = swift_slowAlloc();
      v455[0] = v264;
      *(_DWORD *)v263 = 136446466;
      v427 = v261;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v265 = sub_23E9460E8();
      v405 = v262;
      *(_QWORD *)(v0 + 576) = sub_23E90F65C(v265, v266, v455);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      v411(v259, v260);
      *(_WORD *)(v263 + 12) = 2082;
      sub_23E8EF768(v0 + 16, v0 + 176);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 200));
      v267 = swift_getDynamicType();
      v268 = *(_QWORD *)(v0 + 208);
      __swift_destroy_boxed_opaque_existential_1(v0 + 176);
      *(_QWORD *)(v0 + 456) = v267;
      *(_QWORD *)(v0 + 464) = v268;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EED8);
      v269 = sub_23E945B48();
      *(_QWORD *)(v0 + 600) = sub_23E90F65C(v269, v270, v455);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      _os_log_impl(&dword_23E8E7000, v256, v404, "Ignoring record that does not match query: %{public}s, %{public}s", (uint8_t *)v263, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v264, -1, -1);
      MEMORY[0x24265643C](v263, -1, -1);

      ((void (*)(uint64_t, uint64_t))v219)(v427, v405);
    }
    else
    {
      v411(*(_QWORD *)(v0 + 1048), *(_QWORD *)(v0 + 992));
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);

      ((void (*)(uint64_t, uint64_t))v219)(v261, v262);
    }
    v453 = *(void (**)(uint64_t, uint64_t))(v0 + 1272);
    v284 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v285 = *(_QWORD *)(v0 + 1120);
    v420 = *(_QWORD *)(v0 + 1136);
    v428 = *(_QWORD *)(v0 + 1088);
    v286 = *(_QWORD *)(v0 + 1072);
    v287 = *(_QWORD *)(v0 + 992);
    v288 = *(_QWORD *)(v0 + 976);
    v289 = *(_QWORD *)(v0 + 760);
    v290 = *(_QWORD *)(v0 + 832);
    v291 = *(void **)(v289 + *(int *)(v0 + 1324));
    v284(v286, v289 + *(int *)(v0 + 1320), v287);
    v292 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    v293 = objc_allocWithZone(v292);
    v284((uint64_t)&v293[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v286, v287);
    v293[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 17;
    *(_QWORD *)&v293[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v293[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v293[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(_QWORD *)(v0 + 504) = v293;
    *(_QWORD *)(v0 + 512) = v292;
    v294 = objc_msgSendSuper2((objc_super *)(v0 + 504), sel_init);
    v411(v286, v287);
    objc_msgSend(v291, sel_submitLogEvent_, v294);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v430);
    sub_23E9011E4(v290, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    sub_23E9011E4(v288, type metadata accessor for EventRecord);
    v453(v420, v285);
    v411(v428, v287);
    goto LABEL_62;
  }
  v410 = v219;
  v237 = *(_QWORD *)(v0 + 1040);
  sub_23E930C54(*(_QWORD *)(v0 + 912));
  v234(v237, v235, v236);
  v413 = v0 + 136;
  sub_23E8EF768((uint64_t)v430, v0 + 136);
  v238 = sub_23E945A1C();
  v239 = sub_23E945DE8();
  v240 = os_log_type_enabled(v238, v239);
  v241 = *(_QWORD *)(v0 + 1040);
  v242 = *(_QWORD *)(v0 + 992);
  v243 = *(_QWORD *)(v0 + 912);
  v244 = *(_QWORD *)(v0 + 840);
  if (v240)
  {
    v398 = v239;
    v401 = *(_QWORD *)(v0 + 840);
    v245 = swift_slowAlloc();
    v393 = swift_slowAlloc();
    v455[0] = v393;
    *(_DWORD *)v245 = 136446466;
    v246 = v238;
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v247 = sub_23E9460E8();
    *(_QWORD *)(v0 + 624) = sub_23E90F65C(v247, v248, v455);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    v411(v241, v242);
    *(_WORD *)(v245 + 12) = 2082;
    sub_23E8EF768(v413, v0 + 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v249 = swift_getDynamicType();
    v250 = *(_QWORD *)(v0 + 128);
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
    *(_QWORD *)(v0 + 440) = v249;
    *(_QWORD *)(v0 + 448) = v250;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EED8);
    v251 = sub_23E945B48();
    *(_QWORD *)(v0 + 648) = sub_23E90F65C(v251, v252, v455);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v413);
    _os_log_impl(&dword_23E8E7000, v246, v398, "Record contains an event that matches query: %{public}s: %{public}s", (uint8_t *)v245, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v393, -1, -1);
    MEMORY[0x24265643C](v245, -1, -1);

    v253 = v243;
    v254 = v401;
  }
  else
  {
    v411(*(_QWORD *)(v0 + 1040), *(_QWORD *)(v0 + 992));
    __swift_destroy_boxed_opaque_existential_1(v413);

    v253 = v243;
    v254 = v244;
  }
  v3 = v410;
  ((void (*)(uint64_t, uint64_t))v410)(v253, v254);
  v271 = *(_QWORD *)(v0 + 1208);
  v272 = *(_QWORD *)(v0 + 1120);
  sub_23E8ECF20(*(_QWORD *)(v0 + 1224), v271, (uint64_t *)&unk_256D9EEC0);
  LODWORD(v272) = v70(v271, 1, v272);
  sub_23E8ECF64(v271, (uint64_t *)&unk_256D9EEC0);
  if ((_DWORD)v272 == 1)
  {
    v419 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 1264);
    v273 = *(_QWORD *)(v0 + 1224);
    v274 = *(_QWORD *)(v0 + 1136);
    v275 = *(_QWORD *)(v0 + 1128);
    v276 = *(_QWORD *)(v0 + 1120);
    v277 = *(_QWORD *)(v0 + 1088);
    v278 = *(_QWORD *)(v0 + 992);
    v450 = *(_QWORD *)(v0 + 832);
    v452 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v3 = (uint64_t *)(v0 + 800);
    v279 = *(_QWORD *)(v0 + 800);
    v280 = *(_QWORD *)(v0 + 768);
    sub_23E8ECF64(v273, (uint64_t *)&unk_256D9EEC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v275 + 16))(v273, v274, v276);
    v419(v273, 0, 1, v276);
    v281 = v279 + *(int *)(v280 + 48);
    v452(v279, v277, v278);
    v282 = v450;
    v283 = v281;
LABEL_58:
    sub_23E9011A0(v282, v283, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    v304 = *(_QWORD *)(v0 + 664);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v304 = sub_23E9049F8(0, *(_QWORD *)(v304 + 16) + 1, 1, v304);
      *v422 = v304;
    }
    v306 = *(_QWORD *)(v304 + 16);
    v305 = *(_QWORD *)(v304 + 24);
    v307 = v306 + 1;
    if (v306 < v305 >> 1)
      goto LABEL_61;
    v385 = v305 > 1;
    v352 = v306 + 1;
    goto LABEL_89;
  }
  v295 = *(_QWORD *)(v0 + 1200);
  v296 = *(_QWORD *)(v0 + 1120);
  sub_23E8ECF20(*(_QWORD *)(v0 + 1224), v295, (uint64_t *)&unk_256D9EEC0);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v70)(v295, 1, v296);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    return result;
  }
  v298 = *(void (**)(uint64_t, uint64_t))(v0 + 1272);
  v299 = *(_QWORD *)(v0 + 1200);
  v300 = *(_QWORD *)(v0 + 1120);
  v301 = sub_23E94598C();
  v298(v299, v300);
  if ((v301 & 1) != 0)
  {
    v302 = *(_QWORD *)(v0 + 832);
    v3 = (uint64_t *)(v0 + 792);
    v303 = *(_QWORD *)(v0 + 792) + *(int *)(*(_QWORD *)(v0 + 768) + 48);
    (*(void (**)(void))(v0 + 1256))();
    v282 = v302;
    v283 = v303;
    goto LABEL_58;
  }
LABEL_64:
  v318 = *(_QWORD *)(v0 + 1248);
  v319 = *(_QWORD *)(v0 + 760);
  v304 = *(_QWORD *)(v0 + 664);
  v320 = swift_bridgeObjectRetain();
  v321 = (_QWORD *)sub_23E922A34(v320);
  swift_bridgeObjectRelease();
  v35 = v319 + *(int *)(v318 + 44);
  v322 = *(_QWORD *)v35;
  v323 = *(unsigned __int8 *)(v35 + 8);
  v324 = *(_QWORD *)(v0 + 584);
  if ((v323 & 1) == 0)
  {
    v5 = __OFSUB__(v322, v324);
    v322 -= v324;
    if (v5)
      goto LABEL_91;
  }
  v325 = *(_QWORD *)(v0 + 1224);
  v304 = sub_23E8FADF8(v321, v322, v323, *(_QWORD *)(v0 + 752));
  LOBYTE(v31) = v326;
  swift_bridgeObjectRelease();
  sub_23E8ECF64(v325, (uint64_t *)&unk_256D9EEC0);
  if (__OFADD__(v324, v304))
  {
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v327 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 1264);
  v328 = *(_QWORD *)(v0 + 1224);
  v329 = *(_QWORD *)(v0 + 1120);
  *(_QWORD *)(v0 + 584) = v324 + v304;
  v327(v328, 1, 1, v329);
  v33 = *(_QWORD *)(v0 + 664);
  v36 = v422;
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    sub_23E900FF0(0, *(_QWORD *)(v33 + 16));
  }
  else
  {
LABEL_70:
    *v36 = sub_23E8FC3B4(0, *(_QWORD *)(v33 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  if ((*(_BYTE *)(v35 + 8) & 1) != 0 || (v330 = *(_QWORD *)v35, *(_QWORD *)(v0 + 584) != v330))
  {
    if ((v31 & 1) == 0)
    {
      while (1)
      {
        v353 = *(void (**)(uint64_t, uint64_t))(v0 + 1272);
        v354 = *(_QWORD *)(v0 + 1192);
        v355 = *(_QWORD *)(v0 + 1184);
        v440 = *(_QWORD *)(v0 + 1176);
        v356 = *(_QWORD *)(v0 + 1136);
        v357 = *(_QWORD *)(v0 + 1120);
        v358 = *(_QWORD *)(v0 + 1088);
        v359 = *(_QWORD *)(v0 + 992);
        v360 = *(_QWORD *)(v0 + 976);
        v361 = *(_QWORD *)(v0 + 832);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v430);
        sub_23E9011E4(v361, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
        sub_23E9011E4(v360, type metadata accessor for EventRecord);
        v353(v356, v357);
        v411(v358, v359);
        (*(void (**)(uint64_t, uint64_t))(v355 + 8))(v354, v440);
        v1 = (_QWORD *)(v0 + 584);
        v2 = v422;
LABEL_7:
        if (!*(_QWORD *)(*v2 + 16))
          goto LABEL_84;
        v28 = *(_QWORD *)(v0 + 1248);
        v29 = *(_QWORD *)(v0 + 760);
        v30 = swift_bridgeObjectRetain();
        v31 = sub_23E922A34(v30);
        swift_bridgeObjectRelease();
        v32 = v29 + *(int *)(v28 + 44);
        v33 = *(_QWORD *)v32;
        v34 = *(unsigned __int8 *)(v32 + 8);
        swift_bridgeObjectRelease();
        v35 = *(_QWORD *)(v0 + 584);
        if ((v34 & 1) != 0 || (v5 = __OFSUB__(v33, v35), v33 -= v35, !v5))
        {
          v36 = (_QWORD *)sub_23E8FADF8((_QWORD *)v31, v33, v34, *(_QWORD *)(v0 + 752));
          swift_bridgeObjectRelease();
          if (!__OFADD__(v35, v36))
          {
            *v1 = (char *)v36 + v35;
            goto LABEL_85;
          }
          __break(1u);
          goto LABEL_70;
        }
        __break(1u);
      }
    }
    v421 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 1264);
    v342 = *(_QWORD *)(v0 + 1224);
    v343 = *(_QWORD *)(v0 + 1136);
    v344 = *(_QWORD *)(v0 + 1128);
    v345 = *(_QWORD *)(v0 + 1120);
    v346 = *(_QWORD *)(v0 + 1088);
    v347 = *(_QWORD *)(v0 + 992);
    v451 = *(_QWORD *)(v0 + 832);
    v454 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
    v3 = (uint64_t *)(v0 + 784);
    v348 = *(_QWORD *)(v0 + 784);
    v349 = *(_QWORD *)(v0 + 768);
    sub_23E8ECF64(v342, (uint64_t *)&unk_256D9EEC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v344 + 16))(v342, v343, v345);
    v421(v342, 0, 1, v345);
    v350 = v348 + *(int *)(v349 + 48);
    v454(v348, v346, v347);
    sub_23E9011A0(v451, v350, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    v304 = *(_QWORD *)(v0 + 664);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_79:
      v306 = *(_QWORD *)(v304 + 16);
      v351 = *(_QWORD *)(v304 + 24);
      v352 = v306 + 1;
      if (v306 < v351 >> 1)
      {
LABEL_80:
        v307 = v352;
LABEL_61:
        v308 = *v3;
        v309 = *(void (**)(uint64_t, uint64_t))(v0 + 1272);
        v310 = *(_QWORD *)(v0 + 1136);
        v311 = *(_QWORD *)(v0 + 1120);
        v312 = *(_QWORD *)(v0 + 1088);
        v313 = *(_QWORD *)(v0 + 992);
        v314 = *(_QWORD *)(v0 + 976);
        v315 = *(_QWORD *)(v0 + 832);
        v316 = *(_QWORD *)(v0 + 776);
        *(_QWORD *)(v304 + 16) = v307;
        sub_23E90136C(v308, v304+ ((*(unsigned __int8 *)(v316 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v316 + 80))+ *(_QWORD *)(v316 + 72) * v306, &qword_256D9EEA0);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v430);
        sub_23E9011E4(v315, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
        sub_23E9011E4(v314, type metadata accessor for EventRecord);
        v309(v310, v311);
        v411(v312, v313);
LABEL_62:
        v317 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 1312) = v317;
        *v317 = v0;
        v317[1] = sub_23E8F959C;
        return sub_23E945D64();
      }
      v385 = v351 > 1;
      v307 = v306 + 1;
LABEL_89:
      v304 = sub_23E9049F8(v385, v307, 1, v304);
      *v422 = v304;
      goto LABEL_80;
    }
LABEL_92:
    v304 = sub_23E9049F8(0, *(_QWORD *)(v304 + 16) + 1, 1, v304);
    *v422 = v304;
    goto LABEL_79;
  }
  sub_23E930C54(*(_QWORD *)(v0 + 904));
  v331 = sub_23E945A1C();
  v332 = sub_23E945DE8();
  if (os_log_type_enabled(v331, v332))
  {
    v333 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v333 = 134217984;
    *(_QWORD *)(v0 + 616) = v330;
    sub_23E945F08();
    _os_log_impl(&dword_23E8E7000, v331, v332, "Reached query limit: %ld", v333, 0xCu);
    MEMORY[0x24265643C](v333, -1, -1);
  }
  v334 = *(void (**)(uint64_t, uint64_t))(v0 + 1272);
  v439 = *(_QWORD *)(v0 + 1192);
  v414 = *(_QWORD *)(v0 + 1184);
  v429 = *(_QWORD *)(v0 + 1176);
  v335 = *(_QWORD *)(v0 + 1136);
  v336 = *(_QWORD *)(v0 + 1120);
  v406 = *(_QWORD *)(v0 + 1088);
  v337 = *(_QWORD *)(v0 + 992);
  v338 = *(_QWORD *)(v0 + 976);
  v339 = *(_QWORD *)(v0 + 904);
  v340 = *(_QWORD *)(v0 + 840);
  v341 = *(_QWORD *)(v0 + 832);

  ((void (*)(uint64_t, uint64_t))v410)(v339, v340);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v430);
  sub_23E9011E4(v341, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
  sub_23E9011E4(v338, type metadata accessor for EventRecord);
  v334(v335, v336);
  v411(v406, v337);
  (*(void (**)(uint64_t, uint64_t))(v414 + 8))(v439, v429);
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 664) + 16))
  {
    v1 = (_QWORD *)(v0 + 584);
LABEL_84:
    swift_bridgeObjectRelease();
    goto LABEL_85;
  }
  swift_bridgeObjectRelease();
  v1 = (_QWORD *)(v0 + 584);
LABEL_85:
  sub_23E930C54(*(_QWORD *)(v0 + 872));
  v362 = sub_23E945A1C();
  v363 = sub_23E945DE8();
  if (os_log_type_enabled(v362, v363))
  {
    v364 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v364 = 134217984;
    swift_beginAccess();
    *(_QWORD *)(v0 + 592) = *v1;
    sub_23E945F08();
    _os_log_impl(&dword_23E8E7000, v362, v363, "Emitted %ld matching event(s)", v364, 0xCu);
    MEMORY[0x24265643C](v364, -1, -1);
  }
  v365 = v362;
  v366 = *(int *)(v0 + 1324);
  v386 = v366;
  v367 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
  v368 = *(int *)(v0 + 1320);
  v388 = *(_QWORD *)(v0 + 1224);
  v389 = *(_QWORD *)(v0 + 1240);
  v369 = *(_QWORD *)(v0 + 1072);
  v387 = *(_QWORD *)(v0 + 1000);
  v370 = *(_QWORD *)(v0 + 992);
  v371 = *(_QWORD *)(v0 + 872);
  v372 = *(_QWORD *)(v0 + 848);
  v373 = *(_QWORD *)(v0 + 840);
  v374 = *(_QWORD *)(v0 + 760);

  v375 = v374 + v368;
  (*(void (**)(uint64_t, uint64_t))(v372 + 8))(v371, v373);
  v376 = *(void **)(v374 + v366);
  v367(v369, v375, v370);
  v377 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
  v378 = objc_allocWithZone(v377);
  v367((uint64_t)&v378[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v369, v370);
  v378[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 10;
  *(_QWORD *)&v378[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
  *(_QWORD *)&v378[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = v441;
  *(_QWORD *)&v378[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
  *(_QWORD *)(v0 + 472) = v378;
  *(_QWORD *)(v0 + 480) = v377;
  v379 = objc_msgSendSuper2((objc_super *)(v0 + 472), sel_init);
  v380 = *(void (**)(uint64_t, uint64_t))(v387 + 8);
  v380(v369, v370);
  objc_msgSend(v376, sel_submitLogEvent_, v379);

  v381 = *(void **)(v374 + v386);
  v367(v369, v375, v370);
  swift_beginAccess();
  v382 = *(_QWORD *)(v0 + 584);
  v383 = objc_allocWithZone(v377);
  v367((uint64_t)&v383[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v369, v370);
  v383[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 12;
  *(_QWORD *)&v383[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = v382;
  *(_QWORD *)&v383[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
  *(_QWORD *)&v383[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
  *(_QWORD *)(v0 + 536) = v383;
  *(_QWORD *)(v0 + 544) = v377;
  v384 = objc_msgSendSuper2((objc_super *)(v0 + 536), sel_init);
  v380(v369, v370);
  objc_msgSend(v381, sel_submitLogEvent_, v384);

  sub_23E8ECF64(v388, (uint64_t *)&unk_256D9EEC0);
  sub_23E9011E4(v389, (uint64_t (*)(_QWORD))type metadata accessor for CKQueryAsyncSequence);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8F959C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v2[162] = v2[163];
    v2[161] = 0;
  }
  return swift_task_switch();
}

uint64_t sub_23E8F9610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1240);
  v2 = *(_QWORD *)(v0 + 1224);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1184) + 8))(*(_QWORD *)(v0 + 1192), *(_QWORD *)(v0 + 1176));
  sub_23E8ECF64(v2, (uint64_t *)&unk_256D9EEC0);
  sub_23E9011E4(v1, (uint64_t (*)(_QWORD))type metadata accessor for CKQueryAsyncSequence);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E8F98E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  double v4;
  uint64_t v5;
  BOOL v6;

  v1 = (uint64_t *)(a1 + *(int *)(type metadata accessor for EventQuery() + 44));
  v2 = *v1;
  if ((v1[1] & 1) != 0)
    return v2;
  result = sub_23E945854();
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = 4 * ((uint64_t)v4 / 3600) + 4;
  v6 = __OFADD__(v2, v5);
  v2 += v5;
  if (!v6)
    return v2;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_23E8F99B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  char v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  char *v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  int v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char *v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  char *v117;
  void (*v118)(char *, uint64_t);
  char v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  char *v129;
  void (*v130)(char *, uint64_t);
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  NSObject *v135;
  os_log_type_t v136;
  uint8_t *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char v154;
  void (*v155)(char *, uint64_t);
  NSObject *v156;
  os_log_type_t v157;
  uint8_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  NSObject *v168;
  os_log_type_t v169;
  uint8_t *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  unint64_t v177;
  char *v178;
  void (*v179)(char *, uint64_t);
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  _QWORD v184[2];
  uint64_t v185;
  uint64_t v186;
  char *v187;
  void (*v188)(char *, uint64_t);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  _QWORD *v205;
  int *v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  void (*v214)(char *, char *, uint64_t);
  uint64_t v215;
  uint64_t v216;
  __int128 v217[2];
  uint64_t v218;
  _QWORD v219[3];
  uint64_t v220;
  uint64_t v221;
  _QWORD v222[3];
  uint64_t v223;
  uint64_t v224;
  uint64_t v225[5];
  uint64_t v226[3];
  uint64_t v227;
  uint64_t v228;
  uint64_t v229[5];
  uint64_t v230[3];
  uint64_t v231;
  uint64_t v232;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v2);
  v191 = (uint64_t)v184 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for EventQuery();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v197 = (uint64_t)v184 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v208 = (uint64_t)v184 - v7;
  v204 = sub_23E9459A4();
  v202 = *(_QWORD *)(v204 - 8);
  v8 = MEMORY[0x24BDAC7A8](v204);
  v192 = (char *)v184 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v194 = (char *)v184 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v196 = (char *)v184 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v200 = (char *)v184 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v209 = (char *)v184 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v195 = (char *)v184 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v201 = (char *)v184 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v203 = (char *)v184 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v207 = (char *)v184 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v213 = (char *)v184 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v212 = (char *)v184 - v28;
  v29 = sub_23E945A34();
  v210 = *(_QWORD *)(v29 - 8);
  v211 = v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v185 = (uint64_t)v184 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v189 = (uint64_t)v184 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v193 = (uint64_t)v184 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v198 = (uint64_t)v184 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v214 = (void (*)(char *, char *, uint64_t))((char *)v184 - v38);
  v39 = sub_23E945A10();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v187 = (char *)v184 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)v184 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)v184 - v46;
  v49 = a1[3];
  v48 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v49);
  v50 = *(void (**)(uint64_t, uint64_t))(v48 + 40);
  v51 = v49;
  v52 = (int *)v4;
  v53 = v48;
  v54 = v215;
  v50(v51, v53);
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v45, v54 + *(int *)(v4 + 32), v39);
  v186 = sub_23E8E99C8(&qword_256D9EEE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v55 = sub_23E945B00();
  v190 = v40;
  v56 = *(void (**)(char *, uint64_t))(v40 + 8);
  v56(v45, v39);
  v199 = v39;
  v56(v47, v39);
  if ((v55 & 1) == 0)
  {
    sub_23E930C54((uint64_t)v214);
    sub_23E8EF768((uint64_t)a1, (uint64_t)v230);
    v75 = sub_23E945A1C();
    v76 = sub_23E945DF4();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      v215 = swift_slowAlloc();
      v229[0] = v215;
      v188 = v56;
      *(_DWORD *)v77 = 136315138;
      v213 = (char *)(v77 + 4);
      v79 = v231;
      v78 = v232;
      __swift_project_boxed_opaque_existential_1(v230, v231);
      (*(void (**)(uint64_t, uint64_t))(v78 + 40))(v79, v78);
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v80 = v199;
      v81 = sub_23E9460E8();
      v83 = v82;
      v188(v47, v80);
      v226[0] = sub_23E90F65C(v81, v83, v229);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v230);
      _os_log_impl(&dword_23E8E7000, v75, v76, "Failed to match home identifier: %s", v77, 0xCu);
      v84 = v215;
      swift_arrayDestroy();
      MEMORY[0x24265643C](v84, -1, -1);
      MEMORY[0x24265643C](v77, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v230);
    }

    (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v210 + 8))(v214, v211);
    return 0;
  }
  v188 = v56;
  v57 = v54 + v52[5];
  v58 = v212;
  v184[0] = v47;
  v184[1] = v57;
  sub_23E945848();
  v206 = v52;
  LODWORD(v57) = *(unsigned __int8 *)(v54 + v52[6]);
  sub_23E8EF768((uint64_t)a1, (uint64_t)v230);
  v59 = v202;
  v60 = v204;
  v214 = *(void (**)(char *, char *, uint64_t))(v202 + 16);
  v214(v213, v58, v204);
  v205 = a1;
  if ((_DWORD)v57 == 1)
  {
    v61 = v231;
    v62 = v232;
    __swift_project_boxed_opaque_existential_1(v230, v231);
    v63 = *(void (**)(uint64_t, uint64_t))(v62 + 32);
    v64 = v207;
    v65 = v61;
    v54 = v215;
    v66 = v62;
    v67 = v205;
    v63(v65, v66);
    sub_23E8E99C8(&qword_256D9EF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v68 = v213;
    v69 = sub_23E945AF4();
    v70 = *(void (**)(char *, uint64_t))(v59 + 8);
    v70(v64, v60);
    v70(v68, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v230);
    v71 = v208;
    sub_23E9011A0(v54, v208, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    sub_23E8EF768((uint64_t)v67, (uint64_t)v229);
    v72 = v203;
    v214(v203, v58, v60);
    v73 = v60;
    if ((v69 & 1) == 0)
    {
      v74 = v58;
      v70(v72, v73);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v229);
      sub_23E9011E4(v71, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
LABEL_14:
      v96 = v198;
      sub_23E930C54(v198);
      v97 = v195;
      v214(v195, v74, v73);
      v98 = sub_23E945A1C();
      v99 = sub_23E945DF4();
      if (os_log_type_enabled(v98, v99))
      {
        v100 = (uint8_t *)swift_slowAlloc();
        v101 = swift_slowAlloc();
        v230[0] = v101;
        *(_DWORD *)v100 = 136315138;
        v215 = (uint64_t)(v100 + 4);
        sub_23E8E99C8(&qword_256D9EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
        v102 = sub_23E9460E8();
        v229[0] = sub_23E90F65C(v102, v103, v230);
        sub_23E945F08();
        swift_bridgeObjectRelease();
        v70(v97, v73);
        _os_log_impl(&dword_23E8E7000, v98, v99, "Failed to match start date: %s", v100, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24265643C](v101, -1, -1);
        MEMORY[0x24265643C](v100, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v198, v211);
        v104 = v212;
      }
      else
      {

        v70(v97, v73);
        (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v96, v211);
        v104 = v74;
      }
      v70(v104, v73);
      return 0;
    }
  }
  else
  {
    v67 = a1;
    v70 = *(void (**)(char *, uint64_t))(v59 + 8);
    v70(v213, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v230);
    v71 = v208;
    sub_23E9011A0(v54, v208, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    sub_23E8EF768((uint64_t)a1, (uint64_t)v229);
    v72 = v203;
    v214(v203, v58, v60);
    v73 = v60;
  }
  v85 = *(_BYTE *)(v71 + v206[6]);
  sub_23E8EF768((uint64_t)v229, (uint64_t)v226);
  v86 = v201;
  v214(v201, v72, v73);
  v87 = v209;
  if ((v85 & 1) != 0)
  {
    v70(v86, v73);
    v70(v72, v73);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v229);
    sub_23E9011E4(v71, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
    v88 = v200;
  }
  else
  {
    v89 = v227;
    v90 = v228;
    __swift_project_boxed_opaque_existential_1(v226, v227);
    v91 = *(void (**)(uint64_t, uint64_t))(v90 + 32);
    v92 = v207;
    v93 = v89;
    v54 = v215;
    v94 = v90;
    v67 = v205;
    v91(v93, v94);
    v95 = sub_23E945974();
    v70(v92, v73);
    v70(v86, v73);
    v70(v72, v73);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v229);
    sub_23E9011E4(v208, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
    v88 = v200;
    if ((v95 & 1) != 0)
    {
      v74 = v212;
      goto LABEL_14;
    }
  }
  v213 = (char *)v70;
  sub_23E945830();
  v105 = *(unsigned __int8 *)(v54 + v206[7]);
  sub_23E8EF768((uint64_t)v67, (uint64_t)v226);
  v214(v88, v87, v73);
  v106 = v87;
  if (v105 == 1)
  {
    v107 = v227;
    v108 = v228;
    __swift_project_boxed_opaque_existential_1(v226, v227);
    v109 = *(void (**)(uint64_t, uint64_t))(v108 + 32);
    v110 = v207;
    v111 = v107;
    v54 = v215;
    v112 = v108;
    v67 = v205;
    v109(v111, v112);
    sub_23E8E99C8(&qword_256D9EF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v113 = sub_23E945AF4();
    v114 = v110;
    v115 = (void (*)(char *, uint64_t))v213;
    ((void (*)(char *, uint64_t))v213)(v114, v73);
    v115(v88, v73);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
    v116 = v197;
    sub_23E9011A0(v54, v197, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    sub_23E8EF768((uint64_t)v67, (uint64_t)v225);
    v117 = v196;
    v214(v196, v106, v73);
    if ((v113 & 1) == 0)
    {
      v118 = (void (*)(char *, uint64_t))v213;
      ((void (*)(char *, uint64_t))v213)(v117, v73);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v225);
      sub_23E9011E4(v116, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
LABEL_25:
      v132 = v193;
      sub_23E930C54(v193);
      v133 = v192;
      v134 = v209;
      v214(v192, v209, v73);
      v135 = sub_23E945A1C();
      v136 = sub_23E945DF4();
      if (os_log_type_enabled(v135, v136))
      {
        v137 = (uint8_t *)swift_slowAlloc();
        v138 = swift_slowAlloc();
        v226[0] = v138;
        *(_DWORD *)v137 = 136315138;
        v215 = (uint64_t)(v137 + 4);
        sub_23E8E99C8(&qword_256D9EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
        v139 = sub_23E9460E8();
        v225[0] = sub_23E90F65C(v139, v140, v226);
        sub_23E945F08();
        swift_bridgeObjectRelease();
        v118(v133, v73);
        _os_log_impl(&dword_23E8E7000, v135, v136, "Failed to match end date: %s", v137, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24265643C](v138, -1, -1);
        MEMORY[0x24265643C](v137, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v193, v211);
        v141 = v209;
LABEL_41:
        v118(v141, v73);
        v165 = v212;
        v166 = v73;
        goto LABEL_42;
      }

      v118(v133, v73);
LABEL_40:
      (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v132, v211);
      v141 = v134;
      goto LABEL_41;
    }
  }
  else
  {
    ((void (*)(char *, uint64_t))v213)(v88, v73);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
    v116 = v197;
    sub_23E9011A0(v54, v197, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    sub_23E8EF768((uint64_t)v67, (uint64_t)v225);
    v117 = v196;
    v214(v196, v106, v73);
  }
  v119 = *(_BYTE *)(v116 + v206[7]);
  sub_23E8EF768((uint64_t)v225, (uint64_t)v222);
  v120 = v194;
  v214(v194, v117, v73);
  if ((v119 & 1) != 0)
  {
    v121 = v120;
    v118 = (void (*)(char *, uint64_t))v213;
    ((void (*)(char *, uint64_t))v213)(v121, v73);
    v118(v117, v73);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v225);
    sub_23E9011E4(v116, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v222);
  }
  else
  {
    v122 = v223;
    v123 = v224;
    __swift_project_boxed_opaque_existential_1(v222, v223);
    v124 = *(void (**)(uint64_t, uint64_t))(v123 + 32);
    v125 = v207;
    v126 = v122;
    v54 = v215;
    v127 = v123;
    v67 = v205;
    v124(v126, v127);
    v128 = sub_23E945968();
    v129 = v125;
    v130 = (void (*)(char *, uint64_t))v213;
    ((void (*)(char *, uint64_t))v213)(v129, v73);
    v131 = v120;
    v118 = v130;
    v130(v131, v73);
    v130(v117, v73);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v225);
    sub_23E9011E4(v116, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v222);
    if ((v128 & 1) != 0)
      goto LABEL_25;
  }
  v142 = *(_QWORD *)(v54 + v206[9]);
  v134 = v209;
  if (v142)
  {
    v143 = v205[3];
    v144 = v205[4];
    __swift_project_boxed_opaque_existential_1(v205, v143);
    v145 = v143;
    v67 = v205;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v144 + 48))(v222, v145, v144);
    if (!sub_23E8FC25C(v222[0], v142))
    {
      v132 = v189;
      sub_23E930C54(v189);
      sub_23E8EF768((uint64_t)v67, (uint64_t)v226);
      v156 = sub_23E945A1C();
      v157 = sub_23E945DF4();
      if (os_log_type_enabled(v156, v157))
      {
        v158 = (uint8_t *)swift_slowAlloc();
        v159 = swift_slowAlloc();
        v225[0] = v159;
        *(_DWORD *)v158 = 136315138;
        v215 = (uint64_t)(v158 + 4);
        v160 = v227;
        v161 = v228;
        __swift_project_boxed_opaque_existential_1(v226, v227);
        (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v161 + 48))(v222, v160, v161);
        v162 = sub_23E945B48();
        v222[0] = sub_23E90F65C(v162, v163, v225);
        sub_23E945F08();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
        _os_log_impl(&dword_23E8E7000, v156, v157, "Failed to match category: %s", v158, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24265643C](v159, -1, -1);
        MEMORY[0x24265643C](v158, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v189, v211);
        v164 = v204;
        v118(v209, v204);
        v165 = v212;
        v166 = v164;
LABEL_42:
        v118(v165, v166);
        return 0;
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
      goto LABEL_40;
    }
  }
  v146 = v191;
  sub_23E8ECF20(v215 + v206[10], v191, (uint64_t *)&unk_256D9ED50);
  v147 = v190;
  v148 = v199;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48))(v146, 1, v199) == 1)
  {
    v118(v134, v73);
    v118(v212, v73);
    sub_23E8ECF64(v146, (uint64_t *)&unk_256D9ED50);
    return 1;
  }
  v150 = v187;
  (*(void (**)(char *, uint64_t, uint64_t))(v147 + 32))(v187, v146, v148);
  sub_23E8EF768((uint64_t)v67, (uint64_t)v219);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEF8);
  if (swift_dynamicCast())
  {
    sub_23E901264(v217, (uint64_t)v222);
    v151 = v223;
    v152 = v224;
    __swift_project_boxed_opaque_existential_1(v222, v223);
    v153 = (char *)v184[0];
    (*(void (**)(uint64_t, uint64_t))(v152 + 32))(v151, v152);
    v154 = sub_23E945B00();
    v155 = v188;
    v188(v153, v148);
    if ((v154 & 1) == 0)
    {
      v167 = v185;
      sub_23E930C54(v185);
      sub_23E8EF768((uint64_t)v222, (uint64_t)v219);
      v168 = sub_23E945A1C();
      v169 = sub_23E945DF4();
      if (os_log_type_enabled(v168, v169))
      {
        v170 = (uint8_t *)swift_slowAlloc();
        v215 = swift_slowAlloc();
        *(_QWORD *)&v217[0] = v215;
        *(_DWORD *)v170 = 136315138;
        v214 = (void (*)(char *, char *, uint64_t))(v170 + 4);
        v171 = v220;
        v172 = v221;
        __swift_project_boxed_opaque_existential_1(v219, v220);
        v173 = (char *)v184[0];
        (*(void (**)(uint64_t, uint64_t))(v172 + 32))(v171, v172);
        sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v174 = v199;
        v175 = sub_23E9460E8();
        v177 = v176;
        v178 = v173;
        v179 = v188;
        v188(v178, v174);
        v216 = sub_23E90F65C(v175, v177, (uint64_t *)v217);
        sub_23E945F08();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v219);
        _os_log_impl(&dword_23E8E7000, v168, v169, "Failed to match accessory identifier: %s", v170, 0xCu);
        v180 = v215;
        swift_arrayDestroy();
        MEMORY[0x24265643C](v180, -1, -1);
        MEMORY[0x24265643C](v170, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v185, v211);
        v179(v187, v174);
        v181 = v204;
        v118(v209, v204);
        v182 = v212;
        v183 = v181;
      }
      else
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v219);
        (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v167, v211);
        v188(v150, v199);
        v118(v134, v73);
        v182 = v212;
        v183 = v73;
      }
      v118(v182, v183);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v222);
      return 0;
    }
    v155(v150, v148);
    v118(v134, v73);
    v118(v212, v73);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v222);
    return 1;
  }
  v218 = 0;
  memset(v217, 0, sizeof(v217));
  v188(v150, v148);
  v118(v134, v73);
  v118(v212, v73);
  sub_23E8ECF64((uint64_t)v217, &qword_256D9EF00);
  return 0;
}

uint64_t sub_23E8FADF8(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  __int128 v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  NSObject *v58;
  os_log_type_t v59;
  _DWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  void (*v68)(uint64_t *, char *, uint64_t);
  int v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  _QWORD *v82;
  uint64_t v83;
  unint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t);
  char *v90;
  uint64_t v91;
  objc_class *v92;
  _BYTE *v93;
  id v94;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  _QWORD *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t);
  char *v114;
  uint64_t v115;
  objc_class *v116;
  _BYTE *v117;
  id v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  void *v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t);
  char *v124;
  objc_class *v125;
  _BYTE *v126;
  id v127;
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  int v139;
  int v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  __int128 v148;
  char *v149;
  unint64_t v150;
  int v151;
  char *v152;
  char *v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t *v167;
  char *v168;
  _QWORD *v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  unint64_t v172;
  char *v173;
  uint64_t v174;
  char v175;
  _QWORD *v176[6];
  objc_super v177;
  objc_super v178;
  objc_super v179;
  uint64_t v180;

  v159 = a4;
  v140 = a3;
  v137 = a2;
  v165 = sub_23E945A10();
  v154 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v147 = (char *)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF18);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v136 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v138 = (char *)&v129 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v167 = (uint64_t *)((char *)&v129 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v173 = (char *)&v129 - v14;
  v145 = type metadata accessor for SomeAccessoryEvent();
  v15 = MEMORY[0x24BDAC7A8](v145);
  v158 = (uint64_t)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v157 = (uint64_t)&v129 - v17;
  v171 = sub_23E945A34();
  v156 = *(_QWORD *)(v171 - 8);
  v18 = MEMORY[0x24BDAC7A8](v171);
  v149 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v130 = (uint64_t)&v129 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v132 = (uint64_t)&v129 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v144 = (char *)&v129 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v129 - v26;
  v129 = type metadata accessor for SomeEvent();
  v28 = MEMORY[0x24BDAC7A8](v129);
  v131 = (uint64_t)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v160 = (uint64_t)&v129 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v143 = (uint64_t)&v129 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v129 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v129 - v37;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF20);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v162 = (char *)&v129 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v129 - v42;
  v176[0] = a1;
  swift_bridgeObjectRetain();
  sub_23E8FC470(v176);
  v163 = 0;
  v44 = 0;
  v155 = *MEMORY[0x24BEE6C78];
  v142 = *MEMORY[0x24BEE6C70];
  v139 = *MEMORY[0x24BEE6C68];
  v135 = &v175;
  *(_QWORD *)&v45 = 136315138;
  v148 = v45;
  v141 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v45 = 134217984;
  v133 = v45;
  *(_QWORD *)&v45 = 136446210;
  v134 = v45;
  v169 = v176[0];
  v46 = v176[0][2];
  v164 = v6;
  v161 = v7;
  v168 = v38;
  v152 = v27;
  v166 = v36;
  v150 = v46;
  v153 = v43;
  while (1)
  {
    v48 = (uint64_t)v162;
    if (v44 == v46)
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 1, 1, v49);
      v172 = v46;
    }
    else
    {
      v50 = v27;
      v51 = v36;
      v52 = v169;
      if (v44 >= v169[2])
      {
        __break(1u);
LABEL_37:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x23E8FC240);
      }
      v53 = v44;
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28);
      v55 = *(_QWORD *)(v54 - 8);
      sub_23E8ECF20((uint64_t)v52+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v53, v48, &qword_256D9EF28);
      v172 = v53 + 1;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v48, 0, 1, v54);
      v36 = v51;
      v27 = v50;
    }
    sub_23E90136C(v48, (uint64_t)v43, &qword_256D9EF20);
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28);
    v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v43, 1, v56);
    if (v57 == 1)
    {
      swift_release();
      return v163;
    }
    v151 = v57;
    sub_23E901220((uint64_t)&v43[*(int *)(v56 + 48)], (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    sub_23E930C54((uint64_t)v27);
    sub_23E9011A0((uint64_t)v38, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    v58 = sub_23E945A1C();
    v59 = sub_23E945DF4();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (_DWORD *)swift_slowAlloc();
      v176[5] = (_QWORD *)swift_slowAlloc();
      *v60 = v148;
      v61 = v143;
      sub_23E9011A0((uint64_t)v36, v143, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
      v62 = v61;
      v63 = v157;
      sub_23E901220(v62, v157, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
      sub_23E9011A0(v63, v158, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
      v64 = (char *)&loc_23E8FB4D4 + *((int *)qword_23E8FC240 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    sub_23E9011E4((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);

    v170 = *(void (**)(char *, uint64_t))(v156 + 8);
    v170(v27, v171);
    v65 = v167;
    v66 = v161;
    sub_23E9011A0((uint64_t)v38, v160, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9EE50);
    v67 = v173;
    sub_23E945D40();
    v68 = *(void (**)(uint64_t *, char *, uint64_t))(v66 + 16);
    v68(v65, v67, v6);
    v69 = (*(uint64_t (**)(uint64_t *, uint64_t))(v66 + 88))(v65, v6);
    v70 = v66;
    if (v69 != v155)
      break;
    (*(void (**)(uint64_t *, uint64_t))(v66 + 96))(v65, v6);
    v71 = *v65;
    v36 = v166;
    if (*v65 <= 99)
    {
      sub_23E930C54((uint64_t)v144);
      v72 = sub_23E945A1C();
      v73 = sub_23E945DE8();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = swift_slowAlloc();
        *(_DWORD *)v74 = v133;
        *(_QWORD *)(v74 + 4) = v71;
        _os_log_impl(&dword_23E8E7000, v72, v73, "Running out of queue space, %ld slots left", (uint8_t *)v74, 0xCu);
        MEMORY[0x24265643C](v74, -1, -1);
      }

      v170(v144, v171);
      v70 = v66;
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v173, v6);
    v38 = v168;
    sub_23E9011E4((uint64_t)v168, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    if (__OFADD__(v163, 1))
      goto LABEL_37;
    if ((v140 & 1) == 0 && v163 + 1 == v137)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v153, v165);
      v105 = (uint64_t *)&v169;
      return *(v105 - 32);
    }
    ++v163;
    v47 = *(void (**)(char *, uint64_t))(v154 + 8);
    v43 = v153;
LABEL_3:
    v47(v43, v165);
    v44 = v172;
    v46 = v150;
  }
  v75 = v6;
  v76 = v70;
  v77 = (uint64_t)v149;
  if (v69 == v142)
  {
    swift_release();
    v96 = v132;
    sub_23E930C54(v132);
    v97 = v131;
    sub_23E9011A0((uint64_t)v38, v131, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    v98 = sub_23E945A1C();
    v99 = sub_23E945E00();
    if (os_log_type_enabled(v98, v99))
    {
      v100 = (uint8_t *)swift_slowAlloc();
      v101 = (_QWORD *)swift_slowAlloc();
      v176[0] = v101;
      *(_DWORD *)v100 = v148;
      sub_23E9011A0(v97, v160, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
      v102 = sub_23E945B48();
      v174 = sub_23E90F65C(v102, v103, (uint64_t *)v176);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E9011E4(v97, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
      _os_log_impl(&dword_23E8E7000, v98, v99, "Yield dropped event: %s", v100, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v101, -1, -1);
      MEMORY[0x24265643C](v100, -1, -1);

      v104 = v132;
    }
    else
    {
      sub_23E9011E4(v97, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);

      v104 = v96;
    }
    v170((char *)v104, v171);
    v120 = type metadata accessor for EventQuery();
    v121 = *(void **)(v146 + *(int *)(v120 + 56));
    v122 = v154;
    v123 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 16);
    v124 = v147;
    v115 = v165;
    v123(v147, v146 + *(int *)(v120 + 52), v165);
    v125 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    v126 = objc_allocWithZone(v125);
    v123(&v126[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], (uint64_t)v124, v115);
    v126[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 4;
    *(_QWORD *)&v126[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v126[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v126[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    v177.receiver = v126;
    v177.super_class = v125;
    v127 = objc_msgSendSuper2(&v177, sel_init);
    v119 = *(void (**)(char *, uint64_t))(v122 + 8);
    v119(v124, v115);
    objc_msgSend(v121, sel_submitLogEvent_, v127);

    v128 = *(void (**)(char *, uint64_t))(v161 + 8);
    v128(v173, v75);
    sub_23E9011E4((uint64_t)v168, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    v128((char *)v167, v75);
    goto LABEL_34;
  }
  if (v69 != v139)
  {
    sub_23E930C54((uint64_t)v149);
    v78 = v138;
    v68((uint64_t *)v138, v173, v75);
    v79 = sub_23E945A1C();
    v80 = sub_23E945E0C();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = (uint8_t *)swift_slowAlloc();
      v82 = (_QWORD *)swift_slowAlloc();
      v176[0] = v82;
      *(_DWORD *)v81 = v134;
      v68((uint64_t *)v136, v78, v164);
      v83 = sub_23E945B48();
      v174 = sub_23E90F65C(v83, v84, (uint64_t *)v176);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      v85 = *(void (**)(char *, uint64_t))(v76 + 8);
      v85(v78, v164);
      _os_log_impl(&dword_23E8E7000, v79, v80, "Yield result not handled: %{public}s", v81, 0xCu);
      swift_arrayDestroy();
      v6 = v164;
      MEMORY[0x24265643C](v82, -1, -1);
      MEMORY[0x24265643C](v81, -1, -1);

      v170(v149, v171);
    }
    else
    {
      v85 = *(void (**)(char *, uint64_t))(v76 + 8);
      v85(v78, v75);

      v170((char *)v77, v171);
      v6 = v75;
    }
    v86 = type metadata accessor for EventQuery();
    v87 = *(void **)(v146 + *(int *)(v86 + 56));
    v88 = v154;
    v89 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 16);
    v90 = v147;
    v91 = v165;
    v89(v147, v146 + *(int *)(v86 + 52), v165);
    v92 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    v93 = objc_allocWithZone(v92);
    v89(&v93[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], (uint64_t)v90, v91);
    v93[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 6;
    *(_QWORD *)&v93[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(_QWORD *)&v93[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(_QWORD *)&v93[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    v179.receiver = v93;
    v179.super_class = v92;
    v94 = objc_msgSendSuper2(&v179, sel_init);
    v47 = *(void (**)(char *, uint64_t))(v88 + 8);
    v47(v90, v91);
    objc_msgSend(v87, sel_submitLogEvent_, v94);

    v85(v173, v6);
    v38 = v168;
    sub_23E9011E4((uint64_t)v168, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    v85((char *)v167, v6);
    v43 = v153;
    v27 = v152;
    v36 = v166;
    goto LABEL_3;
  }
  swift_release();
  v106 = v130;
  sub_23E930C54(v130);
  v107 = sub_23E945A1C();
  v108 = sub_23E945DE8();
  if (os_log_type_enabled(v107, v108))
  {
    v109 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v109 = 0;
    _os_log_impl(&dword_23E8E7000, v107, v108, "Yield indicated that the stream is terminated", v109, 2u);
    MEMORY[0x24265643C](v109, -1, -1);
  }

  v170((char *)v106, v171);
  v110 = type metadata accessor for EventQuery();
  v111 = *(void **)(v146 + *(int *)(v110 + 56));
  v112 = v154;
  v113 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 16);
  v114 = v147;
  v115 = v165;
  v113(v147, v146 + *(int *)(v110 + 52), v165);
  v116 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
  v117 = objc_allocWithZone(v116);
  v113(&v117[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], (uint64_t)v114, v115);
  v117[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 5;
  *(_QWORD *)&v117[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
  *(_QWORD *)&v117[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
  *(_QWORD *)&v117[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
  v178.receiver = v117;
  v178.super_class = v116;
  v118 = objc_msgSendSuper2(&v178, sel_init);
  v119 = *(void (**)(char *, uint64_t))(v112 + 8);
  v119(v114, v115);
  objc_msgSend(v111, sel_submitLogEvent_, v118);

  (*(void (**)(char *, uint64_t))(v161 + 8))(v173, v75);
  sub_23E9011E4((uint64_t)v168, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
LABEL_34:
  v119(v153, v115);
  v105 = &v180;
  return *(v105 - 32);
}

BOOL sub_23E8FC25C(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  sub_23E9461B4();
  sub_23E9461C0();
  v4 = sub_23E9461E4();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_23E8FC348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_23E8EAAEC;
  return sub_23E8F5130(a1, a2, v7, v6);
}

size_t sub_23E8FC3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  size_t result;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEE0);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEA0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v7);
  if (v5)
  {
    if (result - v6 != 0x8000000000000000 || v5 != -1)
    {
      v7[2] = a1;
      v7[3] = 2 * ((uint64_t)(result - v6) / v5);
      return (size_t)v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23E8FC470(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23E900FD4(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23E8FC4F4(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23E8FC4F4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(_QWORD, _QWORD);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v105;
  unint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  BOOL v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  BOOL v131;
  uint64_t v132;
  char v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  BOOL v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  unint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  unint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  void (*v209)(_QWORD, _QWORD);
  uint64_t v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  char *v216;
  uint64_t *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;

  v205 = sub_23E9459A4();
  v202 = *(_QWORD *)(v205 - 8);
  v2 = MEMORY[0x24BDAC7A8](v205);
  v201 = (char *)&v165 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v165 - v5;
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v165 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v185 = (char *)&v165 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v170 = (char *)&v165 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v169 = (char *)&v165 - v14;
  v219 = type metadata accessor for SomeAccessoryEvent();
  v15 = MEMORY[0x24BDAC7A8](v219);
  v216 = (char *)&v165 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v215 = (char *)&v165 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v214 = (char *)&v165 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v213 = (char *)&v165 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v193 = (char *)&v165 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v192 = (char *)&v165 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v191 = (char *)&v165 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v190 = (char *)&v165 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v179 = (char *)&v165 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v178 = (char *)&v165 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v177 = (uint64_t)&v165 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v176 = (uint64_t)&v165 - v37;
  v38 = type metadata accessor for SomeEvent();
  v39 = MEMORY[0x24BDAC7A8](v38);
  v200 = (char *)&v165 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v199 = (char *)&v165 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v184 = (char *)&v165 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v183 = (char *)&v165 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v168 = (char *)&v165 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v167 = (uint64_t)&v165 - v49;
  v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28);
  v196 = *(_QWORD *)(v220 - 8);
  v50 = MEMORY[0x24BDAC7A8](v220);
  v182 = (char *)&v165 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v50);
  v207 = (char *)&v165 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v212 = (char *)&v165 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v211 = (char *)&v165 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v60 = (char *)&v165 - v59;
  v61 = MEMORY[0x24BDAC7A8](v58);
  v63 = (char *)&v165 - v62;
  v64 = MEMORY[0x24BDAC7A8](v61);
  v189 = (char *)&v165 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v188 = (char *)&v165 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v195 = (char *)&v165 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v72 = (char *)&v165 - v71;
  v73 = MEMORY[0x24BDAC7A8](v70);
  v175 = (char *)&v165 - v74;
  v75 = MEMORY[0x24BDAC7A8](v73);
  v166 = (char *)&v165 - v76;
  v77 = MEMORY[0x24BDAC7A8](v75);
  v174 = (uint64_t)&v165 - v78;
  MEMORY[0x24BDAC7A8](v77);
  v80 = (char *)&v165 - v79;
  v217 = a1;
  v81 = a1[1];
  result = sub_23E9460D0();
  if (result >= v81)
  {
    if (v81 < 0)
      goto LABEL_102;
    if (v81)
      return sub_23E8FEB38(0, v81, 1, v217);
    return result;
  }
  if (v81 >= 0)
    v83 = v81;
  else
    v83 = v81 + 1;
  if (v81 < -1)
    goto LABEL_105;
  v187 = v72;
  v171 = v80;
  v165 = result;
  if (v81 >= 2)
  {
    v181 = v9;
    v84 = v83 >> 1;
    v85 = sub_23E945C5C();
    *(_QWORD *)(v85 + 16) = v84;
    v86 = *(unsigned __int8 *)(v196 + 80);
    v172 = v85;
    v194 = v85 + ((v86 + 32) & ~v86);
    goto LABEL_13;
  }
  v194 = MEMORY[0x24BEE4AF8]
       + ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80));
  if (v81 == 1)
  {
    v172 = MEMORY[0x24BEE4AF8];
    v181 = v9;
LABEL_13:
    v87 = 0;
    v88 = (char *)MEMORY[0x24BEE4AF8];
    v198 = v6;
    v218 = v60;
    v204 = v63;
    do
    {
      v186 = v87;
      if (v87 + 1 < v81)
      {
        v203 = v81;
        v173 = v88;
        v90 = *v217;
        v91 = *(_QWORD *)(v196 + 72);
        v206 = v87 + 1;
        v92 = (uint64_t)v171;
        sub_23E8ECF20(v90 + v91 * (v87 + 1), (uint64_t)v171, &qword_256D9EF28);
        v180 = v90;
        sub_23E8ECF20(v90 + v91 * v87, v174, &qword_256D9EF28);
        v93 = *(int *)(v220 + 48);
        v94 = v166;
        v95 = (uint64_t)&v166[v93];
        v96 = v92 + v93;
        v97 = sub_23E945A10();
        v98 = *(_QWORD *)(v97 - 8);
        v99 = *(void (**)(_QWORD, _QWORD))(v98 + 16);
        v210 = v97;
        v209 = v99;
        v99(v94, v92);
        sub_23E9011A0(v96, v95, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
        v100 = v167;
        sub_23E9011A0(v95, v167, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
        v101 = v100;
        v102 = v176;
        sub_23E901220(v101, v176, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
        sub_23E9011A0(v102, v177, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
        v103 = (char *)&loc_23E8FCD4C + *((int *)qword_23E8FEA90 + swift_getEnumCaseMultiPayload());
        v208 = v98;
        __asm { BR              X9 }
      }
      if (v87 + 1 < v87)
        goto LABEL_97;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v206 = v87 + 1;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v88 = sub_23E900DB8(0, *((_QWORD *)v88 + 2) + 1, 1, v88);
      v106 = *((_QWORD *)v88 + 2);
      v105 = *((_QWORD *)v88 + 3);
      v89 = v106 + 1;
      if (v106 >= v105 >> 1)
        v88 = sub_23E900DB8((char *)(v105 > 1), v106 + 1, 1, v88);
      *((_QWORD *)v88 + 2) = v89;
      v107 = v88 + 32;
      v108 = &v88[16 * v106 + 32];
      v109 = v206;
      *(_QWORD *)v108 = v87;
      *((_QWORD *)v108 + 1) = v109;
      if (v106)
      {
        while (1)
        {
          v110 = v89 - 1;
          if (v89 >= 4)
          {
            v115 = &v107[16 * v89];
            v116 = *((_QWORD *)v115 - 8);
            v117 = *((_QWORD *)v115 - 7);
            v121 = __OFSUB__(v117, v116);
            v118 = v117 - v116;
            if (v121)
              goto LABEL_86;
            v120 = *((_QWORD *)v115 - 6);
            v119 = *((_QWORD *)v115 - 5);
            v121 = __OFSUB__(v119, v120);
            v113 = v119 - v120;
            v114 = v121;
            if (v121)
              goto LABEL_87;
            v122 = v89 - 2;
            v123 = &v107[16 * v89 - 32];
            v125 = *(_QWORD *)v123;
            v124 = *((_QWORD *)v123 + 1);
            v121 = __OFSUB__(v124, v125);
            v126 = v124 - v125;
            if (v121)
              goto LABEL_89;
            v121 = __OFADD__(v113, v126);
            v127 = v113 + v126;
            if (v121)
              goto LABEL_92;
            if (v127 >= v118)
            {
              v145 = &v107[16 * v110];
              v147 = *(_QWORD *)v145;
              v146 = *((_QWORD *)v145 + 1);
              v121 = __OFSUB__(v146, v147);
              v148 = v146 - v147;
              if (v121)
                goto LABEL_96;
              v138 = v113 < v148;
              goto LABEL_55;
            }
          }
          else
          {
            if (v89 != 3)
            {
              v139 = *((_QWORD *)v88 + 4);
              v140 = *((_QWORD *)v88 + 5);
              v121 = __OFSUB__(v140, v139);
              v132 = v140 - v139;
              v133 = v121;
              goto LABEL_49;
            }
            v112 = *((_QWORD *)v88 + 4);
            v111 = *((_QWORD *)v88 + 5);
            v121 = __OFSUB__(v111, v112);
            v113 = v111 - v112;
            v114 = v121;
          }
          if ((v114 & 1) != 0)
            goto LABEL_88;
          v122 = v89 - 2;
          v128 = &v107[16 * v89 - 32];
          v130 = *(_QWORD *)v128;
          v129 = *((_QWORD *)v128 + 1);
          v131 = __OFSUB__(v129, v130);
          v132 = v129 - v130;
          v133 = v131;
          if (v131)
            goto LABEL_91;
          v134 = &v107[16 * v110];
          v136 = *(_QWORD *)v134;
          v135 = *((_QWORD *)v134 + 1);
          v121 = __OFSUB__(v135, v136);
          v137 = v135 - v136;
          if (v121)
            goto LABEL_94;
          if (__OFADD__(v132, v137))
            goto LABEL_95;
          if (v132 + v137 >= v113)
          {
            v138 = v113 < v137;
LABEL_55:
            if (v138)
              v110 = v122;
            goto LABEL_57;
          }
LABEL_49:
          if ((v133 & 1) != 0)
            goto LABEL_90;
          v141 = &v107[16 * v110];
          v143 = *(_QWORD *)v141;
          v142 = *((_QWORD *)v141 + 1);
          v121 = __OFSUB__(v142, v143);
          v144 = v142 - v143;
          if (v121)
            goto LABEL_93;
          if (v144 < v132)
            goto LABEL_15;
LABEL_57:
          v149 = v110 - 1;
          if (v110 - 1 >= v89)
          {
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
            __break(1u);
LABEL_102:
            __break(1u);
            JUMPOUT(0x23E8FEA24);
          }
          if (!*v217)
          {
            __break(1u);
            JUMPOUT(0x23E8FEA38);
          }
          v150 = v88;
          v151 = &v107[16 * v149];
          v152 = *(_QWORD *)v151;
          v153 = &v107[16 * v110];
          v154 = *((_QWORD *)v153 + 1);
          v155 = v197;
          sub_23E8FF6BC(*v217 + *(_QWORD *)(v196 + 72) * *(_QWORD *)v151, *v217 + *(_QWORD *)(v196 + 72) * *(_QWORD *)v153, *v217 + *(_QWORD *)(v196 + 72) * v154, v194);
          v197 = v155;
          if (v155)
          {
LABEL_65:
            swift_bridgeObjectRelease();
            *(_QWORD *)(v172 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
          if (v154 < v152)
            goto LABEL_83;
          if (v110 > *((_QWORD *)v150 + 2))
            goto LABEL_84;
          *(_QWORD *)v151 = v152;
          *(_QWORD *)&v107[16 * v149 + 8] = v154;
          v156 = *((_QWORD *)v150 + 2);
          if (v110 >= v156)
            goto LABEL_85;
          v88 = v150;
          v89 = v156 - 1;
          memmove(&v107[16 * v110], v153 + 16, 16 * (v156 - 1 - v110));
          *((_QWORD *)v150 + 2) = v156 - 1;
          if (v156 <= 2)
            goto LABEL_15;
        }
      }
      v89 = 1;
LABEL_15:
      v81 = v217[1];
      v87 = v206;
    }
    while (v206 < v81);
    v157 = v172;
    goto LABEL_68;
  }
  v89 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  v88 = (char *)MEMORY[0x24BEE4AF8];
  v157 = MEMORY[0x24BEE4AF8];
LABEL_68:
  v158 = v197;
  if (v89 >= 2)
  {
    v159 = *v217;
    v172 = v157;
    while (1)
    {
      v160 = v89 - 2;
      if (v89 < 2)
        goto LABEL_98;
      if (!v159)
        break;
      v161 = *(_QWORD *)&v88[16 * v160 + 32];
      v162 = *(_QWORD *)&v88[16 * v89 + 24];
      sub_23E8FF6BC(v159 + *(_QWORD *)(v196 + 72) * v161, v159 + *(_QWORD *)(v196 + 72) * *(_QWORD *)&v88[16 * v89 + 16], v159 + *(_QWORD *)(v196 + 72) * v162, v194);
      if (v158)
        goto LABEL_65;
      if (v162 < v161)
        goto LABEL_99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v88 = sub_23E900FC0((uint64_t)v88);
      if (v160 >= *((_QWORD *)v88 + 2))
        goto LABEL_100;
      v163 = &v88[16 * v160 + 32];
      *(_QWORD *)v163 = v161;
      *((_QWORD *)v163 + 1) = v162;
      v164 = *((_QWORD *)v88 + 2);
      if (v89 > v164)
        goto LABEL_101;
      memmove(&v88[16 * v89 + 16], &v88[16 * v89 + 32], 16 * (v164 - v89));
      *((_QWORD *)v88 + 2) = v164 - 1;
      v89 = v164 - 1;
      v157 = v172;
      if (v164 <= 2)
        goto LABEL_79;
    }
    __break(1u);
LABEL_105:
    sub_23E945FEC();
    __break(1u);
    JUMPOUT(0x23E8FEA90);
  }
LABEL_79:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v157 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E8FEB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD v48[2];
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v63 = a4;
  v49 = a1;
  v57 = sub_23E9459A4();
  v56 = *(_QWORD *)(v57 - 8);
  v6 = MEMORY[0x24BDAC7A8](v57);
  v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v48 - v9;
  v71 = type metadata accessor for SomeAccessoryEvent();
  v11 = MEMORY[0x24BDAC7A8](v71);
  v70 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v69 = (char *)v48 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v48 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v68 = (uint64_t)v48 - v18;
  v19 = type metadata accessor for SomeEvent();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v55 = (char *)v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v54 = (uint64_t)v48 - v22;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28);
  v23 = MEMORY[0x24BDAC7A8](v74);
  v60 = (char *)v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v67 = (char *)v48 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v66 = (char *)v48 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v48 - v30;
  result = MEMORY[0x24BDAC7A8](v29);
  v35 = (char *)v48 - v34;
  v59 = a3;
  v48[1] = a2;
  if (a3 != a2)
  {
    v36 = *(_QWORD *)(v33 + 72);
    v73 = v36 * (v59 - 1);
    v58 = v36;
    v72 = v36 * v59;
    v53 = v8;
    v52 = v10;
    v51 = v17;
    v65 = v31;
    v50 = (char *)v48 - v34;
    v64 = v49;
    v37 = *v63;
    v62 = v36 * v59;
    sub_23E8ECF20(v36 * v59 + v37, (uint64_t)v48 - v34, &qword_256D9EF28);
    v61 = v73;
    sub_23E8ECF20(v73 + v37, (uint64_t)v31, &qword_256D9EF28);
    v38 = *(int *)(v74 + 48);
    v39 = v66;
    v40 = (uint64_t)&v66[v38];
    v41 = (uint64_t)&v35[v38];
    v42 = sub_23E945A10();
    v43 = *(void (**)(char *, char *))(*(_QWORD *)(v42 - 8) + 16);
    v75 = v42;
    v43(v39, v35);
    sub_23E9011A0(v41, v40, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    v44 = v54;
    sub_23E9011A0(v40, v54, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    v45 = v44;
    v46 = v68;
    sub_23E901220(v45, v68, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
    sub_23E9011A0(v46, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
    v47 = (char *)&loc_23E8FEFEC + dword_23E8FF684[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_23E8FEFFC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int EnumCaseMultiPayload;

  *(_QWORD *)(v5 - 144) = type metadata accessor for ContactSensorEvent();
  *(_QWORD *)(v5 - 136) = sub_23E8E99C8(&qword_256D9EF60, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&unk_23E94A500);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v5 - 168));
  sub_23E901220(v4, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
  v8 = *(_QWORD *)(v5 - 144);
  v7 = *(_QWORD *)(v5 - 136);
  v9 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 168), v8);
  *(_QWORD *)(v5 - 104) = v8;
  *(_QWORD *)(v5 - 96) = *(_QWORD *)(v7 + 16);
  v10 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v5 - 128));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v10, v9, v8);
  sub_23E9011E4(*(_QWORD *)(v5 - 264), (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  __swift_destroy_boxed_opaque_existential_1(v5 - 168);
  v12 = *(_QWORD *)(v5 - 104);
  v11 = *(_QWORD *)(v5 - 96);
  v13 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 128), v12);
  *(_QWORD *)(v5 - 144) = v12;
  *(_QWORD *)(v5 - 136) = *(_QWORD *)(v11 + 8);
  v14 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v5 - 168));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v14, v13, v12);
  __swift_destroy_boxed_opaque_existential_1(v5 - 128);
  sub_23E9011E4(v0, v3);
  sub_23E901264((__int128 *)(v5 - 168), v5 - 128);
  (*(void (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v5 - 280), *(_QWORD *)(v5 - 72));
  v15 = *(int *)(*(_QWORD *)(v5 - 216) + 48);
  v16 = *(_QWORD *)(v5 - 272) + v15;
  v17 = *(_QWORD *)(v5 - 288) + v15;
  v2();
  sub_23E9011A0(v17, v16, v3);
  v18 = *(_QWORD *)(v5 - 368);
  sub_23E9011A0(v16, v18, v3);
  v19 = v18;
  v20 = *(_QWORD *)(v5 - 256);
  sub_23E901220(v19, v20, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  sub_23E9011A0(v20, *(_QWORD *)(v5 - 248), (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23E8FF2AC + *((int *)qword_23E8FF6A0 + EnumCaseMultiPayload)))();
}

void sub_23E8FF2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD, _QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)(v5 - 184) = type metadata accessor for ContactSensorEvent();
  *(_QWORD *)(v5 - 176) = sub_23E8E99C8(&qword_256D9EF60, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&unk_23E94A500);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v5 - 208));
  sub_23E901220(*(_QWORD *)(v5 - 248), (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
  v7 = *(_QWORD *)(v5 - 184);
  v8 = *(_QWORD *)(v5 - 176);
  v9 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 208), v7);
  *(_QWORD *)(v5 - 144) = v7;
  *(_QWORD *)(v5 - 136) = *(_QWORD *)(v8 + 16);
  v10 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v5 - 168));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v10, v9, v7);
  sub_23E9011E4(*(_QWORD *)(v5 - 256), (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  __swift_destroy_boxed_opaque_existential_1(v5 - 208);
  v11 = *(_QWORD *)(v5 - 144);
  v12 = *(_QWORD *)(v5 - 136);
  v13 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 168), v11);
  *(_QWORD *)(v5 - 184) = v11;
  v14 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v5 - 176) = v14;
  v15 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v5 - 208));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v15, v13, v11);
  __swift_destroy_boxed_opaque_existential_1(v5 - 168);
  sub_23E9011E4(v1, v4);
  sub_23E901264((__int128 *)(v5 - 208), v5 - 168);
  v3(*(_QWORD *)(v5 - 272), *(_QWORD *)(v5 - 72));
  v16 = *(_QWORD *)(v5 - 104);
  v17 = *(_QWORD *)(v5 - 96);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 128), v16);
  v18 = *(void (**)(uint64_t, uint64_t))(v0 + 32);
  v19 = *(_QWORD *)(v5 - 392);
  v18(v16, v17);
  v20 = *(_QWORD *)(v5 - 144);
  v21 = *(_QWORD *)(v5 - 136);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 168), v20);
  v22 = *(void (**)(uint64_t, uint64_t))(v14 + 32);
  v23 = v19;
  v24 = *(_QWORD *)(v5 - 384);
  v22(v20, v21);
  if ((sub_23E94598C() & 1) != 0)
  {
    sub_23E8E99C8(&qword_256D9EF68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA90]);
    v25 = *(_QWORD *)(v5 - 288);
    v26 = *(_QWORD *)(v5 - 408);
    v27 = sub_23E945AF4();
  }
  else
  {
    v27 = sub_23E945968();
    v25 = *(_QWORD *)(v5 - 288);
    v26 = *(_QWORD *)(v5 - 408);
  }
  v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 360) + 8);
  v29 = *(_QWORD *)(v5 - 352);
  v28(v24, v29);
  v28(v23, v29);
  __swift_destroy_boxed_opaque_existential_1(v5 - 168);
  __swift_destroy_boxed_opaque_existential_1(v5 - 128);
  sub_23E8ECF64(v25, &qword_256D9EF28);
  sub_23E8ECF64(v26, &qword_256D9EF28);
  if ((v27 & 1) != 0)
  {
    v30 = **(_QWORD **)(v5 - 304);
    if (v30)
    {
      sub_23E90136C(v30 + *(_QWORD *)(v5 - 232) + v2, *(_QWORD *)(v5 - 328), &qword_256D9EF28);
      JUMPOUT(0x23E8FEE90);
    }
    __break(1u);
    JUMPOUT(0x23E8FF684);
  }
  JUMPOUT(0x23E8FEE34);
}

uint64_t sub_23E8FF6BC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD v88[6];
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;

  v109 = sub_23E9459A4();
  v108 = *(_QWORD *)(v109 - 8);
  v8 = MEMORY[0x24BDAC7A8](v109);
  v95 = (char *)v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v94 = (char *)v88 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v93 = (char *)v88 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v88 - v14;
  v115 = type metadata accessor for SomeAccessoryEvent();
  v16 = MEMORY[0x24BDAC7A8](v115);
  v107 = (char *)v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v106 = (char *)v88 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v105 = (uint64_t)v88 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v104 = (uint64_t)v88 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v103 = (char *)v88 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v102 = (char *)v88 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v88 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v101 = (uint64_t)v88 - v31;
  v32 = type metadata accessor for SomeEvent();
  v33 = MEMORY[0x24BDAC7A8](v32);
  v92 = (char *)v88 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v91 = (uint64_t)v88 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v90 = (char *)v88 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v89 = (uint64_t)v88 - v39;
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28);
  v40 = MEMORY[0x24BDAC7A8](v116);
  v100 = (char *)v88 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v99 = (char *)v88 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v111 = (char *)v88 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v96 = (uint64_t)v88 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v98 = (char *)v88 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v97 = (char *)v88 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v110 = (char *)v88 - v53;
  MEMORY[0x24BDAC7A8](v52);
  v55 = (char *)v88 - v54;
  v112 = *(_QWORD *)(v56 + 72);
  if (!v112)
  {
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (a2 - a1 == 0x8000000000000000 && v112 == -1)
    goto LABEL_31;
  v57 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v112 == -1)
    goto LABEL_32;
  v58 = (uint64_t)(a2 - a1) / v112;
  v119 = a1;
  v118 = a4;
  v59 = v57 / v112;
  if (v58 < v57 / v112)
  {
    if ((v58 & 0x8000000000000000) == 0)
    {
      v60 = v58 * v112;
      v61 = (uint64_t)v110;
      if (a4 < a1 || a1 + v60 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v111 = (char *)(a4 + v60);
      v117 = a4 + v60;
      if (v60 >= 1 && a2 < a3)
      {
        v113 = a3;
        v107 = v15;
        v88[3] = v30;
        v88[2] = v55;
        v114 = a2;
        sub_23E8ECF20(a2, (uint64_t)v55, &qword_256D9EF28);
        sub_23E8ECF20(a4, v61, &qword_256D9EF28);
        v65 = *(int *)(v116 + 48);
        v66 = v97;
        v67 = (uint64_t)&v97[v65];
        v68 = (uint64_t)&v55[v65];
        v69 = sub_23E945A10();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v66, v55, v69);
        sub_23E9011A0(v68, v67, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
        v70 = v89;
        sub_23E9011A0(v67, v89, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
        v71 = v70;
        v72 = v101;
        sub_23E901220(v71, v101, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
        sub_23E9011A0(v72, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
        v73 = (char *)&loc_23E8FFCE0 + *((int *)qword_23E900D80 + swift_getEnumCaseMultiPayload());
        __asm { BR              X9 }
      }
      goto LABEL_29;
    }
LABEL_33:
    sub_23E946028();
    __break(1u);
    JUMPOUT(0x23E900D48);
  }
  if (v59 < 0)
    goto LABEL_33;
  v62 = v59 * v112;
  v63 = (uint64_t)v111;
  if (a4 < a2 || a2 + v62 <= a4)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a4 != a2)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v74 = a4 + v62;
  v117 = a4 + v62;
  v119 = a2;
  v75 = v62 < 1 || a1 >= a2;
  v76 = v96;
  if (!v75)
  {
    v88[5] = a4;
    v88[4] = a1;
    v112 = -v112;
    v77 = v112;
    sub_23E8ECF20(v74 + v112, v96, &qword_256D9EF28);
    v110 = (char *)(a2 + v77);
    sub_23E8ECF20(a2 + v77, v63, &qword_256D9EF28);
    v78 = *(int *)(v116 + 48);
    v79 = v99;
    v80 = (uint64_t)&v99[v78];
    v81 = v76 + v78;
    v82 = sub_23E945A10();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v79, v76, v82);
    sub_23E9011A0(v81, v80, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    v83 = v91;
    sub_23E9011A0(v80, v91, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    v84 = v83;
    v85 = v104;
    sub_23E901220(v84, v104, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
    sub_23E9011A0(v85, v105, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
    v86 = (char *)&loc_23E900554 + *((int *)qword_23E900D48 + swift_getEnumCaseMultiPayload());
    v113 = a3;
    __asm { BR              X9 }
  }
LABEL_29:
  sub_23E900EB0(&v119, &v118, (uint64_t *)&v117);
  return 1;
}

char *sub_23E900DB8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF70);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23E900EB0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_23E946028();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_23E900FC0(uint64_t a1)
{
  return sub_23E900DB8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23E900FD4(_QWORD *a1)
{
  return sub_23E920894(0, a1[2], 0, a1);
}

uint64_t sub_23E900FE8(uint64_t a1)
{
  uint64_t v1;

  return sub_23E9295DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23E900FF0(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_23E9049F8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEA0) - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_23E946028();
  __break(1u);
  return result;
}

uint64_t sub_23E9011A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23E9011E4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23E901220(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23E901264(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_23E90127C()
{
  unint64_t result;

  result = qword_256D9EF88;
  if (!qword_256D9EF88)
  {
    result = MEMORY[0x24265637C](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256D9EF88);
  }
  return result;
}

unint64_t sub_23E9012C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D9EF98;
  if (!qword_256D9EF98)
  {
    v1 = sub_23E901318(255, &qword_256D9EF90);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_256D9EF98);
  }
  return result;
}

uint64_t sub_23E901318(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23E901350(_QWORD *a1)
{
  uint64_t v1;

  return sub_23E92F144(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_23E90136C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t static HMVCommands.echo(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23E9013C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = v0[2];
  v1 = v0[3];
  v3 = swift_task_alloc();
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256D9E888 + dword_256D9E888);
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_23E901450;
  return v6((uint64_t)sub_23E9015D8, v3);
}

uint64_t sub_23E901450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 48) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_23E9014E0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E901514(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  _QWORD v6[6];

  v4 = (void *)sub_23E945B0C();
  v6[4] = sub_23E9017D8;
  v6[5] = a2;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_23E9017E0;
  v6[3] = &block_descriptor_2;
  v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilEchoWithString_reply_, v4, v5);
  _Block_release(v5);

}

void sub_23E9015D8(void *a1, uint64_t a2)
{
  sub_23E901514(a1, a2);
}

void sub_23E9015E0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a3;
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a4;
    v13[5] = sub_23E901914;
    v13[6] = v11;
    v14 = a3;
    v15 = a3;
    swift_retain();
    swift_retain();
    sub_23E901EB8((uint64_t)v10, (uint64_t)&unk_256D9EFC8, (uint64_t)v13);
    swift_release();
    swift_release();

  }
  else if (a2)
  {
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a1;
    *(_QWORD *)(v16 + 24) = a2;
    v17 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = a4;
    v18[5] = sub_23E9018E4;
    v18[6] = v16;
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    sub_23E901EB8((uint64_t)v10, (uint64_t)&unk_256D9E8B0, (uint64_t)v18);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_23E9017D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_23E9015E0(a1, a2, a3, v3);
}

uint64_t sub_23E9017E0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = sub_23E945B18();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  swift_retain();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_23E901878()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E898);
  return sub_23E945CBC();
}

uint64_t sub_23E9018C0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E9018E4()
{
  return sub_23E901878();
}

uint64_t sub_23E9018F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E901914(uint64_t a1)
{
  uint64_t v1;

  return sub_23E8ECC70(a1, (id *)(v1 + 16));
}

uint64_t sub_23E901920(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E8EAAEC;
  return sub_23E8EBAE8(a1, v4, v5, v6, v7, v8);
}

uint64_t RecordType.rawValue.getter()
{
  return 0x746E657645;
}

uint64_t RecordType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23E94604C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t sub_23E901A18()
{
  unint64_t result;

  result = qword_256D9EFD0;
  if (!qword_256D9EFD0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for RecordType, &type metadata for RecordType);
    atomic_store(result, (unint64_t *)&qword_256D9EFD0);
  }
  return result;
}

uint64_t sub_23E901A5C()
{
  sub_23E9461B4();
  sub_23E945B6C();
  return sub_23E9461E4();
}

uint64_t sub_23E901AA8()
{
  return sub_23E945B6C();
}

uint64_t sub_23E901ABC()
{
  sub_23E9461B4();
  sub_23E945B6C();
  return sub_23E9461E4();
}

uint64_t sub_23E901B04@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23E94604C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_23E901B54(_QWORD *a1@<X8>)
{
  *a1 = 0x746E657645;
  a1[1] = 0xE500000000000000;
}

uint64_t getEnumTagSinglePayload for RecordType(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for RecordType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E901C00 + 4 * byte_23E9477C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E901C20 + 4 * byte_23E9477C5[v4]))();
}

_BYTE *sub_23E901C00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E901C20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E901C28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E901C30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E901C38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E901C40(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23E901C4C()
{
  return 0;
}

ValueMetadata *type metadata accessor for RecordType()
{
  return &type metadata for RecordType;
}

unint64_t sub_23E901C68(unint64_t result)
{
  if ((result >> 61) <= 5)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t destroy for RecordError(unint64_t *a1)
{
  return sub_23E901C90(*a1);
}

unint64_t sub_23E901C90(unint64_t result)
{
  if ((result >> 61) <= 5)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *_s13HomeKitEvents11RecordErrorOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_23E901C68(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

unint64_t *assignWithCopy for RecordError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_23E901C68(*a2);
  v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_23E901C90(v6);
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

unint64_t *assignWithTake for RecordError(unint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_23E901C90(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7A && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 122);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x79)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RecordError(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x79)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 122;
    if (a3 >= 0x7A)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7A)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23E901E4C(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 61;
  if (v1 <= 5)
    return v1;
  else
    return (*a1 >> 3) + 6;
}

_QWORD *sub_23E901E68(_QWORD *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_23E901E78(_QWORD *result, uint64_t a2)
{
  if (a2 < 6)
  {
    *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    *result = (8 * (a2 - 6)) | 0xC000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordError()
{
  return &type metadata for RecordError;
}

uint64_t sub_23E901EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23E945D1C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23E945D10();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23E907084(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23E945C98();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t Future.init(closure:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t **a5@<X8>)
{
  uint64_t v10;

  type metadata accessor for Promise(0, a2, a2, a3);
  swift_allocObject();
  *a5 = sub_23E90336C();
  type metadata accessor for Future.ValueType(0, a2, a3, a4);
  swift_storeEnumTagMultiPayload();
  v10 = swift_retain();
  a1(v10);
  return swift_release();
}

uint64_t type metadata accessor for Promise(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Promise);
}

uint64_t *sub_23E9020B0()
{
  swift_allocObject();
  return sub_23E90336C();
}

uint64_t type metadata accessor for Future.ValueType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Future.ValueType);
}

uint64_t Future<>.init()(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Future.ValueType(0, MEMORY[0x24BEE4AE0] + 8, a1, a2);
  return swift_storeEnumTagMultiPayload();
}

uint64_t Future.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a5, a1, a2);
  type metadata accessor for Future.ValueType(0, a2, a3, a4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23E902198(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 96) = a3;
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_23E9021B4()
{
  uint64_t v0;
  _QWORD *v2;
  _QWORD *v3;

  if (*(_BYTE *)(v0 + 96))
  {
    if (*(_BYTE *)(v0 + 96) == 1)
    {
      return sub_23E945FF8();
    }
    else
    {
      sub_23E9039F0(*(_QWORD *)(v0 + 56), 2);
      v3 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 80) = v3;
      *v3 = v0;
      v3[1] = sub_23E90238C;
      return sub_23E946148();
    }
  }
  else
  {
    *(_QWORD *)(v0 + 64) = swift_task_alloc();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *v2 = v0;
    v2[1] = sub_23E902328;
    return sub_23E946100();
  }
}

uint64_t sub_23E902328()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E902384()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E90238C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E9023F0()
{
  uint64_t v0;

  sub_23E903A04(*(_QWORD *)(v0 + 56), 2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E902424()
{
  sub_23E945F5C();
  sub_23E945BA8();
  swift_getErrorValue();
  sub_23E946118();
  return sub_23E945FF8();
}

uint64_t Future<>.result.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a1;
  v3[7] = v2;
  v4 = *(_QWORD *)(a2 + 16);
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v5 = type metadata accessor for Future.ValueType(0, v4, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E902588()
{
  _QWORD *v0;
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[12] + 16))(v0[13], v0[7], v0[11]);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      return sub_23E945FF8();
    }
    else
    {
      v7 = *(_QWORD **)v0[13];
      v0[16] = v7;
      v8 = (_QWORD *)swift_task_alloc();
      v0[17] = v8;
      *v8 = v0;
      v8[1] = sub_23E9027D4;
      v8[2] = v0[6];
      v8[3] = v7;
      v8[4] = *v7;
      return swift_task_switch();
    }
  }
  else
  {
    v3 = v0[10];
    v4 = v0[8];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[9] + 32))(v3, v0[13], v4);
    v5 = swift_task_alloc();
    v0[14] = v5;
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v3;
    v6 = (_QWORD *)swift_task_alloc();
    v0[15] = v6;
    *v6 = v0;
    v6[1] = sub_23E90272C;
    return sub_23E946100();
  }
}

uint64_t sub_23E90272C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E902788()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E9027D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E902838()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E90287C()
{
  sub_23E945F5C();
  sub_23E945BA8();
  swift_getErrorValue();
  sub_23E946118();
  return sub_23E945FF8();
}

uint64_t sub_23E902948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E945CC8();
  return sub_23E945CBC();
}

uint64_t Promise.result.getter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_23E9029F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_23E902A6C;
  return sub_23E946148();
}

uint64_t sub_23E902A6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E902AD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E902AE4(uint64_t a1)
{
  return sub_23E902948(a1);
}

uint64_t Future.init(throwing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  type metadata accessor for Future.ValueType(0, a2, a3, a4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t Future.result.getter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[2] = a1;
  v3[3] = v2;
  v4 = a2[2];
  v3[4] = v4;
  v5 = a2[3];
  v3[5] = v5;
  v6 = a2[4];
  v3[6] = v6;
  v7 = type metadata accessor for Future.ValueType(0, v4, v5, v6);
  v3[7] = v7;
  v3[8] = *(_QWORD *)(v7 - 8);
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E902BCC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 16))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 56));
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v1 = **(_QWORD ***)(v0 + 72);
    *(_QWORD *)(v0 + 80) = v1;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v2;
    *v2 = v0;
    v2[1] = sub_23E902D04;
    v2[2] = *(_QWORD *)(v0 + 16);
    v2[3] = v1;
    v2[4] = *v1;
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 24);
    v6 = swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v6;
    *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 32);
    *(_QWORD *)(v6 + 32) = v4;
    *(_QWORD *)(v6 + 40) = v5;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v7;
    *v7 = v0;
    v7[1] = sub_23E902DA4;
    return sub_23E946148();
  }
}

uint64_t sub_23E902D04()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E902D68()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E902DA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E902E10()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E902E54()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E902E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E902EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t result;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a1;
  v7 = *(_QWORD *)(a4 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v35 = (char *)&v34 - v12;
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v11);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v34 - v18;
  v34 = v20;
  v23 = type metadata accessor for Future.ValueType(0, v21, v22, v20);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v34 - v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))((char *)&v34 - v24, a2, v23);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v29 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v30 = v35;
      v29(v35, v25, a4);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v30, a4);
      v31 = sub_23E94610C();
      if (v31)
      {
        v32 = v31;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a4);
      }
      else
      {
        v32 = swift_allocError();
        v29(v33, v10, a4);
      }
      v37 = v32;
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256DA0E70);
      sub_23E945CC8();
      sub_23E945CB0();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v30, a4);
    }
    else
    {
      result = sub_23E945FF8();
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v25, a3);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, a3);
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256DA0E70);
    sub_23E945CC8();
    sub_23E945CBC();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, a3);
  }
  return result;
}

uint64_t Future<>.complete.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = *(_QWORD *)v0;
  *(_QWORD *)(v1 + 16) = *(_QWORD *)v0;
  v3 = *(_BYTE *)(v0 + 8);
  *(_BYTE *)(v1 + 32) = v3;
  sub_23E9039F0(v2, v3);
  v6 = (uint64_t (*)(void))((char *)&dword_256D9EFF8 + dword_256D9EFF8);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v4;
  *v4 = v1;
  v4[1] = sub_23E90324C;
  return v6();
}

uint64_t sub_23E90324C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v2 = *(_BYTE *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();
  sub_23E903A04(v1, v2);
  return swift_task_switch();
}

uint64_t Future<>.complete.getter(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23E9032FC;
  return Future.result.getter((uint64_t)v3, a1);
}

uint64_t sub_23E9032FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 24) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E903360()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *sub_23E90336C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  swift_defaultActor_initialize();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  v5 = type metadata accessor for Promise.ValueType(0, *(_QWORD *)(v1 + 80), v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 104)) = 0;
  return v0;
}

uint64_t Promise.resolve(throwing:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = type metadata accessor for Promise.ValueType(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - v8;
  *(uint64_t *)((char *)&v15 - v8) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  v10 = a1;
  LOBYTE(a1) = sub_23E903484((uint64_t)v9, v11, v12, v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return a1 & 1;
}

BOOL sub_23E903484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  char *v28;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a1;
  v5 = *v4;
  v32 = *(_QWORD *)(*v4 + 80);
  v6 = type metadata accessor for Promise.ValueType(0, v32, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)&v30 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v10);
  v30 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E945EFC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = (uint64_t)v4 + *(_QWORD *)(v5 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v19, v12);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  if (v20 == 1)
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v21(v16, v33, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 40))(v19, v16, v12);
    swift_endAccess();
    v22 = *(_QWORD *)(*v4 + 104);
    v23 = *(uint64_t *)((char *)v4 + v22);
    if (v23)
    {
      *(uint64_t *)((char *)v4 + v22) = 0;
      v24 = sub_23E945D1C();
      v25 = (uint64_t)v30;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v30, 1, 1, v24);
      v26 = v31;
      v21(v31, v33, v6);
      v27 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v28 = (char *)swift_allocObject();
      *((_QWORD *)v28 + 2) = 0;
      *((_QWORD *)v28 + 3) = 0;
      *((_QWORD *)v28 + 4) = v32;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v28[v27], v26, v6);
      *(_QWORD *)&v28[(v8 + v27 + 7) & 0xFFFFFFFFFFFFFFF8] = v23;
      sub_23E901EB8(v25, (uint64_t)&unk_256D9F240, (uint64_t)v28);
      swift_release();
    }
  }
  return v20 != 1;
}

uint64_t sub_23E903724(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_23E901EB8((uint64_t)v9, (uint64_t)&unk_256D9F258, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_23E90386C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256DA0E70);
  v5 = sub_23E945CC8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v13 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = 0;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = v4;
  *((_QWORD *)v14 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v14[v13], v8, v5);
  swift_retain();
  sub_23E901EB8((uint64_t)v11, (uint64_t)&unk_256D9F270, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_23E9039DC(uint64_t a1)
{
  uint64_t v1;

  return sub_23E90386C(a1, v1);
}

uint64_t sub_23E9039E4(uint64_t a1)
{
  uint64_t *v1;

  return sub_23E902EEC(a1, v1[5], v1[2], v1[3]);
}

uint64_t sub_23E9039F0(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 2)
    return swift_retain();
  return result;
}

uint64_t sub_23E903A04(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 2)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for Promise.ValueType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Promise.ValueType);
}

uint64_t sub_23E903A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = a5;
  return swift_task_switch();
}

uint64_t sub_23E903A3C()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;

  v1 = (void *)sub_23E907614(*(_QWORD *)(v0 + 32));
  *(_QWORD *)(v0 + 40) = v1;
  *(_BYTE *)(v0 + 48) = v2;
  sub_23E9077E8(v1, v2);
  return swift_task_switch();
}

uint64_t sub_23E903A84()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
  {
    if ((v1 & 1) != 0)
    {
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
      sub_23E945CB0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
      sub_23E945CBC();
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E903AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[3] = a4;
  v5[4] = a5;
  v6 = *(_QWORD *)(*(_QWORD *)a4 + 80);
  v5[5] = v6;
  v5[6] = *(_QWORD *)(v6 - 8);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  v9 = type metadata accessor for Promise.ValueType(255, v6, v7, v8);
  v5[9] = v9;
  v10 = sub_23E945EFC();
  v5[10] = v10;
  v5[11] = *(_QWORD *)(v10 - 8);
  v5[12] = swift_task_alloc();
  v5[13] = *(_QWORD *)(v9 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E903BE4()
{
  uint64_t v0;

  sub_23E903DD8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 96));
  return swift_task_switch();
}

uint64_t sub_23E903C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 72);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(v1, *(_QWORD *)(v0 + 80));
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v4, v3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = *(_QWORD **)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 72);
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)(v0 + 16) = *v7;
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256DA0E70);
      sub_23E945CC8();
      sub_23E945CB0();
    }
    else
    {
      v12 = *(_QWORD *)(v0 + 56);
      v11 = *(_QWORD *)(v0 + 64);
      v13 = *(_QWORD *)(v0 + 40);
      v14 = *(_QWORD *)(v0 + 48);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v14 + 32))(v11, v7, v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256DA0E70);
      sub_23E945CC8();
      sub_23E945CBC();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E903DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256DA0E70);
  v6 = sub_23E945CC8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - v8;
  v12 = type metadata accessor for Promise.ValueType(255, v5, v10, v11);
  v13 = sub_23E945EFC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - v15;
  v17 = (uint64_t)v2 + *(_QWORD *)(v4 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  v18 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v19 = *(_QWORD *)(*v2 + 104);
    if (*(uint64_t *)((char *)v2 + v19))
    {
      v26 = *(uint64_t *)((char *)v2 + v19);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v25, v6);
      sub_23E945C8C();
      swift_bridgeObjectRetain();
      sub_23E945C74();
      swift_bridgeObjectRelease();
      v20 = 1;
    }
    else
    {
      sub_23E9460F4();
      swift_allocObject();
      v20 = 1;
      v21 = sub_23E945C44();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v22, v25, v6);
      sub_23E945C8C();
      *(uint64_t *)((char *)v2 + v19) = v21;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a2, v16, v12);
    v20 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a2, v20, 1, v12);
}

uint64_t sub_23E904018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 32) = a6;
  return swift_task_switch();
}

uint64_t sub_23E904034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;

  v1 = *(_QWORD *)(v0 + 32);
  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    v6 = *(_QWORD *)(v1 + 16);
    if (v6)
    {
      v7 = *(void **)(v0 + 24);
      v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880) - 8);
      v9 = v1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      swift_bridgeObjectRetain();
      sub_23E907158(v7, 1);
      v10 = *(_QWORD *)(v8 + 72);
      do
      {
        *(_QWORD *)(v0 + 16) = v7;
        v11 = v7;
        sub_23E945CB0();
        v9 += v10;
        --v6;
      }
      while (v6);
      v12 = *(void **)(v0 + 24);
      swift_bridgeObjectRelease();
      sub_23E904778(v12, 1);
    }
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880) - 8);
      v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      v5 = *(_QWORD *)(v3 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_23E945CBC();
        v4 += v5;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E90415C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256DA0E70);
  v8 = sub_23E945CC8();
  v6[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[9] = v9;
  v6[10] = *(_QWORD *)(v9 + 64);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  v6[13] = *(_QWORD *)(a6 - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  v12 = type metadata accessor for Promise.ValueType(0, a6, v10, v11);
  v6[16] = v12;
  v6[17] = *(_QWORD *)(v12 - 8);
  v6[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E90424C()
{
  uint64_t v0;
  int EnumCaseMultiPayload;
  void **v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 16))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 128));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v2 = *(void ***)(v0 + 144);
  if (EnumCaseMultiPayload == 1)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v4 = (char *)*v2;
    v5 = swift_bridgeObjectRetain();
    if (!MEMORY[0x242655998](v5, v3))
      goto LABEL_22;
    v6 = 0;
    v8 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    while (1)
    {
      v9 = sub_23E945C68();
      sub_23E945C50();
      if ((v9 & 1) != 0)
      {
        (*(void (**)(_QWORD, unint64_t, _QWORD))(v8 + 16))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 48)+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v6, *(_QWORD *)(v0 + 64));
        v10 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_11;
      }
      else
      {
        result = sub_23E945F74();
        if (v7 != 8)
        {
          __break(1u);
LABEL_26:
          __break(1u);
          return result;
        }
        v16 = result;
        v17 = *(_QWORD *)(v0 + 88);
        v18 = *(_QWORD *)(v0 + 64);
        *(_QWORD *)(v0 + 16) = v16;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v17, v0 + 16, v18);
        swift_unknownObjectRelease();
        v10 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_11:
          __break(1u);
          break;
        }
      }
      v11 = *(_QWORD *)(v0 + 88);
      v12 = *(_QWORD *)(v0 + 64);
      v13 = *(_QWORD *)(v0 + 48);
      *(_QWORD *)(v0 + 24) = v4;
      v14 = v4;
      sub_23E945CB0();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v12);
      ++v6;
      if (v10 == MEMORY[0x242655998](v13, v12))
      {
LABEL_22:
        swift_bridgeObjectRelease();

        goto LABEL_24;
      }
    }
  }
  v19 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, void **, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 120), v2, *(_QWORD *)(v0 + 56));
  v20 = swift_bridgeObjectRetain();
  if (MEMORY[0x242655998](v20, v19))
  {
    v4 = 0;
    v21 = *(_QWORD *)(v0 + 104);
    v23 = *(_QWORD *)(v0 + 72);
    v22 = *(_QWORD *)(v0 + 80);
    do
    {
      v24 = sub_23E945C68();
      sub_23E945C50();
      if ((v24 & 1) != 0)
      {
        (*(void (**)(_QWORD, unint64_t, _QWORD))(v23 + 16))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 48)+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * (_QWORD)v4, *(_QWORD *)(v0 + 64));
        v25 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_21;
      }
      else
      {
        result = sub_23E945F74();
        if (v22 != 8)
          goto LABEL_26;
        v29 = result;
        v30 = *(_QWORD *)(v0 + 96);
        v31 = *(_QWORD *)(v0 + 64);
        *(_QWORD *)(v0 + 32) = v29;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v30, v0 + 32, v31);
        swift_unknownObjectRelease();
        v25 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
      }
      v26 = *(_QWORD *)(v0 + 96);
      v27 = *(_QWORD *)(v0 + 64);
      v28 = *(_QWORD *)(v0 + 48);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v21 + 16))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 56));
      sub_23E945CBC();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v26, v27);
      ++v4;
    }
    while (v25 != (char *)MEMORY[0x242655998](v28, v27));
  }
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 56));
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Promise.deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 96);
  type metadata accessor for Promise.ValueType(255, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v6 = sub_23E945EFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v4;
}

uint64_t Promise.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Promise.deinit(a1, a2, a3, a4);
  return swift_defaultActor_deallocate();
}

uint64_t Promise.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23E904630()
{
  return Promise.unownedExecutor.getter();
}

BOOL Promise<>.resolve()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v4 = *(unsigned __int8 *)(v0 + 120);
  if (v4 == 255)
  {
    v5 = *(void **)(v0 + 112);
    *(_QWORD *)(v0 + 112) = 0;
    *(_BYTE *)(v0 + 120) = 0;
    sub_23E904760(v5, 0xFFu);
    v6 = *(_QWORD *)(v0 + 128);
    if (v6)
    {
      *(_QWORD *)(v0 + 128) = 0;
      v7 = sub_23E945D1C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
      v11 = 0;
      v12 = 0;
      v8 = (_QWORD *)swift_allocObject();
      v8[2] = 0;
      v8[3] = 0;
      sub_23E904CC4((uint64_t)&v11, (uint64_t)(v8 + 4));
      v8[6] = v6;
      sub_23E901EB8((uint64_t)v3, (uint64_t)&unk_256D9F018, (uint64_t)v8);
      swift_release();
    }
  }
  return v4 != 255;
}

void sub_23E904760(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_23E904778(a1, a2 & 1);
}

void sub_23E904778(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t Promise.resolve(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v7 = type metadata accessor for Promise.ValueType(0, v6, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))((char *)&v15 - v9, a1, v6);
  swift_storeEnumTagMultiPayload();
  LOBYTE(a1) = sub_23E903484((uint64_t)v10, v11, v12, v13);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return a1 & 1;
}

uint64_t sub_23E90483C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23E9048A0;
  return v6(a1);
}

uint64_t sub_23E9048A0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

_QWORD *sub_23E9048EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F278);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E90740C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E9049F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E904A0C(a1, a2, a3, a4, &qword_256D9EEE0, &qword_256D9EEA0);
}

uint64_t sub_23E904A0C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23E945FEC();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23E9074FC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_23E904C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v7 = *a4;
  v8 = *((_BYTE *)a4 + 8);
  v9 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *(_QWORD *)v9 = v5;
  *(_QWORD *)(v9 + 8) = sub_23E8EAB34;
  *(_BYTE *)(v9 + 40) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  *(_QWORD *)(v9 + 32) = a5;
  return swift_task_switch();
}

uint64_t sub_23E904C8C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_23E904778(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E904CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E904D0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1 + 4;
  v7 = v1[6];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23E8EAB34;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_256D9F008
                                                                                + dword_256D9F008))(a1, v4, v5, v6, v7);
}

uint64_t sub_23E904D94()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23E904D9C(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  result = type metadata accessor for Future.ValueType(319, a1[2], a1[3], a1[4]);
  if (v2 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E904E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) > v3)
    v3 = *(_QWORD *)(v4 + 64);
  if (v3 <= 8)
    v3 = 8;
  v5 = *(unsigned __int8 *)(a1 + v3);
  if (v5 < 3)
  {
    if (v5 == 2)
    {
      return swift_release();
    }
    else if (v5 == 1)
    {
      return (*(uint64_t (**)(void))(v4 + 8))();
    }
    else
    {
      return (*(uint64_t (**)(void))(v2 + 8))();
    }
  }
  else
  {
    if (v3 <= 3)
      v6 = v3;
    else
      v6 = 4;
    return ((uint64_t (*)(void))((char *)&loc_23E904E70 + 4 * byte_23E9478D8[v6]))();
  }
}

_QWORD *sub_23E904EDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v6 + 64) > v5)
    v5 = *(_QWORD *)(v6 + 64);
  if (v5 <= 8)
    v7 = 8;
  else
    v7 = v5;
  v8 = *((unsigned __int8 *)a2 + v7);
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X15 }
  }
  if (v8 == 2)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v7) = 2;
    swift_retain();
  }
  else if (v8 == 1)
  {
    (*(void (**)(_QWORD *))(v6 + 16))(a1);
    *((_BYTE *)a1 + v7) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    *((_BYTE *)a1 + v7) = 0;
  }
  return a1;
}

_QWORD *sub_23E904FF0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v13)(void);
  unsigned int v14;
  uint64_t v15;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v9 + 64) > v8)
      v8 = *(_QWORD *)(v9 + 64);
    if (v8 <= 8)
      v10 = 8;
    else
      v10 = v8;
    v11 = *((unsigned __int8 *)a1 + v10);
    if (v11 >= 3)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 2)
    {
      swift_release();
    }
    else
    {
      if (v11 == 1)
        v13 = *(void (**)(void))(v9 + 8);
      else
        v13 = *(void (**)(void))(v7 + 8);
      v13();
    }
    v14 = *((unsigned __int8 *)a2 + v10);
    if (v14 >= 3)
    {
      if (v10 <= 3)
        v15 = v10;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    if (v14 == 2)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v10) = 2;
      swift_retain();
    }
    else if (v14 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v6);
      *((_BYTE *)a1 + v10) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v10) = 0;
    }
  }
  return a1;
}

_QWORD *sub_23E9051D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v6 + 64) > v5)
    v5 = *(_QWORD *)(v6 + 64);
  if (v5 <= 8)
    v7 = 8;
  else
    v7 = v5;
  v8 = *((unsigned __int8 *)a2 + v7);
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X15 }
  }
  if (v8 == 2)
  {
    *a1 = *a2;
    v10 = 2;
  }
  else if (v8 == 1)
  {
    (*(void (**)(_QWORD *))(v6 + 32))(a1);
    v10 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v10 = 0;
  }
  *((_BYTE *)a1 + v7) = v10;
  return a1;
}

_QWORD *sub_23E9052E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v13)(void);
  unsigned int v14;
  uint64_t v15;
  char v16;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v9 + 64) > v8)
      v8 = *(_QWORD *)(v9 + 64);
    if (v8 <= 8)
      v10 = 8;
    else
      v10 = v8;
    v11 = *((unsigned __int8 *)a1 + v10);
    if (v11 >= 3)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 2)
    {
      swift_release();
    }
    else
    {
      if (v11 == 1)
        v13 = *(void (**)(void))(v9 + 8);
      else
        v13 = *(void (**)(void))(v7 + 8);
      v13();
    }
    v14 = *((unsigned __int8 *)a2 + v10);
    if (v14 >= 3)
    {
      if (v10 <= 3)
        v15 = v10;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    if (v14 == 2)
    {
      *a1 = *a2;
      v16 = 2;
    }
    else if (v14 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 32))(a1, a2, v6);
      v16 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v5);
      v16 = 0;
    }
    *((_BYTE *)a1 + v10) = v16;
  }
  return a1;
}

uint64_t sub_23E9054C4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) > v3)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  v4 = 8;
  if (v3 > 8)
    v4 = v3;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_23;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 < 2)
    {
LABEL_23:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 3)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_23;
LABEL_16:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 254);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23E905598 + 4 * byte_23E9478FB[(v5 - 1)]))();
}

void sub_23E9055E4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for Future(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Future);
}

uint64_t sub_23E9057AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  type metadata accessor for Promise.ValueType(255, *(_QWORD *)(a1 + 80), a3, a4);
  result = sub_23E945EFC();
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Promise()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23E905848()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23E905850()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id *sub_23E9058C0(id *a1, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

void sub_23E9059E4(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)

    else
      (*(void (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_23E905A2C + 4 * byte_23E94790E[v5]))();
  }
}

_QWORD *sub_23E905A84(_QWORD *a1, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  id v9;
  char v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *a2;
    v9 = *a2;
    *a1 = v8;
    v10 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v10 = 0;
  }
  *((_BYTE *)a1 + v5) = v10;
  return a1;
}

id *sub_23E905B68(id *a1, void **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      v13 = v12;
      *a1 = v12;
      v14 = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(a1, a2, v5);
      v14 = 0;
    }
    *((_BYTE *)a1 + v7) = v14;
  }
  return a1;
}

_QWORD *sub_23E905CFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

id *sub_23E905DD0(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_23E905F5C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23E906020 + 4 * byte_23E947931[(v4 - 1)]))();
}

void sub_23E90606C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_23E906214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23E90625C + 4 * byte_23E94793F[v3]))();
}

void sub_23E9062A4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_23E90636C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23E906400(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v6 + 64) > v5)
    v5 = *(_QWORD *)(v6 + 64);
  if (v5 <= 8)
    v7 = 8;
  else
    v7 = v5;
  v8 = *(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80);
  if ((unint64_t)(v7 + 1) > 0x18 || (v8 & 0x1000F8) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + (((v8 & 0xF8 | 7u) + 16) & ~(unint64_t)(v8 & 0xF8 | 7u)));
LABEL_20:
    swift_retain();
    return v3;
  }
  v11 = *((unsigned __int8 *)a2 + v7);
  if (v11 >= 3)
  {
    if (v7 <= 3)
      v12 = v7;
    else
      v12 = 4;
    __asm { BR              X15 }
  }
  if (v11 == 2)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v7) = 2;
    goto LABEL_20;
  }
  if (v11 == 1)
  {
    (*(void (**)(uint64_t *))(v6 + 16))(a1);
    *((_BYTE *)v3 + v7) = 1;
  }
  else
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    *((_BYTE *)v3 + v7) = 0;
  }
  return v3;
}

uint64_t sub_23E906558(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) > v3)
    v3 = *(_QWORD *)(v4 + 64);
  if (v3 <= 8)
    v3 = 8;
  v5 = *(unsigned __int8 *)(a1 + v3);
  if (v5 < 3)
  {
    if (v5 == 2)
    {
      return swift_release();
    }
    else if (v5 == 1)
    {
      return (*(uint64_t (**)(void))(v4 + 8))();
    }
    else
    {
      return (*(uint64_t (**)(void))(v2 + 8))();
    }
  }
  else
  {
    if (v3 <= 3)
      v6 = v3;
    else
      v6 = 4;
    return ((uint64_t (*)(void))((char *)&loc_23E9065B8 + 4 * byte_23E947949[v6]))();
  }
}

_QWORD *sub_23E906624(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v6 + 64) > v5)
    v5 = *(_QWORD *)(v6 + 64);
  if (v5 <= 8)
    v7 = 8;
  else
    v7 = v5;
  v8 = *((unsigned __int8 *)a2 + v7);
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X15 }
  }
  if (v8 == 2)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v7) = 2;
    swift_retain();
  }
  else if (v8 == 1)
  {
    (*(void (**)(_QWORD *))(v6 + 16))(a1);
    *((_BYTE *)a1 + v7) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    *((_BYTE *)a1 + v7) = 0;
  }
  return a1;
}

_QWORD *sub_23E906738(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v13)(void);
  unsigned int v14;
  uint64_t v15;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v9 + 64) > v8)
      v8 = *(_QWORD *)(v9 + 64);
    if (v8 <= 8)
      v10 = 8;
    else
      v10 = v8;
    v11 = *((unsigned __int8 *)a1 + v10);
    if (v11 >= 3)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 2)
    {
      swift_release();
    }
    else
    {
      if (v11 == 1)
        v13 = *(void (**)(void))(v9 + 8);
      else
        v13 = *(void (**)(void))(v7 + 8);
      v13();
    }
    v14 = *((unsigned __int8 *)a2 + v10);
    if (v14 >= 3)
    {
      if (v10 <= 3)
        v15 = v10;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    if (v14 == 2)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v10) = 2;
      swift_retain();
    }
    else if (v14 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v6);
      *((_BYTE *)a1 + v10) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v10) = 0;
    }
  }
  return a1;
}

_QWORD *sub_23E906920(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v6 + 64) > v5)
    v5 = *(_QWORD *)(v6 + 64);
  if (v5 <= 8)
    v7 = 8;
  else
    v7 = v5;
  v8 = *((unsigned __int8 *)a2 + v7);
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X15 }
  }
  if (v8 == 2)
  {
    *a1 = *a2;
    v10 = 2;
  }
  else if (v8 == 1)
  {
    (*(void (**)(_QWORD *))(v6 + 32))(a1);
    v10 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v10 = 0;
  }
  *((_BYTE *)a1 + v7) = v10;
  return a1;
}

_QWORD *sub_23E906A2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v13)(void);
  unsigned int v14;
  uint64_t v15;
  char v16;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v9 + 64) > v8)
      v8 = *(_QWORD *)(v9 + 64);
    if (v8 <= 8)
      v10 = 8;
    else
      v10 = v8;
    v11 = *((unsigned __int8 *)a1 + v10);
    if (v11 >= 3)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 2)
    {
      swift_release();
    }
    else
    {
      if (v11 == 1)
        v13 = *(void (**)(void))(v9 + 8);
      else
        v13 = *(void (**)(void))(v7 + 8);
      v13();
    }
    v14 = *((unsigned __int8 *)a2 + v10);
    if (v14 >= 3)
    {
      if (v10 <= 3)
        v15 = v10;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    if (v14 == 2)
    {
      *a1 = *a2;
      v16 = 2;
    }
    else if (v14 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 32))(a1, a2, v6);
      v16 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v5);
      v16 = 0;
    }
    *((_BYTE *)a1 + v10) = v16;
  }
  return a1;
}

uint64_t sub_23E906C0C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) > v3)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  v4 = 8;
  if (v3 > 8)
    v4 = v3;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_23;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 < 2)
    {
LABEL_23:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 3)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_23;
LABEL_16:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 254);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23E906CE0 + 4 * byte_23E94796C[(v5 - 1)]))();
}

void sub_23E906D2C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_23E906EE4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64) > v2)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  v3 = 8;
  if (v2 > 8)
    v3 = v2;
  if (*(unsigned __int8 *)(a1 + v3) < 3u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23E906F3C + 4 * byte_23E94797A[v4]))();
}

void sub_23E906F84(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;

  if (a2 > 2)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) > v5)
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    if (v5 <= 8)
      v6 = 8;
    else
      v6 = v5;
    v7 = a2 - 3;
    if (v6 < 4)
    {
      v8 = v7 >> (8 * v6);
      v9 = v7 & ~(-1 << (8 * v6));
      a1[v6] = v8 + 3;
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *(_WORD *)a1 = v9;
        a1[2] = BYTE2(v9);
      }
      else if ((_DWORD)v6 == 2)
      {
        *(_WORD *)a1 = v9;
      }
      else
      {
        *a1 = v9;
      }
    }
    else
    {
      a1[v6] = 3;
      bzero(a1, v6);
      *(_DWORD *)a1 = v7;
    }
  }
  else
  {
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    if (v4 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64))
      v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    if (v4 <= 8)
      v4 = 8;
    a1[v4] = a2;
  }
}

uint64_t sub_23E907084(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E9070C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E9070E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E8EAAEC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D9F220 + dword_256D9F220))(a1, v4);
}

id sub_23E907158(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

uint64_t sub_23E907164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_QWORD *)(type metadata accessor for Promise.ValueType(0, v5, a3, a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  if (swift_getEnumCaseMultiPayload() == 1)

  else
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v7, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E907224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v7 = v4[4];
  v8 = *(_QWORD *)(type metadata accessor for Promise.ValueType(0, v7, a3, a4) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + v9;
  v13 = *(_QWORD *)((char *)v4 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v14;
  *v14 = v5;
  v14[1] = sub_23E8EAB34;
  return sub_23E90415C(a1, v10, v11, v12, v13, v7);
}

uint64_t sub_23E9072D4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E903724(a1, v1);
}

uint64_t sub_23E9072DC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F248);
  return sub_23E945CBC();
}

uint64_t sub_23E90730C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E90738C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23E8EAB34;
  v5[3] = v3;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_23E90740C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E946028();
  __break(1u);
  return result;
}

uint64_t sub_23E9074FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23E946028();
  __break(1u);
  return result;
}

uint64_t sub_23E907614(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 120) != 255)
    return *(_QWORD *)(v1 + 112);
  v8 = *(_QWORD *)(v1 + 128);
  if (v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_23E904A0C(0, *(_QWORD *)(v8 + 16) + 1, 1, v8, &qword_256D9F260, &qword_256D9E880);
    v10 = *(_QWORD *)(v8 + 16);
    v9 = *(_QWORD *)(v8 + 24);
    if (v10 >= v9 >> 1)
      v8 = sub_23E904A0C(v9 > 1, v10 + 1, 1, v8, &qword_256D9F260, &qword_256D9E880);
    *(_QWORD *)(v8 + 16) = v10 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v10, v6, v3);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F260);
    v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_23E947240;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v12 + v11, a1, v3);
    *(_QWORD *)(v1 + 128) = v12;
  }
  swift_bridgeObjectRelease();
  return 0;
}

id sub_23E9077E8(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_23E907158(result, a2 & 1);
  return result;
}

uint64_t sub_23E907800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256DA0E70);
  v1 = sub_23E945CC8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E90789C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256DA0E70);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E945CC8() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[5];
  v8 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E8EAAEC;
  return sub_23E903AFC(a1, v5, v6, v7, v8);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24265631C](a1, v6, a5);
}

void sub_23E90797C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));
  if (a3)
  {
    v4 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F288);
    sub_23E945CB0();

  }
  else
  {
    sub_23E901318(0, &qword_256D9F2A0);
    sub_23E945C20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F288);
    sub_23E945CBC();
  }
}

void *sub_23E907A34(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v8 = sub_23E946004();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      v23 = v4;
      v24 = v7;
      v25 = v7 & 0xC000000000000001;
      v4 = 4;
      do
      {
        v9 = v4 - 4;
        if (v25)
        {
          v10 = (id)MEMORY[0x242655C98](v4 - 4, v7);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_19;
        }
        else
        {
          v10 = *(id *)(v7 + 8 * v4);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v12 = v8;
        v13 = v10;
        v14 = objc_msgSend(v10, sel_zoneID, v23);
        v15 = a3;
        v16 = objc_msgSend(v14, sel_zoneName);

        v17 = sub_23E945B18();
        v19 = v18;

        a3 = v15;
        v20 = v17 == a2 && v19 == v15;
        if (v20)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        v21 = sub_23E946130();
        swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
          goto LABEL_18;

        ++v4;
        v8 = v12;
        v20 = v11 == v12;
        v7 = v24;
      }
      while (!v20);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23E907BF8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 488) = a3;
  *(_QWORD *)(v3 + 264) = a1;
  *(_QWORD *)(v3 + 272) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F288);
  *(_QWORD *)(v3 + 280) = v4;
  *(_QWORD *)(v3 + 288) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 296) = swift_task_alloc();
  v5 = sub_23E945A34();
  *(_QWORD *)(v3 + 304) = v5;
  *(_QWORD *)(v3 + 312) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 320) = swift_task_alloc();
  *(_QWORD *)(v3 + 328) = swift_task_alloc();
  *(_QWORD *)(v3 + 336) = swift_task_alloc();
  *(_QWORD *)(v3 + 344) = swift_task_alloc();
  *(_QWORD *)(v3 + 352) = swift_task_alloc();
  *(_QWORD *)(v3 + 360) = swift_task_alloc();
  *(_QWORD *)(v3 + 368) = swift_task_alloc();
  *(_QWORD *)(v3 + 376) = swift_task_alloc();
  v6 = sub_23E945A10();
  *(_QWORD *)(v3 + 384) = v6;
  *(_QWORD *)(v3 + 392) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 400) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E907D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 272);
  v20 = *(id *)(v0 + 264);
  type metadata accessor for Configuration();
  static Configuration.zoneUUID(forHomeIdentifier:)(v4, v2);
  *(_QWORD *)(v0 + 168) = sub_23E9459BC();
  *(_QWORD *)(v0 + 176) = v5;
  *(_QWORD *)(v0 + 184) = 0x2D73746E657665;
  *(_QWORD *)(v0 + 192) = 0xE700000000000000;
  v23 = sub_23E945BE4();
  v24 = v6;
  sub_23E945B9C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 408) = v23;
  *(_QWORD *)(v0 + 416) = v24;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  if (objc_msgSend(v20, sel_databaseScope) == (id)2)
  {
    sub_23E901318(0, &qword_256D9F2A8);
    sub_23E945B18();
    v21 = (id)sub_23E945E24();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(id))(v0 + 8))(v21);
  }
  else if (*(_BYTE *)(v0 + 488) == 1)
  {
    if (qword_256D9E430 != -1)
      swift_once();
    *(_QWORD *)(v0 + 424) = qword_256DA16B0;
    return swift_task_switch();
  }
  else
  {
    sub_23E931000(*(_QWORD *)(v0 + 368));
    v8 = sub_23E945A1C();
    v9 = sub_23E945E18();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23E8E7000, v8, v9, "Fetching zones in shared database", v10, 2u);
      MEMORY[0x24265643C](v10, -1, -1);
    }
    v11 = *(_QWORD *)(v0 + 368);
    v13 = *(_QWORD *)(v0 + 304);
    v12 = *(_QWORD *)(v0 + 312);
    v15 = *(_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 296);
    v16 = *(_QWORD *)(v0 + 280);
    v22 = *(id *)(v0 + 264);

    v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    *(_QWORD *)(v0 + 448) = v17;
    v17(v11, v13);
    *(_QWORD *)(v0 + 56) = v0 + 248;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E9085C8;
    swift_continuation_init();
    *(_QWORD *)(v0 + 136) = v16;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 112));
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F290);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E70);
    sub_23E945CA4();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 32))(boxed_opaque_existential_1, v14, v16);
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v19 = (_QWORD *)(v0 + 80);
    v19[1] = 1107296256;
    v19[2] = sub_23E90797C;
    v19[3] = &block_descriptor_3;
    objc_msgSend(v22, sel_fetchAllRecordZonesWithCompletionHandler_, v19);
    return swift_continuation_await();
  }
}

uint64_t sub_23E9080F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  _QWORD *v7;

  v1 = v0[53];
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 128);
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = v0[51];
    v3 = v0[52];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_23E935278(v4, v3);
    if ((v6 & 1) != 0)
    {
      v7 = (_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v5);
      v0[54] = *v7;
      v0[55] = v7[1];
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23E9081CC()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v12;
  id v14;

  sub_23E931000(v0[46]);
  v1 = sub_23E945A1C();
  v2 = sub_23E945E18();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23E8E7000, v1, v2, "Fetching zones in shared database", v3, 2u);
    MEMORY[0x24265643C](v3, -1, -1);
  }
  v4 = v0[46];
  v6 = v0[38];
  v5 = v0[39];
  v8 = v0[36];
  v7 = v0[37];
  v9 = v0[35];
  v14 = (id)v0[33];

  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v0[56] = v10;
  v10(v4, v6);
  v0[7] = v0 + 31;
  v0[2] = v0;
  v0[3] = sub_23E9085C8;
  swift_continuation_init();
  v0[17] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F290);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E70);
  sub_23E945CA4();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 32))(boxed_opaque_existential_1, v7, v9);
  v0[10] = MEMORY[0x24BDAC760];
  v12 = v0 + 10;
  v12[1] = 1107296256;
  v12[2] = sub_23E90797C;
  v12[3] = &block_descriptor_3;
  objc_msgSend(v14, sel_fetchAllRecordZonesWithCompletionHandler_, v12);
  return swift_continuation_await();
}

uint64_t sub_23E908394()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v12;

  v1 = *(_QWORD *)(v0 + 376);
  sub_23E901318(0, &qword_256D9F2A8);
  v2 = (void *)sub_23E945E24();
  sub_23E931000(v1);
  v12 = v2;
  v3 = sub_23E945A1C();
  v4 = sub_23E945DE8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    *(_QWORD *)(v0 + 256) = v12;
    v7 = v12;
    sub_23E945F08();
    *v6 = v12;

    _os_log_impl(&dword_23E8E7000, v3, v4, "Using cached owner name for zone: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v6, -1, -1);
    MEMORY[0x24265643C](v5, -1, -1);
  }
  else
  {

    v3 = v12;
  }
  v8 = *(_QWORD *)(v0 + 376);
  v10 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 312);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**))(v0 + 8))(v12);
}

uint64_t sub_23E9085C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 456) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E908630()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  _BOOL4 v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  _QWORD *v44;
  id v45;
  NSObject *v46;
  uint64_t v47;
  _BOOL4 v48;
  void (*v49)(uint64_t, uint64_t);
  unint64_t v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint8_t *v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[2];

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 360);
  *(_QWORD *)(v0 + 464) = v1;
  sub_23E931000(v2);
  swift_bridgeObjectRetain_n();
  v3 = sub_23E945A1C();
  v4 = sub_23E945DE8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      v6 = sub_23E946004();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 240) = v6;
    sub_23E945F08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E8E7000, v3, v4, "Fetched %ld zone(s) in shared database", v5, 0xCu);
    MEMORY[0x24265643C](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v7 = *(_QWORD *)(v0 + 352);
  (*(void (**)(_QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 304));
  sub_23E931000(v7);
  swift_bridgeObjectRetain_n();
  v8 = sub_23E945A1C();
  v9 = sub_23E945DF4();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
  v12 = *(_QWORD *)(v0 + 352);
  v61 = *(_QWORD *)(v0 + 304);
  if (v10)
  {
    v58 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v62[0] = v14;
    *(_DWORD *)v13 = 136315138;
    v57 = v13 + 4;
    v15 = sub_23E901318(0, &qword_256D9F2A0);
    v16 = swift_bridgeObjectRetain();
    v17 = MEMORY[0x242655944](v16, v15);
    v19 = v18;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 232) = sub_23E90F65C(v17, v19, v62);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23E8E7000, v8, v9, "%s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v14, -1, -1);
    MEMORY[0x24265643C](v13, -1, -1);

    v58(v12, v61);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v11(v12, v61);
  }
  if (*(_BYTE *)(v0 + 488) != 1)
    goto LABEL_40;
  v62[0] = MEMORY[0x24BEE4AF8];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_23E946004();
    if (v20)
      goto LABEL_12;
  }
  else
  {
    v20 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_12:
      if (v20 < 1)
      {
        __break(1u);
LABEL_50:
        swift_once();
LABEL_37:
        *(_QWORD *)(v0 + 480) = qword_256DA16B0;
        return swift_task_switch();
      }
      for (i = 0; i != v20; ++i)
      {
        if ((v1 & 0xC000000000000001) != 0)
          v22 = (id)MEMORY[0x242655C98](i, v1);
        else
          v22 = *(id *)(v1 + 8 * i + 32);
        v23 = v22;
        v24 = objc_msgSend(v22, sel_zoneID, v57);
        v25 = objc_msgSend(v24, sel_zoneName);

        sub_23E945B18();
        LOBYTE(v24) = sub_23E945BC0();
        swift_bridgeObjectRelease();
        if ((v24 & 1) != 0)
        {
          sub_23E945FB0();
          sub_23E945FC8();
          sub_23E945FD4();
          sub_23E945FBC();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v26 = v62[0];
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  v26 = MEMORY[0x24BEE4AF8];
LABEL_25:
  *(_QWORD *)(v0 + 472) = v26;
  v27 = v26 < 0 || (v26 & 0x4000000000000000) != 0;
  if (v27)
  {
    swift_retain();
    v33 = sub_23E946004();
    swift_release();
    if (v33)
    {
LABEL_30:
      sub_23E931000(*(_QWORD *)(v0 + 344));
      swift_retain_n();
      v28 = sub_23E945A1C();
      v29 = sub_23E945DE8();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v30 = 134217984;
        if (v27)
        {
          swift_bridgeObjectRetain();
          v31 = sub_23E946004();
          swift_release();
        }
        else
        {
          v31 = *(_QWORD *)(v26 + 16);
        }
        swift_release();
        *(_QWORD *)(v0 + 224) = v31;
        sub_23E945F08();
        swift_release();
        _os_log_impl(&dword_23E8E7000, v28, v29, "Caching owner name for %ld zones", v30, 0xCu);
        MEMORY[0x24265643C](v30, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      (*(void (**)(_QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 304));
      if (qword_256D9E430 == -1)
        goto LABEL_37;
      goto LABEL_50;
    }
  }
  else if (*(_QWORD *)(v26 + 16))
  {
    goto LABEL_30;
  }
  swift_release();
LABEL_40:
  v34 = *(_QWORD *)(v0 + 464);
  v35 = *(_QWORD *)(v0 + 408);
  v36 = *(_QWORD *)(v0 + 416);
  swift_bridgeObjectRetain();
  v37 = sub_23E907A34(v34, v35, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37)
  {
    v38 = *(_QWORD *)(v0 + 336);
    swift_bridgeObjectRelease();
    v39 = objc_msgSend(v37, sel_zoneID);
    sub_23E931000(v38);
    v40 = v39;
    v41 = sub_23E945A1C();
    v42 = sub_23E945E18();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v43 = 138412290;
      *(_QWORD *)(v0 + 216) = v40;
      v45 = v40;
      sub_23E945F08();
      *v44 = v40;

      _os_log_impl(&dword_23E8E7000, v41, v42, "Found shared zone for query: %@", v43, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v44, -1, -1);
      MEMORY[0x24265643C](v43, -1, -1);
    }
    else
    {

    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 304));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(id))(v0 + 8))(v40);
  }
  else
  {
    sub_23E931000(*(_QWORD *)(v0 + 328));
    swift_bridgeObjectRetain();
    v46 = sub_23E945A1C();
    v47 = sub_23E945E00();
    v48 = os_log_type_enabled(v46, (os_log_type_t)v47);
    v49 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
    v50 = *(_QWORD *)(v0 + 416);
    if (v48)
    {
      v51 = *(_QWORD *)(v0 + 408);
      v59 = *(_QWORD *)(v0 + 304);
      v60 = *(_QWORD *)(v0 + 328);
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v62[0] = v53;
      *(_DWORD *)v52 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 208) = sub_23E90F65C(v51, v50, v62);
      sub_23E945F08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E8E7000, v46, (os_log_type_t)v47, "Unable to find shared zone with name %s", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v53, -1, -1);
      MEMORY[0x24265643C](v52, -1, -1);

      v49(v60, v59);
    }
    else
    {
      v54 = *(_QWORD *)(v0 + 328);
      v55 = *(_QWORD *)(v0 + 304);
      swift_bridgeObjectRelease_n();

      v49(v54, v55);
    }
    sub_23E90981C();
    swift_allocError();
    *v56 = 0xD000000000000024;
    v56[1] = 0x800000023E94C500;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E9090BC()
{
  uint64_t v0;

  sub_23E90FE5C(*(_QWORD *)(v0 + 472), 1);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E909108()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  void (*v15)(uint64_t, os_log_t);
  unint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;
  NSObject *v22;
  _QWORD *v23;
  _QWORD *v24;
  NSObject *log;
  os_log_t loga;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 416);
  swift_bridgeObjectRetain();
  v4 = sub_23E907A34(v1, v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 336);
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_zoneID);
    sub_23E931000(v5);
    v7 = v6;
    v8 = sub_23E945A1C();
    v9 = sub_23E945E18();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      *(_QWORD *)(v0 + 216) = v7;
      log = v8;
      v11 = v7;
      sub_23E945F08();
      *v24 = v7;

      v8 = log;
      _os_log_impl(&dword_23E8E7000, log, v9, "Found shared zone for query: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v24, -1, -1);
      MEMORY[0x24265643C](v10, -1, -1);
    }
    else
    {

    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 304));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(id))(v0 + 8))(v7);
  }
  else
  {
    sub_23E931000(*(_QWORD *)(v0 + 328));
    swift_bridgeObjectRetain();
    v12 = sub_23E945A1C();
    v13 = sub_23E945E00();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(void (**)(uint64_t, os_log_t))(v0 + 448);
    v16 = *(_QWORD *)(v0 + 416);
    if (v14)
    {
      v17 = *(_QWORD *)(v0 + 408);
      loga = *(os_log_t *)(v0 + 304);
      v27 = *(_QWORD *)(v0 + 328);
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v28 = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 208) = sub_23E90F65C(v17, v16, &v28);
      sub_23E945F08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E8E7000, v12, v13, "Unable to find shared zone with name %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v19, -1, -1);
      MEMORY[0x24265643C](v18, -1, -1);

      v15(v27, loga);
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 328);
      v22 = *(NSObject **)(v0 + 304);
      swift_bridgeObjectRelease_n();

      v15(v21, v22);
    }
    sub_23E90981C();
    swift_allocError();
    *v23 = 0xD000000000000024;
    v23[1] = 0x800000023E94C500;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E9095A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 320);
  swift_willThrow();
  sub_23E931000(v2);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E945A1C();
  v6 = sub_23E945E00();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 456);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138543362;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 200) = v11;
    sub_23E945F08();
    *v9 = v11;

    _os_log_impl(&dword_23E8E7000, v5, v6, "Failed to fetch shared database zones: %{public}@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v9, -1, -1);
    MEMORY[0x24265643C](v8, -1, -1);
  }
  else
  {
    v12 = *(void **)(v0 + 456);

  }
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
  v14 = *(_QWORD *)(v0 + 320);
  v15 = *(_QWORD *)(v0 + 304);

  v13(v14, v15);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  return sub_23E9097D8(a2 + 32, a1 + 32);
}

uint64_t sub_23E9097D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t block_destroy_helper_3(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
}

unint64_t sub_23E90981C()
{
  unint64_t result;

  result = qword_256D9F298;
  if (!qword_256D9F298)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for HomeKitEventsError, &type metadata for HomeKitEventsError);
    atomic_store(result, (unint64_t *)&qword_256D9F298);
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedZoneLookup()
{
  return &type metadata for SharedZoneLookup;
}

HMVEventWriter __swiftcall HMVEventWriter.init()()
{
  return (HMVEventWriter)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id HMVEventWriter.init()()
{
  objc_super v1;

  v1.super_class = (Class)HMVEventWriter;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t HMVEventWriter.writeEvents(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_256DA0FB0 + dword_256DA0FB0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23E8EAB34;
  return v5(a1);
}

uint64_t HMVEventWriter.writeFakeEvents(date:homeIdentifier:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256DA0FC0 + dword_256DA0FC0);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E8EAB34;
  return v9(a1, a2, a3);
}

uint64_t sub_23E9099D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_256DA0FB0 + dword_256DA0FB0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23E8EAAEC;
  return v5(a1);
}

uint64_t sub_23E909A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256DA0FC0 + dword_256DA0FC0);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E8EAB34;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of EventWriterProtocol.writeEvents(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E8EAAEC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of EventWriterProtocol.writeFakeEvents(date:homeIdentifier:count:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 16) + *(_QWORD *)(a5 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23E8EAB34;
  return v13(a1, a2, a3, a4, a5);
}

unint64_t type metadata accessor for HMVEventWriter()
{
  unint64_t result;

  result = qword_256D9F368;
  if (!qword_256D9F368)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D9F368);
  }
  return result;
}

uint64_t static OSVariant.isSeedBuild.getter()
{
  return 0;
}

uint64_t sub_23E909BFC()
{
  uint64_t result;

  result = sub_23E909C1C();
  byte_256D9F370 = result & 1;
  return result;
}

uint64_t sub_23E909C1C()
{
  void *v0;
  uint64_t v1;
  uint64_t result;
  unsigned __int8 v3;

  v0 = (void *)sub_23E945B0C();
  v1 = MGCopyAnswer();

  if (!v1)
    return 0;
  result = swift_dynamicCast();
  if ((_DWORD)result)
    return v3;
  return result;
}

uint64_t static OSVariant.isInternalBuild.getter()
{
  if (qword_256D9E420 != -1)
    swift_once();
  return byte_256D9F370;
}

ValueMetadata *type metadata accessor for OSVariant()
{
  return &type metadata for OSVariant;
}

uint64_t QueryResultAsyncSequence.makeAsyncIterator()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F378);
  return sub_23E945D58();
}

uint64_t sub_23E909D2C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F378);
  sub_23E945D58();
  return sub_23E90A484(v0);
}

uint64_t QueryResultAsyncSequence.Iterator.next()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F388);
  *v1 = v0;
  v1[1] = sub_23E8EAAEC;
  return sub_23E945D70();
}

unint64_t sub_23E909DD0()
{
  unint64_t result;
  uint64_t ResultAsync;

  result = qword_256D9F390[0];
  if (!qword_256D9F390[0])
  {
    ResultAsync = type metadata accessor for QueryResultAsyncSequence.Iterator(255);
    result = MEMORY[0x24265637C](&protocol conformance descriptor for QueryResultAsyncSequence.Iterator, ResultAsync);
    atomic_store(result, qword_256D9F390);
  }
  return result;
}

uint64_t type metadata accessor for QueryResultAsyncSequence.Iterator(uint64_t a1)
{
  return sub_23E90A0D8(a1, (uint64_t *)&unk_256D9F498);
}

uint64_t sub_23E909E2C()
{
  return MEMORY[0x24BEE3F20];
}

uint64_t sub_23E909E38()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F388);
  *v1 = v0;
  v1[1] = sub_23E8EAB34;
  return sub_23E945D70();
}

uint64_t sub_23E909EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v4[6] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F388);
  *v5 = v4;
  v5[1] = sub_23E909F18;
  return sub_23E945D70();
}

uint64_t sub_23E909F18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  if (*(_QWORD *)(v2 + 24))
  {
    swift_getObjectType();
    sub_23E945C98();
  }
  return swift_task_switch();
}

uint64_t sub_23E909FB0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 40);
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E70);
  swift_willThrowTypedImpl();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for QueryResultAsyncSequence(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F378);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for QueryResultAsyncSequence(uint64_t a1, uint64_t a2)
{
  return sub_23E90A16C(a1, a2, &qword_256D9F378);
}

uint64_t initializeWithCopy for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E90A1AC(a1, a2, a3, &qword_256D9F378);
}

uint64_t assignWithCopy for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E90A1FC(a1, a2, a3, &qword_256D9F378);
}

uint64_t initializeWithTake for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E90A24C(a1, a2, a3, &qword_256D9F378);
}

uint64_t assignWithTake for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E90A29C(a1, a2, a3, &qword_256D9F378);
}

uint64_t getEnumTagSinglePayload for QueryResultAsyncSequence()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E90A0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_256D9F378);
}

uint64_t storeEnumTagSinglePayload for QueryResultAsyncSequence()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E90A0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_256D9F378);
}

uint64_t type metadata accessor for QueryResultAsyncSequence(uint64_t a1)
{
  return sub_23E90A0D8(a1, (uint64_t *)&unk_256D9F400);
}

uint64_t sub_23E90A0D8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23E90A10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23E90A3A0(a1, a2, a3, qword_256D9F410, MEMORY[0x24BEE6D28]);
}

uint64_t initializeBufferWithCopyOfBuffer for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F388);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2)
{
  return sub_23E90A16C(a1, a2, &qword_256D9F388);
}

uint64_t sub_23E90A16C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t initializeWithCopy for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E90A1AC(a1, a2, a3, &qword_256D9F388);
}

uint64_t sub_23E90A1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t assignWithCopy for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E90A1FC(a1, a2, a3, &qword_256D9F388);
}

uint64_t sub_23E90A1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t initializeWithTake for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E90A24C(a1, a2, a3, &qword_256D9F388);
}

uint64_t sub_23E90A24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t assignWithTake for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E90A29C(a1, a2, a3, &qword_256D9F388);
}

uint64_t sub_23E90A29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryResultAsyncSequence.Iterator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E90A2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_256D9F388);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for QueryResultAsyncSequence.Iterator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E90A340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_256D9F388);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

void sub_23E90A38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23E90A3A0(a1, a2, a3, qword_256D9F4A8, MEMORY[0x24BEE6D08]);
}

void sub_23E90A3A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  unint64_t v5;

  sub_23E90A410(319, a4, a5);
  if (v5 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23E90A410(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for SomeEvent();
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256DA0E70);
    v8 = a3(a1, v6, v7, MEMORY[0x24BEE3F20]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23E90A484(uint64_t a1)
{
  uint64_t ResultAsyncSequence;

  ResultAsyncSequence = type metadata accessor for QueryResultAsyncSequence(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(ResultAsyncSequence - 8) + 8))(a1, ResultAsyncSequence);
  return a1;
}

HomeKitEvents::SecuritySystemEvent::State_optional __swiftcall SecuritySystemEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;

  if ((unint64_t)rawValue > 8)
    *v1 = 8;
  else
    *v1 = byte_23E947F14[rawValue];
  return (HomeKitEvents::SecuritySystemEvent::State_optional)rawValue;
}

void *static SecuritySystemEvent.State.allCases.getter()
{
  return &unk_250F18198;
}

uint64_t SecuritySystemEvent.State.rawValue.getter()
{
  char *v0;

  return qword_23E947F20[*v0];
}

BOOL sub_23E90A508(char *a1, char *a2)
{
  return qword_23E947F20[*a1] == qword_23E947F20[*a2];
}

uint64_t sub_23E90A52C()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t sub_23E90A578()
{
  return sub_23E9461C0();
}

uint64_t sub_23E90A5AC()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

HomeKitEvents::SecuritySystemEvent::State_optional sub_23E90A5F4(Swift::Int *a1)
{
  return SecuritySystemEvent.State.init(rawValue:)(*a1);
}

void sub_23E90A5FC(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_23E947F20[*v1];
}

void sub_23E90A614(_QWORD *a1@<X8>)
{
  *a1 = &unk_250F18198;
}

uint64_t SecuritySystemEvent.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SecuritySystemEvent();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SecuritySystemEvent()
{
  uint64_t result;

  result = qword_256D9F620;
  if (!qword_256D9F620)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecuritySystemEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  int *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t result;
  char v29;

  v29 = *a10;
  v18 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = type metadata accessor for EventBase(0);
  v20 = a9 + *(int *)(v19 + 20);
  v21 = sub_23E945A10();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
  v22(v20, a2, v21);
  *(_BYTE *)(a9 + *(int *)(v19 + 24)) = 2;
  v23 = (int *)type metadata accessor for AccessoryEventBase(0);
  v22(a9 + v23[5], a3, v21);
  v24 = (_QWORD *)(a9 + v23[6]);
  *v24 = a4;
  v24[1] = a5;
  v22(a9 + v23[7], a6, v21);
  v25 = (_QWORD *)(a9 + v23[8]);
  *v25 = a7;
  v25[1] = a8;
  sub_23E8EF720(a11, a9 + v23[9]);
  result = type metadata accessor for SecuritySystemEvent();
  *(_BYTE *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t SecuritySystemEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  char v9;
  _BYTE v11[40];

  v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E8EF768((uint64_t)a1, (uint64_t)v11);
  sub_23E937208((uint64_t)v11, (uint64_t)v7);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_23E8EE6A0(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v11[0];
  sub_23E8EF808((uint64_t)v7, a2);
  result = type metadata accessor for SecuritySystemEvent();
  *(_BYTE *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t SecuritySystemEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EA98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = sub_23E937628(a1);
  if (!v2)
  {
    v9[15] = *(_BYTE *)(v1 + *(int *)(type metadata accessor for SecuritySystemEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_23E8EA698();
    sub_23E9461FC();
    v9[14] = 1;
    sub_23E90A9E8();
    sub_23E9460C4();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

unint64_t sub_23E90A9E8()
{
  unint64_t result;

  result = qword_256D9F4D8;
  if (!qword_256D9F4D8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SecuritySystemEvent.State, &type metadata for SecuritySystemEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F4D8);
  }
  return result;
}

uint64_t sub_23E90AA2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SecuritySystemEvent.init(from:)(a1, a2);
}

uint64_t sub_23E90AA40(_QWORD *a1)
{
  return SecuritySystemEvent.encode(to:)(a1);
}

uint64_t SecuritySystemEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecuritySystemEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SecuritySystemEvent.category.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventBase(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SecuritySystemEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SecuritySystemEvent.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecuritySystemEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SecuritySystemEvent.accessoryName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecuritySystemEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);
  return sub_23E8EED0C(v3, a1);
}

uint64_t SecuritySystemEvent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for SecuritySystemEvent();
  return sub_23E9461C0();
}

BOOL static SecuritySystemEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2))
    return 0;
  v4 = type metadata accessor for SecuritySystemEvent();
  return qword_23E947F20[*(char *)(a1 + *(int *)(v4 + 20))] == qword_23E947F20[*(char *)(a2 + *(int *)(v4 + 20))];
}

uint64_t SecuritySystemEvent.hashValue.getter()
{
  sub_23E9461B4();
  SecuritySystemEvent.hash(into:)();
  return sub_23E9461E4();
}

uint64_t sub_23E90AF24()
{
  sub_23E9461B4();
  SecuritySystemEvent.hash(into:)();
  return sub_23E9461E4();
}

uint64_t sub_23E90AF64()
{
  sub_23E9461B4();
  SecuritySystemEvent.hash(into:)();
  return sub_23E9461E4();
}

BOOL sub_23E90AF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0() & 1) != 0
      && qword_23E947F20[*(char *)(a1 + *(int *)(a3 + 20))] == qword_23E947F20[*(char *)(a2 + *(int *)(a3 + 20))];
}

uint64_t sub_23E90B000()
{
  sub_23E90B6E4();
  return sub_23E945C08();
}

uint64_t sub_23E90B05C()
{
  sub_23E90B6E4();
  return sub_23E945BFC();
}

unint64_t sub_23E90B0AC()
{
  unint64_t result;

  result = qword_256D9F4E0;
  if (!qword_256D9F4E0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SecuritySystemEvent.State, &type metadata for SecuritySystemEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F4E0);
  }
  return result;
}

unint64_t sub_23E90B0F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D9F4E8;
  if (!qword_256D9F4E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D9F4F0);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D9F4E8);
  }
  return result;
}

unint64_t sub_23E90B144()
{
  unint64_t result;

  result = qword_256D9F4F8;
  if (!qword_256D9F4F8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SecuritySystemEvent.State, &type metadata for SecuritySystemEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F4F8);
  }
  return result;
}

uint64_t sub_23E90B188(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256DA0280, (uint64_t (*)(uint64_t))type metadata accessor for SecuritySystemEvent, (uint64_t)&protocol conformance descriptor for SecuritySystemEvent);
  a1[2] = sub_23E8E99C8(&qword_256D9F558, (uint64_t (*)(uint64_t))type metadata accessor for SecuritySystemEvent, (uint64_t)&protocol conformance descriptor for SecuritySystemEvent);
  result = sub_23E8E99C8(&qword_256D9F560, (uint64_t (*)(uint64_t))type metadata accessor for SecuritySystemEvent, (uint64_t)&protocol conformance descriptor for SecuritySystemEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E90B200()
{
  return sub_23E8E99C8(&qword_256D9F568, (uint64_t (*)(uint64_t))type metadata accessor for SecuritySystemEvent, (uint64_t)&protocol conformance descriptor for SecuritySystemEvent);
}

uint64_t sub_23E90B22C(uint64_t a1)
{
  uint64_t result;

  result = sub_23E8E99C8(&qword_256D9F550, (uint64_t (*)(uint64_t))type metadata accessor for SecuritySystemEvent, (uint64_t)&protocol conformance descriptor for SecuritySystemEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23E90B268(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256D9F570, (uint64_t (*)(uint64_t))type metadata accessor for SecuritySystemEvent, (uint64_t)&protocol conformance descriptor for SecuritySystemEvent);
  a1[2] = sub_23E8E99C8(&qword_256D9F578, (uint64_t (*)(uint64_t))type metadata accessor for SecuritySystemEvent, (uint64_t)&unk_23E947D74);
  result = sub_23E8E99C8(&qword_256D9F580, (uint64_t (*)(uint64_t))type metadata accessor for SecuritySystemEvent, (uint64_t)&protocol conformance descriptor for SecuritySystemEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E90B2E0()
{
  return sub_23E8E99C8(&qword_256D9F570, (uint64_t (*)(uint64_t))type metadata accessor for SecuritySystemEvent, (uint64_t)&protocol conformance descriptor for SecuritySystemEvent);
}

unint64_t sub_23E90B30C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23E8F0B14();
  a1[2] = sub_23E90A9E8();
  result = sub_23E90B340();
  a1[3] = result;
  return result;
}

unint64_t sub_23E90B340()
{
  unint64_t result;

  result = qword_256D9F5B8;
  if (!qword_256D9F5B8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SecuritySystemEvent.State, &type metadata for SecuritySystemEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F5B8);
  }
  return result;
}

unint64_t sub_23E90B384(uint64_t a1)
{
  unint64_t result;

  result = sub_23E90B3A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23E90B3A8()
{
  unint64_t result;

  result = qword_256D9F5C0;
  if (!qword_256D9F5C0)
  {
    result = MEMORY[0x24265637C](&unk_23E947E5C, &type metadata for SecuritySystemEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F5C0);
  }
  return result;
}

unint64_t sub_23E90B3EC(uint64_t a1)
{
  unint64_t result;

  result = sub_23E90B144();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SecuritySystemEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E90B41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 8)
    return v9 - 7;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SecuritySystemEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E90B4A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryEventBaseLegacy(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
  return result;
}

uint64_t sub_23E90B518()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EventRecord.DataType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SecuritySystemEvent.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E90B664 + 4 * byte_23E947BA5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E90B698 + 4 * asc_23E947BA0[v4]))();
}

uint64_t sub_23E90B698(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E90B6A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E90B6A8);
  return result;
}

uint64_t sub_23E90B6B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E90B6BCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E90B6C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E90B6C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecuritySystemEvent.State()
{
  return &type metadata for SecuritySystemEvent.State;
}

unint64_t sub_23E90B6E4()
{
  unint64_t result;

  result = qword_256D9F658;
  if (!qword_256D9F658)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SecuritySystemEvent.State, &type metadata for SecuritySystemEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F658);
  }
  return result;
}

_QWORD *QueryController.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t MetricsObserver;
  uint64_t ObjectType;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  if (qword_256D9E438 != -1)
    swift_once();
  v1 = *((_QWORD *)off_256D9FCC0 + 2);
  MetricsObserver = type metadata accessor for QueryMetricsObserver();
  ObjectType = swift_getObjectType();
  v4 = swift_unknownObjectRetain_n();
  v5 = sub_23E8F192C(v4, v1, MetricsObserver, (uint64_t)&type metadata for Configuration.DefaultFeatureDataSource, ObjectType, (uint64_t)&off_250F1A030);
  v6 = (void *)swift_unknownObjectRetain();
  sub_23E8F1A14(v6, (uint64_t)v5);
  v7 = swift_unknownObjectRelease();
  return sub_23E90BD40(v7, (uint64_t)v5, v1, 0, v0, (uint64_t)&type metadata for Configuration.DefaultFeatureDataSource, ObjectType, (uint64_t)&off_250F1A030);
}

uint64_t QueryController.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logEventDispatcher);
  if (v1)
    objc_msgSend(v1, sel_removeObserver_);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_unknownObjectRelease();
  return v0;
}

uint64_t QueryController.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logEventDispatcher);
  if (v1)
    objc_msgSend(v1, sel_removeObserver_);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23E90B8C8(uint64_t a1)
{
  uint64_t ResultAsyncSequence;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  ResultAsyncSequence = type metadata accessor for QueryResultAsyncSequence(0);
  v3 = MEMORY[0x24BDAC7A8](ResultAsyncSequence);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_23E90B9B8(a1, (uint64_t)&v9 - v6);
  sub_23E90BDD0((uint64_t)v7, (uint64_t)v5);
  type metadata accessor for SomeEvent();
  sub_23E90BE14();
  sub_23E9460DC();
  return sub_23E9011E4((uint64_t)v7, type metadata accessor for QueryResultAsyncSequence);
}

uint64_t sub_23E90B9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *Base;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  char v36;

  v34 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F730);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F378);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E945D1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EventQuery();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E945A10();
  v26 = *(_QWORD *)(v15 - 8);
  v27 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E945A04();
  Base = (int *)type metadata accessor for QueryBase();
  v19 = a1 + Base[5];
  v20 = a1 + Base[6];
  v21 = *(_QWORD *)(a1 + Base[7]);
  v36 = *(_BYTE *)(a1 + Base[8]);
  sub_23E8F12EC((uint64_t)v17, 1, v19, v20, v21, &v36);
  v22 = *(_QWORD *)(v2 + 64);
  sub_23E945D34();
  sub_23E90BC40();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_23E8ED824((uint64_t)v17, v22, *(void **)(v2 + 72), v14);
  v35 = v14;
  type metadata accessor for SomeEvent();
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v29, *MEMORY[0x24BEE6CA0], v31);
  v23 = v28;
  sub_23E945D7C();
  sub_23E9011E4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for EventQuery);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v27);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v34, v23, v33);
}

uint64_t sub_23E90BC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  void (*v5)(char *, uint64_t);
  char v7;
  char v8;
  uint64_t v9;

  v0 = sub_23E945D1C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E945CE0();
  v4 = sub_23E945CEC();
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  if ((v4 & 1) != 0)
    return 25;
  sub_23E945D04();
  v7 = sub_23E945CEC();
  v5(v3, v0);
  if ((v7 & 1) != 0)
    return -1;
  sub_23E945CF8();
  v8 = sub_23E945CEC();
  v5(v3, v0);
  if ((v8 & 1) != 0)
    return 17;
  else
    return 9;
}

_QWORD *sub_23E90BD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a6;
  v18 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_1, a1, a6);
  type metadata accessor for QueryController();
  v14 = (_QWORD *)swift_allocObject();
  sub_23E901264(&v16, (uint64_t)(v14 + 2));
  v14[7] = a2;
  v14[8] = a3;
  v14[9] = a4;
  return v14;
}

uint64_t sub_23E90BDD0(uint64_t a1, uint64_t a2)
{
  uint64_t ResultAsyncSequence;

  ResultAsyncSequence = type metadata accessor for QueryResultAsyncSequence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ResultAsyncSequence - 8) + 16))(a2, a1, ResultAsyncSequence);
  return a2;
}

unint64_t sub_23E90BE14()
{
  unint64_t result;
  uint64_t ResultAsyncSequence;

  result = qword_256D9F660;
  if (!qword_256D9F660)
  {
    ResultAsyncSequence = type metadata accessor for QueryResultAsyncSequence(255);
    result = MEMORY[0x24265637C](&protocol conformance descriptor for QueryResultAsyncSequence, ResultAsyncSequence);
    atomic_store(result, (unint64_t *)&qword_256D9F660);
  }
  return result;
}

uint64_t type metadata accessor for QueryController()
{
  return objc_opt_self();
}

uint64_t method lookup function for QueryController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of QueryController.runQuery(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

ValueMetadata *type metadata accessor for QueryFactory()
{
  return &type metadata for QueryFactory;
}

uint64_t static Date.formattedTimeInterval(_:)()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  objc_msgSend(v0, sel_setMaximumFractionDigits_, 2);
  v1 = (void *)sub_23E945D88();
  v2 = objc_msgSend(v0, sel_stringForObjectValue_, v1);

  if (v2)
  {
    v3 = sub_23E945B18();

    v0 = v2;
  }
  else
  {
    v3 = sub_23E945D94();
  }

  return v3;
}

double Date.elapsedTimeInterval.getter()
{
  double v0;

  sub_23E945980();
  return -v0;
}

uint64_t Date.formattedElapsedTimeInterval.getter()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  sub_23E945980();
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  objc_msgSend(v0, sel_setMaximumFractionDigits_, 2);
  v1 = (void *)sub_23E945D88();
  v2 = objc_msgSend(v0, sel_stringForObjectValue_, v1);

  if (v2)
  {
    v3 = sub_23E945B18();

    v0 = v2;
  }
  else
  {
    v3 = sub_23E945D94();
  }

  return v3;
}

uint64_t FakeEvent.State.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

void *static FakeEvent.State.allCases.getter()
{
  return &unk_250F181C0;
}

uint64_t FakeEvent.State.rawValue.getter()
{
  return 0;
}

uint64_t sub_23E90C06C()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t sub_23E90C0AC()
{
  return sub_23E9461C0();
}

uint64_t sub_23E90C0D0()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

_QWORD *sub_23E90C10C@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_23E90C120(_QWORD *a1@<X8>)
{
  *a1 = &unk_250F181E8;
}

uint64_t FakeEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FakeEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FakeEvent.category.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventBase(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t FakeEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FakeEvent.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FakeEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FakeEvent.accessoryName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FakeEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);
  return sub_23E8EED0C(v3, a1);
}

uint64_t FakeEvent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  return sub_23E9461C0();
}

uint64_t FakeEvent.hashValue.getter()
{
  sub_23E9461B4();
  FakeEvent.hash(into:)();
  return sub_23E9461E4();
}

uint64_t sub_23E90C594()
{
  sub_23E9461B4();
  FakeEvent.hash(into:)();
  return sub_23E9461E4();
}

uint64_t sub_23E90C5D4()
{
  sub_23E9461B4();
  FakeEvent.hash(into:)();
  return sub_23E9461E4();
}

unint64_t FakeEvent.init(date:homeIdentifier:category:roomIdentifier:roomName:accessoryIdentifier:accessoryName:userIdentifier:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  void (*v35)(char *, uint64_t, uint64_t);
  unint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, unsigned __int8 *, uint64_t);
  int *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v60 = a8;
  v61 = a5;
  v62 = a7;
  v64 = a2;
  v65 = a6;
  v58 = a9;
  v59 = a3;
  v13 = sub_23E945A10();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v63 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v51 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v51 - v20;
  v22 = sub_23E9459A4();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *v59;
  v54 = v25;
  v55 = v23;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v31 = v25;
  v32 = v65;
  v53 = a1;
  v56 = v22;
  v33 = v22;
  v34 = v29;
  v30(v31, a1, v33);
  v57 = v14;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v59 = (unsigned __int8 *)v21;
  v35(v21, v64, v13);
  if (v34 == 3)
  {
    result = sub_23E90CCBC(3uLL);
    if (result > 2)
    {
      __break(1u);
      goto LABEL_13;
    }
    LOBYTE(v34) = byte_250F18210[result + 32];
  }
  v35(v19, a4, v13);
  v52 = v19;
  if (!v32)
  {
    result = sub_23E90CCBC(0xBuLL);
    if ((uint64_t)(result + 5) >= 0)
    {
      v66 = sub_23E90CD44(0, result + 5, 0xD00000000000003ELL, 0x800000023E94C5C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F738);
      sub_23E90CFC0(&qword_256D9F740, &qword_256D9F738, MEMORY[0x24BEE12C8]);
      v61 = sub_23E945BD8();
      v32 = v37;
      goto LABEL_7;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_7:
  v38 = a10;
  v35(v63, v62, v13);
  v65 = v32;
  if (a10)
  {
    v39 = v53;
LABEL_11:
    v41 = v57;
    v42 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v42(v62, v13);
    v42(a4, v13);
    v42(v64, v13);
    v44 = v55;
    v43 = v56;
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v39, v56);
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v28, v54, v43);
    v45 = type metadata accessor for EventBase(0);
    v46 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v41 + 32);
    v46(&v28[*(int *)(v45 + 20)], v59, v13);
    v28[*(int *)(v45 + 24)] = v34;
    v47 = (int *)type metadata accessor for AccessoryEventBase(0);
    v46(&v28[v47[5]], (unsigned __int8 *)v52, v13);
    v48 = (uint64_t *)&v28[v47[6]];
    v49 = v65;
    *v48 = v61;
    v48[1] = v49;
    v46(&v28[v47[7]], (unsigned __int8 *)v63, v13);
    v50 = (uint64_t *)&v28[v47[8]];
    *v50 = v60;
    v50[1] = v38;
    sub_23E8EF720(a11, (uint64_t)&v28[v47[9]]);
    return sub_23E8EF808((uint64_t)v28, v58);
  }
  result = sub_23E90CCBC(0x10uLL);
  if ((uint64_t)(result + 5) >= 0)
  {
    v39 = v53;
    v66 = sub_23E90CD44(0, result + 5, 0xD00000000000003ELL, 0x800000023E94C5C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F738);
    sub_23E90CFC0(&qword_256D9F740, &qword_256D9F738, MEMORY[0x24BEE12C8]);
    v60 = sub_23E945BD8();
    v38 = v40;
    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t FakeEvent.isLegacySecurityEvent.getter()
{
  return 1;
}

void *FakeEvent.tags.getter()
{
  return &unk_250F18260;
}

uint64_t FakeEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v10[40];

  v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E8EF768((uint64_t)a1, (uint64_t)v10);
  sub_23E937208((uint64_t)v10, (uint64_t)v7);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_23E8EE6C4(a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_23E8EF808((uint64_t)v7, a2);
}

uint64_t FakeEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EA98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = sub_23E937628(a1);
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_23E8EA698();
    sub_23E9461FC();
    v8[15] = 1;
    sub_23E90CF08();
    sub_23E9460C4();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_23E90CBEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FakeEvent.init(from:)(a1, a2);
}

uint64_t sub_23E90CC00(_QWORD *a1)
{
  return FakeEvent.encode(to:)(a1);
}

uint64_t sub_23E90CC14()
{
  sub_23E90DC74();
  return sub_23E945C08();
}

uint64_t sub_23E90CC70()
{
  sub_23E90DC74();
  return sub_23E945BFC();
}

unint64_t sub_23E90CCBC(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x242656448](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x242656448](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23E90CD44(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = MEMORY[0x24BEE4AF8];
  if (!v4)
    return v5;
  v9 = result;
  v22 = MEMORY[0x24BEE4AF8];
  result = sub_23E91C2CC(0, v4 & ~(v4 >> 63), 0);
  if (a2 >= v9 && (v4 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    v5 = v22;
    v11 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0)
      v11 = a3 & 0xFFFFFFFFFFFFLL;
    v20 = v11;
    while (v10 != v4)
    {
      if (!v20)
        goto LABEL_20;
      result = sub_23E945B78();
      if (result < 0)
        goto LABEL_21;
      v12 = result;
      if (!result)
        goto LABEL_22;
      v21 = 0;
      MEMORY[0x242656448](&v21, 8);
      if (v12 > v21 * v12)
      {
        v13 = -(uint64_t)v12 % v12;
        while (v13 > v21 * v12)
        {
          v21 = 0;
          MEMORY[0x242656448](&v21, 8);
        }
      }
      sub_23E945B90();
      result = sub_23E945BCC();
      v14 = result;
      v16 = v15;
      v22 = v5;
      v18 = *(_QWORD *)(v5 + 16);
      v17 = *(_QWORD *)(v5 + 24);
      if (v18 >= v17 >> 1)
      {
        result = sub_23E91C2CC(v17 > 1, v18 + 1, 1);
        v5 = v22;
      }
      ++v10;
      *(_QWORD *)(v5 + 16) = v18 + 1;
      v19 = v5 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
      if (v10 == v4)
        return v5;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_24:
  __break(1u);
  return result;
}

unint64_t sub_23E90CF08()
{
  unint64_t result;

  result = qword_256D9F748;
  if (!qword_256D9F748)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for FakeEvent.State, &type metadata for FakeEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F748);
  }
  return result;
}

unint64_t sub_23E90CF50()
{
  unint64_t result;

  result = qword_256D9F750;
  if (!qword_256D9F750)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for FakeEvent.State, &type metadata for FakeEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F750);
  }
  return result;
}

uint64_t sub_23E90CF94()
{
  return sub_23E90CFC0(&qword_256D9F758, &qword_256D9F760, MEMORY[0x24BEE12E0]);
}

uint64_t sub_23E90CFC0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24265637C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E90D004()
{
  unint64_t result;

  result = qword_256D9F768;
  if (!qword_256D9F768)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for FakeEvent.State, &type metadata for FakeEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F768);
  }
  return result;
}

uint64_t sub_23E90D048(uint64_t a1)
{
  uint64_t result;

  result = sub_23E8E99C8(&qword_256DA00C0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FakeEvent()
{
  uint64_t result;

  result = qword_256D9F880;
  if (!qword_256D9F880)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E90D0C0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256D9F7C0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
  a1[2] = sub_23E8E99C8(&qword_256D9F7C8, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
  result = sub_23E8E99C8(&qword_256D9F7D0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E90D138()
{
  return sub_23E8E99C8(&qword_256D9F7D8, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
}

uint64_t sub_23E90D164()
{
  return sub_23E8E99C8(&qword_256D9F7E0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
}

unint64_t sub_23E90D190(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23E8F0AD0();
  a1[2] = sub_23E90CF08();
  result = sub_23E90D1C4();
  a1[3] = result;
  return result;
}

unint64_t sub_23E90D1C4()
{
  unint64_t result;

  result = qword_256D9F818;
  if (!qword_256D9F818)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for FakeEvent.State, &type metadata for FakeEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F818);
  }
  return result;
}

unint64_t sub_23E90D208(uint64_t a1)
{
  unint64_t result;

  result = sub_23E90D22C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23E90D22C()
{
  unint64_t result;

  result = qword_256D9F820;
  if (!qword_256D9F820)
  {
    result = MEMORY[0x24265637C](&unk_23E948218, &type metadata for FakeEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F820);
  }
  return result;
}

unint64_t sub_23E90D270(uint64_t a1)
{
  unint64_t result;

  result = sub_23E90D004();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FakeEvent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for AccessoryEventBase(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_23E9459A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for EventBase(0);
    v9 = *(int *)(v8 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23E945A10();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v10, v11, v12);
    *((_BYTE *)a1 + *(int *)(v8 + 24)) = *((_BYTE *)a2 + *(int *)(v8 + 24));
    v14((char *)a1 + v6[5], (char *)a2 + v6[5], v12);
    v15 = v6[6];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v6[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    swift_bridgeObjectRetain();
    v14(v20, v21, v12);
    v22 = v6[8];
    v23 = (_QWORD *)((char *)a1 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = v6[9];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v29(v28, 1, v12))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v14(v27, v28, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v27, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t initializeWithCopy for FakeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  uint64_t v28;

  v4 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for EventBase(0);
  v6 = *(int *)(v5 + 20);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23E945A10();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(v5 + 24)) = *(_BYTE *)(a2 + *(int *)(v5 + 24));
  v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
  v13 = v12[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v12[7];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  swift_bridgeObjectRetain();
  v11(v18, v19, v9);
  v20 = v12[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = v12[9];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v27(v26, 1, v9))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v11(v25, v26, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithCopy for FakeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t (*v22)(const void *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;

  v4 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for EventBase(0);
  v6 = *(int *)(v5 + 20);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23E945A10();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(v5 + 24)) = *(_BYTE *)(a2 + *(int *)(v5 + 24));
  v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
  v13 = v12[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11((void *)(a1 + v12[7]), (const void *)(a2 + v12[7]), v9);
  v16 = v12[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v12[9];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v22((const void *)(a1 + v19), 1, v9);
  v23 = v22(v21, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v23)
    {
      v11(v20, v21, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v20, v9);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v20, v21, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for FakeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;

  v4 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for EventBase(0);
  v6 = *(int *)(v5 + 20);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23E945A10();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(v5 + 24)) = *(_BYTE *)(a2 + *(int *)(v5 + 24));
  v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
  *(_OWORD *)(a1 + v12[6]) = *(_OWORD *)(a2 + v12[6]);
  v11((void *)(a1 + v12[7]), (const void *)(a2 + v12[7]), v9);
  *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
  v13 = v12[9];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v11(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for FakeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t (*v26)(const void *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;

  v4 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for EventBase(0);
  v6 = *(int *)(v5 + 20);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23E945A10();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(v5 + 24)) = *(_BYTE *)(a2 + *(int *)(v5 + 24));
  v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
  v13 = v12[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v11((void *)(a1 + v12[7]), (const void *)(a2 + v12[7]), v9);
  v18 = v12[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = v12[9];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  v26 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v26((const void *)(a1 + v23), 1, v9);
  v27 = v26(v25, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v27)
    {
      v11(v24, v25, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v24, v9);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v24, v25, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E90DADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessoryEventBaseLegacy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FakeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E90DB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessoryEventBaseLegacy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23E90DB64()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FakeEvent.State(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E90DC18 + 4 * asc_23E947FBC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E90DC38 + 4 * byte_23E947FC1[v4]))();
}

_BYTE *sub_23E90DC18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E90DC38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E90DC40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E90DC48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E90DC50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E90DC58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FakeEvent.State()
{
  return &type metadata for FakeEvent.State;
}

unint64_t sub_23E90DC74()
{
  unint64_t result;

  result = qword_256D9F8B8;
  if (!qword_256D9F8B8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for FakeEvent.State, &type metadata for FakeEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9F8B8);
  }
  return result;
}

HomeKitEvents::QueryScope_optional __swiftcall QueryScope.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 2)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == 1)
    v2 = 0;
  *v1 = v2;
  return (HomeKitEvents::QueryScope_optional)rawValue;
}

void *static QueryScope.allCases.getter()
{
  return &unk_250F18290;
}

uint64_t QueryScope.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2;
  else
    return 1;
}

BOOL sub_23E90DCF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_23E90DD10()
{
  unint64_t result;

  result = qword_256D9F8C0;
  if (!qword_256D9F8C0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for QueryScope, &type metadata for QueryScope);
    atomic_store(result, (unint64_t *)&qword_256D9F8C0);
  }
  return result;
}

uint64_t sub_23E90DD54()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t sub_23E90DDA0()
{
  return sub_23E9461C0();
}

uint64_t sub_23E90DDD4()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

_QWORD *sub_23E90DE1C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 2)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_23E90DE3C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1;
  if (*v1)
    v2 = 2;
  *a1 = v2;
}

unint64_t sub_23E90DE58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D9F8C8;
  if (!qword_256D9F8C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D9F8D0);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D9F8C8);
  }
  return result;
}

void sub_23E90DEA4(_QWORD *a1@<X8>)
{
  *a1 = &unk_250F182B8;
}

uint64_t storeEnumTagSinglePayload for QueryScope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E90DF00 + 4 * byte_23E948265[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E90DF34 + 4 * asc_23E948260[v4]))();
}

uint64_t sub_23E90DF34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E90DF3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E90DF44);
  return result;
}

uint64_t sub_23E90DF50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E90DF58);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E90DF5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E90DF64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QueryScope()
{
  return &type metadata for QueryScope;
}

uint64_t dispatch thunk of QueryProtocol.homeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of QueryProtocol.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of QueryProtocol.endDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of QueryProtocol.limit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of QueryProtocol.scope.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of QueryLegacyProtocol.limit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of QueryLegacyProtocol.scope.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_23E90DFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23E90DFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23E90E028(*(_QWORD *)(v0 + 24), v1);
  v2 = type metadata accessor for SomeEvent();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E90E028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SomeEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static Configuration.cloudKitRecordDateCoalescingWindowSeconds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[2];

  v1 = sub_23E945A34();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - v6;
  if (qword_256D9E420 != -1)
    swift_once();
  if (byte_256D9F370 != 1)
    return 600;
  v26 = v1;
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_standardUserDefaults);
  v25 = (unint64_t)"wxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
  v10 = (void *)sub_23E945B0C();
  v11 = objc_msgSend(v9, sel_objectForKey_, v10);

  if (!v11)
  {
    memset(v28, 0, sizeof(v28));
    sub_23E90E5B8((uint64_t)v28);
    return 600;
  }
  sub_23E945F20();
  swift_unknownObjectRelease();
  sub_23E90E5B8((uint64_t)v28);
  v12 = objc_msgSend(v8, sel_standardUserDefaults);
  v13 = (void *)sub_23E945B0C();
  v14 = (uint64_t)objc_msgSend(v12, sel_integerForKey_, v13);

  if (v14 < 0)
  {
    static LoggedObject.logger.getter(v0, (uint64_t)&protocol witness table for Configuration, (uint64_t)v5);
    v19 = sub_23E945A1C();
    v20 = sub_23E945E00();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v22;
      *(_DWORD *)v21 = 136315394;
      v27 = sub_23E90F65C(0xD000000000000025, v25 | 0x8000000000000000, (uint64_t *)v28);
      sub_23E945F08();
      *(_WORD *)(v21 + 12) = 2048;
      v27 = v14;
      sub_23E945F08();
      _os_log_impl(&dword_23E8E7000, v19, v20, "Ignoring invalid preference '%s' = %ld", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v22, -1, -1);
      MEMORY[0x24265643C](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v26);
    return 600;
  }
  static LoggedObject.logger.getter(v0, (uint64_t)&protocol witness table for Configuration, (uint64_t)v7);
  v15 = sub_23E945A1C();
  v16 = sub_23E945E18();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_QWORD *)&v28[0] = v18;
    *(_DWORD *)v17 = 136315394;
    v27 = sub_23E90F65C(0xD000000000000025, v25 | 0x8000000000000000, (uint64_t *)v28);
    sub_23E945F08();
    *(_WORD *)(v17 + 12) = 2048;
    v27 = v14;
    sub_23E945F08();
    _os_log_impl(&dword_23E8E7000, v15, v16, "Detected preference '%s' = %ld", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v18, -1, -1);
    MEMORY[0x24265643C](v17, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v26);
  return v14;
}

uint64_t static Configuration.zoneName(forHomeIdentifier:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_23E945A10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Configuration.zoneUUID(forHomeIdentifier:)(a1, (uint64_t)v5);
  v12 = sub_23E9459BC();
  v13 = v6;
  v10 = 0x2D73746E657665;
  v11 = 0xE700000000000000;
  v10 = sub_23E945BE4();
  v11 = v7;
  sub_23E945B9C();
  swift_bridgeObjectRelease();
  v8 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

uint64_t sub_23E90E5B8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F8E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t static Configuration.persistentStoreName.getter()
{
  return 0xD000000000000011;
}

id static Configuration.containerID.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  v0 = sub_23E90E754();
  v1 = objc_allocWithZone(MEMORY[0x24BDB9038]);
  v2 = (void *)sub_23E945B0C();
  v3 = objc_msgSend(v1, sel_initWithContainerIdentifier_environment_, v2, v0);

  return v3;
}

uint64_t sub_23E90E754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;

  v1 = sub_23E945A34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 1;
  if (qword_256D9E420 != -1)
    swift_once();
  if (byte_256D9F370 == 1)
  {
    v26 = v1;
    v5 = (void *)objc_opt_self();
    v6 = objc_msgSend(v5, sel_standardUserDefaults);
    v7 = (void *)sub_23E945B0C();
    v8 = objc_msgSend(v6, sel_objectForKey_, v7);

    if (v8)
    {
      sub_23E945F20();
      swift_unknownObjectRelease();
      sub_23E90E5B8((uint64_t)v28);
      v9 = objc_msgSend(v5, sel_standardUserDefaults);
      v10 = (void *)sub_23E945B0C();
      v11 = objc_msgSend(v9, sel_BOOLForKey_, v10);

      if (v11)
        v12 = 2;
      else
        v12 = 1;
      v29 = v12;
      static LoggedObject.logger.getter(v0, (uint64_t)&protocol witness table for Configuration, (uint64_t)v4);
      v13 = sub_23E945A1C();
      v14 = sub_23E945E18();
      v15 = v14;
      if (os_log_type_enabled(v13, v14))
      {
        v16 = swift_slowAlloc();
        HIDWORD(v24) = v15;
        v17 = v16;
        v25 = swift_slowAlloc();
        *(_QWORD *)&v28[0] = v25;
        *(_DWORD *)v17 = 136315650;
        v27 = sub_23E90F65C(0xD000000000000020, 0x800000023E94C710, (uint64_t *)v28);
        sub_23E945F08();
        *(_WORD *)(v17 + 12) = 1024;
        LODWORD(v27) = v11;
        sub_23E945F08();
        *(_WORD *)(v17 + 18) = 2080;
        v18 = (id)CKContainerEnvironmentString();
        v19 = sub_23E945B18();
        v21 = v20;

        v27 = sub_23E90F65C(v19, v21, (uint64_t *)v28);
        sub_23E945F08();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23E8E7000, v13, BYTE4(v24), "Detected preference '%s' = %{BOOL}d, using environment: %s", (uint8_t *)v17, 0x1Cu);
        v22 = v25;
        swift_arrayDestroy();
        MEMORY[0x24265643C](v22, -1, -1);
        MEMORY[0x24265643C](v17, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v26);
    }
    else
    {
      memset(v28, 0, sizeof(v28));
      sub_23E90E5B8((uint64_t)v28);
    }
  }
  swift_beginAccess();
  return v29;
}

void sub_23E90EAC4()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9048]), sel_init);
  objc_msgSend(v0, sel_setUseZoneWidePCS_, 1);
  type metadata accessor for Configuration();
  v1 = sub_23E90E754();
  v2 = objc_allocWithZone(MEMORY[0x24BDB9038]);
  v3 = (void *)sub_23E945B0C();
  v4 = objc_msgSend(v2, sel_initWithContainerIdentifier_environment_, v3, v1);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9030]), sel_initWithContainerID_options_, v4, v0);
  qword_256D9F8E0 = (uint64_t)v5;
}

id static Configuration.cloudKitContainer.getter()
{
  if (qword_256D9E428 != -1)
    swift_once();
  return (id)qword_256D9F8E0;
}

uint64_t static Configuration.zoneUUID(forHomeIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t __src;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;

  v26[1] = a2;
  v37 = *MEMORY[0x24BDAC8D0];
  v27 = sub_23E945B3C();
  v3 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E945A10();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  __src = sub_23E9459F8();
  v29 = v10;
  v30 = v11;
  v31 = v12;
  v32 = v13;
  v33 = v14;
  v34 = v15;
  v35 = v16;
  v36 = v17;
  sub_23E9459F8();
  v18 = sub_23E90FC9C(&__src, 16);
  v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F8F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E947240;
  sub_23E945B30();
  v22 = sub_23E945B24();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v27);
  if (v24 >> 60 == 15)
    __break(1u);
  *(_QWORD *)(inited + 32) = v22;
  *(_QWORD *)(inited + 40) = v24;
  sub_23E9282F0(v18, v20, inited);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t static Configuration.zoneName(forZoneUUID:)()
{
  uint64_t v1;

  sub_23E9459BC();
  v1 = sub_23E945BE4();
  sub_23E945B9C();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static Configuration.reset(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  v9[6] = v2;
  swift_retain();
  sub_23E901EB8((uint64_t)v7, (uint64_t)&unk_256D9F900, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_23E90F168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = sub_23E945A34();
  v6[6] = v7;
  v6[7] = *(_QWORD *)(v7 - 8);
  v6[8] = swift_task_alloc();
  v6[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E90F1DC()
{
  uint64_t *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t (*v10)(void);

  static LoggedObject.logger.getter(v0[5], (uint64_t)&protocol witness table for Configuration, v0[9]);
  v1 = sub_23E945A1C();
  v2 = sub_23E945E18();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23E8E7000, v1, v2, "Resetting configuration", v3, 2u);
    MEMORY[0x24265643C](v3, -1, -1);
  }
  v4 = v0[9];
  v5 = v0[6];
  v6 = v0[7];

  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[10] = (uint64_t)v7;
  v7(v4, v5);
  v10 = (uint64_t (*)(void))((char *)&dword_256DA0FD8 + dword_256DA0FD8);
  v8 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_23E90F2F4;
  return v10();
}

uint64_t sub_23E90F2F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E90F358()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 24))(0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E90F39C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void (*v13)(void *);
  id v14;

  v1 = *(void **)(v0 + 96);
  static LoggedObject.logger.getter(*(_QWORD *)(v0 + 40), (uint64_t)&protocol witness table for Configuration, *(_QWORD *)(v0 + 64));
  v2 = v1;
  v3 = v1;
  v4 = sub_23E945A1C();
  v5 = sub_23E945E00();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 96);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138543362;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23E945F08();
    *v8 = v10;

    _os_log_impl(&dword_23E8E7000, v4, v5, "Failed to reset configuration: %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v8, -1, -1);
    MEMORY[0x24265643C](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 96);

  }
  v12 = *(void **)(v0 + 96);
  v13 = *(void (**)(void *))(v0 + 24);
  (*(void (**)(_QWORD, _QWORD))(v0 + 80))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  v14 = v12;
  v13(v12);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E90F5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_23E945908();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

id Configuration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Configuration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23E90F65C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23E90F72C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23E9097D8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23E9097D8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_23E90F72C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23E945F14();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23E90F8E4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23E945FA4();
  if (!v8)
  {
    sub_23E945FEC();
    __break(1u);
LABEL_17:
    result = sub_23E946028();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23E90F8E4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23E90F978(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23E90FB50(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23E90FB50(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23E90F978(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23E90FAEC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23E945F68();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23E945FEC();
      __break(1u);
LABEL_10:
      v2 = sub_23E945BB4();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23E946028();
    __break(1u);
LABEL_14:
    result = sub_23E945FEC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23E90FAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9F930);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23E90FB50(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9F930);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23E946028();
  __break(1u);
  return result;
}

uint64_t sub_23E90FC9C(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_23E928DD0(__src, &__src[a2]);
  sub_23E94589C();
  swift_allocObject();
  sub_23E94586C();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_23E945920();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_23E90FD48()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E90FD74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E8EAAEC;
  return sub_23E90F168(a1, v4, v5, v6, v7, v8);
}

uint64_t type metadata accessor for Configuration()
{
  return objc_opt_self();
}

_UNKNOWN **sub_23E90FE14()
{
  return &off_250F1A030;
}

ValueMetadata *type metadata accessor for Configuration.DefaultFeatureDataSource()
{
  return &type metadata for Configuration.DefaultFeatureDataSource;
}

uint64_t sub_23E90FE30()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23E90FE54(uint64_t a1)
{
  uint64_t v1;

  sub_23E90F5DC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23E90FE5C(unint64_t a1, char a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  char v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;

  if (*(_BYTE *)(v2 + 120) == 1)
  {
    *(_BYTE *)(v2 + 120) = 0;
    swift_getObjectType();
    sub_23E945E9C();
  }
  v5 = v2 + 128;
  swift_beginAccess();
  *(_QWORD *)(v2 + 128) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v37 = a2;
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    v6 = sub_23E946004();
    if (v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_5:
      v39 = a1;
      v40 = a1 & 0xC000000000000001;
      v7 = 4;
      v38 = v6;
      do
      {
        v9 = v7 - 4;
        if (v40)
        {
          v10 = (id)MEMORY[0x242655C98](v7 - 4, a1);
          v11 = v7 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_24;
        }
        else
        {
          v10 = *(id *)(a1 + 8 * v7);
          v11 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        v41 = v11;
        v42 = v10;
        v43 = v7;
        v12 = objc_msgSend(v10, sel_zoneID);
        v13 = objc_msgSend(v12, sel_zoneName);
        v14 = sub_23E945B18();
        v16 = v15;

        v17 = objc_msgSend(v12, sel_ownerName);
        v18 = sub_23E945B18();
        v20 = v19;

        swift_beginAccess();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v22 = *(_QWORD **)v5;
        v44 = *(_QWORD **)v5;
        v23 = (_QWORD *)v5;
        *(_QWORD *)v5 = 0x8000000000000000;
        v5 = sub_23E935278(v14, v16);
        v25 = v22[2];
        v26 = (v24 & 1) == 0;
        v27 = v25 + v26;
        if (__OFADD__(v25, v26))
          goto LABEL_25;
        a1 = v24;
        if (v22[3] >= v27)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v30 = v44;
            if ((v24 & 1) != 0)
              goto LABEL_6;
          }
          else
          {
            sub_23E936478();
            v30 = v44;
            if ((a1 & 1) != 0)
              goto LABEL_6;
          }
        }
        else
        {
          sub_23E935878(v27, isUniquelyReferenced_nonNull_native);
          v28 = sub_23E935278(v14, v16);
          if ((a1 & 1) != (v29 & 1))
          {
            result = sub_23E946160();
            __break(1u);
            return result;
          }
          v5 = v28;
          v30 = v44;
          if ((a1 & 1) != 0)
          {
LABEL_6:
            v8 = (uint64_t *)(v30[7] + 16 * v5);
            swift_bridgeObjectRelease();
            *v8 = v18;
            v8[1] = v20;
            goto LABEL_7;
          }
        }
        v30[(v5 >> 6) + 8] |= 1 << v5;
        v31 = (uint64_t *)(v30[6] + 16 * v5);
        *v31 = v14;
        v31[1] = v16;
        v32 = (uint64_t *)(v30[7] + 16 * v5);
        *v32 = v18;
        v32[1] = v20;
        v33 = v30[2];
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_26;
        v30[2] = v35;
        swift_bridgeObjectRetain();
LABEL_7:
        v5 = (unint64_t)v23;
        *v23 = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        v7 = v43 + 1;
        a1 = v39;
      }
      while (v41 != v38);
    }
  }
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(*(_QWORD *)v5 + 16))
  {
    if ((v37 & 1) != 0)
      return sub_23E91045C();
  }
  return result;
}

uint64_t sub_23E9101AC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for SharedZoneOwnerNameCache()
{
  return objc_opt_self();
}

uint64_t sub_23E9101F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v14[2];

  v1 = v0;
  v2 = sub_23E945A4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E945E78();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v14[0] = sub_23E901318(0, &qword_256D9FA58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA60);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23E947650;
  sub_23E945E60();
  sub_23E945E6C();
  v14[1] = v10;
  sub_23E8E99C8(&qword_256D9FA68, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5868], MEMORY[0x24BEE5888]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA70);
  sub_23E9108F4(&qword_256D9FA78, &qword_256D9FA70);
  sub_23E945F38();
  sub_23E901318(0, (unint64_t *)&unk_256D9FA80);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5498], v2);
  v11 = (void *)sub_23E945E54();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = sub_23E945E84();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)(v1 + 112) = v12;
  *(_BYTE *)(v1 + 120) = 0;
  *(_QWORD *)(v1 + 128) = MEMORY[0x24BEE4B00];
  return v1;
}

uint64_t sub_23E910418()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23E910424()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for SharedZoneOwnerNameCache();
  v0 = swift_allocObject();
  result = sub_23E9101F8();
  qword_256DA16B0 = v0;
  return result;
}

uint64_t sub_23E91045C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v1 = sub_23E945A40();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E945A64();
  v6 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + 120) & 1) == 0)
  {
    *(_BYTE *)(v0 + 120) = 1;
    swift_getObjectType();
    v10 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_23E910848;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23E922BE4;
    aBlock[3] = &block_descriptor_4;
    v11 = _Block_copy(aBlock);
    swift_retain();
    sub_23E945A58();
    sub_23E910778();
    sub_23E945E90();
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    swift_release();
    swift_release();
    return sub_23E945EA8();
  }
  return result;
}

uint64_t sub_23E91060C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v5 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    sub_23E901EB8((uint64_t)v2, (uint64_t)&unk_256D9FA50, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_23E9106E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch();
}

uint64_t sub_23E910700()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  if (*(_BYTE *)(v1 + 120) == 1)
  {
    *(_BYTE *)(v1 + 120) = 0;
    swift_getObjectType();
    sub_23E945E9C();
    v1 = *(_QWORD *)(v0 + 40);
  }
  swift_beginAccess();
  *(_QWORD *)(v1 + 128) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E910778()
{
  sub_23E945A40();
  sub_23E8E99C8(&qword_256D9FA28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA30);
  sub_23E9108F4(&qword_256D9FA38, &qword_256D9FA30);
  return sub_23E945F38();
}

uint64_t sub_23E910824()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E910848()
{
  return sub_23E91060C();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_23E910868()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E910894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23E8EAAEC;
  v3[5] = v2;
  return swift_task_switch();
}

uint64_t sub_23E9108F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t with<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = a2();
  if (!v4)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a4, a1, a3);
  return result;
}

void sub_23E91098C()
{
  sub_23E94613C();
  __break(1u);
}

void sub_23E91099C()
{
  sub_23E9461B4();
  sub_23E94613C();
  __break(1u);
}

void sub_23E9109BC()
{
  sub_23E9461B4();
  sub_23E94613C();
  __break(1u);
}

const char *sub_23E9109D8()
{
  return "Home";
}

const char *sub_23E9109EC()
{
  return "";
}

uint64_t storeEnumTagSinglePayload for FeatureFlags(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E910A40 + 4 * byte_23E9484C4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E910A60 + 4 * byte_23E9484C9[v4]))();
}

_BYTE *sub_23E910A40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E910A60(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E910A68(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E910A70(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E910A78(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E910A80(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags()
{
  return &type metadata for FeatureFlags;
}

unint64_t sub_23E910AA0()
{
  unint64_t result;

  result = qword_256D9FA90;
  if (!qword_256D9FA90)
  {
    result = MEMORY[0x24265637C](&unk_23E948550, &type metadata for FeatureFlags);
    atomic_store(result, (unint64_t *)&qword_256D9FA90);
  }
  return result;
}

uint64_t dispatch thunk of AccessoryEventProtocol.accessoryIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AccessoryEventProtocol.accessoryName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AccessoryEventProtocol.roomIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AccessoryEventProtocol.roomName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of AccessoryEventProtocol.userIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of AccessoryEventProtocol.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

void sub_23E910B14(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  _QWORD v6[6];

  v4 = (void *)sub_23E945C14();
  v6[4] = sub_23E910D7C;
  v6[5] = a2;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_23E924584;
  v6[3] = &block_descriptor_5;
  v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_createEventsWithEventsData_reply_, v4, v5);
  _Block_release(v5);

}

void sub_23E910BDC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E808, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E910D7C(void *a1)
{
  uint64_t v1;

  sub_23E910BDC(a1, v1);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_23E910DA0()
{
  uint64_t v0;

  return swift_deallocObject();
}

HomeKitEvents::SmokeDetectorEvent::State_optional __swiftcall SmokeDetectorEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (HomeKitEvents::SmokeDetectorEvent::State_optional)rawValue;
}

void *static SmokeDetectorEvent.State.allCases.getter()
{
  return &unk_250F182E0;
}

uint64_t SmokeDetectorEvent.State.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HomeKitEvents::SmokeDetectorEvent::State_optional sub_23E910DF0(Swift::Int *a1)
{
  return SmokeDetectorEvent.State.init(rawValue:)(*a1);
}

void sub_23E910DF8(_QWORD *a1@<X8>)
{
  *a1 = &unk_250F18308;
}

uint64_t SmokeDetectorEvent.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SmokeDetectorEvent();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SmokeDetectorEvent()
{
  uint64_t result;

  result = qword_256D9FBE8;
  if (!qword_256D9FBE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SmokeDetectorEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  int *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t result;
  char v29;

  v29 = *a10;
  v18 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = type metadata accessor for EventBase(0);
  v20 = a9 + *(int *)(v19 + 20);
  v21 = sub_23E945A10();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
  v22(v20, a2, v21);
  *(_BYTE *)(a9 + *(int *)(v19 + 24)) = 2;
  v23 = (int *)type metadata accessor for AccessoryEventBase(0);
  v22(a9 + v23[5], a3, v21);
  v24 = (_QWORD *)(a9 + v23[6]);
  *v24 = a4;
  v24[1] = a5;
  v22(a9 + v23[7], a6, v21);
  v25 = (_QWORD *)(a9 + v23[8]);
  *v25 = a7;
  v25[1] = a8;
  sub_23E8EF720(a11, a9 + v23[9]);
  result = type metadata accessor for SmokeDetectorEvent();
  *(_BYTE *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t SmokeDetectorEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  char v9;
  _BYTE v11[40];

  v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E8EF768((uint64_t)a1, (uint64_t)v11);
  sub_23E937208((uint64_t)v11, (uint64_t)v7);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_23E8EE838(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v11[0];
  sub_23E8EF808((uint64_t)v7, a2);
  result = type metadata accessor for SmokeDetectorEvent();
  *(_BYTE *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t SmokeDetectorEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EA98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = sub_23E937628(a1);
  if (!v2)
  {
    v9[15] = *(_BYTE *)(v1 + *(int *)(type metadata accessor for SmokeDetectorEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_23E8EA698();
    sub_23E9461FC();
    v9[14] = 1;
    sub_23E9111CC();
    sub_23E9460C4();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

unint64_t sub_23E9111CC()
{
  unint64_t result;

  result = qword_256D9FA98;
  if (!qword_256D9FA98)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SmokeDetectorEvent.State, &type metadata for SmokeDetectorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9FA98);
  }
  return result;
}

uint64_t sub_23E911210@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SmokeDetectorEvent.init(from:)(a1, a2);
}

uint64_t sub_23E911224(_QWORD *a1)
{
  return SmokeDetectorEvent.encode(to:)(a1);
}

uint64_t SmokeDetectorEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SmokeDetectorEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SmokeDetectorEvent.category.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventBase(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SmokeDetectorEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SmokeDetectorEvent.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SmokeDetectorEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SmokeDetectorEvent.accessoryName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SmokeDetectorEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);
  return sub_23E8EED0C(v3, a1);
}

uint64_t SmokeDetectorEvent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for SmokeDetectorEvent();
  return sub_23E9461C0();
}

BOOL static SmokeDetectorEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2))
    return 0;
  v4 = type metadata accessor for SmokeDetectorEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t SmokeDetectorEvent.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9461B4();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for SmokeDetectorEvent();
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t sub_23E911900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  return sub_23E9461C0();
}

uint64_t sub_23E911B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9461B4();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t sub_23E911D9C()
{
  sub_23E912480();
  return sub_23E945C08();
}

uint64_t sub_23E911DF8()
{
  sub_23E912480();
  return sub_23E945BFC();
}

unint64_t sub_23E911E48()
{
  unint64_t result;

  result = qword_256D9FAA0;
  if (!qword_256D9FAA0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SmokeDetectorEvent.State, &type metadata for SmokeDetectorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9FAA0);
  }
  return result;
}

unint64_t sub_23E911E90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D9FAA8;
  if (!qword_256D9FAA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D9FAB0);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D9FAA8);
  }
  return result;
}

unint64_t sub_23E911EE0()
{
  unint64_t result;

  result = qword_256D9FAB8;
  if (!qword_256D9FAB8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SmokeDetectorEvent.State, &type metadata for SmokeDetectorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9FAB8);
  }
  return result;
}

uint64_t sub_23E911F24(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256D9FB18, (uint64_t (*)(uint64_t))type metadata accessor for SmokeDetectorEvent, (uint64_t)&protocol conformance descriptor for SmokeDetectorEvent);
  a1[2] = sub_23E8E99C8(&qword_256D9FB20, (uint64_t (*)(uint64_t))type metadata accessor for SmokeDetectorEvent, (uint64_t)&protocol conformance descriptor for SmokeDetectorEvent);
  result = sub_23E8E99C8(&qword_256D9FB28, (uint64_t (*)(uint64_t))type metadata accessor for SmokeDetectorEvent, (uint64_t)&protocol conformance descriptor for SmokeDetectorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E911F9C()
{
  return sub_23E8E99C8(&qword_256D9FB30, (uint64_t (*)(uint64_t))type metadata accessor for SmokeDetectorEvent, (uint64_t)&protocol conformance descriptor for SmokeDetectorEvent);
}

uint64_t sub_23E911FC8(uint64_t a1)
{
  uint64_t result;

  result = sub_23E8E99C8(&qword_256D9FB10, (uint64_t (*)(uint64_t))type metadata accessor for SmokeDetectorEvent, (uint64_t)&protocol conformance descriptor for SmokeDetectorEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23E912004(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256D9FB38, (uint64_t (*)(uint64_t))type metadata accessor for SmokeDetectorEvent, (uint64_t)&protocol conformance descriptor for SmokeDetectorEvent);
  a1[2] = sub_23E8E99C8(&qword_256D9FB40, (uint64_t (*)(uint64_t))type metadata accessor for SmokeDetectorEvent, (uint64_t)&unk_23E948794);
  result = sub_23E8E99C8(&qword_256D9FB48, (uint64_t (*)(uint64_t))type metadata accessor for SmokeDetectorEvent, (uint64_t)&protocol conformance descriptor for SmokeDetectorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E91207C()
{
  return sub_23E8E99C8(&qword_256D9FB38, (uint64_t (*)(uint64_t))type metadata accessor for SmokeDetectorEvent, (uint64_t)&protocol conformance descriptor for SmokeDetectorEvent);
}

unint64_t sub_23E9120A8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23E8F0A8C();
  a1[2] = sub_23E9111CC();
  result = sub_23E9120DC();
  a1[3] = result;
  return result;
}

unint64_t sub_23E9120DC()
{
  unint64_t result;

  result = qword_256D9FB80;
  if (!qword_256D9FB80)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SmokeDetectorEvent.State, &type metadata for SmokeDetectorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9FB80);
  }
  return result;
}

unint64_t sub_23E912120(uint64_t a1)
{
  unint64_t result;

  result = sub_23E912144();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23E912144()
{
  unint64_t result;

  result = qword_256D9FB88;
  if (!qword_256D9FB88)
  {
    result = MEMORY[0x24265637C](&unk_23E94887C, &type metadata for SmokeDetectorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9FB88);
  }
  return result;
}

unint64_t sub_23E912188(uint64_t a1)
{
  unint64_t result;

  result = sub_23E911EE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SmokeDetectorEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E9121B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SmokeDetectorEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E91223C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryEventBaseLegacy(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

uint64_t sub_23E9122B4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EventCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SmokeDetectorEvent.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E912400 + 4 * byte_23E9485C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E912434 + 4 * asc_23E9485C0[v4]))();
}

uint64_t sub_23E912434(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E91243C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E912444);
  return result;
}

uint64_t sub_23E912450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E912458);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E91245C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E912464(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SmokeDetectorEvent.State()
{
  return &type metadata for SmokeDetectorEvent.State;
}

unint64_t sub_23E912480()
{
  unint64_t result;

  result = qword_256D9FC20;
  if (!qword_256D9FC20)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for SmokeDetectorEvent.State, &type metadata for SmokeDetectorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9FC20);
  }
  return result;
}

uint64_t static HMVCommands.clearEvents(homes:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E9124E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(void))((char *)&dword_256D9E818 + dword_256D9E818);
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_23E8EABD0;
  return v5();
}

void sub_23E912560(void *a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v6;
  _QWORD v7[6];

  v3 = a3;
  if (a3)
  {
    sub_23E945A10();
    v3 = (void *)sub_23E945C14();
  }
  v7[4] = sub_23E9127DC;
  v7[5] = a2;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_23E924584;
  v7[3] = &block_descriptor_6;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilClearEventsWithHomes_reply_, v3, v6);
  _Block_release(v6);

}

void sub_23E912634(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23E912560(a1, a2, *(void **)(v2 + 16));
}

void sub_23E91263C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9ED48, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E9127DC(void *a1)
{
  uint64_t v1;

  sub_23E91263C(a1, v1);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_23E912800()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E912828()
{
  uint64_t result;
  unint64_t v1;

  sub_23E945CC8();
  result = sub_23E945EFC();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23E9128B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  sub_23E945CC8();
  v2 = sub_23E945EFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_23E912914()
{
  sub_23E9128B4();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for SafeCheckedContinuation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SafeCheckedContinuation);
}

uint64_t sub_23E912938()
{
  return sub_23E910418();
}

uint64_t static HMVCommands.exit(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E912968()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(void))((char *)&dword_256D9E818 + dword_256D9E818);
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_23E8EABD0;
  return v5();
}

void sub_23E9129E8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  _QWORD v6[6];

  v6[4] = sub_23E912C44;
  v6[5] = a2;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_23E924584;
  v6[3] = &block_descriptor_7;
  v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_exitWithExitStatus_reply_, a3, v5);
  _Block_release(v5);
}

void sub_23E912A9C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23E9129E8(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_23E912AA4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9ED48, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E912C44(void *a1)
{
  uint64_t v1;

  sub_23E912AA4(a1, v1);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_23E912C68()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23E912C90()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4F1A0]), sel_init);
  v1 = objc_allocWithZone(MEMORY[0x24BE4F170]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FD70);
  v2 = (void *)sub_23E945C14();
  v3 = objc_msgSend(v1, sel_initWithDelegate_filters_, 0, v2);

  type metadata accessor for MetricsManager();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v0;
  *(_QWORD *)(v4 + 24) = v3;
  result = objc_msgSend(v0, sel_addObserver_forProtocol_, v3, &unk_256DADC90);
  off_256D9FCC0 = (_UNKNOWN *)v4;
  return result;
}

uint64_t static MetricsManager.sharedInstance.getter()
{
  if (qword_256D9E438 != -1)
    swift_once();
  return swift_retain();
}

void MetricsManager.submitLogEvent(_:error:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  swift_unknownObjectRetain();
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = v4;
    v6 = *(void **)(v2 + 16);
    if (a2)
      v7 = sub_23E945908();
    else
      v7 = 0;
    v8 = (id)v7;
    objc_msgSend(v6, sel_submitLogEvent_error_, v5);
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();
    sub_23E945F5C();
    sub_23E945BA8();
    swift_getObjectType();
    sub_23E946118();
    sub_23E945FF8();
    __break(1u);
  }
}

uint64_t MetricsManager.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return v0;
}

uint64_t MetricsManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetricsManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for MetricsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t static HMVCommands.registerForTaskWithIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23E912F58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v2 = v0[2];
  v1 = v0[3];
  v3 = swift_task_alloc();
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256D9E818 + dword_256D9E818);
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_23E912FDC;
  return v6((uint64_t)v6, (uint64_t)sub_23E91310C, v3);
}

uint64_t sub_23E912FDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

void sub_23E913048(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  _QWORD v6[6];

  v4 = (void *)sub_23E945B0C();
  v6[4] = sub_23E9132B4;
  v6[5] = a2;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_23E924584;
  v6[3] = &block_descriptor_8;
  v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilRegisterForTaskWithIdentifierWithIdentifier_reply_, v4, v5);
  _Block_release(v5);

}

void sub_23E91310C(void *a1, uint64_t a2)
{
  sub_23E913048(a1, a2);
}

void sub_23E913114(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9ED48, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E9132B4(void *a1)
{
  uint64_t v1;

  sub_23E913114(a1, v1);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_23E9132D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void *static EventCategory.allCases.getter()
{
  return &unk_250F18238;
}

uint64_t static EventCategory.legacySecurityEventTag.getter()
{
  return 0;
}

HomeKitEvents::EventCategory_optional __swiftcall EventCategory.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unsigned int v2;

  v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return (HomeKitEvents::EventCategory_optional)rawValue;
}

uint64_t EventCategory.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

HomeKitEvents::EventCategory_optional sub_23E913348(Swift::Int *a1)
{
  return EventCategory.init(rawValue:)(*a1);
}

void sub_23E913350(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

uint64_t sub_23E913360()
{
  sub_23E913674();
  return sub_23E945C08();
}

uint64_t sub_23E9133BC()
{
  sub_23E913674();
  return sub_23E945BFC();
}

uint64_t sub_23E913408()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t sub_23E91344C()
{
  return sub_23E9461C0();
}

uint64_t sub_23E913478()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

void *static EventCategory.legacySecurityEventCategories.getter()
{
  return &unk_250F18330;
}

BOOL EventCategory.isLegacySecurity.getter()
{
  _BYTE *v0;
  int v1;
  BOOL v2;

  v1 = *v0;
  if (*v0)
    v2 = v1 == 1;
  else
    v2 = 1;
  return v2 || v1 == 2;
}

unint64_t sub_23E913504()
{
  unint64_t result;

  result = qword_256D9FDE8;
  if (!qword_256D9FDE8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for EventCategory, &type metadata for EventCategory);
    atomic_store(result, (unint64_t *)&qword_256D9FDE8);
  }
  return result;
}

unint64_t sub_23E91354C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D9FDF0;
  if (!qword_256D9FDF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D9FDF8);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D9FDF0);
  }
  return result;
}

void sub_23E913598(_QWORD *a1@<X8>)
{
  *a1 = &unk_250F18380;
}

uint64_t storeEnumTagSinglePayload for EventCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E9135F4 + 4 * byte_23E9489F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E913628 + 4 * byte_23E9489F0[v4]))();
}

uint64_t sub_23E913628(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E913630(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E913638);
  return result;
}

uint64_t sub_23E913644(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E91364CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E913650(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E913658(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventCategory()
{
  return &type metadata for EventCategory;
}

unint64_t sub_23E913674()
{
  unint64_t result;

  result = qword_256D9FE00;
  if (!qword_256D9FE00)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for EventCategory, &type metadata for EventCategory);
    atomic_store(result, (unint64_t *)&qword_256D9FE00);
  }
  return result;
}

BOOL static XPCConnectionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t XPCConnectionError.hash(into:)()
{
  return sub_23E9461C0();
}

uint64_t XPCConnectionError.hashValue.getter()
{
  sub_23E9461B4();
  sub_23E9461C0();
  return sub_23E9461E4();
}

unint64_t sub_23E913740()
{
  unint64_t result;

  result = qword_256D9FE08;
  if (!qword_256D9FE08)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for XPCConnectionError, &type metadata for XPCConnectionError);
    atomic_store(result, (unint64_t *)&qword_256D9FE08);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for XPCConnectionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E9137D0 + 4 * byte_23E948B55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E913804 + 4 * byte_23E948B50[v4]))();
}

uint64_t sub_23E913804(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E91380C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E913814);
  return result;
}

uint64_t sub_23E913820(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E913828);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E91382C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E913834(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCConnectionError()
{
  return &type metadata for XPCConnectionError;
}

uint64_t AccessoryEventProtocol.accessoryNameLegacy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t SomeEvent.anyEvent.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E90E028(v2, (uint64_t)v9);
  sub_23E901220((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  sub_23E93DF2C();
  v10 = v20;
  v11 = v21;
  v12 = __swift_project_boxed_opaque_existential_1(v19, v20);
  v23 = v10;
  v24 = *(_QWORD *)(v11 + 16);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_1, v12, v10);
  sub_23E9139F0((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  v14 = v23;
  v15 = v24;
  v16 = __swift_project_boxed_opaque_existential_1(v22, v23);
  a1[3] = v14;
  a1[4] = *(_QWORD *)(v15 + 8);
  v17 = __swift_allocate_boxed_opaque_existential_1(a1);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v17, v16, v14);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t type metadata accessor for SomeEvent()
{
  uint64_t result;

  result = qword_256D9FEE0;
  if (!qword_256D9FEE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E9139F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SomeAccessoryEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SomeEvent.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E90E028(v1, (uint64_t)v5);
  sub_23E9461C0();
  SomeAccessoryEvent.hash(into:)(a1);
  return sub_23E9139F0((uint64_t)v5);
}

uint64_t static SomeEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  v4 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FE10);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23E90E028(a1, (uint64_t)v10);
  sub_23E90E028(a2, v11);
  sub_23E901220((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  _s13HomeKitEvents18SomeAccessoryEventO2eeoiySbAC_ACtFZ_0((uint64_t)v6, v11);
  LOBYTE(a2) = v12;
  sub_23E9139F0(v11);
  sub_23E9139F0((uint64_t)v6);
  return a2 & 1;
}

uint64_t sub_23E913BB8()
{
  return 12383;
}

uint64_t sub_23E913BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23E946130();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_23E913C40(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23E913C4C()
{
  sub_23E914B00();
  return sub_23E946208();
}

uint64_t sub_23E913C74()
{
  sub_23E914B00();
  return sub_23E946214();
}

uint64_t sub_23E913C9C()
{
  return 0x726F737365636361;
}

uint64_t sub_23E913CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726F737365636361 && a2 == 0xE900000000000079)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23E946130();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23E913D58()
{
  sub_23E914ABC();
  return sub_23E946208();
}

uint64_t sub_23E913D80()
{
  sub_23E914ABC();
  return sub_23E946214();
}

uint64_t SomeEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FE18);
  v3 = *(_QWORD *)(v2 - 8);
  v19 = v2;
  v20 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v18);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FE20);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E914ABC();
  sub_23E9461FC();
  sub_23E90E028(v17, (uint64_t)v10);
  sub_23E901220((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  sub_23E914B00();
  sub_23E9460A0();
  sub_23E8E99C8(&qword_256D9FE38, (uint64_t (*)(uint64_t))type metadata accessor for SomeAccessoryEvent, (uint64_t)&protocol conformance descriptor for SomeAccessoryEvent);
  v15 = v19;
  sub_23E9460C4();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v15);
  sub_23E9139F0((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t SomeEvent.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE v6[72];

  v1 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E9461B4();
  sub_23E90E028(v0, (uint64_t)v3);
  sub_23E9461C0();
  SomeAccessoryEvent.hash(into:)((uint64_t)v6);
  sub_23E9139F0((uint64_t)v3);
  return sub_23E9461E4();
}

uint64_t SomeEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v23 = a2;
  v24 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FE40);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FE48);
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E914ABC();
  v28 = v10;
  v11 = v27;
  sub_23E9461F0();
  if (!v11)
  {
    v12 = v7;
    v22 = v5;
    v13 = v4;
    v27 = v8;
    v15 = (uint64_t)v25;
    v14 = v26;
    if (*(_QWORD *)(sub_23E946094() + 16) == 1)
    {
      sub_23E914B00();
      sub_23E946058();
      v16 = v27;
      type metadata accessor for SomeAccessoryEvent();
      sub_23E8E99C8(&qword_256D9FE58, (uint64_t (*)(uint64_t))type metadata accessor for SomeAccessoryEvent, (uint64_t)&protocol conformance descriptor for SomeAccessoryEvent);
      sub_23E946088();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v28, v14);
      sub_23E901220(v15, v23, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    }
    else
    {
      v17 = sub_23E945F98();
      swift_allocError();
      v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FE50);
      *v19 = v24;
      sub_23E946064();
      sub_23E945F8C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
      swift_willThrow();
      v20 = v27;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v14);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23E914358@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SomeEvent.init(from:)(a1, a2);
}

uint64_t sub_23E91436C(_QWORD *a1)
{
  return SomeEvent.encode(to:)(a1);
}

uint64_t sub_23E914380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE v6[72];

  MEMORY[0x24BDAC7A8](a1);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E9461B4();
  sub_23E90E028(v1, (uint64_t)v3);
  sub_23E9461C0();
  SomeAccessoryEvent.hash(into:)((uint64_t)v6);
  sub_23E9139F0((uint64_t)v3);
  return sub_23E9461E4();
}

uint64_t sub_23E91440C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  MEMORY[0x24BDAC7A8](a1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E90E028(v1, (uint64_t)v4);
  sub_23E9461C0();
  SomeAccessoryEvent.hash(into:)(a1);
  return sub_23E9139F0((uint64_t)v4);
}

uint64_t sub_23E91448C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE v6[72];

  MEMORY[0x24BDAC7A8](a1);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E9461B4();
  sub_23E90E028(v1, (uint64_t)v3);
  sub_23E9461C0();
  SomeAccessoryEvent.hash(into:)((uint64_t)v6);
  sub_23E9139F0((uint64_t)v3);
  return sub_23E9461E4();
}

uint64_t sub_23E914514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  v4 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FE10);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23E90E028(a1, (uint64_t)v10);
  sub_23E90E028(a2, v11);
  sub_23E901220((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  static SomeAccessoryEvent.== infix(_:_:)((uint64_t)v6, v11);
  LOBYTE(a2) = v12;
  sub_23E9139F0(v11);
  sub_23E9139F0((uint64_t)v6);
  return a2 & 1;
}

uint64_t SomeEvent.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _BYTE v18[40];

  v4 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8EF768(a1, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEF8);
  if (swift_dynamicCast())
  {
    sub_23E901264(&v16, (uint64_t)v13);
    v7 = v14;
    v8 = __swift_project_boxed_opaque_existential_1(v13, v14);
    MEMORY[0x24BDAC7A8](v8);
    v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v10);
    SomeAccessoryEvent.init<A>(_:)(v10, v7, (uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_1(a1);
    sub_23E901220((uint64_t)v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    sub_23E8EF768(a1, (uint64_t)&v16);
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_23E945F5C();
    sub_23E945BA8();
    v15 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FE60);
    sub_23E945B48();
    sub_23E945BA8();
    swift_bridgeObjectRelease();
    sub_23E945BA8();
    __swift_project_boxed_opaque_existential_1(&v16, v17);
    sub_23E946118();
    result = sub_23E945FF8();
    __break(1u);
  }
  return result;
}

uint64_t SomeEvent.isLegacySecurityEvent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[5];

  v1 = v0;
  v2 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E90E028(v1, (uint64_t)v7);
  sub_23E901220((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  sub_23E93DF2C();
  v8 = v15;
  v9 = v16;
  v10 = __swift_project_boxed_opaque_existential_1(v14, v15);
  v17[3] = v8;
  v11 = *(_QWORD *)(v9 + 16);
  v17[4] = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
  sub_23E9139F0((uint64_t)v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  LOBYTE(v8) = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v8, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v8 & 1;
}

uint64_t SomeEvent.tags.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[5];

  v1 = v0;
  v2 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E90E028(v1, (uint64_t)v7);
  sub_23E901220((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  sub_23E93DF2C();
  v8 = v16;
  v9 = v17;
  v10 = __swift_project_boxed_opaque_existential_1(v15, v16);
  v18[3] = v8;
  v11 = *(_QWORD *)(v9 + 16);
  v18[4] = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
  sub_23E9139F0((uint64_t)v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v8, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return v13;
}

unint64_t sub_23E914ABC()
{
  unint64_t result;

  result = qword_256D9FE28;
  if (!qword_256D9FE28)
  {
    result = MEMORY[0x24265637C](&unk_23E948F44, &type metadata for SomeEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9FE28);
  }
  return result;
}

unint64_t sub_23E914B00()
{
  unint64_t result;

  result = qword_256D9FE30;
  if (!qword_256D9FE30)
  {
    result = MEMORY[0x24265637C](&unk_23E948EF4, &type metadata for SomeEvent.AccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9FE30);
  }
  return result;
}

uint64_t sub_23E914B44()
{
  return sub_23E8E99C8(&qword_256D9FE68, (uint64_t (*)(uint64_t))type metadata accessor for SomeEvent, (uint64_t)&protocol conformance descriptor for SomeEvent);
}

uint64_t initializeBufferWithCopyOfBuffer for SomeEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for SomeAccessoryEvent();
    v5 = (char *)&loc_23E914BD4 + 4 * word_23E948C30[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for SomeEvent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  type metadata accessor for SomeAccessoryEvent();
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      v3 = sub_23E9459A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = a1 + *(int *)(type metadata accessor for EventBase(0) + 20);
      v5 = sub_23E945A10();
      v6 = *(_QWORD *)(v5 - 8);
      v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v9(v4, v5);
      v7 = (int *)type metadata accessor for AccessoryEventBase(0);
      v9(a1 + v7[5], v5);
      swift_bridgeObjectRelease();
      v9(a1 + v7[7], v5);
      swift_bridgeObjectRelease();
      v8 = a1 + v7[9];
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
      if (!(_DWORD)result)
        result = ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v5);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SomeEvent()
{
  char *v0;

  type metadata accessor for SomeAccessoryEvent();
  v0 = (char *)sub_23E915794 + 4 * word_23E948C46[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E915794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, const void *, uint64_t);
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v2 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = type metadata accessor for EventBase(0);
  v4 = *(int *)(v3 + 20);
  v5 = (void *)(v0 + v4);
  v6 = (const void *)(v1 + v4);
  v7 = sub_23E945A10();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(void *, const void *, uint64_t))(v8 + 16);
  v9(v5, v6, v7);
  *(_BYTE *)(v0 + *(int *)(v3 + 24)) = *(_BYTE *)(v1 + *(int *)(v3 + 24));
  v10 = (int *)type metadata accessor for AccessoryEventBase(0);
  v9((void *)(v0 + v10[5]), (const void *)(v1 + v10[5]), v7);
  v11 = v10[6];
  v12 = (_QWORD *)(v0 + v11);
  v13 = (_QWORD *)(v1 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v10[7];
  v16 = (void *)(v0 + v15);
  v17 = (const void *)(v1 + v15);
  swift_bridgeObjectRetain();
  v9(v16, v17, v7);
  v18 = v10[8];
  v19 = (_QWORD *)(v0 + v18);
  v20 = (_QWORD *)(v1 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = v10[9];
  v23 = (void *)(v0 + v22);
  v24 = (const void *)(v1 + v22);
  v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v25(v24, 1, v7))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v9(v23, v24, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v23, 0, 1, v7);
  }
  v27 = type metadata accessor for ContactSensorEvent();
  *(_BYTE *)(v0 + *(int *)(v27 + 20)) = *(_BYTE *)(v1 + *(int *)(v27 + 20));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SomeEvent(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23E9139F0(result);
    type metadata accessor for SomeAccessoryEvent();
    v2 = (char *)&loc_23E916168 + 4 * word_23E948C54[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for SomeEvent()
{
  char *v0;

  type metadata accessor for SomeAccessoryEvent();
  v0 = (char *)sub_23E916B9C + 4 * word_23E948C62[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E916B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, const void *, uint64_t);
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = type metadata accessor for EventBase(0);
  v4 = *(int *)(v3 + 20);
  v5 = (void *)(v0 + v4);
  v6 = (const void *)(v1 + v4);
  v7 = sub_23E945A10();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(void *, const void *, uint64_t))(v8 + 32);
  v9(v5, v6, v7);
  *(_BYTE *)(v0 + *(int *)(v3 + 24)) = *(_BYTE *)(v1 + *(int *)(v3 + 24));
  v10 = (int *)type metadata accessor for AccessoryEventBase(0);
  v9((void *)(v0 + v10[5]), (const void *)(v1 + v10[5]), v7);
  *(_OWORD *)(v0 + v10[6]) = *(_OWORD *)(v1 + v10[6]);
  v9((void *)(v0 + v10[7]), (const void *)(v1 + v10[7]), v7);
  *(_OWORD *)(v0 + v10[8]) = *(_OWORD *)(v1 + v10[8]);
  v11 = v10[9];
  v12 = (void *)(v0 + v11);
  v13 = (const void *)(v1 + v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v1 + v11, 1, v7))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v9(v12, v13, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  v15 = type metadata accessor for ContactSensorEvent();
  *(_BYTE *)(v0 + *(int *)(v15 + 20)) = *(_BYTE *)(v1 + *(int *)(v15 + 20));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for SomeEvent(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23E9139F0(result);
    type metadata accessor for SomeAccessoryEvent();
    v2 = (char *)&loc_23E917490 + 4 * word_23E948C70[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SomeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SomeAccessoryEvent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SomeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for SomeAccessoryEvent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t sub_23E917DA0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for SomeAccessoryEvent();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

ValueMetadata *type metadata accessor for SomeEvent.CodingKeys()
{
  return &type metadata for SomeEvent.CodingKeys;
}

uint64_t _s13HomeKitEvents9SomeEventO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E917E54 + 4 * byte_23E948C7E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E917E74 + 4 * byte_23E948C83[v4]))();
}

_BYTE *sub_23E917E54(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E917E74(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E917E7C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E917E84(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E917E8C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E917E94(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SomeEvent.AccessoryCodingKeys()
{
  return &type metadata for SomeEvent.AccessoryCodingKeys;
}

unint64_t sub_23E917EB4()
{
  unint64_t result;

  result = qword_256D9FEF0;
  if (!qword_256D9FEF0)
  {
    result = MEMORY[0x24265637C](&unk_23E948E14, &type metadata for SomeEvent.AccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9FEF0);
  }
  return result;
}

unint64_t sub_23E917EFC()
{
  unint64_t result;

  result = qword_256D9FEF8;
  if (!qword_256D9FEF8)
  {
    result = MEMORY[0x24265637C](&unk_23E948ECC, &type metadata for SomeEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9FEF8);
  }
  return result;
}

unint64_t sub_23E917F44()
{
  unint64_t result;

  result = qword_256D9FF00;
  if (!qword_256D9FF00)
  {
    result = MEMORY[0x24265637C](&unk_23E948D84, &type metadata for SomeEvent.AccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9FF00);
  }
  return result;
}

unint64_t sub_23E917F8C()
{
  unint64_t result;

  result = qword_256D9FF08;
  if (!qword_256D9FF08)
  {
    result = MEMORY[0x24265637C](&unk_23E948DAC, &type metadata for SomeEvent.AccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9FF08);
  }
  return result;
}

unint64_t sub_23E917FD4()
{
  unint64_t result;

  result = qword_256D9FF10;
  if (!qword_256D9FF10)
  {
    result = MEMORY[0x24265637C](&unk_23E948E3C, &type metadata for SomeEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9FF10);
  }
  return result;
}

unint64_t sub_23E91801C()
{
  unint64_t result;

  result = qword_256D9FF18;
  if (!qword_256D9FF18)
  {
    result = MEMORY[0x24265637C](&unk_23E948E64, &type metadata for SomeEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D9FF18);
  }
  return result;
}

HomeKitEvents::WindowEvent::State_optional __swiftcall WindowEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (HomeKitEvents::WindowEvent::State_optional)rawValue;
}

void *static WindowEvent.State.allCases.getter()
{
  return &unk_250F183A8;
}

uint64_t WindowEvent.State.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HomeKitEvents::WindowEvent::State_optional sub_23E91808C(Swift::Int *a1)
{
  return WindowEvent.State.init(rawValue:)(*a1);
}

void sub_23E918094(_QWORD *a1@<X8>)
{
  *a1 = &unk_250F183D0;
}

uint64_t WindowEvent.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WindowEvent();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for WindowEvent()
{
  uint64_t result;

  result = qword_256DA0068;
  if (!qword_256DA0068)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WindowEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t WindowEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WindowEvent.category.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventBase(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t WindowEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WindowEvent.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WindowEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WindowEvent.accessoryName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WindowEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);
  return sub_23E8EED0C(v3, a1);
}

uint64_t WindowEvent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for WindowEvent();
  return sub_23E9461C0();
}

BOOL static WindowEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2))
    return 0;
  v4 = type metadata accessor for WindowEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t WindowEvent.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9461B4();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for WindowEvent();
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t WindowEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  int *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t result;
  char v29;

  v29 = *a10;
  v18 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = type metadata accessor for EventBase(0);
  v20 = a9 + *(int *)(v19 + 20);
  v21 = sub_23E945A10();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
  v22(v20, a2, v21);
  *(_BYTE *)(a9 + *(int *)(v19 + 24)) = 1;
  v23 = (int *)type metadata accessor for AccessoryEventBase(0);
  v22(a9 + v23[5], a3, v21);
  v24 = (_QWORD *)(a9 + v23[6]);
  *v24 = a4;
  v24[1] = a5;
  v22(a9 + v23[7], a6, v21);
  v25 = (_QWORD *)(a9 + v23[8]);
  *v25 = a7;
  v25[1] = a8;
  sub_23E8EF720(a11, a9 + v23[9]);
  result = type metadata accessor for WindowEvent();
  *(_BYTE *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t WindowEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  char v9;
  _BYTE v11[40];

  v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E8EF768((uint64_t)a1, (uint64_t)v11);
  sub_23E937208((uint64_t)v11, (uint64_t)v7);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_23E8EE85C(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v11[0];
  sub_23E8EF808((uint64_t)v7, a2);
  result = type metadata accessor for WindowEvent();
  *(_BYTE *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t WindowEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EA98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = sub_23E937628(a1);
  if (!v2)
  {
    v9[15] = *(_BYTE *)(v1 + *(int *)(type metadata accessor for WindowEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_23E8EA698();
    sub_23E9461FC();
    v9[14] = 1;
    sub_23E918C04();
    sub_23E9460C4();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_23E918B30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WindowEvent.init(from:)(a1, a2);
}

uint64_t sub_23E918B44(_QWORD *a1)
{
  return WindowEvent.encode(to:)(a1);
}

uint64_t sub_23E918B5C()
{
  sub_23E919284();
  return sub_23E945C08();
}

uint64_t sub_23E918BB8()
{
  sub_23E919284();
  return sub_23E945BFC();
}

unint64_t sub_23E918C04()
{
  unint64_t result;

  result = qword_256D9FF20;
  if (!qword_256D9FF20)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for WindowEvent.State, &type metadata for WindowEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9FF20);
  }
  return result;
}

unint64_t sub_23E918C4C()
{
  unint64_t result;

  result = qword_256D9FF28;
  if (!qword_256D9FF28)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for WindowEvent.State, &type metadata for WindowEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9FF28);
  }
  return result;
}

unint64_t sub_23E918C94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D9FF30;
  if (!qword_256D9FF30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D9FF38);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D9FF30);
  }
  return result;
}

unint64_t sub_23E918CE4()
{
  unint64_t result;

  result = qword_256D9FF40;
  if (!qword_256D9FF40)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for WindowEvent.State, &type metadata for WindowEvent.State);
    atomic_store(result, (unint64_t *)&qword_256D9FF40);
  }
  return result;
}

uint64_t sub_23E918D28(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8((unint64_t *)&unk_256DA0270, (uint64_t (*)(uint64_t))type metadata accessor for WindowEvent, (uint64_t)&protocol conformance descriptor for WindowEvent);
  a1[2] = sub_23E8E99C8(&qword_256D9FFA0, (uint64_t (*)(uint64_t))type metadata accessor for WindowEvent, (uint64_t)&protocol conformance descriptor for WindowEvent);
  result = sub_23E8E99C8(&qword_256D9FFA8, (uint64_t (*)(uint64_t))type metadata accessor for WindowEvent, (uint64_t)&protocol conformance descriptor for WindowEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E918DA0()
{
  return sub_23E8E99C8(&qword_256D9FFB0, (uint64_t (*)(uint64_t))type metadata accessor for WindowEvent, (uint64_t)&protocol conformance descriptor for WindowEvent);
}

uint64_t sub_23E918DCC(uint64_t a1)
{
  uint64_t result;

  result = sub_23E8E99C8(&qword_256D9FF98, (uint64_t (*)(uint64_t))type metadata accessor for WindowEvent, (uint64_t)&protocol conformance descriptor for WindowEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23E918E08(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256D9FFB8, (uint64_t (*)(uint64_t))type metadata accessor for WindowEvent, (uint64_t)&protocol conformance descriptor for WindowEvent);
  a1[2] = sub_23E8E99C8(&qword_256D9FFC0, (uint64_t (*)(uint64_t))type metadata accessor for WindowEvent, (uint64_t)&unk_23E949174);
  result = sub_23E8E99C8(&qword_256D9FFC8, (uint64_t (*)(uint64_t))type metadata accessor for WindowEvent, (uint64_t)&protocol conformance descriptor for WindowEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E918E80()
{
  return sub_23E8E99C8(&qword_256D9FFB8, (uint64_t (*)(uint64_t))type metadata accessor for WindowEvent, (uint64_t)&protocol conformance descriptor for WindowEvent);
}

unint64_t sub_23E918EAC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23E8F0A48();
  a1[2] = sub_23E918C04();
  result = sub_23E918EE0();
  a1[3] = result;
  return result;
}

unint64_t sub_23E918EE0()
{
  unint64_t result;

  result = qword_256DA0000;
  if (!qword_256DA0000)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for WindowEvent.State, &type metadata for WindowEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0000);
  }
  return result;
}

unint64_t sub_23E918F24(uint64_t a1)
{
  unint64_t result;

  result = sub_23E918F48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23E918F48()
{
  unint64_t result;

  result = qword_256DA0008;
  if (!qword_256DA0008)
  {
    result = MEMORY[0x24265637C](&unk_23E94925C, &type metadata for WindowEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0008);
  }
  return result;
}

unint64_t sub_23E918F8C(uint64_t a1)
{
  unint64_t result;

  result = sub_23E918CE4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WindowEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E918FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 5)
    return v9 - 4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WindowEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E919040(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryEventBaseLegacy(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 4;
  return result;
}

uint64_t sub_23E9190B8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DoorEvent.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WindowEvent.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E919204 + 4 * byte_23E948FA5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E919238 + 4 * byte_23E948FA0[v4]))();
}

uint64_t sub_23E919238(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E919240(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E919248);
  return result;
}

uint64_t sub_23E919254(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E91925CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E919260(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E919268(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WindowEvent.State()
{
  return &type metadata for WindowEvent.State;
}

unint64_t sub_23E919284()
{
  unint64_t result;

  result = qword_256DA00A0;
  if (!qword_256DA00A0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for WindowEvent.State, &type metadata for WindowEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA00A0);
  }
  return result;
}

uint64_t static HMVCommands.submitTaskRequestForIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23E9192E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v2 = v0[2];
  v1 = v0[3];
  v3 = swift_task_alloc();
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256D9E818 + dword_256D9E818);
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_23E912FDC;
  return v6((uint64_t)v6, (uint64_t)sub_23E91942C, v3);
}

void sub_23E919368(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  _QWORD v6[6];

  v4 = (void *)sub_23E945B0C();
  v6[4] = sub_23E9195D4;
  v6[5] = a2;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_23E924584;
  v6[3] = &block_descriptor_9;
  v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilSubmitTaskRequestForIdentifierWithIdentifier_reply_, v4, v5);
  _Block_release(v5);

}

void sub_23E91942C(void *a1, uint64_t a2)
{
  sub_23E919368(a1, a2);
}

void sub_23E919434(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9ED48, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E9195D4(void *a1)
{
  uint64_t v1;

  sub_23E919434(a1, v1);
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_23E9195F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t EventRecord.Field.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aData_3[8 * *v0];
}

uint64_t static EventRecord.fieldKey(_:)(char *a1)
{
  return *(_QWORD *)&aData_3[8 * *a1];
}

void EventRecord.init(from:)(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  __int128 v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v4 = type metadata accessor for EventRecord(0);
  MEMORY[0x24BDAC7A8](v4);
  v79 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E9459A4();
  v77 = *(_QWORD *)(v6 - 8);
  v78 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v76 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v8);
  v74 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EventRecord.DecodedEvent(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v75 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v82 = (uint64_t)&v69 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E945A10();
  v86 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v80 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v81 = (char *)&v69 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v69 - v22;
  if (sub_23E945ED8() == 0x746E657645 && v24 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = sub_23E946130();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      *(_QWORD *)&v87 = 0;
      *((_QWORD *)&v87 + 1) = 0xE000000000000000;
      sub_23E945F5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v87 = 0xD00000000000001FLL;
      *((_QWORD *)&v87 + 1) = 0x800000023E94CB00;
      sub_23E945ED8();
      sub_23E945BA8();
      swift_bridgeObjectRelease();
      v39 = v87;
      sub_23E91B290();
      swift_allocError();
      *(_QWORD *)v40 = v4;
      *(_OWORD *)(v40 + 8) = v39;
      swift_willThrow();

      return;
    }
  }
  v73 = a2;
  v83 = v4;
  v26 = objc_msgSend(a1, sel_recordID);
  v27 = a1;
  v28 = objc_msgSend(v26, sel_recordName);

  sub_23E945B18();
  v85 = v17;

  sub_23E9459B0();
  v29 = v85;
  swift_bridgeObjectRelease();
  v30 = v86;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v16, 1, v29) == 1)
  {
    sub_23E91B2D4((uint64_t)v16);
    *(_QWORD *)&v87 = 0;
    *((_QWORD *)&v87 + 1) = 0xE000000000000000;
    sub_23E945F5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v87 = 0xD00000000000002FLL;
    *((_QWORD *)&v87 + 1) = 0x800000023E94CB20;
    v31 = objc_msgSend(a1, sel_recordID);
    v32 = objc_msgSend(v31, sel_recordName);

    sub_23E945B18();
    sub_23E945BA8();
    swift_bridgeObjectRelease();
    v33 = v87;
    v34 = v83 | 0x8000000000000000;
    sub_23E91B290();
    swift_allocError();
    *(_QWORD *)v35 = v34;
    *(_OWORD *)(v35 + 8) = v33;
    swift_willThrow();

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v23, v16, v29);
    v36 = objc_msgSend(a1, sel_encryptedValues);
    v37 = v84;
    v38 = sub_23E919EE0(1, v36);
    if (v37)
    {
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v29);
    }
    else
    {
      v41 = v38;
      v42 = v38 - 1;
      if ((unint64_t)(v38 - 1) >= 8)
      {
        *(_QWORD *)&v87 = 0;
        *((_QWORD *)&v87 + 1) = 0xE000000000000000;
        sub_23E945F5C();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v87 = 0xD000000000000020;
        *((_QWORD *)&v87 + 1) = 0x800000023E94CB50;
        v90 = v41;
        sub_23E9460E8();
        sub_23E945BA8();
        swift_bridgeObjectRelease();
        v43 = v87;
        v44 = v83 | 0x2000000000000000;
        sub_23E91B290();
        swift_allocError();
        *(_QWORD *)v45 = v44;
        *(_OWORD *)(v45 + 8) = v43;
        swift_willThrow();
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v86 + 8))(v23, v85);
      }
      else
      {
        swift_unknownObjectRetain();
        sub_23E91A148(v36, &v87);
        swift_unknownObjectRelease();
        v46 = v87;
        LOBYTE(v87) = v42;
        v47 = v36;
        v48 = v82;
        sub_23E91AC18(v46, *((uint64_t *)&v87 + 1), (uint64_t)&v87);
        v71 = *((_QWORD *)&v46 + 1);
        v72 = v46;
        v84 = v47;
        v49 = (uint64_t)v75;
        sub_23E9011A0(v48, (uint64_t)v75, type metadata accessor for EventRecord.DecodedEvent);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v88 = type metadata accessor for FakeEvent();
          v89 = sub_23E8E99C8(&qword_256DA00C0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v87);
          sub_23E901220(v49, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for FakeEvent);
        }
        else
        {
          v51 = (uint64_t)v74;
          sub_23E901220(v49, (uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
          SomeEvent.anyEvent.getter((uint64_t *)&v87);
          sub_23E9011E4(v51, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
        }
        v70 = EventRecord.DecodedEvent.tags.getter();
        v74 = a1;
        v75 = v23;
        v52 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
        v53 = v23;
        v54 = v85;
        v52(v81, v53, v85);
        v55 = v88;
        v56 = v89;
        __swift_project_boxed_opaque_existential_1(&v87, v88);
        v57 = v80;
        (*(void (**)(uint64_t, uint64_t))(v56 + 40))(v55, v56);
        v58 = v88;
        v59 = v89;
        __swift_project_boxed_opaque_existential_1(&v87, v88);
        v60 = v76;
        (*(void (**)(uint64_t, uint64_t))(v59 + 32))(v58, v59);
        v61 = (uint64_t)v79;
        v52(v79, v81, v54);
        v62 = (int *)v83;
        v52((char *)(v61 + *(int *)(v83 + 20)), v57, v54);
        v64 = v77;
        v63 = v78;
        (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v61 + v62[6], v60, v78);
        *(_BYTE *)(v61 + v62[7]) = v42;
        v65 = (_QWORD *)(v61 + v62[8]);
        v66 = v71;
        *v65 = v72;
        v65[1] = v66;
        *(_QWORD *)(v61 + v62[9]) = v70;
        type metadata accessor for Configuration();
        v67 = static Configuration.cloudKitRecordDateCoalescingWindowSeconds.getter();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v60, v63);
        v68 = *(void (**)(char *, uint64_t))(v86 + 8);
        v68(v80, v54);
        v68(v81, v54);
        *(_QWORD *)(v61 + v62[10]) = v67;
        sub_23E901220(v61, v73, type metadata accessor for EventRecord);
        swift_unknownObjectRelease();

        sub_23E9011E4(v82, type metadata accessor for EventRecord.DecodedEvent);
        v68(v75, v54);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
      }
    }
  }
}

uint64_t sub_23E919EE0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v3 = (void *)sub_23E945B0C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(a2, sel_objectForKeyedSubscript_, v3);

  if (v4)
  {
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EED0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_unknownObjectRelease();
      return v10;
    }
    else
    {
      sub_23E945F5C();
      sub_23E945BA8();
      v8 = type metadata accessor for EventRecord(0);
      sub_23E945BA8();
      swift_bridgeObjectRelease();
      sub_23E945BA8();
      swift_getObjectType();
      sub_23E946118();
      sub_23E91B290();
      swift_allocError();
      *v9 = v8 | 0x6000000000000000;
      v9[1] = 0;
      v9[2] = 0xE000000000000000;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_23E945F5C();
    swift_bridgeObjectRelease();
    v6 = type metadata accessor for EventRecord(0);
    sub_23E945BA8();
    swift_bridgeObjectRelease();
    sub_23E945BA8();
    sub_23E91B290();
    swift_allocError();
    *v7 = v6 | 0x4000000000000000;
    v7[1] = 0xD000000000000014;
    v7[2] = 0x800000023E94CB80;
    return swift_willThrow();
  }
}

uint64_t sub_23E91A148@<X0>(void *a1@<X1>, _OWORD *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = (void *)sub_23E945B0C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(a1, sel_objectForKeyedSubscript_, v4);

  if (v5)
  {
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EED0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      result = swift_unknownObjectRelease();
      *a2 = v11;
    }
    else
    {
      *(_QWORD *)&v13 = 0;
      *((_QWORD *)&v13 + 1) = 0xE000000000000000;
      sub_23E945F5C();
      sub_23E945BA8();
      v9 = type metadata accessor for EventRecord(0);
      sub_23E945BA8();
      swift_bridgeObjectRelease();
      sub_23E945BA8();
      swift_getObjectType();
      sub_23E946118();
      sub_23E91B290();
      swift_allocError();
      *(_QWORD *)v10 = v9 | 0x6000000000000000;
      *(_OWORD *)(v10 + 8) = v13;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_23E945F5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v12 = 0xD000000000000014;
    *((_QWORD *)&v12 + 1) = 0x800000023E94CB80;
    v7 = type metadata accessor for EventRecord(0);
    sub_23E945BA8();
    swift_bridgeObjectRelease();
    sub_23E945BA8();
    sub_23E91B290();
    swift_allocError();
    *(_QWORD *)v8 = v7 | 0x4000000000000000;
    *(_OWORD *)(v8 + 8) = v12;
    return swift_willThrow();
  }
  return result;
}

uint64_t EventRecord.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t EventRecord.home.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventRecord(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EventRecord.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventRecord(0) + 24);
  v4 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EventRecord.dataType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventRecord(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t EventRecord.data.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for EventRecord(0) + 32);
  v2 = *(_QWORD *)v1;
  sub_23E91B57C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t EventRecord.tags.getter()
{
  type metadata accessor for EventRecord(0);
  return swift_bridgeObjectRetain();
}

uint64_t EventRecord.coalescingWindowSeconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventRecord(0) + 40));
}

uint64_t EventRecord.init(identifier:home:date:dataType:data:tags:coalescingWindowSeconds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v30;

  v14 = *a4;
  v15 = sub_23E945A10();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v30 = a1;
  v17(a9, a1, v15);
  v18 = (int *)type metadata accessor for EventRecord(0);
  v17(a9 + v18[5], a2, v15);
  v19 = a9 + v18[6];
  v20 = sub_23E9459A4();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, a3, v20);
  *(_BYTE *)(a9 + v18[7]) = v14;
  v22 = a8;
  v23 = (_QWORD *)(a9 + v18[8]);
  *v23 = a5;
  v23[1] = a6;
  *(_QWORD *)(a9 + v18[9]) = a7;
  if ((a10 & 1) != 0)
  {
    type metadata accessor for Configuration();
    v22 = static Configuration.cloudKitRecordDateCoalescingWindowSeconds.getter();
  }
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a3, v20);
  v24 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v24(a2, v15);
  result = ((uint64_t (*)(uint64_t, uint64_t))v24)(v30, v15);
  *(_QWORD *)(a9 + v18[10]) = v22;
  return result;
}

uint64_t EventRecord.init(identifier:dataType:data:coalescingWindowSeconds:)@<X0>(char *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v32)(uint64_t, char *, uint64_t);
  char *v33;
  int EnumCaseMultiPayload;
  char *v35;
  uint64_t v36;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  void (*v50)(uint64_t, char *, uint64_t);
  int *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  void (*v57)(uint64_t, char *, uint64_t);
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75[3];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[3];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v74 = a1;
  v67 = a6;
  v69 = a5;
  v81 = a4;
  v65 = a7;
  v66 = type metadata accessor for EventRecord(0);
  MEMORY[0x24BDAC7A8](v66);
  v68 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_23E9459A4();
  v72 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v71 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v11);
  v64 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E945A10();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v63 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v62 = (char *)&v56 - v17;
  v18 = type metadata accessor for EventRecord.DecodedEvent(0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v56 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v56 - v25;
  v27 = *a2;
  v28 = a3;
  v29 = v81;
  LOBYTE(v78[0]) = v27;
  v30 = (uint64_t)v73;
  sub_23E91AC18(v28, v81, (uint64_t)v78);
  if (v30)
  {
    sub_23E91B538(v28, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v74, v13);
  }
  else
  {
    v56 = v21;
    v58 = v27;
    v59 = 0;
    v32 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 16);
    v33 = v62;
    v61 = v13;
    v57 = v32;
    v32((uint64_t)v62, v74, v13);
    v73 = v26;
    sub_23E9011A0((uint64_t)v26, (uint64_t)v24, type metadata accessor for EventRecord.DecodedEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v35 = v63;
    v36 = v64;
    v60 = v28;
    if (EnumCaseMultiPayload == 1)
    {
      v79 = type metadata accessor for FakeEvent();
      v80 = sub_23E8E99C8(&qword_256DA00C0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v78);
      sub_23E901220((uint64_t)v24, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for FakeEvent);
    }
    else
    {
      sub_23E901220((uint64_t)v24, v64, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
      SomeEvent.anyEvent.getter(v78);
      sub_23E9011E4(v36, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    }
    v38 = v79;
    v39 = v80;
    __swift_project_boxed_opaque_existential_1(v78, v79);
    (*(void (**)(uint64_t, uint64_t))(v39 + 40))(v38, v39);
    v40 = (uint64_t)v56;
    sub_23E9011A0((uint64_t)v73, (uint64_t)v56, type metadata accessor for EventRecord.DecodedEvent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v76 = type metadata accessor for FakeEvent();
      v77 = sub_23E8E99C8(&qword_256DA00C0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
      v41 = __swift_allocate_boxed_opaque_existential_1(v75);
      sub_23E901220(v40, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FakeEvent);
    }
    else
    {
      sub_23E901220(v40, v36, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
      SomeEvent.anyEvent.getter(v75);
      sub_23E9011E4(v36, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    }
    v42 = v61;
    v43 = v33;
    v64 = v14;
    v44 = v76;
    v45 = v77;
    __swift_project_boxed_opaque_existential_1(v75, v76);
    v46 = v35;
    v47 = v71;
    (*(void (**)(uint64_t, uint64_t))(v45 + 32))(v44, v45);
    v48 = EventRecord.DecodedEvent.tags.getter();
    v49 = (uint64_t)v68;
    v50 = v57;
    v57((uint64_t)v68, v43, v42);
    v51 = (int *)v66;
    v50(v49 + *(int *)(v66 + 20), v46, v42);
    (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v49 + v51[6], v47, v70);
    *(_BYTE *)(v49 + v51[7]) = v58;
    v52 = (uint64_t *)(v49 + v51[8]);
    v53 = v81;
    *v52 = v60;
    v52[1] = v53;
    *(_QWORD *)(v49 + v51[9]) = v48;
    v54 = v69;
    if ((v67 & 1) != 0)
    {
      type metadata accessor for Configuration();
      v54 = static Configuration.cloudKitRecordDateCoalescingWindowSeconds.getter();
    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v70);
    v55 = *(void (**)(char *, uint64_t))(v64 + 8);
    v55(v46, v42);
    v55(v43, v42);
    *(_QWORD *)(v49 + v51[10]) = v54;
    sub_23E901220(v49, v65, type metadata accessor for EventRecord);
    v55(v74, v42);
    sub_23E9011E4((uint64_t)v73, type metadata accessor for EventRecord.DecodedEvent);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  }
}

void sub_23E91AC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_23E91AC58()
{
  uint64_t v0;
  uint64_t result;

  sub_23E945800();
  swift_allocObject();
  sub_23E9457F4();
  type metadata accessor for LockEvent();
  sub_23E8E99C8((unint64_t *)&unk_256DA02A0, (uint64_t (*)(uint64_t))type metadata accessor for LockEvent, (uint64_t)&protocol conformance descriptor for LockEvent);
  sub_23E9457E8();
  result = swift_release();
  if (!v0)
  {
    type metadata accessor for SomeAccessoryEvent();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for EventRecord.DecodedEvent(0);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void sub_23E91B094()
{
  uint64_t v0;

  sub_23E945800();
  swift_allocObject();
  sub_23E9457F4();
  type metadata accessor for FakeEvent();
  sub_23E8E99C8(&qword_256D9F7C0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
  sub_23E9457E8();
  swift_release();
  if (!v0)
  {
    type metadata accessor for EventRecord.DecodedEvent(0);
    JUMPOUT(0x23E91B078);
  }
  JUMPOUT(0x23E91B07CLL);
}

uint64_t EventRecord.DecodedEvent.anyEvent.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;

  v2 = v1;
  v4 = type metadata accessor for SomeEvent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EventRecord.DecodedEvent(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9011A0(v2, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    a1[3] = type metadata accessor for FakeEvent();
    a1[4] = sub_23E8E99C8(&qword_256DA00C0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_23E901220((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for FakeEvent);
  }
  else
  {
    sub_23E901220((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    SomeEvent.anyEvent.getter(a1);
    return sub_23E9011E4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
  }
}

uint64_t type metadata accessor for EventRecord(uint64_t a1)
{
  return sub_23E90A0D8(a1, qword_256DA0158);
}

uint64_t type metadata accessor for EventRecord.DecodedEvent(uint64_t a1)
{
  return sub_23E90A0D8(a1, qword_256DA0218);
}

unint64_t sub_23E91B290()
{
  unint64_t result;

  result = qword_256DA00B8;
  if (!qword_256DA00B8)
  {
    result = MEMORY[0x24265637C](&unk_23E947898, &type metadata for RecordError);
    atomic_store(result, (unint64_t *)&qword_256DA00B8);
  }
  return result;
}

uint64_t sub_23E91B2D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *EventRecord.DecodedEvent.tags.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[5];

  v1 = v0;
  v2 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SomeEvent();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v22 - v9;
  v11 = type metadata accessor for EventRecord.DecodedEvent(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9011A0(v1, (uint64_t)v13, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E9011E4((uint64_t)v13, type metadata accessor for EventRecord.DecodedEvent);
    return &unk_250F180A8;
  }
  else
  {
    sub_23E901220((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    sub_23E9011A0((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    sub_23E901220((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
    sub_23E93DF2C();
    v16 = v23;
    v17 = v24;
    v18 = __swift_project_boxed_opaque_existential_1(v22, v23);
    v25[3] = v16;
    v19 = *(_QWORD *)(v17 + 16);
    v25[4] = v19;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_1, v18, v16);
    sub_23E9011E4((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v16, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    sub_23E9011E4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
  }
  return (void *)v15;
}

HomeKitEvents::EventRecord::DataType_optional __swiftcall EventRecord.DataType.init(rawValue:)(Swift::Int64 rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue - 1;
  if ((unint64_t)(rawValue - 1) >= 8)
    v2 = 8;
  *v1 = v2;
  return (HomeKitEvents::EventRecord::DataType_optional)rawValue;
}

uint64_t sub_23E91B538(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23E91B57C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

CKRecord __swiftcall EventRecord.toCKRecord(zoneID:)(CKRecordZoneID zoneID)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *v4;
  void *v5;
  id v6;
  void *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21[3];
  uint64_t v22;
  unint64_t v23;

  v2 = v1;
  sub_23E901318(0, &qword_256DA00C8);
  sub_23E9459BC();
  v4 = zoneID.super.isa;
  v5 = (void *)sub_23E945DD0();
  sub_23E901318(0, &qword_256DA00D0);
  v6 = v5;
  v7 = (void *)sub_23E945ECC();
  v8 = (int *)type metadata accessor for EventRecord(0);
  v9 = v2 + v8[6];
  v10 = sub_23E9459A4();
  v22 = v10;
  v23 = MEMORY[0x24BDB87C8];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_1, v9, v10);
  sub_23E945EB4();
  v12 = *(_QWORD *)(v2 + v8[9]);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v21[0] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_23E91C2E8(0, v13, 0);
    __asm { BR              X9 }
  }
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA00D8);
  v23 = sub_23E91C304();
  v21[0] = v14;
  sub_23E945EB4();
  v15 = objc_msgSend(v7, sel_encryptedValues);
  swift_getObjectType();
  v16 = (uint64_t *)(v2 + v8[8]);
  v17 = *v16;
  v18 = v16[1];
  v22 = MEMORY[0x24BDCDDE8];
  v23 = MEMORY[0x24BDB87C0];
  v21[0] = v17;
  v21[1] = v18;
  sub_23E91B57C(v17, v18);
  sub_23E945EB4();
  v19 = *(unsigned __int8 *)(v2 + v8[7]) + 1;
  v22 = MEMORY[0x24BEE4008];
  v23 = MEMORY[0x24BDB8E58];
  v21[0] = v19;
  sub_23E945EB4();

  swift_unknownObjectRelease();
  return (CKRecord)v7;
}

uint64_t EventRecord.DataType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

HomeKitEvents::EventRecord::Field_optional __swiftcall EventRecord.Field.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeKitEvents::EventRecord::Field_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E94604C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_23E91B95C(char *a1, char *a2)
{
  return sub_23E8EA220(*a1, *a2);
}

uint64_t sub_23E91B968()
{
  sub_23E9461B4();
  sub_23E945B6C();
  swift_bridgeObjectRelease();
  return sub_23E9461E4();
}

uint64_t sub_23E91B9C0()
{
  sub_23E945B6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E91B9EC()
{
  sub_23E9461B4();
  sub_23E945B6C();
  swift_bridgeObjectRelease();
  return sub_23E9461E4();
}

HomeKitEvents::EventRecord::Field_optional sub_23E91BA40(Swift::String *a1)
{
  return EventRecord.Field.init(rawValue:)(*a1);
}

void sub_23E91BA4C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = *(_QWORD *)&aData_3[8 * *v1];
  a1[1] = 0xE400000000000000;
}

uint64_t static EventRecord.recordZoneID(forHomeIdentifier:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_23E945A10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E945B18();
  sub_23E901318(0, &qword_256D9F2A8);
  type metadata accessor for Configuration();
  static Configuration.zoneUUID(forHomeIdentifier:)(a1, (uint64_t)v5);
  v11 = sub_23E9459BC();
  v12 = v6;
  v9 = 0x2D73746E657665;
  v10 = 0xE700000000000000;
  v9 = sub_23E945BE4();
  v10 = v7;
  sub_23E945B9C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_23E945E24();
}

uint64_t static EventRecord.encodeEvent(_:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v33 = a1;
  v31 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v31);
  v32 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SomeEvent();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v30 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - v11;
  v13 = type metadata accessor for EventRecord.DecodedEvent(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  sub_23E9011A0(a2, (uint64_t)&v30 - v17, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v38 = type metadata accessor for FakeEvent();
    v39 = sub_23E8E99C8(&qword_256DA00C0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v37);
    sub_23E901220((uint64_t)v18, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for FakeEvent);
  }
  else
  {
    sub_23E901220((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    SomeEvent.anyEvent.getter(v37);
    sub_23E9011E4((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
  }
  v21 = v38;
  v22 = v39;
  v23 = __swift_project_boxed_opaque_existential_1(v37, v38);
  v35 = v21;
  v36 = *(_QWORD *)(v22 + 16);
  v24 = __swift_allocate_boxed_opaque_existential_1(v34);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v24, v23, v21);
  __swift_project_boxed_opaque_existential_1(v34, v35);
  sub_23E945824();
  swift_allocObject();
  sub_23E945818();
  v25 = v40;
  v26 = sub_23E94580C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  if (!v25)
  {
    sub_23E9011A0(a2, (uint64_t)v16, type metadata accessor for EventRecord.DecodedEvent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23E9011E4((uint64_t)v16, type metadata accessor for EventRecord.DecodedEvent);
      *v33 = 7;
    }
    else
    {
      sub_23E901220((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
      sub_23E9011A0((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
      v27 = v32;
      sub_23E901220((uint64_t)v7, v32, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
      v28 = 0x6050400030201uLL >> (8 * swift_getEnumCaseMultiPayload());
      sub_23E9011E4(v27, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
      sub_23E9011E4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
      *v33 = v28;
    }
  }
  return v26;
}

uint64_t sub_23E91BF40()
{
  sub_23E9461B4();
  sub_23E9461D8();
  return sub_23E9461E4();
}

uint64_t sub_23E91BF84()
{
  return sub_23E9461D8();
}

uint64_t sub_23E91BFB0()
{
  sub_23E9461B4();
  sub_23E9461D8();
  return sub_23E9461E4();
}

HomeKitEvents::EventRecord::DataType_optional sub_23E91BFF0(Swift::Int64 *a1)
{
  return EventRecord.DataType.init(rawValue:)(*a1);
}

BOOL EventRecord.DecodedEvent.isFake.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BOOL8 v4;
  uint64_t v6;

  v1 = type metadata accessor for EventRecord.DecodedEvent(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9011A0(v0, (uint64_t)v3, type metadata accessor for EventRecord.DecodedEvent);
  v4 = swift_getEnumCaseMultiPayload() == 1;
  sub_23E9011E4((uint64_t)v3, type metadata accessor for EventRecord.DecodedEvent);
  return v4;
}

uint64_t EventRecord.DecodedEvent.isLegacySecurityEvent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[5];

  v1 = v0;
  v2 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SomeEvent();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v22 - v9;
  v11 = type metadata accessor for EventRecord.DecodedEvent(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9011A0(v1, (uint64_t)v13, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E9011E4((uint64_t)v13, type metadata accessor for EventRecord.DecodedEvent);
    v15 = 1;
  }
  else
  {
    sub_23E901220((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    sub_23E9011A0((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
    sub_23E901220((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
    sub_23E93DF2C();
    v16 = v23;
    v17 = v24;
    v18 = __swift_project_boxed_opaque_existential_1(v22, v23);
    v25[3] = v16;
    v19 = *(_QWORD *)(v17 + 16);
    v25[4] = v19;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_1, v18, v16);
    sub_23E9011E4((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 32))(v16, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    sub_23E9011E4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
  }
  return v15 & 1;
}

uint64_t sub_23E91C294(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E920728(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E91C2B0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E920894(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23E91C2CC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E920A7C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E91C2E8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E920BE4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

unint64_t sub_23E91C304()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256DA00E0;
  if (!qword_256DA00E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256DA00D8);
    v2 = MEMORY[0x24BDB87C0];
    result = MEMORY[0x24265637C](MEMORY[0x24BDB8BE0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256DA00E0);
  }
  return result;
}

unint64_t sub_23E91C364()
{
  unint64_t result;

  result = qword_256DA00F0;
  if (!qword_256DA00F0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for EventRecord.Field, &type metadata for EventRecord.Field);
    atomic_store(result, (unint64_t *)&qword_256DA00F0);
  }
  return result;
}

unint64_t sub_23E91C3AC()
{
  unint64_t result;

  result = qword_256DA00F8;
  if (!qword_256DA00F8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for EventRecord.DataType, &type metadata for EventRecord.DataType);
    atomic_store(result, (unint64_t *)&qword_256DA00F8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for EventRecord(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E945A10();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23E9459A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = *(_QWORD *)((char *)a2 + v13);
    v16 = *(_QWORD *)((char *)a2 + v13 + 8);
    sub_23E91B57C(v15, v16);
    *v14 = v15;
    v14[1] = v16;
    v17 = a3[10];
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EventRecord(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23E945A10();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v6 = a1 + a2[6];
  v7 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  sub_23E91B538(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EventRecord(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v6 = sub_23E945A10();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v13 = (uint64_t *)(a1 + v12);
  v14 = *(_QWORD *)(a2 + v12);
  v15 = *(_QWORD *)(a2 + v12 + 8);
  sub_23E91B57C(v14, v15);
  *v13 = v14;
  v13[1] = v15;
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EventRecord(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_23E945A10();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v12 = a3[8];
  v13 = (uint64_t *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  sub_23E91B57C(*v14, v16);
  v17 = *v13;
  v18 = v13[1];
  *v13 = v15;
  v13[1] = v16;
  sub_23E91B538(v17, v18);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for EventRecord(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23E945A10();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for EventRecord(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = sub_23E945A10();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v13 = *(_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_23E91B538(v13, v14);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E91C90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_23E945A10();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23E9459A4();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EventRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E91C9C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_23E945A10();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_23E9459A4();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t sub_23E91CA64()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E945A10();
  if (v1 <= 0x3F)
  {
    result = sub_23E9459A4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EventRecord.Field(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EventRecord.Field(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E91CBF4 + 4 * byte_23E949315[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E91CC28 + 4 * byte_23E949310[v4]))();
}

uint64_t sub_23E91CC28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E91CC30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E91CC38);
  return result;
}

uint64_t sub_23E91CC44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E91CC4CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E91CC50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E91CC58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventRecord.Field()
{
  return &type metadata for EventRecord.Field;
}

uint64_t storeEnumTagSinglePayload for EventRecord.DataType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E91CCC0 + 4 * byte_23E94931F[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E91CCF4 + 4 * byte_23E94931A[v4]))();
}

uint64_t sub_23E91CCF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E91CCFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E91CD04);
  return result;
}

uint64_t sub_23E91CD10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E91CD18);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E91CD1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E91CD24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventRecord.DataType()
{
  return &type metadata for EventRecord.DataType;
}

_QWORD *initializeBufferWithCopyOfBuffer for EventRecord.DecodedEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      type metadata accessor for SomeAccessoryEvent();
      v32 = (char *)&loc_23E91CF04 + 4 * word_23E949324[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v6 = sub_23E9459A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = type metadata accessor for EventBase(0);
    v8 = *(int *)(v7 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E945A10();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    *((_BYTE *)a1 + *(int *)(v7 + 24)) = *((_BYTE *)a2 + *(int *)(v7 + 24));
    v14 = (int *)type metadata accessor for AccessoryEventBase(0);
    v13((char *)a1 + v14[5], (char *)a2 + v14[5], v11);
    v15 = v14[6];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v14[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    swift_bridgeObjectRetain();
    v13(v20, v21, v11);
    v22 = v14[8];
    v23 = (_QWORD *)((char *)a1 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = v14[9];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v29(v28, 1, v11))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v13(v27, v28, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for EventRecord.DecodedEvent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_3:
    v3 = sub_23E9459A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = a1 + *(int *)(type metadata accessor for EventBase(0) + 20);
    v5 = sub_23E945A10();
    v6 = *(_QWORD *)(v5 - 8);
    v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v9(v4, v5);
    v7 = (int *)type metadata accessor for AccessoryEventBase(0);
    v9(a1 + v7[5], v5);
    swift_bridgeObjectRelease();
    v9(a1 + v7[7], v5);
    swift_bridgeObjectRelease();
    v8 = a1 + v7[9];
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v5);
  }
  else
  {
    type metadata accessor for SomeAccessoryEvent();
    result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
        goto LABEL_3;
      default:
        return result;
    }
  }
  return result;
}

uint64_t initializeWithCopy for EventRecord.DecodedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for SomeAccessoryEvent();
    v29 = (char *)&loc_23E91DBC8 + 4 * word_23E94933A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v4 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for EventBase(0);
  v6 = *(int *)(v5 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23E945A10();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(v5 + 24)) = *(_BYTE *)(a2 + *(int *)(v5 + 24));
  v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11(a1 + v12[5], a2 + v12[5], v9);
  v13 = v12[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v12[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  swift_bridgeObjectRetain();
  v11(v18, v19, v9);
  v20 = v12[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = v12[9];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v27(v26, 1, v9))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v11((uint64_t)v25, (uint64_t)v26, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for EventRecord.DecodedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;

  if (a1 != a2)
  {
    sub_23E9011E4(a1, type metadata accessor for EventRecord.DecodedEvent);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      type metadata accessor for SomeAccessoryEvent();
      v27 = (char *)&loc_23E91E758 + 4 * word_23E949348[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v4 = sub_23E9459A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    v5 = type metadata accessor for EventBase(0);
    v6 = *(int *)(v5 + 20);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_23E945A10();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v11(v7, v8, v9);
    *(_BYTE *)(a1 + *(int *)(v5 + 24)) = *(_BYTE *)(a2 + *(int *)(v5 + 24));
    v12 = (int *)type metadata accessor for AccessoryEventBase(0);
    v11(a1 + v12[5], a2 + v12[5], v9);
    v13 = v12[6];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    *v14 = *v15;
    v14[1] = v15[1];
    v16 = v12[7];
    v17 = a1 + v16;
    v18 = a2 + v16;
    swift_bridgeObjectRetain();
    v11(v17, v18, v9);
    v19 = v12[8];
    v20 = (_QWORD *)(a1 + v19);
    v21 = (_QWORD *)(a2 + v19);
    *v20 = *v21;
    v20[1] = v21[1];
    v22 = v12[9];
    v23 = (void *)(a1 + v22);
    v24 = (const void *)(a2 + v22);
    v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v25(v24, 1, v9))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v11((uint64_t)v23, (uint64_t)v24, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for EventRecord.DecodedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  char *v17;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for SomeAccessoryEvent();
    v17 = (char *)&loc_23E91F310 + 4 * word_23E949356[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v4 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for EventBase(0);
  v6 = *(int *)(v5 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23E945A10();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(v5 + 24)) = *(_BYTE *)(a2 + *(int *)(v5 + 24));
  v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11(a1 + v12[5], a2 + v12[5], v9);
  *(_OWORD *)(a1 + v12[6]) = *(_OWORD *)(a2 + v12[6]);
  v11(a1 + v12[7], a2 + v12[7], v9);
  *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
  v13 = v12[9];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v11((uint64_t)v14, (uint64_t)v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for EventRecord.DecodedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  char *v17;

  if (a1 != a2)
  {
    sub_23E9011E4(a1, type metadata accessor for EventRecord.DecodedEvent);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      type metadata accessor for SomeAccessoryEvent();
      v17 = (char *)&loc_23E91FD90 + 4 * word_23E949364[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v4 = sub_23E9459A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    v5 = type metadata accessor for EventBase(0);
    v6 = *(int *)(v5 + 20);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_23E945A10();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    v11(v7, v8, v9);
    *(_BYTE *)(a1 + *(int *)(v5 + 24)) = *(_BYTE *)(a2 + *(int *)(v5 + 24));
    v12 = (int *)type metadata accessor for AccessoryEventBase(0);
    v11(a1 + v12[5], a2 + v12[5], v9);
    *(_OWORD *)(a1 + v12[6]) = *(_OWORD *)(a2 + v12[6]);
    v11(a1 + v12[7], a2 + v12[7], v9);
    *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
    v13 = v12[9];
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v11((uint64_t)v14, (uint64_t)v15, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SomeAccessoryEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for SomeAccessoryEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23E920698()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23E9206A8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SomeAccessoryEvent();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FakeEvent();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23E920728(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0250);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E946028();
  __break(1u);
  return result;
}

uint64_t sub_23E920894(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_256DA02B0);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_23E946028();
  __break(1u);
  return result;
}

uint64_t sub_23E920A7C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0260);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E946028();
  __break(1u);
  return result;
}

uint64_t sub_23E920BE4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F8F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E946028();
  __break(1u);
  return result;
}

uint64_t sub_23E920D54()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23E920DC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_23E920E30(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_23E920E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_23E920E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_23E920EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_23E920ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_23E920F00(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23E920FB0 + 4 * byte_23E9495D0[(v7 - 1)]))();
}

void sub_23E921000(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for UncheckedSendable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UncheckedSendable);
}

uint64_t dispatch thunk of EventProtocol.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventProtocol.homeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventProtocol.category.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_23E9211EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E9211FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for EventBase(uint64_t a1)
{
  return sub_23E90A0D8(a1, qword_256DA0390);
}

void *sub_23E921224()
{
  return &unk_250F17F58;
}

void *sub_23E921230()
{
  return &unk_250F18048;
}

void *sub_23E92123C()
{
  return &unk_250F18018;
}

void *sub_23E921248()
{
  return &unk_250F17F88;
}

uint64_t sub_23E921254(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  char v17;
  char v18;
  char v19;
  char v20;

  v16[0] = a5;
  v7 = v5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_23E9461FC();
  v20 = 0;
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256DA0408, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v13 = v16[1];
  sub_23E9460C4();
  if (!v13)
  {
    v14 = ((uint64_t (*)(_QWORD))v16[0])(0);
    v19 = 1;
    sub_23E945A10();
    sub_23E8E99C8(&qword_256DA0410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23E9460C4();
    v18 = *(_BYTE *)(v7 + *(int *)(v14 + 24));
    v17 = 2;
    sub_23E921E90();
    sub_23E9460C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_23E921430@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(void);
  _QWORD *v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v35 = a4;
  v26 = a5;
  v31 = sub_23E945A10();
  v28 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v30 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23E9459A4();
  v29 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v33 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v12 = (void (*)(void))((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = a3;
  v13 = a3(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v35();
  v35 = v12;
  v16 = (uint64_t)v36;
  sub_23E9461F0();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = v30;
  v17 = v31;
  v25 = v15;
  v36 = a1;
  v40 = 0;
  sub_23E8E99C8(&qword_256DA03E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v20 = v32;
  v19 = v33;
  sub_23E946088();
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v25, v19, v20);
  v39 = 1;
  sub_23E8E99C8(&qword_256DA03F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E946088();
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v25[*(int *)(v13 + 20)], v18, v17);
  v37 = 2;
  sub_23E921E4C();
  sub_23E946088();
  (*(void (**)(void (*)(void), uint64_t))(v10 + 8))(v35, v34);
  v22 = (uint64_t)v25;
  v21 = v26;
  v25[*(int *)(v13 + 24)] = v38;
  v23 = v27;
  sub_23E9011A0(v22, v21, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_23E9011E4(v22, v23);
}

uint64_t sub_23E9217A4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E656449656D6F68;
  if (*v0 != 1)
    v1 = 0x79726F6765746163;
  if (*v0)
    return v1;
  else
    return 1702125924;
}

uint64_t sub_23E921804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E922574(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E921828(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23E921834()
{
  sub_23E922724();
  return sub_23E946208();
}

uint64_t sub_23E92185C()
{
  sub_23E922724();
  return sub_23E946214();
}

uint64_t sub_23E921884@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E921430(a1, &qword_256DA04E8, type metadata accessor for EventBaseLegacy, (void (*)(void))sub_23E922724, a2);
}

uint64_t sub_23E9218B8(_QWORD *a1)
{
  return sub_23E921254(a1, &qword_256DA04D8, (void (*)(void))sub_23E922724, (uint64_t)&type metadata for EventBaseLegacy.CodingKeys, (uint64_t)type metadata accessor for EventBaseLegacy);
}

uint64_t sub_23E9218FC(char *a1, char *a2)
{
  return sub_23E8E9E74(*a1, *a2);
}

uint64_t sub_23E921908()
{
  sub_23E9461B4();
  sub_23E945B6C();
  swift_bridgeObjectRelease();
  return sub_23E9461E4();
}

uint64_t sub_23E921960()
{
  sub_23E945B6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E92198C()
{
  sub_23E9461B4();
  sub_23E945B6C();
  swift_bridgeObjectRelease();
  return sub_23E9461E4();
}

uint64_t sub_23E9219E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E9226DC();
  *a1 = result;
  return result;
}

void sub_23E921A0C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_23E949A50[*v1];
  a1[1] = 0xE100000000000000;
}

uint64_t sub_23E921A28()
{
  char *v0;

  return qword_23E949A50[*v0];
}

uint64_t sub_23E921A40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E9226DC();
  *a1 = result;
  return result;
}

uint64_t sub_23E921A64()
{
  sub_23E921E08();
  return sub_23E946208();
}

uint64_t sub_23E921A8C()
{
  sub_23E921E08();
  return sub_23E946214();
}

uint64_t sub_23E921AB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E921430(a1, &qword_256DA03D8, type metadata accessor for EventBase, (void (*)(void))sub_23E921E08, a2);
}

uint64_t sub_23E921AE8(_QWORD *a1)
{
  return sub_23E921254(a1, &qword_256DA0400, (void (*)(void))sub_23E921E08, (uint64_t)&type metadata for EventBase.CodingKeys, (uint64_t)type metadata accessor for EventBase);
}

uint64_t sub_23E921B1C()
{
  sub_23E9461B4();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  sub_23E945A10();
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t sub_23E921BEC()
{
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  sub_23E945A10();
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  return sub_23E9461C0();
}

uint64_t sub_23E921CAC()
{
  sub_23E9461B4();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  sub_23E945A10();
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  return sub_23E9461E4();
}

BOOL sub_23E921D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_23E94598C() & 1) != 0
      && (sub_23E9459D4() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_23E921DDC()
{
  return sub_23E8E99C8(&qword_256DA03D0, type metadata accessor for EventBase, (uint64_t)&unk_23E949678);
}

unint64_t sub_23E921E08()
{
  unint64_t result;

  result = qword_256DA03E0;
  if (!qword_256DA03E0)
  {
    result = MEMORY[0x24265637C](&unk_23E9498F4, &type metadata for EventBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA03E0);
  }
  return result;
}

unint64_t sub_23E921E4C()
{
  unint64_t result;

  result = qword_256DA03F8;
  if (!qword_256DA03F8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for EventCategory, &type metadata for EventCategory);
    atomic_store(result, (unint64_t *)&qword_256DA03F8);
  }
  return result;
}

unint64_t sub_23E921E90()
{
  unint64_t result;

  result = qword_256DA0418;
  if (!qword_256DA0418)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for EventCategory, &type metadata for EventCategory);
    atomic_store(result, (unint64_t *)&qword_256DA0418);
  }
  return result;
}

void *sub_23E921ED4()
{
  return &unk_250F17FB8;
}

void *sub_23E921EE0()
{
  return &unk_250F18078;
}

void *sub_23E921EEC()
{
  return &unk_250F17FE8;
}

_QWORD *sub_23E921EF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E9459A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E945A10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_23E921FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23E922010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23E9220A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23E922130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23E9221C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23E922250()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_23E9459A4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23E945A10();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 3)
    return v14 - 2;
  else
    return 0;
}

uint64_t sub_23E922304()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_23E9459A4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_23E945A10();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  return result;
}

uint64_t type metadata accessor for EventBaseLegacy(uint64_t a1)
{
  return sub_23E90A0D8(a1, qword_256DA0478);
}

uint64_t sub_23E9223CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E9459A4();
  if (v1 <= 0x3F)
  {
    result = sub_23E945A10();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventBase.CodingKeys()
{
  return &type metadata for EventBase.CodingKeys;
}

unint64_t sub_23E922474()
{
  unint64_t result;

  result = qword_256DA04B8;
  if (!qword_256DA04B8)
  {
    result = MEMORY[0x24265637C](&unk_23E949814, &type metadata for EventBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA04B8);
  }
  return result;
}

uint64_t sub_23E9224B8()
{
  return sub_23E8E99C8(&qword_256DA04C0, type metadata accessor for EventBaseLegacy, (uint64_t)&unk_23E94983C);
}

unint64_t sub_23E9224E8()
{
  unint64_t result;

  result = qword_256DA04C8;
  if (!qword_256DA04C8)
  {
    result = MEMORY[0x24265637C](&unk_23E94974C, &type metadata for EventBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA04C8);
  }
  return result;
}

unint64_t sub_23E922530()
{
  unint64_t result;

  result = qword_256DA04D0;
  if (!qword_256DA04D0)
  {
    result = MEMORY[0x24265637C](&unk_23E949774, &type metadata for EventBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA04D0);
  }
  return result;
}

uint64_t sub_23E922574(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656449656D6F68 && a2 == 0xEE00726569666974 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E946130();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23E9226DC()
{
  unint64_t v0;

  v0 = sub_23E94604C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_23E922724()
{
  unint64_t result;

  result = qword_256DA04E0;
  if (!qword_256DA04E0)
  {
    result = MEMORY[0x24265637C](&unk_23E9499FC, &type metadata for EventBaseLegacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA04E0);
  }
  return result;
}

uint64_t _s13HomeKitEvents9EventBaseV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E9227B4 + 4 * byte_23E949615[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E9227E8 + 4 * byte_23E949610[v4]))();
}

uint64_t sub_23E9227E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E9227F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E9227F8);
  return result;
}

uint64_t sub_23E922804(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E92280CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E922810(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E922818(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventBaseLegacy.CodingKeys()
{
  return &type metadata for EventBaseLegacy.CodingKeys;
}

unint64_t sub_23E922838()
{
  unint64_t result;

  result = qword_256DA04F0;
  if (!qword_256DA04F0)
  {
    result = MEMORY[0x24265637C](&unk_23E9499D4, &type metadata for EventBaseLegacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA04F0);
  }
  return result;
}

unint64_t sub_23E922880()
{
  unint64_t result;

  result = qword_256DA04F8;
  if (!qword_256DA04F8)
  {
    result = MEMORY[0x24265637C](&unk_23E949944, &type metadata for EventBaseLegacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA04F8);
  }
  return result;
}

unint64_t sub_23E9228C8()
{
  unint64_t result;

  result = qword_256DA0500;
  if (!qword_256DA0500)
  {
    result = MEMORY[0x24265637C](&unk_23E94996C, &type metadata for EventBaseLegacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA0500);
  }
  return result;
}

uint64_t sub_23E92290C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_23E91C294(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9ED28);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E91C294(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_23E91C294(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_23E9238F0(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23E922A34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEA0);
  v2 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_23E91C2B0(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v12 = *(_QWORD *)(v2 + 72);
    v10 = v17;
    do
    {
      sub_23E923AA8(v11, (uint64_t)v4);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E91C2B0(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v17;
      }
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_23E91C2B0(v13 > 1, v14 + 1, 1);
        v10 = v17;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      sub_23E923AF0((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_23E922BE4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_23E922C10()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[2];
  if (v1)
  {
    objc_msgSend(v1, sel_invalidate);
    v2 = (void *)v0[2];
  }
  else
  {
    v2 = 0;
  }

  sub_23E8ECC14(v0[3]);
  sub_23E8ECC14(v0[5]);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCClient()
{
  return objc_opt_self();
}

uint64_t sub_23E922C80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  void (*v11)(uint64_t);
  uint64_t v12;

  v3 = sub_23E945A34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static LoggedObject.logger.getter(a2, (uint64_t)&off_250F1B230, (uint64_t)v6);
  v7 = sub_23E945A1C();
  v8 = sub_23E945DE8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23E8E7000, v7, v8, "Connection invalidated", v9, 2u);
    MEMORY[0x24265643C](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = *(void (**)(uint64_t))(result + 24);
    sub_23E923A70((uint64_t)v11);
    result = swift_release();
    if (v11)
    {
      v11(result);
      return sub_23E8ECC14((uint64_t)v11);
    }
  }
  return result;
}

uint64_t sub_23E922DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  void (*v11)(uint64_t);
  uint64_t v12;

  v3 = sub_23E945A34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static LoggedObject.logger.getter(a2, (uint64_t)&off_250F1B230, (uint64_t)v6);
  v7 = sub_23E945A1C();
  v8 = sub_23E945E00();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23E8E7000, v7, v8, "Connection interrupted", v9, 2u);
    MEMORY[0x24265643C](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = *(void (**)(uint64_t))(result + 40);
    sub_23E923A70((uint64_t)v11);
    result = swift_release();
    if (v11)
    {
      v11(result);
      return sub_23E8ECC14((uint64_t)v11);
    }
  }
  return result;
}

void sub_23E922F40()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  uint64_t (*v20)();
  uint64_t v21;

  if (!v0[2])
  {
    v1 = *v0;
    v2 = objc_allocWithZone(MEMORY[0x24BDD1988]);
    v3 = (void *)sub_23E945B0C();
    v4 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v3, 0);

    v5 = (void *)objc_opt_self();
    v6 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_256DAD9B0);
    objc_msgSend(v4, sel_setExportedInterface_, v6);

    v7 = swift_allocObject();
    swift_weakInit();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v1;
    v20 = sub_23E923B38;
    v21 = v8;
    v9 = MEMORY[0x24BDAC760];
    v16 = MEMORY[0x24BDAC760];
    v17 = 1107296256;
    v18 = sub_23E922BE4;
    v19 = &block_descriptor_31;
    v10 = _Block_copy(&v16);
    swift_release();
    objc_msgSend(v4, sel_setInvalidationHandler_, v10);
    _Block_release(v10);
    v11 = swift_allocObject();
    swift_weakInit();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = v1;
    v20 = sub_23E923B3C;
    v21 = v12;
    v16 = v9;
    v17 = 1107296256;
    v18 = sub_23E922BE4;
    v19 = &block_descriptor_39;
    v13 = _Block_copy(&v16);
    swift_release();
    objc_msgSend(v4, sel_setInterruptionHandler_, v13);
    _Block_release(v13);
    v14 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_256DAE230);
    objc_msgSend(v4, sel_setRemoteObjectInterface_, v14);

    objc_msgSend(v4, sel_resume);
    v15 = (void *)v0[2];
    v0[2] = (uint64_t)v4;

  }
}

void sub_23E9231B4()
{
  sub_23E9235B8((uint64_t)&unk_250F1B370, (uint64_t)sub_23E923A90, (uint64_t)&block_descriptor_23, &qword_256DA0870);
}

void sub_23E9231D8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t type metadata accessor for XPCPublicClient()
{
  return objc_opt_self();
}

void sub_23E92324C()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t inited;
  void *v16;
  uint64_t aBlock;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;

  if (!v0[2])
  {
    v1 = *v0;
    v2 = objc_allocWithZone(MEMORY[0x24BDD1988]);
    v3 = (void *)sub_23E945B0C();
    v4 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v3, 0);

    v5 = (void *)objc_opt_self();
    v6 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_256DAD9B0);
    objc_msgSend(v4, sel_setExportedInterface_, v6);

    v7 = swift_allocObject();
    swift_weakInit();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v1;
    v21 = sub_23E923924;
    v22 = v8;
    v9 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v18 = 1107296256;
    v19 = sub_23E922BE4;
    v20 = &block_descriptor_10;
    v10 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v4, sel_setInvalidationHandler_, v10);
    _Block_release(v10);
    v11 = swift_allocObject();
    swift_weakInit();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = v1;
    v21 = sub_23E923950;
    v22 = v12;
    aBlock = v9;
    v18 = 1107296256;
    v19 = sub_23E922BE4;
    v20 = &block_descriptor_17;
    v13 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v4, sel_setInterruptionHandler_, v13);
    _Block_release(v13);
    v14 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_256DAE290);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9ED20);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E949A70;
    *(_QWORD *)(inited + 32) = sub_23E901318(0, &qword_256DA0848);
    *(_QWORD *)(inited + 40) = sub_23E901318(0, &qword_256DA0850);
    *(_QWORD *)(inited + 48) = sub_23E901318(0, &qword_256DA0858);
    *(_QWORD *)(inited + 56) = sub_23E901318(0, &qword_256DA0860);
    *(_QWORD *)(inited + 64) = sub_23E901318(0, &qword_256DA0868);
    sub_23E923958((uint64_t)v14, inited);
    swift_setDeallocating();
    objc_msgSend(v4, sel_setRemoteObjectInterface_, v14);
    objc_msgSend(v4, sel_resume);

    v16 = (void *)v0[2];
    v0[2] = (uint64_t)v4;

  }
}

void sub_23E923594()
{
  sub_23E9235B8((uint64_t)&unk_250F1B258, (uint64_t)sub_23E923B40, (uint64_t)&block_descriptor_10, &qword_256DA0840);
}

void sub_23E9235B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  __int128 v14;
  __int128 aBlock;
  void (*v16)(uint64_t, void *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = (void *)v4[2];
  if (v5)
  {
    v9 = *v4;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v9;
    v18 = a2;
    v19 = v10;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v16 = sub_23E9231D8;
    v17 = a3;
    v11 = _Block_copy(&aBlock);
    v12 = v5;
    swift_release();
    v13 = objc_msgSend(v12, sel_remoteObjectProxyWithErrorHandler_, v11);
    _Block_release(v11);

    sub_23E945F20();
    swift_unknownObjectRelease();
    sub_23E9238F0(&aBlock, &v14);
    __swift_instantiateConcreteTypeFromMangledName(a4);
    swift_dynamicCast();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23E9236D4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint8_t *v17;
  _QWORD v19[2];

  v4 = sub_23E945A34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static LoggedObject.logger.getter(a2, (uint64_t)&off_250F1B230, (uint64_t)v7);
  v8 = a1;
  v9 = a1;
  v10 = sub_23E945A1C();
  v11 = sub_23E945E00();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v19[0] = v4;
    v13 = (uint8_t *)v12;
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138543362;
    v15 = a1;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    v19[1] = v16;
    sub_23E945F08();
    *v14 = v16;

    _os_log_impl(&dword_23E8E7000, v10, v11, "Failed to construct proxy: %{public}@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v14, -1, -1);
    v17 = v13;
    v4 = v19[0];
    MEMORY[0x24265643C](v17, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t type metadata accessor for XPCHMVUtilClient()
{
  return objc_opt_self();
}

uint64_t sub_23E9238C8()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

_OWORD *sub_23E9238F0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23E923900()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E923924()
{
  uint64_t v0;

  return sub_23E922C80(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23E92392C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E923950()
{
  uint64_t v0;

  return sub_23E922DE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_23E923958(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;

  sub_23E92290C(a2);
  v2 = objc_allocWithZone(MEMORY[0x24BDBCF20]);
  v3 = (void *)sub_23E945C14();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithArray_, v3);

  sub_23E945DAC();
  __break(1u);
}

uint64_t sub_23E923A70(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23E923A80()
{
  return swift_deallocObject();
}

uint64_t sub_23E923A90(void *a1)
{
  uint64_t v1;

  return sub_23E9236D4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23E923AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EEA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E923AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EF28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static HMVCommands.createEvent(eventData:uploadOnly:saveOnly:skipZoneCreation:)(uint64_t a1, uint64_t a2, char a3, char a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 66) = a5;
  *(_BYTE *)(v5 + 65) = a4;
  *(_BYTE *)(v5 + 64) = a3;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23E923B9C()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  v1 = *(_BYTE *)(v0 + 66);
  v2 = *(_BYTE *)(v0 + 65);
  v3 = *(_BYTE *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F8F0);
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v6 + 16) = xmmword_23E947240;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v5;
  sub_23E91B57C(v4, v5);
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_BYTE *)(v7 + 24) = v3;
  *(_BYTE *)(v7 + 25) = v2;
  *(_BYTE *)(v7 + 26) = v1;
  v10 = (uint64_t (*)(void))((char *)&dword_256D9E818 + dword_256D9E818);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v8;
  *v8 = v0;
  v8[1] = sub_23E923C80;
  return v10();
}

uint64_t sub_23E923C80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E923CEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E923D20()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static HMVCommands.createEvents(eventsData:uploadOnly:saveOnly:skipZoneCreation:)(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 50) = a4;
  *(_BYTE *)(v4 + 49) = a3;
  *(_BYTE *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E923D80()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 50);
  v2 = *(_BYTE *)(v0 + 49);
  v3 = *(_BYTE *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v5 + 16) = v4;
  *(_BYTE *)(v5 + 24) = v3;
  *(_BYTE *)(v5 + 25) = v2;
  *(_BYTE *)(v5 + 26) = v1;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256D9E818 + dword_256D9E818);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v6;
  *v6 = v0;
  v6[1] = sub_23E8EABD0;
  return v8((uint64_t)v8, (uint64_t)sub_23E92410C, v5);
}

void sub_23E923E24(void *a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  void *v11;
  void *v12;
  _QWORD v13[6];

  v11 = (void *)sub_23E945C14();
  v13[4] = sub_23E9240C0;
  v13[5] = a2;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_23E924584;
  v13[3] = &block_descriptor_11;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilCreateEventsWithEventsData_uploadOnly_saveOnly_skipZoneCreation_reply_, v11, a4 & 1, a5 & 1, a6 & 1, v12);
  _Block_release(v12);

}

void sub_23E923F0C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23E923E24(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), *(_BYTE *)(v2 + 25), *(_BYTE *)(v2 + 26));
}

void sub_23E923F20(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256DA0888, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E9240C0(void *a1)
{
  uint64_t v1;

  sub_23E923F20(a1, v1);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_23E9240E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for HMVCommands()
{
  return &type metadata for HMVCommands;
}

uint64_t storeEnumTagSinglePayload for HMVCommandError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E924160 + 4 * byte_23E949AF8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E924180 + 4 * byte_23E949AFD[v4]))();
}

_BYTE *sub_23E924160(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E924180(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E924188(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E924190(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E924198(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E9241A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HMVCommandError()
{
  return &type metadata for HMVCommandError;
}

unint64_t sub_23E9241C0()
{
  unint64_t result;

  result = qword_256DA0890;
  if (!qword_256DA0890)
  {
    result = MEMORY[0x24265637C](&unk_23E949B74, &type metadata for HMVCommandError);
    atomic_store(result, (unint64_t *)&qword_256DA0890);
  }
  return result;
}

uint64_t static HMVCommands.uploadEvents(batchCount:)(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 48) = a2;
  *(_QWORD *)(v2 + 16) = a1;
  return swift_task_switch();
}

void sub_23E924220()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 16);
  if ((v1 & 1) != 0 || v2 >= 1)
  {
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v3;
    *(_QWORD *)(v3 + 16) = v2;
    *(_BYTE *)(v3 + 24) = v1 & 1;
    v5 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256D9E818 + dword_256D9E818);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v4;
    *v4 = v0;
    v4[1] = sub_23E8EABD0;
    v5((uint64_t)v5, (uint64_t)sub_23E92438C, v3);
  }
  else
  {
    __break(1u);
  }
}

void sub_23E9242C0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v6;
  void *v7;
  _QWORD v8[6];

  if ((a4 & 1) != 0)
    v6 = 0;
  else
    v6 = (void *)sub_23E945DB8();
  v8[4] = sub_23E924538;
  v8[5] = a2;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_23E924584;
  v8[3] = &block_descriptor_12;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilUploadEventsWithBatchCount_reply_, v6, v7);
  _Block_release(v7);

}

void sub_23E92438C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23E9242C0(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

void sub_23E924398(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9ED48, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E924538(void *a1)
{
  uint64_t v1;

  sub_23E924398(a1, v1);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_23E92455C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23E924584(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_23E9245D8(void *a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v6;
  _QWORD v7[6];

  v3 = a3;
  if (a3)
  {
    sub_23E945A10();
    v3 = (void *)sub_23E945C14();
  }
  v7[4] = sub_23E92484C;
  v7[5] = a2;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_23E924584;
  v7[3] = &block_descriptor_13;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_clearEventsWithHomes_reply_, v3, v6);
  _Block_release(v6);

}

void sub_23E9246AC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E808, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E92486C;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E92484C(void *a1)
{
  uint64_t v1;

  sub_23E9246AC(a1, v1);
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_23E92486C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
  return sub_23E945CBC();
}

uint64_t sub_23E9248A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

_QWORD *initializeBufferWithCopyOfBuffer for HomeKitEventsError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HomeKitEventsError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for HomeKitEventsError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for HomeKitEventsError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeKitEventsError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HomeKitEventsError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_23E924A1C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23E924A34(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeKitEventsError()
{
  return &type metadata for HomeKitEventsError;
}

HomeKitEvents::GarageDoorEvent::State_optional __swiftcall GarageDoorEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 7;
  if ((unint64_t)rawValue < 7)
    v2 = rawValue;
  *v1 = v2;
  return (HomeKitEvents::GarageDoorEvent::State_optional)rawValue;
}

void *static GarageDoorEvent.State.allCases.getter()
{
  return &unk_250F184E0;
}

uint64_t GarageDoorEvent.State.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HomeKitEvents::GarageDoorEvent::State_optional sub_23E924A90(Swift::Int *a1)
{
  return GarageDoorEvent.State.init(rawValue:)(*a1);
}

void sub_23E924A98(_QWORD *a1@<X8>)
{
  *a1 = &unk_250F184E0;
}

uint64_t GarageDoorEvent.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for GarageDoorEvent();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for GarageDoorEvent()
{
  uint64_t result;

  result = qword_256DA09E8;
  if (!qword_256DA09E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t GarageDoorEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t GarageDoorEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GarageDoorEvent.category.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventBase(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t GarageDoorEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GarageDoorEvent.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GarageDoorEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GarageDoorEvent.accessoryName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GarageDoorEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);
  return sub_23E8EED0C(v3, a1);
}

uint64_t GarageDoorEvent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for GarageDoorEvent();
  return sub_23E9461C0();
}

BOOL static GarageDoorEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2))
    return 0;
  v4 = type metadata accessor for GarageDoorEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t GarageDoorEvent.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9461B4();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for GarageDoorEvent();
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t GarageDoorEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  int *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t result;
  char v29;

  v29 = *a10;
  v18 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = type metadata accessor for EventBase(0);
  v20 = a9 + *(int *)(v19 + 20);
  v21 = sub_23E945A10();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
  v22(v20, a2, v21);
  *(_BYTE *)(a9 + *(int *)(v19 + 24)) = 1;
  v23 = (int *)type metadata accessor for AccessoryEventBase(0);
  v22(a9 + v23[5], a3, v21);
  v24 = (_QWORD *)(a9 + v23[6]);
  *v24 = a4;
  v24[1] = a5;
  v22(a9 + v23[7], a6, v21);
  v25 = (_QWORD *)(a9 + v23[8]);
  *v25 = a7;
  v25[1] = a8;
  sub_23E8EF720(a11, a9 + v23[9]);
  result = type metadata accessor for GarageDoorEvent();
  *(_BYTE *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t GarageDoorEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  char v9;
  _BYTE v11[40];

  v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E8EF768((uint64_t)a1, (uint64_t)v11);
  sub_23E937208((uint64_t)v11, (uint64_t)v7);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_23E8EE880(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v11[0];
  sub_23E8EF808((uint64_t)v7, a2);
  result = type metadata accessor for GarageDoorEvent();
  *(_BYTE *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t GarageDoorEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EA98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = sub_23E937628(a1);
  if (!v2)
  {
    v9[15] = *(_BYTE *)(v1 + *(int *)(type metadata accessor for GarageDoorEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_23E8EA698();
    sub_23E9461FC();
    v9[14] = 1;
    sub_23E925608();
    sub_23E9460C4();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_23E925534@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GarageDoorEvent.init(from:)(a1, a2);
}

uint64_t sub_23E925548(_QWORD *a1)
{
  return GarageDoorEvent.encode(to:)(a1);
}

uint64_t sub_23E925560()
{
  sub_23E925C88();
  return sub_23E945C08();
}

uint64_t sub_23E9255BC()
{
  sub_23E925C88();
  return sub_23E945BFC();
}

unint64_t sub_23E925608()
{
  unint64_t result;

  result = qword_256DA08A0;
  if (!qword_256DA08A0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for GarageDoorEvent.State, &type metadata for GarageDoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA08A0);
  }
  return result;
}

unint64_t sub_23E925650()
{
  unint64_t result;

  result = qword_256DA08A8;
  if (!qword_256DA08A8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for GarageDoorEvent.State, &type metadata for GarageDoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA08A8);
  }
  return result;
}

unint64_t sub_23E925698()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256DA08B0;
  if (!qword_256DA08B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256DA08B8);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256DA08B0);
  }
  return result;
}

unint64_t sub_23E9256E8()
{
  unint64_t result;

  result = qword_256DA08C0;
  if (!qword_256DA08C0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for GarageDoorEvent.State, &type metadata for GarageDoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA08C0);
  }
  return result;
}

uint64_t sub_23E92572C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256DA0288, (uint64_t (*)(uint64_t))type metadata accessor for GarageDoorEvent, (uint64_t)&protocol conformance descriptor for GarageDoorEvent);
  a1[2] = sub_23E8E99C8(&qword_256DA0920, (uint64_t (*)(uint64_t))type metadata accessor for GarageDoorEvent, (uint64_t)&protocol conformance descriptor for GarageDoorEvent);
  result = sub_23E8E99C8(&qword_256DA0928, (uint64_t (*)(uint64_t))type metadata accessor for GarageDoorEvent, (uint64_t)&protocol conformance descriptor for GarageDoorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E9257A4()
{
  return sub_23E8E99C8(&qword_256DA0930, (uint64_t (*)(uint64_t))type metadata accessor for GarageDoorEvent, (uint64_t)&protocol conformance descriptor for GarageDoorEvent);
}

uint64_t sub_23E9257D0(uint64_t a1)
{
  uint64_t result;

  result = sub_23E8E99C8(&qword_256DA0918, (uint64_t (*)(uint64_t))type metadata accessor for GarageDoorEvent, (uint64_t)&protocol conformance descriptor for GarageDoorEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23E92580C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256DA0938, (uint64_t (*)(uint64_t))type metadata accessor for GarageDoorEvent, (uint64_t)&protocol conformance descriptor for GarageDoorEvent);
  a1[2] = sub_23E8E99C8(&qword_256DA0940, (uint64_t (*)(uint64_t))type metadata accessor for GarageDoorEvent, (uint64_t)&unk_23E949E14);
  result = sub_23E8E99C8(&qword_256DA0948, (uint64_t (*)(uint64_t))type metadata accessor for GarageDoorEvent, (uint64_t)&protocol conformance descriptor for GarageDoorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E925884()
{
  return sub_23E8E99C8(&qword_256DA0938, (uint64_t (*)(uint64_t))type metadata accessor for GarageDoorEvent, (uint64_t)&protocol conformance descriptor for GarageDoorEvent);
}

unint64_t sub_23E9258B0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23E8F0A04();
  a1[2] = sub_23E925608();
  result = sub_23E9258E4();
  a1[3] = result;
  return result;
}

unint64_t sub_23E9258E4()
{
  unint64_t result;

  result = qword_256DA0980;
  if (!qword_256DA0980)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for GarageDoorEvent.State, &type metadata for GarageDoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0980);
  }
  return result;
}

unint64_t sub_23E925928(uint64_t a1)
{
  unint64_t result;

  result = sub_23E92594C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23E92594C()
{
  unint64_t result;

  result = qword_256DA0988;
  if (!qword_256DA0988)
  {
    result = MEMORY[0x24265637C](&unk_23E949EFC, &type metadata for GarageDoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0988);
  }
  return result;
}

unint64_t sub_23E925990(uint64_t a1)
{
  unint64_t result;

  result = sub_23E9256E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GarageDoorEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E9259C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 7)
    return v9 - 6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GarageDoorEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E925A44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryEventBaseLegacy(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 6;
  return result;
}

uint64_t sub_23E925ABC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for GarageDoorEvent.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GarageDoorEvent.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23E925C08 + 4 * byte_23E949C45[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23E925C3C + 4 * byte_23E949C40[v4]))();
}

uint64_t sub_23E925C3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E925C44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E925C4CLL);
  return result;
}

uint64_t sub_23E925C58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E925C60);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23E925C64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E925C6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GarageDoorEvent.State()
{
  return &type metadata for GarageDoorEvent.State;
}

unint64_t sub_23E925C88()
{
  unint64_t result;

  result = qword_256DA0A20;
  if (!qword_256DA0A20)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for GarageDoorEvent.State, &type metadata for GarageDoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0A20);
  }
  return result;
}

HomeKitEvents::DoorEvent::State_optional __swiftcall DoorEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (HomeKitEvents::DoorEvent::State_optional)rawValue;
}

void *static DoorEvent.State.allCases.getter()
{
  return &unk_250F18508;
}

uint64_t DoorEvent.State.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HomeKitEvents::DoorEvent::State_optional sub_23E925CF8(Swift::Int *a1)
{
  return DoorEvent.State.init(rawValue:)(*a1);
}

void sub_23E925D00(_QWORD *a1@<X8>)
{
  *a1 = &unk_250F18530;
}

uint64_t DoorEvent.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DoorEvent();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for DoorEvent()
{
  uint64_t result;

  result = qword_256DA0B70;
  if (!qword_256DA0B70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DoorEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DoorEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DoorEvent.category.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventBase(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t DoorEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DoorEvent.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DoorEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DoorEvent.accessoryName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DoorEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);
  return sub_23E8EED0C(v3, a1);
}

uint64_t DoorEvent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for DoorEvent();
  return sub_23E9461C0();
}

BOOL static DoorEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2))
    return 0;
  v4 = type metadata accessor for DoorEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t DoorEvent.hashValue.getter()
{
  sub_23E9461B4();
  DoorEvent.hash(into:)();
  return sub_23E9461E4();
}

uint64_t sub_23E926230()
{
  sub_23E9461B4();
  DoorEvent.hash(into:)();
  return sub_23E9461E4();
}

uint64_t sub_23E926270()
{
  sub_23E9461B4();
  DoorEvent.hash(into:)();
  return sub_23E9461E4();
}

uint64_t DoorEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  int *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t result;
  char v29;

  v29 = *a10;
  v18 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = type metadata accessor for EventBase(0);
  v20 = a9 + *(int *)(v19 + 20);
  v21 = sub_23E945A10();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
  v22(v20, a2, v21);
  *(_BYTE *)(a9 + *(int *)(v19 + 24)) = 1;
  v23 = (int *)type metadata accessor for AccessoryEventBase(0);
  v22(a9 + v23[5], a3, v21);
  v24 = (_QWORD *)(a9 + v23[6]);
  *v24 = a4;
  v24[1] = a5;
  v22(a9 + v23[7], a6, v21);
  v25 = (_QWORD *)(a9 + v23[8]);
  *v25 = a7;
  v25[1] = a8;
  sub_23E8EF720(a11, a9 + v23[9]);
  result = type metadata accessor for DoorEvent();
  *(_BYTE *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t DoorEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  char v9;
  _BYTE v11[40];

  v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E8EF768((uint64_t)a1, (uint64_t)v11);
  sub_23E937208((uint64_t)v11, (uint64_t)v7);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_23E8EE8A4(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v11[0];
  sub_23E8EF808((uint64_t)v7, a2);
  result = type metadata accessor for DoorEvent();
  *(_BYTE *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t DoorEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EA98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = sub_23E937628(a1);
  if (!v2)
  {
    v9[15] = *(_BYTE *)(v1 + *(int *)(type metadata accessor for DoorEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_23E8EA698();
    sub_23E9461FC();
    v9[14] = 1;
    sub_23E9266D4();
    sub_23E9460C4();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_23E926600@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DoorEvent.init(from:)(a1, a2);
}

uint64_t sub_23E926614(_QWORD *a1)
{
  return DoorEvent.encode(to:)(a1);
}

uint64_t sub_23E92662C()
{
  sub_23E926CC4();
  return sub_23E945C08();
}

uint64_t sub_23E926688()
{
  sub_23E926CC4();
  return sub_23E945BFC();
}

unint64_t sub_23E9266D4()
{
  unint64_t result;

  result = qword_256DA0A28;
  if (!qword_256DA0A28)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for DoorEvent.State, &type metadata for DoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0A28);
  }
  return result;
}

unint64_t sub_23E92671C()
{
  unint64_t result;

  result = qword_256DA0A30;
  if (!qword_256DA0A30)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for DoorEvent.State, &type metadata for DoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0A30);
  }
  return result;
}

unint64_t sub_23E926764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256DA0A38;
  if (!qword_256DA0A38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256DA0A40);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256DA0A38);
  }
  return result;
}

unint64_t sub_23E9267B4()
{
  unint64_t result;

  result = qword_256DA0A48;
  if (!qword_256DA0A48)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for DoorEvent.State, &type metadata for DoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0A48);
  }
  return result;
}

uint64_t sub_23E9267F8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256DA0290, (uint64_t (*)(uint64_t))type metadata accessor for DoorEvent, (uint64_t)&protocol conformance descriptor for DoorEvent);
  a1[2] = sub_23E8E99C8(&qword_256DA0AA8, (uint64_t (*)(uint64_t))type metadata accessor for DoorEvent, (uint64_t)&protocol conformance descriptor for DoorEvent);
  result = sub_23E8E99C8(&qword_256DA0AB0, (uint64_t (*)(uint64_t))type metadata accessor for DoorEvent, (uint64_t)&protocol conformance descriptor for DoorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E926870()
{
  return sub_23E8E99C8(&qword_256DA0AB8, (uint64_t (*)(uint64_t))type metadata accessor for DoorEvent, (uint64_t)&protocol conformance descriptor for DoorEvent);
}

uint64_t sub_23E92689C(uint64_t a1)
{
  uint64_t result;

  result = sub_23E8E99C8(&qword_256DA0AA0, (uint64_t (*)(uint64_t))type metadata accessor for DoorEvent, (uint64_t)&protocol conformance descriptor for DoorEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23E9268D8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256DA0AC0, (uint64_t (*)(uint64_t))type metadata accessor for DoorEvent, (uint64_t)&protocol conformance descriptor for DoorEvent);
  a1[2] = sub_23E8E99C8(&qword_256DA0AC8, (uint64_t (*)(uint64_t))type metadata accessor for DoorEvent, (uint64_t)&unk_23E94A184);
  result = sub_23E8E99C8(&qword_256DA0AD0, (uint64_t (*)(uint64_t))type metadata accessor for DoorEvent, (uint64_t)&protocol conformance descriptor for DoorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E926950()
{
  return sub_23E8E99C8(&qword_256DA0AC0, (uint64_t (*)(uint64_t))type metadata accessor for DoorEvent, (uint64_t)&protocol conformance descriptor for DoorEvent);
}

unint64_t sub_23E92697C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23E8F09C0();
  a1[2] = sub_23E9266D4();
  result = sub_23E9269B0();
  a1[3] = result;
  return result;
}

unint64_t sub_23E9269B0()
{
  unint64_t result;

  result = qword_256DA0B08;
  if (!qword_256DA0B08)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for DoorEvent.State, &type metadata for DoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0B08);
  }
  return result;
}

unint64_t sub_23E9269F4(uint64_t a1)
{
  unint64_t result;

  result = sub_23E926A18();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23E926A18()
{
  unint64_t result;

  result = qword_256DA0B10;
  if (!qword_256DA0B10)
  {
    result = MEMORY[0x24265637C](&unk_23E94A26C, &type metadata for DoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0B10);
  }
  return result;
}

unint64_t sub_23E926A5C(uint64_t a1)
{
  unint64_t result;

  result = sub_23E9267B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DoorEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E926A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 5)
    return v9 - 4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DoorEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E926B10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryEventBaseLegacy(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 4;
  return result;
}

uint64_t sub_23E926B88()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DoorEvent.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E926C44 + 4 * byte_23E949FB5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E926C78 + 4 * asc_23E949FB0[v4]))();
}

uint64_t sub_23E926C78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E926C80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E926C88);
  return result;
}

uint64_t sub_23E926C94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E926C9CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E926CA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E926CA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DoorEvent.State()
{
  return &type metadata for DoorEvent.State;
}

unint64_t sub_23E926CC4()
{
  unint64_t result;

  result = qword_256DA0BA8;
  if (!qword_256DA0BA8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for DoorEvent.State, &type metadata for DoorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0BA8);
  }
  return result;
}

uint64_t sub_23E926D0C()
{
  return sub_23E926D44((uint64_t (*)(_QWORD))type metadata accessor for DoorEvent, &qword_256DA0D40);
}

uint64_t sub_23E926D28()
{
  return sub_23E926D44((uint64_t (*)(_QWORD))type metadata accessor for SecuritySystemEvent, &qword_256DA0D60);
}

uint64_t sub_23E926D44(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23E945F5C();
  v8 = a1(0);
  v12 = v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  LOBYTE(v12) = *(_BYTE *)(v2 + *(int *)(v8 + 20));
  sub_23E945FE0();
  sub_23E945BA8();
  LOBYTE(v12) = *(_BYTE *)(v2 + *(int *)(type metadata accessor for EventBase(0) + 24));
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
  sub_23E9460E8();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  sub_23E945A10();
  sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E9460E8();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E9460E8();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  sub_23E9460E8();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  sub_23E8EED0C(v2 + *(int *)(v9 + 36), (uint64_t)v7);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  return v13;
}

uint64_t sub_23E927078()
{
  return sub_23E926D44((uint64_t (*)(_QWORD))type metadata accessor for SmokeDetectorEvent, &qword_256DA0D58);
}

uint64_t sub_23E927094()
{
  return sub_23E926D44((uint64_t (*)(_QWORD))type metadata accessor for GarageDoorEvent, &qword_256DA0D48);
}

uint64_t sub_23E9270B0()
{
  return sub_23E926D44((uint64_t (*)(_QWORD))type metadata accessor for WindowEvent, &qword_256DA0D50);
}

uint64_t sub_23E9270CC()
{
  return sub_23E926D44((uint64_t (*)(_QWORD))type metadata accessor for LockEvent, &qword_256DA0D68);
}

HomeKitEvents::ContactSensorEvent::State_optional __swiftcall ContactSensorEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (HomeKitEvents::ContactSensorEvent::State_optional)rawValue;
}

void *static ContactSensorEvent.State.allCases.getter()
{
  return &unk_250F18558;
}

uint64_t ContactSensorEvent.State.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HomeKitEvents::ContactSensorEvent::State_optional sub_23E927110(Swift::Int *a1)
{
  return ContactSensorEvent.State.init(rawValue:)(*a1);
}

void sub_23E927118(_QWORD *a1@<X8>)
{
  *a1 = &unk_250F18580;
}

uint64_t ContactSensorEvent.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ContactSensorEvent();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ContactSensorEvent()
{
  uint64_t result;

  result = qword_256DA0CF8;
  if (!qword_256DA0CF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ContactSensorEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E9459A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ContactSensorEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ContactSensorEvent.category.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventBase(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ContactSensorEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ContactSensorEvent.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactSensorEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  v4 = sub_23E945A10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ContactSensorEvent.accessoryName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactSensorEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);
  return sub_23E8EED0C(v3, a1);
}

uint64_t ContactSensorEvent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for ContactSensorEvent();
  return sub_23E9461C0();
}

BOOL static ContactSensorEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2))
    return 0;
  v4 = type metadata accessor for ContactSensorEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t ContactSensorEvent.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9461B4();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  type metadata accessor for ContactSensorEvent();
  sub_23E9461C0();
  return sub_23E9461E4();
}

uint64_t ContactSensorEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  _QWORD *v24;
  uint64_t result;
  char v27;

  v27 = *a10;
  v16 = (int *)type metadata accessor for AccessoryEventBase(0);
  v17 = a9 + v16[9];
  v18 = sub_23E945A10();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  v20 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v21 = type metadata accessor for EventBase(0);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
  v22(a9 + *(int *)(v21 + 20), a2, v18);
  *(_BYTE *)(a9 + *(int *)(v21 + 24)) = 1;
  v22(a9 + v16[5], a3, v18);
  v23 = (_QWORD *)(a9 + v16[6]);
  *v23 = a4;
  v23[1] = a5;
  v22(a9 + v16[7], a6, v18);
  v24 = (_QWORD *)(a9 + v16[8]);
  *v24 = a7;
  v24[1] = a8;
  result = type metadata accessor for ContactSensorEvent();
  *(_BYTE *)(a9 + *(int *)(result + 20)) = v27;
  return result;
}

uint64_t ContactSensorEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  char v9;
  _BYTE v11[40];

  v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E8EF768((uint64_t)a1, (uint64_t)v11);
  sub_23E937208((uint64_t)v11, (uint64_t)v7);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_23E8EE8C8(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v11[0];
  sub_23E8EF808((uint64_t)v7, a2);
  result = type metadata accessor for ContactSensorEvent();
  *(_BYTE *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t ContactSensorEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EA98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = sub_23E937628(a1);
  if (!v2)
  {
    v9[15] = *(_BYTE *)(v1 + *(int *)(type metadata accessor for ContactSensorEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_23E8EA698();
    sub_23E9461FC();
    v9[14] = 1;
    sub_23E927CB8();
    sub_23E9460C4();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_23E927BBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ContactSensorEvent.init(from:)(a1, a2);
}

uint64_t sub_23E927BD0(_QWORD *a1)
{
  return ContactSensorEvent.encode(to:)(a1);
}

uint64_t sub_23E927BE4()
{
  return sub_23E926D44((uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent, &qword_256DA0D38);
}

uint64_t sub_23E927C10()
{
  sub_23E9282A8();
  return sub_23E945C08();
}

uint64_t sub_23E927C6C()
{
  sub_23E9282A8();
  return sub_23E945BFC();
}

unint64_t sub_23E927CB8()
{
  unint64_t result;

  result = qword_256DA0BB0;
  if (!qword_256DA0BB0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for ContactSensorEvent.State, &type metadata for ContactSensorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0BB0);
  }
  return result;
}

unint64_t sub_23E927D00()
{
  unint64_t result;

  result = qword_256DA0BB8;
  if (!qword_256DA0BB8)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for ContactSensorEvent.State, &type metadata for ContactSensorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0BB8);
  }
  return result;
}

unint64_t sub_23E927D48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256DA0BC0;
  if (!qword_256DA0BC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256DA0BC8);
    result = MEMORY[0x24265637C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256DA0BC0);
  }
  return result;
}

unint64_t sub_23E927D98()
{
  unint64_t result;

  result = qword_256DA0BD0;
  if (!qword_256DA0BD0)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for ContactSensorEvent.State, &type metadata for ContactSensorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0BD0);
  }
  return result;
}

uint64_t sub_23E927DDC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256DA0298, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&protocol conformance descriptor for ContactSensorEvent);
  a1[2] = sub_23E8E99C8(&qword_256DA0C30, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&protocol conformance descriptor for ContactSensorEvent);
  result = sub_23E8E99C8(&qword_256DA0C38, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&protocol conformance descriptor for ContactSensorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E927E54()
{
  return sub_23E8E99C8(&qword_256DA0C40, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&protocol conformance descriptor for ContactSensorEvent);
}

uint64_t sub_23E927E80(uint64_t a1)
{
  uint64_t result;

  result = sub_23E8E99C8(&qword_256DA0C28, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&protocol conformance descriptor for ContactSensorEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23E927EBC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E8E99C8(&qword_256DA0C48, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&protocol conformance descriptor for ContactSensorEvent);
  a1[2] = sub_23E8E99C8(&qword_256DA0C50, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&unk_23E94A4E4);
  result = sub_23E8E99C8(&qword_256DA0C58, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&protocol conformance descriptor for ContactSensorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_23E927F34()
{
  return sub_23E8E99C8(&qword_256DA0C48, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&protocol conformance descriptor for ContactSensorEvent);
}

unint64_t sub_23E927F60(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23E8F097C();
  a1[2] = sub_23E927CB8();
  result = sub_23E927F94();
  a1[3] = result;
  return result;
}

unint64_t sub_23E927F94()
{
  unint64_t result;

  result = qword_256DA0C90;
  if (!qword_256DA0C90)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for ContactSensorEvent.State, &type metadata for ContactSensorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0C90);
  }
  return result;
}

unint64_t sub_23E927FD8(uint64_t a1)
{
  unint64_t result;

  result = sub_23E927FFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23E927FFC()
{
  unint64_t result;

  result = qword_256DA0C98;
  if (!qword_256DA0C98)
  {
    result = MEMORY[0x24265637C](&unk_23E94A5CC, &type metadata for ContactSensorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0C98);
  }
  return result;
}

unint64_t sub_23E928040(uint64_t a1)
{
  unint64_t result;

  result = sub_23E927D98();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ContactSensorEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E928070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ContactSensorEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E9280F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryEventBaseLegacy(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

uint64_t sub_23E92816C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ContactSensorEvent.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E928228 + 4 * byte_23E94A315[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E92825C + 4 * asc_23E94A310[v4]))();
}

uint64_t sub_23E92825C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E928264(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E92826CLL);
  return result;
}

uint64_t sub_23E928278(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E928280);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E928284(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E92828C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactSensorEvent.State()
{
  return &type metadata for ContactSensorEvent.State;
}

unint64_t sub_23E9282A8()
{
  unint64_t result;

  result = qword_256DA0D30;
  if (!qword_256DA0D30)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for ContactSensorEvent.State, &type metadata for ContactSensorEvent.State);
    atomic_store(result, (unint64_t *)&qword_256DA0D30);
  }
  return result;
}

void sub_23E9282F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[32];

  v9[17] = a3;
  v9[30] = *MEMORY[0x24BDAC8D0];
  v4 = sub_23E945A7C();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23E945A10();
  v9[14] = *(_QWORD *)(v5 - 8);
  v9[15] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v9[13] = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E945AA0();
  MEMORY[0x24BDAC7A8](v7);
  v9[19] = (char *)v9 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __asm { BR              X9 }
}

void sub_23E928400()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (!BYTE6(v4))
  {
    __break(1u);
    JUMPOUT(0x23E928B10);
  }
  *(_QWORD *)(v10 - 240) = v6;
  *(_QWORD *)(v10 - 208) = v1;
  if (*(_QWORD *)(*(_QWORD *)(v10 - 200) + 16))
  {
    sub_23E945A94();
    *(_QWORD *)(v10 - 256) = v5;
    *(_QWORD *)(v10 - 248) = v4;
    *(_QWORD *)(v10 - 264) = v2;
    *(_QWORD *)(v10 - 272) = v3;
    *(_QWORD *)(v10 - 280) = v7;
    *(_QWORD *)(v10 - 288) = v9;
    if (v0)
    {
      if (v0 == 1)
      {
        if (v5 >> 32 >= (int)v5)
        {
          sub_23E91B57C(v5, v4);
          v11 = *(_QWORD *)(v10 - 208);
          sub_23E928BA4((int)v5, v5 >> 32);
          *(_QWORD *)(v10 - 208) = v11;
          goto LABEL_9;
        }
LABEL_11:
        __break(1u);
        JUMPOUT(0x23E928B04);
      }
      v12 = *(_QWORD *)(v5 + 16);
      v13 = *(_QWORD *)(v5 + 24);
      sub_23E91B57C(v5, v4);
      swift_retain();
      swift_retain();
      v14 = *(_QWORD *)(v10 - 208);
      sub_23E928BA4(v12, v13);
      *(_QWORD *)(v10 - 208) = v14;
      swift_release();
      swift_release();
    }
    else
    {
      *(_QWORD *)(v10 - 136) = v5;
      *(_WORD *)(v10 - 128) = v4;
      *(_BYTE *)(v10 - 126) = BYTE2(v4);
      *(_BYTE *)(v10 - 125) = BYTE3(v4);
      *(_BYTE *)(v10 - 124) = BYTE4(v4);
      *(_BYTE *)(v10 - 123) = BYTE5(v4);
      sub_23E8E99C8(&qword_256DA0D70, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      sub_23E945A70();
    }
LABEL_9:
    sub_23E91B538(v5, v4);
    v15 = *(_QWORD *)(v10 - 200) + 40;
    *(_QWORD *)(v10 - 192) = v8;
    __asm { BR              X9 }
  }
  __break(1u);
  goto LABEL_11;
}

_BYTE *sub_23E928B30@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_23E928DD0(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_23E928E90((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_23E928F08((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_23E928BA4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23E945878();
  if (!result || (result = sub_23E945890(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_23E945884();
      sub_23E945AA0();
      sub_23E8E99C8(&qword_256DA0D70, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_23E945A70();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23E928C68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_23E94592C();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

_QWORD *sub_23E928CE4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9F930);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_23E91B57C(v2, v0);
    v7 = sub_23E945914();
    sub_23E91B538(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x23E928DB8);
    }
  }
  return v4;
}

uint64_t sub_23E928DD0(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_23E928E90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_23E94589C();
  swift_allocObject();
  result = sub_23E94586C();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23E945920();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_23E928F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_23E94589C();
  swift_allocObject();
  result = sub_23E94586C();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t static LoggedObject.logger.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  const void *inited;
  void *v22;
  id v23;
  int v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t result;
  char *v32;
  const void *v33;
  uint64_t MetatypeMetadata;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  _QWORD v39[4];

  v35 = a2;
  v37 = a3;
  v4 = sub_23E945A34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0D80);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v36 = (uint64_t)&v32 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v32 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v32 - v19;
  type metadata accessor for LoggedObjectPropertyKey();
  inited = (const void *)swift_initStaticObject();
  *(_QWORD *)&v38[0] = a1;
  MetatypeMetadata = swift_getMetatypeMetadata();
  v22 = (void *)sub_23E946124();
  v33 = inited;
  v23 = objc_getAssociatedObject(v22, inited);
  swift_unknownObjectRelease();
  if (v23)
  {
    sub_23E945F20();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  sub_23E9294A0((uint64_t)v38, (uint64_t)v39);
  if (v39[3])
  {
    v24 = swift_dynamicCast();
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v25(v20, v24 ^ 1u, 1, v4);
  }
  else
  {
    sub_23E8ECF64((uint64_t)v39, &qword_256D9F8E8);
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v25(v20, 1, 1, v4);
  }
  sub_23E9294E8((uint64_t)v20, (uint64_t)v18);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v27 = v26(v18, 1, v4);
  sub_23E8ECF64((uint64_t)v18, &qword_256DA0D80);
  if (v27 == 1)
  {
    (*(void (**)(uint64_t))(v35 + 16))(a1);
    sub_23E945A28();
    v25(v15, 0, 1, v4);
    sub_23E929530((uint64_t)v15, (uint64_t)v20);
    v39[0] = a1;
    v28 = (void *)sub_23E946124();
    v29 = v36;
    sub_23E9294E8((uint64_t)v20, v36);
    if (v26((char *)v29, 1, v4) == 1)
    {
      v30 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v32, v29, v4);
      v30 = (void *)sub_23E946154();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
    }
    objc_setAssociatedObject(v28, v33, v30, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_23E9294E8((uint64_t)v20, (uint64_t)v10);
  result = v26(v10, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v37, v10, v4);
    return sub_23E8ECF64((uint64_t)v20, &qword_256DA0D80);
  }
  return result;
}

uint64_t type metadata accessor for LoggedObjectPropertyKey()
{
  return objc_opt_self();
}

uint64_t sub_23E92934C(uint64_t a1, uint64_t a2)
{
  return sub_23E9295AC(a1, a2, (uint64_t *)&unk_256DA0E30);
}

uint64_t static LoggedObject.logCategory.getter()
{
  swift_getMetatypeMetadata();
  return sub_23E945B48();
}

uint64_t sub_23E929384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return static LoggedObject.logger.getter(a1, a2, a3);
}

uint64_t sub_23E929398()
{
  return static LoggedObject.logCategory.getter();
}

uint64_t sub_23E9293B0(uint64_t a1, uint64_t a2)
{
  return sub_23E9295AC(a1, a2, &qword_256DA0E28);
}

unint64_t static Log.subsystem.getter()
{
  return 0xD000000000000017;
}

uint64_t static Log.logger(category:)()
{
  swift_bridgeObjectRetain();
  return sub_23E945A28();
}

uint64_t sub_23E929430()
{
  return swift_deallocClassInstance();
}

uint64_t static LoggedObject<>.logger.getter()
{
  swift_getMetatypeMetadata();
  sub_23E945B48();
  return sub_23E945A28();
}

uint64_t sub_23E9294A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9F8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E9294E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E929530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

uint64_t dispatch thunk of static LoggedObject.logger.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static LoggedObject.logCategory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_23E9295A0(uint64_t a1, uint64_t a2)
{
  return sub_23E9295AC(a1, a2, &qword_256DA0E20);
}

uint64_t sub_23E9295AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_23E945B48();
}

uint64_t sub_23E9295DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a1;
  v29 = a3;
  v26 = a2;
  v27 = sub_23E9459A4();
  v3 = *(_QWORD *)(v27 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v27);
  v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48);
  v5 = *(_QWORD *)(v25 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v25);
  v23 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CKQueryAsyncSequence();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_23E92AA2C(v26, (uint64_t)v10);
  v15 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v25);
  v16 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v27);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = (v9 + *(unsigned __int8 *)(v5 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v19 = (v6 + *(unsigned __int8 *)(v3 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v20 + 24) = 0;
  sub_23E92ABC4((uint64_t)v10, v20 + v17);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20 + v18, v23, v15);
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v20 + v19, v24, v16);
  sub_23E901EB8((uint64_t)v13, (uint64_t)&unk_256DA0E60, v20);
  return swift_release();
}

uint64_t sub_23E929808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a4;
  v7 = sub_23E945CD4();
  v6[16] = v7;
  v6[17] = *(_QWORD *)(v7 - 8);
  v6[18] = swift_task_alloc();
  v6[19] = swift_task_alloc();
  v8 = sub_23E9459A4();
  v6[20] = v8;
  v6[21] = *(_QWORD *)(v8 - 8);
  v6[22] = swift_task_alloc();
  v6[23] = type metadata accessor for CKQueryAsyncSequence();
  v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  v9 = sub_23E945A34();
  v6[29] = v9;
  v6[30] = *(_QWORD *)(v9 - 8);
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E92994C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0[13];
  v3 = v0[27];
  v2 = v0[28];
  sub_23E931768(v0[34]);
  sub_23E92AA2C(v1, v2);
  sub_23E92AA2C(v1, v3);
  v4 = sub_23E945A1C();
  v5 = sub_23E945DE8();
  if (os_log_type_enabled(v4, v5))
  {
    v21 = v0[30];
    v6 = v0[28];
    v22 = v0[29];
    v23 = v0[34];
    v7 = v0[27];
    v8 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v24 = v20;
    *(_DWORD *)v8 = 136446466;
    sub_23E945A10();
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v9 = sub_23E9460E8();
    v0[11] = sub_23E90F65C(v9, v10, &v24);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    sub_23E92ACE8(v6);
    *(_WORD *)(v8 + 12) = 2080;
    v11 = sub_23E92A774();
    v0[12] = sub_23E90F65C(v11, v12, &v24);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    sub_23E92ACE8(v7);
    _os_log_impl(&dword_23E8E7000, v4, v5, "[%{public}s] Beginning query: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v20, -1, -1);
    MEMORY[0x24265643C](v8, -1, -1);

    v13 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v13(v23, v22);
  }
  else
  {
    v14 = v0[34];
    v15 = v0[29];
    v16 = v0[30];
    v17 = v0[27];
    sub_23E92ACE8(v0[28]);
    sub_23E92ACE8(v17);

    v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }
  v0[35] = v13;
  v18 = (_QWORD *)swift_task_alloc();
  v0[36] = v18;
  *v18 = v0;
  v18[1] = sub_23E929BBC;
  return sub_23E92A51C(v0[14]);
}

uint64_t sub_23E929BBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E929C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 104);
  sub_23E931768(*(_QWORD *)(v0 + 264));
  sub_23E92AA2C(v6, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v7 = sub_23E945A1C();
  v8 = sub_23E945DE8();
  if (os_log_type_enabled(v7, v8))
  {
    v27 = *(_QWORD *)(v0 + 264);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 176);
    v24 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 160);
    v26 = *(_QWORD *)(v0 + 232);
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v29 = v12;
    *(_DWORD *)v11 = 136446466;
    sub_23E945A10();
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v13 = sub_23E9460E8();
    *(_QWORD *)(v0 + 72) = sub_23E90F65C(v13, v14, &v29);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    sub_23E92ACE8(v9);
    *(_WORD *)(v11 + 12) = 2082;
    v15 = Date.formattedElapsedTimeInterval.getter();
    *(_QWORD *)(v0 + 80) = sub_23E90F65C(v15, v16, &v29);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v10, v25);
    _os_log_impl(&dword_23E8E7000, v7, v8, "[%{public}s] Finished in %{public}s seconds", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v12, -1, -1);
    MEMORY[0x24265643C](v11, -1, -1);

    v28(v27, v26);
  }
  else
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v18 = *(_QWORD *)(v0 + 264);
    v19 = *(_QWORD *)(v0 + 232);
    v21 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    v22 = *(_QWORD *)(v0 + 160);
    sub_23E92ACE8(*(_QWORD *)(v0 + 208));
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);

    v17(v18, v19);
  }
  *(_QWORD *)(v0 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48);
  sub_23E945D4C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E929F38()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  void *v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;

  v1 = *(void **)(v0 + 296);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E70);
  v3 = swift_dynamicCast();
  v4 = *(void **)(v0 + 296);
  if ((v3 & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 104);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v7, v8, v9);
    sub_23E931768(v5);
    sub_23E92AA2C(v11, v6);
    v12 = sub_23E945A1C();
    v13 = sub_23E945DE8();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v16 = *(_QWORD *)(v0 + 256);
    v17 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 200);
    if (v14)
    {
      v50 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v51 = v20;
      *(_DWORD *)v19 = 136446210;
      sub_23E945A10();
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v21 = sub_23E9460E8();
      *(_QWORD *)(v0 + 56) = sub_23E90F65C(v21, v22, &v51);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E92ACE8(v18);
      _os_log_impl(&dword_23E8E7000, v12, v13, "[%{public}s] Canceled", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v20, -1, -1);
      MEMORY[0x24265643C](v19, -1, -1);

      v50(v16, v17);
    }
    else
    {
      sub_23E92ACE8(*(_QWORD *)(v0 + 200));

      v15(v16, v17);
    }
    v41 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 128);
    v43 = *(_QWORD *)(v0 + 136);
    sub_23E8E99C8(&qword_256DA0E80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v44 = swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v45, v41, v42);
    *(_QWORD *)(v0 + 48) = v44;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48);
    sub_23E945D4C();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);

  }
  else
  {
    v23 = *(_QWORD *)(v0 + 248);
    v24 = *(_QWORD *)(v0 + 192);
    v25 = *(_QWORD *)(v0 + 104);

    sub_23E931768(v23);
    sub_23E92AA2C(v25, v24);
    v26 = v4;
    v27 = v4;
    v28 = sub_23E945A1C();
    v29 = sub_23E945E00();
    v30 = os_log_type_enabled(v28, v29);
    v31 = *(void **)(v0 + 296);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v33 = *(_QWORD *)(v0 + 248);
    v34 = *(_QWORD *)(v0 + 232);
    v35 = *(_QWORD *)(v0 + 192);
    if (v30)
    {
      v36 = swift_slowAlloc();
      v47 = (_QWORD *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      *(_DWORD *)v36 = 136446466;
      v51 = v48;
      sub_23E945A10();
      v49 = v34;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v37 = sub_23E9460E8();
      *(_QWORD *)(v0 + 32) = sub_23E90F65C(v37, v38, &v51);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E92ACE8(v35);
      *(_WORD *)(v36 + 12) = 2114;
      v39 = v31;
      v40 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 40) = v40;
      sub_23E945F08();
      *v47 = v40;

      _os_log_impl(&dword_23E8E7000, v28, v29, "[%{public}s] Failed: %{public}@", (uint8_t *)v36, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v47, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v48, -1, -1);
      MEMORY[0x24265643C](v36, -1, -1);

      v32(v33, v49);
    }
    else
    {
      sub_23E92ACE8(*(_QWORD *)(v0 + 192));

      v32(v33, v34);
    }
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 296);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48);
    sub_23E945D4C();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E92A51C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for CKQueryAsyncSequence();
  v2[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E92A574()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  void *v13;

  v1 = v0[3];
  v2 = *(void **)(v1 + 8);
  sub_23E92AA2C(v1, v0[4]);
  if (v2)
  {
    v3 = v2;
  }
  else
  {
    v4 = (id *)v0[4];
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9190]), sel_init);
    v13 = v3;
    sub_23E92AD24(&v13, v4);
  }
  v0[5] = v3;
  v6 = v0[3];
  v5 = v0[4];
  v7 = v0[2];
  v8 = v2;
  sub_23E92ACE8(v5);
  v9 = swift_task_alloc();
  v0[6] = v9;
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v7;
  v10 = v3;
  v11 = (_QWORD *)swift_task_alloc();
  v0[7] = v11;
  *v11 = v0;
  v11[1] = sub_23E92A670;
  return sub_23E945DC4();
}

uint64_t sub_23E92A670()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23E92A6E4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E92A720()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E92A774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = v0;
  sub_23E945F5C();
  v2 = type metadata accessor for CKQueryAsyncSequence();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0E40);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  sub_23E945A10();
  sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E9460E8();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  v3 = *(id *)(v0 + 16);
  v4 = objc_msgSend(v3, sel_description, v2);
  sub_23E945B18();

  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  v5 = *(id *)(v1 + 24);
  v6 = objc_msgSend(v5, sel_description);
  sub_23E945B18();

  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9ED80);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  return 0;
}

uint64_t sub_23E92A9D8()
{
  return 0x74694B64756F6C43;
}

uint64_t type metadata accessor for CKQueryAsyncSequence()
{
  uint64_t result;

  result = qword_256DA0F08;
  if (!qword_256DA0F08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E92AA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CKQueryAsyncSequence();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E92AA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for CKQueryAsyncSequence();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48);
  v5 = *(_QWORD *)(v14 - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = sub_23E9459A4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  swift_unknownObjectRelease();

  v11 = v0 + v3 + *(int *)(v1 + 32);
  v12 = sub_23E945A10();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v14);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v8);
  return swift_deallocObject();
}

uint64_t sub_23E92ABC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CKQueryAsyncSequence();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E92AC08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(type metadata accessor for CKQueryAsyncSequence() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E9459A4() - 8) + 80);
  v11 = v8 + v9 + v10;
  v12 = *(_QWORD *)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = v1 + v5;
  v15 = v1 + v8;
  v16 = v1 + (v11 & ~v10);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_23E8EAAEC;
  return sub_23E929808(a1, v12, v13, v14, v15, v16);
}

uint64_t sub_23E92ACE8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CKQueryAsyncSequence();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23E92AD24(void **a1, id *a2)
{
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  _QWORD v13[4];
  _QWORD v14[4];

  v3 = *a1;
  v14[2] = 0;
  v14[3] = 0xE000000000000000;
  v14[0] = 47;
  v14[1] = 0xE100000000000000;
  v13[2] = v14;
  v4 = (_QWORD *)sub_23E92E630(0x7FFFFFFFFFFFFFFFLL, 1, sub_23E92F198, (uint64_t)v13, 0xD000000000000028, 0x800000023E94CD90);
  if (!v4[2])
  {
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  v5 = v4[4];
  v6 = v4[5];
  v7 = v4[6];
  v8 = v4[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  MEMORY[0x24265586C](v5, v6, v7, v8);
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  v14[0] = type metadata accessor for CKQueryAsyncSequence();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0E40);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_23E945B0C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setName_, v9);

  v10 = objc_msgSend(v3, sel_defaultConfiguration);
  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v11 = v10;
  v12 = objc_msgSend(*a2, sel_container);
  if (!v12)
  {
    if (qword_256D9E428 != -1)
      swift_once();
    v12 = (id)qword_256D9F8E0;
  }
  objc_msgSend(v11, sel_setContainer_, v12);

}

uint64_t sub_23E92AF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  return swift_task_switch();
}

uint64_t sub_23E92AF44()
{
  int8x16_t *v0;
  uint64_t v1;
  int8x16_t *v2;
  _QWORD *v3;

  v1 = v0[2].i64[0];
  v2 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  v2[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2[2].i64[0] = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[3].i64[0] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_23E8F1BF0;
  return sub_23E946148();
}

void sub_23E92AFE8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  objc_class *LogEvent;
  _BYTE *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;

  v8 = sub_23E945A10();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CKQueryAsyncSequence();
  v13 = *(void **)(a2 + *(int *)(v12 + 48));
  if (v13)
  {
    v14 = a2 + *(int *)(v12 + 32);
    v22 = a1;
    v15 = a3;
    v16 = a4;
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17(v11, v14, v8);
    LogEvent = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
    v19 = objc_allocWithZone(LogEvent);
    v17(&v19[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v11, v8);
    a4 = v16;
    a3 = v15;
    a1 = v22;
    v19[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
    v23.receiver = v19;
    v23.super_class = LogEvent;
    v20 = objc_msgSendSuper2(&v23, sel_init);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    objc_msgSend(v13, sel_submitLogEvent_, v20);

  }
  sub_23E92B16C(a3, a1, a4, 0, 0);
}

void sub_23E92B16C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint8_t *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void *v68;
  _QWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_QWORD, _QWORD, _QWORD);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (**v83)(char *, _QWORD);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92[2];

  v6 = v5;
  v81 = a4;
  v85 = a3;
  v76 = a2;
  v79 = a1;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
  v78 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v77 = v8;
  v86 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48);
  v75 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v84 = v9;
  v90 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for CKQueryAsyncSequence();
  v74 = *(_QWORD *)(v82 - 8);
  v10 = *(_QWORD *)(v74 + 64);
  v11 = MEMORY[0x24BDAC7A8](v82);
  v89 = (uint64_t)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v69 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v69 - v15;
  v17 = sub_23E945A34();
  v83 = *(void (***)(char *, _QWORD))(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v69 - v21;
  v80 = v6;
  if (a5)
  {
    v23 = a5;
    sub_23E931768((uint64_t)v22);
    sub_23E92AA2C(v6, (uint64_t)v16);
    v24 = sub_23E945A1C();
    v25 = sub_23E945DE8();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v72 = (void (*)(_QWORD, _QWORD, _QWORD))v23;
      v28 = v27;
      v92[0] = v27;
      v73 = v10;
      *(_DWORD *)v26 = 136446210;
      v70 = (uint64_t)(v26 + 4);
      sub_23E945A10();
      v71 = v17;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v29 = sub_23E9460E8();
      v91 = sub_23E90F65C(v29, v30, v92);
      v10 = v73;
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E92ACE8((uint64_t)v16);
      _os_log_impl(&dword_23E8E7000, v24, v25, "[%{public}s] Cursor query starting", v26, 0xCu);
      swift_arrayDestroy();
      v31 = v28;
      v23 = v72;
      MEMORY[0x24265643C](v31, -1, -1);
      MEMORY[0x24265643C](v26, -1, -1);

      v83[1](v22, v71);
    }
    else
    {
      sub_23E92ACE8((uint64_t)v16);

      v83[1](v22, v17);
    }
    v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB91C8]), sel_initWithCursor_, v23);

  }
  else
  {
    sub_23E931768((uint64_t)v20);
    sub_23E92AA2C(v6, (uint64_t)v14);
    v32 = sub_23E945A1C();
    v33 = sub_23E945DE8();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v73 = v10;
      v35 = (uint8_t *)v34;
      v36 = swift_slowAlloc();
      v92[0] = v36;
      *(_DWORD *)v35 = 136446210;
      v72 = (void (*)(_QWORD, _QWORD, _QWORD))(v35 + 4);
      sub_23E945A10();
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v37 = sub_23E9460E8();
      v91 = sub_23E90F65C(v37, v38, v92);
      v6 = v80;
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E92ACE8((uint64_t)v14);
      _os_log_impl(&dword_23E8E7000, v32, v33, "[%{public}s] Query starting", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v36, -1, -1);
      v39 = v35;
      v10 = v73;
      MEMORY[0x24265643C](v39, -1, -1);
    }
    else
    {
      sub_23E92ACE8((uint64_t)v14);
    }

    v83[1](v20, v17);
    v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB91C8]), sel_initWithQuery_, *(_QWORD *)(v6 + 24));
  }
  objc_msgSend(v40, sel_setZoneID_, *(_QWORD *)(v6 + 16));
  v41 = v82;
  swift_bridgeObjectRetain();
  sub_23E945E30();
  v42 = v6 + *(int *)(v41 + 44);
  if ((*(_BYTE *)(v42 + 8) & 1) == 0)
    objc_msgSend(v40, sel_setQualityOfService_, *(_QWORD *)v42);
  v43 = v6 + *(int *)(v41 + 40);
  if ((*(_BYTE *)(v43 + 8) & 1) != 0)
    goto LABEL_15;
  v44 = *(_QWORD *)v43;
  if (!__OFSUB__(v44, v81))
  {
    objc_msgSend(v40, sel_setResultsLimit_, v44 - v81);
LABEL_15:
    v70 = swift_allocObject();
    *(_QWORD *)(v70 + 16) = 0;
    v82 = swift_allocObject();
    *(_QWORD *)(v82 + 16) = 0;
    v45 = swift_allocObject();
    v83 = (void (**)(char *, _QWORD))v40;
    swift_unknownObjectWeakInit();
    v46 = v89;
    sub_23E92AA2C(v6, v89);
    v47 = v75;
    v72 = *(void (**)(_QWORD, _QWORD, _QWORD))(v75 + 16);
    v72(v90, v85, v87);
    v48 = *(unsigned __int8 *)(v74 + 80);
    v49 = (v48 + 16) & ~v48;
    v71 = v10 + 7;
    v50 = (v10 + 7 + v49) & 0xFFFFFFFFFFFFFFF8;
    v73 = *(unsigned __int8 *)(v47 + 80);
    v74 = v73 + 8;
    v51 = (v73 + 8 + v50) & ~v73;
    v69[1] = v48 | v73 | 7;
    v52 = (v84 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = swift_allocObject();
    sub_23E92ABC4(v46, v53 + v49);
    *(_QWORD *)(v53 + v50) = v82;
    v54 = v53 + v51;
    v75 = *(_QWORD *)(v47 + 32);
    v55 = v90;
    v56 = v87;
    ((void (*)(uint64_t, char *, uint64_t))v75)(v54, v90, v87);
    v57 = v70;
    *(_QWORD *)(v53 + v52) = v70;
    *(_QWORD *)(v53 + ((v52 + 15) & 0xFFFFFFFFFFFFFFF8)) = v45;
    swift_retain();
    v58 = v57;
    swift_retain();
    swift_retain();
    sub_23E945E48();
    swift_release();
    sub_23E92AA2C(v80, v89);
    v59 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v86, v76, v88);
    v72(v55, v85, v56);
    v60 = (v48 + 32) & ~v48;
    v61 = (v71 + v60) & 0xFFFFFFFFFFFFFFF8;
    v62 = (v61 + *(unsigned __int8 *)(v59 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    v63 = (v77 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = (v74 + v63) & ~v73;
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = v81;
    *(_QWORD *)(v65 + 24) = v58;
    sub_23E92ABC4(v89, v65 + v60);
    *(_QWORD *)(v65 + v61) = v82;
    (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v65 + v62, v86, v88);
    v66 = v79;
    *(_QWORD *)(v65 + v63) = v79;
    ((void (*)(unint64_t, char *, uint64_t))v75)(v65 + v64, v90, v56);
    swift_retain();
    swift_retain();
    v67 = v66;
    v68 = v83;
    sub_23E945E3C();
    objc_msgSend(v67, sel_addOperation_, v68);
    swift_release();
    swift_release();

    return;
  }
  __break(1u);
}

void sub_23E92B9F0(void *a1, id a2, char a3, uint64_t a4, uint64_t a5, _QWORD *a6, char *a7, _QWORD *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  void (*v55)(id *, char *, uint64_t);
  id *v56;
  char *v57;
  uint64_t v58;
  int v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  BOOL v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  id v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  uint64_t v94;
  objc_class *LogEvent;
  _BYTE *v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  char *v102;
  NSObject *v103;
  os_log_type_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  id *v114;
  void (**v115)(char *, uint64_t);
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  _BOOL4 v119;
  uint64_t v120;
  uint8_t *v121;
  uint64_t v122;
  unint64_t v123;
  id *v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t);
  char *v130;
  uint64_t v131;
  objc_class *v132;
  _BYTE *v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  NSObject *v138;
  os_log_type_t v139;
  int v140;
  _BOOL4 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  void (*v149)(char *, uint64_t);
  _QWORD *v150;
  void (**v151)(char *, uint64_t);
  void *v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(char *, uint64_t, uint64_t);
  char *v156;
  uint64_t v157;
  objc_class *v158;
  _BYTE *v159;
  id v160;
  void (**v161)(char *, uint64_t);
  void *v162;
  uint64_t v163;
  void (*v164)(char *, uint64_t, uint64_t);
  char *v165;
  uint64_t v166;
  objc_class *v167;
  _BYTE *v168;
  id v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;
  NSObject *v176;
  os_log_type_t v177;
  uint64_t v178;
  uint8_t *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(char *, uint64_t, uint64_t);
  char *v189;
  uint64_t v190;
  objc_class *v191;
  _BYTE *v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  id *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  char *v202;
  _QWORD *v203;
  _QWORD *v204;
  id *v205;
  char *v206;
  uint64_t v207;
  id v208;
  uint64_t v209;
  void (**v210)(char *, uint64_t);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  objc_super v217;
  objc_super v218;
  objc_super v219;
  objc_super v220;
  uint64_t v221;
  char *v222;
  objc_super v223;
  _QWORD *v224;
  char *v225;

  v203 = a8;
  v202 = a7;
  v204 = a6;
  v208 = a1;
  v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0EA8);
  v209 = *(_QWORD *)(v211 - 8);
  v12 = MEMORY[0x24BDAC7A8](v211);
  v197 = (id *)((char *)&v194 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v12);
  v200 = (char *)&v194 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v205 = (id *)((char *)&v194 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v214 = (char *)&v194 - v18;
  v215 = sub_23E945A10();
  v207 = *(_QWORD *)(v215 - 8);
  MEMORY[0x24BDAC7A8](v215);
  v206 = (char *)&v194 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = type metadata accessor for CKQueryAsyncSequence();
  v20 = MEMORY[0x24BDAC7A8](v212);
  v201 = (char *)&v194 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v199 = (uint64_t)&v194 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v198 = (uint64_t)&v194 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v194 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)&v194 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v194 - v32;
  v213 = sub_23E945A34();
  v210 = *(void (***)(char *, uint64_t))(v213 - 8);
  v34 = MEMORY[0x24BDAC7A8](v213);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v194 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v194 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v47 = (char *)&v194 - v46;
  v216 = a4;
  if ((a3 & 1) != 0)
  {
    v71 = a2;
    sub_23E931768((uint64_t)v47);
    sub_23E92AA2C(a4, (uint64_t)v33);
    sub_23E92F12C(a2);
    v72 = v208;
    sub_23E92F12C(a2);
    v73 = v72;
    v74 = sub_23E945A1C();
    v75 = sub_23E945E00();
    v76 = v75;
    if (os_log_type_enabled(v74, v75))
    {
      v77 = swift_slowAlloc();
      v209 = swift_slowAlloc();
      v214 = (char *)swift_slowAlloc();
      v225 = v214;
      *(_DWORD *)v77 = 136446722;
      v208 = a2;
      v78 = v212;
      LODWORD(v211) = v76;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v79 = sub_23E9460E8();
      v224 = (_QWORD *)sub_23E90F65C(v79, v80, (uint64_t *)&v225);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E92ACE8((uint64_t)v33);
      *(_WORD *)(v77 + 12) = 2082;
      v81 = objc_msgSend(v73, sel_recordName);
      v82 = sub_23E945B18();
      v84 = v83;

      a2 = v208;
      v224 = (_QWORD *)sub_23E90F65C(v82, v84, (uint64_t *)&v225);
      sub_23E945F08();

      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 22) = 2114;
      v85 = a2;
      v86 = _swift_stdlib_bridgeErrorToNSError();
      v224 = (_QWORD *)v86;
      sub_23E945F08();
      v87 = v209;
      *(_QWORD *)v209 = v86;
      sub_23E92F138(a2);
      sub_23E92F138(a2);
      _os_log_impl(&dword_23E8E7000, v74, (os_log_type_t)v211, "[%{public}s] Failed to fetch %{public}s: %{public}@", (uint8_t *)v77, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v87, -1, -1);
      v88 = v214;
      swift_arrayDestroy();
      MEMORY[0x24265643C](v88, -1, -1);
      MEMORY[0x24265643C](v77, -1, -1);

      v210[1](v47, v213);
    }
    else
    {
      sub_23E92ACE8((uint64_t)v33);

      sub_23E92F138(a2);
      sub_23E92F138(a2);

      v210[1](v47, v213);
      v78 = v212;
    }
    v89 = *(void **)(v216 + *(int *)(v78 + 48));
    if (v89)
    {
      v90 = v216 + *(int *)(v78 + 32);
      v91 = v207;
      v92 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 16);
      v93 = v206;
      v94 = v215;
      v92(v206, v90, v215);
      LogEvent = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
      v96 = objc_allocWithZone(LogEvent);
      v92(&v96[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v93, v94);
      v96[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 8;
      *(_QWORD *)&v96[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
      *(_QWORD *)&v96[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
      v217.receiver = v96;
      v217.super_class = LogEvent;
      v97 = objc_msgSendSuper2(&v217, sel_init);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v94);
      v98 = (void *)sub_23E945908();
      objc_msgSend(v89, sel_submitLogEvent_error_, v97, v98);
      sub_23E92F138(a2);

    }
    else
    {
      sub_23E92F138(a2);
    }
    return;
  }
  v195 = v45;
  v48 = v44;
  v196 = v43;
  v49 = (_QWORD *)(a5 + 16);
  v208 = a2;
  v50 = a2;
  v51 = objc_msgSend(v50, sel_size);
  swift_beginAccess();
  if (__OFADD__(*v49, v51))
  {
    __break(1u);
LABEL_51:
    __break(1u);
    return;
  }
  *v49 += v51;
  v224 = v50;
  v52 = v50;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48);
  v53 = v214;
  sub_23E945D40();
  v54 = v209;
  v55 = *(void (**)(id *, char *, uint64_t))(v209 + 16);
  v56 = v205;
  v57 = v53;
  v58 = v211;
  v55(v205, v57, v211);
  v59 = (*(uint64_t (**)(id *, uint64_t))(v54 + 88))(v56, v58);
  if (v59 == *MEMORY[0x24BEE6C78])
  {
    v60 = v202 + 16;
    (*(void (**)(id *, uint64_t))(v54 + 96))(v56, v58);
    v61 = v54;
    v62 = (char *)*v56;
    v63 = (uint64_t)*v56 <= 99;
    v64 = v216;
    if (v63)
    {
      sub_23E931768((uint64_t)v42);
      sub_23E92AA2C(v64, (uint64_t)v31);
      v65 = sub_23E945A1C();
      v66 = sub_23E945DE8();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = swift_slowAlloc();
        v68 = swift_slowAlloc();
        v224 = (_QWORD *)v68;
        *(_DWORD *)v67 = 136446466;
        v216 = v67 + 4;
        sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v69 = sub_23E9460E8();
        v222 = (char *)sub_23E90F65C(v69, v70, (uint64_t *)&v224);
        sub_23E945F08();
        swift_bridgeObjectRelease();
        sub_23E92ACE8((uint64_t)v31);
        *(_WORD *)(v67 + 12) = 2048;
        v222 = v62;
        sub_23E945F08();
        _os_log_impl(&dword_23E8E7000, v65, v66, "[%{public}s] Running out of queue space, %ld slots left", (uint8_t *)v67, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24265643C](v68, -1, -1);
        MEMORY[0x24265643C](v67, -1, -1);

      }
      else
      {

        sub_23E92ACE8((uint64_t)v31);
      }
      sub_23E92F138(v208);
      v210[1](v42, v213);
      (*(void (**)(char *, uint64_t))(v209 + 8))(v214, v211);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v214, v58);
      sub_23E92F138(v208);
    }
    swift_beginAccess();
    if (!__OFADD__(*v60, 1))
    {
      ++*v60;
      return;
    }
    goto LABEL_51;
  }
  v204 = v203 + 2;
  v99 = v216;
  if (v59 == *MEMORY[0x24BEE6C70])
  {
    (*(void (**)(id *, uint64_t))(v54 + 96))(v56, v58);

    sub_23E931768(v48);
    v100 = v99;
    sub_23E92AA2C(v99, (uint64_t)v28);
    v101 = v208;
    sub_23E92F12C(v208);
    v102 = (char *)v52;
    v103 = sub_23E945A1C();
    v104 = sub_23E945E00();
    if (os_log_type_enabled(v103, v104))
    {
      v105 = swift_slowAlloc();
      v202 = v102;
      v106 = v105;
      v203 = (_QWORD *)swift_slowAlloc();
      v205 = (id *)swift_slowAlloc();
      v224 = v205;
      *(_DWORD *)v106 = 136446466;
      v107 = v212;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v108 = sub_23E9460E8();
      v222 = (char *)sub_23E90F65C(v108, v109, (uint64_t *)&v224);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E92ACE8((uint64_t)v28);
      *(_WORD *)(v106 + 12) = 2112;
      v222 = v202;
      v110 = v202;
      v111 = v48;
      v112 = v216;
      sub_23E945F08();
      v113 = v203;
      *v203 = v101;
      sub_23E92F138(v101);
      sub_23E92F138(v101);
      _os_log_impl(&dword_23E8E7000, v103, v104, "[%{public}s] Yield dropped record: %@", (uint8_t *)v106, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v113, -1, -1);
      v114 = v205;
      swift_arrayDestroy();
      MEMORY[0x24265643C](v114, -1, -1);
      MEMORY[0x24265643C](v106, -1, -1);

      v115 = (void (**)(char *, uint64_t))v210[1];
      ((void (*)(uint64_t, uint64_t))v115)(v111, v213);
    }
    else
    {
      sub_23E92ACE8((uint64_t)v28);
      sub_23E92F138(v101);
      sub_23E92F138(v101);

      v115 = (void (**)(char *, uint64_t))v210[1];
      ((void (*)(uint64_t, uint64_t))v115)(v48, v213);
      v107 = v212;
      v112 = v100;
    }
    v125 = *(void **)(v112 + *(int *)(v107 + 48));
    v126 = v209;
    v210 = v115;
    if (v125)
    {
      v127 = v112 + *(int *)(v107 + 32);
      v128 = v207;
      v129 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 16);
      v130 = v206;
      v131 = v215;
      v129(v206, v127, v215);
      v132 = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
      v133 = objc_allocWithZone(v132);
      v129(&v133[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v130, v131);
      v133[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 5;
      *(_QWORD *)&v133[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
      *(_QWORD *)&v133[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
      v218.receiver = v133;
      v218.super_class = v132;
      v134 = objc_msgSendSuper2(&v218, sel_init);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v130, v131);
      objc_msgSend(v125, sel_submitLogEvent_, v134);

      sub_23E92F138(v208);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v214, v211);
LABEL_39:
      v171 = (uint64_t)v201;
      v172 = v204;
      goto LABEL_42;
    }
    (*(void (**)(char *, uint64_t))(v209 + 8))(v214, v211);
LABEL_38:
    sub_23E92F138(v208);
    goto LABEL_39;
  }
  if (v59 == *MEMORY[0x24BEE6C68])
  {
    sub_23E931768((uint64_t)v38);
    v112 = v99;
    v116 = v198;
    sub_23E92AA2C(v99, v198);
    v117 = sub_23E945A1C();
    v118 = sub_23E945DE8();
    v119 = os_log_type_enabled(v117, v118);
    v120 = v212;
    if (v119)
    {
      v121 = (uint8_t *)swift_slowAlloc();
      v205 = (id *)swift_slowAlloc();
      v224 = v205;
      *(_DWORD *)v121 = 136446210;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v122 = sub_23E9460E8();
      v222 = (char *)sub_23E90F65C(v122, v123, (uint64_t *)&v224);
      v54 = v209;
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E92ACE8(v116);
      _os_log_impl(&dword_23E8E7000, v117, v118, "[%{public}s] Yield indicated that the stream is terminated", v121, 0xCu);
      v124 = v205;
      swift_arrayDestroy();
      MEMORY[0x24265643C](v124, -1, -1);
      MEMORY[0x24265643C](v121, -1, -1);
    }
    else
    {
      sub_23E92ACE8(v116);
    }

    v151 = (void (**)(char *, uint64_t))v210[1];
    ((void (*)(char *, uint64_t))v151)(v38, v213);
    v210 = v151;
    v152 = *(void **)(v112 + *(int *)(v120 + 48));
    if (v152)
    {
      v153 = v112 + *(int *)(v120 + 32);
      v154 = v207;
      v155 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 16);
      v156 = v206;
      v157 = v215;
      v155(v206, v153, v215);
      v158 = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
      v159 = objc_allocWithZone(v158);
      v155(&v159[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v156, v157);
      v159[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 6;
      *(_QWORD *)&v159[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
      *(_QWORD *)&v159[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
      v219.receiver = v159;
      v219.super_class = v158;
      v160 = objc_msgSendSuper2(&v219, sel_init);
      (*(void (**)(char *, uint64_t))(v154 + 8))(v156, v157);
      objc_msgSend(v152, sel_submitLogEvent_, v160);

      sub_23E92F138(v208);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v214, v211);
      goto LABEL_39;
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v214, v211);
    goto LABEL_38;
  }
  v135 = v195;
  sub_23E931768(v195);
  v112 = v99;
  v136 = v199;
  sub_23E92AA2C(v99, v199);
  v137 = v200;
  v55((id *)v200, v214, v58);
  v138 = sub_23E945A1C();
  v139 = sub_23E945E0C();
  v140 = v139;
  v141 = os_log_type_enabled(v138, v139);
  v142 = v212;
  if (v141)
  {
    v143 = swift_slowAlloc();
    v203 = (_QWORD *)swift_slowAlloc();
    v224 = v203;
    *(_DWORD *)v143 = 136446466;
    LODWORD(v202) = v140;
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v144 = sub_23E9460E8();
    v222 = (char *)sub_23E90F65C(v144, v145, (uint64_t *)&v224);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    sub_23E92ACE8(v136);
    *(_WORD *)(v143 + 12) = 2082;
    v146 = v200;
    v55(v197, v200, v211);
    v147 = sub_23E945B48();
    v222 = (char *)sub_23E90F65C(v147, v148, (uint64_t *)&v224);
    v58 = v211;
    v142 = v212;
    sub_23E945F08();
    swift_bridgeObjectRelease();
    v149 = *(void (**)(char *, uint64_t))(v54 + 8);
    v149(v146, v58);
    _os_log_impl(&dword_23E8E7000, v138, (os_log_type_t)v202, "[%{public}s] Yield result not handled: %{public}s", (uint8_t *)v143, 0x16u);
    v150 = v203;
    swift_arrayDestroy();
    MEMORY[0x24265643C](v150, -1, -1);
    MEMORY[0x24265643C](v143, -1, -1);
  }
  else
  {
    sub_23E92ACE8(v136);
    v149 = *(void (**)(char *, uint64_t))(v54 + 8);
    v149(v137, v58);
  }

  v161 = (void (**)(char *, uint64_t))v210[1];
  ((void (*)(uint64_t, uint64_t))v161)(v135, v213);
  v210 = v161;
  v162 = *(void **)(v112 + *(int *)(v142 + 48));
  if (v162)
  {
    v163 = v207;
    v164 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 16);
    v165 = v206;
    v166 = v215;
    v164(v206, v112 + *(int *)(v142 + 32), v215);
    v167 = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
    v168 = objc_allocWithZone(v167);
    v164(&v168[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v165, v166);
    v168[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 7;
    *(_QWORD *)&v168[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
    *(_QWORD *)&v168[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
    v220.receiver = v168;
    v220.super_class = v167;
    v169 = objc_msgSendSuper2(&v220, sel_init);
    v170 = *(void (**)(char *, uint64_t))(v163 + 8);
    v58 = v211;
    v170(v165, v166);
    objc_msgSend(v162, sel_submitLogEvent_, v169);

    sub_23E92F138(v208);
    v149(v214, v58);
  }
  else
  {
    v149(v214, v58);
    sub_23E92F138(v208);
  }
  v171 = (uint64_t)v201;
  v172 = v204;
  v149((char *)v205, v58);
LABEL_42:
  swift_beginAccess();
  v173 = MEMORY[0x2426564E4](v172);
  if (v173)
  {
    v174 = (void *)v173;
    v175 = v196;
    sub_23E931768(v196);
    sub_23E92AA2C(v112, v171);
    v176 = sub_23E945A1C();
    v177 = sub_23E945DE8();
    if (os_log_type_enabled(v176, v177))
    {
      v178 = v171;
      v179 = (uint8_t *)swift_slowAlloc();
      v180 = (char *)swift_slowAlloc();
      v222 = v180;
      *(_DWORD *)v179 = 136446210;
      v214 = (char *)(v179 + 4);
      v181 = v212;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v182 = sub_23E9460E8();
      v221 = sub_23E90F65C(v182, v183, (uint64_t *)&v222);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      v184 = v178;
      v112 = v216;
      sub_23E92ACE8(v184);
      _os_log_impl(&dword_23E8E7000, v176, v177, "[%{public}s] Canceling operation", v179, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v180, -1, -1);
      MEMORY[0x24265643C](v179, -1, -1);

      ((void (*)(uint64_t, uint64_t))v210)(v175, v213);
    }
    else
    {
      sub_23E92ACE8(v171);

      ((void (*)(uint64_t, uint64_t))v210)(v175, v213);
      v181 = v212;
    }
    v185 = *(void **)(v112 + *(int *)(v181 + 48));
    if (v185)
    {
      v186 = v112 + *(int *)(v181 + 32);
      v187 = v207;
      v188 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 16);
      v189 = v206;
      v190 = v215;
      v188(v206, v186, v215);
      v191 = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
      v192 = objc_allocWithZone(v191);
      v188(&v192[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v189, v190);
      v192[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 3;
      *(_QWORD *)&v192[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
      *(_QWORD *)&v192[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
      v223.receiver = v192;
      v223.super_class = v191;
      v193 = objc_msgSendSuper2(&v223, sel_init);
      (*(void (**)(char *, uint64_t))(v187 + 8))(v189, v190);
      objc_msgSend(v185, sel_submitLogEvent_, v193);

    }
    objc_msgSend(v174, sel_cancel);

  }
}

void sub_23E92D15C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  objc_class *LogEvent;
  _BYTE *v52;
  id v53;
  void (*v54)(char *, uint64_t);
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  void *v112;
  void *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  uint8_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint8_t *v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  NSObject *v140;
  os_log_type_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  id v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  uint64_t v156;
  id v157;
  void *v158;
  char *v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint8_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  uint64_t v187[3];
  uint64_t v188;
  void *v189;
  objc_super v190;

  v164 = a8;
  v181 = a7;
  LODWORD(v182) = a2;
  v186 = a1;
  v13 = type metadata accessor for CKQueryAsyncSequence();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v173 = (uint64_t)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v169 = (uint64_t)&v161 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v163 = (uint64_t)&v161 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v162 = (uint64_t)&v161 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v165 = (uint64_t)&v161 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v171 = (uint64_t)&v161 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v176 = (char *)&v161 - v26;
  v183 = sub_23E945A34();
  v27 = *(_QWORD *)(v183 - 8);
  v28 = MEMORY[0x24BDAC7A8](v183);
  v175 = (char *)&v161 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v172 = (uint64_t)&v161 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v167 = (uint64_t)&v161 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v166 = (uint64_t)&v161 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v168 = (uint64_t)&v161 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v174 = (uint64_t)&v161 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v177 = (char *)&v161 - v40;
  v41 = sub_23E945A10();
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v161 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = a4 + 16;
  swift_beginAccess();
  v45 = *(_QWORD *)(a4 + 16);
  v46 = a3 + v45;
  if (__OFADD__(a3, v45))
  {
    __break(1u);
    return;
  }
  v180 = v27;
  v184 = v13;
  v47 = a5 + *(int *)(v13 + 32);
  v48 = a5;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v49(v44, v47, v41);
  swift_beginAccess();
  v50 = *(_QWORD *)(a6 + 16);
  LogEvent = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
  v52 = objc_allocWithZone(LogEvent);
  v49(&v52[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v44, v41);
  v52[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 2;
  v178 = v46;
  *(_QWORD *)&v52[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = v46;
  *(_QWORD *)&v52[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = v50;
  v190.receiver = v52;
  v190.super_class = LogEvent;
  v53 = objc_msgSendSuper2(&v190, sel_init);
  v54 = *(void (**)(char *, uint64_t))(v42 + 8);
  v179 = v41;
  v54(v44, v41);
  v185 = v48;
  if ((v182 & 1) != 0)
  {
    v74 = v186;
    v187[0] = (uint64_t)v186;
    v75 = v186;
    v76 = v74;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E70);
    type metadata accessor for CKError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v77 = v189;
      sub_23E8E99C8(&qword_256DA0EA0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_23E946E40);
      sub_23E9458E4();
      if (v187[0] == 26 || (v189 = v77, sub_23E9458E4(), v187[0] == 28))
      {
        v78 = v172;
        sub_23E931768(v172);
        v79 = v169;
        sub_23E92AA2C(v185, v169);
        v80 = sub_23E945A1C();
        v81 = sub_23E945DE8();
        if (os_log_type_enabled(v80, v81))
        {
          v82 = (uint8_t *)swift_slowAlloc();
          v83 = swift_slowAlloc();
          v187[0] = v83;
          *(_DWORD *)v82 = 136446210;
          v182 = v82 + 4;
          v84 = v184;
          sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v85 = sub_23E9460E8();
          v189 = (void *)sub_23E90F65C(v85, v86, v187);
          sub_23E945F08();
          swift_bridgeObjectRelease();
          sub_23E92ACE8(v79);
          _os_log_impl(&dword_23E8E7000, v80, v81, "[%{public}s] Query completed (zone does not exist)", v82, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24265643C](v83, -1, -1);
          v87 = v82;
          v74 = v186;
          MEMORY[0x24265643C](v87, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v172, v183);
        }
        else
        {
          sub_23E92ACE8(v79);

          (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v78, v183);
          v84 = v184;
        }
        v114 = *(void **)(v185 + *(int *)(v84 + 48));
        if (v114)
          objc_msgSend(v114, sel_submitLogEvent_, v53);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
        sub_23E945CBC();

        sub_23E92F138(v74);
LABEL_44:

        return;
      }

    }
    v137 = (uint64_t)v175;
    sub_23E931768((uint64_t)v175);
    v138 = v173;
    sub_23E92AA2C(v185, v173);
    sub_23E92F12C(v74);
    v139 = v74;
    v140 = sub_23E945A1C();
    v141 = sub_23E945E00();
    if (os_log_type_enabled(v140, v141))
    {
      v142 = swift_slowAlloc();
      v143 = swift_slowAlloc();
      v182 = (uint8_t *)v53;
      v144 = (_QWORD *)v143;
      v178 = swift_slowAlloc();
      v187[0] = v178;
      *(_DWORD *)v142 = 136446466;
      v145 = v184;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v146 = sub_23E9460E8();
      v189 = (void *)sub_23E90F65C(v146, v147, v187);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E92ACE8(v138);
      *(_WORD *)(v142 + 12) = 2114;
      v148 = v74;
      v149 = _swift_stdlib_bridgeErrorToNSError();
      v189 = (void *)v149;
      sub_23E945F08();
      *v144 = v149;
      v74 = v186;
      sub_23E92F138(v186);
      sub_23E92F138(v74);
      _os_log_impl(&dword_23E8E7000, v140, v141, "[%{public}s] Query failed: %{public}@", (uint8_t *)v142, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
      swift_arrayDestroy();
      v150 = v144;
      v53 = v182;
      MEMORY[0x24265643C](v150, -1, -1);
      v151 = v178;
      swift_arrayDestroy();
      MEMORY[0x24265643C](v151, -1, -1);
      MEMORY[0x24265643C](v142, -1, -1);

      (*(void (**)(char *, uint64_t))(v180 + 8))(v175, v183);
    }
    else
    {
      sub_23E92ACE8(v138);
      sub_23E92F138(v74);
      sub_23E92F138(v74);

      (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v137, v183);
      v145 = v184;
    }
    *((_BYTE *)v53 + OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state) = 9;
    v152 = *(void **)(v185 + *(int *)(v145 + 48));
    if (v152)
    {
      v153 = (void *)sub_23E945908();
      objc_msgSend(v152, sel_submitLogEvent_error_, v53, v153);

    }
    v187[0] = (uint64_t)v74;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
    sub_23E945CB0();
    goto LABEL_44;
  }
  v182 = (uint8_t *)v53;
  v55 = v186;
  v56 = (char *)v186;
  v57 = (uint64_t)v177;
  sub_23E931768((uint64_t)v177);
  v58 = v48;
  v59 = (uint64_t)v176;
  sub_23E92AA2C(v58, (uint64_t)v176);
  sub_23E92F12C(v55);
  swift_retain();
  sub_23E92F12C(v55);
  swift_retain();
  v60 = sub_23E945A1C();
  v61 = sub_23E945DE8();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = swift_slowAlloc();
    v175 = (char *)swift_slowAlloc();
    v189 = v175;
    *(_DWORD *)v62 = 136446978;
    v63 = v184;
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v64 = sub_23E9460E8();
    v187[0] = sub_23E90F65C(v64, v65, (uint64_t *)&v189);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    sub_23E92ACE8(v59);
    v176 = v56;
    *(_WORD *)(v62 + 12) = 2048;
    swift_beginAccess();
    v66 = *(_QWORD *)(a4 + 16);
    swift_release();
    v188 = v66;
    sub_23E945F08();
    swift_release();
    *(_WORD *)(v62 + 22) = 2048;
    v67 = v57;
    v68 = v178;
    v188 = v178;
    sub_23E945F08();
    *(_WORD *)(v62 + 32) = 2082;
    if (v186)
      v69 = 0;
    else
      v69 = 7302688;
    if (v186)
      v70 = 0xE000000000000000;
    else
      v70 = 0xE300000000000000;
    v188 = sub_23E90F65C(v69, v70, (uint64_t *)&v189);
    v55 = v186;
    sub_23E945F08();
    swift_bridgeObjectRelease();
    sub_23E92F138(v55);
    sub_23E92F138(v55);
    _os_log_impl(&dword_23E8E7000, v60, v61, "[%{public}s] Query found %ld matching records on this iteration (%ld total),%{public}s cursor available", (uint8_t *)v62, 0x2Au);
    v71 = (uint64_t)v175;
    swift_arrayDestroy();
    MEMORY[0x24265643C](v71, -1, -1);
    MEMORY[0x24265643C](v62, -1, -1);

    v72 = v67;
    v56 = v176;
    v73 = v183;
    v180 = *(_QWORD *)(v180 + 8);
    ((void (*)(uint64_t, uint64_t))v180)(v72, v183);
  }
  else
  {
    swift_release();
    sub_23E92ACE8(v59);
    swift_release();
    sub_23E92F138(v55);
    sub_23E92F138(v55);

    v73 = v183;
    v180 = *(_QWORD *)(v180 + 8);
    ((void (*)(uint64_t, uint64_t))v180)(v57, v183);
    v63 = v184;
    v68 = v178;
  }
  v88 = v185;
  v89 = v185 + *(int *)(v63 + 40);
  if ((*(_BYTE *)(v89 + 8) & 1) != 0 || (v90 = *(_QWORD *)v89, v68 < *(_QWORD *)v89))
  {
    if (v55)
    {
      v102 = v56;
      if ((sub_23E945D28() & 1) != 0)
      {
        v103 = v166;
        sub_23E931768(v166);
        v104 = v162;
        sub_23E92AA2C(v88, v162);
        v105 = sub_23E945A1C();
        v106 = sub_23E945DE8();
        if (os_log_type_enabled(v105, v106))
        {
          v107 = (uint8_t *)swift_slowAlloc();
          v108 = swift_slowAlloc();
          v189 = (void *)v108;
          *(_DWORD *)v107 = 136446210;
          v109 = v184;
          sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v110 = sub_23E9460E8();
          v188 = sub_23E90F65C(v110, v111, (uint64_t *)&v189);
          v88 = v185;
          sub_23E945F08();
          swift_bridgeObjectRelease();
          sub_23E92ACE8(v104);
          _os_log_impl(&dword_23E8E7000, v105, v106, "[%{public}s] Task was canceled", v107, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24265643C](v108, -1, -1);
          MEMORY[0x24265643C](v107, -1, -1);

          ((void (*)(uint64_t, uint64_t))v180)(v166, v73);
          v112 = v182;
        }
        else
        {
          sub_23E92ACE8(v104);

          ((void (*)(uint64_t, uint64_t))v180)(v103, v73);
          v112 = v182;
          v109 = v184;
        }
        v155 = *(void **)(v88 + *(int *)(v109 + 48));
        if (v155)
          objc_msgSend(v155, sel_submitLogEvent_, v112);
        sub_23E945CD4();
        sub_23E8E99C8(&qword_256DA0E80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
        v156 = swift_allocError();
        sub_23E945AAC();
        v189 = (void *)v156;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
        sub_23E945CB0();
        v157 = v186;
        sub_23E92F138(v186);
        sub_23E92F138(v157);

      }
      else
      {
        v125 = v167;
        sub_23E931768(v167);
        v126 = v163;
        sub_23E92AA2C(v88, v163);
        v127 = sub_23E945A1C();
        v128 = sub_23E945DE8();
        if (os_log_type_enabled(v127, v128))
        {
          v129 = (uint8_t *)swift_slowAlloc();
          v130 = swift_slowAlloc();
          v189 = (void *)v130;
          v177 = v102;
          *(_DWORD *)v129 = 136446210;
          v131 = v184;
          sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v132 = sub_23E9460E8();
          v188 = sub_23E90F65C(v132, v133, (uint64_t *)&v189);
          v102 = v177;
          sub_23E945F08();
          swift_bridgeObjectRelease();
          sub_23E92ACE8(v126);
          _os_log_impl(&dword_23E8E7000, v127, v128, "[%{public}s] Running cursor query", v129, 0xCu);
          swift_arrayDestroy();
          v134 = v130;
          v88 = v185;
          MEMORY[0x24265643C](v134, -1, -1);
          v135 = v129;
          v68 = v178;
          MEMORY[0x24265643C](v135, -1, -1);

          ((void (*)(uint64_t, uint64_t))v180)(v167, v183);
          v136 = v182;
        }
        else
        {
          sub_23E92ACE8(v126);

          ((void (*)(uint64_t, uint64_t))v180)(v125, v73);
          v136 = v182;
          v131 = v184;
        }
        v136[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 1;
        v158 = *(void **)(v88 + *(int *)(v131 + 48));
        if (v158)
          objc_msgSend(v158, sel_submitLogEvent_, v136);
        v159 = v102;
        v160 = v186;
        sub_23E92B16C(v164, v181, a9, v68, v186);
        sub_23E92F138(v160);
        sub_23E92F138(v160);

      }
    }
    else
    {
      v115 = v168;
      sub_23E931768(v168);
      v116 = v165;
      sub_23E92AA2C(v88, v165);
      v117 = sub_23E945A1C();
      v118 = sub_23E945DE8();
      if (os_log_type_enabled(v117, v118))
      {
        v119 = (uint8_t *)swift_slowAlloc();
        v120 = swift_slowAlloc();
        v189 = (void *)v120;
        *(_DWORD *)v119 = 136446210;
        v121 = v184;
        sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v122 = sub_23E9460E8();
        v188 = sub_23E90F65C(v122, v123, (uint64_t *)&v189);
        v88 = v185;
        sub_23E945F08();
        swift_bridgeObjectRelease();
        sub_23E92ACE8(v116);
        _os_log_impl(&dword_23E8E7000, v117, v118, "[%{public}s] Query completed", v119, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24265643C](v120, -1, -1);
        MEMORY[0x24265643C](v119, -1, -1);

        ((void (*)(uint64_t, uint64_t))v180)(v168, v73);
        v124 = v182;
      }
      else
      {
        sub_23E92ACE8(v116);

        ((void (*)(uint64_t, uint64_t))v180)(v115, v73);
        v124 = v182;
        v121 = v184;
      }
      v154 = *(void **)(v88 + *(int *)(v121 + 48));
      if (v154)
        objc_msgSend(v154, sel_submitLogEvent_, v124);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
      sub_23E945CBC();

    }
  }
  else
  {
    v91 = v174;
    sub_23E931768(v174);
    v92 = v171;
    sub_23E92AA2C(v88, v171);
    v93 = sub_23E945A1C();
    v94 = sub_23E945DE8();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = swift_slowAlloc();
      v96 = swift_slowAlloc();
      v189 = (void *)v96;
      *(_DWORD *)v95 = 136446466;
      v97 = v184;
      sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v98 = sub_23E9460E8();
      v188 = sub_23E90F65C(v98, v99, (uint64_t *)&v189);
      sub_23E945F08();
      swift_bridgeObjectRelease();
      sub_23E92ACE8(v92);
      *(_WORD *)(v95 + 12) = 2048;
      v188 = v90;
      v88 = v185;
      sub_23E945F08();
      _os_log_impl(&dword_23E8E7000, v93, v94, "[%{public}s] Reached result limit %ld, finishing early", (uint8_t *)v95, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v96, -1, -1);
      v100 = v95;
      v55 = v186;
      MEMORY[0x24265643C](v100, -1, -1);

      ((void (*)(uint64_t, uint64_t))v180)(v174, v183);
      v101 = v182;
    }
    else
    {
      sub_23E92ACE8(v92);

      ((void (*)(uint64_t, uint64_t))v180)(v91, v73);
      v101 = v182;
      v97 = v184;
    }
    v101[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 4;
    v113 = *(void **)(v88 + *(int *)(v97 + 48));
    if (v113)
      objc_msgSend(v113, sel_submitLogEvent_, v101);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
    sub_23E945CBC();
    sub_23E92F138(v55);

  }
}

uint64_t sub_23E92E630(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_23E92EACC(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_23E945BCC();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_23E945B84();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_23E945B84();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_23E945BF0();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_23E9048EC(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_23E9048EC((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_23E945B84();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_23E945BF0();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_23E9048EC(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_23E9048EC((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_23E945FEC();
  __break(1u);
LABEL_42:
  result = sub_23E945FEC();
  __break(1u);
  return result;
}

uint64_t sub_23E92EACC(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_23E945BF0();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_23E9048EC(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_23E9048EC((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_23E945FEC();
  __break(1u);
  return result;
}

uint64_t sub_23E92EC24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v5;
  *(_QWORD *)v5 = v3;
  *(_QWORD *)(v5 + 8) = sub_23E8EAAEC;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a2;
  return swift_task_switch();
}

void sub_23E92EC8C(uint64_t a1)
{
  uint64_t v1;

  sub_23E92AFE8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23E92EC98()
{
  return swift_deallocObject();
}

uint64_t sub_23E92ECA8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E92ECCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CKQueryAsyncSequence();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  v8 = v0 + v3 + *(int *)(v1 + 32);
  v9 = sub_23E945A10();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23E92EE14(void *a1, void *a2, char a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v6 = a3 & 1;
  v7 = *(_QWORD *)(type metadata accessor for CKQueryAsyncSequence() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48) - 8);
  v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23E92B9F0(a1, a2, v6, v3 + v8, *(_QWORD *)(v3 + v9), (_QWORD *)(v3 + v11), *(char **)(v3 + v12), *(_QWORD **)(v3 + ((v12 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23E92EEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for CKQueryAsyncSequence();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
  v5 = *(_QWORD *)(v15 - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + v7 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = v8;
  swift_release();

  v11 = v0 + v3 + *(int *)(v1 + 32);
  v12 = sub_23E945A10();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v15);

  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v14);
  return swift_deallocObject();
}

void sub_23E92F04C(void *a1, char a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(type metadata accessor for CKQueryAsyncSequence() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880) - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E48) - 8)
                           + 80);
  sub_23E92D15C(a1, v4, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(_QWORD *)(v2 + v7), v2 + v9, *(_QWORD *)(v2 + v10), v2 + ((v11 + v10 + 8) & ~v11));
}

id sub_23E92F12C(id a1)
{
  return a1;
}

void sub_23E92F138(id a1)
{

}

uint64_t sub_23E92F144(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23E946130() & 1;
}

uint64_t sub_23E92F198(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_23E946130() & 1;
}

uint64_t sub_23E92F1EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

char *sub_23E92F210(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v27;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    v10 = a2[3];
    *((_QWORD *)a1 + 3) = v10;
    v11 = a3[8];
    v27 = &a1[v11];
    v12 = (uint64_t)a2 + v11;
    v13 = sub_23E945A10();
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v4;
    v16 = v8;
    v17 = v9;
    v18 = v10;
    v14(v27, v12, v13);
    v19 = a3[10];
    *(_QWORD *)&v7[a3[9]] = *(char **)((char *)a2 + a3[9]);
    v20 = &v7[v19];
    v21 = (uint64_t)a2 + v19;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = *(_BYTE *)(v21 + 8);
    v22 = a3[11];
    v23 = a3[12];
    v24 = &v7[v22];
    v25 = (uint64_t)a2 + v22;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = *(_BYTE *)(v25 + 8);
    *(_QWORD *)&v7[v23] = *(char **)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return v7;
}

uint64_t sub_23E92F338(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 32);
  v5 = sub_23E945A10();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

_QWORD *sub_23E92F3B8(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v26;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = *(void **)(a2 + 16);
  v9 = *(void **)(a2 + 24);
  a1[2] = v8;
  a1[3] = v9;
  v10 = a3[8];
  v26 = (char *)a1 + v10;
  v11 = a2 + v10;
  v12 = sub_23E945A10();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  v13(v26, v11, v12);
  v18 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v19 = (char *)a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = *(_BYTE *)(v20 + 8);
  v21 = a3[11];
  v22 = a3[12];
  v23 = (char *)a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = *(_BYTE *)(v24 + 8);
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)(a2 + v22);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_23E92F4B0(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  v12 = *(void **)(a2 + 16);
  v13 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 24);
  v16 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v15;
  v17 = v15;

  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23E945A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[10];
  v23 = a1 + v22;
  v24 = (uint64_t *)(a2 + v22);
  v25 = *v24;
  *(_BYTE *)(v23 + 8) = *((_BYTE *)v24 + 8);
  *(_QWORD *)v23 = v25;
  v26 = a3[11];
  v27 = a1 + v26;
  v28 = (uint64_t *)(a2 + v26);
  v29 = *v28;
  *(_BYTE *)(v27 + 8) = *((_BYTE *)v28 + 8);
  *(_QWORD *)v27 = v29;
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *sub_23E92F5D4(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[8];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E945A10();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = a3[11];
  v15 = a3[12];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  return a1;
}

uint64_t sub_23E92F688(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];

  v10 = a3[8];
  v11 = a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23E945A10();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  v14 = a3[10];
  v15 = a3[11];
  v16 = a1 + v14;
  v17 = (char *)a2 + v14;
  *(_BYTE *)(v16 + 8) = v17[8];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v18 = a1 + v15;
  v19 = (char *)a2 + v15;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = v19[8];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_23E92F788()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E92F794(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23E945A10();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t sub_23E92F810()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23E92F81C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_23E945A10();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23E92F890()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E945A10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23E92F924(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  void *v10;
  _QWORD v11[6];

  v8 = (void *)sub_23E94595C();
  v9 = (void *)sub_23E9459C8();
  v11[4] = sub_23E92FBAC;
  v11[5] = a2;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23E924584;
  v11[3] = &block_descriptor_14;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_createFakeEventsWithDate_homeIdentifier_count_reply_, v8, v9, a5, v10);
  _Block_release(v10);

}

void sub_23E92FA0C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E808, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E92FBAC(void *a1)
{
  uint64_t v1;

  sub_23E92FA0C(a1, v1);
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_23E92FBD0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23E92FC50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EventsAsyncSequenceLogEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23E92FCC0()
{
  return type metadata accessor for EventsAsyncSequenceLogEvent();
}

uint64_t type metadata accessor for EventsAsyncSequenceLogEvent()
{
  uint64_t result;

  result = qword_256DA0F88;
  if (!qword_256DA0F88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E92FD04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E945A10();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EventsAsyncSequenceLogEvent.EventsAsyncSequenceState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EventsAsyncSequenceLogEvent.EventsAsyncSequenceState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_23E92FE68 + 4 * byte_23E94A765[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_23E92FE9C + 4 * byte_23E94A760[v4]))();
}

uint64_t sub_23E92FE9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E92FEA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E92FEACLL);
  return result;
}

uint64_t sub_23E92FEB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E92FEC0);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_23E92FEC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E92FECC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventsAsyncSequenceLogEvent.EventsAsyncSequenceState()
{
  return &type metadata for EventsAsyncSequenceLogEvent.EventsAsyncSequenceState;
}

unint64_t sub_23E92FEEC()
{
  unint64_t result;

  result = qword_256DA0F98;
  if (!qword_256DA0F98)
  {
    result = MEMORY[0x24265637C](&unk_23E94A80C, &type metadata for EventsAsyncSequenceLogEvent.EventsAsyncSequenceState);
    atomic_store(result, (unint64_t *)&qword_256DA0F98);
  }
  return result;
}

uint64_t static HMVCommands.resetConfiguration()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256D9E818 + dword_256D9E818);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E9032FC;
  return v3((uint64_t)v3, (uint64_t)sub_23E92FF94, 0);
}

void sub_23E92FF94(void *a1, uint64_t a2)
{
  void *v3;
  _QWORD v4[6];

  v4[4] = sub_23E9301D8;
  v4[5] = a2;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_23E924584;
  v4[3] = &block_descriptor_15;
  v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilResetConfigurationWithReply_, v3);
  _Block_release(v3);
}

void sub_23E930038(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    v8 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_23E8EAA2C;
    v9[6] = v7;
    v10 = a1;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9ED48, (uint64_t)v9);
    swift_release();
    swift_release();

  }
  else
  {
    v12 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_23E8EA980;
    v13[6] = 0;
    swift_retain();
    sub_23E901EB8((uint64_t)v6, (uint64_t)&unk_256D9E800, (uint64_t)v13);
    swift_release();
  }
}

void sub_23E9301D8(void *a1)
{
  uint64_t v1;

  sub_23E930038(a1, v1);
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t sub_23E9301FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E930224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23E930240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;

  type metadata accessor for XPCPublicClient();
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_QWORD *)(v1 + 48) = 0;
  v5 = *(_OWORD *)(v0 + 24);
  sub_23E922F40();
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v5;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_23E930320;
  return sub_23E946148();
}

uint64_t sub_23E930320()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E93038C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 40);
  objc_msgSend(*(id *)(v1 + 16), sel_invalidate);
  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E9303E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc();
  objc_msgSend(*(id *)(v1 + 16), sel_invalidate);
  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E930438(uint64_t a1, _QWORD *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v18)(void);

  v18 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E878);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E8C0);
  v12 = swift_allocObject();
  swift_defaultActor_initialize();
  v13 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 112);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v14(v13, 1, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v11, v8);
  v14((uint64_t)v7, 0, 1, v8);
  swift_beginAccess();
  sub_23E8ECE28((uint64_t)v7, v13, &qword_256D9E878);
  swift_endAccess();
  v15 = a2[5];
  a2[5] = sub_23E933F40;
  a2[6] = v12;
  swift_retain();
  sub_23E8ECC14(v15);
  v16 = a2[3];
  a2[3] = sub_23E933F48;
  a2[4] = v12;
  swift_retain();
  sub_23E8ECC14(v16);
  sub_23E9231B4();
  v18();
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_23E93061C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8ECC2C();
  v5 = (void *)swift_allocError();
  *v6 = 0;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  v8 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_23E8ED010;
  v9[6] = v7;
  v10 = v5;
  swift_retain();
  swift_retain();
  sub_23E901EB8((uint64_t)v4, (uint64_t)&unk_256DA0FE0, (uint64_t)v9);
  swift_release();
  swift_release();

}

void sub_23E93075C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8ECC2C();
  v5 = (void *)swift_allocError();
  *v6 = 1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  v8 = sub_23E945D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_23E8EAA2C;
  v9[6] = v7;
  v10 = v5;
  swift_retain();
  swift_retain();
  sub_23E901EB8((uint64_t)v4, (uint64_t)&unk_256D9E800, (uint64_t)v9);
  swift_release();
  swift_release();

}

uint64_t sub_23E9308A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  const void *inited;
  void *v20;
  id v21;
  int v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t result;
  char *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];
  _QWORD v35[4];

  v2 = sub_23E945A34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0D80);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v32 = (uint64_t)&v30 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v30 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  type metadata accessor for LoggedObjectPropertyKey();
  inited = (const void *)swift_initStaticObject();
  *(_QWORD *)&v34[0] = &type metadata for HMVCommands;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0E28);
  v20 = (void *)sub_23E946154();
  v31 = inited;
  v21 = objc_getAssociatedObject(v20, inited);
  swift_unknownObjectRelease();
  if (v21)
  {
    sub_23E945F20();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v34, 0, sizeof(v34));
  }
  sub_23E9294A0((uint64_t)v34, (uint64_t)v35);
  v33 = a1;
  if (v35[3])
  {
    v22 = swift_dynamicCast();
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v23(v18, v22 ^ 1u, 1, v2);
  }
  else
  {
    sub_23E8ECF64((uint64_t)v35, &qword_256D9F8E8);
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v23(v18, 1, 1, v2);
  }
  sub_23E9294E8((uint64_t)v18, (uint64_t)v16);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v25 = v24(v16, 1, v2);
  sub_23E8ECF64((uint64_t)v16, &qword_256DA0D80);
  if (v25 == 1)
  {
    v35[0] = &type metadata for HMVCommands;
    sub_23E945B48();
    sub_23E945A28();
    v23(v13, 0, 1, v2);
    sub_23E8ECE28((uint64_t)v13, (uint64_t)v18, &qword_256DA0D80);
    v35[0] = &type metadata for HMVCommands;
    v26 = (void *)sub_23E946154();
    v27 = v32;
    sub_23E9294E8((uint64_t)v18, v32);
    if (v24((char *)v27, 1, v2) == 1)
    {
      v28 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v30, v27, v2);
      v28 = (void *)sub_23E946154();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v2);
    }
    objc_setAssociatedObject(v26, v31, v28, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_23E9294E8((uint64_t)v18, (uint64_t)v8);
  result = v24(v8, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v33, v8, v2);
    return sub_23E8ECF64((uint64_t)v18, &qword_256DA0D80);
  }
  return result;
}

uint64_t sub_23E930C54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  const void *inited;
  void *v21;
  id v22;
  int v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t result;
  uint64_t v31;
  char *v32;
  const void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _OWORD v37[2];
  _QWORD v38[4];

  v36 = a1;
  v1 = sub_23E945A34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0D80);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v31 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v31 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v31 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v31 - v17;
  v19 = type metadata accessor for EventQuery();
  type metadata accessor for LoggedObjectPropertyKey();
  inited = (const void *)swift_initStaticObject();
  v34 = v19;
  *(_QWORD *)&v37[0] = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9ED60);
  v21 = (void *)sub_23E946154();
  v33 = inited;
  v22 = objc_getAssociatedObject(v21, inited);
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_23E945F20();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v37, 0, sizeof(v37));
  }
  v35 = v10;
  sub_23E9294A0((uint64_t)v37, (uint64_t)v38);
  if (v38[3])
  {
    v23 = swift_dynamicCast();
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v24(v18, v23 ^ 1u, 1, v1);
  }
  else
  {
    sub_23E8ECF64((uint64_t)v38, &qword_256D9F8E8);
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v24(v18, 1, 1, v1);
  }
  sub_23E9294E8((uint64_t)v18, (uint64_t)v16);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  v26 = v25(v16, 1, v1);
  sub_23E8ECF64((uint64_t)v16, &qword_256DA0D80);
  if (v26 == 1)
  {
    sub_23E945A28();
    v24(v13, 0, 1, v1);
    sub_23E8ECE28((uint64_t)v13, (uint64_t)v18, &qword_256DA0D80);
    v38[0] = v34;
    v27 = (void *)sub_23E946154();
    v28 = (uint64_t)v35;
    sub_23E9294E8((uint64_t)v18, (uint64_t)v35);
    if (v25((char *)v28, 1, v1) == 1)
    {
      v29 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v32, v28, v1);
      v29 = (void *)sub_23E946154();
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v28, v1);
    }
    objc_setAssociatedObject(v27, v33, v29, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_23E9294E8((uint64_t)v18, (uint64_t)v7);
  result = v25(v7, 1, v1);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v36, v7, v1);
    return sub_23E8ECF64((uint64_t)v18, &qword_256DA0D80);
  }
  return result;
}

uint64_t sub_23E931000@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  const void *inited;
  void *v20;
  id v21;
  int v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t result;
  char *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];
  _QWORD v35[4];

  v2 = sub_23E945A34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0D80);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v32 = (uint64_t)&v30 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v30 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  type metadata accessor for LoggedObjectPropertyKey();
  inited = (const void *)swift_initStaticObject();
  *(_QWORD *)&v34[0] = &type metadata for SharedZoneLookup;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256DA0E30);
  v20 = (void *)sub_23E946154();
  v31 = inited;
  v21 = objc_getAssociatedObject(v20, inited);
  swift_unknownObjectRelease();
  if (v21)
  {
    sub_23E945F20();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v34, 0, sizeof(v34));
  }
  sub_23E9294A0((uint64_t)v34, (uint64_t)v35);
  v33 = a1;
  if (v35[3])
  {
    v22 = swift_dynamicCast();
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v23(v18, v22 ^ 1u, 1, v2);
  }
  else
  {
    sub_23E8ECF64((uint64_t)v35, &qword_256D9F8E8);
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v23(v18, 1, 1, v2);
  }
  sub_23E9294E8((uint64_t)v18, (uint64_t)v16);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v25 = v24(v16, 1, v2);
  sub_23E8ECF64((uint64_t)v16, &qword_256DA0D80);
  if (v25 == 1)
  {
    v35[0] = &type metadata for SharedZoneLookup;
    sub_23E945B48();
    sub_23E945A28();
    v23(v13, 0, 1, v2);
    sub_23E8ECE28((uint64_t)v13, (uint64_t)v18, &qword_256DA0D80);
    v35[0] = &type metadata for SharedZoneLookup;
    v26 = (void *)sub_23E946154();
    v27 = v32;
    sub_23E9294E8((uint64_t)v18, v32);
    if (v24((char *)v27, 1, v2) == 1)
    {
      v28 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v30, v27, v2);
      v28 = (void *)sub_23E946154();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v2);
    }
    objc_setAssociatedObject(v26, v31, v28, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_23E9294E8((uint64_t)v18, (uint64_t)v8);
  result = v24(v8, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v33, v8, v2);
    return sub_23E8ECF64((uint64_t)v18, &qword_256DA0D80);
  }
  return result;
}

uint64_t sub_23E9313B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  const void *inited;
  void *v20;
  id v21;
  int v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t result;
  char *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];
  _QWORD v35[4];

  v2 = sub_23E945A34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0D80);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v32 = (uint64_t)&v30 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v30 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  type metadata accessor for LoggedObjectPropertyKey();
  inited = (const void *)swift_initStaticObject();
  *(_QWORD *)&v34[0] = &type metadata for EventManager;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0E20);
  v20 = (void *)sub_23E946154();
  v31 = inited;
  v21 = objc_getAssociatedObject(v20, inited);
  swift_unknownObjectRelease();
  if (v21)
  {
    sub_23E945F20();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v34, 0, sizeof(v34));
  }
  sub_23E9294A0((uint64_t)v34, (uint64_t)v35);
  v33 = a1;
  if (v35[3])
  {
    v22 = swift_dynamicCast();
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v23(v18, v22 ^ 1u, 1, v2);
  }
  else
  {
    sub_23E8ECF64((uint64_t)v35, &qword_256D9F8E8);
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v23(v18, 1, 1, v2);
  }
  sub_23E9294E8((uint64_t)v18, (uint64_t)v16);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v25 = v24(v16, 1, v2);
  sub_23E8ECF64((uint64_t)v16, &qword_256DA0D80);
  if (v25 == 1)
  {
    v35[0] = &type metadata for EventManager;
    sub_23E945B48();
    sub_23E945A28();
    v23(v13, 0, 1, v2);
    sub_23E8ECE28((uint64_t)v13, (uint64_t)v18, &qword_256DA0D80);
    v35[0] = &type metadata for EventManager;
    v26 = (void *)sub_23E946154();
    v27 = v32;
    sub_23E9294E8((uint64_t)v18, v32);
    if (v24((char *)v27, 1, v2) == 1)
    {
      v28 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v30, v27, v2);
      v28 = (void *)sub_23E946154();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v2);
    }
    objc_setAssociatedObject(v26, v31, v28, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_23E9294E8((uint64_t)v18, (uint64_t)v8);
  result = v24(v8, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v33, v8, v2);
    return sub_23E8ECF64((uint64_t)v18, &qword_256DA0D80);
  }
  return result;
}

uint64_t sub_23E931768@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  const void *inited;
  void *v21;
  id v22;
  int v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t result;
  uint64_t v31;
  char *v32;
  const void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _OWORD v37[2];
  _QWORD v38[4];

  v36 = a1;
  v1 = sub_23E945A34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0D80);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v31 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v31 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v31 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v31 - v17;
  v19 = type metadata accessor for CKQueryAsyncSequence();
  type metadata accessor for LoggedObjectPropertyKey();
  inited = (const void *)swift_initStaticObject();
  v34 = v19;
  *(_QWORD *)&v37[0] = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0E40);
  v21 = (void *)sub_23E946154();
  v33 = inited;
  v22 = objc_getAssociatedObject(v21, inited);
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_23E945F20();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v37, 0, sizeof(v37));
  }
  v35 = v10;
  sub_23E9294A0((uint64_t)v37, (uint64_t)v38);
  if (v38[3])
  {
    v23 = swift_dynamicCast();
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v24(v18, v23 ^ 1u, 1, v1);
  }
  else
  {
    sub_23E8ECF64((uint64_t)v38, &qword_256D9F8E8);
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v24(v18, 1, 1, v1);
  }
  sub_23E9294E8((uint64_t)v18, (uint64_t)v16);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  v26 = v25(v16, 1, v1);
  sub_23E8ECF64((uint64_t)v16, &qword_256DA0D80);
  if (v26 == 1)
  {
    sub_23E945A28();
    v24(v13, 0, 1, v1);
    sub_23E8ECE28((uint64_t)v13, (uint64_t)v18, &qword_256DA0D80);
    v38[0] = v34;
    v27 = (void *)sub_23E946154();
    v28 = (uint64_t)v35;
    sub_23E9294E8((uint64_t)v18, (uint64_t)v35);
    if (v25((char *)v28, 1, v1) == 1)
    {
      v29 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v32, v28, v1);
      v29 = (void *)sub_23E946154();
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v28, v1);
    }
    objc_setAssociatedObject(v27, v33, v29, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_23E9294E8((uint64_t)v18, (uint64_t)v7);
  result = v25(v7, 1, v1);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v36, v7, v1);
    return sub_23E8ECF64((uint64_t)v18, &qword_256DA0D80);
  }
  return result;
}

uint64_t static EventManager.writeEvents(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_256DA0FB0 + dword_256DA0FB0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23E8EAAEC;
  return v5(a1);
}

uint64_t static EventManager.writeFakeEvents(date:homeIdentifier:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256DA0FC0 + dword_256DA0FC0);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E8EAB34;
  return v9(a1, a2, a3);
}

uint64_t sub_23E931BF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t DynamicType;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _DWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t result;
  uint64_t *v67;
  uint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  uint64_t v75;
  void *v76;
  char *v77;
  char *v78;
  char *v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[7];

  v73 = a2;
  v71 = a3;
  v85[5] = *MEMORY[0x24BDAC8D0];
  v4 = sub_23E945A34();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v78 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v77 = (char *)&v68 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (uint8_t *)&v68 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v68 - v13;
  v80 = (void (*)(uint64_t, uint64_t))type metadata accessor for SomeEvent();
  v15 = MEMORY[0x24BDAC7A8](v80);
  v72 = (uint64_t)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v75 = (uint64_t)&v68 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v68 - v19;
  SomeEvent.anyEvent.getter(v85);
  __swift_project_boxed_opaque_existential_1(v85, v85[3]);
  DynamicType = swift_getDynamicType();
  v22 = v85[4];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
  v82 = DynamicType;
  v83 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EED8);
  v23 = sub_23E945B48();
  v25 = v24;
  v74 = a1;
  v79 = v20;
  sub_23E90E028(a1, (uint64_t)v20);
  sub_23E9313B4((uint64_t)v14);
  swift_bridgeObjectRetain_n();
  v26 = sub_23E945A1C();
  v27 = sub_23E945E18();
  v28 = os_log_type_enabled(v26, v27);
  v81 = v4;
  v70 = v23;
  if (v28)
  {
    v29 = swift_slowAlloc();
    v69 = v12;
    v30 = (uint8_t *)v29;
    v31 = v23;
    v32 = swift_slowAlloc();
    v85[0] = v32;
    *(_DWORD *)v30 = 136446210;
    swift_bridgeObjectRetain();
    v82 = sub_23E90F65C(v31, v25, v85);
    sub_23E945F08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23E8E7000, v26, v27, "Writing %{public}s event", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v32, -1, -1);
    v33 = v30;
    v12 = v69;
    MEMORY[0x24265643C](v33, -1, -1);

    v34 = *(void (**)(char *, uint64_t))(v5 + 8);
    v34(v14, v81);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v34 = *(void (**)(char *, uint64_t))(v5 + 8);
    v34(v14, v4);
  }
  sub_23E9313B4((uint64_t)v12);
  v35 = v75;
  sub_23E90E028(v74, v75);
  v36 = sub_23E945A1C();
  v37 = sub_23E945DE8();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v74 = v25;
    v40 = v39;
    v85[0] = v39;
    *(_DWORD *)v38 = 136315138;
    v69 = v38 + 4;
    sub_23E90E028(v35, v72);
    v41 = sub_23E945B48();
    v82 = sub_23E90F65C(v41, v42, v85);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    sub_23E933F90(v35);
    _os_log_impl(&dword_23E8E7000, v36, v37, "%s", v38, 0xCu);
    swift_arrayDestroy();
    v43 = v40;
    v25 = v74;
    MEMORY[0x24265643C](v43, -1, -1);
    MEMORY[0x24265643C](v38, -1, -1);
  }
  else
  {
    sub_23E933F90(v35);
  }

  v34((char *)v12, v81);
  v44 = (uint64_t)v79;
  v45 = (uint64_t)v77;
  sub_23E945824();
  swift_allocObject();
  sub_23E945818();
  sub_23E8E99C8(&qword_256DA0FE8, (uint64_t (*)(uint64_t))type metadata accessor for SomeEvent, (uint64_t)&protocol conformance descriptor for SomeEvent);
  v46 = v76;
  v47 = sub_23E94580C();
  if (v46)
  {
    swift_release();
    sub_23E9313B4((uint64_t)v78);
    v49 = v46;
    swift_bridgeObjectRetain();
    v50 = v46;
    v51 = sub_23E945A1C();
    v52 = sub_23E945E0C();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = swift_slowAlloc();
      v54 = (_QWORD *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      v85[0] = v55;
      *(_DWORD *)v53 = 136446466;
      v80 = (void (*)(uint64_t, uint64_t))v34;
      swift_bridgeObjectRetain();
      v82 = sub_23E90F65C(v70, v25, v85);
      sub_23E945F08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v53 + 12) = 2114;
      v56 = v46;
      v57 = _swift_stdlib_bridgeErrorToNSError();
      v82 = v57;
      sub_23E945F08();
      *v54 = v57;

      _os_log_impl(&dword_23E8E7000, v51, v52, "Failed to encode %{public}s event: %{public}@", (uint8_t *)v53, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
      swift_arrayDestroy();
      MEMORY[0x24265643C](v54, -1, -1);
      swift_arrayDestroy();
      v58 = v55;
      v44 = (uint64_t)v79;
      MEMORY[0x24265643C](v58, -1, -1);
      MEMORY[0x24265643C](v53, -1, -1);

      v80((uint64_t)v78, v81);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v34(v78, v81);
    }
    swift_willThrow();
    result = sub_23E933F90(v44);
    *v73 = v46;
  }
  else
  {
    v59 = v47;
    v60 = v48;
    v80 = (void (*)(uint64_t, uint64_t))v34;
    swift_release();
    swift_bridgeObjectRelease();
    sub_23E91B57C(v59, v60);
    sub_23E9313B4(v45);
    sub_23E91B57C(v59, v60);
    v61 = sub_23E945A1C();
    v62 = sub_23E945DF4();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (_DWORD *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      v84 = v64;
      *v63 = 136315138;
      v65 = (char *)&loc_23E932378 + *((int *)qword_23E9327D0 + (v60 >> 62));
      v78 = (char *)v64;
      __asm { BR              X9 }
    }

    sub_23E91B538(v59, v60);
    sub_23E91B538(v59, v60);
    v80(v45, v81);
    result = sub_23E933F90(v44);
    v67 = v71;
    *v71 = v59;
    v67[1] = v60;
  }
  return result;
}

uint64_t static EventManager.removeEvents(homeIdentifier:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v2 = sub_23E945A10();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v3 = sub_23E945A34();
  v1[15] = v3;
  v1[16] = *(_QWORD *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E9328A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  v1 = v0[9];
  v2 = v0[14];
  v3 = v0[10];
  v4 = v0[11];
  sub_23E9313B4(v0[19]);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[20] = v5;
  v5(v2, v1, v3);
  v6 = sub_23E945A1C();
  v7 = sub_23E945E18();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = v0[14];
    v30 = v0[15];
    v31 = v0[19];
    v9 = v0[10];
    v28 = v0[11];
    v29 = v0[16];
    v32 = v5;
    v10 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v0[7] = 1752392040;
    v34 = v27;
    *(_DWORD *)v10 = 141558274;
    sub_23E945F08();
    *(_WORD *)(v10 + 12) = 2080;
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v11 = sub_23E9460E8();
    v0[8] = sub_23E90F65C(v11, v12, &v34);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    v13 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v13(v8, v9);
    _os_log_impl(&dword_23E8E7000, v6, v7, "Removing all events for home %{mask.hash}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v27, -1, -1);
    v14 = v10;
    v5 = v32;
    MEMORY[0x24265643C](v14, -1, -1);

    v15 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v15(v31, v30);
  }
  else
  {
    v16 = v0[19];
    v17 = v0[15];
    v18 = v0[16];
    v13 = *(void (**)(uint64_t, uint64_t))(v0[11] + 8);
    v13(v0[14], v0[10]);

    v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v16, v17);
  }
  v0[21] = v15;
  v0[22] = v13;
  v19 = v0[10];
  v20 = v0[11];
  v21 = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA0FD0);
  v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v23 = swift_allocObject();
  v0[23] = v23;
  *(_OWORD *)(v23 + 16) = xmmword_23E947240;
  v5(v23 + v22, v21, v19);
  v24 = swift_task_alloc();
  v0[24] = v24;
  *(_QWORD *)(v24 + 16) = v23;
  v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256DA0FD8 + dword_256DA0FD8);
  v25 = (_QWORD *)swift_task_alloc();
  v0[25] = v25;
  *v25 = v0;
  v25[1] = sub_23E932B7C;
  return v33((uint64_t)v33, (uint64_t)sub_23E933F1C, v24);
}

uint64_t sub_23E932B7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E932BE8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease();
  sub_23E9313B4(v2);
  v1(v3, v5, v4);
  v6 = sub_23E945A1C();
  v7 = sub_23E945E18();
  if (os_log_type_enabled(v6, v7))
  {
    v20 = *(_QWORD *)(v0 + 144);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    v18 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    v19 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 80);
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_QWORD *)(v0 + 40) = 1752392040;
    v22 = v11;
    *(_DWORD *)v10 = 141558274;
    sub_23E945F08();
    *(_WORD *)(v10 + 12) = 2080;
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v12 = sub_23E9460E8();
    *(_QWORD *)(v0 + 48) = sub_23E90F65C(v12, v13, &v22);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    v18(v8, v9);
    _os_log_impl(&dword_23E8E7000, v6, v7, "Successfully removed all events for home %{mask.hash}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v11, -1, -1);
    MEMORY[0x24265643C](v10, -1, -1);

    v21(v20, v19);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    v15 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 120);
    (*(void (**)(_QWORD, _QWORD))(v0 + 176))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));

    v14(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E932E48()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  NSObject *log;
  void (*v25)(uint64_t, uint64_t);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;

  v1 = *(void **)(v0 + 208);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 160);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23E9313B4(v3);
  v2(v4, v6, v5);
  v7 = v1;
  v8 = v1;
  v9 = sub_23E945A1C();
  v10 = sub_23E945E00();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 208);
    log = v9;
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    v29 = *(_QWORD *)(v0 + 136);
    v30 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    v28 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 80);
    v14 = swift_slowAlloc();
    v26 = (_QWORD *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_QWORD *)(v0 + 16) = 1752392040;
    v31 = v27;
    *(_DWORD *)v14 = 141558530;
    sub_23E945F08();
    *(_WORD *)(v14 + 12) = 2080;
    sub_23E8E99C8(&qword_256D9ED68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v15 = sub_23E9460E8();
    *(_QWORD *)(v0 + 24) = sub_23E90F65C(v15, v16, &v31);
    sub_23E945F08();
    swift_bridgeObjectRelease();
    v25(v12, v13);
    *(_WORD *)(v14 + 22) = 2114;
    v17 = v11;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v18;
    sub_23E945F08();
    *v26 = v18;

    _os_log_impl(&dword_23E8E7000, log, v10, "Failed to remove all events for home %{mask.hash}s: %{public}@", (uint8_t *)v14, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v26, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v27, -1, -1);
    MEMORY[0x24265643C](v14, -1, -1);

    v30(v29, v28);
  }
  else
  {
    v19 = *(void **)(v0 + 208);
    v20 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    v21 = *(_QWORD *)(v0 + 136);
    v22 = *(_QWORD *)(v0 + 120);
    (*(void (**)(_QWORD, _QWORD))(v0 + 176))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));

    v20(v21, v22);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E93318C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_23E91B57C(a1, a2);
  sub_23E928C68(a1, a2);
  sub_23E91B538(a1, a2);
  v4 = sub_23E945B60();
  swift_release();
  return v4;
}

uint64_t sub_23E933200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23E945B60();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23E933238(uint64_t a1, id *a2)
{
  id v2;

  v2 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E880);
  return sub_23E945CB0();
}

uint64_t sub_23E933280(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_23E945878();
  v9 = result;
  if (result)
  {
    result = sub_23E945890();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_23E945884();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_23E93332C(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

_QWORD *sub_23E93332C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_23E933378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23E945B60();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23E9333AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[5] = a1;
  v2 = sub_23E945A34();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23E933428()
{
  _QWORD *v0;
  int64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __int128 v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20[3];

  v1 = *(_QWORD *)(v0[5] + 16);
  if (v1)
  {
    sub_23E9313B4(v0[10]);
    swift_bridgeObjectRetain();
    v2 = sub_23E945A1C();
    v3 = sub_23E945E18();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v4 = 134217984;
      v0[4] = v1;
      sub_23E945F08();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E8E7000, v2, v3, "Writing %ld event(s)", v4, 0xCu);
      MEMORY[0x24265643C](v4, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    v5 = v0[10];
    v6 = v0[6];
    v7 = v0[5];
    v8 = *(void (**)(uint64_t, uint64_t))(v0[7] + 8);
    v0[11] = v8;
    v8(v5, v6);
    v19 = MEMORY[0x24BEE4AF8];
    sub_23E91C2E8(0, v1, 0);
    v9 = *(_QWORD *)(type metadata accessor for SomeEvent() - 8);
    v10 = v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_23E931BF0(v10, v0 + 2, v20);
      v12 = *(_OWORD *)v20;
      v14 = *(_QWORD *)(v19 + 16);
      v13 = *(_QWORD *)(v19 + 24);
      if (v14 >= v13 >> 1)
      {
        v17 = *(_OWORD *)v20;
        sub_23E91C2E8(v13 > 1, v14 + 1, 1);
        v12 = v17;
      }
      v0[12] = v19;
      *(_QWORD *)(v19 + 16) = v14 + 1;
      *(_OWORD *)(v19 + 16 * v14 + 32) = v12;
      v10 += v11;
      --v1;
    }
    while (v1);
    v15 = swift_task_alloc();
    v0[13] = v15;
    *(_QWORD *)(v15 + 16) = v19;
    v18 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256DA0FD8 + dword_256DA0FD8);
    v16 = (_QWORD *)swift_task_alloc();
    v0[14] = v16;
    *v16 = v0;
    v16[1] = sub_23E9336C4;
    v18((uint64_t)v18, (uint64_t)sub_23E933F88, v15);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23E9336C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E933730()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  sub_23E9313B4(v1);
  v2 = sub_23E945A1C();
  v3 = sub_23E945E18();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23E8E7000, v2, v3, "Successfully wrote event(s)", v4, 2u);
    MEMORY[0x24265643C](v4, -1, -1);
  }
  v5 = *(void (**)(uint64_t, uint64_t))(v0 + 88);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);

  v5(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E93381C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_23E9313B4(v2);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E945A1C();
  v6 = sub_23E945E00();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 120);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138543362;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v11;
    sub_23E945F08();
    *v9 = v11;

    _os_log_impl(&dword_23E8E7000, v5, v6, "Failed to write event(s): %{public}@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v9, -1, -1);
    MEMORY[0x24265643C](v8, -1, -1);
  }
  else
  {
    v12 = *(void **)(v0 + 120);

  }
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 88);
  v14 = *(_QWORD *)(v0 + 64);
  v15 = *(_QWORD *)(v0 + 48);

  v13(v14, v15);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E9339F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v4 = sub_23E945A34();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23E933A70()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  __int128 v11;

  if (*(uint64_t *)(v0 + 56) < 1)
  {
    __break(1u);
  }
  else
  {
    sub_23E9313B4(*(_QWORD *)(v0 + 96));
    v1 = sub_23E945A1C();
    v2 = sub_23E945E18();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = *(_QWORD *)(v0 + 56);
      v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v4 = 134217984;
      *(_QWORD *)(v0 + 32) = v3;
      sub_23E945F08();
      _os_log_impl(&dword_23E8E7000, v1, v2, "Writing %ld fake event(s)", v4, 0xCu);
      MEMORY[0x24265643C](v4, -1, -1);
    }

    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 72) + 8);
    *(_QWORD *)(v0 + 104) = v8;
    v11 = *(_OWORD *)(v0 + 40);
    v8(v5, v6);
    v9 = swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v9;
    *(_OWORD *)(v9 + 16) = v11;
    *(_QWORD *)(v9 + 32) = v7;
    *(_QWORD *)&v11 = (char *)&dword_256DA0FD8 + dword_256DA0FD8;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v10;
    *v10 = v0;
    v10[1] = sub_23E933BDC;
    ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v11, (uint64_t)sub_23E933F7C, v9);
  }
}

uint64_t sub_23E933BDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E933C48()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  sub_23E9313B4(*(_QWORD *)(v0 + 88));
  v1 = sub_23E945A1C();
  v2 = sub_23E945E18();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 56);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    *(_QWORD *)(v0 + 24) = v3;
    sub_23E945F08();
    _os_log_impl(&dword_23E8E7000, v1, v2, "Successfully wrote %ld fake events", v4, 0xCu);
    MEMORY[0x24265643C](v4, -1, -1);
  }
  v5 = *(void (**)(uint64_t, uint64_t))(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 64);

  v5(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E933D54()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc();
  sub_23E9313B4(v2);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E945A1C();
  v6 = sub_23E945E00();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 128);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138543362;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v11;
    sub_23E945F08();
    *v9 = v11;

    _os_log_impl(&dword_23E8E7000, v5, v6, "Failed to write fake event(s): %{public}@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9EE80);
    swift_arrayDestroy();
    MEMORY[0x24265643C](v9, -1, -1);
    MEMORY[0x24265643C](v8, -1, -1);
  }
  else
  {
    v12 = *(void **)(v0 + 128);

  }
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 104);
  v14 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 64);

  v13(v14, v15);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E933F1C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23E9245D8(a1, a2, *(void **)(v2 + 16));
}

ValueMetadata *type metadata accessor for EventManager()
{
  return &type metadata for EventManager;
}

uint64_t sub_23E933F34(uint64_t a1)
{
  uint64_t v1;

  return sub_23E930438(a1, *(_QWORD **)(v1 + 16), *(void (**)(void))(v1 + 24));
}

void sub_23E933F40()
{
  uint64_t v0;

  sub_23E93061C(v0);
}

void sub_23E933F48()
{
  uint64_t v0;

  sub_23E93075C(v0);
}

uint64_t sub_23E933F50()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23E933F7C(void *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23E92F924(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_23E933F88(void *a1, uint64_t a2)
{
  sub_23E910B14(a1, a2);
}

uint64_t sub_23E933F90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SomeEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t HMVCommands.UnpackedEvent.dataType.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t HMVCommands.UnpackedEvent.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23E91B57C(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t static HMVCommands.dumpLocalDatabase()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v0[38] = type metadata accessor for SomeAccessoryEvent();
  v0[39] = swift_task_alloc();
  v0[40] = swift_task_alloc();
  type metadata accessor for SomeEvent();
  v0[41] = swift_task_alloc();
  v0[42] = swift_task_alloc();
  v0[43] = type metadata accessor for EventRecord.DecodedEvent(0);
  v0[44] = swift_task_alloc();
  v0[45] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1008);
  v0[46] = swift_task_alloc();
  v1 = type metadata accessor for EventRecord(0);
  v0[47] = v1;
  v0[48] = *(_QWORD *)(v1 - 8);
  v0[49] = swift_task_alloc();
  v2 = sub_23E945A10();
  v0[50] = v2;
  v0[51] = *(_QWORD *)(v2 - 8);
  v0[52] = swift_task_alloc();
  v0[53] = swift_task_alloc();
  v0[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1010);
  v0[55] = swift_task_alloc();
  v0[56] = swift_task_alloc();
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256D9E820 + dword_256D9E820);
  v3 = (_QWORD *)swift_task_alloc();
  v0[57] = v3;
  *v3 = v0;
  v3[1] = sub_23E9341CC;
  return v5((uint64_t)sub_23E934EA4, 0);
}

uint64_t sub_23E9341CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 464) = a1;
  *(_QWORD *)(v3 + 472) = v1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23E934300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, _QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(unint64_t, uint64_t, uint64_t);
  __int128 v39;
  __int128 v40;
  int isUniquelyReferenced_nonNull_native;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  int EnumCaseMultiPayload;
  uint64_t v66;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int64_t v73;
  uint64_t v74;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, _QWORD, _QWORD);
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  __int128 *v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  __int128 *v89;
  _QWORD *v90;
  _QWORD v91[2];

  v85 = (__int128 *)(v0 + 16);
  v89 = (__int128 *)(v0 + 80);
  v76 = (uint64_t *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 408);
  v81 = *(_QWORD *)(v0 + 384);
  v77 = *(_QWORD *)(v0 + 376);
  v90 = (_QWORD *)MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1018);
  v3 = v0 + 144;
  sub_23E945AD0();
  v4 = 0;
  v78 = v1 + 64;
  v5 = -1;
  v82 = v1;
  v83 = v2;
  v6 = -1 << *(_BYTE *)(v1 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(v1 + 64);
  v80 = (unint64_t)(63 - v6) >> 6;
  v84 = *(void **)(v0 + 472);
  v8 = v90;
  v86 = v0 + 144;
  while (1)
  {
    if (v7)
    {
      v88 = (v7 - 1) & v7;
      v87 = v4;
      v13 = __clz(__rbit64(v7)) | (v4 << 6);
LABEL_8:
      v14 = *(_QWORD *)(v0 + 440);
      (*(void (**)(uint64_t, unint64_t, _QWORD))(v2 + 16))(v14, *(_QWORD *)(v82 + 48) + *(_QWORD *)(v2 + 72) * v13, *(_QWORD *)(v0 + 400));
      v15 = (_QWORD *)(*(_QWORD *)(v82 + 56) + 24 * v13);
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1020);
      v17 = (_QWORD *)(v14 + *(int *)(v16 + 48));
      v18 = v15[1];
      v19 = v15[2];
      *v17 = *v15;
      v17[1] = v18;
      v17[2] = v19;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 0, 1, v16);
      sub_23E91B57C(v18, v19);
      goto LABEL_15;
    }
    v20 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_55;
    if (v20 >= v80)
    {
      v87 = v4;
    }
    else
    {
      v21 = *(_QWORD *)(v78 + 8 * v20);
      if (v21)
        goto LABEL_12;
      v73 = v4 + 2;
      if (v4 + 2 >= v80)
        goto LABEL_50;
      v21 = *(_QWORD *)(v78 + 8 * v73);
      if (v21)
        goto LABEL_35;
      if (v4 + 3 >= v80)
      {
        v87 = v4 + 2;
      }
      else
      {
        v21 = *(_QWORD *)(v78 + 8 * (v4 + 3));
        if (v21)
        {
          v20 = v4 + 3;
          goto LABEL_12;
        }
        v73 = v4 + 4;
        if (v4 + 4 < v80)
        {
          v21 = *(_QWORD *)(v78 + 8 * v73);
          if (v21)
          {
LABEL_35:
            v20 = v73;
LABEL_12:
            v88 = (v21 - 1) & v21;
            v13 = __clz(__rbit64(v21)) + (v20 << 6);
            v87 = v20;
            goto LABEL_8;
          }
          while (1)
          {
            v20 = v73 + 1;
            if (__OFADD__(v73, 1))
              goto LABEL_56;
            if (v20 >= v80)
              break;
            v21 = *(_QWORD *)(v78 + 8 * v20);
            ++v73;
            if (v21)
              goto LABEL_12;
          }
          v20 = v80 - 1;
LABEL_50:
          v87 = v20;
          goto LABEL_14;
        }
        v87 = v4 + 3;
      }
    }
LABEL_14:
    v22 = *(_QWORD *)(v0 + 440);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1020);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    v88 = 0;
LABEL_15:
    v24 = *(_QWORD *)(v0 + 448);
    sub_23E90136C(*(_QWORD *)(v0 + 440), v24, &qword_256DA1010);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1020);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25) == 1)
    {
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v8);
    }
    v26 = (uint64_t *)(*(_QWORD *)(v0 + 448) + *(int *)(v25 + 48));
    v27 = *v26;
    v28 = v26[1];
    v29 = v26[2];
    (*(void (**)(_QWORD))(v2 + 32))(*(_QWORD *)(v0 + 432));
    v30 = v27 - 1;
    if ((unint64_t)(v27 - 1) >= 8)
    {
      v34 = *(void (**)(char *, _QWORD, _QWORD))(v2 + 16);
      goto LABEL_20;
    }
    v31 = v27;
    v32 = *(char **)(v0 + 424);
    v33 = *(_QWORD *)(v0 + 368);
    v34 = *(void (**)(char *, _QWORD, _QWORD))(v2 + 16);
    v34(v32, *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 400));
    LOBYTE(v91[0]) = v30;
    sub_23E91B57C(v28, v29);
    EventRecord.init(identifier:dataType:data:coalescingWindowSeconds:)(v32, (unsigned __int8 *)v91, v28, v29, 0, 1, v33);
    if (v84)
    {
      v36 = *(_QWORD *)(v0 + 368);
      v35 = *(_QWORD *)(v0 + 376);

      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v36, 1, 1, v35);
      sub_23E8ECF64(v36, &qword_256DA1008);
      v84 = 0;
      v3 = v0 + 144;
      v27 = v31;
LABEL_20:
      *(_QWORD *)(v3 + 32) = 0;
      *(_OWORD *)v3 = 0u;
      *(_OWORD *)(v3 + 16) = 0u;
      goto LABEL_21;
    }
    v79 = v34;
    v60 = *(_QWORD *)(v0 + 392);
    v61 = *(_QWORD *)(v0 + 368);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(v81 + 56))(v61, 0, 1, *(_QWORD *)(v0 + 376));
    sub_23E901220(v61, v60, type metadata accessor for EventRecord);
    v62 = (uint64_t *)(v60 + *(int *)(v77 + 32));
    v63 = *v62;
    v64 = v62[1];
    LOBYTE(v91[0]) = *(_BYTE *)(v60 + *(int *)(v77 + 28));
    sub_23E91AC18(v63, v64, (uint64_t)v91);
    sub_23E9011A0(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 352), type metadata accessor for EventRecord.DecodedEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v66 = *(_QWORD *)(v0 + 352);
    if (EnumCaseMultiPayload != 1)
    {
      v69 = *(_QWORD *)(v0 + 328);
      v68 = *(_QWORD *)(v0 + 336);
      v71 = *(_QWORD *)(v0 + 312);
      v70 = *(_QWORD *)(v0 + 320);
      sub_23E901220(v66, v68, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
      sub_23E9011A0(v68, v69, (uint64_t (*)(_QWORD))type metadata accessor for SomeEvent);
      sub_23E901220(v69, v70, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
      sub_23E9011A0(v70, v71, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
      v72 = (char *)&loc_23E93493C + *((int *)qword_23E934E88 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    *(_QWORD *)(v0 + 208) = type metadata accessor for FakeEvent();
    *(_QWORD *)(v0 + 216) = sub_23E8E99C8(&qword_256DA00C0, (uint64_t (*)(uint64_t))type metadata accessor for FakeEvent, (uint64_t)&protocol conformance descriptor for FakeEvent);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v76);
    sub_23E901220(v66, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for FakeEvent);
    v74 = *(_QWORD *)(v0 + 392);
    sub_23E9011E4(*(_QWORD *)(v0 + 360), type metadata accessor for EventRecord.DecodedEvent);
    sub_23E9011E4(v74, type metadata accessor for EventRecord);
    v3 = v0 + 144;
    sub_23E90136C((uint64_t)v76, v86, &qword_256DA1028);
    v84 = 0;
    v34 = v79;
    v27 = v31;
LABEL_21:
    v37 = *(_QWORD *)(v0 + 416);
    v38 = (void (*)(unint64_t, uint64_t, uint64_t))v34;
    v34((char *)v37, *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 400));
    sub_23E8ECF20(v3, (uint64_t)v85, &qword_256DA1028);
    *(_QWORD *)(v0 + 56) = v27;
    *(_QWORD *)(v0 + 64) = v28;
    *(_QWORD *)(v0 + 72) = v29;
    v39 = *(_OWORD *)(v0 + 32);
    *v89 = *v85;
    *(_OWORD *)(v0 + 96) = v39;
    v40 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 128) = v40;
    sub_23E91B57C(v28, v29);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v91[0] = v8;
    v43 = sub_23E93520C(v37);
    v44 = v8[2];
    v45 = (v42 & 1) == 0;
    v46 = v44 + v45;
    if (__OFADD__(v44, v45))
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      JUMPOUT(0x23E934E88);
    }
    v47 = v42;
    if (v8[3] < v46)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v42 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_23E936630();
      v8 = (_QWORD *)v91[0];
      if ((v47 & 1) != 0)
      {
LABEL_4:
        sub_23E93687C((uint64_t)v89, v8[7] + (v43 << 6));
        v2 = v83;
        goto LABEL_5;
      }
    }
LABEL_28:
    v51 = *(_QWORD *)(v0 + 416);
    v52 = *(_QWORD *)(v0 + 400);
    v8[(v43 >> 6) + 8] |= 1 << v43;
    v2 = v83;
    v38(v8[6] + *(_QWORD *)(v83 + 72) * v43, v51, v52);
    v53 = (_OWORD *)(v8[7] + (v43 << 6));
    v54 = *v89;
    v55 = *(_OWORD *)(v0 + 96);
    v56 = *(_OWORD *)(v0 + 128);
    v53[2] = *(_OWORD *)(v0 + 112);
    v53[3] = v56;
    *v53 = v54;
    v53[1] = v55;
    v57 = v8[2];
    v58 = __OFADD__(v57, 1);
    v59 = v57 + 1;
    if (v58)
      goto LABEL_54;
    v8[2] = v59;
LABEL_5:
    v9 = *(_QWORD *)(v0 + 432);
    v10 = *(_QWORD *)(v0 + 416);
    v11 = *(_QWORD *)(v0 + 400);
    swift_bridgeObjectRelease();
    v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v12(v10, v11);
    sub_23E91B538(v28, v29);
    v3 = v0 + 144;
    sub_23E8ECF64(v86, &qword_256DA1028);
    v12(v9, v11);
    v4 = v87;
    v7 = v88;
  }
  v48 = *(_QWORD *)(v0 + 416);
  sub_23E935B9C(v46, isUniquelyReferenced_nonNull_native);
  v8 = (_QWORD *)v91[0];
  v49 = sub_23E93520C(v48);
  if ((v47 & 1) == (v50 & 1))
  {
    v43 = v49;
    if ((v47 & 1) != 0)
      goto LABEL_4;
    goto LABEL_28;
  }
  return sub_23E946160();
}

void sub_23E934EA4(void *a1, uint64_t a2)
{
  void *v3;
  _QWORD v4[6];

  v4[4] = sub_23E936C08;
  v4[5] = a2;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_23E93514C;
  v4[3] = &block_descriptor_16;
  v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilDumpLocalDatabaseWithReply_, v3);
  _Block_release(v3);
}

void sub_23E934F48(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FA40);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a2;
    v10 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = a3;
    v11[5] = sub_23E936FFC;
    v11[6] = v9;
    v12 = a2;
    v13 = a2;
    swift_retain();
    swift_retain();
    sub_23E901EB8((uint64_t)v8, (uint64_t)&unk_256DA1058, (uint64_t)v11);
    swift_release();
    swift_release();

  }
  else if (a1)
  {
    v14 = sub_23E936C28(a1);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = sub_23E945D1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = a3;
    v17[5] = sub_23E936FCC;
    v17[6] = v15;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23E901EB8((uint64_t)v8, (uint64_t)&unk_256D9E860, (uint64_t)v17);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23E93514C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  uint64_t (*v6)(uint64_t);
  id v7;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_23E945A10();
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1050);
    sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v6, MEMORY[0x24BDCEA88]);
    v4 = sub_23E945AC4();
  }
  swift_retain();
  v7 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_23E93520C(uint64_t a1)
{
  uint64_t v2;

  sub_23E945A10();
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_23E945ADC();
  return sub_23E9352DC(a1, v2);
}

unint64_t sub_23E935278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23E9461B4();
  sub_23E945B6C();
  v4 = sub_23E9461E4();
  return sub_23E93541C(a1, a2, v4);
}

unint64_t sub_23E9352DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_23E945A10();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_23E8E99C8(&qword_256D9EEE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_23E945B00();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_23E93541C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23E946130() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23E946130() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_23E9354FC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_23E945A10();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1040);
  v42 = a2;
  v10 = sub_23E94601C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_39;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v18++, 1))
      goto LABEL_41;
    if (v18 >= v39)
      break;
    v23 = v40;
    v24 = v40[v18];
    if (!v24)
    {
      v25 = v18 + 1;
      if (v18 + 1 >= v39)
      {
LABEL_32:
        swift_release();
        v3 = v38;
        if ((v42 & 1) == 0)
          goto LABEL_39;
        goto LABEL_35;
      }
      v24 = v40[v25];
      if (!v24)
      {
        while (1)
        {
          v18 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v18 >= v39)
            goto LABEL_32;
          v24 = v40[v18];
          ++v25;
          if (v24)
            goto LABEL_19;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v18;
    }
LABEL_19:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_20:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_23E8E99C8((unint64_t *)&qword_256D9EA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E945ADC();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_39;
LABEL_35:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_39:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23E935878(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_256DA1068);
  v42 = a2;
  v6 = sub_23E94601C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_23E9461B4();
    sub_23E945B6C();
    result = sub_23E9461E4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E935B9C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  int v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  v3 = v2;
  v5 = sub_23E945A10();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1048);
  v47 = a2;
  v10 = sub_23E94601C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v46 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v44 = v2;
  v45 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v24 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v25 = v24 | (v18 << 6);
      goto LABEL_22;
    }
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v45)
      break;
    v27 = v46;
    v28 = v46[v26];
    ++v18;
    if (!v28)
    {
      v18 = v26 + 1;
      if (v26 + 1 >= v45)
        goto LABEL_34;
      v28 = v46[v18];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v45)
        {
LABEL_34:
          swift_release();
          v3 = v44;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v46[v29];
        if (!v28)
        {
          while (1)
          {
            v18 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v18 >= v45)
              goto LABEL_34;
            v28 = v46[v18];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v18 = v29;
      }
    }
LABEL_21:
    v15 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v18 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v6 + 72);
    v31 = *(_QWORD *)(v9 + 48) + v30 * v25;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v31, v5);
      v32 = (__int128 *)(*(_QWORD *)(v9 + 56) + (v25 << 6));
      v34 = *v32;
      v33 = v32[1];
      v35 = v32[3];
      v50 = v32[2];
      v51 = v35;
      v48 = v34;
      v49 = v33;
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v31, v5);
      sub_23E8ECF20(*(_QWORD *)(v9 + 56) + (v25 << 6), (uint64_t)&v48, &qword_256DA1030);
    }
    sub_23E8E99C8((unint64_t *)&qword_256D9EA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E945ADC();
    v36 = -1 << *(_BYTE *)(v11 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v16 + 8 * (v37 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v16 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v16 + 8 * v38);
      }
      while (v42 == -1);
      v19 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v30 * v19, v8, v5);
    v20 = (_OWORD *)(*(_QWORD *)(v11 + 56) + (v19 << 6));
    v22 = v50;
    v21 = v51;
    v23 = v49;
    *v20 = v48;
    v20[1] = v23;
    v20[2] = v22;
    v20[3] = v21;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v44;
  v27 = v46;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v9 + 32);
  if (v43 >= 64)
    bzero(v27, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v43;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23E935F50(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1038);
  v38 = a2;
  v6 = sub_23E94601C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_23E9461B4();
    sub_23E945B6C();
    result = sub_23E9461E4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

id sub_23E93625C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = v0;
  v2 = sub_23E945A10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1040);
  v6 = *v0;
  v7 = sub_23E946010();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (id)swift_release();
LABEL_26:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (id)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v26 = v6 + 64;
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v12++, 1))
      goto LABEL_28;
    if (v12 >= v27)
    {
LABEL_24:
      result = (id)swift_release();
      v1 = v25;
      goto LABEL_26;
    }
    v22 = *(_QWORD *)(v26 + 8 * v12);
    if (!v22)
      break;
LABEL_23:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v2);
    v19 = 8 * v17;
    v20 = *(void **)(*(_QWORD *)(v6 + 56) + v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v20;
    result = v20;
  }
  v23 = v12 + 1;
  if (v12 + 1 >= v27)
    goto LABEL_24;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    ++v12;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v27)
      goto LABEL_24;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E936478()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_256DA1068);
  v2 = *v0;
  v3 = sub_23E946010();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E936630()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _OWORD v30[4];

  v1 = v0;
  v2 = sub_23E945A10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1048);
  v6 = *v0;
  v7 = sub_23E946010();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v28 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v29 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v29 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = v18 << 6;
    sub_23E8ECF20(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v30, &qword_256DA1030);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    v21 = (_OWORD *)(*(_QWORD *)(v8 + 56) + v20);
    v23 = v30[2];
    v22 = v30[3];
    v24 = v30[1];
    *v21 = v30[0];
    v21[1] = v24;
    v21[2] = v23;
    v21[3] = v22;
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E93687C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s13UnpackedEventVwxx(uint64_t a1)
{
  return sub_23E91B538(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *_s13UnpackedEventVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  v4 = a2[2];
  sub_23E91B57C(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

_QWORD *_s13UnpackedEventVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  sub_23E91B57C(v3, v4);
  v5 = a1[1];
  v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_23E91B538(v5, v6);
  return a1;
}

uint64_t _s13UnpackedEventVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  sub_23E91B538(v4, v5);
  return a1;
}

uint64_t _s13UnpackedEventVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s13UnpackedEventVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HMVCommands.UnpackedEvent()
{
  return &type metadata for HMVCommands.UnpackedEvent;
}

id sub_23E936A58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1038);
  v2 = *v0;
  v3 = sub_23E946010();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_23E936C08(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_23E934F48(a1, a2, v2);
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t sub_23E936C28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47[32];
  char v48[40];
  uint64_t v49;

  v44 = sub_23E945A10();
  v40 = *(_QWORD *)(v44 - 8);
  v2 = MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v39 = (char *)&v34 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1060);
  result = sub_23E946010();
  v6 = (_QWORD *)result;
  v7 = 0;
  v41 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v35 = v9;
  v36 = (unint64_t)(v11 + 63) >> 6;
  v37 = result + 64;
  v38 = MEMORY[0x24BEE4AD8] + 8;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v42 = v7;
  for (i = v14 | (v7 << 6); ; i = __clz(__rbit64(v17)) + (v18 << 6))
  {
    v21 = v40;
    v20 = v41;
    v22 = *(_QWORD *)(v40 + 72) * i;
    v23 = v39;
    v24 = v44;
    (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v39, *(_QWORD *)(v41 + 48) + v22, v44);
    v25 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * i);
    v26 = *(uint64_t (**)(char *, char *, uint64_t))(v21 + 32);
    result = v26(v43, v23, v24);
    if (!*(_QWORD *)(v25 + 16))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    sub_23E9097D8(v25 + 32, (uint64_t)v48);
    swift_bridgeObjectRetain();
    result = swift_dynamicCast();
    if (*(_QWORD *)(v25 + 16) < 2uLL)
      goto LABEL_26;
    v27 = v49;
    sub_23E9097D8(v25 + 64, (uint64_t)v47);
    swift_dynamicCast();
    v28 = v45;
    v29 = v46;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = v26((char *)(v6[6] + v22), v43, v44);
    v30 = (_QWORD *)(v6[7] + 24 * i);
    *v30 = v27;
    v30[1] = v28;
    v30[2] = v29;
    v31 = v6[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_27;
    v6[2] = v33;
    v7 = v42;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v16 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_28;
    if (v16 >= v36)
      return (uint64_t)v6;
    v17 = *(_QWORD *)(v35 + 8 * v16);
    v18 = v7 + 1;
    if (!v17)
    {
      v18 = v7 + 2;
      if (v7 + 2 >= v36)
        return (uint64_t)v6;
      v17 = *(_QWORD *)(v35 + 8 * v18);
      if (!v17)
      {
        v18 = v7 + 3;
        if (v7 + 3 >= v36)
          return (uint64_t)v6;
        v17 = *(_QWORD *)(v35 + 8 * v18);
        if (!v17)
          break;
      }
    }
LABEL_18:
    v13 = (v17 - 1) & v17;
    v42 = v18;
  }
  v19 = v7 + 4;
  if (v7 + 4 >= v36)
    return (uint64_t)v6;
  v17 = *(_QWORD *)(v35 + 8 * v19);
  if (v17)
  {
    v18 = v7 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v36)
      return (uint64_t)v6;
    v17 = *(_QWORD *)(v35 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_18;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23E936F60()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D9E840);
  return sub_23E945CBC();
}

uint64_t sub_23E936FA8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E936FCC()
{
  return sub_23E936F60();
}

uint64_t sub_23E936FD8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E936FFC(uint64_t a1)
{
  uint64_t v1;

  return sub_23E8ECC7C(a1, (id *)(v1 + 16));
}

uint64_t type metadata accessor for AccessoryEventBase(uint64_t a1)
{
  return sub_23E90A0D8(a1, qword_256DA1158);
}

uint64_t sub_23E93701C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E937028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessoryEventBase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23E937064()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E937070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessoryEventBase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AccessoryEventBaseLegacy(uint64_t a1)
{
  return sub_23E90A0D8(a1, qword_256DA10C8);
}

uint64_t sub_23E9370C4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23E93712C(_QWORD *a1, _QWORD *a2, int *a3)
{
  return sub_23E93A1A8(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_23E937138(uint64_t a1, int *a2)
{
  return sub_23E93A35C(a1, a2, type metadata accessor for EventBase);
}

uint64_t sub_23E937144(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_23E93A484(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_23E937150(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_23E93A60C(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_23E93715C(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_23E93A800(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_23E937168(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_23E93A968(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_23E937174()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E937180(uint64_t a1, uint64_t a2, int *a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_23E93718C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E937198(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, type metadata accessor for EventBase);
}

void sub_23E9371A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23E93AD10(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for EventBase);
}

uint64_t sub_23E9371B0()
{
  sub_23E9461B4();
  sub_23E945B6C();
  swift_bridgeObjectRelease();
  return sub_23E9461E4();
}

uint64_t sub_23E937208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  _QWORD v52[5];
  uint64_t v53;

  v53 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v4);
  v45 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E945A10();
  v50 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v49 = (char *)&v41 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v41 - v11;
  v47 = sub_23E9459A4();
  v44 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v46 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for AccessoryEventBase(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA11E0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout(0);
  v20 = *((_QWORD *)v19 - 1);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8EF768(a1, (uint64_t)v52);
  sub_23E939584(v52, (uint64_t)v18);
  if (v2)
  {
    v23 = v53;

    (*(void (**)(char *, uint64_t, uint64_t, int *))(v20 + 56))(v18, 1, 1, v19);
    sub_23E8ECF64((uint64_t)v18, &qword_256DA11E0);
    sub_23E8EF768(a1, (uint64_t)v52);
    sub_23E9389F0((uint64_t)v52, (uint64_t)v15);
    __swift_destroy_boxed_opaque_existential_1(a1);
    return sub_23E901220((uint64_t)v15, v23, type metadata accessor for AccessoryEventBase);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56))(v18, 0, 1, v19);
    __swift_destroy_boxed_opaque_existential_1(a1);
    sub_23E901220((uint64_t)v18, (uint64_t)v22, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
    v25 = v44;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v46, v22, v47);
    v26 = type metadata accessor for EventBaseLegacy(0);
    v27 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
    v27(v48, &v22[*(int *)(v26 + 20)], v6);
    v43 = v22[*(int *)(v26 + 24)];
    v27(v49, &v22[v19[5]], v6);
    v28 = v19[7];
    v29 = &v22[v19[6]];
    v30 = *((_QWORD *)v29 + 1);
    v42 = *(_QWORD *)v29;
    v27(v51, &v22[v28], v6);
    v31 = v19[9];
    v32 = &v22[v19[8]];
    v33 = *((_QWORD *)v32 + 1);
    v41 = *(_QWORD *)v32;
    v34 = v45;
    sub_23E8EED0C((uint64_t)&v22[v31], v45);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E9011E4((uint64_t)v22, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
    v35 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
    v36 = v53;
    v35(v53, v46, v47);
    v37 = type metadata accessor for EventBase(0);
    v38 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 32);
    v38(v36 + *(int *)(v37 + 20), v48, v6);
    *(_BYTE *)(v36 + *(int *)(v37 + 24)) = v43;
    v38(v36 + v13[5], v49, v6);
    v39 = (_QWORD *)(v36 + v13[6]);
    *v39 = v42;
    v39[1] = v30;
    v38(v36 + v13[7], v51, v6);
    v40 = (_QWORD *)(v36 + v13[8]);
    *v40 = v41;
    v40[1] = v33;
    return sub_23E8EF720(v34, v36 + v13[9]);
  }
}

uint64_t sub_23E937628(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v34 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v2);
  v33 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for AccessoryEventBase(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout(0);
  v7 = MEMORY[0x24BDAC7A8](v31);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v32 = (uint64_t)&v31 - v10;
  sub_23E9011A0(v1, (uint64_t)v6, type metadata accessor for AccessoryEventBase);
  v11 = sub_23E9459A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v6, v11);
  v12 = type metadata accessor for EventBase(0);
  v13 = &v6[*(int *)(v12 + 20)];
  v14 = type metadata accessor for EventBaseLegacy(0);
  v15 = &v9[*(int *)(v14 + 20)];
  v16 = sub_23E945A10();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v15, v13, v16);
  v9[*(int *)(v14 + 24)] = v6[*(int *)(v12 + 24)];
  v18 = v31;
  v17(&v9[*(int *)(v31 + 20)], &v6[v4[5]], v16);
  v19 = &v6[v4[6]];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = &v9[*(int *)(v18 + 24)];
  *(_QWORD *)v22 = v20;
  *((_QWORD *)v22 + 1) = v21;
  v23 = v18;
  v17(&v9[*(int *)(v18 + 28)], &v6[v4[7]], v16);
  v24 = &v6[v4[8]];
  v25 = *(_QWORD *)v24;
  v26 = *((_QWORD *)v24 + 1);
  v27 = &v9[*(int *)(v23 + 32)];
  *(_QWORD *)v27 = v25;
  *((_QWORD *)v27 + 1) = v26;
  v28 = v33;
  sub_23E8EED0C((uint64_t)&v6[v4[9]], v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23E9011E4((uint64_t)v6, type metadata accessor for AccessoryEventBase);
  sub_23E8EF720(v28, (uint64_t)&v9[*(int *)(v23 + 36)]);
  v29 = v32;
  sub_23E901220((uint64_t)v9, v32, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
  sub_23E93932C(v34);
  return sub_23E9011E4(v29, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
}

uint64_t sub_23E9378C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9461B4();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  return sub_23E9461E4();
}

uint64_t sub_23E937AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = sub_23E945A10();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v5, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v2 + *(int *)(a2 + 36), (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v4) == 1)
    return sub_23E9461CC();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v4);
  sub_23E9461CC();
  sub_23E945AE8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
}

uint64_t sub_23E937D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = sub_23E945A10();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9461B4();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v5, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v2 + *(int *)(a2 + 36), (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v4) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v4);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  }
  return sub_23E9461E4();
}

uint64_t sub_23E937F60()
{
  return sub_23E8E99C8(&qword_256DA11A0, type metadata accessor for AccessoryEventBase, (uint64_t)&unk_23E94A8F0);
}

uint64_t sub_23E937F8C()
{
  return sub_23E8E99C8(&qword_256DA11A8, type metadata accessor for AccessoryEventBaseLegacy, (uint64_t)&unk_23E94A998);
}

uint64_t sub_23E937FB8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[32];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA11C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E939C68();
  sub_23E9461FC();
  v11[31] = 0;
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256DA0408, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_23E9460C4();
  if (!v2)
  {
    v9 = type metadata accessor for AccessoryEventBase.DocumentLayout(0);
    v11[30] = 1;
    sub_23E945A10();
    sub_23E8E99C8(&qword_256DA0410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23E9460C4();
    v11[29] = *(_BYTE *)(v3 + *(int *)(v9 + 24));
    v11[28] = 2;
    sub_23E921E90();
    sub_23E9460C4();
    v11[27] = 3;
    sub_23E9460C4();
    v11[26] = 4;
    sub_23E9460B8();
    v11[25] = 5;
    sub_23E9460C4();
    v11[24] = 6;
    sub_23E9460B8();
    v11[15] = 7;
    sub_23E9460AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23E93828C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int *v29;
  char *v30;
  void (*v31)(uint64_t, char *, uint64_t);
  char *v32;
  uint64_t v33;
  int *v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v45 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v3);
  v46 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_23E945A10();
  v51 = *(_QWORD *)(v49 - 8);
  v5 = MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)v43 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)v43 - v9;
  v53 = sub_23E9459A4();
  v10 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v52 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA11B0);
  v12 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AccessoryEventBase.DocumentLayout(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E939C68();
  v54 = v14;
  v18 = (uint64_t)v56;
  sub_23E9461F0();
  if (v18)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = v12;
  v44 = (int *)v15;
  v56 = a1;
  v20 = v50;
  v21 = v51;
  v65 = 0;
  sub_23E8E99C8(&qword_256DA03E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v23 = v52;
  v22 = v53;
  sub_23E946088();
  v24 = v22;
  v43[1] = v10;
  v25 = (uint64_t)v17;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v23, v24);
  v64 = 1;
  v26 = sub_23E8E99C8(&qword_256DA03F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v27 = v20;
  v28 = v49;
  sub_23E946088();
  v52 = (char *)v26;
  v29 = v44;
  v30 = v27;
  v31 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v31(v25 + v44[5], v30, v28);
  v62 = 2;
  sub_23E921E4C();
  sub_23E946088();
  *(_BYTE *)(v25 + v29[6]) = v63;
  v61 = 3;
  v32 = v48;
  sub_23E946088();
  v31(v25 + v44[7], v32, v28);
  v60 = 4;
  v33 = sub_23E94607C();
  v34 = v44;
  v35 = (uint64_t *)(v25 + v44[8]);
  *v35 = v33;
  v35[1] = v36;
  v59 = 5;
  v37 = v47;
  sub_23E946088();
  v31(v25 + v34[9], v37, v49);
  v58 = 6;
  v38 = sub_23E94607C();
  v39 = (uint64_t *)(v25 + v34[10]);
  *v39 = v38;
  v39[1] = v40;
  v57 = 7;
  v41 = (uint64_t)v46;
  sub_23E946070();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v54, v55);
  sub_23E8EF720(v41, v25 + v34[11]);
  sub_23E9011A0(v25, v45, type metadata accessor for AccessoryEventBase.DocumentLayout);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  return sub_23E9011E4(v25, type metadata accessor for AccessoryEventBase.DocumentLayout);
}

uint64_t sub_23E9388C0(char *a1, char *a2)
{
  return sub_23E8EA1BC(*a1, *a2);
}

uint64_t sub_23E9388CC()
{
  return sub_23E9371B0();
}

uint64_t sub_23E9388D8()
{
  return sub_23E93D86C();
}

uint64_t sub_23E9388E0()
{
  return sub_23E9371B0();
}

uint64_t sub_23E9388E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E93BB64();
  *a1 = result;
  return result;
}

void sub_23E938914(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_23E94AD90[*v1];
  a1[1] = 0xE100000000000000;
}

uint64_t sub_23E938930()
{
  char *v0;

  return qword_23E94AD90[*v0];
}

uint64_t sub_23E938948@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E93BB64();
  *a1 = result;
  return result;
}

void sub_23E93896C(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_23E938978()
{
  sub_23E939C68();
  return sub_23E946208();
}

uint64_t sub_23E9389A0()
{
  sub_23E939C68();
  return sub_23E946214();
}

uint64_t sub_23E9389C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E93828C(a1, a2);
}

uint64_t sub_23E9389DC(_QWORD *a1)
{
  return sub_23E937FB8(a1);
}

uint64_t sub_23E9389F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  int *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD v44[5];
  uint64_t v45;

  v40 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v4);
  v45 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E945A10();
  v41 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v35 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v35 - v11;
  v13 = sub_23E9459A4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for AccessoryEventBase.DocumentLayout(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E8EF768(a1, (uint64_t)v44);
  sub_23E93828C(v44, (uint64_t)v19);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2)
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
    v21 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
    v21(v12, &v19[v17[5]], v6);
    v22 = v17[7];
    v37 = v19[v17[6]];
    v21(v42, &v19[v22], v6);
    v23 = v17[9];
    v24 = &v19[v17[8]];
    v39 = *(_QWORD *)v24;
    v36 = v12;
    v25 = *((_QWORD *)v24 + 1);
    v21(v43, &v19[v23], v6);
    v26 = v17[11];
    v27 = &v19[v17[10]];
    v28 = *((_QWORD *)v27 + 1);
    v38 = *(_QWORD *)v27;
    sub_23E8EED0C((uint64_t)&v19[v26], v45);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E9011E4((uint64_t)v19, type metadata accessor for AccessoryEventBase.DocumentLayout);
    v29 = v40;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v40, v16, v13);
    v30 = type metadata accessor for EventBase(0);
    v31 = *(void (**)(uint64_t, char *, uint64_t))(v41 + 32);
    v31(v29 + *(int *)(v30 + 20), v36, v6);
    *(_BYTE *)(v29 + *(int *)(v30 + 24)) = v37;
    v32 = (int *)type metadata accessor for AccessoryEventBase(0);
    v31(v29 + v32[5], v42, v6);
    v33 = (_QWORD *)(v29 + v32[6]);
    *v33 = v39;
    v33[1] = v25;
    v31(v29 + v32[7], v43, v6);
    v34 = (_QWORD *)(v29 + v32[8]);
    *v34 = v38;
    v34[1] = v28;
    return sub_23E8EF720(v45, v29 + v32[9]);
  }
  return result;
}

uint64_t sub_23E938CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E9389F0(a1, a2);
}

uint64_t sub_23E938D08(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  int *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v22;
  _QWORD *v23;

  v2 = v1;
  v23 = a1;
  v3 = (int *)type metadata accessor for AccessoryEventBase.DocumentLayout(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E9459A4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, v1, v6);
  v7 = type metadata accessor for EventBase(0);
  v8 = v1 + *(int *)(v7 + 20);
  v9 = &v5[v3[5]];
  v10 = sub_23E945A10();
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v9, v8, v10);
  LOBYTE(v9) = *(_BYTE *)(v1 + *(int *)(v7 + 24));
  v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11(&v5[v3[7]], v1 + v12[5], v10);
  v13 = (uint64_t *)(v1 + v12[6]);
  v14 = *v13;
  v15 = v13[1];
  v11(&v5[v3[9]], v2 + v12[7], v10);
  v16 = (uint64_t *)(v2 + v12[8]);
  v17 = *v16;
  v18 = v16[1];
  sub_23E8EED0C(v2 + v12[9], (uint64_t)&v5[v3[11]]);
  v5[v3[6]] = (char)v9;
  v19 = &v5[v3[8]];
  *(_QWORD *)v19 = v14;
  *((_QWORD *)v19 + 1) = v15;
  v20 = &v5[v3[10]];
  *(_QWORD *)v20 = v17;
  *((_QWORD *)v20 + 1) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23E937FB8(v23);
  return sub_23E9011E4((uint64_t)v5, type metadata accessor for AccessoryEventBase.DocumentLayout);
}

uint64_t sub_23E938EAC(_QWORD *a1)
{
  return sub_23E938D08(a1);
}

uint64_t sub_23E938EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
    return sub_23E9461CC();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
  sub_23E9461CC();
  sub_23E945AE8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t sub_23E9390EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E945A10();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E9461B4();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, v2, MEMORY[0x24BDCEA88]);
  sub_23E945AE8();
  sub_23E9461C0();
  v9 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v0 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  return sub_23E9461E4();
}

uint64_t sub_23E93932C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA11C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E939CC0();
  sub_23E9461FC();
  v14 = 0;
  type metadata accessor for EventBaseLegacy(0);
  sub_23E8E99C8(&qword_256DA11D8, type metadata accessor for EventBaseLegacy, (uint64_t)&unk_23E9498CC);
  sub_23E9460C4();
  if (!v1)
  {
    type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout(0);
    v13 = 1;
    sub_23E945A10();
    sub_23E8E99C8(&qword_256DA0410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23E9460C4();
    v12 = 2;
    sub_23E9460B8();
    v11 = 3;
    sub_23E9460C4();
    v10 = 4;
    sub_23E9460B8();
    v9 = 5;
    sub_23E9460AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23E939584@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23E945A10();
  v41 = *(_QWORD *)(v39 - 8);
  v5 = MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v35 - v7;
  v9 = type metadata accessor for EventBaseLegacy(0);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (uint64_t)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA11E8);
  v11 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_23E939CC0();
  v42 = v13;
  v18 = v45;
  sub_23E9461F0();
  if (v18)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v45 = v11;
  v19 = v41;
  v20 = (uint64_t)v16;
  v21 = v39;
  v51 = 0;
  sub_23E8E99C8(&qword_256DA11F0, type metadata accessor for EventBaseLegacy, (uint64_t)&unk_23E9498A4);
  sub_23E946088();
  sub_23E901220(v43, (uint64_t)v16, type metadata accessor for EventBaseLegacy);
  v50 = 1;
  v22 = v8;
  v23 = sub_23E8E99C8(&qword_256DA03F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E946088();
  v43 = v23;
  v24 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v24(&v16[v14[5]], v22, v21);
  v49 = 2;
  v25 = sub_23E94607C();
  v26 = (uint64_t *)&v16[v14[6]];
  *v26 = v25;
  v26[1] = v27;
  v48 = 3;
  v28 = v38;
  v35[1] = 0;
  sub_23E946088();
  v24(&v16[v14[7]], v28, v21);
  v47 = 4;
  v29 = v42;
  v30 = sub_23E94607C();
  v31 = (uint64_t *)&v16[v14[8]];
  *v31 = v30;
  v31[1] = v32;
  v46 = 5;
  v33 = (uint64_t)v37;
  sub_23E946070();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v40);
  sub_23E8EF720(v33, v20 + v14[9]);
  sub_23E9011A0(v20, v36, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return sub_23E9011E4(v20, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
}

uint64_t sub_23E939AD4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E939AFC
                                                            + 4 * asc_23E94A880[*v0]))(1702060386, 0xE400000000000000);
}

uint64_t sub_23E939AFC()
{
  return 0x6E6564496D6F6F72;
}

uint64_t sub_23E939B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E93BBAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E939BA8(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23E939BB4()
{
  sub_23E939CC0();
  return sub_23E946208();
}

uint64_t sub_23E939BDC()
{
  sub_23E939CC0();
  return sub_23E946214();
}

uint64_t sub_23E939C04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E939584(a1, a2);
}

uint64_t sub_23E939C18(_QWORD *a1)
{
  return sub_23E93932C(a1);
}

uint64_t sub_23E939C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E937208(a1, a2);
}

uint64_t sub_23E939C40(_QWORD *a1)
{
  return sub_23E937628(a1);
}

uint64_t type metadata accessor for AccessoryEventBase.DocumentLayout(uint64_t a1)
{
  return sub_23E90A0D8(a1, qword_256DA12F8);
}

unint64_t sub_23E939C68()
{
  unint64_t result;

  result = qword_256DA11B8;
  if (!qword_256DA11B8)
  {
    result = MEMORY[0x24265637C](&unk_23E94AD38, &type metadata for AccessoryEventBase.DocumentLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA11B8);
  }
  return result;
}

uint64_t type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout(uint64_t a1)
{
  return sub_23E90A0D8(a1, qword_256DA1258);
}

unint64_t sub_23E939CC0()
{
  unint64_t result;

  result = qword_256DA11D0;
  if (!qword_256DA11D0)
  {
    result = MEMORY[0x24265637C](&unk_23E94ACE8, &type metadata for AccessoryEventBaseLegacy.LegacyLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA11D0);
  }
  return result;
}

BOOL _s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  _BOOL8 result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;

  v4 = sub_23E945A10();
  v5 = *(_QWORD *)(v4 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256DA11F8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  v11 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v38 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v38 - v17;
  if ((sub_23E94598C() & 1) == 0)
    return 0;
  v39 = v10;
  v19 = type metadata accessor for EventBase(0);
  if ((sub_23E9459D4() & 1) == 0)
    return 0;
  if (*(unsigned __int8 *)(a1 + *(int *)(v19 + 24)) != *(unsigned __int8 *)(a2 + *(int *)(v19 + 24)))
    return 0;
  v20 = (int *)type metadata accessor for AccessoryEventBase(0);
  if ((sub_23E9459D4() & 1) == 0)
    return 0;
  v21 = v20[6];
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  if (v22 == *v24 && v23 == v24[1] || (v25 = sub_23E946130(), result = 0, (v25 & 1) != 0))
  {
    if ((sub_23E9459D4() & 1) == 0)
      return 0;
    v27 = v20[8];
    v28 = *(_QWORD *)(a1 + v27);
    v29 = *(_QWORD *)(a1 + v27 + 8);
    v30 = (_QWORD *)(a2 + v27);
    if (v28 == *v30 && v29 == v30[1] || (v31 = sub_23E946130(), result = 0, (v31 & 1) != 0))
    {
      sub_23E8EED0C(a1 + v20[9], (uint64_t)v18);
      sub_23E8EED0C(a2 + v20[9], (uint64_t)v16);
      v32 = *(int *)(v8 + 48);
      v33 = (uint64_t)v39;
      v34 = (uint64_t)&v39[v32];
      sub_23E8EED0C((uint64_t)v18, (uint64_t)v39);
      sub_23E8EED0C((uint64_t)v16, v34);
      v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v35(v33, 1, v4) == 1)
      {
        sub_23E8ECF64((uint64_t)v16, (uint64_t *)&unk_256D9ED50);
        sub_23E8ECF64((uint64_t)v18, (uint64_t *)&unk_256D9ED50);
        if (v35(v34, 1, v4) == 1)
        {
          sub_23E8ECF64(v33, (uint64_t *)&unk_256D9ED50);
          return 1;
        }
      }
      else
      {
        sub_23E8EED0C(v33, (uint64_t)v13);
        if (v35(v34, 1, v4) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v34, v4);
          sub_23E8E99C8(&qword_256D9EEE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v36 = sub_23E945B00();
          v37 = *(void (**)(char *, uint64_t))(v5 + 8);
          v37(v7, v4);
          sub_23E8ECF64((uint64_t)v16, (uint64_t *)&unk_256D9ED50);
          sub_23E8ECF64((uint64_t)v18, (uint64_t *)&unk_256D9ED50);
          v37(v13, v4);
          sub_23E8ECF64(v33, (uint64_t *)&unk_256D9ED50);
          return (v36 & 1) != 0;
        }
        sub_23E8ECF64((uint64_t)v16, (uint64_t *)&unk_256D9ED50);
        sub_23E8ECF64((uint64_t)v18, (uint64_t *)&unk_256D9ED50);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      }
      sub_23E8ECF64(v33, qword_256DA11F8);
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AccessoryEventBaseLegacy.LegacyLayout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23E93A11C + 4 * byte_23E94A88B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23E93A150 + 4 * byte_23E94A886[v4]))();
}

uint64_t sub_23E93A150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E93A158(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E93A160);
  return result;
}

uint64_t sub_23E93A16C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E93A174);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23E93A178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E93A180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout.CodingKeys()
{
  return &type metadata for AccessoryEventBaseLegacy.LegacyLayout.CodingKeys;
}

_QWORD *sub_23E93A19C(_QWORD *a1, _QWORD *a2, int *a3)
{
  return sub_23E93A1A8(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

_QWORD *sub_23E93A1A8(_QWORD *a1, _QWORD *a2, int *a3, uint64_t (*a4)(_QWORD))
{
  int v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v6 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v6 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v9 = sub_23E9459A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = a4(0);
    v11 = *(int *)(v10 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23E945A10();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v16(v12, v13, v14);
    *((_BYTE *)a1 + *(int *)(v10 + 24)) = *((_BYTE *)a2 + *(int *)(v10 + 24));
    v16((char *)a1 + a3[5], (char *)a2 + a3[5], v14);
    v17 = a3[6];
    v18 = a3[7];
    v19 = (_QWORD *)((char *)a1 + v17);
    v20 = (_QWORD *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (char *)a1 + v18;
    v23 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    v16(v22, v23, v14);
    v24 = a3[8];
    v25 = a3[9];
    v26 = (_QWORD *)((char *)a1 + v24);
    v27 = (_QWORD *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (char *)a1 + v25;
    v30 = (char *)a2 + v25;
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    if (v31(v30, 1, v14))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v16(v29, v30, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v29, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t sub_23E93A350(uint64_t a1, int *a2)
{
  return sub_23E93A35C(a1, a2, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_23E93A35C(uint64_t a1, int *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(uint64_t, uint64_t);

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  v7 = a1 + *(int *)(a3(0) + 20);
  v8 = sub_23E945A10();
  v9 = *(_QWORD *)(v8 - 8);
  v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v12(v7, v8);
  v12(a1 + a2[5], v8);
  swift_bridgeObjectRelease();
  v12(a1 + a2[7], v8);
  swift_bridgeObjectRelease();
  v10 = a1 + a2[9];
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v8);
  return result;
}

uint64_t sub_23E93A478(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_23E93A484(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_23E93A484(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;

  v8 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  v9 = a4(0);
  v10 = *(int *)(v9 + 20);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23E945A10();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 16);
  v15(v11, v12, v13);
  *(_BYTE *)(a1 + *(int *)(v9 + 24)) = *(_BYTE *)(a2 + *(int *)(v9 + 24));
  v15((void *)(a1 + a3[5]), (const void *)(a2 + a3[5]), v13);
  v16 = a3[6];
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (void *)(a1 + v17);
  v22 = (const void *)(a2 + v17);
  swift_bridgeObjectRetain();
  v15(v21, v22, v13);
  v23 = a3[8];
  v24 = a3[9];
  v25 = (_QWORD *)(a1 + v23);
  v26 = (_QWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (void *)(a1 + v24);
  v29 = (const void *)(a2 + v24);
  v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  if (v30(v29, 1, v13))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v15(v28, v29, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_23E93A600(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_23E93A60C(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_23E93A60C(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t (*v25)(const void *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;

  v8 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(a1, a2, v8);
  v9 = a4(0);
  v10 = *(int *)(v9 + 20);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23E945A10();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  *(_BYTE *)(a1 + *(int *)(v9 + 24)) = *(_BYTE *)(a2 + *(int *)(v9 + 24));
  v15((void *)(a1 + a3[5]), (const void *)(a2 + a3[5]), v13);
  v16 = a3[6];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v13);
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v9) = v25((const void *)(a1 + v22), 1, v13);
  v26 = v25(v24, 1, v13);
  if (!(_DWORD)v9)
  {
    if (!v26)
    {
      v15(v23, v24, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v23, v13);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v23, v24, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
  return a1;
}

uint64_t sub_23E93A7F4(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_23E93A800(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_23E93A800(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;

  v8 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  v9 = a4(0);
  v10 = *(int *)(v9 + 20);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23E945A10();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
  v15(v11, v12, v13);
  *(_BYTE *)(a1 + *(int *)(v9 + 24)) = *(_BYTE *)(a2 + *(int *)(v9 + 24));
  v15((void *)(a1 + a3[5]), (const void *)(a2 + a3[5]), v13);
  v16 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v15((void *)(a1 + v16), (const void *)(a2 + v16), v13);
  v17 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v15(v18, v19, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_23E93A95C(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_23E93A968(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_23E93A968(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t (*v29)(const void *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;

  v8 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(a1, a2, v8);
  v9 = a4(0);
  v10 = *(int *)(v9 + 20);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23E945A10();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 40);
  v15(v11, v12, v13);
  *(_BYTE *)(a1 + *(int *)(v9 + 24)) = *(_BYTE *)(a2 + *(int *)(v9 + 24));
  v15((void *)(a1 + a3[5]), (const void *)(a2 + a3[5]), v13);
  v16 = a3[6];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v15((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v13);
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v9) = v29((const void *)(a1 + v26), 1, v13);
  v30 = v29(v28, 1, v13);
  if (!(_DWORD)v9)
  {
    if (!v30)
    {
      v15(v27, v28, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v27, v13);
    goto LABEL_6;
  }
  if (v30)
  {
LABEL_6:
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v27, v28, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
  return a1;
}

uint64_t sub_23E93AB30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E93AB3C(uint64_t a1, uint64_t a2, int *a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
  {
    v9 = v7;
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v11 = a1;
    return v10(v11, a2, v9);
  }
  v12 = sub_23E945A10();
  v13 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v9 = v12;
    v14 = a3[5];
LABEL_10:
    v11 = a1 + v14;
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    return v10(v11, a2, v9);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    v13 = *(_QWORD *)(v9 - 8);
    v14 = a3[9];
    goto LABEL_10;
  }
  v15 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  return (v15 + 1);
}

uint64_t sub_23E93AC1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E93AC28(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, type metadata accessor for EventBaseLegacy);
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, int a3, int *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    v11 = v9;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v13 = a1;
  }
  else
  {
    result = sub_23E945A10();
    v15 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v15 + 84) == a3)
    {
      v11 = result;
      v16 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
        return result;
      }
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
      v15 = *(_QWORD *)(v11 - 8);
      v16 = a4[9];
    }
    v13 = a1 + v16;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  }
  return v12(v13, a2, a2, v11);
}

void sub_23E93AD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23E93AD10(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for EventBaseLegacy);
}

void sub_23E93AD10(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  a4(319);
  if (v4 <= 0x3F)
  {
    sub_23E945A10();
    if (v5 <= 0x3F)
    {
      sub_23E8F4C94();
      if (v6 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t storeEnumTagSinglePayload for AccessoryEventBase.DocumentLayout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E93AE08 + 4 * byte_23E94A895[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E93AE3C + 4 * byte_23E94A890[v4]))();
}

uint64_t sub_23E93AE3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E93AE44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E93AE4CLL);
  return result;
}

uint64_t sub_23E93AE58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E93AE60);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E93AE64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E93AE6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryEventBase.DocumentLayout.CodingKeys()
{
  return &type metadata for AccessoryEventBase.DocumentLayout.CodingKeys;
}

_QWORD *sub_23E93AE88(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E9459A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E945A10();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v13((char *)a1 + v14, (char *)a2 + v14, v11);
    v15 = a3[8];
    v16 = a3[9];
    v17 = (_QWORD *)((char *)a1 + v15);
    v18 = (_QWORD *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (char *)a1 + v16;
    v21 = (char *)a2 + v16;
    swift_bridgeObjectRetain();
    v13(v20, v21, v11);
    v22 = a3[10];
    v23 = a3[11];
    v24 = (_QWORD *)((char *)a1 + v22);
    v25 = (_QWORD *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = (char *)a1 + v23;
    v28 = (char *)a2 + v23;
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v29(v28, 1, v11))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v13(v27, v28, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_23E93B014(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  v4 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_23E945A10();
  v7 = *(_QWORD *)(v6 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v5, v6);
  v10(a1 + a2[7], v6);
  swift_bridgeObjectRelease();
  v10(a1 + a2[9], v6);
  swift_bridgeObjectRelease();
  v8 = a1 + a2[11];
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v6);
  return result;
}

uint64_t sub_23E93B124(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  unsigned int (*v28)(const void *, uint64_t, uint64_t);
  uint64_t v29;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23E945A10();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12((void *)(a1 + v13), (const void *)(a2 + v13), v10);
  v14 = a3[8];
  v15 = a3[9];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (void *)(a1 + v15);
  v20 = (const void *)(a2 + v15);
  swift_bridgeObjectRetain();
  v12(v19, v20, v10);
  v21 = a3[10];
  v22 = a3[11];
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = (void *)(a1 + v22);
  v27 = (const void *)(a2 + v22);
  v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v28(v27, 1, v10))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v12(v26, v27, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v26, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_23E93B284(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t (*v22)(const void *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23E945A10();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12((void *)(a1 + a3[9]), (const void *)(a2 + a3[9]), v10);
  v16 = a3[10];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[11];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v22((const void *)(a1 + v19), 1, v10);
  v23 = v22(v21, 1, v10);
  if (!(_DWORD)v8)
  {
    if (!v23)
    {
      v12(v20, v21, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v20, v10);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v20, v21, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  return a1;
}

uint64_t sub_23E93B454(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23E945A10();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12((void *)(a1 + v13), (const void *)(a2 + v13), v10);
  v14 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v12((void *)(a1 + v14), (const void *)(a2 + v14), v10);
  v15 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v12(v16, v17, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_23E93B594(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t (*v27)(const void *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;

  v6 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23E945A10();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12((void *)(a1 + v13), (const void *)(a2 + v13), v10);
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v12((void *)(a1 + a3[9]), (const void *)(a2 + a3[9]), v10);
  v19 = a3[10];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[11];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v27((const void *)(a1 + v24), 1, v10);
  v28 = v27(v26, 1, v10);
  if (!(_DWORD)v8)
  {
    if (!v28)
    {
      v12(v25, v26, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v25, v10);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v25, v26, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
  return a1;
}

uint64_t sub_23E93B740()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E93B74C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = sub_23E9459A4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23E945A10();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[11];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_23E93B820()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E93B82C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_23E9459A4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_23E945A10();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[8] + 8) = (a2 - 1);
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[11];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E93B8FC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23E9459A4();
  if (v0 <= 0x3F)
  {
    sub_23E945A10();
    if (v1 <= 0x3F)
    {
      sub_23E8F4C94();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

unint64_t sub_23E93B9B8()
{
  unint64_t result;

  result = qword_256DA1348;
  if (!qword_256DA1348)
  {
    result = MEMORY[0x24265637C](&unk_23E94ABB8, &type metadata for AccessoryEventBase.DocumentLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1348);
  }
  return result;
}

unint64_t sub_23E93BA00()
{
  unint64_t result;

  result = qword_256DA1350;
  if (!qword_256DA1350)
  {
    result = MEMORY[0x24265637C](&unk_23E94ACC0, &type metadata for AccessoryEventBaseLegacy.LegacyLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1350);
  }
  return result;
}

unint64_t sub_23E93BA48()
{
  unint64_t result;

  result = qword_256DA1358;
  if (!qword_256DA1358)
  {
    result = MEMORY[0x24265637C](&unk_23E94AC30, &type metadata for AccessoryEventBaseLegacy.LegacyLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1358);
  }
  return result;
}

unint64_t sub_23E93BA90()
{
  unint64_t result;

  result = qword_256DA1360;
  if (!qword_256DA1360)
  {
    result = MEMORY[0x24265637C](&unk_23E94AC58, &type metadata for AccessoryEventBaseLegacy.LegacyLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1360);
  }
  return result;
}

unint64_t sub_23E93BAD8()
{
  unint64_t result;

  result = qword_256DA1368;
  if (!qword_256DA1368)
  {
    result = MEMORY[0x24265637C](&unk_23E94AAF0, &type metadata for AccessoryEventBase.DocumentLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1368);
  }
  return result;
}

unint64_t sub_23E93BB20()
{
  unint64_t result;

  result = qword_256DA1370;
  if (!qword_256DA1370)
  {
    result = MEMORY[0x24265637C](&unk_23E94AB18, &type metadata for AccessoryEventBase.DocumentLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1370);
  }
  return result;
}

uint64_t sub_23E93BB64()
{
  unint64_t v0;

  v0 = sub_23E94604C();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_23E93BBAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702060386 && a2 == 0xE400000000000000;
  if (v2 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6564496D6F6F72 && a2 == 0xEE00726569666974 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E94CF70 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xED0000656D614E79 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E65644972657375 && a2 == 0xEE00726569666974)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23E946130();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

_QWORD *sub_23E93BE78@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_23E93BFA8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  id v5;
  char v6;
  id v7;
  char v8;
  id v9;
  char v10;
  id v11;
  char v12;
  id v13;
  char v14;
  id v15;
  char v16;
  id v17;
  char v18;
  id v19;
  char v20;
  id v21;
  char v22;
  id v23;
  char v24;
  uint64_t result;
  double v26;
  id v27;
  char v28;
  id v29;
  char v30;
  id v31;
  char v32;
  uint64_t v33;
  id v34;
  char v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  char v41;
  double v42;
  id v43;
  char v44;
  double v45;
  id v46;
  char v47;
  id v48;
  char v49;
  id v50;
  char v51;
  id v52;
  char v53;
  id v54;
  char v55;
  id v56;
  char v57;
  id v58;
  char v59;
  id v60;
  char v61;
  id v62;
  char v63;
  id v64;
  char v65;
  id v66;
  char v67;
  id v68;
  char v69;
  id v70;
  char v71;
  id v72;
  char v73;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numFetchedCKRecords));
  v3 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v2, 0xD000000000000013, 0x800000023E94D3F0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_totalCKRecordSize) / 1000);
  v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v5, 0x6365524B436D7573, 0xEF657A695364726FLL, v6);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueries));
  v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v7, 0x6575514B436D756ELL, 0xEC00000073656972, v8);
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueriesSucceeded));
  v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v9, 0xD000000000000015, 0x800000023E94D020, v10);
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryCancelled));
  v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v11, 0xD000000000000010, 0x800000023E94D040, v12);
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryDroppedEvents));
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v13, 0xD000000000000015, 0x800000023E94D410, v14);
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryReachedLimit));
  v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v15, 0xD00000000000001ALL, 0x800000023E94D430, v16);
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryTerminatedStream));
  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v17, 0xD00000000000001ELL, 0x800000023E94D450, v18);
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryResultNotHandled));
  v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v19, 0xD00000000000001ELL, 0x800000023E94D470, v20);
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1+ OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryResultProcessingEncounteredError));
  v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v21, 0xD00000000000002ELL, 0x800000023E94D490, v22);
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryEncounteredError));
  v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v23, 0xD000000000000013, 0x800000023E94D4C0, v24);
  result = swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionStartTime + 8) & 1) == 0
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionEndTime + 8) & 1) == 0)
  {
    v26 = (*(double *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionEndTime)
         - *(double *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionStartTime))
        * 1000.0;
    if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) != 0)
    {
      if (v26 > -9.22337204e18)
      {
        if (v26 < 9.22337204e18)
        {
          v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, (uint64_t)v26);
          v28 = swift_isUniquelyReferenced_nonNull_native();
          sub_23E93D4CC((uint64_t)v27, 0xD000000000000018, 0x800000023E94D5E0, v28);
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
LABEL_15:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_7:
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryType));
  v30 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v29, 0x7079547972657571, 0xE900000000000065, v30);
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_limit));
  v32 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v31, 0x74696D696CLL, 0xE500000000000000, v32);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_scope))
    v33 = 2;
  else
    v33 = 1;
  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v33);
  v35 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v34, 0x65706F6373, 0xE500000000000000, v35);
  swift_bridgeObjectRelease();
  v36 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v37 = objc_msgSend(v36, sel_name);

  if (v37)
  {
    sub_23E945B18();

  }
  v38 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  v39 = (void *)sub_23E945B0C();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v38, sel_initWithString_, v39);

  v41 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v40, 0x4E737365636F7270, 0xEB00000000656D61, v41);
  swift_bridgeObjectRelease();
  sub_23E945980();
  v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v42 / -86400.0);
  v44 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v43, 0xD000000000000010, 0x800000023E94D4E0, v44);
  swift_bridgeObjectRelease();
  sub_23E945950();
  v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v45 / 86400.0);
  v47 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v46, 0xD000000000000011, 0x800000023E94D500, v47);
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numProcessedEvents));
  v49 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v48, 0xD000000000000012, 0x800000023E94D520, v49);
  swift_bridgeObjectRelease();
  v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEventsSavedToCache));
  v51 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v50, 0xD000000000000015, 0x800000023E94D220, v51);
  swift_bridgeObjectRelease();
  v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredExpiredRecords));
  v53 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v52, 0xD000000000000018, 0x800000023E94D1C0, v53);
  swift_bridgeObjectRelease();
  v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNonUUIDNameRecords));
  v55 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v54, 0xD00000000000001CLL, 0x800000023E94D200, v55);
  swift_bridgeObjectRelease();
  v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNoCreationDateRecords));
  v57 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v56, 0xD00000000000001FLL, 0x800000023E94D1E0, v57);
  swift_bridgeObjectRelease();
  v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEmittedEvents));
  v59 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v58, 0xD000000000000010, 0x800000023E94D240, v59);
  swift_bridgeObjectRelease();
  v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingDroppedEvents));
  v61 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v60, 0xD00000000000001CLL, 0x800000023E94D540, v61);
  swift_bridgeObjectRelease();
  v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingReachedLimit));
  v63 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v62, 0xD00000000000001BLL, 0x800000023E94D560, v63);
  swift_bridgeObjectRelease();
  v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingTerminatedStream));
  v65 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v64, 0xD00000000000001FLL, 0x800000023E94D580, v65);
  swift_bridgeObjectRelease();
  v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingResultNotHandled));
  v67 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v66, 0xD00000000000001FLL, 0x800000023E94D5A0, v67);
  swift_bridgeObjectRelease();
  v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingEncounteredError));
  v69 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v68, 0xD00000000000001FLL, 0x800000023E94D5C0, v69);
  swift_bridgeObjectRelease();
  v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_cancelled));
  v71 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v70, 0x6E61437972657571, 0xEE0064656C6C6563, v71);
  swift_bridgeObjectRelease();
  v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_succeeded));
  v73 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E93D4CC((uint64_t)v72, 0x6375537972657571, 0xEE00646564656563, v73);
  swift_bridgeObjectRelease();
  return v3;
}

id sub_23E93CD8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  _BYTE *v6;
  char v10;
  char *v11;
  char *v12;
  char *v13;
  char v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  void (*v21)(uint64_t, uint64_t);
  objc_super v24;

  v10 = a2 & 1;
  v11 = &v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryStartTime];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numFetchedCKRecords] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_totalCKRecordSize] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueries] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueriesSucceeded] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryCancelled] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryDroppedEvents] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryReachedLimit] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryTerminatedStream] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryResultNotHandled] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryResultProcessingEncounteredError] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryEncounteredError] = 0;
  v12 = &v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionStartTime];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = &v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionEndTime];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numProcessedEvents] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredExpiredRecords] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNoCreationDateRecords] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNonUUIDNameRecords] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEventsSavedToCache] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEmittedEvents] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingDroppedEvents] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingReachedLimit] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingTerminatedStream] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingResultNotHandled] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingEncounteredError] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_cancelled] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_succeeded] = 0;
  v14 = *a6;
  v15 = &v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_coreAnalyticsEventName];
  *v15 = 0xD000000000000027;
  v15[1] = 0x800000023E94D620;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_coreAnalyticsEventOptions] = 0;
  v16 = &v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryStartDate];
  v17 = sub_23E9459A4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v19(v16, a3, v17);
  v19(&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryEndDate], a4, v17);
  *(_QWORD *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_limit] = a5;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryType] = v10;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_scope] = v14;
  v24.receiver = v6;
  v24.super_class = (Class)type metadata accessor for QueryLogEvent();
  v20 = objc_msgSendSuper2(&v24, sel_init);
  v21 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v21(a4, v17);
  v21(a3, v17);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v20;
}

id sub_23E93D084()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QueryLogEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23E93D12C()
{
  return type metadata accessor for QueryLogEvent();
}

uint64_t type metadata accessor for QueryLogEvent()
{
  uint64_t result;

  result = qword_256DA1418;
  if (!qword_256DA1418)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E93D170()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E9459A4();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t storeEnumTagSinglePayload for QueryLogEvent.QueryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E93D290 + 4 * byte_23E94ADDC[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E93D2C4 + 4 * byte_23E94ADD7[v4]))();
}

uint64_t sub_23E93D2C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E93D2CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E93D2D4);
  return result;
}

uint64_t sub_23E93D2E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E93D2E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E93D2EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E93D2F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QueryLogEvent.QueryType()
{
  return &type metadata for QueryLogEvent.QueryType;
}

unint64_t sub_23E93D314()
{
  unint64_t result;

  result = qword_256DA1428;
  if (!qword_256DA1428)
  {
    result = MEMORY[0x24265637C](&unk_23E94AEC4, &type metadata for QueryLogEvent.QueryType);
    atomic_store(result, (unint64_t *)&qword_256DA1428);
  }
  return result;
}

void sub_23E93D358(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_23E945A10();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23E93520C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = *(void **)(v21 + 8 * v14);
        *(_QWORD *)(v21 + 8 * v14) = a1;

        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_23E93625C();
      goto LABEL_7;
    }
    sub_23E9354FC(v17, a3 & 1);
    v23 = sub_23E93520C(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      sub_23E93D628(v14, (uint64_t)v11, a1, v20);
      return;
    }
  }
  sub_23E946160();
  __break(1u);
}

void sub_23E93D4CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23E935278(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23E936A58();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_23E935F50(v15, a4 & 1);
  v20 = sub_23E935278(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_23E946160();
  __break(1u);
}

uint64_t sub_23E93D628(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23E945A10();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_23E93D6C0()
{
  unint64_t result;

  result = qword_256DA1430;
  if (!qword_256DA1430)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256DA1430);
  }
  return result;
}

void sub_23E93D6FC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23E93D744()
{
  sub_23E945B6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E93D86C()
{
  sub_23E945B6C();
  return swift_bridgeObjectRelease();
}

unint64_t Constants.rawValue.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t Constants.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23E94604C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_23E93D908()
{
  sub_23E9461B4();
  sub_23E945B6C();
  return sub_23E9461E4();
}

uint64_t sub_23E93D95C()
{
  return sub_23E945B6C();
}

uint64_t sub_23E93D978()
{
  sub_23E9461B4();
  sub_23E945B6C();
  return sub_23E9461E4();
}

uint64_t sub_23E93D9C8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23E94604C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_23E93DA18(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x800000023E94BC20;
}

HomeKitEvents::CKOperationGroupName_optional __swiftcall CKOperationGroupName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeKitEvents::CKOperationGroupName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E94604C();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CKOperationGroupName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E93DAC8 + 4 * byte_23E94AEFB[*v0]))(0x536C616974696E49, 0xEC00000070757465);
}

uint64_t sub_23E93DAC8()
{
  return 0x446C616974696E49;
}

uint64_t sub_23E93DAEC()
{
  return 0x556C616974696E49;
}

uint64_t sub_23E93DB10()
{
  return 0x6369646F69726550;
}

unint64_t sub_23E93DB28()
{
  return 0xD000000000000011;
}

uint64_t sub_23E93DB48()
{
  return 0x74726174736552;
}

uint64_t sub_23E93DB60()
{
  return 0x6769725468737550;
}

uint64_t sub_23E93DB84()
{
  return 0x6E79537465736552;
}

unint64_t sub_23E93DBA0()
{
  return 0xD000000000000012;
}

unint64_t sub_23E93DBE0()
{
  unint64_t result;

  result = qword_256DA1440;
  if (!qword_256DA1440)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for Constants, &type metadata for Constants);
    atomic_store(result, (unint64_t *)&qword_256DA1440);
  }
  return result;
}

void sub_23E93DC24(char *a1)
{
  sub_23E8E9ED8(*a1);
}

unint64_t sub_23E93DC34()
{
  unint64_t result;

  result = qword_256DA1448;
  if (!qword_256DA1448)
  {
    result = MEMORY[0x24265637C](&protocol conformance descriptor for CKOperationGroupName, &type metadata for CKOperationGroupName);
    atomic_store(result, (unint64_t *)&qword_256DA1448);
  }
  return result;
}

uint64_t sub_23E93DC78()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23E9461B4();
  sub_23E93D6FC((uint64_t)v3, v1);
  return sub_23E9461E4();
}

void sub_23E93DCBC(uint64_t a1)
{
  char *v1;

  sub_23E93D6FC(a1, *v1);
}

uint64_t sub_23E93DCC4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23E9461B4();
  sub_23E93D6FC((uint64_t)v3, v1);
  return sub_23E9461E4();
}

HomeKitEvents::CKOperationGroupName_optional sub_23E93DD04(Swift::String *a1)
{
  return CKOperationGroupName.init(rawValue:)(*a1);
}

uint64_t sub_23E93DD10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CKOperationGroupName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for Constants(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E93DD74 + 4 * byte_23E94AF06[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E93DD94 + 4 * byte_23E94AF0B[v4]))();
}

_BYTE *sub_23E93DD74(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E93DD94(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E93DD9C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E93DDA4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E93DDAC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E93DDB4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Constants()
{
  return &type metadata for Constants;
}

uint64_t getEnumTagSinglePayload for CKOperationGroupName(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CKOperationGroupName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_23E93DEAC + 4 * byte_23E94AF15[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_23E93DEE0 + 4 * byte_23E94AF10[v4]))();
}

uint64_t sub_23E93DEE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E93DEE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E93DEF0);
  return result;
}

uint64_t sub_23E93DEFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E93DF04);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_23E93DF08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E93DF10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CKOperationGroupName()
{
  return &type metadata for CKOperationGroupName;
}

void sub_23E93DF2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v1);
  sub_23E941690(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_23E93DFB0 + 4 * byte_23E94B110[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E93DFB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;

  v0[3] = type metadata accessor for ContactSensorEvent();
  v0[4] = sub_23E8E99C8(&qword_256D9EF60, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&unk_23E94A500);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0);
  return sub_23E901220(v1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
}

uint64_t SomeAccessoryEvent.init<A>(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v46 = a3;
  v37 = type metadata accessor for WindowEvent();
  MEMORY[0x24BDAC7A8](v37);
  v38 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for SmokeDetectorEvent();
  MEMORY[0x24BDAC7A8](v39);
  v40 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for SecuritySystemEvent();
  MEMORY[0x24BDAC7A8](v41);
  v42 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for LockEvent();
  MEMORY[0x24BDAC7A8](v43);
  v44 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GarageDoorEvent();
  MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DoorEvent();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ContactSensorEvent();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a2 - 8);
  v19 = MEMORY[0x24BDAC7A8](v15);
  v36 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v34 - v21;
  v23 = a1;
  v35 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v35((char *)&v34 - v21, a1, a2);
  if (swift_dynamicCast())
  {
    v24 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    v24(a1, a2);
    v25 = (uint64_t)v17;
    v26 = a2;
    sub_23E901220(v25, v46, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
LABEL_15:
    type metadata accessor for SomeAccessoryEvent();
    swift_storeEnumTagMultiPayload();
    return v24(v22, v26);
  }
  v27 = v46;
  v26 = a2;
  if (swift_dynamicCast())
  {
    v24 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    v24(a1, a2);
    sub_23E901220((uint64_t)v13, v27, (uint64_t (*)(_QWORD))type metadata accessor for DoorEvent);
    goto LABEL_15;
  }
  v28 = (uint64_t)v45;
  if (swift_dynamicCast())
  {
    v24 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    v24(v23, a2);
    sub_23E901220(v28, v27, (uint64_t (*)(_QWORD))type metadata accessor for GarageDoorEvent);
    goto LABEL_15;
  }
  v29 = (uint64_t)v44;
  if (swift_dynamicCast())
  {
    v24 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    v24(v23, a2);
    sub_23E901220(v29, v27, (uint64_t (*)(_QWORD))type metadata accessor for LockEvent);
    goto LABEL_15;
  }
  v30 = (uint64_t)v42;
  if (swift_dynamicCast())
  {
    v24 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    v24(v23, a2);
    sub_23E901220(v30, v27, (uint64_t (*)(_QWORD))type metadata accessor for SecuritySystemEvent);
    goto LABEL_15;
  }
  v31 = (uint64_t)v40;
  if (swift_dynamicCast())
  {
    v24 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    v24(v23, a2);
    sub_23E901220(v31, v27, (uint64_t (*)(_QWORD))type metadata accessor for SmokeDetectorEvent);
    goto LABEL_15;
  }
  v32 = (uint64_t)v38;
  if (swift_dynamicCast())
  {
    v24 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    v24(v23, a2);
    sub_23E901220(v32, v27, (uint64_t (*)(_QWORD))type metadata accessor for WindowEvent);
    goto LABEL_15;
  }
  v35(v36, v23, a2);
  v48 = 0;
  v49 = 0xE000000000000000;
  sub_23E945F5C();
  sub_23E945BA8();
  v47 = type metadata accessor for SomeAccessoryEvent();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1450);
  sub_23E945B48();
  sub_23E945BA8();
  swift_bridgeObjectRelease();
  sub_23E945BA8();
  sub_23E946118();
  result = sub_23E945FF8();
  __break(1u);
  return result;
}

void SomeAccessoryEvent.anyAccessoryEvent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v1);
  sub_23E941690(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_23E93E6F8 + 4 * byte_23E94B117[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E93E6F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;

  *(_QWORD *)(v2 - 48) = type metadata accessor for ContactSensorEvent();
  *(_QWORD *)(v2 - 40) = sub_23E8E99C8(&qword_256D9EF60, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&unk_23E94A500);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 - 72));
  sub_23E901220(v1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
  v4 = *(_QWORD *)(v2 - 48);
  v5 = *(_QWORD *)(v2 - 40);
  v6 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 - 72), v4);
  v0[3] = v4;
  v0[4] = *(_QWORD *)(v5 + 8);
  v7 = __swift_allocate_boxed_opaque_existential_1(v0);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v7, v6, v4);
  return __swift_destroy_boxed_opaque_existential_1(v2 - 72);
}

void SomeAccessoryEvent.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[2];
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a1;
  v21 = type metadata accessor for WindowEvent();
  MEMORY[0x24BDAC7A8](v21);
  v20 = (char *)v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SmokeDetectorEvent();
  MEMORY[0x24BDAC7A8](v19);
  v18 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SecuritySystemEvent();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for LockEvent();
  MEMORY[0x24BDAC7A8](v4);
  v17 = type metadata accessor for GarageDoorEvent();
  MEMORY[0x24BDAC7A8](v17);
  v5 = type metadata accessor for DoorEvent();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23E945A10();
  v23 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v22 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v16[1] = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  v16[0] = type metadata accessor for ContactSensorEvent();
  MEMORY[0x24BDAC7A8](v16[0]);
  v13 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v13);
  sub_23E941690(v25, (uint64_t)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (char *)sub_23E93EB68 + 4 * word_23E94B11E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E93EB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23E901220(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
  sub_23E9461C0();
  sub_23E9459A4();
  sub_23E8E99C8(&qword_256D9EA88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E945AE8();
  type metadata accessor for EventBase(0);
  sub_23E8E99C8((unint64_t *)&qword_256D9EA90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v4 = *(_QWORD *)(v3 - 104);
  sub_23E945AE8();
  sub_23E9461C0();
  v5 = type metadata accessor for AccessoryEventBase(0);
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E945AE8();
  sub_23E945B6C();
  sub_23E8EED0C(v2 + *(int *)(v5 + 36), v0);
  v6 = *(_QWORD *)(v3 - 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0, 1, v4) == 1)
  {
    sub_23E9461CC();
  }
  else
  {
    v7 = *(_QWORD *)(v3 - 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v0, v4);
    sub_23E9461CC();
    sub_23E945AE8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v4);
  }
  sub_23E9461C0();
  return sub_23E9011E4(v2, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
}

uint64_t sub_23E93F370()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E93F3AC + 4 * byte_23E94B12C[*v0]))(0x53746361746E6F63, 0xED0000726F736E65);
}

uint64_t sub_23E93F3AC()
{
  return 1919905636;
}

uint64_t sub_23E93F3BC()
{
  return 0x6F44656761726167;
}

uint64_t sub_23E93F3D8()
{
  return 1801678700;
}

uint64_t sub_23E93F3E8()
{
  return 0x7974697275636573;
}

uint64_t sub_23E93F40C()
{
  return 0x746544656B6F6D73;
}

uint64_t sub_23E93F430()
{
  return 0x776F646E6977;
}

uint64_t sub_23E93F444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E945438(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E93F468(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_23E93F474()
{
  sub_23E9416D4();
  return sub_23E946208();
}

uint64_t sub_23E93F49C()
{
  sub_23E9416D4();
  return sub_23E946214();
}

uint64_t sub_23E93F4C8()
{
  sub_23E9418B0();
  return sub_23E946208();
}

uint64_t sub_23E93F4F0()
{
  sub_23E9418B0();
  return sub_23E946214();
}

uint64_t sub_23E93F518()
{
  sub_23E94186C();
  return sub_23E946208();
}

uint64_t sub_23E93F540()
{
  sub_23E94186C();
  return sub_23E946214();
}

uint64_t sub_23E93F568()
{
  sub_23E941828();
  return sub_23E946208();
}

uint64_t sub_23E93F590()
{
  sub_23E941828();
  return sub_23E946214();
}

uint64_t sub_23E93F5B8()
{
  sub_23E9417E4();
  return sub_23E946208();
}

uint64_t sub_23E93F5E0()
{
  sub_23E9417E4();
  return sub_23E946214();
}

uint64_t sub_23E93F608()
{
  sub_23E9417A0();
  return sub_23E946208();
}

uint64_t sub_23E93F630()
{
  sub_23E9417A0();
  return sub_23E946214();
}

uint64_t sub_23E93F658()
{
  sub_23E94175C();
  return sub_23E946208();
}

uint64_t sub_23E93F680()
{
  sub_23E94175C();
  return sub_23E946214();
}

uint64_t sub_23E93F6A8()
{
  sub_23E941718();
  return sub_23E946208();
}

uint64_t sub_23E93F6D0()
{
  sub_23E941718();
  return sub_23E946214();
}

void SomeAccessoryEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1458);
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v51 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for WindowEvent();
  MEMORY[0x24BDAC7A8](v48);
  v50 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1460);
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v46 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for SmokeDetectorEvent();
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1468);
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v41 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for SecuritySystemEvent();
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1470);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v36 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for LockEvent();
  MEMORY[0x24BDAC7A8](v34);
  v35 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1478);
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v31 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for GarageDoorEvent();
  MEMORY[0x24BDAC7A8](v29);
  v30 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1480);
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v26 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DoorEvent();
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1488);
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v15 = type metadata accessor for ContactSensorEvent();
  MEMORY[0x24BDAC7A8](v15);
  v16 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1490);
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E9416D4();
  v55 = v20;
  sub_23E9461FC();
  sub_23E941690(v57, (uint64_t)v18);
  v21 = (char *)sub_23E93FBBC + 4 * word_23E94B134[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E93FBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23E901220(v1, v0, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
  *(_BYTE *)(v3 - 71) = 0;
  sub_23E9418B0();
  v5 = *(_QWORD *)(v3 - 120);
  v4 = *(_QWORD *)(v3 - 112);
  sub_23E9460A0();
  sub_23E8E99C8(&qword_256DA0C30, (uint64_t (*)(uint64_t))type metadata accessor for ContactSensorEvent, (uint64_t)&protocol conformance descriptor for ContactSensorEvent);
  v6 = *(_QWORD *)(v3 - 376);
  sub_23E9460C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 384) + 8))(v2, v6);
  sub_23E9011E4(v0, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8))(v5, v4);
}

uint64_t SomeAccessoryEvent.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E9461B4();
  SomeAccessoryEvent.hash(into:)((uint64_t)v1);
  return sub_23E9461E4();
}

uint64_t SomeAccessoryEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  _QWORD v43[9];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  _QWORD *v68;
  char *v69;

  v60 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA14D8);
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v67 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA14E0);
  v6 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  v52 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA14E8);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v56 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA14F0);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v61 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA14F8);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v58 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1500);
  v43[8] = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v57 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1508);
  v43[7] = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v55 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1510);
  v63 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for SomeAccessoryEvent();
  v16 = MEMORY[0x24BDAC7A8](v62);
  v43[6] = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v43[5] = (char *)v43 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v43[4] = (char *)v43 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v43 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)v43 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)v43 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)v43 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v34 = a1[3];
  v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v34);
  sub_23E9416D4();
  v66 = v15;
  v35 = v69;
  sub_23E9461F0();
  if (!v35)
  {
    v43[1] = v30;
    v43[2] = v27;
    v43[3] = v24;
    v69 = v33;
    v36 = v65;
    v37 = v66;
    v38 = sub_23E946094();
    if (*(_QWORD *)(v38 + 16) == 1)
      __asm { BR              X10 }
    v39 = sub_23E945F98();
    swift_allocError();
    v41 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D9FE50);
    *v41 = v62;
    sub_23E946064();
    sub_23E945F8C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v41, *MEMORY[0x24BEE26D0], v39);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v36);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
}

void sub_23E940A28(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 - 96) = a1;
  *(_BYTE *)(v5 - 65) = 6;
  sub_23E941718();
  v6 = v1;
  sub_23E946058();
  if (!v2)
  {
    type metadata accessor for WindowEvent();
    sub_23E8E99C8((unint64_t *)&unk_256DA0270, (uint64_t (*)(uint64_t))type metadata accessor for WindowEvent, (uint64_t)&protocol conformance descriptor for WindowEvent);
    v7 = *(_QWORD *)(v5 - 216);
    sub_23E946088();
    v8 = *(_QWORD *)(v5 - 144);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 224) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v3);
    JUMPOUT(0x23E940D50);
  }
  JUMPOUT(0x23E9409E0);
}

uint64_t sub_23E940D84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SomeAccessoryEvent.init(from:)(a1, a2);
}

void sub_23E940D98(_QWORD *a1)
{
  SomeAccessoryEvent.encode(to:)(a1);
}

uint64_t sub_23E940DAC()
{
  _BYTE v1[72];

  sub_23E9461B4();
  SomeAccessoryEvent.hash(into:)((uint64_t)v1);
  return sub_23E9461E4();
}

uint64_t sub_23E940DEC()
{
  _BYTE v1[72];

  sub_23E9461B4();
  SomeAccessoryEvent.hash(into:)((uint64_t)v1);
  return sub_23E9461E4();
}

void _s13HomeKitEvents18SomeAccessoryEventO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a1;
  v36 = a2;
  v27 = type metadata accessor for WindowEvent();
  MEMORY[0x24BDAC7A8](v27);
  v34 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for SmokeDetectorEvent();
  MEMORY[0x24BDAC7A8](v26);
  v33 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for SecuritySystemEvent();
  MEMORY[0x24BDAC7A8](v25);
  v32 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for LockEvent();
  MEMORY[0x24BDAC7A8](v24);
  v31 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for GarageDoorEvent();
  MEMORY[0x24BDAC7A8](v23);
  v30 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DoorEvent();
  MEMORY[0x24BDAC7A8](v22);
  v29 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ContactSensorEvent();
  MEMORY[0x24BDAC7A8](v21);
  v28 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SomeAccessoryEvent();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1688);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v21 + *(int *)(v17 + 48) - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E941690(v35, (uint64_t)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E941690(v36, (uint64_t)v19);
  v20 = (char *)sub_23E941150 + 4 * byte_23E94B150[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E941150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23E941690(v0, v2);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23E9011E4(v2, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
    sub_23E94576C(v0);
  }
  else
  {
    v4 = *(_QWORD *)(v3 - 152);
    sub_23E901220(v1, v4, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
    if ((((uint64_t (*)(uint64_t, uint64_t))j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0)(v2, v4) & 1) != 0)
    {
      v5 = *(int *)(*(_QWORD *)(v3 - 208) + 20);
      if (*(unsigned __int8 *)(v2 + v5) == *(unsigned __int8 *)(v4 + v5))
      {
        sub_23E9011E4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
        sub_23E9011E4(v2, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
        sub_23E9011E4(v0, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
        return 1;
      }
    }
    sub_23E9011E4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
    sub_23E9011E4(v2, (uint64_t (*)(_QWORD))type metadata accessor for ContactSensorEvent);
    sub_23E9011E4(v0, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
  }
  return 0;
}

uint64_t type metadata accessor for SomeAccessoryEvent()
{
  uint64_t result;

  result = qword_256DA1590;
  if (!qword_256DA1590)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E941690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SomeAccessoryEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23E9416D4()
{
  unint64_t result;

  result = qword_256DA1498;
  if (!qword_256DA1498)
  {
    result = MEMORY[0x24265637C](&unk_23E94BB64, &type metadata for SomeAccessoryEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1498);
  }
  return result;
}

unint64_t sub_23E941718()
{
  unint64_t result;

  result = qword_256DA14A0;
  if (!qword_256DA14A0)
  {
    result = MEMORY[0x24265637C](&unk_23E94BB14, &type metadata for SomeAccessoryEvent.WindowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA14A0);
  }
  return result;
}

unint64_t sub_23E94175C()
{
  unint64_t result;

  result = qword_256DA14A8;
  if (!qword_256DA14A8)
  {
    result = MEMORY[0x24265637C](&unk_23E94BAC4, &type metadata for SomeAccessoryEvent.SmokeDetectorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA14A8);
  }
  return result;
}

unint64_t sub_23E9417A0()
{
  unint64_t result;

  result = qword_256DA14B0;
  if (!qword_256DA14B0)
  {
    result = MEMORY[0x24265637C](&unk_23E94BA74, &type metadata for SomeAccessoryEvent.SecuritySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA14B0);
  }
  return result;
}

unint64_t sub_23E9417E4()
{
  unint64_t result;

  result = qword_256DA14B8;
  if (!qword_256DA14B8)
  {
    result = MEMORY[0x24265637C](&unk_23E94BA24, &type metadata for SomeAccessoryEvent.LockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA14B8);
  }
  return result;
}

unint64_t sub_23E941828()
{
  unint64_t result;

  result = qword_256DA14C0;
  if (!qword_256DA14C0)
  {
    result = MEMORY[0x24265637C](&unk_23E94B9D4, &type metadata for SomeAccessoryEvent.GarageDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA14C0);
  }
  return result;
}

unint64_t sub_23E94186C()
{
  unint64_t result;

  result = qword_256DA14C8;
  if (!qword_256DA14C8)
  {
    result = MEMORY[0x24265637C](&unk_23E94B984, &type metadata for SomeAccessoryEvent.DoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA14C8);
  }
  return result;
}

unint64_t sub_23E9418B0()
{
  unint64_t result;

  result = qword_256DA14D0;
  if (!qword_256DA14D0)
  {
    result = MEMORY[0x24265637C](&unk_23E94B934, &type metadata for SomeAccessoryEvent.ContactSensorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA14D0);
  }
  return result;
}

uint64_t sub_23E9418F4()
{
  return sub_23E8E99C8(&qword_256DA1518, (uint64_t (*)(uint64_t))type metadata accessor for SomeAccessoryEvent, (uint64_t)&protocol conformance descriptor for SomeAccessoryEvent);
}

uint64_t initializeBufferWithCopyOfBuffer for SomeAccessoryEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23E94197C + 4 * word_23E94B158[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for SomeAccessoryEvent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      v3 = sub_23E9459A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = a1 + *(int *)(type metadata accessor for EventBase(0) + 20);
      v5 = sub_23E945A10();
      v6 = *(_QWORD *)(v5 - 8);
      v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v9(v4, v5);
      v7 = (int *)type metadata accessor for AccessoryEventBase(0);
      v9(a1 + v7[5], v5);
      swift_bridgeObjectRelease();
      v9(a1 + v7[7], v5);
      swift_bridgeObjectRelease();
      v8 = a1 + v7[9];
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
      if (!(_DWORD)result)
        result = ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v5);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SomeAccessoryEvent()
{
  char *v0;

  v0 = (char *)sub_23E942524 + 4 * word_23E94B16E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E942524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, const void *, uint64_t);
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v2 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = type metadata accessor for EventBase(0);
  v4 = *(int *)(v3 + 20);
  v5 = (void *)(v0 + v4);
  v6 = (const void *)(v1 + v4);
  v7 = sub_23E945A10();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(void *, const void *, uint64_t))(v8 + 16);
  v9(v5, v6, v7);
  *(_BYTE *)(v0 + *(int *)(v3 + 24)) = *(_BYTE *)(v1 + *(int *)(v3 + 24));
  v10 = (int *)type metadata accessor for AccessoryEventBase(0);
  v9((void *)(v0 + v10[5]), (const void *)(v1 + v10[5]), v7);
  v11 = v10[6];
  v12 = (_QWORD *)(v0 + v11);
  v13 = (_QWORD *)(v1 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v10[7];
  v16 = (void *)(v0 + v15);
  v17 = (const void *)(v1 + v15);
  swift_bridgeObjectRetain();
  v9(v16, v17, v7);
  v18 = v10[8];
  v19 = (_QWORD *)(v0 + v18);
  v20 = (_QWORD *)(v1 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = v10[9];
  v23 = (void *)(v0 + v22);
  v24 = (const void *)(v1 + v22);
  v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v25(v24, 1, v7))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v9(v23, v24, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v23, 0, 1, v7);
  }
  v27 = type metadata accessor for ContactSensorEvent();
  *(_BYTE *)(v0 + *(int *)(v27 + 20)) = *(_BYTE *)(v1 + *(int *)(v27 + 20));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SomeAccessoryEvent(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23E9011E4(result, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
    v2 = (char *)&loc_23E942EF8 + 4 * word_23E94B17C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for SomeAccessoryEvent()
{
  char *v0;

  v0 = (char *)sub_23E943924 + 4 * word_23E94B18A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E943924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, const void *, uint64_t);
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_23E9459A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = type metadata accessor for EventBase(0);
  v4 = *(int *)(v3 + 20);
  v5 = (void *)(v0 + v4);
  v6 = (const void *)(v1 + v4);
  v7 = sub_23E945A10();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(void *, const void *, uint64_t))(v8 + 32);
  v9(v5, v6, v7);
  *(_BYTE *)(v0 + *(int *)(v3 + 24)) = *(_BYTE *)(v1 + *(int *)(v3 + 24));
  v10 = (int *)type metadata accessor for AccessoryEventBase(0);
  v9((void *)(v0 + v10[5]), (const void *)(v1 + v10[5]), v7);
  *(_OWORD *)(v0 + v10[6]) = *(_OWORD *)(v1 + v10[6]);
  v9((void *)(v0 + v10[7]), (const void *)(v1 + v10[7]), v7);
  *(_OWORD *)(v0 + v10[8]) = *(_OWORD *)(v1 + v10[8]);
  v11 = v10[9];
  v12 = (void *)(v0 + v11);
  v13 = (const void *)(v1 + v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v1 + v11, 1, v7))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D9ED50);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v9(v12, v13, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  v15 = type metadata accessor for ContactSensorEvent();
  *(_BYTE *)(v0 + *(int *)(v15 + 20)) = *(_BYTE *)(v1 + *(int *)(v15 + 20));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for SomeAccessoryEvent(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23E9011E4(result, (uint64_t (*)(_QWORD))type metadata accessor for SomeAccessoryEvent);
    v2 = (char *)&loc_23E944218 + 4 * word_23E94B198[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23E944AA0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  result = type metadata accessor for ContactSensorEvent();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DoorEvent();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for GarageDoorEvent();
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for LockEvent();
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for SecuritySystemEvent();
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for SmokeDetectorEvent();
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for WindowEvent();
              if (v7 <= 0x3F)
              {
                swift_initEnumMetadataMultiPayload();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SomeAccessoryEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23E944BF8 + 4 * byte_23E94B1AB[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23E944C2C + 4 * byte_23E94B1A6[v4]))();
}

uint64_t sub_23E944C2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E944C34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E944C3CLL);
  return result;
}

uint64_t sub_23E944C48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E944C50);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23E944C54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E944C5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.CodingKeys()
{
  return &type metadata for SomeAccessoryEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.ContactSensorCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.ContactSensorCodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.DoorCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.DoorCodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.GarageDoorCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.GarageDoorCodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.LockCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.LockCodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.SecuritySystemCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.SecuritySystemCodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.SmokeDetectorCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.SmokeDetectorCodingKeys;
}

uint64_t _s13HomeKitEvents18SomeAccessoryEventO23ContactSensorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E944D1C + 4 * byte_23E94B1B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E944D3C + 4 * byte_23E94B1B5[v4]))();
}

_BYTE *sub_23E944D1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E944D3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E944D44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E944D4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E944D54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E944D5C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.WindowCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.WindowCodingKeys;
}

unint64_t sub_23E944D7C()
{
  unint64_t result;

  result = qword_256DA15C8;
  if (!qword_256DA15C8)
  {
    result = MEMORY[0x24265637C](&unk_23E94B404, &type metadata for SomeAccessoryEvent.WindowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA15C8);
  }
  return result;
}

unint64_t sub_23E944DC4()
{
  unint64_t result;

  result = qword_256DA15D0;
  if (!qword_256DA15D0)
  {
    result = MEMORY[0x24265637C](&unk_23E94B4BC, &type metadata for SomeAccessoryEvent.SmokeDetectorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA15D0);
  }
  return result;
}

unint64_t sub_23E944E0C()
{
  unint64_t result;

  result = qword_256DA15D8;
  if (!qword_256DA15D8)
  {
    result = MEMORY[0x24265637C](&unk_23E94B574, &type metadata for SomeAccessoryEvent.SecuritySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA15D8);
  }
  return result;
}

unint64_t sub_23E944E54()
{
  unint64_t result;

  result = qword_256DA15E0;
  if (!qword_256DA15E0)
  {
    result = MEMORY[0x24265637C](&unk_23E94B62C, &type metadata for SomeAccessoryEvent.LockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA15E0);
  }
  return result;
}

unint64_t sub_23E944E9C()
{
  unint64_t result;

  result = qword_256DA15E8;
  if (!qword_256DA15E8)
  {
    result = MEMORY[0x24265637C](&unk_23E94B6E4, &type metadata for SomeAccessoryEvent.GarageDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA15E8);
  }
  return result;
}

unint64_t sub_23E944EE4()
{
  unint64_t result;

  result = qword_256DA15F0;
  if (!qword_256DA15F0)
  {
    result = MEMORY[0x24265637C](&unk_23E94B79C, &type metadata for SomeAccessoryEvent.DoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA15F0);
  }
  return result;
}

unint64_t sub_23E944F2C()
{
  unint64_t result;

  result = qword_256DA15F8;
  if (!qword_256DA15F8)
  {
    result = MEMORY[0x24265637C](&unk_23E94B854, &type metadata for SomeAccessoryEvent.ContactSensorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA15F8);
  }
  return result;
}

unint64_t sub_23E944F74()
{
  unint64_t result;

  result = qword_256DA1600;
  if (!qword_256DA1600)
  {
    result = MEMORY[0x24265637C](&unk_23E94B90C, &type metadata for SomeAccessoryEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1600);
  }
  return result;
}

unint64_t sub_23E944FBC()
{
  unint64_t result;

  result = qword_256DA1608;
  if (!qword_256DA1608)
  {
    result = MEMORY[0x24265637C](&unk_23E94B7C4, &type metadata for SomeAccessoryEvent.ContactSensorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1608);
  }
  return result;
}

unint64_t sub_23E945004()
{
  unint64_t result;

  result = qword_256DA1610;
  if (!qword_256DA1610)
  {
    result = MEMORY[0x24265637C](&unk_23E94B7EC, &type metadata for SomeAccessoryEvent.ContactSensorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1610);
  }
  return result;
}

unint64_t sub_23E94504C()
{
  unint64_t result;

  result = qword_256DA1618;
  if (!qword_256DA1618)
  {
    result = MEMORY[0x24265637C](&unk_23E94B70C, &type metadata for SomeAccessoryEvent.DoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1618);
  }
  return result;
}

unint64_t sub_23E945094()
{
  unint64_t result;

  result = qword_256DA1620;
  if (!qword_256DA1620)
  {
    result = MEMORY[0x24265637C](&unk_23E94B734, &type metadata for SomeAccessoryEvent.DoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1620);
  }
  return result;
}

unint64_t sub_23E9450DC()
{
  unint64_t result;

  result = qword_256DA1628;
  if (!qword_256DA1628)
  {
    result = MEMORY[0x24265637C](&unk_23E94B654, &type metadata for SomeAccessoryEvent.GarageDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1628);
  }
  return result;
}

unint64_t sub_23E945124()
{
  unint64_t result;

  result = qword_256DA1630;
  if (!qword_256DA1630)
  {
    result = MEMORY[0x24265637C](&unk_23E94B67C, &type metadata for SomeAccessoryEvent.GarageDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1630);
  }
  return result;
}

unint64_t sub_23E94516C()
{
  unint64_t result;

  result = qword_256DA1638;
  if (!qword_256DA1638)
  {
    result = MEMORY[0x24265637C](&unk_23E94B59C, &type metadata for SomeAccessoryEvent.LockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1638);
  }
  return result;
}

unint64_t sub_23E9451B4()
{
  unint64_t result;

  result = qword_256DA1640;
  if (!qword_256DA1640)
  {
    result = MEMORY[0x24265637C](&unk_23E94B5C4, &type metadata for SomeAccessoryEvent.LockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1640);
  }
  return result;
}

unint64_t sub_23E9451FC()
{
  unint64_t result;

  result = qword_256DA1648;
  if (!qword_256DA1648)
  {
    result = MEMORY[0x24265637C](&unk_23E94B4E4, &type metadata for SomeAccessoryEvent.SecuritySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1648);
  }
  return result;
}

unint64_t sub_23E945244()
{
  unint64_t result;

  result = qword_256DA1650;
  if (!qword_256DA1650)
  {
    result = MEMORY[0x24265637C](&unk_23E94B50C, &type metadata for SomeAccessoryEvent.SecuritySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1650);
  }
  return result;
}

unint64_t sub_23E94528C()
{
  unint64_t result;

  result = qword_256DA1658;
  if (!qword_256DA1658)
  {
    result = MEMORY[0x24265637C](&unk_23E94B42C, &type metadata for SomeAccessoryEvent.SmokeDetectorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1658);
  }
  return result;
}

unint64_t sub_23E9452D4()
{
  unint64_t result;

  result = qword_256DA1660;
  if (!qword_256DA1660)
  {
    result = MEMORY[0x24265637C](&unk_23E94B454, &type metadata for SomeAccessoryEvent.SmokeDetectorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1660);
  }
  return result;
}

unint64_t sub_23E94531C()
{
  unint64_t result;

  result = qword_256DA1668;
  if (!qword_256DA1668)
  {
    result = MEMORY[0x24265637C](&unk_23E94B374, &type metadata for SomeAccessoryEvent.WindowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1668);
  }
  return result;
}

unint64_t sub_23E945364()
{
  unint64_t result;

  result = qword_256DA1670;
  if (!qword_256DA1670)
  {
    result = MEMORY[0x24265637C](&unk_23E94B39C, &type metadata for SomeAccessoryEvent.WindowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1670);
  }
  return result;
}

unint64_t sub_23E9453AC()
{
  unint64_t result;

  result = qword_256DA1678;
  if (!qword_256DA1678)
  {
    result = MEMORY[0x24265637C](&unk_23E94B87C, &type metadata for SomeAccessoryEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1678);
  }
  return result;
}

unint64_t sub_23E9453F4()
{
  unint64_t result;

  result = qword_256DA1680;
  if (!qword_256DA1680)
  {
    result = MEMORY[0x24265637C](&unk_23E94B8A4, &type metadata for SomeAccessoryEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DA1680);
  }
  return result;
}

uint64_t sub_23E945438(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x53746361746E6F63 && a2 == 0xED0000726F736E65;
  if (v2 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1919905636 && a2 == 0xE400000000000000 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F44656761726167 && a2 == 0xEA0000000000726FLL || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1801678700 && a2 == 0xE400000000000000 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7974697275636573 && a2 == 0xEE006D6574737953 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746544656B6F6D73 && a2 == 0xED0000726F746365 || (sub_23E946130() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x776F646E6977 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23E946130();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23E94576C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256DA1688);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

CKContainerID *HMVConfigurationCloudKitContainerID()
{
  return +[Configuration containerID](_TtC13HomeKitEvents13Configuration, "containerID");
}

id HMVConfigurationZoneUUIDForHomeIdentifier(uint64_t a1)
{
  return +[Configuration zoneUUIDForHomeIdentifier:](_TtC13HomeKitEvents13Configuration, "zoneUUIDForHomeIdentifier:", a1);
}

id HMVConfigurationZoneNameForZoneUUID(uint64_t a1)
{
  return +[Configuration zoneNameForZoneUUID:](_TtC13HomeKitEvents13Configuration, "zoneNameForZoneUUID:", a1);
}

uint64_t HMVConfigurationResetWithCompletion(uint64_t a1)
{
  return +[Configuration resetWithCompletion:](_TtC13HomeKitEvents13Configuration, "resetWithCompletion:", a1);
}

uint64_t sub_23E9457E8()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23E9457F4()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23E945800()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23E94580C()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23E945818()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23E945824()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23E945830()
{
  return MEMORY[0x24BDCB830]();
}

uint64_t sub_23E94583C()
{
  return MEMORY[0x24BDCB838]();
}

uint64_t sub_23E945848()
{
  return MEMORY[0x24BDCB848]();
}

uint64_t sub_23E945854()
{
  return MEMORY[0x24BDCB868]();
}

uint64_t sub_23E945860()
{
  return MEMORY[0x24BDCB878]();
}

uint64_t sub_23E94586C()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_23E945878()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_23E945884()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_23E945890()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23E94589C()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_23E9458A8()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_23E9458B4()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_23E9458C0()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_23E9458CC()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_23E9458D8()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_23E9458E4()
{
  return MEMORY[0x24BDCD2A0]();
}

uint64_t sub_23E9458F0()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_23E9458FC()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_23E945908()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23E945914()
{
  return MEMORY[0x24BDCDBF8]();
}

uint64_t sub_23E945920()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_23E94592C()
{
  return MEMORY[0x24BDCDD78]();
}

uint64_t sub_23E945938()
{
  return MEMORY[0x24BDCDE78]();
}

uint64_t sub_23E945944()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_23E945950()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_23E94595C()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_23E945968()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t sub_23E945974()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_23E945980()
{
  return MEMORY[0x24BDCE628]();
}

uint64_t sub_23E94598C()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_23E945998()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23E9459A4()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23E9459B0()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_23E9459BC()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23E9459C8()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_23E9459D4()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23E9459E0()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_23E9459EC()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_23E9459F8()
{
  return MEMORY[0x24BDCEA18]();
}

uint64_t sub_23E945A04()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23E945A10()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23E945A1C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23E945A28()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23E945A34()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23E945A40()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_23E945A4C()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_23E945A58()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23E945A64()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23E945A70()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_23E945A7C()
{
  return MEMORY[0x24BDC62F0]();
}

uint64_t sub_23E945A88()
{
  return MEMORY[0x24BDC6AD8]();
}

uint64_t sub_23E945A94()
{
  return MEMORY[0x24BDC6AF0]();
}

uint64_t sub_23E945AA0()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_23E945AAC()
{
  return MEMORY[0x24BEE67F8]();
}

uint64_t sub_23E945AB8()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23E945AC4()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23E945AD0()
{
  return MEMORY[0x24BEE0298]();
}

uint64_t sub_23E945ADC()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23E945AE8()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23E945AF4()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_23E945B00()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23E945B0C()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23E945B18()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23E945B24()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_23E945B30()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_23E945B3C()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_23E945B48()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23E945B54()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23E945B60()
{
  return MEMORY[0x24BEE0AD0]();
}

uint64_t sub_23E945B6C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23E945B78()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23E945B84()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_23E945B90()
{
  return MEMORY[0x24BEE0B88]();
}

uint64_t sub_23E945B9C()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_23E945BA8()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23E945BB4()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23E945BC0()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_23E945BCC()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_23E945BD8()
{
  return MEMORY[0x24BEE0DC8]();
}

uint64_t sub_23E945BE4()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_23E945BF0()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23E945BFC()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_23E945C08()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_23E945C14()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23E945C20()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23E945C2C()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23E945C38()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23E945C44()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_23E945C50()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_23E945C5C()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23E945C68()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_23E945C74()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_23E945C80()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_23E945C8C()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_23E945C98()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23E945CA4()
{
  return MEMORY[0x24BEE6818]();
}

uint64_t sub_23E945CB0()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_23E945CBC()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23E945CC8()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_23E945CD4()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_23E945CE0()
{
  return MEMORY[0x24BEE6940]();
}

uint64_t sub_23E945CEC()
{
  return MEMORY[0x24BEE6960]();
}

uint64_t sub_23E945CF8()
{
  return MEMORY[0x24BEE6978]();
}

uint64_t sub_23E945D04()
{
  return MEMORY[0x24BEE6980]();
}

uint64_t sub_23E945D10()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23E945D1C()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23E945D28()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_23E945D34()
{
  return MEMORY[0x24BEE6B18]();
}

uint64_t sub_23E945D40()
{
  return MEMORY[0x24BEE6CC0]();
}

uint64_t sub_23E945D4C()
{
  return MEMORY[0x24BEE6CC8]();
}

uint64_t sub_23E945D58()
{
  return MEMORY[0x24BEE6CE0]();
}

uint64_t sub_23E945D64()
{
  return MEMORY[0x24BEE6CE8]();
}

uint64_t sub_23E945D70()
{
  return MEMORY[0x24BEE6CF8]();
}

uint64_t sub_23E945D7C()
{
  return MEMORY[0x24BEE6D30]();
}

uint64_t sub_23E945D88()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_23E945D94()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_23E945DA0()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_23E945DAC()
{
  return MEMORY[0x24BDCFCC8]();
}

uint64_t sub_23E945DB8()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_23E945DC4()
{
  return MEMORY[0x24BDB8C78]();
}

uint64_t sub_23E945DD0()
{
  return MEMORY[0x24BDB8D20]();
}

uint64_t sub_23E945DDC()
{
  return MEMORY[0x24BDCFDD8]();
}

uint64_t sub_23E945DE8()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23E945DF4()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23E945E00()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23E945E0C()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23E945E18()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23E945E24()
{
  return MEMORY[0x24BDB8D38]();
}

uint64_t sub_23E945E30()
{
  return MEMORY[0x24BDB8D50]();
}

uint64_t sub_23E945E3C()
{
  return MEMORY[0x24BDB8D58]();
}

uint64_t sub_23E945E48()
{
  return MEMORY[0x24BDB8D60]();
}

uint64_t sub_23E945E54()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_23E945E60()
{
  return MEMORY[0x24BEE5850]();
}

uint64_t sub_23E945E6C()
{
  return MEMORY[0x24BEE5858]();
}

uint64_t sub_23E945E78()
{
  return MEMORY[0x24BEE5868]();
}

uint64_t sub_23E945E84()
{
  return MEMORY[0x24BEE58A0]();
}

uint64_t sub_23E945E90()
{
  return MEMORY[0x24BEE58B8]();
}

uint64_t sub_23E945E9C()
{
  return MEMORY[0x24BEE58D0]();
}

uint64_t sub_23E945EA8()
{
  return MEMORY[0x24BEE58E8]();
}

uint64_t sub_23E945EB4()
{
  return MEMORY[0x24BDB8D98]();
}

uint64_t sub_23E945EC0()
{
  return MEMORY[0x24BDB8E18]();
}

uint64_t sub_23E945ECC()
{
  return MEMORY[0x24BDB8E28]();
}

uint64_t sub_23E945ED8()
{
  return MEMORY[0x24BDB8E30]();
}

uint64_t sub_23E945EE4()
{
  return MEMORY[0x24BDB8E48]();
}

uint64_t sub_23E945EF0()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_23E945EFC()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23E945F08()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23E945F14()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23E945F20()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_23E945F2C()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_23E945F38()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23E945F44()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23E945F50()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23E945F5C()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23E945F68()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23E945F74()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_23E945F80()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23E945F8C()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23E945F98()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23E945FA4()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23E945FB0()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23E945FBC()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23E945FC8()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23E945FD4()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23E945FE0()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23E945FEC()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23E945FF8()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23E946004()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23E946010()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23E94601C()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23E946028()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23E946034()
{
  return MEMORY[0x24BEE30E0]();
}

uint64_t sub_23E946040()
{
  return MEMORY[0x24BEE30E8]();
}

uint64_t sub_23E94604C()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23E946058()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23E946064()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23E946070()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23E94607C()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23E946088()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23E946094()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23E9460A0()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23E9460AC()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23E9460B8()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23E9460C4()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23E9460D0()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23E9460DC()
{
  return MEMORY[0x24BEE7028]();
}

uint64_t sub_23E9460E8()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23E9460F4()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_23E946100()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_23E94610C()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_23E946118()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_23E946124()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_23E946130()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23E94613C()
{
  return MEMORY[0x24BEE3D60]();
}

uint64_t sub_23E946148()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_23E946154()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_23E946160()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23E94616C()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_23E946178()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_23E946184()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23E946190()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23E94619C()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23E9461A8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23E9461B4()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23E9461C0()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23E9461CC()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23E9461D8()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_23E9461E4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23E9461F0()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23E9461FC()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23E946208()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23E946214()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t CKContainerEnvironmentString()
{
  return MEMORY[0x24BDB8E78]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x24BED8448]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x24BEDD080](object, key);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x24BEDD3C0](object, key, value, policy);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x24BEE4E50]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

