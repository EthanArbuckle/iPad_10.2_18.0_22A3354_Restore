id cryptoLog()
{
  if (cryptoLog_onceToken[0] != -1)
    dispatch_once(cryptoLog_onceToken, &__block_literal_global);
  return (id)cryptoLog_cryptoLog;
}

void __cryptoLog_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.cosmo", "Crypto");
  v1 = (void *)cryptoLog_cryptoLog;
  cryptoLog_cryptoLog = (uint64_t)v0;

}

SecKeyRef createKeyPair(void *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  const __CFDictionary *v7;
  SecKeyRef RandomKey;
  _QWORD v10[2];
  _QWORD v11[3];

  v11[2] = *MEMORY[0x24BDAC8D0];
  v3 = *MEMORY[0x24BDE9048];
  v10[0] = *MEMORY[0x24BDE9050];
  v10[1] = v3;
  v11[0] = a1;
  v4 = (void *)MEMORY[0x24BDD16E0];
  v5 = a1;
  objc_msgSend(v4, "numberWithUnsignedInteger:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11[1] = v6;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v11, v10, 2);
  v7 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();

  RandomKey = SecKeyCreateRandomKey(v7, 0);
  return RandomKey;
}

sec_identity_t secIdentityFromKeyPair(__SecKey *a1)
{
  sec_identity_t v1;
  SecKeyRef v2;
  const void *SelfSignedCertificate;
  __SecIdentity *v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;

  v1 = (sec_identity_t)a1;
  v2 = SecKeyCopyPublicKey(a1);
  SelfSignedCertificate = (const void *)SecGenerateSelfSignedCertificate();
  if (v2)
    CFRelease(v2);
  if (SelfSignedCertificate)
  {
    v4 = (__SecIdentity *)SecIdentityCreate();
    CFRelease(SelfSignedCertificate);
    if (v4)
    {
      v1 = sec_identity_create(v4);
      CFRelease(v4);
      if (!v1)
      {
        cryptoLog();
        v5 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
          secIdentityFromKeyPair_cold_3();

      }
      return v1;
    }
    cryptoLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      secIdentityFromKeyPair_cold_2();

LABEL_16:
    v1 = 0;
    return v1;
  }
  cryptoLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    secIdentityFromKeyPair_cold_1();

  if (v1)
  {
    CFRelease(v1);
    goto LABEL_16;
  }
  return v1;
}

__SecKey *secIdentity(void *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  const __CFDictionary *v7;
  __SecKey *RandomKey;
  SecKeyRef v9;
  const void *SelfSignedCertificate;
  __SecIdentity *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  _QWORD v16[2];
  _QWORD v17[3];

  v17[2] = *MEMORY[0x24BDAC8D0];
  v3 = *MEMORY[0x24BDE9048];
  v16[0] = *MEMORY[0x24BDE9050];
  v16[1] = v3;
  v17[0] = a1;
  v4 = (void *)MEMORY[0x24BDD16E0];
  v5 = a1;
  objc_msgSend(v4, "numberWithUnsignedInteger:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v17[1] = v6;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v17, v16, 2);
  v7 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();

  RandomKey = SecKeyCreateRandomKey(v7, 0);
  v9 = SecKeyCopyPublicKey(RandomKey);
  SelfSignedCertificate = (const void *)SecGenerateSelfSignedCertificate();
  if (v9)
    CFRelease(v9);
  if (SelfSignedCertificate)
  {
    v11 = (__SecIdentity *)SecIdentityCreate();
    CFRelease(SelfSignedCertificate);
    if (RandomKey)
      CFRelease(RandomKey);
    if (v11)
    {
      RandomKey = (__SecKey *)sec_identity_create(v11);
      CFRelease(v11);
      if (!RandomKey)
      {
        cryptoLog();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
          secIdentityFromKeyPair_cold_3();

      }
      goto LABEL_19;
    }
    cryptoLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      secIdentityFromKeyPair_cold_2();

LABEL_18:
    RandomKey = 0;
    goto LABEL_19;
  }
  cryptoLog();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    secIdentityFromKeyPair_cold_1();

  if (RandomKey)
  {
    CFRelease(RandomKey);
    goto LABEL_18;
  }
LABEL_19:

  return RandomKey;
}

id publicKeyFromIdentity(void *a1)
{
  NSObject *v1;
  NSObject *v2;
  __SecIdentity *v3;
  void *v4;
  OSStatus v5;
  NSObject *v6;
  SecKeyRef v7;
  id v8;
  SecKeyRef privateKeyRef;

  v1 = a1;
  v2 = v1;
  if (!v1)
    goto LABEL_16;
  v3 = sec_identity_copy_ref(v1);
  v4 = v3;
  if (!v3)
    goto LABEL_17;
  privateKeyRef = 0;
  v5 = SecIdentityCopyPrivateKey(v3, &privateKeyRef);
  CFRelease(v4);
  if (v5)
  {
    if (privateKeyRef)
    {
      CFRelease(privateKeyRef);
      privateKeyRef = 0;
    }
    cryptoLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      publicKeyFromIdentity_cold_1();

  }
  if (!privateKeyRef)
    goto LABEL_16;
  v7 = SecKeyCopyPublicKey(privateKeyRef);
  if (privateKeyRef)
  {
    CFRelease(privateKeyRef);
    privateKeyRef = 0;
  }
  if (!v7)
  {
LABEL_16:
    v4 = 0;
    goto LABEL_17;
  }
  v4 = (void *)SecKeyCopySubjectPublicKeyInfo();
  CFRelease(v7);
  if (v4)
    v8 = v4;

LABEL_17:
  return v4;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

uint64_t TransferHost.State.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23A1252EC + 4 * byte_23A19C1C0[*v0]))(0xD00000000000001CLL, 0x800000023A1A0340);
}

uint64_t sub_23A1252EC()
{
  return 0x6C616974696E69;
}

uint64_t sub_23A125304@<X0>(uint64_t a1@<X8>)
{
  return a1 + 10;
}

uint64_t sub_23A125394()
{
  return 0x676E6970706F7473;
}

uint64_t sub_23A1253AC()
{
  return 0x646570706F7473;
}

BOOL static TransferHost.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TransferHost.State.hash(into:)()
{
  return sub_23A19B98C();
}

BOOL static TransferHost.State.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t TransferHost.State.hashValue.getter()
{
  sub_23A19B980();
  sub_23A19B98C();
  return sub_23A19B9A4();
}

BOOL sub_23A125458(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23A12546C()
{
  sub_23A19B980();
  sub_23A19B98C();
  return sub_23A19B9A4();
}

uint64_t sub_23A1254B0()
{
  return sub_23A19B98C();
}

uint64_t sub_23A1254D8()
{
  sub_23A19B980();
  sub_23A19B98C();
  return sub_23A19B9A4();
}

BOOL sub_23A125518(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_23A12552C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_23A125540(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_23A125554(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

double TransferHost.Configuration.gracefulStopWindowInterval.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

Cosmo::TransferHost::Configuration __swiftcall TransferHost.Configuration.init(gracefulStopWindowInterval:)(Cosmo::TransferHost::Configuration gracefulStopWindowInterval)
{
  Cosmo::TransferHost::Configuration *v1;

  v1->gracefulStopWindowInterval = gracefulStopWindowInterval.gracefulStopWindowInterval;
  return gracefulStopWindowInterval;
}

id TransferHost.queue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

double TransferHost.config.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 24);
  *a1 = result;
  return result;
}

uint64_t sub_23A125590@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 32;
  swift_beginAccess();
  result = MEMORY[0x23B843028](v4);
  v6 = *(_QWORD *)(v3 + 40);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_23A1255E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_23A125640()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x23B843028](v0 + 32);
}

uint64_t TransferHost.__allocating_init(delegate:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  v8 = 0x3FF0000000000000;
  type metadata accessor for TransferHost();
  v6 = swift_allocObject();
  TransferHost.init(delegate:config:queue:)(a1, a2, &v8, a3);
  return v6;
}

uint64_t TransferHost.__allocating_init(delegate:config:queue:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  TransferHost.init(delegate:config:queue:)(a1, a2, a3, a4);
  return v8;
}

uint64_t type metadata accessor for TransferHost()
{
  uint64_t result;

  result = qword_256944558;
  if (!qword_256944558)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TransferHost.init(delegate:config:queue:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a2;
  v23 = a1;
  v7 = sub_23A19B6EC();
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A19B6C8();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23A19B2F0();
  MEMORY[0x24BDAC7A8](v11);
  v12 = *a3;
  *(_QWORD *)(v4 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v4 + 49) = 12;
  v21 = xmmword_23A19C6E0;
  *(_OWORD *)(v4 + 56) = xmmword_23A19C6E0;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_QWORD *)(v4 + 120) = 0;
  v13 = v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationServiceUUID;
  v14 = sub_23A19AD2C();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationCount) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2Prover) = 0;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm) = v21;
  v16 = v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferDescriptor;
  v17 = type metadata accessor for NetworkDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost) = 0;
  v15(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferServiceUUID, 1, 1, v14);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesRequestedCount) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesSentCount) = 0;
  swift_beginAccess();
  *(_QWORD *)(v4 + 40) = v22;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v4 + 24) = v12;
  if (!a4)
  {
    sub_23A125AD0();
    sub_23A19B2E4();
    v24 = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256945240, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569444F0);
    sub_23A131E74((unint64_t *)&unk_256945250, (uint64_t *)&unk_2569444F0);
    sub_23A19B764();
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v9, *MEMORY[0x24BEE5750], v20);
    a4 = sub_23A19B704();
  }
  swift_unknownObjectRelease();
  *(_QWORD *)(v4 + 16) = a4;
  *(_BYTE *)(v4 + 48) = 0;
  return v4;
}

unint64_t sub_23A125AD0()
{
  unint64_t result;

  result = qword_2569444E0;
  if (!qword_2569444E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569444E0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B842ED8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B842EE4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_23A125B90(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = *(void **)(v1 + 16);
  *v7 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v2 = *(_BYTE *)(v1 + 48);
    *(_BYTE *)(v1 + 48) = v8;
    if (qword_2569443B8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v11 = sub_23A19AE28();
  __swift_project_value_buffer(v11, (uint64_t)qword_25694EBA0);
  v12 = sub_23A19AE10();
  v13 = sub_23A19B6BC();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v21 = v15;
    *(_DWORD *)v14 = 136315394;
    LOBYTE(v20) = v2;
    v16 = TransferHost.State.description.getter();
    v20 = sub_23A14071C(v16, v17, &v21);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    LOBYTE(v20) = v8;
    v18 = TransferHost.State.description.getter();
    v20 = sub_23A14071C(v18, v19, &v21);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v12, v13, "[State] Updated, old-state='%s' new-state='%s'", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v15, -1, -1);
    MEMORY[0x23B842FA4](v14, -1, -1);
  }

}

uint64_t TransferHost.deinit()
{
  uint64_t v0;

  sub_23A125EB4(v0 + 32);
  sub_23A125F1C(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_release();
  sub_23A13A1E4(*(_QWORD *)(v0 + 80));
  sub_23A13A1E4(*(_QWORD *)(v0 + 96));
  sub_23A13A1E4(*(_QWORD *)(v0 + 112));
  sub_23A13ACB8(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationServiceUUID, (uint64_t *)&unk_256944500);
  swift_release();
  sub_23A125F1C(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm + 8));
  sub_23A13ACB8(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferDescriptor, &qword_2569465D0);
  swift_release();
  sub_23A13ACB8(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferServiceUUID, (uint64_t *)&unk_256944500);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23A125EB4(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_23A125ED8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23A125F1C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23A125ED8(a1, a2);
  return a1;
}

uint64_t TransferHost.__deallocating_deinit()
{
  TransferHost.deinit();
  return swift_deallocClassInstance();
}

uint64_t TransferHost.start(onStart:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v7[2];

  static SharedSecret.accV2Compatibile(protocolVersion:)(1, v7);
  v4 = v7[0];
  v5 = v7[1];
  TransferHost.start(secret:onStart:)(v7, a1, a2);
  return sub_23A125ED8(v4, v5);
}

uint64_t TransferHost.start(secret:onStart:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_23A19B2D8();
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23A19B2F0();
  v11 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v14 = a1[1];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = v15;
  v16[6] = v14;
  aBlock[4] = sub_23A131DCC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23A131DF0(v15, v14);
  sub_23A19B2E4();
  v22 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v13, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  return swift_release();
}

void sub_23A1261C8(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t *);
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  _OWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint8_t *v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;

  v10 = sub_23A19AD2C();
  v57 = *(_QWORD *)(v10 - 8);
  v58 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23A19AE28();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256944500);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 48) != 11 && *(_BYTE *)(a1 + 48))
  {
    if (qword_2569443B8 != -1)
      swift_once();
    __swift_project_value_buffer(v13, (uint64_t)qword_25694EBA0);
    swift_retain_n();
    v33 = sub_23A19AE10();
    v34 = sub_23A19B6BC();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v59 = v36;
      *(_DWORD *)v35 = 136315138;
      LOBYTE(v62) = *(_BYTE *)(a1 + 48);
      v37 = TransferHost.State.description.getter();
      v62 = sub_23A14071C(v37, v38, &v59);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v33, v34, "[Start] Must be invoked while in the initial or stopped, state=%s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v36, -1, -1);
      MEMORY[0x23B842FA4](v35, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_23A13A180();
    v39 = (void *)swift_allocError();
    *v40 = xmmword_23A19C6F0;
    v59 = (uint64_t)v39;
    v60 = 0;
    v61 = 1;
    a2(&v59);

  }
  else
  {
    v56 = v14;
    v54 = v12;
    v20 = a2;
    v21 = (_QWORD *)a1;
    v22 = *(_QWORD *)(a1 + 56);
    v23 = v21[8];
    v21[7] = a4;
    v21[8] = a5;
    sub_23A131DF0(a4, a5);
    sub_23A125F1C(v22, v23);
    v24 = v21[14];
    v21[14] = v20;
    v21[15] = a3;
    swift_retain();
    sub_23A13A1E4(v24);
    v59 = a4;
    v60 = a5;
    SharedSecret.advertisementIdentifer.getter();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v19, 0, 1, v58);
    v55 = v21;
    v25 = (uint64_t)v21 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationServiceUUID;
    swift_beginAccess();
    sub_23A13A76C((uint64_t)v19, v25, (uint64_t *)&unk_256944500);
    swift_endAccess();
    if (qword_2569443B8 != -1)
      swift_once();
    v26 = __swift_project_value_buffer(v13, (uint64_t)qword_25694EBA0);
    v27 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v16, v26, v13);
    sub_23A131DF0(a4, a5);
    sub_23A131DF0(a4, a5);
    sub_23A131DF0(a4, a5);
    sub_23A131DF0(a4, a5);
    v28 = sub_23A19AE10();
    v29 = sub_23A19B6BC();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      v52 = v29;
      v53 = (uint8_t *)v26;
      v30 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v62 = v51;
      *(_DWORD *)v30 = 136315394;
      v59 = a4;
      v60 = a5;
      v31 = SharedSecret.asACCV2CompatibileHex.getter();
      v59 = sub_23A14071C(v31, v32, &v62);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A125ED8(a4, a5);
      sub_23A125ED8(a4, a5);
      *(_WORD *)(v30 + 12) = 2080;
      __asm { BR              X10 }
    }
    sub_23A125ED8(a4, a5);
    sub_23A125ED8(a4, a5);
    sub_23A125ED8(a4, a5);
    sub_23A125ED8(a4, a5);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v13);
    sub_23A131DF0(a4, a5);
    sub_23A131DF0(a4, a5);
    v41 = sub_23A19AE10();
    v42 = sub_23A19B6BC();
    if (os_log_type_enabled(v41, v42))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v62 = v56;
      *(_DWORD *)v44 = 136315138;
      v53 = v44 + 4;
      v59 = a4;
      v60 = a5;
      v45 = v54;
      SharedSecret.advertisementIdentifer.getter();
      sub_23A131E34(&qword_256946070, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v46 = v58;
      v47 = sub_23A19B8FC();
      v49 = v48;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v46);
      v59 = sub_23A14071C(v47, v49, &v62);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A125ED8(a4, a5);
      sub_23A125ED8(a4, a5);
      _os_log_impl(&dword_23A123000, v41, v42, "[Start] Starting attestation-host with Bonjour attestationServiceUUID=%s", v44, 0xCu);
      v50 = v56;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v50, -1, -1);
      MEMORY[0x23B842FA4](v44, -1, -1);
    }
    else
    {
      sub_23A125ED8(a4, a5);
      sub_23A125ED8(a4, a5);
    }

    sub_23A126A18();
  }
}

uint64_t sub_23A126A18()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  void (*v13)(_QWORD *);
  id v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD *, uint64_t, uint64_t);
  id v27;
  char v28;
  uint64_t v29;
  id v30;
  char v31;
  uint64_t v32;
  id v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, uint64_t, uint64_t);
  unsigned int v38;
  uint64_t (*v39)(_QWORD *, uint64_t);
  char v40;

  v1 = v0;
  v2 = type metadata accessor for NetworkDescriptor();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v36 - v6;
  v8 = sub_23A19B35C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (void *)v1[2];
  *v11 = v12;
  v13 = *(void (**)(_QWORD *))(v9 + 104);
  v38 = *MEMORY[0x24BEE5610];
  v13(v11);
  v14 = v12;
  LOBYTE(v12) = sub_23A19B374();
  v39 = *(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8);
  result = v39(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  v37 = (void (*)(_QWORD *, uint64_t, uint64_t))v13;
  v16 = v1[8];
  if (v16 >> 60 == 15)
    return result;
  v17 = v1[7];
  *(_QWORD *)v7 = v17;
  *((_QWORD *)v7 + 1) = v16;
  v7[16] = 0;
  swift_storeEnumTagMultiPayload();
  sub_23A13ABDC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoSerialChannelHost();
  swift_allocObject();
  sub_23A13A53C(v17, v16);
  v18 = v14;
  v36 = v17;
  v19 = v17;
  v20 = v16;
  sub_23A13A53C(v19, v16);
  v21 = sub_23A188680(0xD000000000000010, 0x800000023A1A0530, (uint64_t)v5, v14);

  v1[9] = v21;
  swift_release();
  v22 = v1[9];
  if (v22)
  {
    v23 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    v24 = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v22 + 16) = sub_23A13A1C4;
    *(_QWORD *)(v22 + 24) = v23;
    sub_23A13A1E4(v24);
  }
  sub_23A12735C();
  sub_23A1274C4();
  *v11 = v18;
  v25 = v38;
  v26 = v37;
  v37(v11, v38, v8);
  v27 = v18;
  v28 = sub_23A19B374();
  result = v39(v11, v8);
  if ((v28 & 1) == 0)
    goto LABEL_19;
  if (v1[9])
  {
    v29 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_23A1322D0((uint64_t)sub_23A13A204, v29, (uint64_t)&unk_250B23EA8, (uint64_t)sub_23A13A210, (uint64_t)&block_descriptor_32);
    swift_release();
    swift_release();
  }
  *v11 = v27;
  v26(v11, v25, v8);
  v30 = v27;
  v31 = sub_23A19B374();
  result = v39(v11, v8);
  if ((v31 & 1) == 0)
    goto LABEL_20;
  if (v1[9])
  {
    v32 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_23A1322D0((uint64_t)sub_23A13A1FC, v32, (uint64_t)&unk_250B24010, (uint64_t)sub_23A13A430, (uint64_t)&block_descriptor_60);
    swift_release();
    swift_release();
  }
  *v11 = v30;
  v26(v11, v25, v8);
  v33 = v30;
  v34 = sub_23A19B374();
  result = v39(v11, v8);
  if ((v34 & 1) == 0)
    goto LABEL_21;
  if (v1[9])
  {
    v35 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_23A1322D0((uint64_t)sub_23A13A1F4, v35, (uint64_t)&unk_250B240D8, (uint64_t)sub_23A13A554, (uint64_t)&block_descriptor_76);
    swift_release();
    swift_release();
  }
  v40 = 1;
  sub_23A125B90(&v40);
  if (v1[9])
  {
    swift_retain();
    sub_23A1861F4();
    swift_release();
    sub_23A125F1C(v36, v20);
    return sub_23A13AC20((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  }
  else
  {
    sub_23A13AC20((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
    return sub_23A125F1C(v36, v20);
  }
}

uint64_t sub_23A126ED0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_23A126EFC(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  void *v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void (*v24)(uint64_t *);
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(uint64_t *);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = *(void **)(v2 + 16);
  *v7 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_24:
    swift_once();
LABEL_8:
    v12 = sub_23A19AE28();
    __swift_project_value_buffer(v12, (uint64_t)qword_25694EBA0);
    swift_retain_n();
    v13 = sub_23A19AE10();
    v14 = sub_23A19B6BC();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v30 = v16;
      *(_DWORD *)v15 = 136315138;
      LOBYTE(v33) = *(_BYTE *)(v2 + 48);
      v17 = TransferHost.State.description.getter();
      v33 = sub_23A14071C(v17, v18, &v30);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v13, v14, "Stopped, ignoring attestation-host state change, state=%s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v16, -1, -1);
      MEMORY[0x23B842FA4](v15, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return;
  }
  if (!*(_QWORD *)(v2 + 72))
    return;
  v11 = *(unsigned __int8 *)(v2 + 48);
  if (v11 > 9)
  {
    if (qword_2569443B8 == -1)
      goto LABEL_8;
    goto LABEL_24;
  }
  if ((v8 & 1) != 0)
  {
    if (v11 == 1)
    {
      LOBYTE(v30) = 2;
      sub_23A12762C((unsigned __int8 *)&v30, 0xD00000000000001CLL, 0x800000023A1A08C0);
    }
  }
  else
  {
    v19 = *(_QWORD *)(v2 + 64);
    if (v19 >> 60 == 15)
    {
      if (qword_2569443B8 != -1)
        swift_once();
      v20 = sub_23A19AE28();
      __swift_project_value_buffer(v20, (uint64_t)qword_25694EBA0);
      v21 = sub_23A19AE10();
      v22 = sub_23A19B6A4();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_23A123000, v21, v22, "Unexpected, attestation-host ready, but no shared-secret found", v23, 2u);
        MEMORY[0x23B842FA4](v23, -1, -1);
      }

      v24 = *(void (**)(uint64_t *))(v2 + 112);
      if (v24)
      {
        sub_23A13A180();
        v25 = (void *)swift_allocError();
        *v26 = 0xD000000000000014;
        v26[1] = 0x800000023A1A08E0;
        v30 = (uint64_t)v25;
        v31 = 0;
        v32 = 1;
        swift_retain();
        v24(&v30);
        sub_23A13A1E4((uint64_t)v24);

      }
    }
    else
    {
      v27 = *(_QWORD *)(v2 + 56);
      LOBYTE(v30) = 2;
      sub_23A131DF0(v27, v19);
      sub_23A125B90((char *)&v30);
      v28 = *(void (**)(uint64_t *))(v2 + 112);
      if (v28)
      {
        v30 = v27;
        v31 = v19;
        v32 = 0;
        sub_23A13A53C(v27, v19);
        sub_23A13A0F8((uint64_t)v28);
        v28(&v30);
        sub_23A13A1E4((uint64_t)v28);
        sub_23A125F1C(v27, v19);
        v29 = *(_QWORD *)(v2 + 112);
      }
      else
      {
        v29 = 0;
      }
      *(_QWORD *)(v2 + 112) = 0;
      *(_QWORD *)(v2 + 120) = 0;
      sub_23A13A1E4(v29);
      sub_23A125F1C(v27, v19);
    }
  }
}

uint64_t sub_23A12735C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_23A19B35C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 16);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost))
    {
      v8 = swift_allocObject();
      swift_weakInit();
      v9 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_23A134A48((uint64_t)sub_23A13AE20, v8, (uint64_t)sub_23A13AE28, v9, (uint64_t)&unk_250B244C0, (uint64_t)sub_23A13AE74, (uint64_t)&block_descriptor_161, (void (*)(uint64_t, uint64_t))sub_23A13B0A4);
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23A1274C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_23A19B35C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 16);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost))
    {
      v8 = swift_allocObject();
      swift_weakInit();
      v9 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_23A134A48((uint64_t)sub_23A13ACF4, v8, (uint64_t)sub_23A13ACFC, v9, (uint64_t)&unk_250B243F8, (uint64_t)sub_23A13AD0C, (uint64_t)&block_descriptor_144, (void (*)(uint64_t, uint64_t))sub_23A13B0A4);
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23A12762C(unsigned __int8 *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(uint64_t *);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  char v43;

  v4 = v3;
  v8 = sub_23A19B35C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (_QWORD *)((char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  LODWORD(v12) = *a1;
  v13 = *(void **)(v4 + 16);
  *v11 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v14 = v13;
  LOBYTE(v13) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_4;
  }
  if (*(unsigned __int8 *)(v4 + 48) > 9u)
    return result;
  if (qword_2569443B8 != -1)
    goto LABEL_17;
LABEL_4:
  v16 = sub_23A19AE28();
  __swift_project_value_buffer(v16, (uint64_t)qword_25694EBA0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v17 = sub_23A19AE10();
  v18 = sub_23A19B6BC();
  v19 = os_log_type_enabled(v17, v18);
  v40 = a2;
  if (v19)
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v42[0] = v21;
    *(_DWORD *)v20 = 136315394;
    swift_bridgeObjectRetain();
    v41 = sub_23A14071C(a2, a3, v42);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2080;
    LOBYTE(v41) = *(_BYTE *)(v4 + 48);
    v22 = TransferHost.State.description.getter();
    v41 = sub_23A14071C(v22, v23, v42);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v17, v18, "[Close] Closing, reason='%s', state=%s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v21, -1, -1);
    MEMORY[0x23B842FA4](v20, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  LOBYTE(v42[0]) = 10;
  sub_23A125B90((char *)v42);
  v24 = *(void (**)(uint64_t *))(v4 + 80);
  if (v24 && *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost) && (_DWORD)v12 != 4)
  {
    v25 = *(_QWORD *)(v4 + 88);
    swift_retain_n();
    sub_23A13A0F8((uint64_t)v24);
    v26 = sub_23A19AE10();
    v27 = sub_23A19B6BC();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v38[2] = v25;
      v29 = (uint8_t *)v28;
      v30 = swift_slowAlloc();
      v39 = v12;
      v12 = v30;
      v42[0] = v30;
      *(_DWORD *)v29 = 136315138;
      v38[1] = v29 + 4;
      LOBYTE(v41) = *(_BYTE *)(v4 + 48);
      v31 = TransferHost.State.description.getter();
      v41 = sub_23A14071C(v31, v32, v42);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v26, v27, "[Close] Completing lease, state=%s", v29, 0xCu);
      swift_arrayDestroy();
      v33 = v12;
      LOBYTE(v12) = v39;
      MEMORY[0x23B842FA4](v33, -1, -1);
      MEMORY[0x23B842FA4](v29, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v34 = v40;
    v35 = swift_allocObject();
    swift_weakInit();
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = v35;
    *(_BYTE *)(v36 + 24) = v12;
    *(_QWORD *)(v36 + 32) = v34;
    *(_QWORD *)(v36 + 40) = a3;
    v37 = *(_QWORD *)(v4 + 96);
    *(_QWORD *)(v4 + 96) = sub_23A13A130;
    *(_QWORD *)(v4 + 104) = v36;
    swift_bridgeObjectRetain();
    sub_23A13A1E4(v37);
    v42[0] = 200;
    v42[1] = v34;
    v42[2] = a3;
    v43 = 0;
    swift_bridgeObjectRetain();
    v24(v42);
    sub_23A13A1E4((uint64_t)v24);
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v42[0]) = v12;
    return sub_23A139E18((char *)v42);
  }
}

void sub_23A127B28(uint64_t *a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(uint64_t (*)(uint64_t *), _QWORD *, uint64_t, uint64_t);
  void *v33;
  _QWORD *v34;
  uint64_t v35[2];
  char v36;
  uint64_t v37;

  v5 = *a1;
  v6 = a1[1];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_retain();
LABEL_19:
    swift_release();
    return;
  }
  v9 = Strong;
  if (*(_BYTE *)(Strong + 48) == 2)
  {
    v10 = qword_2569443B8;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_23A19AE28();
    __swift_project_value_buffer(v11, (uint64_t)qword_25694EBA0);
    sub_23A131DF0(v5, v6);
    sub_23A131DF0(v5, v6);
    v12 = sub_23A19AE10();
    v13 = sub_23A19B6BC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      *(_DWORD *)v14 = 136315138;
      v35[0] = v15;
      v16 = sub_23A19AC6C();
      v37 = sub_23A14071C(v16, v17, v35);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A125ED8(v5, v6);
      sub_23A125ED8(v5, v6);
      _os_log_impl(&dword_23A123000, v12, v13, "[SPAKE2 Share] Received shareV=%s, requesting pin-entry from user", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v15, -1, -1);
      MEMORY[0x23B842FA4](v14, -1, -1);
    }
    else
    {
      sub_23A125ED8(v5, v6);
      sub_23A125ED8(v5, v6);
    }

    v25 = *(_QWORD *)(v9 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationCount);
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      *(_QWORD *)(v9 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationCount) = v27;
      swift_beginAccess();
      if (MEMORY[0x23B843028](v9 + 32))
      {
        v28 = *(_QWORD *)(v9 + 40);
        ObjectType = swift_getObjectType();
        v30 = swift_allocObject();
        swift_weakInit();
        v31 = (_QWORD *)swift_allocObject();
        v31[2] = v30;
        v31[3] = sub_23A13A35C;
        v31[4] = v7;
        v31[5] = v5;
        v31[6] = v6;
        v32 = *(void (**)(uint64_t (*)(uint64_t *), _QWORD *, uint64_t, uint64_t))(v28 + 24);
        sub_23A131DF0(v5, v6);
        swift_retain();
        v32(sub_23A13A3CC, v31, ObjectType, v28);
        swift_release();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
        return;
      }
      swift_release();
      goto LABEL_19;
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_release();
    if (qword_2569443B8 != -1)
      swift_once();
    v18 = sub_23A19AE28();
    __swift_project_value_buffer(v18, (uint64_t)qword_25694EBA0);
    swift_retain_n();
    v19 = sub_23A19AE10();
    v20 = sub_23A19B6BC();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v35[0] = v22;
      *(_DWORD *)v21 = 136315138;
      LOBYTE(v37) = *(_BYTE *)(v9 + 48);
      v23 = TransferHost.State.description.getter();
      v37 = sub_23A14071C(v23, v24, v35);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v19, v20, "[SPAKE2 Share] Ignoring request, state=%s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v22, -1, -1);
      MEMORY[0x23B842FA4](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_23A13A180();
    v33 = (void *)swift_allocError();
    *v34 = 0xD000000000000035;
    v34[1] = 0x800000023A1A0550;
    v35[0] = (uint64_t)v33;
    v35[1] = 0;
    v36 = 1;
    a2(v35);
    swift_release();

  }
}

uint64_t sub_23A128048(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v11 = sub_23A19B2D8();
  v26 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23A19B2F0();
  v24 = *(_QWORD *)(v14 - 8);
  v25 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v18 = a1[1];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = result;
    v23 = *(_QWORD *)(result + 16);
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v20;
    v21[3] = v17;
    v21[4] = v18;
    v21[5] = a3;
    v21[6] = a4;
    v21[7] = a5;
    v21[8] = a6;
    aBlock[4] = sub_23A13A418;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A126ED0;
    aBlock[3] = &block_descriptor_54;
    v22 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23A131DF0(a5, a6);
    sub_23A19B2E4();
    v27 = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
    sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
    sub_23A19B764();
    MEMORY[0x23B8425E4](0, v16, v13, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v11);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v25);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A1282A0(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *);
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t *v43;
  _QWORD *v44;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(_QWORD, _QWORD, _QWORD);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;

  v76 = a6;
  v77 = a7;
  v80 = a2;
  v11 = sub_23A19ADB0();
  v82 = *(_QWORD *)(v11 - 8);
  v83 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v81 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23A19AE28();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = qword_2569443B8;
  swift_retain_n();
  if (v17 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v13, (uint64_t)qword_25694EBA0);
  v19 = *(void (**)(char *))(v14 + 16);
  v78 = v18;
  v19(v16);
  swift_bridgeObjectRetain_n();
  v20 = sub_23A19AE10();
  v21 = sub_23A19B6BC();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v79 = a1;
    v23 = v22;
    v73 = swift_slowAlloc();
    v84 = v73;
    *(_DWORD *)v23 = 136315394;
    v86 = 0x2865646F436E6950;
    v87 = 0xE800000000000000;
    swift_bridgeObjectRetain();
    v74 = a5;
    sub_23A19B590();
    v75 = a4;
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v86 = sub_23A14071C(v86, v87, &v84);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    v24 = sub_23A1298F0();
    v86 = sub_23A14071C(v24, v25, &v84);
    a5 = v74;
    sub_23A19B728();
    a4 = v75;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v20, v21, "[SPAKE2 Share] User provided PIN=%s, %s", (uint8_t *)v23, 0x16u);
    v26 = v73;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v26, -1, -1);
    v27 = v23;
    a1 = v79;
    MEMORY[0x23B842FA4](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v28 = v82;
  v29 = v83;
  v30 = v81;
  if (*(_BYTE *)(a1 + 48) != 2)
  {
    v86 = 0;
    v87 = 0xE000000000000000;
    sub_23A19B794();
    swift_bridgeObjectRelease();
    v86 = 0xD000000000000014;
    v87 = 0x800000023A1A0590;
    LOBYTE(v84) = *(_BYTE *)(a1 + 48);
    TransferHost.State.description.getter();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v39 = v86;
    v40 = v87;
    sub_23A13A180();
    v41 = swift_allocError();
    v42 = (void *)v41;
    *v43 = v39;
    v43[1] = v40;
LABEL_11:
    a4(v41, 0, 1);

    return swift_release_n();
  }
  v86 = v80;
  v87 = a3;
  v31 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationCount);
  type metadata accessor for Spake2Prover(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v32 = sub_23A18B4A4(&v86, v31);
  if (!v32)
  {
    sub_23A13A180();
    v41 = swift_allocError();
    v42 = (void *)v41;
    *v44 = 0xD00000000000001DLL;
    v44[1] = 0x800000023A1A05B0;
    goto LABEL_11;
  }
  v33 = v32;
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2Prover) = v32;
  swift_retain();
  swift_release();
  v34 = v33 + OBJC_IVAR____TtC5Cosmo12Spake2Prover_prover;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v30, v34, v29);
  v35 = sub_23A19ADA4();
  v36 = v28;
  v37 = v35;
  v38 = v30;
  v47 = v46;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v29);
  swift_beginAccess();
  sub_23A131DF0(v37, v47);
  v48 = sub_23A19AD8C();
  v50 = v49;
  swift_endAccess();
  v51 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm);
  v52 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm);
  v53 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm + 8);
  *v51 = v48;
  v51[1] = v50;
  sub_23A125F1C(v52, v53);
  sub_23A131DF0(v37, v47);
  sub_23A131DF0(v37, v47);
  v54 = sub_23A19AE10();
  v55 = sub_23A19B6BC();
  v56 = v55;
  v57 = os_log_type_enabled(v54, v55);
  v74 = a5;
  v75 = a4;
  if (v57)
  {
    v58 = swift_slowAlloc();
    LODWORD(v83) = v56;
    v59 = v58;
    v60 = swift_slowAlloc();
    v84 = v60;
    *(_DWORD *)v59 = 136315394;
    v61 = sub_23A19AC6C();
    v85 = sub_23A14071C(v61, v62, &v84);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A125ED8(v37, v47);
    sub_23A125ED8(v37, v47);
    *(_WORD *)(v59 + 12) = 2080;
    v63 = sub_23A1298F0();
    v85 = sub_23A14071C(v63, v64, &v84);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v54, (os_log_type_t)v83, "[SPAKE2 Share] Computed confirmP=%s, %s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v60, -1, -1);
    MEMORY[0x23B842FA4](v59, -1, -1);
  }
  else
  {
    sub_23A125ED8(v37, v47);
    sub_23A125ED8(v37, v47);
  }

  sub_23A131DF0(v37, v47);
  sub_23A131DF0(v37, v47);
  v65 = sub_23A19AE10();
  v66 = sub_23A19B6BC();
  if (os_log_type_enabled(v65, v66))
  {
    v67 = swift_slowAlloc();
    v83 = swift_slowAlloc();
    v84 = v83;
    *(_DWORD *)v67 = 136315394;
    v68 = sub_23A19AC6C();
    v85 = sub_23A14071C(v68, v69, &v84);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A125ED8(v37, v47);
    sub_23A125ED8(v37, v47);
    *(_WORD *)(v67 + 12) = 2080;
    v70 = sub_23A1298F0();
    v85 = sub_23A14071C(v70, v71, &v84);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v65, v66, "[SPAKE2 Share] Sending shareP=%s %s", (uint8_t *)v67, 0x16u);
    v72 = v83;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v72, -1, -1);
    MEMORY[0x23B842FA4](v67, -1, -1);
  }
  else
  {
    sub_23A125ED8(v37, v47);
    sub_23A125ED8(v37, v47);
  }

  v75(v37, v47, 0);
  sub_23A125ED8(v37, v47);
  LOBYTE(v84) = 4;
  sub_23A125B90((char *)&v84);
  sub_23A125ED8(v37, v47);
  swift_release();
  return swift_release_n();
}

void sub_23A128DEC(char **a1, void (*a2)(uint64_t *))
{
  char *v3;
  char *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t *v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t *);
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;

  v3 = *a1;
  v4 = a1[1];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v6 = Strong;
    if (*(_BYTE *)(Strong + 48) != 4)
    {
      v17 = qword_2569443B8;
      swift_retain_n();
      if (v17 != -1)
        swift_once();
      v18 = sub_23A19AE28();
      __swift_project_value_buffer(v18, (uint64_t)qword_25694EBA0);
      v19 = sub_23A19AE10();
      v20 = sub_23A19B6BC();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v52 = v22;
        *(_DWORD *)v21 = 136315138;
        v23 = sub_23A1298F0();
        v55 = sub_23A14071C(v23, v24, &v52);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v19, v20, "[SPAKE2 Confirm] Ignoring request, %s", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v22, -1, -1);
        MEMORY[0x23B842FA4](v21, -1, -1);
      }

      sub_23A13A180();
      v25 = swift_allocError();
      *v26 = 0xD000000000000037;
      v26[1] = 0x800000023A1A0600;
      v52 = v25;
      v53 = 0;
      v54 = 1;
      a2(&v52);
      goto LABEL_17;
    }
    if (!*(_QWORD *)(Strong + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2Prover))
    {
      sub_23A13A180();
      v27 = swift_allocError();
      *v28 = 0xD000000000000014;
      v28[1] = 0x800000023A1A0640;
      v52 = v27;
      v53 = 0;
      v54 = 1;
      swift_retain();
      a2(&v52);
      swift_release_n();
      v29 = (void *)v27;
LABEL_18:

      return;
    }
    v7 = qword_2569443B8;
    swift_retain_n();
    swift_retain();
    if (v7 != -1)
      swift_once();
    v8 = sub_23A19AE28();
    __swift_project_value_buffer(v8, (uint64_t)qword_25694EBA0);
    sub_23A131DF0((uint64_t)v3, (unint64_t)v4);
    sub_23A131DF0((uint64_t)v3, (unint64_t)v4);
    v9 = sub_23A19AE10();
    v10 = sub_23A19B6BC();
    v51 = a2;
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v52 = v12;
      *(_DWORD *)v11 = 136315394;
      v13 = sub_23A19AC6C();
      v55 = sub_23A14071C(v13, v14, &v52);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A125ED8((uint64_t)v3, (unint64_t)v4);
      sub_23A125ED8((uint64_t)v3, (unint64_t)v4);
      *(_WORD *)(v11 + 12) = 2080;
      v15 = sub_23A1298F0();
      v55 = sub_23A14071C(v15, v16, &v52);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v9, v10, "[SPAKE2 Confirm] Received confirmV=%s, %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v12, -1, -1);
      MEMORY[0x23B842FA4](v11, -1, -1);
    }
    else
    {
      sub_23A125ED8((uint64_t)v3, (unint64_t)v4);
      sub_23A125ED8((uint64_t)v3, (unint64_t)v4);
    }

    v30 = (uint64_t *)(v6 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm);
    v31 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm + 8);
    if (v31 >> 60 == 15)
    {
      sub_23A13A180();
      v25 = swift_allocError();
      *v32 = 0xD00000000000001CLL;
      v32[1] = 0x800000023A1A0660;
      v52 = v25;
      v53 = 0;
      v54 = 1;
      a2(&v52);
      swift_release();
LABEL_17:
      swift_release_n();
      v29 = (void *)v25;
      goto LABEL_18;
    }
    v33 = *v30;
    sub_23A13A53C(*v30, *(_QWORD *)(v6 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm + 8));
    sub_23A13A53C(v33, v31);
    sub_23A131DF0(v33, v31);
    v34 = sub_23A19AE10();
    v35 = sub_23A19B6BC();
    v50 = v33;
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v52 = v49;
      *(_DWORD *)v36 = 136315394;
      v37 = sub_23A19AC6C();
      v55 = sub_23A14071C(v37, v38, &v52);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A125F1C(v33, v31);
      sub_23A125F1C(v33, v31);
      *(_WORD *)(v36 + 12) = 2080;
      v39 = sub_23A1298F0();
      v55 = sub_23A14071C(v39, v40, &v52);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v34, v35, "[SPAKE2 Confirm] Sending confirmP=%s %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v49, -1, -1);
      MEMORY[0x23B842FA4](v36, -1, -1);
    }
    else
    {
      sub_23A125F1C(v33, v31);
      sub_23A125F1C(v33, v31);
    }

    v52 = v33;
    v53 = v31;
    v54 = 0;
    sub_23A131DF0(v33, v31);
    v51(&v52);
    sub_23A125F1C(v33, v31);
    sub_23A18B9E4(v3, v4);
    v41 = sub_23A19AE10();
    v42 = sub_23A19B6BC();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v52 = v44;
      *(_DWORD *)v43 = 136315138;
      v45 = sub_23A1298F0();
      v55 = sub_23A14071C(v45, v46, &v52);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v41, v42, "[SPAKE2 Confirm] PIN validated, %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v44, -1, -1);
      MEMORY[0x23B842FA4](v43, -1, -1);
    }

    LOBYTE(v52) = 5;
    sub_23A125B90((char *)&v52);
    swift_beginAccess();
    if (MEMORY[0x23B843028](v6 + 32))
    {
      v47 = *(_QWORD *)(v6 + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 8))(v6, ObjectType, v47);
      swift_release_n();
      sub_23A125F1C(v50, v31);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release_n();
      sub_23A125F1C(v50, v31);
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_23A1298F0()
{
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  TransferHost.State.description.getter();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 0x612D747365747461;
}

void sub_23A1299DC(uint64_t *a1, void (*a2)(_BYTE **), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t Strong;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  unint64_t *v45;
  _BYTE *v46;
  unint64_t v47;
  const char *v48;
  uint64_t v49;
  unint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  void (*v61)(_BYTE **);
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _BOOL4 v70;
  os_log_type_t v71;
  uint64_t v72;
  _BYTE *v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  unint64_t v80;
  NSObject *v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  void (*v89)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _BYTE *v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  NSObject *v101;
  os_log_type_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  void *v111;
  uint64_t v112;
  unint64_t v113;
  _BYTE *v114;
  id v115;
  id v116;
  NSObject *v117;
  os_log_type_t v118;
  uint64_t v119;
  _BYTE *v120;
  id v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  uint8_t *v129;
  _BYTE *v130;
  uint64_t v131;
  unint64_t v132;
  void (*v133)(_BYTE **);
  uint64_t v134;
  _BYTE *v135;
  __SecKey *v136;
  _QWORD *v137;
  uint64_t v138;
  __int16 v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  void (*v149)(_BYTE **);
  uint64_t v150;
  _BYTE *v151;
  __SecKey *v152;
  void (*v153)(_BYTE *, uint64_t);
  _QWORD *v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  NSObject *v163;
  os_log_type_t v164;
  uint64_t v165;
  _BYTE *v166;
  uint64_t v167;
  unint64_t v168;
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  _BYTE *v172;
  NSObject *v173;
  os_log_type_t v174;
  uint8_t *v175;
  _BYTE *v176;
  _BYTE *v177;
  uint64_t v178;
  uint64_t v179;
  _BYTE *v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  void (*v184)(_BYTE *, uint64_t);
  _BYTE *v185;
  __SecKey *v186;
  _BYTE v187[12];
  int v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  _BYTE *v192;
  __SecKey *KeyPair;
  NSObject *v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  _BYTE *v200;
  uint64_t v201;
  uint64_t v202;
  _BYTE *v203;
  void (*v204)(_BYTE **);
  uint64_t v205;
  uint64_t v206;
  _BYTE *v207;
  _BYTE *v208;
  _BYTE *v209;
  uint64_t v210;
  _BYTE *v211;
  _BYTE *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _BYTE *v216;
  unint64_t v217;
  _BYTE *v218;
  unint64_t v219;
  char v220;
  uint64_t v221;

  v221 = *MEMORY[0x24BDAC8D0];
  v214 = sub_23A19AE28();
  v210 = *(_QWORD *)(v214 - 8);
  MEMORY[0x24BDAC7A8](v214);
  v209 = &v187[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569465D0);
  MEMORY[0x24BDAC7A8](v7);
  v211 = &v187[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256944500);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v208 = &v187[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v187[-v12];
  v14 = sub_23A19AD2C();
  v213 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v207 = &v187[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v212 = &v187[-v18];
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v187[-v19];
  v21 = *a1;
  v22 = a1[1];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v24 = (_BYTE *)Strong;
    if (*(_BYTE *)(Strong + 48) == 5)
    {
      v25 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2Prover);
      if (v25)
      {
        v203 = v20;
        v201 = v14;
        v26 = qword_2569443B8;
        v206 = v25;
        swift_retain();
        if (v26 != -1)
          swift_once();
        v27 = __swift_project_value_buffer(v214, (uint64_t)qword_25694EBA0);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        v205 = v27;
        v28 = sub_23A19AE10();
        v29 = sub_23A19B6BC();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = swift_slowAlloc();
          v202 = a3;
          v31 = v30;
          v200 = (_BYTE *)swift_slowAlloc();
          v216 = v200;
          *(_DWORD *)v31 = 136315394;
          swift_bridgeObjectRetain();
          v215 = sub_23A14071C(v21, v22, (uint64_t *)&v216);
          sub_23A19B728();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v31 + 12) = 2080;
          LOBYTE(v215) = v24[48];
          v32 = TransferHost.State.description.getter();
          v215 = sub_23A14071C(v32, v33, (uint64_t *)&v216);
          sub_23A19B728();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A123000, v28, v29, "[FileTransferSetup] Received encryptedRemotePublicKey=%s, state=%s", (uint8_t *)v31, 0x16u);
          v34 = (unint64_t)v200;
          swift_arrayDestroy();
          MEMORY[0x23B842FA4](v34, -1, -1);
          v35 = v31;
          a3 = v202;
          MEMORY[0x23B842FA4](v35, -1, -1);

        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        v49 = sub_23A19AC30();
        if (v50 >> 60 == 15)
        {
          v51 = sub_23A19AE10();
          v52 = sub_23A19B6A4();
          if (os_log_type_enabled(v51, v52))
          {
            v53 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v53 = 0;
            _os_log_impl(&dword_23A123000, v51, v52, "[FileTransferSetup] Failed to deserialize encryptedRemotePublicKey from base64", v53, 2u);
            MEMORY[0x23B842FA4](v53, -1, -1);
          }

          sub_23A13A180();
          v46 = (_BYTE *)swift_allocError();
          *v54 = 0xD00000000000002DLL;
          v54[1] = 0x800000023A1A06C0;
          v216 = v46;
          v217 = 0;
          v218 = 0;
          v219 = 0;
          v220 = 1;
          a2(&v216);
        }
        else
        {
          v55 = v50;
          v199 = v49;
          v56 = sub_23A18A5C4(v49, v50);
          v200 = (_BYTE *)v55;
          v58 = v57;
          if (v57 >> 60 != 15)
          {
            v67 = v56;
            sub_23A13A53C(v56, v57);
            swift_retain();
            sub_23A13A53C(v67, v58);
            swift_retain();
            sub_23A13A53C(v67, v58);
            v198 = v58;
            v68 = sub_23A19AE10();
            v69 = sub_23A19B6BC();
            v70 = os_log_type_enabled(v68, v69);
            v204 = a2;
            v202 = a3;
            v197 = v67;
            v192 = 0;
            if (v70)
            {
              v71 = v69;
              v72 = swift_slowAlloc();
              v73 = (_BYTE *)swift_slowAlloc();
              v216 = v73;
              *(_DWORD *)v72 = 136315394;
              v74 = v198;
              v75 = sub_23A19AC6C();
              v215 = sub_23A14071C(v75, v76, (uint64_t *)&v216);
              sub_23A19B728();
              swift_bridgeObjectRelease();
              sub_23A125F1C(v67, v74);
              sub_23A125F1C(v67, v74);
              *(_WORD *)(v72 + 12) = 2080;
              LOBYTE(v215) = v24[48];
              v77 = TransferHost.State.description.getter();
              v215 = sub_23A14071C(v77, v78, (uint64_t *)&v216);
              sub_23A19B728();
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_23A123000, v68, v71, "[FileTransferSetup] Finished decryption, remotePublicKey=%s state=%s", (uint8_t *)v72, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x23B842FA4](v73, -1, -1);
              MEMORY[0x23B842FA4](v72, -1, -1);

            }
            else
            {
              v80 = v198;
              sub_23A125F1C(v67, v198);
              sub_23A125F1C(v67, v80);

              swift_release_n();
            }
            KeyPair = createKeyPair((void *)*MEMORY[0x24BDE9060], 256);
            v81 = secIdentityFromKeyPair(KeyPair);
            v82 = publicKeyFromIdentity(v81);
            v83 = sub_23A19AC78();
            v85 = v84;

            v190 = sub_23A19AC6C();
            v191 = v86;
            v87 = v203;
            sub_23A19AD20();
            v88 = v213;
            v89 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v213 + 16);
            v90 = v201;
            v89(v13, v87, v201);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v13, 0, 1, v90);
            v91 = (uint64_t)&v24[OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferServiceUUID];
            swift_beginAccess();
            v189 = v91;
            sub_23A13A76C((uint64_t)v13, v91, (uint64_t *)&unk_256944500);
            swift_endAccess();
            v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945210);
            v93 = v211;
            v94 = &v211[*(int *)(v92 + 96)];
            v95 = *(int *)(v92 + 112);
            *v211 = 1;
            v96 = v198;
            v93[1] = v197;
            v93[2] = v96;
            v93[3] = v83;
            v93[4] = v85;
            v93[5] = v81;
            v89(v94, v87, v90);
            *((_BYTE *)v93 + v95) = 1;
            v97 = v191;
            v98 = type metadata accessor for NetworkDescriptor();
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v93, 0, 1, v98);
            v99 = (uint64_t)&v24[OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferDescriptor];
            swift_beginAccess();
            v195 = v83;
            v196 = v85;
            sub_23A131DF0(v83, v85);
            v194 = v81;
            swift_unknownObjectRetain();
            sub_23A13A76C((uint64_t)v93, v99, &qword_2569465D0);
            swift_endAccess();
            v100 = v212;
            v89(v212, v87, v90);
            swift_retain_n();
            swift_bridgeObjectRetain();
            v101 = sub_23A19AE10();
            v102 = sub_23A19B6BC();
            v103 = v102;
            if (os_log_type_enabled(v101, v102))
            {
              v104 = swift_slowAlloc();
              v211 = (_BYTE *)swift_slowAlloc();
              v216 = v211;
              *(_DWORD *)v104 = 136315650;
              v188 = v103;
              swift_bridgeObjectRetain();
              v215 = sub_23A14071C(v190, v97, (uint64_t *)&v216);
              sub_23A19B728();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v104 + 12) = 2080;
              sub_23A131E34(&qword_256946070, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
              v105 = sub_23A19B8FC();
              v215 = sub_23A14071C(v105, v106, (uint64_t *)&v216);
              sub_23A19B728();
              swift_bridgeObjectRelease();
              v212 = *(_BYTE **)(v213 + 8);
              ((void (*)(_BYTE *, uint64_t))v212)(v100, v90);
              *(_WORD *)(v104 + 22) = 2080;
              LOBYTE(v215) = v24[48];
              v107 = TransferHost.State.description.getter();
              v215 = sub_23A14071C(v107, v108, (uint64_t *)&v216);
              sub_23A19B728();
              v109 = v24;
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_23A123000, v101, (os_log_type_t)v188, "[FileTransferSetup] Generated localPublicKey=%s fileTransferServiceUUID=%s, state=%s", (uint8_t *)v104, 0x20u);
              v110 = v211;
              swift_arrayDestroy();
              MEMORY[0x23B842FA4](v110, -1, -1);
              MEMORY[0x23B842FA4](v104, -1, -1);

            }
            else
            {
              swift_bridgeObjectRelease_n();
              v212 = *(_BYTE **)(v213 + 8);
              ((void (*)(_BYTE *, uint64_t))v212)(v100, v90);

              v109 = v24;
              swift_release_n();
            }
            v111 = v192;
            v112 = sub_23A18A218(v195, v196);
            if (v111)
            {
              v114 = v109;
              swift_retain();
              v115 = v111;
              swift_retain();
              v116 = v111;
              v117 = sub_23A19AE10();
              v118 = sub_23A19B6A4();
              if (os_log_type_enabled(v117, v118))
              {
                v119 = swift_slowAlloc();
                v120 = (_BYTE *)swift_slowAlloc();
                v215 = (uint64_t)v111;
                v216 = v120;
                *(_DWORD *)v119 = 136315394;
                v121 = v111;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
                v122 = sub_23A19B518();
                v215 = sub_23A14071C(v122, v123, (uint64_t *)&v216);
                sub_23A19B728();
                swift_bridgeObjectRelease();

                *(_WORD *)(v119 + 12) = 2080;
                LOBYTE(v215) = v114[48];
                v124 = TransferHost.State.description.getter();
                v215 = sub_23A14071C(v124, v125, (uint64_t *)&v216);
                sub_23A19B728();
                swift_release_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_23A123000, v117, v118, "[FileTransferSetup] Failed to encrypt publicKey, error=%s %s", (uint8_t *)v119, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x23B842FA4](v120, -1, -1);
                MEMORY[0x23B842FA4](v119, -1, -1);

              }
              else
              {

                swift_release_n();
              }
              v133 = v204;
              v134 = v201;
              v135 = v203;
              v136 = KeyPair;
              sub_23A13A180();
              v46 = (_BYTE *)swift_allocError();
              *v137 = 0xD00000000000001ELL;
              v137[1] = 0x800000023A1A0740;
              v216 = v46;
              v217 = 0;
              v218 = 0;
              v219 = 0;
              v220 = 1;
              v133(&v216);
              sub_23A125F1C(v197, v198);

              sub_23A125F1C(v199, (unint64_t)v200);
              swift_release();

              swift_unknownObjectRelease();
              sub_23A125ED8(v195, v196);
              swift_release();
              ((void (*)(_BYTE *, uint64_t))v212)(v135, v134);
            }
            else
            {
              v126 = v113;
              if (v113 >> 60 != 15)
              {
                v138 = v112;
                v216 = (_BYTE *)sub_23A19AD14();
                LOWORD(v217) = v139;
                BYTE2(v217) = v140;
                BYTE3(v217) = v141;
                BYTE4(v217) = v142;
                BYTE5(v217) = v143;
                BYTE6(v217) = v144;
                HIBYTE(v217) = v145;
                v147 = sub_23A189D1C((uint64_t)&v216, (uint64_t)&v218);
                v148 = v146;
                v155 = sub_23A18A218(v147, v146);
                v157 = v156;
                sub_23A125ED8(v147, v148);
                if (v157 >> 60 != 15)
                {
                  v158 = sub_23A19AC6C();
                  v160 = v159;
                  v211 = (_BYTE *)sub_23A19AC6C();
                  v162 = v161;
                  sub_23A125F1C(v155, v157);
                  sub_23A125F1C(v138, v126);
                  swift_retain_n();
                  swift_bridgeObjectRetain_n();
                  swift_bridgeObjectRetain_n();
                  v163 = sub_23A19AE10();
                  v164 = sub_23A19B6BC();
                  if (os_log_type_enabled(v163, v164))
                  {
                    v165 = swift_slowAlloc();
                    v192 = (_BYTE *)swift_slowAlloc();
                    v216 = v192;
                    *(_DWORD *)v165 = 136315650;
                    swift_bridgeObjectRetain();
                    v215 = sub_23A14071C(v158, v160, (uint64_t *)&v216);
                    sub_23A19B728();
                    swift_bridgeObjectRelease_n();
                    v166 = (_BYTE *)v158;
                    *(_WORD *)(v165 + 12) = 2080;
                    swift_bridgeObjectRetain();
                    v215 = sub_23A14071C((uint64_t)v211, v162, (uint64_t *)&v216);
                    sub_23A19B728();
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v165 + 22) = 2080;
                    LOBYTE(v215) = v109[48];
                    v167 = TransferHost.State.description.getter();
                    v215 = sub_23A14071C(v167, v168, (uint64_t *)&v216);
                    sub_23A19B728();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_23A123000, v163, v164, "[FileTransferSetup] Sending encryptedLocalPublicKey=%s encryptedServiceUUID=%s, state=%s", (uint8_t *)v165, 0x20u);
                    v169 = v192;
                    swift_arrayDestroy();
                    MEMORY[0x23B842FA4](v169, -1, -1);
                    MEMORY[0x23B842FA4](v165, -1, -1);

                    v170 = v214;
                    v171 = v210;
                  }
                  else
                  {

                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease_n();
                    v170 = v214;
                    v171 = v210;
                    v166 = (_BYTE *)v158;
                  }
                  v172 = v209;
                  v216 = v166;
                  v217 = v160;
                  v218 = v211;
                  v219 = v162;
                  v220 = 0;
                  v204(&v216);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v171 + 16))(v172, v205, v170);
                  swift_retain_n();
                  v173 = sub_23A19AE10();
                  v174 = sub_23A19B6BC();
                  if (os_log_type_enabled(v173, v174))
                  {
                    v211 = v109;
                    v175 = (uint8_t *)swift_slowAlloc();
                    v176 = (_BYTE *)swift_slowAlloc();
                    v216 = v176;
                    *(_DWORD *)v175 = 136315138;
                    v177 = v208;
                    sub_23A13AC74(v189, (uint64_t)v208, (uint64_t *)&unk_256944500);
                    v178 = v213;
                    v179 = v201;
                    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v213 + 48))(v177, 1, v201) == 1)
                    {
                      swift_release();
                      __break(1u);
                      return;
                    }
                    v180 = v207;
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v178 + 32))(v207, v177, v179);
                    sub_23A131E34(&qword_256946070, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
                    v181 = sub_23A19B8FC();
                    v183 = v182;
                    v184 = (void (*)(_BYTE *, uint64_t))v212;
                    ((void (*)(_BYTE *, uint64_t))v212)(v180, v179);
                    v215 = sub_23A14071C(v181, v183, (uint64_t *)&v216);
                    sub_23A19B728();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_23A123000, v173, v174, "Starting file-transfer-host with Bonjour fileTransferServiceUUID=%s", v175, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x23B842FA4](v176, -1, -1);
                    MEMORY[0x23B842FA4](v175, -1, -1);

                    (*(void (**)(_BYTE *, uint64_t))(v210 + 8))(v209, v214);
                    v185 = v203;
                    v186 = KeyPair;
                  }
                  else
                  {

                    swift_release_n();
                    (*(void (**)(_BYTE *, uint64_t))(v171 + 8))(v172, v170);
                    v179 = v201;
                    v185 = v203;
                    v186 = KeyPair;
                    v184 = (void (*)(_BYTE *, uint64_t))v212;
                  }
                  sub_23A12B72C();
                  sub_23A125F1C(v197, v198);

                  sub_23A125F1C(v199, (unint64_t)v200);
                  swift_unknownObjectRelease();
                  swift_release();
                  sub_23A125ED8(v195, v196);
                  swift_release();
                  v184(v185, v179);
                  return;
                }
                sub_23A125F1C(v138, v126);
              }
              swift_retain_n();
              v127 = sub_23A19AE10();
              v128 = sub_23A19B6A4();
              if (os_log_type_enabled(v127, v128))
              {
                v129 = (uint8_t *)swift_slowAlloc();
                v130 = (_BYTE *)swift_slowAlloc();
                v216 = v130;
                *(_DWORD *)v129 = 136315138;
                LOBYTE(v215) = v109[48];
                v131 = TransferHost.State.description.getter();
                v215 = sub_23A14071C(v131, v132, (uint64_t *)&v216);
                sub_23A19B728();
                swift_release_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_23A123000, v127, v128, "[FileTransferSetup] Spake2Prover.encrypt() returned nil, %s", v129, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B842FA4](v130, -1, -1);
                MEMORY[0x23B842FA4](v129, -1, -1);

              }
              else
              {

                swift_release_n();
              }
              v149 = v204;
              v150 = v201;
              v151 = v203;
              v152 = KeyPair;
              v153 = (void (*)(_BYTE *, uint64_t))v212;
              sub_23A13A180();
              v46 = (_BYTE *)swift_allocError();
              *v154 = 0xD000000000000023;
              v154[1] = 0x800000023A1A0760;
              v216 = v46;
              v217 = 0;
              v218 = 0;
              v219 = 0;
              v220 = 1;
              v149(&v216);
              sub_23A125F1C(v197, v198);

              sub_23A125F1C(v199, (unint64_t)v200);
              swift_unknownObjectRelease();
              swift_release();
              sub_23A125ED8(v195, v196);
              swift_release();
              v153(v151, v150);
            }
            goto LABEL_30;
          }
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          v59 = sub_23A19AE10();
          v60 = sub_23A19B6A4();
          if (os_log_type_enabled(v59, v60))
          {
            v61 = a2;
            v62 = swift_slowAlloc();
            v63 = (_BYTE *)swift_slowAlloc();
            v216 = v63;
            *(_DWORD *)v62 = 136315394;
            swift_bridgeObjectRetain();
            v215 = sub_23A14071C(v21, v22, (uint64_t *)&v216);
            sub_23A19B728();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v62 + 12) = 2080;
            LOBYTE(v215) = v24[48];
            v64 = TransferHost.State.description.getter();
            v215 = sub_23A14071C(v64, v65, (uint64_t *)&v216);
            sub_23A19B728();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23A123000, v59, v60, "[FileTransferSetup] Spake2Prover.decrypt() returned nil for encryptedRemotePublicKey=%s %s", (uint8_t *)v62, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x23B842FA4](v63, -1, -1);
            v66 = v62;
            a2 = v61;
            MEMORY[0x23B842FA4](v66, -1, -1);

          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          sub_23A13A180();
          v46 = (_BYTE *)swift_allocError();
          *v79 = 0xD000000000000023;
          v79[1] = 0x800000023A1A0710;
          v216 = v46;
          v217 = 0;
          v218 = 0;
          v219 = 0;
          v220 = 1;
          a2(&v216);
          sub_23A125F1C(v199, (unint64_t)v200);
        }
        swift_release();
LABEL_29:
        swift_release();
LABEL_30:

        return;
      }
      sub_23A13A180();
      v44 = (_BYTE *)swift_allocError();
      v46 = v44;
      v47 = 0xD000000000000014;
      v48 = "Missing Spake2Prover";
    }
    else
    {
      if (qword_2569443B8 != -1)
        swift_once();
      __swift_project_value_buffer(v214, (uint64_t)qword_25694EBA0);
      swift_retain_n();
      v36 = sub_23A19AE10();
      v37 = sub_23A19B6A4();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        v39 = (_BYTE *)swift_slowAlloc();
        v204 = a2;
        v40 = v39;
        v216 = v39;
        *(_DWORD *)v38 = 136315138;
        LOBYTE(v215) = v24[48];
        v41 = TransferHost.State.description.getter();
        v215 = sub_23A14071C(v41, v42, (uint64_t *)&v216);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v36, v37, "[FileTransferSetup] Ignoring request, state=%s", v38, 0xCu);
        swift_arrayDestroy();
        v43 = v40;
        a2 = v204;
        MEMORY[0x23B842FA4](v43, -1, -1);
        MEMORY[0x23B842FA4](v38, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      sub_23A13A180();
      v44 = (_BYTE *)swift_allocError();
      v46 = v44;
      v47 = 0xD00000000000003ALL;
      v48 = "Received FileChannelSetupRequest while in unexpected state";
    }
    *v45 = v47;
    v45[1] = (unint64_t)(v48 - 32) | 0x8000000000000000;
    v216 = v44;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 1;
    a2(&v216);
    goto LABEL_29;
  }
}

uint64_t sub_23A12B72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  void (*v16)(_QWORD);
  id v17;
  char v18;
  uint64_t (*v19)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, uint64_t, uint64_t);
  id v31;
  char v32;
  uint64_t v33;
  id v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD *, uint64_t);
  unsigned int v39;
  void (*v40)(_QWORD *, uint64_t, uint64_t);
  uint64_t v41;
  char v42;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569465D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NetworkDescriptor();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v41 = (uint64_t)&v37 - v10;
  v11 = sub_23A19B35C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v1 + 16);
  *v14 = v15;
  v16 = *(void (**)(_QWORD))(v12 + 104);
  v39 = *MEMORY[0x24BEE5610];
  v40 = (void (*)(_QWORD *, uint64_t, uint64_t))v16;
  v16(v14);
  v17 = v15;
  v18 = sub_23A19B374();
  v19 = *(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8);
  result = v19(v14, v11);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  v21 = v1 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferDescriptor;
  swift_beginAccess();
  sub_23A13AC74(v21, (uint64_t)v4, &qword_2569465D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_23A13ACB8((uint64_t)v4, &qword_2569465D0);
  v38 = v19;
  v22 = v41;
  sub_23A13AB54((uint64_t)v4, v41, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  sub_23A13ABDC(v22, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoMultiplexChannelHost(0);
  swift_allocObject();
  v23 = v17;
  v24 = sub_23A199CA8(0xD000000000000012, 0x800000023A1A0790, (uint64_t)v9, v17);

  v25 = OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost) = v24;
  swift_release();
  v26 = *(_QWORD *)(v1 + v25);
  if (v26)
  {
    v27 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    v28 = *(_QWORD *)(v26 + 16);
    *(_QWORD *)(v26 + 16) = sub_23A13A7B0;
    *(_QWORD *)(v26 + 24) = v27;
    sub_23A13A1E4(v28);
  }
  sub_23A12735C();
  sub_23A1274C4();
  *v14 = v23;
  v29 = v39;
  v30 = v40;
  v40(v14, v39, v11);
  v31 = v23;
  v32 = sub_23A19B374();
  result = v38(v14, v11);
  if ((v32 & 1) == 0)
    goto LABEL_17;
  if (*(_QWORD *)(v1 + v25))
  {
    v33 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_23A134A48((uint64_t)sub_23A13A7D8, v33, 0, 0, (uint64_t)&unk_250B241A0, (uint64_t)sub_23A13A7E4, (uint64_t)&block_descriptor_95, (void (*)(uint64_t, uint64_t))sub_23A13B0A4);
    swift_release();
    swift_release();
  }
  sub_23A12D098();
  *v14 = v31;
  v30(v14, v29, v11);
  v34 = v31;
  v35 = sub_23A19B374();
  result = v38(v14, v11);
  if ((v35 & 1) == 0)
    goto LABEL_18;
  if (*(_QWORD *)(v1 + v25))
  {
    v36 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_23A134A48((uint64_t)sub_23A13A7D0, v36, 0, 0, (uint64_t)&unk_250B24268, (uint64_t)sub_23A13AA04, (uint64_t)&block_descriptor_110, (void (*)(uint64_t, uint64_t))sub_23A13B0A4);
    swift_release();
    swift_release();
  }
  v42 = 6;
  sub_23A125B90(&v42);
  if (*(_QWORD *)(v1 + v25))
  {
    swift_retain();
    sub_23A192638();
    swift_release();
  }
  return sub_23A13AC20(v22, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
}

Swift::Void __swiftcall TransferHost.setTransferFiles(_:)(Swift::OpaquePointer a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Swift::OpaquePointer *v13;
  void *v14;
  _QWORD v15[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_23A19B2D8();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A19B2F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = v2[2];
  v13 = (Swift::OpaquePointer *)swift_allocObject();
  v13[2]._rawValue = a1._rawValue;
  v13[3]._rawValue = v2;
  aBlock[4] = sub_23A131EE0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_6;
  v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23A19B2E4();
  v15[1] = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, v5, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
}

void sub_23A12BD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(unint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, char *, uint64_t);
  void (*v102)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v103;
  char v104;
  char v105;
  char isUniquelyReferenced_nonNull_native;
  char *v107;
  int v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  _BOOL8 v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  _QWORD *v116;
  uint64_t v117;
  BOOL v118;
  uint64_t v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  void (*v129)(char *, uint64_t);
  char *v130;
  unint64_t v131;
  void (*v132)(char *, uint64_t);
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  _QWORD *v153;
  char *v154;
  _QWORD *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t *v162;
  uint64_t v163;
  unsigned int (*v164)(uint64_t, uint64_t, uint64_t);
  void (*v165)(char *, uint64_t, uint64_t);
  void (*v166)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  _QWORD *v168;

  v146 = a2;
  v3 = sub_23A19AD2C();
  v159 = *(_QWORD *)(v3 - 8);
  v160 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256944990);
  v6 = MEMORY[0x24BDAC7A8](v156);
  v155 = (uint64_t *)((char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v6);
  v162 = (uint64_t *)((char *)&v136 - v9);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v154 = (char *)&v136 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v153 = (uint64_t *)((char *)&v136 - v12);
  v13 = sub_23A19AE28();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23A19AC0C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v147 = (char *)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v151 = (char *)&v136 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v152 = (char *)&v136 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v140 = (char *)&v136 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v141 = (char *)&v136 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v142 = (char *)&v136 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v144 = (char *)&v136 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v136 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v157 = (char *)&v136 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v40 = MEMORY[0x24BDAC7A8](v39);
  MEMORY[0x24BDAC7A8](v40);
  v45 = (char *)&v136 - v44;
  v46 = *(_QWORD *)(a1 + 16);
  if (!v46)
    return;
  v136 = v43;
  v137 = (char *)v42;
  v138 = v16;
  v139 = v14;
  v148 = v41;
  v143 = v13;
  v47 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v164 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 72);
  v165 = v48;
  v145 = a1;
  swift_bridgeObjectRetain();
  v163 = v47;
  v49 = v46;
  v161 = v5;
  v50 = (uint64_t)v5;
  v51 = v144;
  v158 = v18;
  while (1)
  {
    v165(v45, v47, v17);
    v166 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v166(v45, 0, 1, v17);
    v52 = *(char **)(v18 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v45, 1, v17) == 1)
      break;
    v53 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v53(v51, v45, v17);
    if ((sub_23A19ABB8() & 1) == 0)
    {
      v164 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v52;
      swift_bridgeObjectRelease();
      if (qword_2569443B8 != -1)
        swift_once();
      v61 = v143;
      v62 = __swift_project_value_buffer(v143, (uint64_t)qword_25694EBA0);
      v63 = v139;
      v64 = v138;
      (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v138, v62, v61);
      v65 = v142;
      v66 = v144;
      v165(v142, (uint64_t)v144, v17);
      swift_retain_n();
      v67 = sub_23A19AE10();
      v68 = sub_23A19B6A4();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = swift_slowAlloc();
        v163 = swift_slowAlloc();
        v168 = (_QWORD *)v163;
        *(_DWORD *)v69 = 136315394;
        v70 = (uint64_t)v137;
        v165(v137, (uint64_t)v65, v17);
        v166((char *)v70, 0, 1, v17);
        v71 = v70;
        v72 = v136;
        sub_23A13AC74(v71, v136, &qword_256945140);
        if (v164(v72, 1, v17) == 1)
        {
          v73 = 0xE300000000000000;
          v74 = 7104878;
          v75 = v158;
        }
        else
        {
          v130 = v141;
          v53(v141, (char *)v72, v17);
          v165(v140, (uint64_t)v130, v17);
          v74 = sub_23A19B518();
          v73 = v131;
          v75 = v158;
          (*(void (**)(char *, uint64_t))(v158 + 8))(v130, v17);
        }
        sub_23A13ACB8((uint64_t)v137, &qword_256945140);
        v167 = sub_23A14071C(v74, v73, (uint64_t *)&v168);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        v132 = *(void (**)(char *, uint64_t))(v75 + 8);
        v132(v142, v17);
        *(_WORD *)(v69 + 12) = 2080;
        LOBYTE(v167) = *(_BYTE *)(v146 + 48);
        v133 = TransferHost.State.description.getter();
        v167 = sub_23A14071C(v133, v134, (uint64_t *)&v168);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v67, v68, "[SetTransferFiles] Ignoring, non-file-url found url=%s, state=%s", (uint8_t *)v69, 0x16u);
        v135 = v163;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v135, -1, -1);
        MEMORY[0x23B842FA4](v69, -1, -1);

        (*(void (**)(char *, uint64_t))(v139 + 8))(v138, v143);
        v132(v144, v17);
      }
      else
      {
        swift_release_n();

        v129 = *(void (**)(char *, uint64_t))(v158 + 8);
        v129(v65, v17);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v61);
        v129(v66, v17);
      }
      return;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v51, v17);
    v47 += (uint64_t)v164;
    --v49;
    v50 = (uint64_t)v161;
    if (!v49)
    {
      v166(v45, 1, 1, v17);
      break;
    }
  }
  swift_bridgeObjectRelease();
  v144 = (char *)OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer;
  if (*(_QWORD *)(*(_QWORD *)(v146 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer) + 16))
  {
    if (qword_2569443B8 != -1)
      swift_once();
    __swift_project_value_buffer(v143, (uint64_t)qword_25694EBA0);
    v54 = v146;
    swift_retain_n();
    v55 = sub_23A19AE10();
    v56 = sub_23A19B6A4();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      v142 = (char *)swift_slowAlloc();
      v168 = v142;
      *(_DWORD *)v57 = 136315138;
      v141 = (char *)(v57 + 4);
      LOBYTE(v167) = *(_BYTE *)(v54 + 48);
      v58 = TransferHost.State.description.getter();
      v167 = sub_23A14071C(v58, v59, (uint64_t *)&v168);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v55, v56, "[SetTransferFiles] Overriding fileURLs, state=%s", v57, 0xCu);
      v60 = v142;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v60, -1, -1);
      MEMORY[0x23B842FA4](v57, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v50 = (uint64_t)v161;
  }
  swift_bridgeObjectRetain();
  v76 = 0;
  v77 = (_QWORD *)MEMORY[0x24BEE4B00];
  v78 = (uint64_t)v157;
  v79 = (char *)v163;
  v149 = v46;
  v150 = v36;
  while (1)
  {
    v165((char *)v78, (uint64_t)v79, v17);
    v166((char *)v78, 0, 1, v17);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v78, 1, v17) == 1)
      break;
    v163 = (uint64_t)v79;
    v86 = *(void (**)(char *, uint64_t, uint64_t))(v158 + 32);
    v87 = v50;
    v88 = v52;
    v89 = v152;
    v86(v152, v78, v17);
    v90 = v156;
    v91 = &v154[*(int *)(v156 + 48)];
    v86(v91, (uint64_t)v89, v17);
    v92 = v153;
    v93 = (char *)v153 + *(int *)(v90 + 48);
    *v153 = v76;
    v86(v93, (uint64_t)v91, v17);
    v94 = (uint64_t)v92;
    v95 = v162;
    sub_23A13A980(v94, (uint64_t)v162, (uint64_t *)&unk_256944990);
    sub_23A19AD20();
    v96 = *(int *)(v90 + 48);
    v97 = (uint64_t)v155 + v96;
    v98 = (char *)v95 + v96;
    v99 = *v95;
    v100 = (uint64_t)v150;
    v101 = (void (*)(uint64_t, char *, uint64_t))v165;
    v102 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v166;
    v52 = v88;
    *v155 = v99;
    v101(v97, v98, v17);
    v86((char *)v100, v97, v17);
    v102(v100, 0, 1, v17);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v88)(v100, 1, v17) == 1)
    {
      sub_23A13ACB8(v100, &qword_256945140);
      swift_bridgeObjectRetain();
      v103 = sub_23A1618F0(v87);
      v105 = v104;
      swift_bridgeObjectRelease();
      if ((v105 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v168 = v77;
        v81 = v160;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23A19924C();
          v77 = v168;
        }
        v82 = *(void (**)(unint64_t, uint64_t))(v159 + 8);
        v82(v77[6] + *(_QWORD *)(v159 + 72) * v103, v81);
        v77 = v168;
        v107 = v147;
        v86(v147, v168[7] + v103 * (_QWORD)v164, v17);
        sub_23A139B44(v103, (uint64_t)v77);
        swift_bridgeObjectRelease();
        v80 = v148;
        v86((char *)v148, (uint64_t)v107, v17);
        v166((char *)v80, 0, 1, v17);
      }
      else
      {
        v80 = v148;
        v166((char *)v148, 1, 1, v17);
        v81 = v160;
        v82 = *(void (**)(unint64_t, uint64_t))(v159 + 8);
      }
      v83 = (uint64_t)v161;
      v82((unint64_t)v161, v81);
      v50 = v83;
      sub_23A13ACB8(v80, &qword_256945140);
      v78 = (uint64_t)v157;
      v84 = v149;
      goto LABEL_22;
    }
    v86(v151, v100, v17);
    v108 = swift_isUniquelyReferenced_nonNull_native();
    v168 = v77;
    v110 = sub_23A1618F0(v87);
    v111 = v77[2];
    v112 = (v109 & 1) == 0;
    v113 = v111 + v112;
    if (__OFADD__(v111, v112))
    {
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    v97 = v109;
    if (v77[3] >= v113)
    {
      v84 = v149;
      if ((v108 & 1) == 0)
        sub_23A19924C();
      v50 = (uint64_t)v161;
      v116 = v168;
      if ((v97 & 1) == 0)
        goto LABEL_33;
    }
    else
    {
      sub_23A198228(v113, v108);
      v50 = (uint64_t)v161;
      v114 = sub_23A1618F0((uint64_t)v161);
      v84 = v149;
      if ((v97 & 1) != (v115 & 1))
      {
        sub_23A19B920();
        __break(1u);
        return;
      }
      v110 = v114;
      v116 = v168;
      if ((v97 & 1) == 0)
      {
LABEL_33:
        v116[(v110 >> 6) + 8] |= 1 << v110;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v159 + 16))(v116[6] + *(_QWORD *)(v159 + 72) * v110, v50, v160);
        v86((char *)(v116[7] + v110 * (_QWORD)v164), (uint64_t)v151, v17);
        v117 = v116[2];
        v118 = __OFADD__(v117, 1);
        v119 = v117 + 1;
        if (v118)
          goto LABEL_50;
        v116[2] = v119;
        goto LABEL_39;
      }
    }
    (*(void (**)(unint64_t, char *, uint64_t))(v158 + 40))(v116[7] + v110 * (_QWORD)v164, v151, v17);
LABEL_39:
    v77 = v168;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v50, v160);
    v78 = (uint64_t)v157;
LABEL_22:
    v85 = v163;
    ++v76;
    sub_23A13ACB8((uint64_t)v162, (uint64_t *)&unk_256944990);
    v79 = (char *)v164 + v85;
    if (v84 == v76)
    {
      v166((char *)v78, 1, 1, v17);
      break;
    }
  }
  sub_23A13ACB8(v78, &qword_256945140);
  swift_bridgeObjectRelease();
  v52 = (char *)v146;
  *(_QWORD *)&v144[v146] = v77;
  swift_bridgeObjectRelease();
  v97 = v143;
  if (qword_2569443B8 == -1)
    goto LABEL_42;
LABEL_51:
  swift_once();
LABEL_42:
  __swift_project_value_buffer(v97, (uint64_t)qword_25694EBA0);
  swift_retain_n();
  v120 = sub_23A19AE10();
  v121 = sub_23A19B6BC();
  if (os_log_type_enabled(v120, v121))
  {
    v122 = swift_slowAlloc();
    v123 = swift_slowAlloc();
    v168 = (_QWORD *)v123;
    *(_DWORD *)v122 = 136315394;
    sub_23A131E34((unint64_t *)&unk_2569449A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    v124 = sub_23A19B488();
    v126 = v125;
    swift_bridgeObjectRelease();
    v167 = sub_23A14071C(v124, v126, (uint64_t *)&v168);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v122 + 12) = 2080;
    LOBYTE(v167) = v52[48];
    v127 = TransferHost.State.description.getter();
    v167 = sub_23A14071C(v127, v128, (uint64_t *)&v168);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v120, v121, "[SetTransferFiles] Ready to serve files=%s, state=%s", (uint8_t *)v122, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v123, -1, -1);
    MEMORY[0x23B842FA4](v122, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23A12CD84(char *a1, uint64_t a2, void (*a3)(char *))
{
  char v4;
  uint64_t result;
  char v6;

  v4 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = v4;
    a3(&v6);
    return swift_release();
  }
  return result;
}

void sub_23A12CDF0(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  void *v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = *(void **)(v2 + 16);
  *v7 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost))
    return;
  v11 = *(unsigned __int8 *)(v2 + 48);
  if (v11 <= 9)
  {
    if ((v8 & 1) != 0)
    {
      if (v11 == 6)
      {
        LOBYTE(v20) = 2;
        sub_23A12762C((unsigned __int8 *)&v20, 0xD00000000000001ELL, 0x800000023A1A07F0);
      }
    }
    else
    {
      LOBYTE(v20) = 7;
      sub_23A125B90((char *)&v20);
    }
    return;
  }
  if (qword_2569443B8 != -1)
    goto LABEL_14;
LABEL_8:
  v12 = sub_23A19AE28();
  __swift_project_value_buffer(v12, (uint64_t)qword_25694EBA0);
  swift_retain_n();
  v13 = sub_23A19AE10();
  v14 = sub_23A19B6BC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v20 = v16;
    *(_DWORD *)v15 = 136315138;
    LOBYTE(v19) = *(_BYTE *)(v2 + 48);
    v17 = TransferHost.State.description.getter();
    v19 = sub_23A14071C(v17, v18, &v20);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v13, v14, "Stop detected, ignoring file-transfer-host state change, state=%s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v16, -1, -1);
    MEMORY[0x23B842FA4](v15, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23A12D098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_23A19B35C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 16);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost))
    {
      v8 = swift_allocObject();
      swift_weakInit();
      v9 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_23A134A48((uint64_t)sub_23A13AACC, v8, (uint64_t)sub_23A13AAD4, v9, (uint64_t)&unk_250B24330, (uint64_t)sub_23A13AAE4, (uint64_t)&block_descriptor_127, (void (*)(uint64_t, uint64_t))sub_23A13B0A4);
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23A12D200(uint64_t a1, unint64_t a2, id a3, char a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  if ((a4 & 1) != 0)
  {
    v14 = a3;
    if (qword_2569443B8 != -1)
      swift_once();
    v15 = sub_23A19AE28();
    __swift_project_value_buffer(v15, (uint64_t)qword_25694EBA0);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23A13AC5C(a3, 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23A13AC5C(a3, 1);
    v16 = sub_23A19AE10();
    v17 = sub_23A19B6A4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v25 = v19;
      *(_DWORD *)v18 = 136315650;
      swift_bridgeObjectRetain();
      sub_23A14071C(a1, a2, &v25);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      v20 = a3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
      v21 = sub_23A19B518();
      sub_23A14071C(v21, v22, &v25);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A13AC68(a3, 1);
      sub_23A13AC68(a3, 1);
      *(_WORD *)(v18 + 22) = 2080;
      v23 = TransferHost.State.description.getter();
      sub_23A14071C(v23, v24, &v25);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v16, v17, "%s Failed flushing HTTP response with error=%s, state=%s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v19, -1, -1);
      MEMORY[0x23B842FA4](v18, -1, -1);

      sub_23A13AC68(a3, 1);
    }
    else
    {
      sub_23A13AC68(a3, 1);
      swift_bridgeObjectRelease_n();
      sub_23A13AC68(a3, 1);
      sub_23A13AC68(a3, 1);

      swift_release_n();
    }
  }
  else
  {
    if (qword_2569443B8 != -1)
      swift_once();
    v6 = sub_23A19AE28();
    __swift_project_value_buffer(v6, (uint64_t)qword_25694EBA0);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v7 = sub_23A19AE10();
    v8 = sub_23A19B6BC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v25 = v10;
      *(_DWORD *)v9 = 136315394;
      swift_bridgeObjectRetain();
      sub_23A14071C(a1, a2, &v25);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v9 + 12) = 2080;
      v11 = TransferHost.State.description.getter();
      sub_23A14071C(v11, v12, &v25);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v7, v8, "%s Finished flushing HTTP response, state=%s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v10, -1, -1);
      MEMORY[0x23B842FA4](v9, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_23A12D6AC(unsigned __int8 *a1, void (*a2)(_BYTE *), uint64_t a3)
{
  int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  __int128 v31;
  _BYTE v32[24];
  char v33;

  v5 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    if (*(unsigned __int8 *)(result + 48) >= 2u)
    {
      if (qword_2569443B8 != -1)
        swift_once();
      v15 = sub_23A19AE28();
      __swift_project_value_buffer(v15, (uint64_t)qword_25694EBA0);
      v16 = sub_23A19AE10();
      v17 = sub_23A19B6BC();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v18 = 16777472;
        v32[0] = v5;
        sub_23A19B728();
        _os_log_impl(&dword_23A123000, v16, v17, "[Lease] Received lease, version=%hhu", v18, 5u);
        MEMORY[0x23B842FA4](v18, -1, -1);
      }

      if (v5 == 1)
      {
        v19 = *(_QWORD *)(v7 + 80);
        *(_QWORD *)(v7 + 80) = a2;
        *(_QWORD *)(v7 + 88) = a3;
        swift_retain();
        sub_23A13A1E4(v19);
        if (*(_BYTE *)(v7 + 49) != 12)
        {
          swift_retain_n();
          v20 = sub_23A19AE10();
          v21 = sub_23A19B6BC();
          if (os_log_type_enabled(v20, v21))
          {
            v22 = swift_slowAlloc();
            v23 = swift_slowAlloc();
            *(_QWORD *)v32 = v23;
            *(_DWORD *)v22 = 136315394;
            v24 = TransferHost.State.description.getter();
            sub_23A14071C(v24, v25, (uint64_t *)v32);
            sub_23A19B728();
            swift_bridgeObjectRelease();
            *(_WORD *)(v22 + 12) = 2080;
            v26 = TransferHost.State.description.getter();
            sub_23A14071C(v26, v27, (uint64_t *)v32);
            sub_23A19B728();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23A123000, v20, v21, "[Lease] Client invoked stop in state=%s, satisfying now, state=%s", (uint8_t *)v22, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x23B842FA4](v23, -1, -1);
            MEMORY[0x23B842FA4](v22, -1, -1);

          }
          else
          {

            swift_release_n();
          }
          v32[0] = 3;
          sub_23A12762C(v32, 0xD000000000000014, 0x800000023A1A0510);
        }
      }
      else
      {
        v28 = sub_23A19AE10();
        v29 = sub_23A19B6BC();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v30 = 16777472;
          v32[0] = 1;
          sub_23A19B728();
          _os_log_impl(&dword_23A123000, v28, v29, "[Lease] Version mismatch detected, expected-version=%hhu", v30, 5u);
          MEMORY[0x23B842FA4](v30, -1, -1);
        }

        *(_QWORD *)v32 = 0;
        *(_QWORD *)&v32[8] = 0xE000000000000000;
        sub_23A19B794();
        sub_23A19B590();
        sub_23A19B8FC();
        sub_23A19B590();
        swift_bridgeObjectRelease();
        sub_23A19B590();
        sub_23A19B8FC();
        sub_23A19B590();
        swift_bridgeObjectRelease();
        v31 = *(_OWORD *)v32;
        *(_QWORD *)v32 = 200;
        *(_OWORD *)&v32[8] = v31;
        v33 = 0;
        a2(v32);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (qword_2569443B8 != -1)
        swift_once();
      v8 = sub_23A19AE28();
      __swift_project_value_buffer(v8, (uint64_t)qword_25694EBA0);
      swift_retain_n();
      v9 = sub_23A19AE10();
      v10 = sub_23A19B6BC();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)v32 = v12;
        *(_DWORD *)v11 = 136315138;
        v13 = TransferHost.State.description.getter();
        sub_23A14071C(v13, v14, (uint64_t *)v32);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v9, v10, "[Lease] Unexpected request received, state=%s", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v12, -1, -1);
        MEMORY[0x23B842FA4](v11, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      *(_OWORD *)v32 = xmmword_23A19C700;
      *(_QWORD *)&v32[16] = 2;
      v33 = 1;
      a2(v32);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23A12DCDC(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t result;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  char v10;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    sub_23A12D200(0x5D657361654C5BLL, 0xE700000000000000, a3, a4 & 1);
    v8 = *(void (**)(uint64_t))(v7 + 96);
    if (v8)
    {
      v9 = swift_retain();
      v8(v9);
      swift_release();
      return sub_23A13A1E4((uint64_t)v8);
    }
    else
    {
      v10 = 2;
      sub_23A19B794();
      swift_bridgeObjectRelease();
      sub_23A13AC5C(a3, a4 & 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256944AB8);
      sub_23A19B518();
      sub_23A19B590();
      swift_bridgeObjectRelease();
      sub_23A139E18(&v10);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return result;
}

void sub_23A12DE3C(uint64_t a1, void (*a2)(__int128 *))
{
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  __int16 v20;
  uint64_t v21;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v4 = Strong;
    if (*(unsigned __int8 *)(Strong + 48) > 9u)
    {
      if (qword_2569443B8 != -1)
        swift_once();
      v12 = sub_23A19AE28();
      __swift_project_value_buffer(v12, (uint64_t)qword_25694EBA0);
      swift_retain_n();
      v13 = sub_23A19AE10();
      v14 = sub_23A19B6BC();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v16 = swift_slowAlloc();
        *(_QWORD *)&v19 = v16;
        *(_DWORD *)v15 = 136315138;
        LOBYTE(v21) = *(_BYTE *)(v4 + 48);
        v17 = TransferHost.State.description.getter();
        v21 = sub_23A14071C(v17, v18, (uint64_t *)&v19);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v13, v14, "[Close Request] Ignoring request, state=%s", v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v16, -1, -1);
        MEMORY[0x23B842FA4](v15, -1, -1);
        swift_release();

      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      if (qword_2569443B8 != -1)
        swift_once();
      v5 = sub_23A19AE28();
      __swift_project_value_buffer(v5, (uint64_t)qword_25694EBA0);
      swift_retain_n();
      v6 = sub_23A19AE10();
      v7 = sub_23A19B6BC();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        v9 = swift_slowAlloc();
        *(_QWORD *)&v19 = v9;
        *(_DWORD *)v8 = 136315138;
        LOBYTE(v21) = *(_BYTE *)(v4 + 48);
        v10 = TransferHost.State.description.getter();
        v21 = sub_23A14071C(v10, v11, (uint64_t *)&v19);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v6, v7, "[Close Request] Remote TransferClient requested close, state=%s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v9, -1, -1);
        MEMORY[0x23B842FA4](v8, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v19 = xmmword_23A19C710;
      v20 = 0;
      a2(&v19);
      swift_release();
    }
  }
}

uint64_t sub_23A12E1B0(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t result;
  unsigned __int8 v7;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A12D200(0x522065736F6C435BLL, 0xEF5D747365757165, a3, a4 & 1);
    v7 = 4;
    sub_23A12E264(&v7, 0xD000000000000030, 0x800000023A1A0810);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A12E264(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  int v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];

  v33 = a2;
  v34 = a3;
  v5 = sub_23A19B2D8();
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A19B2F0();
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23A19B32C();
  v11 = *(_QWORD *)(v35 - 8);
  v12 = MEMORY[0x24BDAC7A8](v35);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - v15;
  v17 = sub_23A19B35C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t *)((char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = *a1;
  v21 = *(void **)(v3 + 16);
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BEE5610], v17);
  v32 = v21;
  LOBYTE(v21) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) != 0)
  {
    sub_23A19B320();
    MEMORY[0x23B842254](v14, *(double *)(v3 + 24));
    v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v23 = v35;
    v30(v14, v35);
    v24 = swift_allocObject();
    swift_weakInit();
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v24;
    *(_BYTE *)(v25 + 24) = v31;
    v26 = v34;
    *(_QWORD *)(v25 + 32) = v33;
    *(_QWORD *)(v25 + 40) = v26;
    aBlock[4] = sub_23A13A170;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A126ED0;
    aBlock[3] = &block_descriptor_22;
    v27 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23A19B2E4();
    v40 = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
    sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
    v28 = v39;
    sub_23A19B764();
    MEMORY[0x23B8425C0](v16, v10, v7, v27);
    _Block_release(v27);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v28);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v37);
    v30(v16, v23);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23A12E5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  __int128 v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint8_t *v98;
  void (*v99)(_QWORD *);
  uint64_t v100;
  int64_t v101;
  void (*v102)(_QWORD *);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  __int128 v108;
  int64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  int64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD v126[2];
  __int16 v127;
  unint64_t v128;

  v103 = a3;
  v4 = sub_23A19AC0C();
  v112 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v100 - v8;
  v10 = sub_23A19AD2C();
  v121 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v118 = (uint64_t)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v120 = (char *)&v100 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A38);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v119 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v100 - v17;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v20 = result;
  if (*(unsigned __int8 *)(result + 48) < 7u)
  {
    if (qword_2569443B8 != -1)
LABEL_80:
      swift_once();
    v21 = sub_23A19AE28();
    __swift_project_value_buffer(v21, (uint64_t)qword_25694EBA0);
    swift_retain_n();
    v22 = sub_23A19AE10();
    v23 = sub_23A19B6A4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = a2;
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v122 = v26;
      *(_DWORD *)v25 = 136315138;
      LOBYTE(v124) = *(_BYTE *)(v20 + 48);
      v27 = TransferHost.State.description.getter();
      v124 = sub_23A14071C(v27, v28, (uint64_t *)&v122);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v22, v23, "[FileList] Unexpected request received, state=%s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v26, -1, -1);
      v29 = v25;
      a2 = v24;
      MEMORY[0x23B842FA4](v29, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v89 = xmmword_23A19C700;
    goto LABEL_77;
  }
  sub_23A12F4C4();
  v30 = *(_QWORD *)(v20 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer);
  if (!*(_QWORD *)(v30 + 16))
  {
    if (qword_2569443B8 != -1)
      swift_once();
    v90 = sub_23A19AE28();
    __swift_project_value_buffer(v90, (uint64_t)qword_25694EBA0);
    swift_retain_n();
    v91 = sub_23A19AE10();
    v92 = sub_23A19B6A4();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = a2;
      v94 = (uint8_t *)swift_slowAlloc();
      v95 = swift_slowAlloc();
      *(_QWORD *)&v122 = v95;
      *(_DWORD *)v94 = 136315138;
      LOBYTE(v124) = *(_BYTE *)(v20 + 48);
      v96 = TransferHost.State.description.getter();
      v124 = sub_23A14071C(v96, v97, (uint64_t *)&v122);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v91, v92, "[FileList] No files to transfer, state=%s", v94, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v95, -1, -1);
      v98 = v94;
      a2 = v93;
      MEMORY[0x23B842FA4](v98, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v89 = xmmword_23A19C720;
LABEL_77:
    v122 = v89;
    LOWORD(v123) = 258;
    ((void (*)(__int128 *))a2)(&v122);
    return swift_release();
  }
  v102 = (void (*)(_QWORD *))a2;
  v128 = MEMORY[0x24BEE4B00];
  v31 = *(_QWORD *)(v30 + 64);
  v104 = v30 + 64;
  v32 = 1 << *(_BYTE *)(v30 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v117 = v33 & v31;
  v110 = (id)*MEMORY[0x24BDD0D08];
  v106 = &v125;
  v109 = (unint64_t)(v32 + 63) >> 6;
  v101 = v109 - 1;
  v111 = v30;
  result = swift_bridgeObjectRetain();
  v115 = 0;
  *(_QWORD *)&v34 = 136315394;
  v108 = v34;
  v105 = MEMORY[0x24BEE4AD8] + 8;
  a2 = v112;
  v113 = v7;
  v116 = v18;
  v107 = v10;
  v114 = v4;
  while (1)
  {
    v41 = (uint64_t)v119;
    if (v117)
    {
      v42 = __clz(__rbit64(v117));
      v117 &= v117 - 1;
      v43 = v42 | (v115 << 6);
LABEL_16:
      v44 = v111;
      (*(void (**)(char *, unint64_t, uint64_t))(v121 + 16))(v119, *(_QWORD *)(v111 + 48) + *(_QWORD *)(v121 + 72) * v43, v10);
      v45 = *(_QWORD *)(v44 + 56) + *(_QWORD *)(a2 + 72) * v43;
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A40);
      v47 = v45;
      v41 = (uint64_t)v119;
      (*(void (**)(char *, unint64_t, uint64_t))(a2 + 16))(&v119[*(int *)(v46 + 48)], v47, v4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v41, 0, 1, v46);
      v18 = v116;
      goto LABEL_35;
    }
    v48 = v115 + 1;
    if (__OFADD__(v115, 1))
    {
      __break(1u);
      goto LABEL_80;
    }
    if (v48 < v109)
    {
      v49 = *(_QWORD *)(v104 + 8 * v48);
      if (v49)
        goto LABEL_20;
      v50 = v115 + 2;
      ++v115;
      if (v48 + 1 < v109)
      {
        v49 = *(_QWORD *)(v104 + 8 * v50);
        if (v49)
          goto LABEL_23;
        v115 = v48 + 1;
        if (v48 + 2 < v109)
        {
          v49 = *(_QWORD *)(v104 + 8 * (v48 + 2));
          if (v49)
          {
            v48 += 2;
            goto LABEL_20;
          }
          v50 = v48 + 3;
          v115 = v48 + 2;
          if (v48 + 3 < v109)
            break;
        }
      }
    }
LABEL_34:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A40);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v41, 1, 1, v51);
    v117 = 0;
LABEL_35:
    sub_23A13A980(v41, (uint64_t)v18, &qword_256944A38);
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v18, 1, v52) == 1)
    {
      swift_release();
      if (qword_2569443B8 != -1)
        swift_once();
      v79 = sub_23A19AE28();
      __swift_project_value_buffer(v79, (uint64_t)qword_25694EBA0);
      swift_retain_n();
      v80 = sub_23A19AE10();
      v81 = sub_23A19B6BC();
      if (os_log_type_enabled(v80, v81))
      {
        v82 = swift_slowAlloc();
        v83 = swift_slowAlloc();
        *(_QWORD *)&v122 = v83;
        *(_DWORD *)v82 = v108;
        swift_beginAccess();
        sub_23A131E34((unint64_t *)&unk_2569449A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        swift_bridgeObjectRetain();
        v84 = sub_23A19B488();
        v86 = v85;
        swift_bridgeObjectRelease();
        v126[0] = sub_23A14071C(v84, v86, (uint64_t *)&v122);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        *(_WORD *)(v82 + 12) = 2080;
        LOBYTE(v126[0]) = *(_BYTE *)(v20 + 48);
        v87 = TransferHost.State.description.getter();
        v126[0] = sub_23A14071C(v87, v88, (uint64_t *)&v122);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v80, v81, "[FileList] Received request, sending response=%s state=%s", (uint8_t *)v82, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v83, -1, -1);
        MEMORY[0x23B842FA4](v82, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v99 = v102;
      LOBYTE(v122) = 8;
      sub_23A125B90((char *)&v122);
      swift_beginAccess();
      v126[0] = 200;
      v126[1] = v128;
      v127 = 0;
      swift_bridgeObjectRetain();
      v99(v126);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    v53 = &v18[*(int *)(v52 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v120, v18, v10);
    (*(void (**)(char *, char *, uint64_t))(a2 + 32))(v9, v53, v4);
    v54 = sub_23A1615F0();
    if (v54)
    {
      v55 = v54;
      if (*(_QWORD *)(v54 + 16))
      {
        v56 = v110;
        v57 = sub_23A16195C((uint64_t)v56);
        if ((v58 & 1) != 0)
        {
          sub_23A13A9C4(*(_QWORD *)(v55 + 56) + 32 * v57, (uint64_t)&v122);
        }
        else
        {
          v122 = 0u;
          v123 = 0u;
        }

      }
      else
      {
        v122 = 0u;
        v123 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v123 + 1))
      {
        if (swift_dynamicCast())
          goto LABEL_53;
        goto LABEL_48;
      }
    }
    else
    {
      v122 = 0u;
      v123 = 0u;
    }
    sub_23A13ACB8((uint64_t)&v122, &qword_256944A48);
LABEL_48:
    if (qword_2569443B8 != -1)
      swift_once();
    v59 = sub_23A19AE28();
    __swift_project_value_buffer(v59, (uint64_t)qword_25694EBA0);
    (*(void (**)(char *, char *, uint64_t))(a2 + 16))(v7, v9, v4);
    swift_retain_n();
    v60 = sub_23A19AE10();
    v61 = sub_23A19B6A4();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = v7;
      v63 = swift_slowAlloc();
      v64 = v20;
      v65 = swift_slowAlloc();
      *(_QWORD *)&v122 = v65;
      *(_DWORD *)v63 = v108;
      sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v66 = sub_23A19B8FC();
      v124 = sub_23A14071C(v66, v67, (uint64_t *)&v122);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v62, v114);
      *(_WORD *)(v63 + 12) = 2080;
      LOBYTE(v124) = *(_BYTE *)(v64 + 48);
      v68 = TransferHost.State.description.getter();
      v124 = sub_23A14071C(v68, v69, (uint64_t *)&v122);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v60, v61, "[FileList] Could not read file-size of file=%s, state=%s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      v70 = v65;
      v20 = v64;
      v10 = v107;
      a2 = v112;
      v4 = v114;
      MEMORY[0x23B842FA4](v70, -1, -1);
      MEMORY[0x23B842FA4](v63, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(a2 + 8))(v7, v4);

      swift_release_n();
    }
LABEL_53:
    (*(void (**)(uint64_t, char *, uint64_t))(v121 + 16))(v118, v120, v10);
    v71 = sub_23A19ABC4();
    v73 = v72;
    v74 = sub_23A1615F0();
    if (!v74)
    {
      v122 = 0u;
      v123 = 0u;
LABEL_11:
      sub_23A13ACB8((uint64_t)&v122, &qword_256944A48);
LABEL_12:
      v35 = 0;
      goto LABEL_13;
    }
    v75 = v74;
    if (*(_QWORD *)(v74 + 16))
    {
      v76 = v110;
      v77 = sub_23A16195C((uint64_t)v76);
      if ((v78 & 1) != 0)
      {
        sub_23A13A9C4(*(_QWORD *)(v75 + 56) + 32 * v77, (uint64_t)&v122);
      }
      else
      {
        v122 = 0u;
        v123 = 0u;
      }

    }
    else
    {
      v122 = 0u;
      v123 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v123 + 1))
      goto LABEL_11;
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_12;
    v35 = v124;
LABEL_13:
    v36 = v128;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v122 = v36;
    v128 = 0x8000000000000000;
    v38 = v71;
    v39 = v118;
    sub_23A198CC4(v38, v73, v35, v118, isUniquelyReferenced_nonNull_native);
    v128 = v122;
    swift_bridgeObjectRelease();
    v40 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
    v40(v39, v10);
    (*(void (**)(char *, uint64_t))(a2 + 8))(v9, v4);
    result = ((uint64_t (*)(char *, uint64_t))v40)(v120, v10);
    v7 = v113;
    v18 = v116;
  }
  v49 = *(_QWORD *)(v104 + 8 * v50);
  if (v49)
  {
LABEL_23:
    v48 = v50;
LABEL_20:
    v117 = (v49 - 1) & v49;
    v43 = __clz(__rbit64(v49)) + (v48 << 6);
    v115 = v48;
    goto LABEL_16;
  }
  while (1)
  {
    v48 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v48 >= v109)
    {
      v115 = v101;
      goto LABEL_34;
    }
    v49 = *(_QWORD *)(v104 + 8 * v48);
    ++v50;
    if (v49)
      goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A12F4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_23A19B35C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + 16);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  if (!*(_QWORD *)(v1 + 72))
    return result;
  v9 = qword_2569443B8;
  swift_retain();
  if (v9 != -1)
    goto LABEL_9;
LABEL_4:
  v10 = sub_23A19AE28();
  __swift_project_value_buffer(v10, (uint64_t)qword_25694EBA0);
  v11 = sub_23A19AE10();
  v12 = sub_23A19B6BC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_23A123000, v11, v12, "[Attestation] Closing attestation-channel-host", v13, 2u);
    MEMORY[0x23B842FA4](v13, -1, -1);
  }

  sub_23A1864D0();
  *(_QWORD *)(v1 + 72) = 0;
  swift_release();
  return swift_release();
}

uint64_t sub_23A12F654(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  NSObject *v82;
  os_log_type_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  char v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  void (*v127)(uint64_t);
  char *v128;
  uint64_t v129;
  void (*v130)(char *, char *, uint64_t);
  uint64_t v131;
  char *v132;

  v126 = a3;
  v127 = a2;
  v128 = (char *)a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A90);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v115 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v115 = (uint64_t)&v115 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v119 = (uint64_t)&v115 - v12;
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A78);
  MEMORY[0x24BDAC7A8](v124);
  v125 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FileRequest(0);
  v121 = *(_QWORD *)(v14 - 8);
  v122 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v116 = (uint64_t)&v115 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v117 = (uint64_t)&v115 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v120 = (uint64_t)&v115 - v22;
  v23 = sub_23A19AE28();
  v129 = *(_QWORD *)(v23 - 8);
  v130 = (void (*)(char *, char *, uint64_t))v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v118 = (char *)&v115 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23A19AC0C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v115 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)&v115 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v123 = (char *)&v115 - v39;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v41 = *(_QWORD *)(result + OBJC_IVAR____TtC5Cosmo12TransferHost_filesRequestedCount);
  v42 = __OFADD__(v41, 1);
  v43 = v41 + 1;
  if (v42)
  {
    __break(1u);
    goto LABEL_42;
  }
  *(_QWORD *)(result + OBJC_IVAR____TtC5Cosmo12TransferHost_filesRequestedCount) = v43;
  if (*(unsigned __int8 *)(result + 48) < 8u)
  {
    v44 = qword_2569443B8;
    v38 = (char *)result;
    swift_retain_n();
    if (v44 == -1)
    {
LABEL_5:
      v45 = (uint64_t)v130;
      v46 = __swift_project_value_buffer((uint64_t)v130, (uint64_t)qword_25694EBA0);
      v47 = v129;
      (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v26, v46, v45);
      sub_23A13ABDC((uint64_t)v128, (uint64_t)v17, type metadata accessor for FileRequest);
      swift_retain_n();
      v48 = sub_23A19AE10();
      v49 = sub_23A19B6A4();
      if (os_log_type_enabled(v48, v49))
      {
        v128 = v38;
        v50 = swift_slowAlloc();
        v123 = (char *)swift_slowAlloc();
        v132 = v123;
        *(_DWORD *)v50 = 136315650;
        sub_23A13ABDC((uint64_t)v17, (uint64_t)v9, type metadata accessor for FileRequest);
        v52 = v121;
        v51 = v122;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v9, 0, 1, v122);
        sub_23A13AC74((uint64_t)v9, (uint64_t)v6, &qword_256944A90);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v6, 1, v51) == 1)
        {
          v53 = 7104878;
          v54 = 0xE300000000000000;
        }
        else
        {
          v97 = v117;
          sub_23A13AB54((uint64_t)v6, v117, type metadata accessor for FileRequest);
          sub_23A13ABDC(v97, v116, type metadata accessor for FileRequest);
          v53 = sub_23A19B518();
          v54 = v98;
          sub_23A13AC20(v97, type metadata accessor for FileRequest);
        }
        sub_23A13ACB8((uint64_t)v9, &qword_256944A90);
        v131 = sub_23A14071C(v53, v54, (uint64_t *)&v132);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A13AC20((uint64_t)v17, type metadata accessor for FileRequest);
        *(_WORD *)(v50 + 12) = 2080;
        v99 = (uint64_t)v128;
        v100 = sub_23A130498();
        v131 = sub_23A14071C(v100, v101, (uint64_t *)&v132);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 22) = 2080;
        LOBYTE(v131) = *(_BYTE *)(v99 + 48);
        v102 = TransferHost.State.description.getter();
        v131 = sub_23A14071C(v102, v103, (uint64_t *)&v132);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v48, v49, "[Request] Unexpected request=%s, %s state=%s", (uint8_t *)v50, 0x20u);
        v104 = v123;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v104, -1, -1);
        MEMORY[0x23B842FA4](v50, -1, -1);

        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v129 + 8))(v26, v130);
      }
      else
      {
        sub_23A13AC20((uint64_t)v17, type metadata accessor for FileRequest);

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v26, v45);
      }
      v105 = (uint64_t)v125;
      *(_OWORD *)v125 = xmmword_23A19C700;
      *(_BYTE *)(v105 + 16) = 2;
      swift_storeEnumTagMultiPayload();
      v127(v105);
LABEL_39:
      swift_release_n();
      return sub_23A13ACB8(v105, &qword_256944A78);
    }
LABEL_42:
    swift_once();
    goto LABEL_5;
  }
  v55 = *(_QWORD *)(result + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer);
  if (*(_QWORD *)(v55 + 16))
  {
    v56 = result;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v57 = (uint64_t)v128;
    v58 = sub_23A1618F0((uint64_t)v128);
    if ((v59 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v30, *(_QWORD *)(v55 + 56) + *(_QWORD *)(v32 + 72) * v58, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v31);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v30, 1, 1, v31);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v60 = result;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v30, 1, 1, v31);
    v56 = v60;
    swift_retain_n();
    v57 = (uint64_t)v128;
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    sub_23A13ACB8((uint64_t)v30, &qword_256945140);
    if (qword_2569443B8 != -1)
      swift_once();
    v61 = (uint64_t)v130;
    v62 = __swift_project_value_buffer((uint64_t)v130, (uint64_t)qword_25694EBA0);
    v63 = v129;
    v64 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v118, v62, v61);
    v65 = v120;
    sub_23A13ABDC(v57, v120, type metadata accessor for FileRequest);
    v66 = v56;
    swift_retain_n();
    v67 = sub_23A19AE10();
    v68 = sub_23A19B6A4();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = swift_slowAlloc();
      v70 = swift_slowAlloc();
      v132 = (char *)v70;
      *(_DWORD *)v69 = 136315650;
      v71 = v119;
      sub_23A13ABDC(v65, v119, type metadata accessor for FileRequest);
      v73 = v121;
      v72 = v122;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v121 + 56))(v71, 0, 1, v122);
      v74 = v71;
      v75 = v115;
      sub_23A13AC74(v74, v115, &qword_256944A90);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v75, 1, v72) == 1)
      {
        v76 = 7104878;
        v77 = 0xE300000000000000;
      }
      else
      {
        v108 = v75;
        v109 = v117;
        sub_23A13AB54(v108, v117, type metadata accessor for FileRequest);
        sub_23A13ABDC(v109, v116, type metadata accessor for FileRequest);
        v76 = sub_23A19B518();
        v77 = v110;
        sub_23A13AC20(v109, type metadata accessor for FileRequest);
      }
      sub_23A13ACB8(v119, &qword_256944A90);
      v131 = sub_23A14071C(v76, v77, (uint64_t *)&v132);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A13AC20(v120, type metadata accessor for FileRequest);
      *(_WORD *)(v69 + 12) = 2080;
      v111 = sub_23A130498();
      v131 = sub_23A14071C(v111, v112, (uint64_t *)&v132);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 22) = 2080;
      LOBYTE(v131) = *(_BYTE *)(v66 + 48);
      v113 = TransferHost.State.description.getter();
      v131 = sub_23A14071C(v113, v114, (uint64_t *)&v132);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v67, v68, "[Request] Could not find URL for request=%s, %s state=%s", (uint8_t *)v69, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v70, -1, -1);
      MEMORY[0x23B842FA4](v69, -1, -1);

      (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v129 + 8))(v64, v130);
    }
    else
    {
      sub_23A13AC20(v65, type metadata accessor for FileRequest);

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v61);
    }
    v105 = (uint64_t)v125;
    *(_OWORD *)v125 = xmmword_23A19C720;
    *(_BYTE *)(v105 + 16) = 2;
    swift_storeEnumTagMultiPayload();
    v127(v105);
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v123, v30, v31);
  if (*(_BYTE *)(v56 + 48) != 9)
  {
    LOBYTE(v132) = 9;
    sub_23A125B90((char *)&v132);
  }
  v78 = *(_QWORD *)(v56 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesSentCount);
  v42 = __OFADD__(v78, 1);
  v79 = v78 + 1;
  if (v42)
  {
    __break(1u);
    goto LABEL_44;
  }
  *(_QWORD *)(v56 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesSentCount) = v79;
  if (qword_2569443B8 != -1)
LABEL_44:
    swift_once();
  __swift_project_value_buffer((uint64_t)v130, (uint64_t)qword_25694EBA0);
  v80 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  v81 = v123;
  v80(v38, v123, v31);
  v80(v35, v81, v31);
  swift_retain_n();
  v82 = sub_23A19AE10();
  v83 = sub_23A19B6BC();
  v84 = v83;
  if (os_log_type_enabled(v82, v83))
  {
    v85 = swift_slowAlloc();
    v129 = swift_slowAlloc();
    v132 = (char *)v129;
    *(_DWORD *)v85 = 136315906;
    v130 = v80;
    sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    LODWORD(v128) = v84;
    v86 = sub_23A19B8FC();
    v131 = sub_23A14071C(v86, v87, (uint64_t *)&v132);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    v88 = *(void (**)(char *, uint64_t))(v32 + 8);
    v88(v38, v31);
    *(_WORD *)(v85 + 12) = 2048;
    v89 = URL.fileSize.getter();
    if ((v90 & 1) != 0)
      v91 = 0;
    else
      v91 = v89;
    v88(v35, v31);
    v131 = v91;
    sub_23A19B728();
    *(_WORD *)(v85 + 22) = 2080;
    v92 = sub_23A130498();
    v131 = sub_23A14071C(v92, v93, (uint64_t *)&v132);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    *(_WORD *)(v85 + 32) = 2080;
    LOBYTE(v131) = *(_BYTE *)(v56 + 48);
    v94 = TransferHost.State.description.getter();
    v131 = sub_23A14071C(v94, v95, (uint64_t *)&v132);
    v80 = v130;
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v82, (os_log_type_t)v128, "[Request] Returning file=%s size=%llu, %s state=%s", (uint8_t *)v85, 0x2Au);
    v96 = v129;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v96, -1, -1);
    MEMORY[0x23B842FA4](v85, -1, -1);

  }
  else
  {
    v88 = *(void (**)(char *, uint64_t))(v32 + 8);
    v88(v35, v31);
    v88(v38, v31);

    swift_release_n();
  }
  v106 = (uint64_t)v125;
  v107 = v123;
  v80(v125, v123, v31);
  *(_DWORD *)(v106 + *(int *)(type metadata accessor for CosmoFileHttpResponse(0) + 20)) = 200;
  swift_storeEnumTagMultiPayload();
  v127(v106);
  swift_release_n();
  sub_23A13ACB8(v106, &qword_256944A78);
  return ((uint64_t (*)(char *, uint64_t))v88)(v107, v31);
}

unint64_t sub_23A130498()
{
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 0xD000000000000016;
}

uint64_t sub_23A1305A4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjectType;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  os_log_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A19AC0C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v48 - v15;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v18 = result;
    v19 = *(_QWORD *)(result + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer);
    if (!*(_QWORD *)(v19 + 16))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_8:
      swift_release();
      return sub_23A13ACB8((uint64_t)v9, &qword_256945140);
    }
    swift_bridgeObjectRetain();
    v20 = sub_23A1618F0(a1);
    if ((v21 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v11 + 72) * v20, v10);
      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v22, 1, v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      goto LABEL_8;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    if ((a4 & 1) != 0)
    {
      swift_retain_n();
      sub_23A13AC5C(a3, 1);
      if (qword_2569443B8 != -1)
        swift_once();
      v31 = sub_23A19AE28();
      __swift_project_value_buffer(v31, (uint64_t)qword_25694EBA0);
      sub_23A13AC5C(a3, 1);
      v32 = a3;
      v25 = sub_23A19AE10();
      v33 = sub_23A19B6A4();
      v34 = v33;
      if (os_log_type_enabled(v25, v33))
      {
        v35 = swift_slowAlloc();
        LODWORD(v49) = v34;
        v36 = v35;
        v50 = swift_slowAlloc();
        v51 = (uint64_t)a3;
        v52[0] = v50;
        *(_DWORD *)v36 = 136315394;
        v37 = a3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
        v48 = v25;
        v38 = sub_23A19B518();
        v51 = sub_23A14071C(v38, v39, v52);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A13AC68(a3, 1);
        sub_23A13AC68(a3, 1);
        *(_WORD *)(v36 + 12) = 2080;
        v40 = sub_23A130BA8();
        v51 = sub_23A14071C(v40, v41, v52);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        v42 = v48;
        _os_log_impl(&dword_23A123000, v48, (os_log_type_t)v49, "[Request] Failed writing HTTP resopnse with error=%s for %s", (uint8_t *)v36, 0x16u);
        v43 = v50;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v43, -1, -1);
        MEMORY[0x23B842FA4](v36, -1, -1);

        sub_23A13AC68(a3, 1);
        goto LABEL_20;
      }
      sub_23A13AC68(a3, 1);
      sub_23A13AC68(a3, 1);

    }
    else
    {
      v23 = qword_2569443B8;
      swift_retain_n();
      if (v23 != -1)
        swift_once();
      v24 = sub_23A19AE28();
      __swift_project_value_buffer(v24, (uint64_t)qword_25694EBA0);
      v25 = sub_23A19AE10();
      v26 = sub_23A19B6BC();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        v52[0] = v50;
        *(_DWORD *)v27 = 136315138;
        v49 = v27 + 4;
        v28 = sub_23A130BA8();
        v51 = sub_23A14071C(v28, v29, v52);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v25, v26, "[Request] Finished writing HTTP response for %s", v27, 0xCu);
        v30 = v50;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v30, -1, -1);
        MEMORY[0x23B842FA4](v27, -1, -1);
      }
    }

LABEL_20:
    swift_beginAccess();
    if (MEMORY[0x23B843028](v18 + 32))
    {
      v44 = *(_QWORD *)(v18 + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 40))(v16, ObjectType, v44);
      swift_release();
      swift_unknownObjectRelease();
      v46 = *(void (**)(char *, uint64_t))(v11 + 8);
      v46(v14, v10);
      swift_release_n();
      return ((uint64_t (*)(char *, uint64_t))v46)(v16, v10);
    }
    else
    {
      v47 = *(void (**)(char *, uint64_t))(v11 + 8);
      v47(v16, v10);
      swift_release();
      v47(v14, v10);
      return swift_release_n();
    }
  }
  return result;
}

uint64_t sub_23A130BA8()
{
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19AC0C();
  sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  URL.fileSize.getter();
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  TransferHost.State.description.getter();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 0x3D656C6966;
}

uint64_t sub_23A130CF0(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t result;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t ObjectType;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void (*v105)(__int128 *);
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int16 v109;
  __int128 v110;
  __int16 v111;

  v104 = a3;
  v105 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A68);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v94 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v95 = (uint64_t)&v94 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v98 = (uint64_t)&v94 - v13;
  v14 = type metadata accessor for RejectFileRequest(0);
  v101 = *(_QWORD *)(v14 - 8);
  v102 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v96 = (uint64_t)&v94 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v97 = (uint64_t)&v94 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v99 = (uint64_t)&v94 - v22;
  v23 = sub_23A19AE28();
  v106 = *(_QWORD *)(v23 - 8);
  v107 = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v103 = (char *)&v94 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23A19AC0C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v100 = (char *)&v94 - v36;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v38 = (char *)result;
    if (*(unsigned __int8 *)(result + 48) < 8u)
    {
      if (qword_2569443B8 != -1)
        swift_once();
      v39 = v107;
      v40 = __swift_project_value_buffer(v107, (uint64_t)qword_25694EBA0);
      v41 = v106;
      (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v26, v40, v39);
      sub_23A13ABDC(a1, (uint64_t)v17, type metadata accessor for RejectFileRequest);
      swift_retain_n();
      v42 = sub_23A19AE10();
      v43 = sub_23A19B6A4();
      if (os_log_type_enabled(v42, v43))
      {
        v103 = v38;
        v44 = swift_slowAlloc();
        v100 = (char *)swift_slowAlloc();
        *(_QWORD *)&v110 = v100;
        *(_DWORD *)v44 = 136315394;
        sub_23A13ABDC((uint64_t)v17, (uint64_t)v10, type metadata accessor for RejectFileRequest);
        v46 = v101;
        v45 = v102;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v10, 0, 1, v102);
        sub_23A13AC74((uint64_t)v10, (uint64_t)v7, &qword_256944A68);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v7, 1, v45) == 1)
        {
          v47 = 7104878;
          v48 = 0xE300000000000000;
        }
        else
        {
          v82 = v97;
          sub_23A13AB54((uint64_t)v7, v97, type metadata accessor for RejectFileRequest);
          sub_23A13ABDC(v82, v96, type metadata accessor for RejectFileRequest);
          v47 = sub_23A19B518();
          v48 = v83;
          sub_23A13AC20(v82, type metadata accessor for RejectFileRequest);
        }
        sub_23A13ACB8((uint64_t)v10, &qword_256944A68);
        *(_QWORD *)&v108 = sub_23A14071C(v47, v48, (uint64_t *)&v110);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A13AC20((uint64_t)v17, type metadata accessor for RejectFileRequest);
        *(_WORD *)(v44 + 12) = 2080;
        LOBYTE(v108) = v103[48];
        v84 = TransferHost.State.description.getter();
        *(_QWORD *)&v108 = sub_23A14071C(v84, v85, (uint64_t *)&v110);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v42, v43, "[Reject] Unexpected request=%s, state=%s", (uint8_t *)v44, 0x16u);
        v86 = v100;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v86, -1, -1);
        MEMORY[0x23B842FA4](v44, -1, -1);

        (*(void (**)(char *, uint64_t))(v106 + 8))(v26, v107);
      }
      else
      {
        sub_23A13AC20((uint64_t)v17, type metadata accessor for RejectFileRequest);

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v39);
      }
      v110 = xmmword_23A19C700;
      v111 = 258;
      v105(&v110);
      return swift_release();
    }
    v49 = result;
    v50 = *(_QWORD *)(result + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer);
    if (!*(_QWORD *)(v50 + 16))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v30, 1, 1, v31);
      v52 = v103;
LABEL_15:
      sub_23A13ACB8((uint64_t)v30, &qword_256945140);
      if (qword_2569443B8 != -1)
        swift_once();
      v56 = v107;
      v57 = __swift_project_value_buffer(v107, (uint64_t)qword_25694EBA0);
      v58 = v106;
      (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v52, v57, v56);
      v59 = a1;
      v60 = v99;
      sub_23A13ABDC(v59, v99, type metadata accessor for RejectFileRequest);
      swift_retain_n();
      v61 = sub_23A19AE10();
      v62 = sub_23A19B6A4();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = swift_slowAlloc();
        v64 = swift_slowAlloc();
        *(_QWORD *)&v110 = v64;
        *(_DWORD *)v63 = 136315394;
        v65 = v98;
        sub_23A13ABDC(v60, v98, type metadata accessor for RejectFileRequest);
        v67 = v101;
        v66 = v102;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v65, 0, 1, v102);
        v68 = v65;
        v69 = v95;
        sub_23A13AC74(v68, v95, &qword_256944A68);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v69, 1, v66) == 1)
        {
          v70 = 7104878;
          v71 = 0xE300000000000000;
        }
        else
        {
          v87 = v69;
          v88 = v97;
          sub_23A13AB54(v87, v97, type metadata accessor for RejectFileRequest);
          sub_23A13ABDC(v88, v96, type metadata accessor for RejectFileRequest);
          v70 = sub_23A19B518();
          v71 = v89;
          v52 = v103;
          sub_23A13AC20(v88, type metadata accessor for RejectFileRequest);
        }
        sub_23A13ACB8(v98, &qword_256944A68);
        *(_QWORD *)&v108 = sub_23A14071C(v70, v71, (uint64_t *)&v110);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A13AC20(v60, type metadata accessor for RejectFileRequest);
        *(_WORD *)(v63 + 12) = 2080;
        LOBYTE(v108) = *(_BYTE *)(v49 + 48);
        v90 = TransferHost.State.description.getter();
        *(_QWORD *)&v108 = sub_23A14071C(v90, v91, (uint64_t *)&v110);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v61, v62, "[Reject] Could not find URL for request=%s, state=%s", (uint8_t *)v63, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v64, -1, -1);
        MEMORY[0x23B842FA4](v63, -1, -1);

        (*(void (**)(char *, uint64_t))(v106 + 8))(v52, v107);
      }
      else
      {
        sub_23A13AC20(v60, type metadata accessor for RejectFileRequest);

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v52, v56);
      }
      v110 = xmmword_23A19C720;
      v111 = 258;
      v105(&v110);
      return swift_release();
    }
    swift_bridgeObjectRetain();
    v51 = sub_23A1618F0(a1);
    v52 = v103;
    if ((v53 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v30, *(_QWORD *)(v50 + 56) + *(_QWORD *)(v32 + 72) * v51, v31);
      v54 = 0;
    }
    else
    {
      v54 = 1;
    }
    v55 = v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v30, v54, 1, v31);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
      goto LABEL_15;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v55, v30, v31);
    if (qword_2569443B8 != -1)
      swift_once();
    __swift_project_value_buffer(v107, (uint64_t)qword_25694EBA0);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v35, v55, v31);
    swift_retain_n();
    v72 = sub_23A19AE10();
    v73 = sub_23A19B6BC();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = swift_slowAlloc();
      v75 = swift_slowAlloc();
      *(_QWORD *)&v110 = v75;
      *(_DWORD *)v74 = 136315394;
      sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v76 = sub_23A19B8FC();
      *(_QWORD *)&v108 = sub_23A14071C(v76, v77, (uint64_t *)&v110);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v78 = *(void (**)(char *, uint64_t))(v32 + 8);
      v78(v35, v31);
      *(_WORD *)(v74 + 12) = 2080;
      LOBYTE(v108) = *(_BYTE *)(v49 + 48);
      v79 = TransferHost.State.description.getter();
      *(_QWORD *)&v108 = sub_23A14071C(v79, v80, (uint64_t *)&v110);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v72, v73, "[Reject] Marking file=%s as rejected, state=%s", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v75, -1, -1);
      v81 = v74;
      v55 = v100;
      MEMORY[0x23B842FA4](v81, -1, -1);

    }
    else
    {
      v78 = *(void (**)(char *, uint64_t))(v32 + 8);
      v78(v35, v31);

      swift_release_n();
    }
    swift_beginAccess();
    if (MEMORY[0x23B843028](v49 + 32))
    {
      v92 = *(_QWORD *)(v49 + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v55, ObjectType, v92);
      swift_unknownObjectRelease();
    }
    v108 = xmmword_23A19C710;
    v109 = 0;
    v105(&v108);
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v78)(v55, v31);
  }
  return result;
}

Swift::Void __swiftcall TransferHost.stop()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v12[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_23A19B2D8();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A19B2F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(_QWORD *)(v1 + 16);
  aBlock[4] = sub_23A131EE8;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_9;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_23A19B2E4();
  v12[1] = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
}

void sub_23A131AF0(uint64_t a1)
{
  unsigned int v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 <= 9)
  {
    if (v1 - 2 > 4)
    {
      LOBYTE(v10) = 3;
      sub_23A12762C((unsigned __int8 *)&v10, 0xD000000000000014, 0x800000023A1A0510);
    }
    else
    {
      if (qword_2569443B8 != -1)
        swift_once();
      v3 = sub_23A19AE28();
      __swift_project_value_buffer(v3, (uint64_t)qword_25694EBA0);
      swift_retain_n();
      v4 = sub_23A19AE10();
      v5 = sub_23A19B6BC();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = swift_slowAlloc();
        v10 = v7;
        *(_DWORD *)v6 = 136315138;
        v8 = TransferHost.State.description.getter();
        sub_23A14071C(v8, v9, &v10);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v4, v5, "[Stop] Queueing stop until file-transfer-channel established, state=%s", v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v7, -1, -1);
        MEMORY[0x23B842FA4](v6, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      *(_BYTE *)(a1 + 49) = *(_BYTE *)(a1 + 48);
    }
  }
}

uint64_t sub_23A131CEC(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unsigned __int8 v8;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = a2;
    sub_23A12E264(&v8, a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A131D68(uint64_t a1, char a2)
{
  uint64_t result;
  char v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = a2;
    sub_23A139E18(&v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A131DCC()
{
  return sub_23A13AE80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A1261C8);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_23A131DF0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23A131E34(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B842EF0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23A131E74(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B842EF0](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23A131EB4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23A131EE0()
{
  uint64_t v0;

  sub_23A12BD9C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_23A131EE8()
{
  uint64_t v0;

  sub_23A131AF0(v0);
}

unint64_t sub_23A131EF4()
{
  unint64_t result;

  result = qword_256944528;
  if (!qword_256944528)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for TransferHost.State, &type metadata for TransferHost.State);
    atomic_store(result, (unint64_t *)&qword_256944528);
  }
  return result;
}

uint64_t dispatch thunk of TransferHostDelegate.attestationPassed(transferHost:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TransferHostDelegate.attestationFailed(transferHost:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TransferHostDelegate.requestedPinCode(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of TransferHostDelegate.clientRejectedFile(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of TransferHostDelegate.finishedSendingFile(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of TransferHostDelegate.closed(reason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TransferHost.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TransferHost.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_23A132054 + 4 * byte_23A19C1D5[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_23A132088 + 4 * byte_23A19C1D0[v4]))();
}

uint64_t sub_23A132088(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A132090(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A132098);
  return result;
}

uint64_t sub_23A1320A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A1320ACLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23A1320B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A1320B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A1320C4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23A1320CC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TransferHost.State()
{
  return &type metadata for TransferHost.State;
}

uint64_t sub_23A1320E4()
{
  return type metadata accessor for TransferHost();
}

void sub_23A1320EC()
{
  unint64_t v0;
  unint64_t v1;

  sub_23A132238(319, (unint64_t *)&qword_256946210, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    sub_23A132238(319, qword_256944570, (void (*)(uint64_t))type metadata accessor for NetworkDescriptor);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for TransferHost()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransferHost.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of TransferHost.__allocating_init(delegate:config:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 672))();
}

void sub_23A132238(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23A19B710();
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for TransferHost.Configuration()
{
  return &type metadata for TransferHost.Configuration;
}

void type metadata accessor for SecKey(uint64_t a1)
{
  sub_23A13AFDC(a1, &qword_2569448A0);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_23A13AFDC(a1, &qword_2569448A8);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_23A13AFDC(a1, &qword_2569448B0);
}

uint64_t sub_23A1322D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v8 = v5;
  v11 = sub_23A19B2D8();
  v22 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23A19B2F0();
  v14 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v8 + 48);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v8;
  v17[3] = a1;
  v17[4] = a2;
  aBlock[4] = a4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = a5;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23A19B2E4();
  v23 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_23A1324C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19[3];

  if (qword_2569443D8 != -1)
    swift_once();
  v6 = sub_23A19AE28();
  __swift_project_value_buffer(v6, (uint64_t)qword_256946610);
  swift_retain_n();
  v7 = sub_23A19AE10();
  v8 = sub_23A19B6BC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)v9 = 67109378;
    sub_23A19B728();
    *(_WORD *)(v9 + 8) = 2080;
    swift_retain();
    v11 = CosmoSerialChannelHost.description.getter();
    v13 = v12;
    swift_release();
    sub_23A14071C(v11, v13, v19);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v7, v8, "[Respond] Registered handler for messageType=%u, %s", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v10, -1, -1);
    MEMORY[0x23B842FA4](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 1;
  *(_QWORD *)(v14 + 24) = a1;
  *(_QWORD *)(v14 + 32) = a2;
  *(_QWORD *)(v14 + 40) = a3;
  v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_handlers);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *v15;
  *v15 = 0x8000000000000000;
  sub_23A198B78((uint64_t)sub_23A13A220, v14, 1u, isUniquelyReferenced_nonNull_native);
  *v15 = v18;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_23A132750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19[3];

  if (qword_2569443D8 != -1)
    swift_once();
  v6 = sub_23A19AE28();
  __swift_project_value_buffer(v6, (uint64_t)qword_256946610);
  swift_retain_n();
  v7 = sub_23A19AE10();
  v8 = sub_23A19B6BC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)v9 = 67109378;
    sub_23A19B728();
    *(_WORD *)(v9 + 8) = 2080;
    swift_retain();
    v11 = CosmoSerialChannelHost.description.getter();
    v13 = v12;
    swift_release();
    sub_23A14071C(v11, v13, v19);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v7, v8, "[Respond] Registered handler for messageType=%u, %s", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v10, -1, -1);
    MEMORY[0x23B842FA4](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 3;
  *(_QWORD *)(v14 + 24) = a1;
  *(_QWORD *)(v14 + 32) = a2;
  *(_QWORD *)(v14 + 40) = a3;
  v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_handlers);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *v15;
  *v15 = 0x8000000000000000;
  sub_23A198B78((uint64_t)sub_23A13A440, v14, 3u, isUniquelyReferenced_nonNull_native);
  *v15 = v18;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_23A1329DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19[3];

  if (qword_2569443D8 != -1)
    swift_once();
  v6 = sub_23A19AE28();
  __swift_project_value_buffer(v6, (uint64_t)qword_256946610);
  swift_retain_n();
  v7 = sub_23A19AE10();
  v8 = sub_23A19B6BC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)v9 = 67109378;
    sub_23A19B728();
    *(_WORD *)(v9 + 8) = 2080;
    swift_retain();
    v11 = CosmoSerialChannelHost.description.getter();
    v13 = v12;
    swift_release();
    sub_23A14071C(v11, v13, v19);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v7, v8, "[Respond] Registered handler for messageType=%u, %s", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v10, -1, -1);
    MEMORY[0x23B842FA4](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 5;
  *(_QWORD *)(v14 + 24) = a1;
  *(_QWORD *)(v14 + 32) = a2;
  *(_QWORD *)(v14 + 40) = a3;
  v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_handlers);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *v15;
  *v15 = 0x8000000000000000;
  sub_23A198B78((uint64_t)sub_23A13A590, v14, 5u, isUniquelyReferenced_nonNull_native);
  *v15 = v18;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_23A132C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *, void (*)(uint64_t a1), _QWORD *))
{
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  sub_23A19AAEC();
  swift_allocObject();
  swift_retain();
  sub_23A19AAE0();
  sub_23A13A230();
  sub_23A19AAD4();
  swift_release();
  v12 = v16;
  v13 = v17;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = sub_23A13A22C;
  v14[3] = v11;
  v14[4] = a6;
  sub_23A131DF0(v12, v13);
  swift_retain();
  a7(&v16, sub_23A13A300, v14);
  swift_release();
  sub_23A125ED8(v12, v13);
  return sub_23A125ED8(v16, v17);
}

uint64_t sub_23A133368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *, void (*)(uint64_t a1), _QWORD *))
{
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  sub_23A19AAEC();
  swift_allocObject();
  swift_retain();
  sub_23A19AAE0();
  sub_23A13A44C();
  sub_23A19AAD4();
  swift_release();
  v12 = v16;
  v13 = v17;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = sub_23A13A22C;
  v14[3] = v11;
  v14[4] = a6;
  sub_23A131DF0(v12, v13);
  swift_retain();
  a7(&v16, sub_23A13A494, v14);
  swift_release();
  sub_23A125ED8(v12, v13);
  return sub_23A125ED8(v16, v17);
}

uint64_t sub_23A133A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD *, uint64_t (*)(uint64_t a1), _QWORD *))
{
  uint64_t v11;
  _QWORD *v12;
  _QWORD v14[6];

  v14[5] = *MEMORY[0x24BDAC8D0];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  sub_23A19AAEC();
  swift_allocObject();
  swift_retain();
  sub_23A19AAE0();
  sub_23A13A5FC();
  sub_23A19AAD4();
  swift_release();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = sub_23A13A22C;
  v12[3] = v11;
  v12[4] = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  a7(v14, sub_23A13A670, v12);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_23A134160(id a1, unint64_t a2, char a3, void (*a4)(id, uint64_t, unint64_t, uint64_t), int a5, int a6, void (*a7)(void), int a8, void *a9)
{
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  unint64_t v18;
  char v19;

  if ((a3 & 1) != 0)
  {
    v13 = a1;
    a4(a1, 0, 0, 1);
    v17 = a1;
    v18 = a2;
    v19 = 1;
  }
  else
  {
    sub_23A19AB10();
    swift_allocObject();
    sub_23A131DF0((uint64_t)a1, a2);
    sub_23A19AB04();
    a7();
    v14 = sub_23A19AAF8();
    v16 = v15;
    swift_release();
    sub_23A131DF0(v14, v16);
    a4(a9, v14, v16, 0);
    sub_23A125ED8(v14, v16);
    sub_23A125ED8(v14, v16);
    v17 = a1;
    v18 = a2;
    v19 = 0;
  }
  sub_23A13A4EC(v17, v18, v19);
}

uint64_t sub_23A1345AC(uint64_t a1, void (*a2)(void *, uint64_t, unint64_t, uint64_t))
{
  void *v4;
  id v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  _BYTE v11[48];

  sub_23A13A980(a1, (uint64_t)&v10, &qword_2569449F8);
  v4 = v10;
  sub_23A13A980(a1, (uint64_t)v11, &qword_2569449F8);
  if ((v11[32] & 1) != 0)
  {
    v5 = v4;
    a2(v4, 0, 0, 1);
    return sub_23A13A6C4(a1);
  }
  else
  {
    sub_23A19AB10();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23A19AB04();
    sub_23A13A728();
    v7 = sub_23A19AAF8();
    v9 = v8;
    swift_release();
    sub_23A131DF0(v7, v9);
    a2((void *)6, v7, v9, 0);
    sub_23A125ED8(v7, v9);
    sub_23A125ED8(v7, v9);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23A134A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a8;
  v14 = sub_23A19B2D8();
  v29 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23A19B2F0();
  v27 = *(_QWORD *)(v17 - 8);
  v28 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(v8 + 48);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v8;
  v20[3] = a1;
  v20[4] = a2;
  v20[5] = a3;
  v20[6] = a4;
  aBlock[4] = a6;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = v24;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v25(a3, a4);
  sub_23A19B2E4();
  v30 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v19, v16, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v28);
  return swift_release();
}

uint64_t sub_23A134C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23A19AE28();
  MEMORY[0x24BDAC7A8](v4);
  sub_23A19AAEC();
  swift_allocObject();
  sub_23A19AAE0();
  sub_23A13AF28();
  sub_23A19AAD4();
  if (v2)
  {
    swift_release();
    __asm { BR              X10 }
  }
  return swift_release();
}

uint64_t sub_23A135380(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[20];

  v12[2] = a6;
  v12[3] = a3;
  v12[19] = *MEMORY[0x24BDAC8D0];
  v9 = sub_23A19AE28();
  v12[5] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12[4] = (char *)v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A19AAEC();
  swift_allocObject();
  sub_23A19AAE0();
  a4();
  sub_23A19AAD4();
  if (v6)
  {
    swift_release();
    __asm { BR              X10 }
  }
  return swift_release();
}

uint64_t sub_23A135A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23A19AE28();
  MEMORY[0x24BDAC7A8](v4);
  sub_23A19AAEC();
  swift_allocObject();
  sub_23A19AAE0();
  type metadata accessor for FileRequest(0);
  sub_23A131E34(&qword_256944A80, type metadata accessor for FileRequest, (uint64_t)&protocol conformance descriptor for FileRequest);
  sub_23A19AAD4();
  if (v2)
  {
    swift_release();
    __asm { BR              X10 }
  }
  return swift_release();
}

uint64_t sub_23A1361E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23A19AE28();
  MEMORY[0x24BDAC7A8](v4);
  sub_23A19AAEC();
  swift_allocObject();
  sub_23A19AAE0();
  type metadata accessor for RejectFileRequest(0);
  sub_23A131E34(&qword_256944A58, type metadata accessor for RejectFileRequest, (uint64_t)&protocol conformance descriptor for RejectFileRequest);
  sub_23A19AAD4();
  if (v2)
  {
    swift_release();
    __asm { BR              X10 }
  }
  return swift_release();
}

uint64_t sub_23A136934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26[3];

  if (qword_256944488 != -1)
    swift_once();
  v9 = sub_23A19AE28();
  __swift_project_value_buffer(v9, (uint64_t)qword_2569473A8);
  swift_retain_n();
  v10 = sub_23A19AE10();
  v11 = sub_23A19B6BC();
  if (os_log_type_enabled(v10, v11))
  {
    v23 = a3;
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v26[0] = v13;
    *(_DWORD *)v12 = 136315394;
    sub_23A14071C(0x657361656C2FLL, 0xE600000000000000, v26);
    sub_23A19B728();
    *(_WORD *)(v12 + 12) = 2080;
    swift_retain();
    v14 = CosmoMultiplexChannelHost.description.getter();
    v16 = v15;
    swift_release();
    sub_23A14071C(v14, v16, v26);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v10, v11, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v13, -1, -1);
    v17 = v12;
    a3 = v23;
    MEMORY[0x23B842FA4](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a1;
  v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_23A13A0F8(a4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v20;
  *v20 = 0x8000000000000000;
  sub_23A1989DC((uint64_t)sub_23A13AEC4, (uint64_t)v18, (uint64_t)sub_23A13AF08, (uint64_t)v19, 0x657361656C2FLL, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  *v20 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_23A136C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26[3];

  if (qword_256944488 != -1)
    swift_once();
  v9 = sub_23A19AE28();
  __swift_project_value_buffer(v9, (uint64_t)qword_2569473A8);
  swift_retain_n();
  v10 = sub_23A19AE10();
  v11 = sub_23A19B6BC();
  if (os_log_type_enabled(v10, v11))
  {
    v23 = a3;
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v26[0] = v13;
    *(_DWORD *)v12 = 136315394;
    sub_23A14071C(0x65736F6C632FLL, 0xE600000000000000, v26);
    sub_23A19B728();
    *(_WORD *)(v12 + 12) = 2080;
    swift_retain();
    v14 = CosmoMultiplexChannelHost.description.getter();
    v16 = v15;
    swift_release();
    sub_23A14071C(v14, v16, v26);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v10, v11, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v13, -1, -1);
    v17 = v12;
    a3 = v23;
    MEMORY[0x23B842FA4](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a1;
  v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_23A13A0F8(a4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v20;
  *v20 = 0x8000000000000000;
  sub_23A1989DC((uint64_t)sub_23A13AD1C, (uint64_t)v18, (uint64_t)sub_23A13AD2C, (uint64_t)v19, 0x65736F6C632FLL, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  *v20 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_23A136F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26[3];

  if (qword_256944488 != -1)
    swift_once();
  v9 = sub_23A19AE28();
  __swift_project_value_buffer(v9, (uint64_t)qword_2569473A8);
  swift_retain_n();
  v10 = sub_23A19AE10();
  v11 = sub_23A19B6BC();
  if (os_log_type_enabled(v10, v11))
  {
    v23 = a3;
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v26[0] = v13;
    *(_DWORD *)v12 = 136315394;
    sub_23A14071C(0x73656C69662FLL, 0xE600000000000000, v26);
    sub_23A19B728();
    *(_WORD *)(v12 + 12) = 2080;
    swift_retain();
    v14 = CosmoMultiplexChannelHost.description.getter();
    v16 = v15;
    swift_release();
    sub_23A14071C(v14, v16, v26);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v10, v11, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v13, -1, -1);
    v17 = v12;
    a3 = v23;
    MEMORY[0x23B842FA4](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a1;
  v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_23A13A0F8(a4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v20;
  *v20 = 0x8000000000000000;
  sub_23A1989DC((uint64_t)sub_23A13A7F4, (uint64_t)v18, (uint64_t)sub_23A13A804, (uint64_t)v19, 0x73656C69662FLL, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  *v20 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_23A137240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26[3];

  if (qword_256944488 != -1)
    swift_once();
  v9 = sub_23A19AE28();
  __swift_project_value_buffer(v9, (uint64_t)qword_2569473A8);
  swift_retain_n();
  v10 = sub_23A19AE10();
  v11 = sub_23A19B6BC();
  if (os_log_type_enabled(v10, v11))
  {
    v23 = a3;
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v26[0] = v13;
    *(_DWORD *)v12 = 136315394;
    sub_23A14071C(0x656C69662FLL, 0xE500000000000000, v26);
    sub_23A19B728();
    *(_WORD *)(v12 + 12) = 2080;
    swift_retain();
    v14 = CosmoMultiplexChannelHost.description.getter();
    v16 = v15;
    swift_release();
    sub_23A14071C(v14, v16, v26);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v10, v11, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v13, -1, -1);
    v17 = v12;
    a3 = v23;
    MEMORY[0x23B842FA4](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a1;
  v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_23A13A0F8(a4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v20;
  *v20 = 0x8000000000000000;
  sub_23A1989DC((uint64_t)sub_23A13AAF4, (uint64_t)v18, (uint64_t)sub_23A13AB44, (uint64_t)v19, 0x656C69662FLL, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
  *v20 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_23A137544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26[3];

  if (qword_256944488 != -1)
    swift_once();
  v9 = sub_23A19AE28();
  __swift_project_value_buffer(v9, (uint64_t)qword_2569473A8);
  swift_retain_n();
  v10 = sub_23A19AE10();
  v11 = sub_23A19B6BC();
  if (os_log_type_enabled(v10, v11))
  {
    v23 = a3;
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v26[0] = v13;
    *(_DWORD *)v12 = 136315394;
    sub_23A14071C(0x467463656A65722FLL, 0xEB00000000656C69, v26);
    sub_23A19B728();
    *(_WORD *)(v12 + 12) = 2080;
    swift_retain();
    v14 = CosmoMultiplexChannelHost.description.getter();
    v16 = v15;
    swift_release();
    sub_23A14071C(v14, v16, v26);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v10, v11, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v13, -1, -1);
    v17 = v12;
    a3 = v23;
    MEMORY[0x23B842FA4](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a1;
  v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_23A13A0F8(a4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v20;
  *v20 = 0x8000000000000000;
  sub_23A1989DC((uint64_t)sub_23A13AA14, (uint64_t)v18, (uint64_t)sub_23A13AA64, (uint64_t)v19, 0x467463656A65722FLL, 0xEB00000000656C69, isUniquelyReferenced_nonNull_native);
  *v20 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_23A137860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(__int128 *, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v9;
  __int128 v11;

  sub_23A134C58(a1, a2);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  swift_retain();
  a6(&v11, sub_23A13AF6C, v9);
  return swift_release();
}

uint64_t sub_23A137940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v9;
  uint64_t v10;

  sub_23A135380(a1, a2, a5, (void (*)(void))sub_23A13AD48, (uint64_t)&type metadata for CloseRequest, 0x65736F6C632FLL);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  v10 = swift_retain();
  a6(v10, sub_23A13AD8C, v9);
  return swift_release();
}

uint64_t sub_23A137A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v9;
  uint64_t v10;

  sub_23A135380(a1, a2, a5, (void (*)(void))sub_23A13A898, (uint64_t)&type metadata for FileListRequest, 0x73656C69662FLL);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  v10 = swift_retain();
  a6(v10, sub_23A13A900, v9);
  return swift_release();
}

uint64_t sub_23A137B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t, uint64_t), uint64_t a7, uint64_t (*a8)(_QWORD), void (*a9)(uint64_t, uint64_t, uint64_t), uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);

  v28 = a7;
  v29 = a6;
  v17 = a8(0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v28 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v28 - v24;
  a9(a1, a2, a5);
  sub_23A13AB54((uint64_t)v23, (uint64_t)v25, a8);
  sub_23A13ABDC((uint64_t)v25, (uint64_t)v20, a8);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a3;
  *(_QWORD *)(v26 + 24) = a4;
  swift_retain();
  v29(v20, a11, v26);
  swift_release();
  sub_23A13AC20((uint64_t)v20, a8);
  return sub_23A13AC20((uint64_t)v25, a8);
}

uint64_t sub_23A137CE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t *))
{
  int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  ValueMetadata *v13;
  unint64_t v14;
  char v15;

  v8 = a1;
  if ((a4 & 1) != 0)
  {
    v10 = a1;
    v11 = a2;
    LOBYTE(v12) = a3;
    v15 = 1;
    sub_23A13A924(a1, a2, a3);
  }
  else
  {
    v13 = &type metadata for LeaseRequest.Response;
    v14 = sub_23A13AF84();
    LODWORD(v10) = v8;
    v11 = a2;
    v12 = a3;
    v15 = 0;
    swift_bridgeObjectRetain();
  }
  a5(&v10);
  return sub_23A13ACB8((uint64_t)&v10, &qword_256944A10);
}

uint64_t sub_23A137D8C(uint64_t a1, uint64_t a2, __int16 a3, void (*a4)(uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  ValueMetadata *v10;
  unint64_t v11;
  char v12;

  if ((a3 & 0x100) != 0)
  {
    v7 = a1;
    v8 = a2;
    v9 = a3;
    v12 = 1;
    sub_23A13A924(a1, a2, a3);
  }
  else
  {
    v10 = &type metadata for FileListRequest.Response;
    LODWORD(v7) = a1;
    v11 = sub_23A13A93C();
    v8 = a2;
    v12 = 0;
    swift_bridgeObjectRetain();
  }
  a4(&v7);
  return sub_23A13ACB8((uint64_t)&v7, &qword_256944A10);
}

uint64_t sub_23A137E28(uint64_t a1, void (*a2)(__int128 *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t *boxed_opaque_existential_1;
  __int128 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = type metadata accessor for CosmoFileHttpResponse(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A78);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A13AC74(a1, (uint64_t)v9, &qword_256944A78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = v9[16];
    v13 = *(_OWORD *)v9;
    v14 = v10;
    v17 = 1;
    a2(&v13);
  }
  else
  {
    sub_23A13AB54((uint64_t)v9, (uint64_t)v6, type metadata accessor for CosmoFileHttpResponse);
    v15 = v4;
    v16 = sub_23A131E34(&qword_256944A88, type metadata accessor for CosmoFileHttpResponse, (uint64_t)&protocol conformance descriptor for CosmoFileHttpResponse);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
    sub_23A13ABDC((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, type metadata accessor for CosmoFileHttpResponse);
    v17 = 0;
    a2(&v13);
    sub_23A13AC20((uint64_t)v6, type metadata accessor for CosmoFileHttpResponse);
  }
  return sub_23A13ACB8((uint64_t)&v13, &qword_256944A10);
}

uint64_t sub_23A137FA4(uint64_t a1, uint64_t a2, __int16 a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  int v8;
  _QWORD v10[2];
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v8 = a1;
  if ((a3 & 0x100) != 0)
  {
    v10[0] = a1;
    v10[1] = a2;
    v11 = a3;
    v14 = 1;
    sub_23A13A924(a1, a2, a3);
  }
  else
  {
    v12 = a6;
    v13 = a7();
    LODWORD(v10[0]) = v8;
    v14 = 0;
  }
  a4(v10);
  return sub_23A13ACB8((uint64_t)v10, &qword_256944A10);
}

uint64_t sub_23A138024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(_BYTE *, __int128 *, uint64_t, _QWORD), uint64_t a7)
{
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[40];
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[40];
  _BYTE v46[40];
  __int128 v47;
  unsigned __int8 v48;
  char v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  _BYTE v53[9];

  v14 = sub_23A19AE28();
  result = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6)
  {
    v35 = v16;
    v36 = result;
    swift_retain();
    sub_23A134C58(a1, a2);
    v53[0] = v47;
    sub_23A13AC74(a3, (uint64_t)&v47, &qword_256944A10);
    v19 = v49;
    v20 = a7;
    if ((v49 & 1) != 0)
    {
      v22 = *((_QWORD *)&v47 + 1);
      v21 = v47;
      v23 = v48;
      v50 = v47;
      v51 = v48;
      v52 = 1;
LABEL_13:
      a6(v53, &v50, a4, a5 & 1);
      sub_23A13A1E4((uint64_t)a6);
      return sub_23A13AF18(v21, v22, v23, v19);
    }
    sub_23A13A83C(&v47, (uint64_t)v46);
    sub_23A13A854((uint64_t)v46, (uint64_t)v45);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256944A18);
    if ((swift_dynamicCast() & 1) != 0 && v43 != 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      v21 = v41;
      v22 = v42;
      v23 = v43;
      *(_QWORD *)&v50 = v41;
      *((_QWORD *)&v50 + 1) = v42;
      v51 = v43;
      v52 = 0;
      goto LABEL_13;
    }
    if (qword_256944488 != -1)
      swift_once();
    v24 = v36;
    v25 = __swift_project_value_buffer(v36, (uint64_t)qword_2569473A8);
    v26 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v18, v25, v24);
    sub_23A13A854((uint64_t)v46, (uint64_t)v45);
    v27 = sub_23A19AE10();
    v28 = sub_23A19B6A4();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v44 = v30;
      *(_DWORD *)v29 = 136315138;
      sub_23A13A854((uint64_t)v45, (uint64_t)&v41);
      sub_23A13AC74((uint64_t)&v41, (uint64_t)&v39, &qword_256944A20);
      v34[1] = v20;
      if (v40)
      {
        sub_23A13A83C(&v39, (uint64_t)v38);
        sub_23A13A854((uint64_t)v38, (uint64_t)&v37);
        v31 = sub_23A19B518();
        v33 = v32;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      }
      else
      {
        v33 = 0xE300000000000000;
        v31 = 7104878;
      }
      sub_23A13ACB8((uint64_t)&v41, &qword_256944A20);
      v41 = sub_23A14071C(v31, v33, &v44);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      _os_log_impl(&dword_23A123000, v27, v28, "[Respond] Could not cast %s into response type", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v30, -1, -1);
      MEMORY[0x23B842FA4](v29, -1, -1);
      sub_23A13A1E4((uint64_t)a6);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
    }
    else
    {
      sub_23A13A1E4((uint64_t)a6);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v24);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  }
  return result;
}

uint64_t sub_23A13840C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t, __int128 *, uint64_t, _QWORD), uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[40];
  __int128 v42;
  uint64_t v43;
  _QWORD v44[5];
  uint64_t v45;
  _BYTE v46[40];
  _BYTE v47[40];
  __int128 v48;
  unsigned __int8 v49;
  char v50;
  __int128 v51;
  __int16 v52;

  v15 = sub_23A19AE28();
  result = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6)
  {
    v38 = v17;
    v39 = result;
    swift_retain();
    sub_23A135380(a1, a2, a8, (void (*)(void))sub_23A13AD48, (uint64_t)&type metadata for CloseRequest, 0x65736F6C632FLL);
    v20 = sub_23A13AC74(a3, (uint64_t)&v48, &qword_256944A10);
    v21 = v50;
    if ((v50 & 1) != 0)
    {
      v23 = *((_QWORD *)&v48 + 1);
      v22 = v48;
      v24 = v49;
      v51 = v48;
      LOBYTE(v52) = v49;
      HIBYTE(v52) = 1;
LABEL_6:
      a6(v20, &v51, a4, a5 & 1);
      sub_23A13A1E4((uint64_t)a6);
      return sub_23A13AD3C(v22, v23, v24, v21);
    }
    sub_23A13A83C(&v48, (uint64_t)v47);
    sub_23A13A854((uint64_t)v47, (uint64_t)v46);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256944A18);
    if ((swift_dynamicCast() & 1) != 0)
    {
      BYTE4(v44[0]) = 0;
      v20 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      v23 = 0;
      v24 = 0;
      v22 = LODWORD(v44[0]);
      v51 = LODWORD(v44[0]);
      v52 = 0;
      goto LABEL_6;
    }
    if (qword_256944488 != -1)
      swift_once();
    v25 = v39;
    v26 = __swift_project_value_buffer(v39, (uint64_t)qword_2569473A8);
    v27 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v19, v26, v25);
    sub_23A13A854((uint64_t)v47, (uint64_t)v46);
    v28 = sub_23A19AE10();
    v29 = sub_23A19B6A4();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v45 = v31;
      *(_DWORD *)v30 = 136315138;
      sub_23A13A854((uint64_t)v46, (uint64_t)v44);
      sub_23A13AC74((uint64_t)v44, (uint64_t)&v42, &qword_256944A20);
      v37 = v31;
      if (v43)
      {
        sub_23A13A83C(&v42, (uint64_t)v41);
        sub_23A13A854((uint64_t)v41, (uint64_t)&v40);
        v32 = sub_23A19B518();
        v34 = v33;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      }
      else
      {
        v34 = 0xE300000000000000;
        v32 = 7104878;
      }
      sub_23A13ACB8((uint64_t)v44, &qword_256944A20);
      v44[0] = sub_23A14071C(v32, v34, &v45);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      _os_log_impl(&dword_23A123000, v28, v29, "[Respond] Could not cast %s into response type", v30, 0xCu);
      v35 = v37;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v35, -1, -1);
      MEMORY[0x23B842FA4](v30, -1, -1);
      sub_23A13A1E4((uint64_t)a6);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v39);
    }
    else
    {
      sub_23A13A1E4((uint64_t)a6);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v25);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  }
  return result;
}

uint64_t sub_23A138818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t, __int128 *, uint64_t, _QWORD), uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[40];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[40];
  _BYTE v48[40];
  __int128 v49;
  unsigned __int8 v50;
  char v51;
  __int128 v52;
  __int16 v53;

  v16 = sub_23A19AE28();
  result = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6)
  {
    v38 = v18;
    v39 = result;
    swift_retain();
    sub_23A135380(a1, a2, a8, (void (*)(void))sub_23A13A898, (uint64_t)&type metadata for FileListRequest, 0x73656C69662FLL);
    v21 = sub_23A13AC74(a3, (uint64_t)&v49, &qword_256944A10);
    v22 = v51;
    v23 = a7;
    if ((v51 & 1) != 0)
    {
      v25 = *((_QWORD *)&v49 + 1);
      v24 = v49;
      v26 = v50;
      v52 = v49;
      LOBYTE(v53) = v50;
      HIBYTE(v53) = 1;
LABEL_7:
      a6(v21, &v52, a4, a5 & 1);
      sub_23A13A1E4((uint64_t)a6);
      return sub_23A13A814(v24, v25, v26, v22);
    }
    sub_23A13A83C(&v49, (uint64_t)v48);
    sub_23A13A854((uint64_t)v48, (uint64_t)v47);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256944A18);
    if ((swift_dynamicCast() & 1) != 0 && v45)
    {
      v21 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      v26 = 0;
      v24 = v44;
      v25 = v45;
      *(_QWORD *)&v52 = v44;
      *((_QWORD *)&v52 + 1) = v45;
      v53 = 0;
      goto LABEL_7;
    }
    if (qword_256944488 != -1)
      swift_once();
    v27 = v39;
    v28 = __swift_project_value_buffer(v39, (uint64_t)qword_2569473A8);
    v29 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v20, v28, v27);
    sub_23A13A854((uint64_t)v48, (uint64_t)v47);
    v30 = sub_23A19AE10();
    v31 = sub_23A19B6A4();
    if (os_log_type_enabled(v30, v31))
    {
      v37[1] = v23;
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v46 = v33;
      *(_DWORD *)v32 = 136315138;
      sub_23A13A854((uint64_t)v47, (uint64_t)&v44);
      sub_23A13AC74((uint64_t)&v44, (uint64_t)&v42, &qword_256944A20);
      if (v43)
      {
        sub_23A13A83C(&v42, (uint64_t)v41);
        sub_23A13A854((uint64_t)v41, (uint64_t)&v40);
        v34 = sub_23A19B518();
        v36 = v35;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      }
      else
      {
        v36 = 0xE300000000000000;
        v34 = 7104878;
      }
      sub_23A13ACB8((uint64_t)&v44, &qword_256944A20);
      v44 = sub_23A14071C(v34, v36, &v46);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      _os_log_impl(&dword_23A123000, v30, v31, "[Respond] Could not cast %s into response type", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v33, -1, -1);
      MEMORY[0x23B842FA4](v32, -1, -1);
      sub_23A13A1E4((uint64_t)a6);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v39);
    }
    else
    {
      sub_23A13A1E4((uint64_t)a6);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v27);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  }
  return result;
}

uint64_t sub_23A138C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void (*a6)(_QWORD, _QWORD, _QWORD, _QWORD), uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v32)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[40];
  __int128 v58;
  uint64_t v59;
  _QWORD v60[5];
  uint64_t v61;
  _BYTE v62[40];
  _BYTE v63[40];
  __int128 v64;
  char v65;
  char v66;

  v55 = a8;
  v50 = a5;
  v51 = a4;
  v52 = a3;
  v11 = sub_23A19AE28();
  v46 = *(_QWORD *)(v11 - 8);
  v47 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v45 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A70);
  MEMORY[0x24BDAC7A8](v13);
  v48 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CosmoFileHttpResponse(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A78);
  MEMORY[0x24BDAC7A8](v49);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for FileRequest(0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v22);
  v53 = (uint64_t)&v45 - v26;
  v54 = a6;
  if (a6)
  {
    swift_retain();
    sub_23A135A98(a1, a2);
    v27 = v53;
    sub_23A13AB54((uint64_t)v24, v53, type metadata accessor for FileRequest);
    sub_23A13AC74(v52, (uint64_t)&v64, &qword_256944A10);
    if ((v66 & 1) != 0)
    {
      v28 = v65;
      *(_OWORD *)v20 = v64;
      v20[16] = v28;
    }
    else
    {
      sub_23A13A83C(&v64, (uint64_t)v63);
      sub_23A13A854((uint64_t)v63, (uint64_t)v62);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256944A18);
      v29 = (uint64_t)v48;
      v30 = swift_dynamicCast();
      v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
      if ((v30 & 1) == 0)
      {
        v31(v29, 1, 1, v15);
        sub_23A13ACB8(v29, &qword_256944A70);
        if (qword_256944488 != -1)
          swift_once();
        v34 = v47;
        v35 = __swift_project_value_buffer(v47, (uint64_t)qword_2569473A8);
        v36 = v45;
        v37 = v46;
        (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v35, v34);
        sub_23A13A854((uint64_t)v63, (uint64_t)v62);
        v38 = sub_23A19AE10();
        v39 = sub_23A19B6A4();
        if (os_log_type_enabled(v38, v39))
        {
          v40 = (uint8_t *)swift_slowAlloc();
          v41 = swift_slowAlloc();
          v61 = v41;
          *(_DWORD *)v40 = 136315138;
          sub_23A13A854((uint64_t)v62, (uint64_t)v60);
          sub_23A13AC74((uint64_t)v60, (uint64_t)&v58, &qword_256944A20);
          if (v59)
          {
            sub_23A13A83C(&v58, (uint64_t)v57);
            sub_23A13A854((uint64_t)v57, (uint64_t)&v56);
            v42 = sub_23A19B518();
            v44 = v43;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
          }
          else
          {
            v44 = 0xE300000000000000;
            v42 = 7104878;
          }
          sub_23A13ACB8((uint64_t)v60, &qword_256944A20);
          v60[0] = sub_23A14071C(v42, v44, &v61);
          sub_23A19B728();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
          _os_log_impl(&dword_23A123000, v38, v39, "[Respond] Could not cast %s into response type", v40, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B842FA4](v41, -1, -1);
          MEMORY[0x23B842FA4](v40, -1, -1);
          sub_23A13A1E4((uint64_t)v54);

          (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
          v33 = v53;
          return sub_23A13AC20(v33, type metadata accessor for FileRequest);
        }
        sub_23A13A1E4((uint64_t)v54);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v34);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
LABEL_7:
        v33 = v27;
        return sub_23A13AC20(v33, type metadata accessor for FileRequest);
      }
      v31(v29, 0, 1, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
      sub_23A13AB54(v29, (uint64_t)v18, type metadata accessor for CosmoFileHttpResponse);
      sub_23A13AB54((uint64_t)v18, (uint64_t)v20, type metadata accessor for CosmoFileHttpResponse);
    }
    swift_storeEnumTagMultiPayload();
    v32 = v54;
    v54(v27, v20, v51, v50 & 1);
    sub_23A13A1E4((uint64_t)v32);
    sub_23A13ACB8((uint64_t)v20, &qword_256944A78);
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_23A13919C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t, __int128 *, uint64_t, _QWORD), uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD v39[2];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[40];
  __int128 v46;
  uint64_t v47;
  _QWORD v48[5];
  uint64_t v49;
  _BYTE v50[40];
  _BYTE v51[40];
  __int128 v52;
  unsigned __int8 v53;
  char v54;
  __int128 v55;
  __int16 v56;

  v14 = sub_23A19AE28();
  v41 = *(_QWORD *)(v14 - 8);
  v42 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v40 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RejectFileRequest(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v17);
  if (a6)
  {
    v43 = (uint64_t)v39 - v21;
    swift_retain();
    sub_23A1361E0(a1, a2);
    v39[1] = a7;
    sub_23A13AB54((uint64_t)v19, v43, type metadata accessor for RejectFileRequest);
    sub_23A13AC74(a3, (uint64_t)&v52, &qword_256944A10);
    v22 = v54;
    if ((v54 & 1) != 0)
    {
      v24 = *((_QWORD *)&v52 + 1);
      v23 = v52;
      v25 = v53;
      v55 = v52;
      LOBYTE(v56) = v53;
      HIBYTE(v56) = 1;
    }
    else
    {
      sub_23A13A83C(&v52, (uint64_t)v51);
      sub_23A13A854((uint64_t)v51, (uint64_t)v50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256944A18);
      if ((swift_dynamicCast() & 1) == 0)
      {
        if (qword_256944488 != -1)
          swift_once();
        v28 = v42;
        v29 = __swift_project_value_buffer(v42, (uint64_t)qword_2569473A8);
        v30 = v40;
        v31 = v41;
        (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v29, v28);
        sub_23A13A854((uint64_t)v51, (uint64_t)v50);
        v32 = sub_23A19AE10();
        v33 = sub_23A19B6A4();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = (uint8_t *)swift_slowAlloc();
          v35 = swift_slowAlloc();
          v49 = v35;
          *(_DWORD *)v34 = 136315138;
          sub_23A13A854((uint64_t)v50, (uint64_t)v48);
          sub_23A13AC74((uint64_t)v48, (uint64_t)&v46, &qword_256944A20);
          if (v47)
          {
            sub_23A13A83C(&v46, (uint64_t)v45);
            sub_23A13A854((uint64_t)v45, (uint64_t)&v44);
            v36 = sub_23A19B518();
            v38 = v37;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
          }
          else
          {
            v38 = 0xE300000000000000;
            v36 = 7104878;
          }
          sub_23A13ACB8((uint64_t)v48, &qword_256944A20);
          v48[0] = sub_23A14071C(v36, v38, &v49);
          sub_23A19B728();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
          _os_log_impl(&dword_23A123000, v32, v33, "[Respond] Could not cast %s into response type", v34, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B842FA4](v35, -1, -1);
          MEMORY[0x23B842FA4](v34, -1, -1);
          sub_23A13A1E4((uint64_t)a6);

          (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
        }
        else
        {
          sub_23A13A1E4((uint64_t)a6);

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
          (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v28);
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
        v27 = v43;
        return sub_23A13AC20(v27, type metadata accessor for RejectFileRequest);
      }
      BYTE4(v48[0]) = 0;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      v24 = 0;
      v25 = 0;
      v23 = LODWORD(v48[0]);
      v55 = LODWORD(v48[0]);
      v56 = 0;
    }
    v26 = v43;
    a6(v43, &v55, a4, a5 & 1);
    sub_23A13A1E4((uint64_t)a6);
    sub_23A13AD3C(v23, v24, v25, v22);
    v27 = v26;
    return sub_23A13AC20(v27, type metadata accessor for RejectFileRequest);
  }
  return result;
}

uint64_t sub_23A139600(uint64_t a1, uint64_t a2)
{
  return sub_23A1396C8(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_23A13960C()
{
  sub_23A19B4DC();
  sub_23A19B56C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A13964C()
{
  uint64_t v0;

  sub_23A19B4DC();
  sub_23A19B980();
  sub_23A19B56C();
  v0 = sub_23A19B9A4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23A1396BC(uint64_t a1, uint64_t a2)
{
  return sub_23A1396C8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_23A1396C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23A19B4DC();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23A139704(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_23A19B4C4();
  *a2 = 0;
  return result;
}

uint64_t sub_23A139778(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_23A19B4D0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23A1397F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23A19B4DC();
  v2 = sub_23A19B4B8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23A139834(uint64_t a1)
{
  MEMORY[0x23B842EF0](&unk_23A19C4D4, a1);
  return sub_23A19AD50();
}

uint64_t sub_23A139870()
{
  MEMORY[0x23B842EF0](&unk_23A19C4D4);
  return sub_23A19AD44();
}

uint64_t sub_23A1398B8(uint64_t a1, uint64_t a2)
{
  sub_23A19B980();
  MEMORY[0x23B842EF0](&unk_23A19C4D4, a2);
  sub_23A19AD44();
  return sub_23A19B9A4();
}

uint64_t sub_23A139910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23A19B4DC();
  v2 = v1;
  if (v0 == sub_23A19B4DC() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23A19B908();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_23A139998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B842EF0](&unk_23A19C4D4, a3);
  return sub_23A19AD38();
}

uint64_t sub_23A1399E4()
{
  return sub_23A131E34(&qword_256944978, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_23A19C500);
}

uint64_t sub_23A139A10()
{
  return sub_23A131E34((unint64_t *)&unk_256944980, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_23A19C4A8);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_23A139A54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23A19B4B8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23A139A98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23A19B4DC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23A139AC0()
{
  sub_23A131E34(&qword_256944AE0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23A19C698);
  sub_23A131E34(&qword_256944AE8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23A19C5EC);
  return sub_23A19B854();
}

unint64_t sub_23A139B44(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_23A19AD2C();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23A19B770();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23A131E34((unint64_t *)&unk_2569449A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23A19B494();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(sub_23A19AC0C() - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_23A139E18(char *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *);
  char v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  _QWORD v27[2];
  char v28;

  v3 = v1;
  v5 = sub_23A19B35C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (void (*)(_QWORD *))((char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *a1;
  v10 = *(void **)(v3 + 16);
  *(_QWORD *)v8 = v10;
  (*(void (**)(void (*)(_QWORD *), _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v11 = v10;
  LOBYTE(v10) = sub_23A19B374();
  result = (*(uint64_t (**)(void (*)(_QWORD *), uint64_t))(v6 + 8))(v8, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(unsigned __int8 *)(v3 + 48) > 0xAu)
    return result;
  LOBYTE(v27[0]) = 11;
  sub_23A125B90((char *)v27);
  v2 = (_QWORD *)(v3 + 112);
  v8 = *(void (**)(_QWORD *))(v3 + 112);
  *(_BYTE *)(v3 + 49) = 12;
  if (v8)
  {
    v13 = qword_2569443B8;
    swift_retain();
    if (v13 == -1)
    {
LABEL_5:
      v14 = sub_23A19AE28();
      __swift_project_value_buffer(v14, (uint64_t)qword_25694EBA0);
      v15 = sub_23A19AE10();
      v16 = sub_23A19B6BC();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_23A123000, v15, v16, "[Close] Found incomplete onStart() lambda, completing with error", v17, 2u);
        MEMORY[0x23B842FA4](v17, -1, -1);
      }

      sub_23A13A180();
      v18 = (void *)swift_allocError();
      *v19 = xmmword_23A19C740;
      v27[0] = v18;
      v27[1] = 0;
      v28 = 1;
      v8(v27);
      sub_23A13A1E4((uint64_t)v8);

      v20 = *(_QWORD *)(v3 + 112);
      goto LABEL_9;
    }
LABEL_15:
    swift_once();
    goto LABEL_5;
  }
  v20 = 0;
LABEL_9:
  *v2 = 0;
  v2[1] = 0;
  sub_23A13A1E4(v20);
  sub_23A12F4C4();
  v21 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  sub_23A13A1E4(v21);
  v22 = *(_QWORD *)(v3 + 96);
  *(_QWORD *)(v3 + 96) = 0;
  *(_QWORD *)(v3 + 104) = 0;
  sub_23A13A1E4(v22);
  v23 = OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost))
  {
    swift_retain();
    sub_23A192900();
    swift_release();
  }
  *(_QWORD *)(v3 + v23) = 0;
  swift_release();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2Prover) = 0;
  swift_release();
  swift_beginAccess();
  result = MEMORY[0x23B843028](v3 + 32);
  if (result)
  {
    v24 = *(_QWORD *)(v3 + 40);
    ObjectType = swift_getObjectType();
    HIBYTE(v26) = v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 48))((char *)&v26 + 7, ObjectType, v24);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23A13A0F8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23A13A108()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A13A130()
{
  uint64_t v0;

  return sub_23A131CEC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t objectdestroy_14Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A13A170()
{
  uint64_t v0;

  return sub_23A131D68(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

unint64_t sub_23A13A180()
{
  unint64_t result;

  result = qword_256946560;
  if (!qword_256946560)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for TransferError, &type metadata for TransferError);
    atomic_store(result, (unint64_t *)&qword_256946560);
  }
  return result;
}

uint64_t sub_23A13A1C4(char *a1)
{
  uint64_t v1;

  return sub_23A12CD84(a1, v1, sub_23A126EFC);
}

uint64_t sub_23A13A1E4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_23A13A1F4(uint64_t *a1, void (*a2)(_BYTE **), uint64_t a3)
{
  sub_23A1299DC(a1, a2, a3);
}

void sub_23A13A1FC(char **a1, void (*a2)(uint64_t *))
{
  sub_23A128DEC(a1, a2);
}

void sub_23A13A204(uint64_t *a1, void (*a2)(uint64_t *), uint64_t a3)
{
  sub_23A127B28(a1, a2, a3);
}

uint64_t sub_23A13A210()
{
  uint64_t *v0;

  return sub_23A1324C4(v0[2], v0[3], v0[4]);
}

uint64_t sub_23A13A220(_QWORD *a1, _QWORD *a2)
{
  return sub_23A13A59C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A132C68);
}

unint64_t sub_23A13A230()
{
  unint64_t result;

  result = qword_2569449B0;
  if (!qword_2569449B0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F7DC, &type metadata for Spake2ShareRequest);
    atomic_store(result, (unint64_t *)&qword_2569449B0);
  }
  return result;
}

unint64_t sub_23A13A274()
{
  unint64_t result;

  result = qword_256946540;
  if (!qword_256946540)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CosmoError, &type metadata for CosmoError);
    atomic_store(result, (unint64_t *)&qword_256946540);
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_23A13A300(uint64_t a1)
{
  sub_23A13A4AC(a1, (void (*)(void))sub_23A13A318, (int)&type metadata for Spake2ShareRequest.Response, (void *)2);
}

unint64_t sub_23A13A318()
{
  unint64_t result;

  result = qword_2569449D8;
  if (!qword_2569449D8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F7B4, &type metadata for Spake2ShareRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2569449D8);
  }
  return result;
}

uint64_t sub_23A13A35C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *);
  _QWORD v6[2];
  char v7;

  v4 = *(uint64_t (**)(_QWORD *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 1;
  return v4(v6);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23A125ED8(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_23A13A3CC(uint64_t *a1)
{
  uint64_t v1;

  return sub_23A128048(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23A13A3DC()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23A125ED8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_23A13A418()
{
  uint64_t v0;

  return sub_23A1282A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_23A13A430()
{
  uint64_t *v0;

  return sub_23A132750(v0[2], v0[3], v0[4]);
}

uint64_t sub_23A13A440(_QWORD *a1, _QWORD *a2)
{
  return sub_23A13A59C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A133368);
}

unint64_t sub_23A13A44C()
{
  unint64_t result;

  result = qword_2569449E0;
  if (!qword_2569449E0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F78C, &type metadata for Spake2ConfirmRequest);
    atomic_store(result, (unint64_t *)&qword_2569449E0);
  }
  return result;
}

void sub_23A13A494(uint64_t a1)
{
  sub_23A13A4AC(a1, (void (*)(void))sub_23A13A4F8, (int)&type metadata for Spake2ConfirmRequest.Response, (void *)4);
}

void sub_23A13A4AC(uint64_t a1, void (*a2)(void), int a3, void *a4)
{
  uint64_t v4;

  sub_23A134160(*(id *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(void (**)(id, uint64_t, unint64_t, uint64_t))(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), a2, a3, a4);
}

void sub_23A13A4EC(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_23A125ED8((uint64_t)a1, a2);
}

unint64_t sub_23A13A4F8()
{
  unint64_t result;

  result = qword_2569449E8;
  if (!qword_2569449E8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F764, &type metadata for Spake2ConfirmRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2569449E8);
  }
  return result;
}

uint64_t sub_23A13A53C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23A131DF0(a1, a2);
  return a1;
}

uint64_t sub_23A13A554()
{
  uint64_t *v0;

  return sub_23A1329DC(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroy_34Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A13A590(_QWORD *a1, _QWORD *a2)
{
  return sub_23A13A59C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A133A68);
}

uint64_t sub_23A13A59C(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v3;

  return a3(*a1, a1[1], *a2, a2[1], *(unsigned int *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_23A13A5C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _QWORD v7[3];
  char v8;

  v5 = *(uint64_t (**)(_QWORD *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  v8 = a4 & 1;
  return v5(v7);
}

unint64_t sub_23A13A5FC()
{
  unint64_t result;

  result = qword_2569449F0;
  if (!qword_2569449F0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F73C, &type metadata for FileChannelSetupRequest);
    atomic_store(result, (unint64_t *)&qword_2569449F0);
  }
  return result;
}

uint64_t objectdestroy_40Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A13A670(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(void *, uint64_t, unint64_t, uint64_t);
  _BYTE v4[40];

  v2 = *(void (**)(void *, uint64_t, unint64_t, uint64_t))(v1 + 16);
  sub_23A13A980(a1, (uint64_t)v4, &qword_2569449F8);
  return sub_23A1345AC((uint64_t)v4, v2);
}

uint64_t sub_23A13A6C4(uint64_t a1)
{
  sub_23A13A6F8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

void sub_23A13A6F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_23A13A728()
{
  unint64_t result;

  result = qword_256944A00;
  if (!qword_256944A00)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F714, &type metadata for FileChannelSetupRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944A00);
  }
  return result;
}

uint64_t sub_23A13A76C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A13A7B0(char *a1)
{
  uint64_t v1;

  return sub_23A12CD84(a1, v1, sub_23A12CDF0);
}

uint64_t sub_23A13A7D0(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  return sub_23A130CF0(a1, a2, a3);
}

uint64_t sub_23A13A7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A12E5B4(a1, a2, a3);
}

uint64_t sub_23A13A7E4()
{
  return sub_23A13AE80(sub_23A136F3C);
}

uint64_t sub_23A13A7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23A137A40(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(v4 + 24));
}

uint64_t sub_23A13A804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return sub_23A138818(a1, a2, a3, a4, a5 & 1, *(void (**)(uint64_t, __int128 *, uint64_t, _QWORD))(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32));
}

uint64_t sub_23A13A814(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_23A13A824(a1, a2, a3);
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_23A13A824(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23A13A83C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23A13A854(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_23A13A898()
{
  unint64_t result;

  result = qword_256944A28;
  if (!qword_256944A28)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for FileListRequest, &type metadata for FileListRequest);
    atomic_store(result, (unint64_t *)&qword_256944A28);
  }
  return result;
}

uint64_t sub_23A13A8DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A13A900(uint64_t a1)
{
  uint64_t v1;

  return sub_23A137D8C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8), *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_23A13A924(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_23A13A93C()
{
  unint64_t result;

  result = qword_256944A30;
  if (!qword_256944A30)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for FileListRequest.Response, &type metadata for FileListRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944A30);
  }
  return result;
}

uint64_t sub_23A13A980(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A13A9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23A13AA04()
{
  return sub_23A13AE80(sub_23A137544);
}

uint64_t sub_23A13AA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23A137B40(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void (**)(char *, uint64_t, uint64_t))(v4 + 24), *(_QWORD *)(v4 + 32), type metadata accessor for RejectFileRequest, (void (*)(uint64_t, uint64_t, uint64_t))sub_23A1361E0, (uint64_t)&unk_250B24308, (uint64_t)sub_23A13AA74);
}

uint64_t sub_23A13AA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return sub_23A13919C(a1, a2, a3, a4, a5 & 1, *(void (**)(uint64_t, __int128 *, uint64_t, _QWORD))(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t sub_23A13AA74(uint64_t a1)
{
  return sub_23A13ADA0(a1, (uint64_t)&type metadata for RejectFileRequest.Response, (uint64_t (*)(void))sub_23A13AA88);
}

unint64_t sub_23A13AA88()
{
  unint64_t result;

  result = qword_256944A60;
  if (!qword_256944A60)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for RejectFileRequest.Response, &type metadata for RejectFileRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944A60);
  }
  return result;
}

uint64_t sub_23A13AACC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  return sub_23A12F654(a1, a2, a3);
}

uint64_t sub_23A13AAD4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  return sub_23A1305A4(a1, a2, a3, a4 & 1);
}

uint64_t sub_23A13AAE4()
{
  return sub_23A13AE80(sub_23A137240);
}

uint64_t sub_23A13AAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23A137B40(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void (**)(char *, uint64_t, uint64_t))(v4 + 24), *(_QWORD *)(v4 + 32), type metadata accessor for FileRequest, (void (*)(uint64_t, uint64_t, uint64_t))sub_23A135A98, (uint64_t)&unk_250B243D0, (uint64_t)sub_23A13AB98);
}

uint64_t sub_23A13AB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return sub_23A138C20(a1, a2, a3, a4, a5 & 1, *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32));
}

uint64_t sub_23A13AB54(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A13AB98(uint64_t a1)
{
  uint64_t v1;

  return sub_23A137E28(a1, *(void (**)(__int128 *))(v1 + 16));
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23A13ABDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A13AC20(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_23A13AC5C(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

void sub_23A13AC68(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_23A13AC74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23A13ACB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_23A13ACF4(uint64_t a1, void (*a2)(__int128 *))
{
  sub_23A12DE3C(a1, a2);
}

uint64_t sub_23A13ACFC(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  return sub_23A12E1B0(a1, a2, a3, a4 & 1);
}

uint64_t sub_23A13AD0C()
{
  return sub_23A13AE80(sub_23A136C38);
}

uint64_t sub_23A13AD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23A137940(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(v4 + 24));
}

uint64_t sub_23A13AD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return sub_23A13840C(a1, a2, a3, a4, a5 & 1, *(void (**)(uint64_t, __int128 *, uint64_t, _QWORD))(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32));
}

uint64_t sub_23A13AD3C(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_23A13A824(a1, a2, a3);
  return a1;
}

unint64_t sub_23A13AD48()
{
  unint64_t result;

  result = qword_256944A98;
  if (!qword_256944A98)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CloseRequest, &type metadata for CloseRequest);
    atomic_store(result, (unint64_t *)&qword_256944A98);
  }
  return result;
}

uint64_t sub_23A13AD8C(uint64_t a1)
{
  return sub_23A13ADA0(a1, (uint64_t)&type metadata for CloseRequest.Response, (uint64_t (*)(void))sub_23A13ADDC);
}

uint64_t sub_23A13ADA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;

  return sub_23A137FA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8), *(void (**)(_QWORD *))(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

unint64_t sub_23A13ADDC()
{
  unint64_t result;

  result = qword_256944AA0;
  if (!qword_256944AA0)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CloseRequest.Response, &type metadata for CloseRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944AA0);
  }
  return result;
}

uint64_t sub_23A13AE20(unsigned __int8 *a1, void (*a2)(_BYTE *), uint64_t a3)
{
  return sub_23A12D6AC(a1, a2, a3);
}

uint64_t sub_23A13AE28(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  return sub_23A12DCDC(a1, a2, a3, a4 & 1);
}

uint64_t objectdestroy_91Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A13AE74()
{
  return sub_23A13AE80(sub_23A136934);
}

uint64_t sub_23A13AE80(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t objectdestroy_28Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A13AEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23A137860(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void (**)(__int128 *, uint64_t (*)(uint64_t), uint64_t))(v4 + 24));
}

uint64_t objectdestroy_100Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A13AF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return sub_23A138024(a1, a2, a3, a4, a5 & 1, *(void (**)(_BYTE *, __int128 *, uint64_t, _QWORD))(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t sub_23A13AF18(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_23A13A824(a1, a2, a3);
  else
    return swift_bridgeObjectRelease();
}

unint64_t sub_23A13AF28()
{
  unint64_t result;

  result = qword_256944AA8;
  if (!qword_256944AA8)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for LeaseRequest, &type metadata for LeaseRequest);
    atomic_store(result, (unint64_t *)&qword_256944AA8);
  }
  return result;
}

uint64_t sub_23A13AF6C(uint64_t a1)
{
  uint64_t v1;

  return sub_23A137CE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(void (**)(uint64_t *))(v1 + 16));
}

unint64_t sub_23A13AF84()
{
  unint64_t result;

  result = qword_256944AB0;
  if (!qword_256944AB0)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for LeaseRequest.Response, &type metadata for LeaseRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944AB0);
  }
  return result;
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_23A13AFDC(a1, &qword_256944AC0);
}

void sub_23A13AFDC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_23A13B020()
{
  return sub_23A131E34(&qword_256944AC8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23A19C5B0);
}

uint64_t sub_23A13B04C()
{
  return sub_23A131E34(&qword_256944AD0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23A19C584);
}

uint64_t sub_23A13B078()
{
  return sub_23A131E34(&qword_256944AD8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23A19C620);
}

uint64_t CosmoFileHttpResponse.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_DWORD *)(a2 + *(int *)(type metadata accessor for CosmoFileHttpResponse(0) + 20)) = 200;
  v4 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t type metadata accessor for CosmoFileHttpResponse(uint64_t a1)
{
  return sub_23A141024(a1, qword_256944CF0);
}

uint64_t sub_23A13B194()
{
  uint64_t metadata_for_request;
  uint64_t v1;

  sub_23A19B59C();
  if (qword_256944418 != -1)
    swift_once();
  if (qword_256944420 != -1)
    swift_once();
  sub_23A19B524();
  swift_bridgeObjectRelease();
  nw_http_request_create();
  swift_release();
  metadata_for_request = nw_http_create_metadata_for_request();
  v1 = qword_256944430;
  swift_unknownObjectRetain();
  if (v1 != -1)
    swift_once();
  nw_http_fields_append();
  swift_unknownObjectRelease_n();
  return metadata_for_request;
}

uint64_t CosmoHttpRequest.metadata.getter(uint64_t a1, uint64_t a2)
{
  uint64_t metadata_for_request;
  uint64_t v5;

  (*(void (**)(void))(a2 + 56))();
  if (qword_256944418 != -1)
    swift_once();
  if (qword_256944420 != -1)
    swift_once();
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  sub_23A19B524();
  swift_bridgeObjectRelease();
  sub_23A19B524();
  swift_bridgeObjectRelease();
  nw_http_request_create();
  swift_release();
  swift_release();
  metadata_for_request = nw_http_create_metadata_for_request();
  v5 = qword_256944430;
  swift_unknownObjectRetain();
  if (v5 != -1)
    swift_once();
  nw_http_fields_append();
  swift_unknownObjectRelease_n();
  return metadata_for_request;
}

uint64_t sub_23A13B43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A68);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v11[6] = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = type metadata accessor for RejectFileRequest(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v11[4] = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v11[5] = (char *)v11 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_23A19AE28();
  v11[7] = *(_QWORD *)(v8 - 8);
  v11[8] = v8;
  MEMORY[0x24BDAC7A8](v8);
  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  sub_23A131E34(&qword_256944D58, type metadata accessor for RejectFileRequest, (uint64_t)&protocol conformance descriptor for RejectFileRequest);
  v9 = sub_23A19AAF8();
  swift_release();
  return v9;
}

uint64_t sub_23A13B930()
{
  uint64_t v0;

  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  sub_23A1420E0();
  v0 = sub_23A19AAF8();
  swift_release();
  return v0;
}

uint64_t sub_23A13BBC0(void (*a1)(void))
{
  uint64_t v2;

  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  a1();
  v2 = sub_23A19AAF8();
  swift_release();
  return v2;
}

uint64_t sub_23A13BE3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A90);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v11[6] = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = type metadata accessor for FileRequest(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v11[4] = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v11[5] = (char *)v11 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_23A19AE28();
  v11[7] = *(_QWORD *)(v8 - 8);
  v11[8] = v8;
  MEMORY[0x24BDAC7A8](v8);
  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  sub_23A131E34(&qword_256944D70, type metadata accessor for FileRequest, (uint64_t)&protocol conformance descriptor for FileRequest);
  v9 = sub_23A19AAF8();
  swift_release();
  return v9;
}

uint64_t CosmoHttpRequest.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23A19B710();
  v0 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v0);
  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  v1 = sub_23A19AAF8();
  swift_release();
  return v1;
}

uint64_t CosmoHttpRequest.file.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

BOOL CosmoHttpRequest.expectsFileResponse.getter()
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return AssociatedTypeWitness == type metadata accessor for CosmoFileHttpResponse(0);
}

uint64_t sub_23A13C724(uint64_t a1)
{
  return static CosmoHttpResponse._create(from:)(a1);
}

uint64_t sub_23A13C738(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  _DWORD v13[4];

  v5 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A13ABDC(a1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23A13AC20((uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
    sub_23A13A274();
    swift_allocError();
    *(_OWORD *)v9 = xmmword_23A19C730;
    *(_BYTE *)(v9 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    v11 = *v7;
    v12 = v7[1];
    sub_23A19AAEC();
    swift_allocObject();
    sub_23A19AAE0();
    a2();
    sub_23A19AAD4();
    swift_release();
    result = sub_23A125ED8(v11, v12);
    if (!v2)
      return v13[3];
  }
  return result;
}

uint64_t sub_23A13C898(uint64_t a1)
{
  return sub_23A13CB80(a1, (void (*)(void))sub_23A141F48);
}

uint64_t sub_23A13C8BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A13ABDC(a1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23A13AC20((uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
    sub_23A13A274();
    swift_allocError();
    *(_OWORD *)v6 = xmmword_23A19C730;
    *(_BYTE *)(v6 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    v8 = *v4;
    v9 = v4[1];
    sub_23A19AAEC();
    swift_allocObject();
    sub_23A19AAE0();
    sub_23A142168();
    sub_23A19AAD4();
    swift_release();
    return sub_23A125ED8(v8, v9);
  }
}

uint64_t sub_23A13CA0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A13ABDC(a1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23A13AC20((uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
    sub_23A13A274();
    swift_allocError();
    *(_OWORD *)v6 = xmmword_23A19C730;
    *(_BYTE *)(v6 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    v8 = *v4;
    v9 = v4[1];
    sub_23A19AAEC();
    swift_allocObject();
    sub_23A19AAE0();
    sub_23A14209C();
    sub_23A19AAD4();
    swift_release();
    return sub_23A125ED8(v8, v9);
  }
}

uint64_t sub_23A13CB5C(uint64_t a1)
{
  return sub_23A13CB80(a1, (void (*)(void))sub_23A141FD0);
}

uint64_t sub_23A13CB80(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A13ABDC(a1, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23A13AC20((uint64_t)v6, type metadata accessor for CosmoHttpResponseContent);
    sub_23A13A274();
    swift_allocError();
    *(_OWORD *)v8 = xmmword_23A19C730;
    *(_BYTE *)(v8 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    v10 = *v6;
    v11 = v6[1];
    sub_23A19AAEC();
    swift_allocObject();
    sub_23A19AAE0();
    a2();
    sub_23A19AAD4();
    swift_release();
    return sub_23A125ED8(v10, v11);
  }
}

uint64_t static CosmoHttpResponse._create(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A13ABDC(a1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23A13AC20((uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
    sub_23A13A274();
    swift_allocError();
    *(_OWORD *)v6 = xmmword_23A19C730;
    *(_BYTE *)(v6 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    v8 = *v4;
    v9 = v4[1];
    sub_23A19AAEC();
    swift_allocObject();
    sub_23A19AAE0();
    sub_23A19AAD4();
    swift_release();
    return sub_23A125ED8(v8, v9);
  }
}

uint64_t sub_23A13CE38@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  uint64_t v9;

  v8 = a1;
  v9 = a2;
  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  sub_23A142058();
  v4 = sub_23A19AAF8();
  v6 = v5;
  swift_release();
  *a3 = v4;
  a3[1] = v6;
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23A13D110@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  sub_23A142124();
  v5 = sub_23A19AAF8();
  v7 = v6;
  swift_release();
  *a4 = v5;
  a4[1] = v7;
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23A13D3EC@<X0>(void (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  a1();
  v4 = sub_23A19AAF8();
  v6 = v5;
  swift_release();
  *a2 = v4;
  a2[1] = v6;
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t CosmoHttpResponse._contents.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = sub_23A19B710();
  v1 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v1);
  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  v2 = sub_23A19AAF8();
  v4 = v3;
  swift_release();
  *a1 = v2;
  a1[1] = v4;
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23A13DA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t metadata_for_response;
  _QWORD v22[2];

  v1 = v0;
  v2 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A19AC0C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CosmoFileHttpResponse(0);
  nw_http_response_create_well_known();
  v12 = qword_256944430;
  swift_unknownObjectRetain();
  if (v12 != -1)
    swift_once();
  nw_http_fields_append();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v4, v1, v8);
  swift_storeEnumTagMultiPayload();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v4, v8);
    v13 = 0;
  }
  else
  {
    sub_23A13AC20((uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
    v13 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v13, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_23A13ACB8((uint64_t)v7, &qword_256945140);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v14 = URL.fileSize.getter();
    if ((v15 & 1) != 0)
    {
      if (qword_256944380 != -1)
        swift_once();
      v16 = sub_23A19AE28();
      __swift_project_value_buffer(v16, (uint64_t)qword_25694EAF8);
      v17 = sub_23A19AE10();
      v18 = sub_23A19B6A4();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_23A123000, v17, v18, "File specified, but could not read file-size to set 'Content-Length'", v19, 2u);
        MEMORY[0x23B842FA4](v19, -1, -1);
      }

    }
    else
    {
      v22[1] = v14;
      swift_unknownObjectRetain();
      sub_23A19B8FC();
      sub_23A19B524();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
    }
    if (qword_256944428 != -1)
      swift_once();
    sub_23A19ABC4();
    sub_23A19B524();
    swift_bridgeObjectRelease();
    nw_http_fields_append();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release();
  }
  metadata_for_response = nw_http_create_metadata_for_response();
  swift_unknownObjectRelease();
  return metadata_for_response;
}

uint64_t sub_23A13DDD4(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  char *v22;
  uint64_t metadata_for_response;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v26 = a3;
  v5 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19AC0C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v27 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  nw_http_response_create_well_known();
  v14 = qword_256944430;
  swift_unknownObjectRetain();
  if (v14 != -1)
    swift_once();
  nw_http_fields_append();
  swift_unknownObjectRelease();
  sub_23A13D110(a1, a2, v26, (uint64_t *)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v7, v11);
    v15 = 0;
  }
  else
  {
    sub_23A125ED8(*(_QWORD *)v7, *((_QWORD *)v7 + 1));
    v15 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v15, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_23A13ACB8((uint64_t)v10, &qword_256945140);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v27, v10, v11);
    v16 = URL.fileSize.getter();
    if ((v17 & 1) != 0)
    {
      if (qword_256944380 != -1)
        swift_once();
      v18 = sub_23A19AE28();
      __swift_project_value_buffer(v18, (uint64_t)qword_25694EAF8);
      v19 = sub_23A19AE10();
      v20 = sub_23A19B6A4();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_23A123000, v19, v20, "File specified, but could not read file-size to set 'Content-Length'", v21, 2u);
        MEMORY[0x23B842FA4](v21, -1, -1);
      }

    }
    else
    {
      v28 = v16;
      swift_unknownObjectRetain();
      sub_23A19B8FC();
      sub_23A19B524();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
    }
    if (qword_256944428 != -1)
      swift_once();
    v22 = v27;
    sub_23A19ABC4();
    sub_23A19B524();
    swift_bridgeObjectRelease();
    nw_http_fields_append();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v11);
    swift_release();
  }
  metadata_for_response = nw_http_create_metadata_for_response();
  swift_unknownObjectRelease();
  return metadata_for_response;
}

uint64_t sub_23A13E184(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t metadata_for_response;
  _QWORD v24[2];

  v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A19AC0C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v24[0] = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  nw_http_response_create_well_known();
  v13 = qword_256944430;
  swift_unknownObjectRetain();
  if (v13 != -1)
    swift_once();
  nw_http_fields_append();
  swift_unknownObjectRelease();
  sub_23A13CE38(a1, a2, (uint64_t *)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v6, v10);
    v14 = 0;
  }
  else
  {
    sub_23A125ED8(*(_QWORD *)v6, *((_QWORD *)v6 + 1));
    v14 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v14, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_23A13ACB8((uint64_t)v9, &qword_256945140);
  }
  else
  {
    (*(void (**)(_QWORD, char *, uint64_t))(v11 + 32))(v24[0], v9, v10);
    v15 = URL.fileSize.getter();
    if ((v16 & 1) != 0)
    {
      if (qword_256944380 != -1)
        swift_once();
      v17 = sub_23A19AE28();
      __swift_project_value_buffer(v17, (uint64_t)qword_25694EAF8);
      v18 = sub_23A19AE10();
      v19 = sub_23A19B6A4();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_23A123000, v18, v19, "File specified, but could not read file-size to set 'Content-Length'", v20, 2u);
        MEMORY[0x23B842FA4](v20, -1, -1);
      }

    }
    else
    {
      v24[1] = v15;
      swift_unknownObjectRetain();
      sub_23A19B8FC();
      sub_23A19B524();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
    }
    if (qword_256944428 != -1)
      swift_once();
    v21 = v24[0];
    sub_23A19ABC4();
    sub_23A19B524();
    swift_bridgeObjectRelease();
    nw_http_fields_append();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
    swift_release();
  }
  metadata_for_response = nw_http_create_metadata_for_response();
  swift_unknownObjectRelease();
  return metadata_for_response;
}

uint64_t sub_23A13E52C(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char *v21;
  uint64_t metadata_for_response;
  _QWORD v24[2];
  char *v25;
  uint64_t v26;

  v24[1] = a3;
  v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A19AC0C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v25 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  nw_http_response_create_well_known();
  v13 = qword_256944430;
  swift_unknownObjectRetain();
  if (v13 != -1)
    swift_once();
  nw_http_fields_append();
  swift_unknownObjectRelease();
  sub_23A13D3EC(a2, (uint64_t *)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v6, v10);
    v14 = 0;
  }
  else
  {
    sub_23A125ED8(*(_QWORD *)v6, *((_QWORD *)v6 + 1));
    v14 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v14, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_23A13ACB8((uint64_t)v9, &qword_256945140);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v25, v9, v10);
    v15 = URL.fileSize.getter();
    if ((v16 & 1) != 0)
    {
      if (qword_256944380 != -1)
        swift_once();
      v17 = sub_23A19AE28();
      __swift_project_value_buffer(v17, (uint64_t)qword_25694EAF8);
      v18 = sub_23A19AE10();
      v19 = sub_23A19B6A4();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_23A123000, v18, v19, "File specified, but could not read file-size to set 'Content-Length'", v20, 2u);
        MEMORY[0x23B842FA4](v20, -1, -1);
      }

    }
    else
    {
      v26 = v15;
      swift_unknownObjectRetain();
      sub_23A19B8FC();
      sub_23A19B524();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
    }
    if (qword_256944428 != -1)
      swift_once();
    v21 = v25;
    sub_23A19ABC4();
    sub_23A19B524();
    swift_bridgeObjectRelease();
    nw_http_fields_append();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, v10);
    swift_release();
  }
  metadata_for_response = nw_http_create_metadata_for_response();
  swift_unknownObjectRelease();
  return metadata_for_response;
}

uint64_t CosmoHttpResponse.metadata.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t metadata_for_response;
  _QWORD v20[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A19AC0C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  nw_http_response_create_well_known();
  v11 = qword_256944430;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  nw_http_fields_append();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 24))(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23A13ACB8((uint64_t)v6, &qword_256945140);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v12 = URL.fileSize.getter();
    if ((v13 & 1) != 0)
    {
      if (qword_256944380 != -1)
        swift_once();
      v14 = sub_23A19AE28();
      __swift_project_value_buffer(v14, (uint64_t)qword_25694EAF8);
      v15 = sub_23A19AE10();
      v16 = sub_23A19B6A4();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_23A123000, v15, v16, "File specified, but could not read file-size to set 'Content-Length'", v17, 2u);
        MEMORY[0x23B842FA4](v17, -1, -1);
      }

    }
    else
    {
      v20[1] = v12;
      swift_unknownObjectRetain();
      sub_23A19B8FC();
      sub_23A19B524();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
    }
    if (qword_256944428 != -1)
      swift_once();
    sub_23A19ABC4();
    sub_23A19B524();
    swift_bridgeObjectRelease();
    nw_http_fields_append();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
  metadata_for_response = nw_http_create_metadata_for_response();
  swift_unknownObjectRelease();
  return metadata_for_response;
}

uint64_t CosmoHttpResponse.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  if (swift_getEnumCaseMultiPayload() != 1)
    return *(_QWORD *)v6;
  sub_23A13AC20((uint64_t)v6, type metadata accessor for CosmoHttpResponseContent);
  return 0;
}

uint64_t CosmoHttpResponse.file.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_23A19AC0C();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, v9);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
  }
  else
  {
    sub_23A13AC20((uint64_t)v8, type metadata accessor for CosmoHttpResponseContent);
    v12 = sub_23A19AC0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
}

uint64_t CosmoHttpResponse.expectsFileResponse.getter()
{
  return 0;
}

uint64_t CosmoFileHttpResponse.status.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for CosmoFileHttpResponse(0) + 20));
}

uint64_t CosmoFileHttpResponse.status.setter(int a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CosmoFileHttpResponse(0);
  *(_DWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*CosmoFileHttpResponse.status.modify())()
{
  type metadata accessor for CosmoFileHttpResponse(0);
  return nullsub_1;
}

uint64_t static CosmoFileHttpResponse._create(from:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944BB0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v31 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - v6;
  v8 = type metadata accessor for CosmoHttpResponseContent(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v28 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v29 = (uint64_t)&v28 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v28 - v14;
  v16 = sub_23A19AC0C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1;
  sub_23A13ABDC(a1, (uint64_t)v15, type metadata accessor for CosmoHttpResponseContent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v20(v19, v15, v16);
    v21 = v30;
    v20(v30, v19, v16);
    result = type metadata accessor for CosmoFileHttpResponse(0);
    *(_DWORD *)&v21[*(int *)(result + 20)] = 200;
  }
  else
  {
    sub_23A13AC20((uint64_t)v15, type metadata accessor for CosmoHttpResponseContent);
    v32 = 0;
    v33 = 0xE000000000000000;
    sub_23A19B794();
    sub_23A19B590();
    sub_23A13ABDC(v34, (uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    v23 = v31;
    sub_23A13AC74((uint64_t)v7, v31, &qword_256944BB0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v23, 1, v8) != 1)
    {
      v24 = v29;
      sub_23A13AB54(v23, v29, type metadata accessor for CosmoHttpResponseContent);
      sub_23A13ABDC(v24, v28, type metadata accessor for CosmoHttpResponseContent);
      sub_23A19B518();
      sub_23A13AC20(v24, type metadata accessor for CosmoHttpResponseContent);
    }
    sub_23A13ACB8((uint64_t)v7, &qword_256944BB0);
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v25 = v32;
    v26 = v33;
    sub_23A13A274();
    swift_allocError();
    *(_QWORD *)v27 = v25;
    *(_QWORD *)(v27 + 8) = v26;
    *(_BYTE *)(v27 + 16) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t CosmoFileHttpResponse._contents.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23A19AC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23A13F1B0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x737574617473;
  else
    return 7107189;
}

BOOL sub_23A13F1DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23A13F1F4()
{
  char *v0;

  return sub_23A13F1B0(*v0);
}

uint64_t sub_23A13F1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A141DF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A13F220()
{
  return 0;
}

void sub_23A13F22C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23A13F238()
{
  sub_23A141058();
  return sub_23A19B9D4();
}

uint64_t sub_23A13F260()
{
  sub_23A141058();
  return sub_23A19B9E0();
}

uint64_t CosmoFileHttpResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944BB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A141058();
  sub_23A19B9C8();
  v8[15] = 0;
  sub_23A19AC0C();
  sub_23A131E34(&qword_256944BC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_23A19B8CC();
  if (!v1)
  {
    type metadata accessor for CosmoFileHttpResponse(0);
    v8[14] = 1;
    sub_23A19B8E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CosmoFileHttpResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;

  v23 = a2;
  v26 = sub_23A19AC0C();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v25 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944BD0);
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CosmoFileHttpResponse(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(int *)(v9 + 20);
  *(_DWORD *)&v11[v12] = 200;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A141058();
  sub_23A19B9BC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v12;
  v22 = v11;
  v13 = v5;
  v14 = v24;
  v29 = 0;
  sub_23A131E34(&qword_256944BD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v16 = v25;
  v15 = v26;
  sub_23A19B884();
  v17 = (uint64_t)v22;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v16, v15);
  v28 = 1;
  v18 = sub_23A19B89C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v27);
  *(_DWORD *)(v17 + v21) = v18;
  sub_23A13ABDC(v17, v23, type metadata accessor for CosmoFileHttpResponse);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_23A13AC20(v17, type metadata accessor for CosmoFileHttpResponse);
}

uint64_t sub_23A13F650(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned int *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_23A13F65C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return static CosmoFileHttpResponse._create(from:)(a1, a2);
}

uint64_t sub_23A13F670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23A19AC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23A13F6C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CosmoFileHttpResponse.init(from:)(a1, a2);
}

uint64_t sub_23A13F6D4(_QWORD *a1)
{
  return CosmoFileHttpResponse.encode(to:)(a1);
}

uint64_t sub_23A13F6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A19AC0C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, v0, v4);
  swift_storeEnumTagMultiPayload();
  if (swift_getEnumCaseMultiPayload() != 1)
    return *(_QWORD *)v3;
  sub_23A13AC20((uint64_t)v3, type metadata accessor for CosmoHttpResponseContent);
  return 0;
}

uint64_t sub_23A13F7AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A19AC0C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, v2, v7);
  swift_storeEnumTagMultiPayload();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
    v9 = 0;
  }
  else
  {
    sub_23A13AC20((uint64_t)v6, type metadata accessor for CosmoHttpResponseContent);
    v9 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v9, 1, v7);
}

uint64_t sub_23A13F8A4()
{
  return 0;
}

uint64_t sub_23A13F8AC()
{
  return 1;
}

void sub_23A13F8C0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23A13F8CC()
{
  sub_23A142428();
  return sub_23A19B9D4();
}

uint64_t sub_23A13F8F4()
{
  sub_23A142428();
  return sub_23A19B9E0();
}

uint64_t sub_23A13F91C()
{
  unsigned int *v0;

  return *v0;
}

uint64_t sub_23A13F924@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A13C738(a1, (void (*)(void))sub_23A142290);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23A13F95C@<X0>(uint64_t *a1@<X8>)
{
  return sub_23A13D3EC((void (*)(void))sub_23A1422D4, a1);
}

uint64_t sub_23A13F984@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_23A13FB54(a1, &qword_256944DF8, (void (*)(void))sub_23A142428, a2);
}

uint64_t sub_23A13F9B0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23A13FE74(a1, a2, a3, &qword_256944E08, (void (*)(void))sub_23A142428);
}

uint64_t sub_23A13F9DC()
{
  unsigned int *v0;

  return sub_23A13E52C(*v0, (void (*)(void))sub_23A1422D4, (uint64_t)&type metadata for CosmoBadRequestHttpResponse);
}

uint64_t sub_23A13FA04(uint64_t a1, uint64_t a2)
{
  return sub_23A14050C(a1, a2, (void (*)(void))sub_23A1422D4);
}

uint64_t sub_23A13FA18@<X0>(uint64_t a1@<X8>)
{
  return sub_23A1405D4((void (*)(void))sub_23A1422D4, a1);
}

uint64_t sub_23A13FA2C()
{
  return sub_23A19B98C();
}

uint64_t sub_23A13FA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A142864(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23A13FA78()
{
  sub_23A1423E4();
  return sub_23A19B9D4();
}

uint64_t sub_23A13FAA0()
{
  sub_23A1423E4();
  return sub_23A19B9E0();
}

uint64_t sub_23A13FAC8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A13C738(a1, (void (*)(void))sub_23A1421F4);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23A13FB00@<X0>(uint64_t *a1@<X8>)
{
  return sub_23A13D3EC((void (*)(void))sub_23A142238, a1);
}

uint64_t sub_23A13FB28@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_23A13FB54(a1, &qword_256944DE0, (void (*)(void))sub_23A1423E4, a2);
}

uint64_t sub_23A13FB54@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, _DWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t result;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;

  v13 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v14 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_23A19B9BC();
  if (v4)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v10 = sub_23A19B89C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v13 = v10;
  return result;
}

uint64_t sub_23A13FC74(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23A13FE74(a1, a2, a3, &qword_256944DF0, (void (*)(void))sub_23A1423E4);
}

uint64_t sub_23A13FCA0()
{
  unsigned int *v0;

  return sub_23A13E52C(*v0, (void (*)(void))sub_23A142238, (uint64_t)&type metadata for CosmoNotFoundHttpResponse);
}

uint64_t sub_23A13FCC8(uint64_t a1, uint64_t a2)
{
  return sub_23A14050C(a1, a2, (void (*)(void))sub_23A142238);
}

uint64_t sub_23A13FCDC@<X0>(uint64_t a1@<X8>)
{
  return sub_23A1405D4((void (*)(void))sub_23A142238, a1);
}

uint64_t sub_23A13FCF0()
{
  sub_23A19B980();
  sub_23A19B98C();
  return sub_23A19B9A4();
}

uint64_t sub_23A13FD30()
{
  sub_23A19B980();
  sub_23A19B98C();
  return sub_23A19B9A4();
}

uint64_t sub_23A13FD6C()
{
  sub_23A14246C();
  return sub_23A19B9D4();
}

uint64_t sub_23A13FD94()
{
  sub_23A14246C();
  return sub_23A19B9E0();
}

uint64_t sub_23A13FDBC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A13C738(a1, (void (*)(void))sub_23A14235C);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23A13FDF4@<X0>(uint64_t *a1@<X8>)
{
  return sub_23A13D3EC((void (*)(void))sub_23A1423A0, a1);
}

uint64_t sub_23A13FE1C@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_23A13FB54(a1, &qword_256944E10, (void (*)(void))sub_23A14246C, a2);
}

uint64_t sub_23A13FE48(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23A13FE74(a1, a2, a3, &qword_256944E20, (void (*)(void))sub_23A14246C);
}

uint64_t sub_23A13FE74(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  void (*v12)(void);

  v12 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12();
  sub_23A19B9C8();
  sub_23A19B8E4();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23A13FF64()
{
  unsigned int *v0;

  return sub_23A13E52C(*v0, (void (*)(void))sub_23A1423A0, (uint64_t)&type metadata for CosmoInternalServerErrorHttpResponse);
}

uint64_t sub_23A13FF8C(uint64_t a1, uint64_t a2)
{
  return sub_23A14050C(a1, a2, (void (*)(void))sub_23A1423A0);
}

uint64_t sub_23A13FFA0@<X0>(uint64_t a1@<X8>)
{
  return sub_23A1405D4((void (*)(void))sub_23A1423A0, a1);
}

uint64_t sub_23A13FFCC(uint64_t a1)
{
  return sub_23A13C8BC(a1);
}

uint64_t sub_23A13FFE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23A13D110(*(_DWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23A13FFEC()
{
  uint64_t v0;

  return sub_23A13DDD4(*(_DWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_23A13FFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;

  v1 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A13D110(*(_DWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), v3);
  if (swift_getEnumCaseMultiPayload() != 1)
    return *v3;
  sub_23A13AC20((uint64_t)v3, type metadata accessor for CosmoHttpResponseContent);
  return 0;
}

uint64_t sub_23A140098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A13D110(*(_DWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t *)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23A19AC0C();
    v7 = *(_QWORD *)(v6 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  else
  {
    sub_23A125ED8(*(_QWORD *)v5, *((_QWORD *)v5 + 1));
    v9 = sub_23A19AC0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_23A140184()
{
  return sub_23A141CC0();
}

uint64_t sub_23A1401A8()
{
  return sub_23A13B930();
}

uint64_t sub_23A1401B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_23A1401EC(uint64_t a1)
{
  return sub_23A13CA0C(a1);
}

uint64_t sub_23A140200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23A13CE38(*(_DWORD *)v1, *(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_23A14020C()
{
  uint64_t v0;

  return sub_23A13E184(*(_DWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_23A140218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;

  v1 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A13CE38(*(_DWORD *)v0, *(_QWORD *)(v0 + 8), v3);
  if (swift_getEnumCaseMultiPayload() != 1)
    return *v3;
  sub_23A13AC20((uint64_t)v3, type metadata accessor for CosmoHttpResponseContent);
  return 0;
}

uint64_t sub_23A1402B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A13CE38(*(_DWORD *)v1, *(_QWORD *)(v1 + 8), (uint64_t *)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23A19AC0C();
    v7 = *(_QWORD *)(v6 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  else
  {
    sub_23A125ED8(*(_QWORD *)v5, *((_QWORD *)v5 + 1));
    v9 = sub_23A19AC0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_23A1403A4()
{
  return sub_23A141CC0();
}

uint64_t sub_23A1403C8()
{
  return sub_23A13BBC0((void (*)(void))sub_23A142014);
}

uint64_t sub_23A1403F0()
{
  return sub_23A13B194();
}

uint64_t sub_23A140410@<X0>(uint64_t *a1@<X8>)
{
  return sub_23A13D3EC((void (*)(void))sub_23A141F8C, a1);
}

uint64_t sub_23A140438()
{
  unsigned int *v0;

  return sub_23A13E52C(*v0, (void (*)(void))sub_23A141F8C, (uint64_t)&type metadata for RejectFileRequest.Response);
}

uint64_t sub_23A140460(uint64_t a1, uint64_t a2)
{
  return sub_23A14050C(a1, a2, (void (*)(void))sub_23A141F8C);
}

uint64_t sub_23A140474@<X0>(uint64_t a1@<X8>)
{
  return sub_23A1405D4((void (*)(void))sub_23A141F8C, a1);
}

uint64_t sub_23A140488()
{
  return sub_23A13B194();
}

uint64_t sub_23A1404A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_23A13D3EC((void (*)(void))sub_23A141F04, a1);
}

uint64_t sub_23A1404D0()
{
  unsigned int *v0;

  return sub_23A13E52C(*v0, (void (*)(void))sub_23A141F04, (uint64_t)&type metadata for CloseRequest.Response);
}

uint64_t sub_23A1404F8(uint64_t a1, uint64_t a2)
{
  return sub_23A14050C(a1, a2, (void (*)(void))sub_23A141F04);
}

uint64_t sub_23A14050C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v8;

  v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A13D3EC(a3, v6);
  if (swift_getEnumCaseMultiPayload() != 1)
    return *v6;
  sub_23A13AC20((uint64_t)v6, type metadata accessor for CosmoHttpResponseContent);
  return 0;
}

uint64_t sub_23A1405C0@<X0>(uint64_t a1@<X8>)
{
  return sub_23A1405D4((void (*)(void))sub_23A141F04, a1);
}

uint64_t sub_23A1405D4@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A13D3EC(a1, (uint64_t *)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23A19AC0C();
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
  else
  {
    sub_23A125ED8(*(_QWORD *)v6, *((_QWORD *)v6 + 1));
    v10 = sub_23A19AC0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 1, 1, v10);
  }
}

uint64_t sub_23A1406D4()
{
  return sub_23A141CC0();
}

uint64_t sub_23A1406F8()
{
  return sub_23A13BBC0((void (*)(void))sub_23A141EC0);
}

uint64_t sub_23A14071C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23A1407EC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23A13A9C4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23A13A9C4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_23A1407EC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23A19B734();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23A1409A4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23A19B7C4();
  if (!v8)
  {
    sub_23A19B7E8();
    __break(1u);
LABEL_17:
    result = sub_23A19B830();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23A1409A4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23A140A38(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23A140BAC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23A140BAC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23A140A38(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23A14EBCC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23A19B7A0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23A19B7E8();
      __break(1u);
LABEL_10:
      v2 = sub_23A19B5B4();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23A19B830();
    __break(1u);
LABEL_14:
    result = sub_23A19B7E8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_23A140BAC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256944DA8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23A19B830();
  __break(1u);
  return result;
}

uint64_t _s5Cosmo0A5ErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v9;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 != 1)
      __asm { BR              X9 }
    if (v7 == 1)
    {
      if (v3 == v6 && v2 == v5)
        v9 = 1;
      else
        v9 = sub_23A19B908();
      sub_23A13A924(v6, v5, 1u);
      sub_23A13A924(v3, v2, 1u);
      sub_23A13A824(v3, v2, 1u);
      sub_23A13A824(v6, v5, 1u);
      return v9 & 1;
    }
LABEL_10:
    sub_23A13A924(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
    sub_23A13A924(v3, v2, v4);
    sub_23A13A824(v3, v2, v4);
    sub_23A13A824(v6, v5, v7);
    v9 = 0;
    return v9 & 1;
  }
  if (*(_BYTE *)(a2 + 16))
    goto LABEL_10;
  if (v3 == v6 && v2 == v5)
    v9 = 1;
  else
    v9 = sub_23A19B908();
  sub_23A13A924(v6, v5, 0);
  sub_23A13A924(v3, v2, 0);
  sub_23A13A824(v3, v2, 0);
  sub_23A13A824(v6, v5, 0);
  return v9 & 1;
}

uint64_t _s5Cosmo0A11HttpRequestPAAE12instancePathSSvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t _s5Cosmo0A11HttpRequestPAAE14instanceMethodSSvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t type metadata accessor for CosmoHttpResponseContent(uint64_t a1)
{
  return sub_23A141024(a1, qword_256944C60);
}

uint64_t sub_23A141024(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23A141058()
{
  unint64_t result;

  result = qword_256944BC0;
  if (!qword_256944BC0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CA5C, &type metadata for CosmoFileHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944BC0);
  }
  return result;
}

uint64_t sub_23A14109C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_23A131E34(&qword_256944BE0, type metadata accessor for CosmoFileHttpResponse, (uint64_t)&protocol conformance descriptor for CosmoFileHttpResponse);
  result = sub_23A131E34(&qword_256944BE8, type metadata accessor for CosmoFileHttpResponse, (uint64_t)&protocol conformance descriptor for CosmoFileHttpResponse);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t dispatch thunk of CosmoHttpMessage.metadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CosmoHttpMessage.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CosmoHttpMessage.file.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CosmoHttpMessage.expectsFileResponse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static CosmoHttpRequest.path.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of static CosmoHttpRequest.method.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CosmoHttpResponse.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static CosmoHttpResponse._create(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of CosmoHttpResponse._contents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CosmoHttpResponseContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23A19AC0C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v9 = *a2;
      v8 = a2[1];
      sub_23A131DF0(v9, v8);
      *a1 = v9;
      a1[1] = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CosmoHttpResponseContent(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return sub_23A125ED8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v2 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t *initializeWithCopy for CosmoHttpResponseContent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23A19AC0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v6 = *a2;
    v5 = a2[1];
    sub_23A131DF0(v6, v5);
    *a1 = v6;
    a1[1] = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for CosmoHttpResponseContent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23A13AC20((uint64_t)a1, type metadata accessor for CosmoHttpResponseContent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23A19AC0C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      v6 = *a2;
      v5 = a2[1];
      sub_23A131DF0(v6, v5);
      *a1 = v6;
      a1[1] = v5;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for CosmoHttpResponseContent(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23A19AC0C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for CosmoHttpResponseContent(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23A13AC20((uint64_t)a1, type metadata accessor for CosmoHttpResponseContent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23A19AC0C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for NetworkDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23A1414F8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23A141508()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A19AC0C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CosmoFileHttpResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23A19AC0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for CosmoFileHttpResponse(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CosmoFileHttpResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23A19AC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for CosmoFileHttpResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23A19AC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for CosmoFileHttpResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23A19AC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CosmoFileHttpResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23A19AC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoFileHttpResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A1417B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CosmoFileHttpResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A1417F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23A141838()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A19AC0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for CosmoError(uint64_t a1)
{
  return sub_23A13A824(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Cosmo10CosmoErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23A13A924(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CosmoError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23A13A924(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23A13A824(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CosmoError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23A13A824(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CosmoError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23A141A40(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23A141A58(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CosmoError()
{
  return &type metadata for CosmoError;
}

uint64_t getEnumTagSinglePayload for CosmoSerialChannelHost.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CosmoFileHttpResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A141B5C + 4 * byte_23A19C78C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A141B90 + 4 * byte_23A19C787[v4]))();
}

uint64_t sub_23A141B90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A141B98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A141BA0);
  return result;
}

uint64_t sub_23A141BAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A141BB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A141BB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A141BC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23A141BCC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CosmoFileHttpResponse.CodingKeys()
{
  return &type metadata for CosmoFileHttpResponse.CodingKeys;
}

unint64_t sub_23A141BEC()
{
  unint64_t result;

  result = qword_256944D28;
  if (!qword_256944D28)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CA34, &type metadata for CosmoFileHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944D28);
  }
  return result;
}

unint64_t sub_23A141C34()
{
  unint64_t result;

  result = qword_256944D30;
  if (!qword_256944D30)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19C9A4, &type metadata for CosmoFileHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944D30);
  }
  return result;
}

unint64_t sub_23A141C7C()
{
  unint64_t result;

  result = qword_256944D38;
  if (!qword_256944D38)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19C9CC, &type metadata for CosmoFileHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944D38);
  }
  return result;
}

uint64_t sub_23A141CC0()
{
  uint64_t metadata_for_request;
  uint64_t v1;

  sub_23A19B59C();
  if (qword_256944418 != -1)
    swift_once();
  if (qword_256944420 != -1)
    swift_once();
  sub_23A19B524();
  swift_bridgeObjectRelease();
  nw_http_request_create();
  swift_release();
  metadata_for_request = nw_http_create_metadata_for_request();
  v1 = qword_256944430;
  swift_unknownObjectRetain();
  if (v1 != -1)
    swift_once();
  nw_http_fields_append();
  swift_unknownObjectRelease_n();
  return metadata_for_request;
}

uint64_t sub_23A141DF0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v3 || (sub_23A19B908() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23A19B908();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23A141EC0()
{
  unint64_t result;

  result = qword_256944D40;
  if (!qword_256944D40)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CloseRequest, &type metadata for CloseRequest);
    atomic_store(result, (unint64_t *)&qword_256944D40);
  }
  return result;
}

unint64_t sub_23A141F04()
{
  unint64_t result;

  result = qword_256944D48;
  if (!qword_256944D48)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CloseRequest.Response, &type metadata for CloseRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944D48);
  }
  return result;
}

unint64_t sub_23A141F48()
{
  unint64_t result;

  result = qword_256944D50;
  if (!qword_256944D50)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CloseRequest.Response, &type metadata for CloseRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944D50);
  }
  return result;
}

unint64_t sub_23A141F8C()
{
  unint64_t result;

  result = qword_256944D60;
  if (!qword_256944D60)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for RejectFileRequest.Response, &type metadata for RejectFileRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944D60);
  }
  return result;
}

unint64_t sub_23A141FD0()
{
  unint64_t result;

  result = qword_256944D68;
  if (!qword_256944D68)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for RejectFileRequest.Response, &type metadata for RejectFileRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944D68);
  }
  return result;
}

unint64_t sub_23A142014()
{
  unint64_t result;

  result = qword_256944D78;
  if (!qword_256944D78)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for FileListRequest, &type metadata for FileListRequest);
    atomic_store(result, (unint64_t *)&qword_256944D78);
  }
  return result;
}

unint64_t sub_23A142058()
{
  unint64_t result;

  result = qword_256944D80;
  if (!qword_256944D80)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for FileListRequest.Response, &type metadata for FileListRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944D80);
  }
  return result;
}

unint64_t sub_23A14209C()
{
  unint64_t result;

  result = qword_256944D88;
  if (!qword_256944D88)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for FileListRequest.Response, &type metadata for FileListRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944D88);
  }
  return result;
}

unint64_t sub_23A1420E0()
{
  unint64_t result;

  result = qword_256944D90;
  if (!qword_256944D90)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for LeaseRequest, &type metadata for LeaseRequest);
    atomic_store(result, (unint64_t *)&qword_256944D90);
  }
  return result;
}

unint64_t sub_23A142124()
{
  unint64_t result;

  result = qword_256944D98;
  if (!qword_256944D98)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for LeaseRequest.Response, &type metadata for LeaseRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944D98);
  }
  return result;
}

unint64_t sub_23A142168()
{
  unint64_t result;

  result = qword_256944DA0;
  if (!qword_256944DA0)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for LeaseRequest.Response, &type metadata for LeaseRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256944DA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoNotFoundHttpResponse()
{
  return &type metadata for CosmoNotFoundHttpResponse;
}

ValueMetadata *type metadata accessor for CosmoBadRequestHttpResponse()
{
  return &type metadata for CosmoBadRequestHttpResponse;
}

ValueMetadata *type metadata accessor for CosmoInternalServerErrorHttpResponse()
{
  return &type metadata for CosmoInternalServerErrorHttpResponse;
}

uint64_t sub_23A1421E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A14232C(a1, a2, a3, (uint64_t (*)(void))sub_23A1421F4, (uint64_t (*)(void))sub_23A142238);
}

unint64_t sub_23A1421F4()
{
  unint64_t result;

  result = qword_256944DB0;
  if (!qword_256944DB0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CC10, &type metadata for CosmoNotFoundHttpResponse);
    atomic_store(result, (unint64_t *)&qword_256944DB0);
  }
  return result;
}

unint64_t sub_23A142238()
{
  unint64_t result;

  result = qword_256944DB8;
  if (!qword_256944DB8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CBE8, &type metadata for CosmoNotFoundHttpResponse);
    atomic_store(result, (unint64_t *)&qword_256944DB8);
  }
  return result;
}

uint64_t sub_23A14227C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A14232C(a1, a2, a3, (uint64_t (*)(void))sub_23A142290, (uint64_t (*)(void))sub_23A1422D4);
}

unint64_t sub_23A142290()
{
  unint64_t result;

  result = qword_256944DC0;
  if (!qword_256944DC0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CBB0, &type metadata for CosmoBadRequestHttpResponse);
    atomic_store(result, (unint64_t *)&qword_256944DC0);
  }
  return result;
}

unint64_t sub_23A1422D4()
{
  unint64_t result;

  result = qword_256944DC8;
  if (!qword_256944DC8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CB88, &type metadata for CosmoBadRequestHttpResponse);
    atomic_store(result, (unint64_t *)&qword_256944DC8);
  }
  return result;
}

uint64_t sub_23A142318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A14232C(a1, a2, a3, (uint64_t (*)(void))sub_23A14235C, (uint64_t (*)(void))sub_23A1423A0);
}

uint64_t sub_23A14232C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = a4();
  result = a5();
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

unint64_t sub_23A14235C()
{
  unint64_t result;

  result = qword_256944DD0;
  if (!qword_256944DD0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CB50, &type metadata for CosmoInternalServerErrorHttpResponse);
    atomic_store(result, (unint64_t *)&qword_256944DD0);
  }
  return result;
}

unint64_t sub_23A1423A0()
{
  unint64_t result;

  result = qword_256944DD8;
  if (!qword_256944DD8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CB28, &type metadata for CosmoInternalServerErrorHttpResponse);
    atomic_store(result, (unint64_t *)&qword_256944DD8);
  }
  return result;
}

unint64_t sub_23A1423E4()
{
  unint64_t result;

  result = qword_256944DE8;
  if (!qword_256944DE8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CF54, &type metadata for CosmoNotFoundHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944DE8);
  }
  return result;
}

unint64_t sub_23A142428()
{
  unint64_t result;

  result = qword_256944E00;
  if (!qword_256944E00)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CF04, &type metadata for CosmoBadRequestHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E00);
  }
  return result;
}

unint64_t sub_23A14246C()
{
  unint64_t result;

  result = qword_256944E18;
  if (!qword_256944E18)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CEB4, &type metadata for CosmoInternalServerErrorHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E18);
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoInternalServerErrorHttpResponse.CodingKeys()
{
  return &type metadata for CosmoInternalServerErrorHttpResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for CosmoBadRequestHttpResponse.CodingKeys()
{
  return &type metadata for CosmoBadRequestHttpResponse.CodingKeys;
}

uint64_t _s5Cosmo36CosmoInternalServerErrorHttpResponseV10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s5Cosmo36CosmoInternalServerErrorHttpResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23A14256C + 4 * byte_23A19C791[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23A14258C + 4 * byte_23A19C796[v4]))();
}

_BYTE *sub_23A14256C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23A14258C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A142594(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A14259C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A1425A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A1425AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CosmoNotFoundHttpResponse.CodingKeys()
{
  return &type metadata for CosmoNotFoundHttpResponse.CodingKeys;
}

unint64_t sub_23A1425CC()
{
  unint64_t result;

  result = qword_256944E28;
  if (!qword_256944E28)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CD1C, &type metadata for CosmoNotFoundHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E28);
  }
  return result;
}

unint64_t sub_23A142614()
{
  unint64_t result;

  result = qword_256944E30;
  if (!qword_256944E30)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CDD4, &type metadata for CosmoBadRequestHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E30);
  }
  return result;
}

unint64_t sub_23A14265C()
{
  unint64_t result;

  result = qword_256944E38;
  if (!qword_256944E38)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CE8C, &type metadata for CosmoInternalServerErrorHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E38);
  }
  return result;
}

unint64_t sub_23A1426A4()
{
  unint64_t result;

  result = qword_256944E40;
  if (!qword_256944E40)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CDFC, &type metadata for CosmoInternalServerErrorHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E40);
  }
  return result;
}

unint64_t sub_23A1426EC()
{
  unint64_t result;

  result = qword_256944E48;
  if (!qword_256944E48)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CE24, &type metadata for CosmoInternalServerErrorHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E48);
  }
  return result;
}

unint64_t sub_23A142734()
{
  unint64_t result;

  result = qword_256944E50;
  if (!qword_256944E50)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CD44, &type metadata for CosmoBadRequestHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E50);
  }
  return result;
}

unint64_t sub_23A14277C()
{
  unint64_t result;

  result = qword_256944E58;
  if (!qword_256944E58)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CD6C, &type metadata for CosmoBadRequestHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E58);
  }
  return result;
}

unint64_t sub_23A1427C4()
{
  unint64_t result;

  result = qword_256944E60;
  if (!qword_256944E60)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CC8C, &type metadata for CosmoNotFoundHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E60);
  }
  return result;
}

unint64_t sub_23A14280C()
{
  unint64_t result;

  result = qword_256944E68;
  if (!qword_256944E68)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CCB4, &type metadata for CosmoNotFoundHttpResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256944E68);
  }
  return result;
}

uint64_t sub_23A142850()
{
  return 0x737574617473;
}

uint64_t sub_23A142864(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23A19B908();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23A1428E8()
{
  uint64_t v0;
  _BYTE v2[16];
  __int128 v3;
  __int128 v4;
  _BYTE v5[16];
  uint64_t v6;
  unint64_t v7;

  v6 = 0x3D68746170;
  v7 = 0xE500000000000000;
  swift_bridgeObjectRetain();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A142B50();
  sub_23A14EAC4(v0 + 16, (uint64_t)v2);
  sub_23A14EAC4((uint64_t)v2, (uint64_t)&v3);
  if (*((_QWORD *)&v3 + 1) >> 60 != 15)
  {
    v4 = v3;
    sub_23A14EB0C((uint64_t)&v4, (uint64_t)v5);
    sub_23A14EB0C((uint64_t)v5, (uint64_t)&v6);
    __asm { BR              X12 }
  }
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  return 0x5250545448776152;
}

uint64_t sub_23A142B50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  void *v9;
  uint64_t (*v10)();
  uint64_t v11;
  _QWORD v12[2];

  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = v12;
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_23A14EB58;
  *(_QWORD *)(v1 + 24) = v0;
  v10 = sub_23A14EB94;
  v11 = v1;
  v6 = MEMORY[0x24BDAC760];
  v7 = 1107296256;
  v8 = sub_23A142CCC;
  v9 = &block_descriptor_0;
  v2 = _Block_copy(&v6);
  swift_retain();
  swift_release();
  nw_http_request_access_method();
  _Block_release(v2);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = 0x3D646F6874656DLL;
    v7 = 0xE700000000000000;
    swift_bridgeObjectRetain();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v5 = v6;
    swift_release();
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_23A142CCC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

uint64_t sub_23A142CF0()
{
  return sub_23A1428E8();
}

uint64_t sub_23A142D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  v1 = sub_23A19AC0C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v15 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v17, "http-status=");
  BYTE5(v17[1]) = 0;
  HIWORD(v17[1]) = -5120;
  LOWORD(v16) = *(_WORD *)v0;
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v11 = v17[0];
  strcpy((char *)v17, "body-size=");
  BYTE3(v17[1]) = 0;
  HIDWORD(v17[1]) = -369098752;
  v12 = *(_QWORD *)(v0 + 16);
  v15 = v11;
  if (v12 >> 60 != 15)
    __asm { BR              X13 }
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v17[0] = 0x3D656C6966;
  v17[1] = 0xE500000000000000;
  v13 = type metadata accessor for RawHTTPResponse(0);
  sub_23A13AC74(v0 + *(int *)(v13 + 24), (uint64_t)v10, &qword_256945140);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v10, v1);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
    sub_23A19B518();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  }
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  v17[0] = 0xD000000000000010;
  v17[1] = 0x800000023A1A0CF0;
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  return v17[0];
}

Cosmo::CosmoHttpConnection::State_optional __swiftcall CosmoHttpConnection.State.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Cosmo::CosmoHttpConnection::State_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23A19B860();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CosmoHttpConnection.State.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aReady_7[8 * *v0];
}

uint64_t sub_23A1430FC(char *a1, char *a2)
{
  return sub_23A152024(*a1, *a2);
}

uint64_t sub_23A143108()
{
  return sub_23A1520A8();
}

uint64_t sub_23A143110()
{
  return sub_23A152358();
}

uint64_t sub_23A143118()
{
  return sub_23A152398();
}

Cosmo::CosmoHttpConnection::State_optional sub_23A143120(Swift::String *a1)
{
  return CosmoHttpConnection.State.init(rawValue:)(*a1);
}

uint64_t sub_23A14312C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CosmoHttpConnection.State.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t CosmoHttpConnection.Configuration.quicKeepAliveSeconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CosmoHttpConnection.Configuration.receiveFileDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  v4 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for CosmoHttpConnection.Configuration(uint64_t a1)
{
  return sub_23A141024(a1, qword_256945108);
}

uint64_t CosmoHttpConnection.Configuration.init(quicKeepAliveSeconds:receiveFileDirectory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v4;
  uint64_t v5;

  *a3 = a1;
  v4 = (char *)a3 + *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  v5 = sub_23A19AC0C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
}

uint64_t sub_23A143204@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A14EB94;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A13A0F8(v4);
}

uint64_t sub_23A14328C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A14EB94;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_23A13A0F8(v3);
  return sub_23A13A1E4(v8);
}

uint64_t sub_23A143338()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  sub_23A13A0F8(v1);
  return v1;
}

uint64_t sub_23A143384(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_23A13A1E4(v5);
}

uint64_t (*sub_23A1433D4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t CosmoHttpConnection.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_id;
  v4 = sub_23A19AD2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

_OWORD *sub_23A143458(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void *a5)
{
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  double v29;
  double v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  _QWORD v61[2];
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;

  v6 = v5;
  v75 = a5;
  v73 = a4;
  LODWORD(v72) = a3;
  v79 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945840);
  MEMORY[0x24BDAC7A8](v8);
  v66 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945220);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v62 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945850);
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)&v76 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945230);
  v77 = *(_QWORD *)(v13 - 8);
  v78 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v67 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_23A19ACD8();
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v16 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_23A19B6EC();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v65 = (char *)v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23A19B6C8();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23A19B2F0();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23A19AD2C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[4] = 0u;
  v5[5] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[1] = 0u;
  v24 = OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection) = 0;
  *((_BYTE *)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_awaitingFileTransfer) = 0;
  sub_23A19AD20();
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))((uint64_t)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_id, v23, v20);
  v74 = a1;
  v25 = a1;
  v26 = v75;
  sub_23A13ABDC(v25, (uint64_t)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_config, type metadata accessor for CosmoHttpConnection.Configuration);
  sub_23A13ABDC(v79, (uint64_t)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_descriptor, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  if (v26)
  {
    v27 = (uint64_t)v26;
  }
  else
  {
    v61[1] = sub_23A125AD0();
    sub_23A19B2E4();
    *(_QWORD *)&v81 = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256945240, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569444F0);
    sub_23A1516C4((unint64_t *)&unk_256945250, (uint64_t *)&unk_2569444F0, MEMORY[0x24BEE12C8]);
    sub_23A19B764();
    (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v65, *MEMORY[0x24BEE5750], v64);
    v27 = sub_23A19B704();
  }
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue) = v27;
  v28 = v26;
  sub_23A19ACCC();
  sub_23A19ACB4();
  v30 = v29 * 1000.0;
  v31 = v76;
  if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v30 <= -1.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v30 < 1.84467441e19)
  {
    v32 = (unint64_t)v30;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v16, v71);
    *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_epochMillisAtInit) = v32;
    *((_BYTE *)v6 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_initiated) = v72 & 1;
    *(_QWORD *)((char *)v6 + v24) = v73;
    swift_retain();
    swift_release();
    *(_QWORD *)&v81 = sub_23A19AFFC();
    *((_QWORD *)&v81 + 1) = v33;
    if (qword_256944438 == -1)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  swift_once();
LABEL_8:
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945860);
  __swift_project_value_buffer(v34, (uint64_t)qword_256946888);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945260);
  sub_23A151680();
  sub_23A1516C4((unint64_t *)&unk_256945270, (uint64_t *)&unk_256945860, MEMORY[0x24BEE7460]);
  sub_23A19B4A0();
  swift_bridgeObjectRelease();
  v35 = v77;
  v36 = v78;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v31, 1, v78) == 1)
  {
    sub_23A13ACB8(v31, (uint64_t *)&unk_256945850);
    *(_QWORD *)&v81 = sub_23A19AFFC();
    *((_QWORD *)&v81 + 1) = v37;
    if (qword_256944440 != -1)
      swift_once();
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945880);
    __swift_project_value_buffer(v38, (uint64_t)qword_2569468A0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945280);
    sub_23A1516C4((unint64_t *)&unk_256945890, (uint64_t *)&unk_256945880, MEMORY[0x24BEE7460]);
    v39 = (uint64_t)v66;
    sub_23A19B4A0();
    swift_bridgeObjectRelease();
    v40 = v68;
    v41 = v69;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v39, 1, v69) == 1)
    {
      sub_23A13ACB8(v39, (uint64_t *)&unk_256945840);
      v42 = sub_23A19AFFC();
      v44 = v43;
      swift_release();

      sub_23A13AC20(v79, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
      sub_23A13AC20(v74, type metadata accessor for CosmoHttpConnection.Configuration);
    }
    else
    {
      v54 = v28;
      v55 = v62;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v62, v39, v41);
      sub_23A19AE04();
      swift_bridgeObjectRelease();
      v56 = MEMORY[0x23B84241C](v84, v85, v86, v87);
      v58 = v57;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v81 = v56;
      *((_QWORD *)&v81 + 1) = v58;
      swift_bridgeObjectRetain();
      sub_23A19B590();
      swift_release();

      swift_bridgeObjectRelease();
      v44 = *((_QWORD *)&v81 + 1);
      v42 = v81;
      sub_23A13AC20(v79, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
      sub_23A13AC20(v74, type metadata accessor for CosmoHttpConnection.Configuration);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v55, v41);
    }
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 32);
    v75 = v28;
    v46 = v67;
    v45(v67, v31, v36);
    sub_23A19AE04();
    swift_bridgeObjectRelease();
    v72 = v88;
    v48 = v89;
    v47 = v90;
    v76 = v91;
    v50 = v92;
    v49 = v93;
    v51 = MEMORY[0x23B84241C](v84, v85, v86, v87);
    v53 = v52;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v81 = v51;
    *((_QWORD *)&v81 + 1) = v53;
    swift_bridgeObjectRetain();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v80 = v81;
    v81 = v72;
    v82 = v48;
    v83 = v47;
    sub_23A151704();
    sub_23A19B584();
    swift_bridgeObjectRelease();
    v81 = v80;
    swift_bridgeObjectRetain();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v80 = v81;
    v81 = v76;
    v82 = v50;
    v83 = v49;
    sub_23A19B584();
    swift_bridgeObjectRelease();
    v81 = v80;
    swift_bridgeObjectRetain();
    sub_23A19B590();
    swift_release();

    swift_bridgeObjectRelease();
    v44 = *((_QWORD *)&v81 + 1);
    v42 = v81;
    sub_23A13AC20(v79, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
    sub_23A13AC20(v74, type metadata accessor for CosmoHttpConnection.Configuration);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v46, v78);
  }
  v59 = (uint64_t *)((char *)v6 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_name);
  *v59 = v42;
  v59[1] = v44;
  return v6;
}

uint64_t sub_23A143E40()
{
  return sub_23A145BB0((uint64_t)sub_23A151618, (uint64_t)&block_descriptor_91);
}

uint64_t sub_23A143E54(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  if (*(_QWORD *)(result + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
  {
    v1 = swift_retain();
    v2 = sub_23A1440B4(v1);
    v4 = v3;
    if (qword_256944380 != -1)
      swift_once();
    v5 = sub_23A19AE28();
    __swift_project_value_buffer(v5, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v6 = sub_23A19AE10();
    v7 = sub_23A19B6BC();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v12 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_23A14071C(v2, v4, &v12);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v6, v7, "Starting %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v9, -1, -1);
      MEMORY[0x23B842FA4](v8, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v10 = swift_allocObject();
    swift_weakInit();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v10;
    v11[3] = v2;
    v11[4] = v4;
    swift_retain();
    sub_23A13A0F8((uint64_t)sub_23A151650);
    sub_23A19B008();
    swift_release();
    swift_release();
    sub_23A19B044();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A1440B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    sub_23A19AF78();
    sub_23A19B8FC();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    sub_23A19B590();
  }
  sub_23A155CB4();
  v2 = v1;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_23A1441CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  unint64_t v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  unint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  _BOOL4 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  void (*v79)(char *, uint64_t);
  unint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  char *v88;
  os_log_type_t v89;
  os_log_t v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int EnumCaseMultiPayload;
  char *v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t);
  char *v115;
  char v116;
  void (*v117)(uint64_t *);
  char v118;
  NSObject *v119;
  os_log_type_t v120;
  uint8_t *v121;
  uint64_t v122;
  char v123;
  NSObject *v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t v127;
  __objc2_prop_list **p_base_props;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  uint8_t *v141;
  uint64_t v142;
  void (*v143)(uint64_t *);
  _QWORD *v144;
  void (*v145)(uint64_t *);
  void (*v146)(uint64_t *, _QWORD);
  _QWORD *v147;
  NSObject *v148;
  os_log_type_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  os_log_t v164;
  char *v165;
  char *v166;
  _BYTE *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t Strong;
  unint64_t v173;
  uint64_t v174;
  uint8_t *v175;
  uint64_t v176[4];
  uint64_t v177;
  _BYTE v178[32];

  v173 = a4;
  v167 = (_BYTE *)a3;
  v5 = sub_23A19AEC4();
  MEMORY[0x24BDAC7A8](v5);
  v156 = (uint64_t)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569451F0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v160 = (uint64_t)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v153 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v157 = (uint64_t)&v153 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v161 = (char *)&v153 - v15;
  v16 = sub_23A19AE28();
  v174 = *(_QWORD *)(v16 - 8);
  v175 = (uint8_t *)v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v168 = (char *)&v153 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v165 = (char *)&v153 - v19;
  v20 = sub_23A19B248();
  v170 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v171 = (char *)&v153 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v163 = (char *)&v153 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v158 = (char *)&v153 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v166 = (char *)&v153 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v153 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v169 = (char *)&v153 - v35;
  v155 = sub_23A19B158();
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v153 = (_QWORD **)((char *)&v153 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v164 = (os_log_t)type metadata accessor for NetworkDescriptor();
  v37 = MEMORY[0x24BDAC7A8](v164);
  v159 = (uint64_t)&v153 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v162 = (uint64_t)&v153 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v153 - v41;
  v43 = sub_23A19B038();
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v153 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v46, a1, v43);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v44 + 88))(v46, v43);
  if (v47 == *MEMORY[0x24BDE0310])
  {
    (*(void (**)(char *, uint64_t))(v44 + 96))(v46, v43);
    v49 = v170;
    v48 = v171;
    v50 = v20;
    v165 = *(char **)(v170 + 32);
    ((void (*)(char *, char *, uint64_t))v165)(v171, v46, v20);
    if (qword_256944380 != -1)
      swift_once();
    v51 = (uint64_t)v175;
    v52 = __swift_project_value_buffer((uint64_t)v175, (uint64_t)qword_25694EAF8);
    v53 = v174;
    v54 = v168;
    (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v168, v52, v51);
    v55 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
    v55(v23, v48, v50);
    v56 = v173;
    swift_bridgeObjectRetain_n();
    v57 = sub_23A19AE10();
    LODWORD(v169) = sub_23A19B6BC();
    if (os_log_type_enabled(v57, (os_log_type_t)v169))
    {
      v164 = v57;
      v58 = swift_slowAlloc();
      v163 = (char *)swift_slowAlloc();
      v176[0] = (uint64_t)v163;
      *(_DWORD *)v58 = 136315394;
      swift_bridgeObjectRetain();
      v177 = sub_23A14071C((uint64_t)v167, v56, v176);
      v167 = v178;
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v58 + 12) = 2080;
      v55(v12, v23, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v12, 0, 1, v50);
      v59 = v160;
      sub_23A13AC74((uint64_t)v12, v160, (uint64_t *)&unk_2569451F0);
      v60 = v50;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v59, 1, v50) == 1)
      {
        v61 = 7104878;
        v62 = 0xE300000000000000;
      }
      else
      {
        v86 = v166;
        ((void (*)(char *, uint64_t, uint64_t))v165)(v166, v59, v50);
        v55(v158, v86, v50);
        v61 = sub_23A19B518();
        v62 = v87;
        v88 = v86;
        v54 = v168;
        (*(void (**)(char *, uint64_t))(v49 + 8))(v88, v60);
      }
      v89 = v169;
      sub_23A13ACB8((uint64_t)v12, (uint64_t *)&unk_2569451F0);
      v177 = sub_23A14071C(v61, v62, v176);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v79 = *(void (**)(char *, uint64_t))(v49 + 8);
      v79(v23, v60);
      v90 = v164;
      _os_log_impl(&dword_23A123000, v164, v89, "%s in waiting state, error=%s", (uint8_t *)v58, 0x16u);
      v91 = v163;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v91, -1, -1);
      MEMORY[0x23B842FA4](v58, -1, -1);

      (*(void (**)(char *, uint8_t *))(v174 + 8))(v54, v175);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v79 = *(void (**)(char *, uint64_t))(v49 + 8);
      v79(v23, v50);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v51);
      v60 = v50;
    }
    sub_23A145B9C();
    swift_release();
    v79(v171, v60);
    return;
  }
  if (v47 == *MEMORY[0x24BDE0308])
  {
    (*(void (**)(char *, uint64_t))(v44 + 96))(v46, v43);
    v63 = v169;
    v64 = v170;
    v168 = *(char **)(v170 + 32);
    ((void (*)(char *, char *, uint64_t))v168)(v169, v46, v20);
    if (qword_256944380 != -1)
      swift_once();
    v65 = (uint64_t)v175;
    v66 = __swift_project_value_buffer((uint64_t)v175, (uint64_t)qword_25694EAF8);
    v67 = v174;
    v68 = v165;
    (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v165, v66, v65);
    v69 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v69(v34, v63, v20);
    v70 = v173;
    swift_bridgeObjectRetain_n();
    v71 = sub_23A19AE10();
    v72 = sub_23A19B6A4();
    v73 = os_log_type_enabled(v71, v72);
    v171 = (char *)v69;
    if (v73)
    {
      v74 = swift_slowAlloc();
      v160 = swift_slowAlloc();
      v176[0] = v160;
      *(_DWORD *)v74 = 136315394;
      swift_bridgeObjectRetain();
      v177 = sub_23A14071C((uint64_t)v167, v70, v176);
      v167 = v178;
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v74 + 12) = 2080;
      v75 = (uint64_t)v161;
      v69(v161, v34, v20);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v75, 0, 1, v20);
      v76 = v157;
      sub_23A13AC74(v75, v157, (uint64_t *)&unk_2569451F0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v76, 1, v20) == 1)
      {
        v77 = 7104878;
        v78 = 0xE300000000000000;
      }
      else
      {
        v99 = v166;
        ((void (*)(char *, uint64_t, uint64_t))v168)(v166, v76, v20);
        v69(v158, v99, v20);
        v77 = sub_23A19B518();
        v78 = v100;
        (*(void (**)(char *, uint64_t))(v64 + 8))(v99, v20);
      }
      v101 = v165;
      sub_23A13ACB8((uint64_t)v161, (uint64_t *)&unk_2569451F0);
      v177 = sub_23A14071C(v77, v78, v176);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v92 = *(void (**)(char *, uint64_t))(v64 + 8);
      v92(v34, v20);
      _os_log_impl(&dword_23A123000, v71, v72, "%s failed, error=%s", (uint8_t *)v74, 0x16u);
      v102 = v160;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v102, -1, -1);
      MEMORY[0x23B842FA4](v74, -1, -1);

      (*(void (**)(char *, uint8_t *))(v174 + 8))(v101, v175);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v92 = *(void (**)(char *, uint64_t))(v64 + 8);
      v92(v34, v20);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v65);
    }
    v103 = Strong;
    sub_23A145B9C();
    v104 = v103 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_descriptor;
    v105 = v162;
    sub_23A13ABDC(v103 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_descriptor, v162, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v107 = v163;
    v108 = (void (*)(char *, char *, uint64_t))v171;
    if (EnumCaseMultiPayload == 2)
    {
      sub_23A125ED8(*(_QWORD *)v105, *(_QWORD *)(v105 + 8));
      v109 = v166;
      if (*(_BYTE *)(v103 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_initiated) == 1)
      {
        *(_DWORD *)v166 = 53;
        (*(void (**)(char *, _QWORD, uint64_t))(v170 + 104))(v109, *MEMORY[0x24BDE0680], v20);
        v110 = MEMORY[0x23B842128](v169, v109);
        v92(v109, v20);
        if ((v110 & 1) != 0)
        {
          sub_23A155458(v156);
          sub_23A1558D0();
          sub_23A19B08C();
          swift_allocObject();
          *(_QWORD *)(v103 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection) = sub_23A19B014();
          swift_retain();
          v111 = swift_release();
          sub_23A143E40(v111);
          swift_release();
LABEL_53:
          swift_release();
          v92(v169, v20);
          return;
        }
      }
    }
    else
    {
      sub_23A13AC20(v105, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
      v109 = v166;
    }
    v112 = v159;
    sub_23A13ABDC(v104, v159, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23A125ED8(*(_QWORD *)v112, *(_QWORD *)(v112 + 8));
      *(_DWORD *)v109 = 54;
      v113 = *MEMORY[0x24BDE0680];
      v114 = *(void (**)(char *, uint64_t, uint64_t))(v170 + 104);
      v114(v109, v113, v20);
      v115 = v169;
      v116 = MEMORY[0x23B842128](v169, v109);
      v92(v109, v20);
      v108(v107, v115, v20);
      if ((v116 & 1) != 0)
      {
        v92(v107, v20);
        goto LABEL_50;
      }
      *(_DWORD *)v109 = 96;
      v114(v109, v113, v20);
      v123 = MEMORY[0x23B842128](v107, v109);
      v92(v109, v20);
      v92(v107, v20);
      if ((v123 & 1) != 0)
      {
LABEL_50:
        swift_beginAccess();
        v117 = *(void (**)(uint64_t *))(v103 + 16);
        if (v117)
        {
          v118 = 1;
          goto LABEL_52;
        }
LABEL_54:
        v92(v169, v20);
        goto LABEL_85;
      }
    }
    else
    {
      sub_23A13AC20(v112, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
    }
    swift_beginAccess();
    v117 = *(void (**)(uint64_t *))(v103 + 16);
    if (v117)
    {
      v118 = 2;
LABEL_52:
      LOBYTE(v177) = v118;
      swift_retain();
      v117(&v177);
      sub_23A13A1E4((uint64_t)v117);
      goto LABEL_53;
    }
    goto LABEL_54;
  }
  if (v47 == *MEMORY[0x24BDE0300])
  {
    v80 = v173;
    v81 = (uint64_t)v175;
    if (qword_256944380 != -1)
      swift_once();
    __swift_project_value_buffer(v81, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v82 = sub_23A19AE10();
    v83 = sub_23A19B6BC();
    if (os_log_type_enabled(v82, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc();
      v85 = swift_slowAlloc();
      v176[0] = v85;
      *(_DWORD *)v84 = 136315138;
      swift_bridgeObjectRetain();
      v177 = sub_23A14071C((uint64_t)v167, v80, v176);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v82, v83, "%s in setup state", v84, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v85, -1, -1);
      MEMORY[0x23B842FA4](v84, -1, -1);
LABEL_29:
      swift_release();

      return;
    }
    goto LABEL_43;
  }
  v94 = Strong;
  v93 = v173;
  v95 = (uint64_t)v175;
  if (v47 == *MEMORY[0x24BDE0320])
  {
    if (qword_256944380 != -1)
      swift_once();
    __swift_project_value_buffer(v95, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v82 = sub_23A19AE10();
    v96 = sub_23A19B6BC();
    if (os_log_type_enabled(v82, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc();
      v98 = swift_slowAlloc();
      v176[0] = v98;
      *(_DWORD *)v97 = 136315138;
      swift_bridgeObjectRetain();
      v177 = sub_23A14071C((uint64_t)v167, v93, v176);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v82, v96, "%s in preparing state", v97, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v98, -1, -1);
      MEMORY[0x23B842FA4](v97, -1, -1);
      goto LABEL_29;
    }
LABEL_43:

    swift_bridgeObjectRelease_n();
LABEL_85:
    swift_release();
    return;
  }
  if (v47 == *MEMORY[0x24BDE02F8])
  {
    if (qword_256944380 != -1)
      swift_once();
    __swift_project_value_buffer(v95, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v119 = sub_23A19AE10();
    v120 = sub_23A19B6BC();
    if (os_log_type_enabled(v119, v120))
    {
      v121 = (uint8_t *)swift_slowAlloc();
      v122 = swift_slowAlloc();
      v176[0] = v122;
      *(_DWORD *)v121 = 136315138;
      swift_bridgeObjectRetain();
      v177 = sub_23A14071C((uint64_t)v167, v173, v176);
      v93 = v173;
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v119, v120, "%s in ready state", v121, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v122, -1, -1);
      MEMORY[0x23B842FA4](v121, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_23A13ABDC(v94 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_descriptor, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
    p_base_props = &CosmoConnection.base_props;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23A125ED8(*((_QWORD *)v42 + 1), *((_QWORD *)v42 + 2));
      sub_23A125ED8(*((_QWORD *)v42 + 3), *((_QWORD *)v42 + 4));
      swift_unknownObjectRelease();
      v129 = &v42[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945210) + 96)];
      v130 = sub_23A19AD2C();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v130 - 8) + 8))(v129, v130);
      if (*(_QWORD *)(v94 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
      {
        sub_23A19B194();
        swift_retain();
        sub_23A19B14C();
        v131 = sub_23A19B074();
        swift_release();
        swift_release();
        if (v131)
        {
          sub_23A19B188();
          if (!swift_dynamicCastClass())
            goto LABEL_80;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          v132 = sub_23A19AE10();
          v133 = sub_23A19B68C();
          v134 = &unk_25694E000;
          if (os_log_type_enabled(v132, v133))
          {
            v135 = swift_slowAlloc();
            v136 = swift_slowAlloc();
            v176[0] = v136;
            *(_DWORD *)v135 = 136315394;
            swift_bridgeObjectRetain();
            v177 = sub_23A14071C((uint64_t)v167, v173, v176);
            sub_23A19B728();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v135 + 12) = 2048;
            v137 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_config);
            swift_release();
            v177 = v137;
            p_base_props = (__objc2_prop_list **)(&CosmoConnection + 64);
            v94 = Strong;
            v93 = v173;
            sub_23A19B728();
            swift_release();
            _os_log_impl(&dword_23A123000, v132, v133, "%s setting keep-alive to %ld seconds", (uint8_t *)v135, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x23B842FA4](v136, -1, -1);
            v138 = v135;
            v134 = (_QWORD *)&unk_25694E000;
            MEMORY[0x23B842FA4](v138, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
          }
          v144 = v153;
          *v153 = *(_QWORD *)(v94 + v134[347]);
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v154 + 104))(v144, *MEMORY[0x24BDE04D0], v155);
          sub_23A19B17C();
          if ((*((_BYTE *)&p_base_props[466]->entrysize + v94) & 1) == 0)
          {
            v146 = (void (*)(uint64_t *, _QWORD))sub_23A19B164();
            if (__OFADD__(*v147, 2))
            {
              __break(1u);
              return;
            }
            *v147 += 2;
            v146(v176, 0);
            swift_bridgeObjectRetain_n();
            swift_retain_n();
            v148 = sub_23A19AE10();
            v149 = sub_23A19B68C();
            if (os_log_type_enabled(v148, v149))
            {
              v150 = swift_slowAlloc();
              v151 = swift_slowAlloc();
              v176[0] = v151;
              *(_DWORD *)v150 = 136315394;
              swift_bridgeObjectRetain();
              v177 = sub_23A14071C((uint64_t)v167, v93, v176);
              sub_23A19B728();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v150 + 12) = 2048;
              v152 = sub_23A19B170();
              swift_release();
              v177 = v152;
              v94 = Strong;
              sub_23A19B728();
              swift_release();
              _os_log_impl(&dword_23A123000, v148, v149, "%s set localMaxStreamsBidirectional to %ld", (uint8_t *)v150, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x23B842FA4](v151, -1, -1);
              MEMORY[0x23B842FA4](v150, -1, -1);
              swift_release();

            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_release_n();
            }
          }
          else
          {
LABEL_80:
            swift_release();
          }
        }
      }
    }
    else
    {
      sub_23A13AC20((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
    }
    swift_beginAccess();
    v145 = *(void (**)(uint64_t *))(v94 + 16);
    if (v145)
    {
      LOBYTE(v177) = 0;
      swift_retain();
      v145(&v177);
      sub_23A13A1E4((uint64_t)v145);
    }
    if ((*((_BYTE *)&p_base_props[466]->entrysize + v94) & 1) == 0)
      sub_23A148408();
    goto LABEL_85;
  }
  if (v47 == *MEMORY[0x24BDE0318])
  {
    if (qword_256944380 != -1)
      swift_once();
    __swift_project_value_buffer(v95, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v124 = sub_23A19AE10();
    v125 = sub_23A19B6BC();
    if (os_log_type_enabled(v124, v125))
    {
      v126 = (uint8_t *)swift_slowAlloc();
      v127 = swift_slowAlloc();
      v176[0] = v127;
      *(_DWORD *)v126 = 136315138;
      swift_bridgeObjectRetain();
      v177 = sub_23A14071C((uint64_t)v167, v93, v176);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v124, v125, "%s in cancelled state", v126, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v127, -1, -1);
      MEMORY[0x23B842FA4](v126, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v143 = *(void (**)(uint64_t *))(v94 + 16);
    if (v143)
    {
      LOBYTE(v177) = 1;
      swift_retain();
      v143(&v177);
      sub_23A13A1E4((uint64_t)v143);
    }
    goto LABEL_85;
  }
  if (qword_256944380 != -1)
    swift_once();
  __swift_project_value_buffer(v95, (uint64_t)qword_25694EAF8);
  swift_bridgeObjectRetain_n();
  v139 = sub_23A19AE10();
  v140 = sub_23A19B6A4();
  if (os_log_type_enabled(v139, v140))
  {
    v141 = (uint8_t *)swift_slowAlloc();
    v142 = swift_slowAlloc();
    *(_DWORD *)v141 = 136315138;
    v175 = v141 + 4;
    v176[0] = v142;
    swift_bridgeObjectRetain();
    v177 = sub_23A14071C((uint64_t)v167, v93, v176);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A123000, v139, v140, "%s in unknown state", v141, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v142, -1, -1);
    MEMORY[0x23B842FA4](v141, -1, -1);
    swift_release();

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
}

uint64_t sub_23A145B9C()
{
  return sub_23A145BB0((uint64_t)sub_23A151610, (uint64_t)&block_descriptor_88);
}

uint64_t sub_23A145BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = v2;
  v6 = sub_23A19B2D8();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19B2F0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  aBlock[4] = a1;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = a2;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_23A19B2E4();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A1516C4(&qword_256944520, (uint64_t *)&unk_2569458B0, MEMORY[0x24BEE12C8]);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v14, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_23A145D84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t *);
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  _QWORD v25[2];
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_23A19B038();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v25 - v8;
  v10 = OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
  {
    swift_beginAccess();
    v11 = *(void (**)(uint64_t *))(a1 + 16);
    if (v11)
    {
      v12 = *(_QWORD *)(a1 + 24);
      swift_retain();
      sub_23A13A0F8((uint64_t)v11);
      sub_23A19B050();
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BDE0300], v2);
      v13 = MEMORY[0x23B841F18](v9, v6);
      v14 = *(void (**)(char *, uint64_t))(v3 + 8);
      v14(v6, v2);
      v14(v9, v2);
      if ((v13 & 1) != 0)
      {
        if (qword_256944380 != -1)
          swift_once();
        v15 = sub_23A19AE28();
        __swift_project_value_buffer(v15, (uint64_t)qword_25694EAF8);
        swift_retain_n();
        v16 = sub_23A19AE10();
        v17 = sub_23A19B6BC();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc();
          v27 = swift_slowAlloc();
          v30 = v27;
          v28 = v12;
          *(_DWORD *)v18 = 136315138;
          v25[1] = v18 + 4;
          v26 = v18;
          v19 = swift_retain();
          v20 = sub_23A1440B4(v19);
          v22 = v21;
          swift_release();
          v29 = sub_23A14071C(v20, v22, &v30);
          sub_23A19B728();
          swift_release_n();
          swift_bridgeObjectRelease();
          v23 = v26;
          _os_log_impl(&dword_23A123000, v16, v17, "%s, canceling (never started)", v26, 0xCu);
          v24 = v27;
          swift_arrayDestroy();
          MEMORY[0x23B842FA4](v24, -1, -1);
          MEMORY[0x23B842FA4](v23, -1, -1);

        }
        else
        {

          swift_release_n();
        }
        LOBYTE(v30) = 1;
        v11(&v30);
      }
      sub_23A13A1E4((uint64_t)v11);
    }
    else
    {
      swift_retain();
    }
    sub_23A19B05C();
    *(_QWORD *)(a1 + v10) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_23A146098(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t (**v31)(uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t (**)(uint64_t), uint64_t, uint64_t);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  double v73;
  double v74;
  unint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (**v89)();
  uint64_t (*v90)();
  uint64_t v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t (**v112)(uint64_t);
  uint64_t v113;
  uint64_t v114[5];
  uint64_t v115[2];

  v104 = sub_23A19ACD8();
  v102 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v105 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A19AC0C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v107 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v110 = (char *)&v93 - v16;
  v17 = sub_23A19AFE4();
  v18 = *(_QWORD **)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v19);
  v111 = a1;
  v112 = (uint64_t (**)(uint64_t))((char *)&v93 - v22);
  v23 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection);
  if (v23)
  {
    v98 = v21;
    v99 = v20;
    v106 = v13;
    v101 = v12;
    sub_23A13A854((uint64_t)a4, (uint64_t)v114);
    v24 = swift_retain_n();
    v25 = v111;
    v26 = v23;
    v27 = sub_23A1440B4(v24);
    v29 = v28;
    swift_release();
    LODWORD(v25) = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_initiated);
    v30 = swift_allocObject();
    v100 = v25;
    *(_BYTE *)(v30 + 16) = v25;
    *(_QWORD *)(v30 + 24) = v27;
    *(_QWORD *)(v30 + 32) = v29;
    *(_QWORD *)(v30 + 40) = v26;
    *(_QWORD *)(v30 + 48) = a2;
    *(_QWORD *)(v30 + 56) = a3;
    v31 = v112;
    *v112 = sub_23A14F730;
    v31[1] = (uint64_t (*)(uint64_t))v30;
    v32 = *MEMORY[0x24BDE01C8];
    v33 = (void (*)(uint64_t (**)(uint64_t), uint64_t, uint64_t))v18[13];
    v108 = v17;
    v33(v31, v32, v17);
    v109 = v26;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23A13A0F8((uint64_t)a2);
    if (qword_256944380 != -1)
      swift_once();
    v34 = sub_23A19AE28();
    __swift_project_value_buffer(v34, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain();
    v35 = sub_23A19AE10();
    v36 = sub_23A19B6BC();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v97 = v18;
      v39 = v38;
      v115[0] = v38;
      *(_DWORD *)v37 = 136315394;
      swift_bridgeObjectRetain();
      v113 = sub_23A14071C(v27, v29, v115);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2080;
      v40 = sub_23A146ADC(v114);
      v113 = sub_23A14071C(v40, v41, v115);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v35, v36, "%s sending message=%s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      v42 = v39;
      v18 = v97;
      MEMORY[0x23B842FA4](v42, -1, -1);
      MEMORY[0x23B842FA4](v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v50 = nw_content_context_create("context");
    v51 = *((_QWORD *)a4 + 3);
    v52 = *((_QWORD *)a4 + 4);
    __swift_project_boxed_opaque_existential_1(a4, v51);
    v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(v51, v52);
    nw_content_context_set_metadata_for_protocol(v50, v53);
    swift_unknownObjectRelease();
    v54 = *((_QWORD *)a4 + 3);
    v55 = *((_QWORD *)a4 + 4);
    __swift_project_boxed_opaque_existential_1(a4, v54);
    (*(void (**)(uint64_t, uint64_t))(v55 + 24))(v54, v55);
    v56 = v106;
    v57 = v101;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v11, 1, v101) == 1)
    {
      sub_23A13ACB8((uint64_t)v11, &qword_256945140);
      sub_23A19AFD8();
      swift_allocObject();
      swift_unknownObjectRetain();
      sub_23A19AFB4();
      v58 = *((_QWORD *)a4 + 3);
      v59 = *((_QWORD *)a4 + 4);
      __swift_project_boxed_opaque_existential_1(a4, v58);
      v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 16))(v58, v59);
      v62 = v61;
      sub_23A19B020();
      sub_23A125F1C(v60, v62);
      swift_release();
      if (v100)
      {
LABEL_15:
        v63 = *((_QWORD *)a4 + 3);
        v64 = *((_QWORD *)a4 + 4);
        __swift_project_boxed_opaque_existential_1(a4, v63);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v64 + 32))(v63, v64) & 1) != 0)
          *(_BYTE *)(v111 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_awaitingFileTransfer) = 1;
        sub_23A148408();
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
        swift_release();
        ((void (*)(uint64_t (**)(uint64_t), uint64_t))v18[1])(v112, v108);
        return;
      }
LABEL_25:
      ((void (*)(uint64_t (**)(uint64_t), uint64_t))v18[1])(v112, v108);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
      swift_unknownObjectRelease();
      return;
    }
    v97 = *(_QWORD **)(v56 + 32);
    ((void (*)(char *, char *, uint64_t))v97)(v110, v11, v57);
    nw_content_context_set_is_final(v50, 0);
    sub_23A19AFD8();
    swift_allocObject();
    swift_unknownObjectRetain();
    v65 = sub_23A19AFB4();
    v66 = URL.fileSize.getter();
    if ((v67 & 1) != 0)
      v68 = 1;
    else
      v68 = v66;
    v69 = swift_retain();
    v70 = sub_23A1440B4(v69);
    v96 = v71;
    swift_release();
    v72 = v105;
    sub_23A19ACC0();
    sub_23A19ACB4();
    v74 = v73 * 1000.0;
    if ((~*(_QWORD *)&v74 & 0x7FF0000000000000) != 0)
    {
      if (v74 > -1.0)
      {
        if (v74 < 1.84467441e19)
        {
          v75 = (unint64_t)v74;
          v93 = (unint64_t)v74;
          (*(void (**)(char *, uint64_t))(v102 + 8))(v72, v104);
          v76 = swift_allocObject();
          v95 = v68;
          v94 = v76;
          *(_QWORD *)(v76 + 16) = v75;
          v77 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
          v102 = v65;
          v77(v107, v110, v57);
          ((void (*)(uint64_t, uint64_t (**)(uint64_t), uint64_t))v18[2])(v99, v112, v108);
          v78 = *(unsigned __int8 *)(v56 + 80);
          v104 = (uint64_t)v50;
          v105 = a4;
          v79 = (v78 + 32) & ~v78;
          v80 = v57;
          v81 = (v103 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
          v82 = v70;
          v83 = (v81 + 15) & 0xFFFFFFFFFFFFFFF8;
          v84 = (v83 + 23) & 0xFFFFFFFFFFFFFFF8;
          v85 = (*((unsigned __int8 *)v18 + 80) + v84 + 8) & ~(unint64_t)*((unsigned __int8 *)v18 + 80);
          v86 = (v98 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
          v87 = swift_allocObject();
          v88 = v96;
          *(_QWORD *)(v87 + 16) = v82;
          *(_QWORD *)(v87 + 24) = v88;
          ((void (*)(uint64_t, char *, uint64_t))v97)(v87 + v79, v107, v80);
          *(_QWORD *)(v87 + v81) = v93;
          v89 = (uint64_t (**)())(v87 + v83);
          v90 = (uint64_t (*)())v94;
          *v89 = sub_23A151774;
          v89[1] = v90;
          v91 = v108;
          *(_QWORD *)(v87 + v84) = v109;
          a4 = v105;
          ((void (*)(unint64_t, uint64_t, uint64_t))v18[4])(v87 + v85, v99, v91);
          *(_QWORD *)(v87 + v86) = v95;
          swift_retain_n();
          swift_retain();
          v92 = v110;
          sub_23A19B080();
          swift_release_n();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v106 + 8))(v92, v80);
          if (v100)
            goto LABEL_15;
          goto LABEL_25;
        }
LABEL_29:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_29;
  }
  if (qword_256944380 != -1)
    swift_once();
  v43 = sub_23A19AE28();
  __swift_project_value_buffer(v43, (uint64_t)qword_25694EAF8);
  v44 = sub_23A19AE10();
  v45 = sub_23A19B6A4();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v114[0] = v47;
    *(_DWORD *)v46 = 136315138;
    v115[0] = sub_23A14071C(0xD00000000000001ELL, 0x800000023A1A0D50, v114);
    sub_23A19B728();
    _os_log_impl(&dword_23A123000, v44, v45, "%s connection is nil", v46, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v47, -1, -1);
    MEMORY[0x23B842FA4](v46, -1, -1);
  }

  if (a2)
  {
    v114[0] = 0;
    v114[1] = 0xE000000000000000;
    sub_23A19B794();
    swift_bridgeObjectRelease();
    sub_23A13A274();
    v48 = (void *)swift_allocError();
    *(_QWORD *)v49 = 0xD000000000000030;
    *(_QWORD *)(v49 + 8) = 0x800000023A1A0D10;
    *(_BYTE *)(v49 + 16) = 1;
    a2(v48, 1);

  }
}

unint64_t sub_23A146ADC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v2 = sub_23A19AC0C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v24 = (char *)&v23 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v23 - v12;
  v26 = 0x7A69732D79646F62;
  v27 = 0xEA00000000003D65;
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  if (v16 >> 60 != 15)
    __asm { BR              X10 }
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v25 = v26;
  v26 = 0x3D656C6966;
  v27 = 0xE500000000000000;
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
  sub_23A13AC74((uint64_t)v13, (uint64_t)v11, &qword_256945140);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) != 1)
  {
    v19 = v24;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v24, v11, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v19, v2);
    sub_23A19B518();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v19, v2);
  }
  sub_23A13ACB8((uint64_t)v13, &qword_256945140);
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  v26 = 0xD000000000000016;
  v27 = 0x800000023A1A0D80;
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  v26 = 0xD000000000000011;
  v27 = 0x800000023A1A0DA0;
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  return v26;
}

uint64_t sub_23A146F14(uint64_t a1, char a2, uint64_t a3, uint8_t *a4, uint64_t a5, void (*a6)(void *, uint64_t), uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  unint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  unint64_t v48;
  uint8_t *v49;
  void (*v50)(char *, uint64_t);
  os_log_t v51;
  uint64_t v52;
  void (*v53)(void *, uint64_t);
  uint64_t v54;
  char *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  os_log_t v59;
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, char *, uint64_t);
  int v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  uint8_t *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(void *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[2];

  v74 = a7;
  v75 = a6;
  v72 = a5;
  v66 = a4;
  v64 = a3;
  v69 = sub_23A19AE28();
  v71 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v68 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569451F0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v73 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v58 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v65 = (char *)&v58 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v58 - v18;
  v20 = sub_23A19B248();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v67 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v58 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v58 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v58 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v70 = (char *)&v58 - v33;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  v76 = a1;
  result = v34(a1, 1, v20);
  if ((_DWORD)result != 1 || (a2 & 1) == 0)
  {
    sub_23A13AC74(v76, (uint64_t)v19, (uint64_t *)&unk_2569451F0);
    if (v34((uint64_t)v19, 1, v20) == 1)
    {
      sub_23A13ACB8((uint64_t)v19, (uint64_t *)&unk_2569451F0);
    }
    else
    {
      v63 = (unsigned int (*)(char *, uint64_t, uint64_t))v34;
      v36 = v70;
      v60 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v60(v70, v19, v20);
      if (qword_256944380 != -1)
        swift_once();
      v37 = v69;
      v38 = __swift_project_value_buffer(v69, (uint64_t)qword_25694EAF8);
      v39 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v68, v38, v37);
      v61 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
      v61(v32, v36, v20);
      v40 = (unint64_t)v66;
      swift_bridgeObjectRetain_n();
      v41 = sub_23A19AE10();
      v62 = sub_23A19B6A4();
      if (os_log_type_enabled(v41, (os_log_type_t)v62))
      {
        v59 = v41;
        v42 = swift_slowAlloc();
        v58 = swift_slowAlloc();
        v78[0] = v58;
        *(_DWORD *)v42 = 136315394;
        swift_bridgeObjectRetain();
        v77 = sub_23A14071C(v64, v40, v78);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        v66 = (uint8_t *)v42;
        *(_WORD *)(v42 + 12) = 2080;
        v43 = (uint64_t)v65;
        v44 = v61;
        v61(v65, v32, v20);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v43, 0, 1, v20);
        sub_23A13AC74(v43, (uint64_t)v15, (uint64_t *)&unk_2569451F0);
        if (v63(v15, 1, v20) == 1)
        {
          v45 = 0xE300000000000000;
          v46 = 7104878;
        }
        else
        {
          v60(v29, v15, v20);
          v44(v26, v29, v20);
          v46 = sub_23A19B518();
          v45 = v48;
          (*(void (**)(char *, uint64_t))(v21 + 8))(v29, v20);
        }
        v49 = v66;
        sub_23A13ACB8(v43, (uint64_t *)&unk_2569451F0);
        v77 = sub_23A14071C(v46, v45, v78);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        v50 = *(void (**)(char *, uint64_t))(v21 + 8);
        v50(v32, v20);
        v51 = v59;
        _os_log_impl(&dword_23A123000, v59, (os_log_type_t)v62, "%s encountered error=%s while sending", v49, 0x16u);
        v52 = v58;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v52, -1, -1);
        MEMORY[0x23B842FA4](v49, -1, -1);

        (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v69);
        v50(v70, v20);
      }
      else
      {

        v47 = *(void (**)(char *, uint64_t))(v21 + 8);
        v47(v32, v20);
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v39, v37);
        v47(v70, v20);
      }
      v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v63;
    }
    result = sub_23A19B05C();
  }
  v53 = v75;
  if (v75)
  {
    v54 = v73;
    sub_23A13AC74(v76, v73, (uint64_t *)&unk_2569451F0);
    if (v34(v54, 1, v20) == 1)
    {
      swift_retain();
      sub_23A13ACB8(v54, (uint64_t *)&unk_2569451F0);
      v53(0, 0);
      return sub_23A13A1E4((uint64_t)v53);
    }
    else
    {
      v55 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v67, v54, v20);
      sub_23A131E34(&qword_256945200, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
      v56 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v57, v55, v20);
      swift_retain();
      v53(v56, 1);
      sub_23A13A1E4((uint64_t)v53);

      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v55, v20);
    }
  }
  return result;
}

uint64_t sub_23A147590(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  _QWORD *v40;
  int v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  unint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  unint64_t v69;
  os_log_t v70;
  uint64_t v71;
  double v72;
  double v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t result;
  id v102;
  unint64_t v103;
  uint64_t v104;
  os_log_t v105;
  char *v106;
  void (*v107)(char *, char *, uint64_t);
  void (*v108)(char *, char *, uint64_t);
  int v109;
  _QWORD *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t (*v121)(uint64_t);
  char *v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v120 = a7;
  v121 = a8;
  v127 = a4;
  v128 = a6;
  v134 = a5;
  LODWORD(v130) = a2;
  v123 = a1;
  v132 = a9;
  v13 = sub_23A19ACD8();
  v119 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v129 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23A19AC0C();
  v133 = *(_QWORD **)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v118 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v125 = (char *)&v104 - v18;
  v19 = sub_23A19AE28();
  v126 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569451F0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v116 = (uint64_t)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v122 = (char *)&v104 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v104 - v27;
  v29 = sub_23A19B248();
  v30 = MEMORY[0x24BDAC7A8](v29);
  v113 = (char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v114 = (char *)&v104 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v104 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v104 - v37;
  v40 = v39;
  sub_23A13AC74(a3, (uint64_t)v28, (uint64_t *)&unk_2569451F0);
  v115 = (uint64_t (*)(char *, uint64_t, uint64_t))v40[6];
  v41 = v115(v28, 1, v29);
  v124 = (_QWORD *)v15;
  v131 = v19;
  if (v41 == 1)
  {
    sub_23A13ACB8((uint64_t)v28, (uint64_t *)&unk_2569451F0);
    v42 = v133;
    v43 = v134;
  }
  else
  {
    v117 = v21;
    v112 = v13;
    v107 = (void (*)(char *, char *, uint64_t))v40[4];
    v107(v38, v28, v29);
    if (qword_256944380 != -1)
      swift_once();
    v44 = __swift_project_value_buffer(v19, (uint64_t)qword_25694EAF8);
    v45 = v126;
    v46 = v117;
    (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v117, v44, v19);
    v47 = (void (*)(char *, char *, uint64_t))v40[2];
    v111 = v36;
    v108 = v47;
    v47(v36, v38, v29);
    v48 = v19;
    v42 = v133;
    v49 = (void (*)(char *, uint64_t, uint64_t))v133[2];
    v110 = v40;
    v40 = v38;
    v50 = v125;
    v49(v125, v128, v15);
    v51 = v15;
    v43 = v134;
    swift_bridgeObjectRetain_n();
    v52 = sub_23A19AE10();
    v109 = sub_23A19B6A4();
    if (os_log_type_enabled(v52, (os_log_type_t)v109))
    {
      v105 = v52;
      v106 = (char *)v40;
      v53 = swift_slowAlloc();
      v104 = swift_slowAlloc();
      v136 = v104;
      *(_DWORD *)v53 = 136315650;
      swift_bridgeObjectRetain();
      v135 = sub_23A14071C(v127, v43, &v136);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v53 + 12) = 2080;
      v54 = (uint64_t)v122;
      v55 = v111;
      v56 = v108;
      v108(v122, v111, v29);
      v57 = v110;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v110[7])(v54, 0, 1, v29);
      v58 = v54;
      v59 = v116;
      sub_23A13AC74(v58, v116, (uint64_t *)&unk_2569451F0);
      if (v115((char *)v59, 1, v29) == 1)
      {
        v60 = 0xE300000000000000;
        v61 = 7104878;
      }
      else
      {
        v63 = v114;
        v107(v114, (char *)v59, v29);
        v56(v113, v63, v29);
        v61 = sub_23A19B518();
        v60 = v64;
        ((void (*)(char *, uint64_t))v57[1])(v63, v29);
      }
      v40 = v124;
      v65 = v126;
      sub_23A13ACB8((uint64_t)v122, (uint64_t *)&unk_2569451F0);
      v135 = sub_23A14071C(v61, v60, &v136);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v66 = (void (*)(char *, uint64_t))v57[1];
      v66(v55, v29);
      *(_WORD *)(v53 + 22) = 2080;
      sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v67 = v125;
      v68 = sub_23A19B8FC();
      v135 = sub_23A14071C(v68, v69, &v136);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v42 = v133;
      ((void (*)(char *, _QWORD *))v133[1])(v67, v40);
      v70 = v105;
      _os_log_impl(&dword_23A123000, v105, (os_log_type_t)v109, "%s encountered error=%s while writing file=%s", (uint8_t *)v53, 0x20u);
      v71 = v104;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v71, -1, -1);
      MEMORY[0x23B842FA4](v53, -1, -1);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v117, v131);
      v66(v106, v29);
      v43 = v134;
    }
    else
    {

      ((void (*)(char *, uint64_t))v42[1])(v50, v51);
      v62 = (void (*)(char *, uint64_t))v110[1];
      v62(v111, v29);
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v48);
      v62((char *)v40, v29);
    }
    v13 = v112;
  }
  if ((v130 & 1) == 0)
  {
    if (qword_256944380 != -1)
      swift_once();
    __swift_project_value_buffer(v131, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v87 = sub_23A19AE10();
    v88 = sub_23A19B68C();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = v123;
      *(double *)&v90 = (double)v123 / (double)a12 * 100.0;
      v91 = swift_slowAlloc();
      v92 = swift_slowAlloc();
      v136 = v92;
      *(_DWORD *)v91 = 136316162;
      swift_bridgeObjectRetain();
      v135 = sub_23A14071C(v127, v43, &v136);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v91 + 12) = 2048;
      v135 = v90;
      sub_23A19B728();
      *(_WORD *)(v91 + 22) = 2048;
      v135 = v89;
      sub_23A19B728();
      *(_WORD *)(v91 + 32) = 2048;
      v135 = a12;
      v93 = sub_23A19B728();
      *(_WORD *)(v91 + 42) = 2080;
      v94 = v121(v93);
      v135 = sub_23A14071C(v94, v95, &v136);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v87, v88, "%s wrote %f%%, %ld/%llu bytes, %s elapsed", (uint8_t *)v91, 0x34u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v92, -1, -1);
      MEMORY[0x23B842FA4](v91, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    return 1;
  }
  sub_23A19ACC0();
  sub_23A19ACB4();
  v73 = v72 * 1000.0;
  if ((~*(_QWORD *)&v73 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v73 <= -1.0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v73 >= 1.84467441e19)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v74 = (unint64_t)v73;
  (*(void (**)(char *, uint64_t))(v119 + 8))(v129, v13);
  v40 = (_QWORD *)(v74 - v120);
  if (v74 >= v120)
  {
    if (qword_256944380 == -1)
      goto LABEL_18;
    goto LABEL_38;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  swift_once();
LABEL_18:
  v75 = __swift_project_value_buffer(v131, (uint64_t)qword_25694EAF8);
  v76 = v118;
  v77 = v124;
  ((void (*)(char *, uint64_t, _QWORD *))v42[2])(v118, v128, v124);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v78 = sub_23A19AE10();
  v79 = sub_23A19B6BC();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = swift_slowAlloc();
    v130 = swift_slowAlloc();
    v136 = v130;
    *(_DWORD *)v80 = 136315906;
    swift_bridgeObjectRetain();
    v135 = sub_23A14071C(v127, v43, &v136);
    v133 = v40;
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v80 + 12) = 2080;
    v131 = v75;
    sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v81 = sub_23A19B8FC();
    v135 = sub_23A14071C(v81, v82, &v136);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    v40 = v133;
    v83 = ((uint64_t (*)(char *, _QWORD *))v42[1])(v76, v77);
    *(_WORD *)(v80 + 22) = 2080;
    v43 = v134;
    v84 = v121(v83);
    v135 = sub_23A14071C(v84, v85, &v136);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v80 + 32) = 2048;
    v135 = v123;
    sub_23A19B728();
    _os_log_impl(&dword_23A123000, v78, v79, "%s finished sending file=%s after duration=%s with size=%ld", (uint8_t *)v80, 0x2Au);
    v86 = v130;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v86, -1, -1);
    MEMORY[0x23B842FA4](v80, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    ((void (*)(char *, _QWORD *))v42[1])(v76, v77);

    swift_release_n();
  }
  swift_bridgeObjectRetain_n();
  v96 = sub_23A19AE10();
  v97 = sub_23A19B6BC();
  if (!os_log_type_enabled(v96, v97))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_32;
  }
  v98 = (double)(unint64_t)v40 / 1000.0;
  v99 = swift_slowAlloc();
  v100 = swift_slowAlloc();
  v136 = v100;
  *(_DWORD *)v99 = 136315394;
  swift_bridgeObjectRetain();
  v135 = sub_23A14071C(v127, v43, &v136);
  sub_23A19B728();
  result = swift_bridgeObjectRelease_n();
  *(_WORD *)(v99 + 12) = 2080;
  if ((~*(_QWORD *)&v98 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v98 <= -9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v98 < 9.22337204e18)
  {
    v102 = sub_23A160B9C(v123, (uint64_t)v98);
    v135 = sub_23A14071C((uint64_t)v102, v103, &v136);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v96, v97, "%s observed throughput of %s", (uint8_t *)v99, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v100, -1, -1);
    MEMORY[0x23B842FA4](v99, -1, -1);

LABEL_32:
    sub_23A19AFD8();
    sub_23A19AF9C();
    sub_23A19B020();
    swift_release();
    return 1;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_23A148408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_23A19B35C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection);
  if (v7)
  {
    v8 = swift_allocObject();
    swift_weakInit();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v8;
    *(_QWORD *)(v9 + 24) = v7;
    swift_retain_n();
    swift_retain();
    sub_23A19B068();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  if (qword_256944380 != -1)
    goto LABEL_9;
LABEL_5:
  v10 = sub_23A19AE28();
  __swift_project_value_buffer(v10, (uint64_t)qword_25694EAF8);
  v11 = sub_23A19AE10();
  v12 = sub_23A19B6A4();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = sub_23A14071C(0xD000000000000014, 0x800000023A1A0F40, &v16);
    sub_23A19B728();
    _os_log_impl(&dword_23A123000, v11, v12, "%s connection is nil", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v14, -1, -1);
    MEMORY[0x23B842FA4](v13, -1, -1);
  }

}

uint64_t sub_23A148698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t result;
  unint64_t v31;
  unint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, uint64_t);
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  os_log_t v56;
  uint64_t v57;
  unint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  os_log_t v66;
  void (*v67)(char *, char *, uint64_t);
  void (*v68)(char *, char *, uint64_t);
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  int v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v80 = sub_23A19AE28();
  v78 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v77 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569451F0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v74 = (char *)&v63 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v63 - v17;
  v19 = sub_23A19B248();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v72 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v63 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v63 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v79 = (char *)&v63 - v29;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v71 = a7;
    v76 = result;
    v73 = sub_23A1440B4(a7);
    v32 = v31;
    v75 = a3;
    if (a3)
    {
      sub_23A13AC74(a5, (uint64_t)v18, (uint64_t *)&unk_2569451F0);
      v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      if (v33(v18, 1, v19) == 1)
      {
        v34 = v75;
        swift_retain();
        sub_23A13ACB8((uint64_t)v18, (uint64_t *)&unk_2569451F0);
        v35 = v80;
      }
      else
      {
        v69 = v33;
        v41 = v79;
        v67 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v67(v79, v18, v19);
        v42 = qword_256944380;
        swift_retain();
        if (v42 != -1)
          swift_once();
        v35 = v80;
        v43 = __swift_project_value_buffer(v80, (uint64_t)qword_25694EAF8);
        v44 = v77;
        v45 = v78;
        (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v43, v35);
        v68 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
        v68(v28, v41, v19);
        swift_bridgeObjectRetain_n();
        v46 = sub_23A19AE10();
        v70 = sub_23A19B6A4();
        if (os_log_type_enabled(v46, (os_log_type_t)v70))
        {
          v66 = v46;
          v47 = swift_slowAlloc();
          v64 = swift_slowAlloc();
          v82 = v64;
          *(_DWORD *)v47 = 136315394;
          swift_bridgeObjectRetain();
          v81 = sub_23A14071C(v73, v32, &v82);
          sub_23A19B728();
          v65 = v32;
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v47 + 12) = 2080;
          v48 = (uint64_t)v74;
          v49 = v68;
          v68(v74, v28, v19);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v48, 0, 1, v19);
          sub_23A13AC74(v48, (uint64_t)v14, (uint64_t *)&unk_2569451F0);
          if (v69(v14, 1, v19) == 1)
          {
            v50 = 0xE300000000000000;
            v51 = 7104878;
          }
          else
          {
            v67(v25, v14, v19);
            v49(v72, v25, v19);
            v51 = sub_23A19B518();
            v50 = v54;
            (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
          }
          v34 = v75;
          v35 = v80;
          sub_23A13ACB8((uint64_t)v74, (uint64_t *)&unk_2569451F0);
          v81 = sub_23A14071C(v51, v50, &v82);
          sub_23A19B728();
          swift_bridgeObjectRelease();
          v55 = *(void (**)(char *, uint64_t))(v20 + 8);
          v55(v28, v19);
          v56 = v66;
          _os_log_impl(&dword_23A123000, v66, (os_log_type_t)v70, "%s encountered error=%s while reading HTTP headers", (uint8_t *)v47, 0x16u);
          v57 = v64;
          swift_arrayDestroy();
          MEMORY[0x23B842FA4](v57, -1, -1);
          MEMORY[0x23B842FA4](v47, -1, -1);

          (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v35);
          v55(v79, v19);
          v32 = v65;
        }
        else
        {

          v52 = v32;
          v53 = *(void (**)(char *, uint64_t))(v20 + 8);
          v53(v28, v19);
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v35);
          v53(v79, v19);
          v32 = v52;
          v34 = v75;
        }
      }
      if ((sub_23A19AFCC() & 1) != 0)
      {
        if (qword_256944380 != -1)
          swift_once();
        __swift_project_value_buffer(v35, (uint64_t)qword_25694EAF8);
        swift_bridgeObjectRetain();
        v58 = v32;
        v59 = sub_23A19AE10();
        v60 = sub_23A19B6BC();
        if (os_log_type_enabled(v59, v60))
        {
          v61 = (uint8_t *)swift_slowAlloc();
          v62 = swift_slowAlloc();
          v82 = v62;
          *(_DWORD *)v61 = 136315138;
          swift_bridgeObjectRetain();
          v81 = sub_23A14071C(v73, v58, &v82);
          sub_23A19B728();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_23A123000, v59, v60, "%s read close", v61, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B842FA4](v62, -1, -1);
          MEMORY[0x23B842FA4](v61, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_23A19B05C();
        swift_release();
      }
      else
      {
        if (*(_BYTE *)(v76 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_initiated) == 1)
        {
          sub_23A149648(v34, v73, v32);
          swift_release();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        sub_23A148F54(v34, v73, v32);
        swift_release();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (qword_256944380 != -1)
        swift_once();
      __swift_project_value_buffer(v80, (uint64_t)qword_25694EAF8);
      swift_bridgeObjectRetain();
      v36 = v32;
      v37 = sub_23A19AE10();
      v38 = sub_23A19B6BC();
      if (!os_log_type_enabled(v37, v38))
      {

        swift_release();
        return swift_bridgeObjectRelease_n();
      }
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v82 = v40;
      *(_DWORD *)v39 = 136315138;
      swift_bridgeObjectRetain();
      v81 = sub_23A14071C(v73, v36, &v82);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v37, v38, "%s receiveHTTPMessage has nil context", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v40, -1, -1);
      MEMORY[0x23B842FA4](v39, -1, -1);

    }
    return swift_release();
  }
  return result;
}

void sub_23A148F54(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  void (*v26)(uint64_t *);
  uint64_t v27;
  uint64_t v28[2];
  char v29;

  v4 = v3;
  v8 = sub_23A19B35C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v4 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_5;
  }
  v14 = sub_23A1509EC(a1, a2, a3);
  if (v15)
  {
    v17 = v14;
    v18 = v15;
    v19 = v16;
    v20 = swift_allocObject();
    swift_weakInit();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_23A151140(v4, v20, v17, v18, v19, a2, a3);
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    return;
  }
  if (qword_256944380 != -1)
    goto LABEL_12;
LABEL_5:
  v21 = sub_23A19AE28();
  __swift_project_value_buffer(v21, (uint64_t)qword_25694EAF8);
  swift_bridgeObjectRetain_n();
  v22 = sub_23A19AE10();
  v23 = sub_23A19B6A4();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v28[0] = v25;
    *(_DWORD *)v24 = 136315138;
    swift_bridgeObjectRetain();
    v27 = sub_23A14071C(a2, a3, v28);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A123000, v22, v23, "%s failed to read HTTP Request", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v25, -1, -1);
    MEMORY[0x23B842FA4](v24, -1, -1);

    v26 = *(void (**)(uint64_t *))(v4 + 48);
    if (!v26)
      return;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v26 = *(void (**)(uint64_t *))(v4 + 48);
    if (!v26)
      return;
  }
  v28[0] = 0;
  v28[1] = 0;
  v29 = 3;
  swift_retain();
  v26(v28);
  sub_23A13A1E4((uint64_t)v26);
}

void sub_23A149270(void *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t Strong;
  uint64_t v17;
  void (*v18)(uint64_t *);
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t *);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = Strong;
    if ((a3 & 1) != 0)
    {
      v19 = a1;
      if (qword_256944380 != -1)
        swift_once();
      v20 = sub_23A19AE28();
      __swift_project_value_buffer(v20, (uint64_t)qword_25694EAF8);
      sub_23A150974(a1, a2, 1);
      swift_bridgeObjectRetain();
      sub_23A150974(a1, a2, 1);
      swift_bridgeObjectRetain();
      v21 = sub_23A19AE10();
      v22 = sub_23A19B6A4();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v24 = swift_slowAlloc();
        v29 = v24;
        *(_DWORD *)v23 = 136315394;
        swift_bridgeObjectRetain();
        sub_23A14071C(a8, a9, &v29);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v23 + 12) = 2080;
        v25 = a1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
        v26 = sub_23A19B518();
        sub_23A14071C(v26, v27, &v29);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A150980(a1, a2, 1);
        sub_23A150980(a1, a2, 1);
        _os_log_impl(&dword_23A123000, v21, v22, "%s failed to receive HTTP body, error=%s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v24, -1, -1);
        MEMORY[0x23B842FA4](v23, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_23A150980(a1, a2, 1);
        sub_23A150980(a1, a2, 1);
      }

      v28 = *(void (**)(uint64_t *))(v17 + 48);
      if (v28)
      {
        v29 = (uint64_t)a1;
        v30 = 0;
        LOBYTE(v31) = 2;
        sub_23A150974(a1, a2, 1);
        sub_23A13A0F8((uint64_t)v28);
        v28(&v29);
        swift_release();
        sub_23A13A1E4((uint64_t)v28);
        sub_23A150980(a1, a2, 1);
        sub_23A150980(a1, a2, 1);
        return;
      }
      sub_23A150980(a1, a2, 1);
    }
    else
    {
      v18 = *(void (**)(uint64_t *))(Strong + 32);
      if (v18)
      {
        v29 = a5;
        v30 = a6;
        v31 = a1;
        v32 = a2;
        v33 = a7;
        sub_23A150974(a1, a2, 0);
        sub_23A150974(a1, a2, 0);
        sub_23A13A0F8((uint64_t)v18);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v18(&v29);
        sub_23A150980(a1, a2, 0);
        sub_23A13A1E4((uint64_t)v18);
        swift_bridgeObjectRelease();
        swift_release();
        sub_23A125F1C((uint64_t)a1, a2);
        swift_unknownObjectRelease();
        return;
      }
    }
    swift_release();
  }
}

void sub_23A149648(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  void (*v45)(_BYTE *, uint64_t);
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  void (*v58)(__int128 *);
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  void (*v65)(__int128 *);
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  _BYTE *v77;
  id v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  void (*v90)(__int128 *);
  uint64_t v91;
  id v92;
  void *v93;
  unsigned int v94;
  uint64_t v95;
  void (*v96)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  id v106;
  void *v107;
  unsigned int v108;
  id v109;
  id v110;
  void *v111;
  _BYTE *v112;
  id v113;
  id v114;
  NSObject *v115;
  os_log_type_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  id v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE *v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  unint64_t v132;
  void (*v133)(_BYTE *, uint64_t);
  _BYTE v134[12];
  int v135;
  void (*v136)(_BYTE *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  _BYTE *v141;
  _BYTE *v142;
  _BYTE *v143;
  _BYTE *v144;
  uint64_t v145;
  void (*v146)(_BYTE *, uint64_t);
  uint64_t v147;
  _BYTE *v148;
  uint64_t v149;
  _BYTE *v150;
  _BYTE *v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  __int128 v155;
  char v156;
  uint64_t v157;

  v157 = *MEMORY[0x24BDAC8D0];
  v7 = sub_23A19AD2C();
  v145 = *(_QWORD *)(v7 - 8);
  v146 = (void (*)(_BYTE *, uint64_t))v7;
  MEMORY[0x24BDAC7A8](v7);
  v144 = &v134[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v134[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v149 = sub_23A19AC0C();
  v152 = *(_QWORD *)(v149 - 8);
  v12 = MEMORY[0x24BDAC7A8](v149);
  v141 = &v134[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v142 = &v134[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v143 = &v134[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v148 = &v134[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v150 = &v134[-v21];
  v147 = v22;
  MEMORY[0x24BDAC7A8](v20);
  v151 = &v134[-v23];
  v24 = sub_23A19B35C();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = &v134[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v153 = v3;
  v28 = *(void **)(v3 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  *v27 = v28;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x24BEE5610], v24);
  v29 = v28;
  v30 = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v27, v24);
  if ((v30 & 1) == 0)
  {
    __break(1u);
LABEL_60:
    swift_once();
    goto LABEL_12;
  }
  v31 = sub_23A14FE08(a1, a2, a3);
  v30 = a3;
  v25 = a2;
  if (v32)
  {
    v33 = v31;
    v34 = v32;
    v35 = v153;
    if (*(_BYTE *)(v153 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_awaitingFileTransfer) != 1)
    {
      v59 = swift_allocObject();
      swift_weakInit();
      swift_bridgeObjectRetain();
      sub_23A150434(v35, v59, v33, v34, a2, a3);
      swift_release();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v36 = nw_http_response_copy_header_fields();
    if (!nw_http_fields_copy_value_by_name() || (v37 = sub_23A19B59C(), v39 = sub_23A14A994(v37, v38), (v40 & 1) != 0))
    {
      v140 = v34;
      if (qword_256944380 != -1)
        swift_once();
      v60 = sub_23A19AE28();
      __swift_project_value_buffer(v60, (uint64_t)qword_25694EAF8);
      swift_bridgeObjectRetain_n();
      v61 = sub_23A19AE10();
      v62 = sub_23A19B6A4();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc();
        v64 = swift_slowAlloc();
        *(_QWORD *)&v155 = v64;
        *(_DWORD *)v63 = 136315138;
        swift_bridgeObjectRetain();
        v154 = sub_23A14071C(a2, v30, (uint64_t *)&v155);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A123000, v61, v62, "%s failed to read 'Content-Length' header", v63, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v64, -1, -1);
        MEMORY[0x23B842FA4](v63, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v65 = *(void (**)(__int128 *))(v35 + 80);
      if (v65)
      {
        v155 = xmmword_23A19CFB0;
        v156 = 0;
        sub_23A13A0F8((uint64_t)v65);
        v65(&v155);
        sub_23A13A1E4((uint64_t)v65);
      }
      if (*(_QWORD *)(v35 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
      {
        swift_retain();
        sub_23A19B05C();
        swift_release();
      }
    }
    else
    {
      v41 = v39;
      if (qword_256944428 != -1)
        swift_once();
      v42 = nw_http_fields_copy_value_by_name();
      if (v42)
      {
        v137 = v41;
        v136 = (void (*)(_BYTE *, uint64_t, uint64_t))v42;
        v138 = v33;
        v139 = v30;
        sub_23A13ABDC(v35 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_config, (uint64_t)v11, type metadata accessor for CosmoHttpConnection.Configuration);
        v43 = &v11[*(int *)(v9 + 20)];
        *(_QWORD *)&v155 = *(_QWORD *)(v35 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_epochMillisAtInit);
        sub_23A19B8FC();
        v44 = v150;
        sub_23A19ABDC();
        swift_bridgeObjectRelease();
        v45 = *(void (**)(_BYTE *, uint64_t))(v152 + 8);
        v46 = v149;
        v45(v43, v149);
        v47 = v144;
        sub_23A19AD20();
        sub_23A19ACF0();
        (*(void (**)(_BYTE *, _QWORD))(v145 + 8))(v47, v146);
        v48 = v151;
        sub_23A19ABDC();
        swift_bridgeObjectRelease();
        v49 = v46;
        v146 = v45;
        v45(v44, v46);
        v144 = (_BYTE *)objc_opt_self();
        v50 = objc_msgSend(v144, sel_defaultManager);
        v51 = (void *)sub_23A19ABD0();
        *(_QWORD *)&v155 = 0;
        LODWORD(v46) = objc_msgSend(v50, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v51, 1, 0, &v155);

        v140 = v34;
        if ((_DWORD)v46)
        {
          v52 = (id)v155;
        }
        else
        {
          v74 = (id)v155;
          v75 = (void *)sub_23A19ABAC();

          swift_willThrow();
          if (qword_256944380 != -1)
            swift_once();
          v76 = sub_23A19AE28();
          __swift_project_value_buffer(v76, (uint64_t)qword_25694EAF8);
          v77 = v142;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v152 + 16))(v142, v48, v49);
          v78 = v75;
          v79 = v75;
          v80 = sub_23A19AE10();
          v81 = sub_23A19B6A4();
          v82 = v81;
          if (os_log_type_enabled(v80, v81))
          {
            v83 = swift_slowAlloc();
            v145 = swift_slowAlloc();
            *(_QWORD *)&v155 = v145;
            *(_DWORD *)v83 = 136315394;
            sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
            v135 = v82;
            v84 = sub_23A19B8FC();
            v154 = sub_23A14071C(v84, v85, (uint64_t *)&v155);
            sub_23A19B728();
            swift_bridgeObjectRelease();
            v146(v77, v49);
            *(_WORD *)(v83 + 12) = 2080;
            v154 = (uint64_t)v75;
            v86 = v75;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
            v87 = sub_23A19B518();
            v154 = sub_23A14071C(v87, v88, (uint64_t *)&v155);
            v49 = v149;
            sub_23A19B728();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_23A123000, v80, (os_log_type_t)v135, "Error creating directory=%s, error=%s", (uint8_t *)v83, 0x16u);
            v89 = v145;
            swift_arrayDestroy();
            MEMORY[0x23B842FA4](v89, -1, -1);
            MEMORY[0x23B842FA4](v83, -1, -1);

          }
          else
          {

            v146(v77, v49);
          }
        }
        v142 = (_BYTE *)v25;
        v145 = v36;
        sub_23A19B59C();
        v91 = (uint64_t)v148;
        sub_23A19ABDC();
        swift_bridgeObjectRelease();
        v92 = objc_msgSend(v144, sel_defaultManager);
        sub_23A19AC00();
        v93 = (void *)sub_23A19B4B8();
        swift_bridgeObjectRelease();
        v94 = objc_msgSend(v92, sel_fileExistsAtPath_, v93);

        if (v94)
        {
          if (qword_256944380 != -1)
            swift_once();
          v95 = sub_23A19AE28();
          __swift_project_value_buffer(v95, (uint64_t)qword_25694EAF8);
          v96 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v152 + 16);
          v97 = v143;
          v96(v143, v91, v49);
          v98 = sub_23A19AE10();
          v99 = sub_23A19B6A4();
          if (os_log_type_enabled(v98, v99))
          {
            v100 = (uint8_t *)swift_slowAlloc();
            v101 = swift_slowAlloc();
            v136 = v96;
            v102 = v101;
            *(_QWORD *)&v155 = v101;
            *(_DWORD *)v100 = 136315138;
            sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
            v103 = sub_23A19B8FC();
            v154 = sub_23A14071C(v103, v104, (uint64_t *)&v155);
            v49 = v149;
            sub_23A19B728();
            swift_bridgeObjectRelease();
            v146(v97, v49);
            _os_log_impl(&dword_23A123000, v98, v99, "WARNING: Overwriting existing file=%s", v100, 0xCu);
            swift_arrayDestroy();
            v105 = v102;
            v96 = v136;
            MEMORY[0x23B842FA4](v105, -1, -1);
            MEMORY[0x23B842FA4](v100, -1, -1);
          }
          else
          {
            v146(v97, v49);
          }

          v106 = objc_msgSend(v144, sel_defaultManager);
          v107 = (void *)sub_23A19ABD0();
          *(_QWORD *)&v155 = 0;
          v108 = objc_msgSend(v106, sel_removeItemAtURL_error_, v107, &v155);

          if (v108)
          {
            v109 = (id)v155;
          }
          else
          {
            v110 = (id)v155;
            v111 = (void *)sub_23A19ABAC();

            swift_willThrow();
            v112 = v141;
            v96(v141, v91, v49);
            v113 = v111;
            v114 = v111;
            v115 = sub_23A19AE10();
            v116 = sub_23A19B6A4();
            if (os_log_type_enabled(v115, v116))
            {
              v117 = swift_slowAlloc();
              v118 = swift_slowAlloc();
              *(_QWORD *)&v155 = v118;
              *(_DWORD *)v117 = 136315394;
              sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
              v119 = sub_23A19B8FC();
              v154 = sub_23A14071C(v119, v120, (uint64_t *)&v155);
              sub_23A19B728();
              swift_bridgeObjectRelease();
              v146(v112, v49);
              *(_WORD *)(v117 + 12) = 2080;
              v154 = (uint64_t)v111;
              v121 = v111;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
              v122 = sub_23A19B518();
              v154 = sub_23A14071C(v122, v123, (uint64_t *)&v155);
              v49 = v149;
              sub_23A19B728();
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_23A123000, v115, v116, "Error while removing existing file=%s error=%s", (uint8_t *)v117, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x23B842FA4](v118, -1, -1);
              MEMORY[0x23B842FA4](v117, -1, -1);

            }
            else
            {

              v146(v112, v49);
            }
          }
        }
        v124 = swift_allocObject();
        swift_weakInit();
        v125 = v152;
        v126 = v150;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v152 + 16))(v150, v91, v49);
        v127 = (*(unsigned __int8 *)(v125 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
        v128 = v49;
        v129 = (v147 + v127 + 7) & 0xFFFFFFFFFFFFFFF8;
        v130 = swift_allocObject();
        *(_QWORD *)(v130 + 16) = v124;
        *(_WORD *)(v130 + 24) = v138;
        (*(void (**)(unint64_t, _BYTE *, uint64_t))(v125 + 32))(v130 + v127, v126, v128);
        *(_QWORD *)(v130 + v129) = v140;
        v131 = (_QWORD *)(v130 + ((v129 + 15) & 0xFFFFFFFFFFFFFFF8));
        v132 = v139;
        *v131 = v142;
        v131[1] = v132;
        swift_retain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        sub_23A14B968(v91, v137, 0, 0, (void (*)(void *, uint64_t))sub_23A150884, v130);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
        v133 = v146;
        v146((_BYTE *)v91, v128);
        v133(v151, v128);
        goto LABEL_57;
      }
      if (qword_256944380 != -1)
        swift_once();
      v66 = sub_23A19AE28();
      __swift_project_value_buffer(v66, (uint64_t)qword_25694EAF8);
      swift_bridgeObjectRetain_n();
      v67 = sub_23A19AE10();
      v68 = sub_23A19B6A4();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = swift_slowAlloc();
        v70 = swift_slowAlloc();
        v145 = v36;
        v71 = v70;
        *(_QWORD *)&v155 = v70;
        *(_DWORD *)v69 = 136315394;
        swift_bridgeObjectRetain();
        v154 = sub_23A14071C(a2, v30, (uint64_t *)&v155);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v69 + 12) = 2080;
        v73 = *((_QWORD *)&xmmword_25694EC70 + 1);
        v72 = xmmword_25694EC70;
        swift_bridgeObjectRetain();
        v154 = sub_23A14071C(v72, v73, (uint64_t *)&v155);
        sub_23A19B728();
        v35 = v153;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v67, v68, "%s failed to read '%s' header", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v71, -1, -1);
        MEMORY[0x23B842FA4](v69, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v90 = *(void (**)(__int128 *))(v35 + 80);
      if (v90)
      {
        v155 = xmmword_25694EC70;
        v156 = 0;
        sub_23A13A0F8((uint64_t)v90);
        swift_bridgeObjectRetain();
        v90(&v155);
        sub_23A13A1E4((uint64_t)v90);
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v35 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
      {
        swift_retain();
        sub_23A19B05C();
        swift_release();
      }
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return;
  }
  a3 = v153;
  if (qword_256944380 != -1)
    goto LABEL_60;
LABEL_12:
  v53 = sub_23A19AE28();
  __swift_project_value_buffer(v53, (uint64_t)qword_25694EAF8);
  swift_bridgeObjectRetain_n();
  v54 = sub_23A19AE10();
  v55 = sub_23A19B6A4();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = (uint8_t *)swift_slowAlloc();
    v57 = swift_slowAlloc();
    *(_QWORD *)&v155 = v57;
    *(_DWORD *)v56 = 136315138;
    swift_bridgeObjectRetain();
    v154 = sub_23A14071C(v25, v30, (uint64_t *)&v155);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A123000, v54, v55, "%s failed to read HTTP response", v56, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v57, -1, -1);
    MEMORY[0x23B842FA4](v56, -1, -1);

    v58 = *(void (**)(__int128 *))(a3 + 80);
    if (!v58)
      goto LABEL_22;
    goto LABEL_21;
  }

  swift_bridgeObjectRelease_n();
  v58 = *(void (**)(__int128 *))(a3 + 80);
  if (v58)
  {
LABEL_21:
    v155 = 0uLL;
    v156 = 3;
    swift_retain();
    v58(&v155);
    sub_23A13A1E4((uint64_t)v58);
  }
LABEL_22:
  if (!*(_QWORD *)(a3 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
    return;
  swift_retain();
  sub_23A19B05C();
LABEL_57:
  swift_release();
}

uint64_t sub_23A14A994(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_23A19B7C4();
      v7 = (uint64_t)sub_23A14ED14(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_23A14EC30(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_23A14ABE0(void *a1, char a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  void (*v20)(char *);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(uint64_t *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[2];
  char v39;

  v15 = type metadata accessor for RawHTTPResponse(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v19 = result;
    if ((a2 & 1) != 0)
    {
      v26 = a1;
      if (qword_256944380 != -1)
        swift_once();
      v27 = sub_23A19AE28();
      __swift_project_value_buffer(v27, (uint64_t)qword_25694EAF8);
      sub_23A13AC5C(a1, 1);
      swift_bridgeObjectRetain();
      sub_23A13AC5C(a1, 1);
      swift_bridgeObjectRetain();
      v28 = sub_23A19AE10();
      v29 = sub_23A19B6A4();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v31 = swift_slowAlloc();
        v38[0] = v31;
        *(_DWORD *)v30 = 136315394;
        swift_bridgeObjectRetain();
        v37 = sub_23A14071C(a7, a8, v38);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v30 + 12) = 2080;
        v37 = (uint64_t)a1;
        v32 = a1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
        v33 = sub_23A19B518();
        v37 = sub_23A14071C(v33, v34, v38);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A13AC68(a1, 1);
        sub_23A13AC68(a1, 1);
        _os_log_impl(&dword_23A123000, v28, v29, "%s failed to receive HTTP file, error=%s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v31, -1, -1);
        MEMORY[0x23B842FA4](v30, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_23A13AC68(a1, 1);
        sub_23A13AC68(a1, 1);
      }

      v35 = *(void (**)(uint64_t *))(v19 + 80);
      if (v35)
      {
        v38[0] = (uint64_t)a1;
        v38[1] = 0;
        v39 = 1;
        sub_23A13AC5C(a1, 1);
        sub_23A13A0F8((uint64_t)v35);
        v35(v38);
        sub_23A13A1E4((uint64_t)v35);
        sub_23A13AC68(a1, 1);
      }
      if (!*(_QWORD *)(v19 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
      {
        sub_23A13AC68(a1, 1);
        return swift_release();
      }
      swift_retain();
      sub_23A19B05C();
      sub_23A13AC68(a1, 1);
    }
    else
    {
      v20 = *(void (**)(char *))(result + 64);
      if (v20)
      {
        v36 = *(_QWORD *)(result + 72);
        v21 = &v17[*(int *)(v15 + 24)];
        v22 = sub_23A19AC0C();
        v23 = v19;
        v24 = *(_QWORD *)(v22 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v21, a5, v22);
        v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
        v19 = v23;
        v25(v21, 0, 1, v22);
        *(_WORD *)v17 = a4;
        *(_OWORD *)(v17 + 8) = xmmword_23A19C6E0;
        *(_QWORD *)&v17[*(int *)(v15 + 28)] = a6;
        sub_23A13A0F8((uint64_t)v20);
        swift_unknownObjectRetain();
        v20(v17);
        sub_23A13A1E4((uint64_t)v20);
        sub_23A13AC20((uint64_t)v17, type metadata accessor for RawHTTPResponse);
      }
      if (!*(_QWORD *)(v19 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
        return swift_release();
      swift_retain();
      sub_23A19B05C();
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A14B01C(void *a1, unint64_t a2, char a3, uint64_t a4, __int16 a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  void (*v20)(char *);
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(uint64_t *);
  void *v33;
  unint64_t v34;
  char v35;
  void *v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];
  char v42;

  v15 = type metadata accessor for RawHTTPResponse(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v19 = result;
    if ((a3 & 1) != 0)
    {
      v23 = a1;
      if (qword_256944380 != -1)
        swift_once();
      v24 = sub_23A19AE28();
      __swift_project_value_buffer(v24, (uint64_t)qword_25694EAF8);
      sub_23A150974(a1, a2, 1);
      swift_bridgeObjectRetain();
      sub_23A150974(a1, a2, 1);
      swift_bridgeObjectRetain();
      v25 = sub_23A19AE10();
      v26 = sub_23A19B6A4();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        v41[0] = v28;
        *(_DWORD *)v27 = 136315394;
        swift_bridgeObjectRetain();
        v40 = sub_23A14071C(a7, a8, v41);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 12) = 2080;
        v40 = (uint64_t)a1;
        v29 = a1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
        v30 = sub_23A19B518();
        v40 = sub_23A14071C(v30, v31, v41);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A150980(a1, a2, 1);
        sub_23A150980(a1, a2, 1);
        _os_log_impl(&dword_23A123000, v25, v26, "%s failed to receive HTTP body, error=%s", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v28, -1, -1);
        MEMORY[0x23B842FA4](v27, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_23A150980(a1, a2, 1);
        sub_23A150980(a1, a2, 1);
      }

      v32 = *(void (**)(uint64_t *))(v19 + 80);
      if (v32)
      {
        v41[0] = (uint64_t)a1;
        v41[1] = 0;
        v42 = 2;
        sub_23A150974(a1, a2, 1);
        sub_23A13A0F8((uint64_t)v32);
        v32(v41);
        sub_23A13A1E4((uint64_t)v32);
        sub_23A150980(a1, a2, 1);
      }
      if (*(_QWORD *)(v19 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
      {
        swift_retain();
        sub_23A19B05C();
        v33 = a1;
        v34 = a2;
        v35 = 1;
LABEL_17:
        sub_23A150980(v33, v34, v35);
        swift_release();
        return swift_release();
      }
      v36 = a1;
      v37 = a2;
      v38 = 1;
    }
    else
    {
      v20 = *(void (**)(char *))(result + 64);
      if (v20)
      {
        v21 = &v17[*(int *)(v15 + 24)];
        v22 = sub_23A19AC0C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
        *(_WORD *)v17 = a5;
        *((_QWORD *)v17 + 1) = a1;
        *((_QWORD *)v17 + 2) = a2;
        *(_QWORD *)&v17[*(int *)(v15 + 28)] = a6;
        sub_23A150974(a1, a2, 0);
        sub_23A150974(a1, a2, 0);
        sub_23A13A0F8((uint64_t)v20);
        swift_unknownObjectRetain();
        v20(v17);
        sub_23A13A1E4((uint64_t)v20);
        sub_23A13AC20((uint64_t)v17, type metadata accessor for RawHTTPResponse);
      }
      else
      {
        sub_23A13A53C((uint64_t)a1, a2);
      }
      if (*(_QWORD *)(v19 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
      {
        swift_retain();
        sub_23A19B05C();
        v33 = a1;
        v34 = a2;
        v35 = 0;
        goto LABEL_17;
      }
      v36 = a1;
      v37 = a2;
      v38 = 0;
    }
    sub_23A150980(v36, v37, v38);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A14B494(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void *, uint64_t, uint64_t), uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, _BYTE *, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  _QWORD *v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _BYTE v41[4];
  int v42;
  void (*v43)(uint64_t, _BYTE *, uint64_t);
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void (*v50)(void *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];

  v50 = a8;
  v51 = a3;
  v49 = a1;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569451F0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_23A19B248();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = &v41[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v21 = &v41[-v20];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v47 = a9;
    v48 = a2;
    v23 = sub_23A1440B4(a7);
    v25 = v24;
    sub_23A13AC74(a5, (uint64_t)v14, (uint64_t *)&unk_2569451F0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      swift_bridgeObjectRelease();
      sub_23A13ACB8((uint64_t)v14, (uint64_t *)&unk_2569451F0);
    }
    else
    {
      v46 = v23;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32))(v21, v14, v15);
      if (qword_256944380 != -1)
        swift_once();
      v26 = sub_23A19AE28();
      __swift_project_value_buffer(v26, (uint64_t)qword_25694EAF8);
      v27 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v16 + 16);
      v27((uint64_t)v19, v21, v15);
      swift_bridgeObjectRetain();
      v28 = sub_23A19AE10();
      v29 = sub_23A19B6A4();
      v30 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        v31 = swift_slowAlloc();
        v43 = v27;
        v32 = v31;
        v44 = (_QWORD *)swift_slowAlloc();
        v45 = swift_slowAlloc();
        v53[0] = v45;
        *(_DWORD *)v32 = 136315650;
        v52 = sub_23A14071C(0xD000000000000023, 0x800000023A1A0EA0, v53);
        v42 = v30;
        sub_23A19B728();
        *(_WORD *)(v32 + 12) = 2080;
        swift_bridgeObjectRetain();
        v52 = sub_23A14071C(v46, v25, v53);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v32 + 22) = 2112;
        sub_23A131E34(&qword_256945200, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
        swift_allocError();
        v43(v33, v19, v15);
        v34 = _swift_stdlib_bridgeErrorToNSError();
        v52 = v34;
        sub_23A19B728();
        v35 = v28;
        v36 = v44;
        *v44 = v34;
        v37 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
        v37(v19, v15);
        _os_log_impl(&dword_23A123000, v35, (os_log_type_t)v42, "%s %s receiveMessage encountered error=%@", (uint8_t *)v32, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256945208);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v36, -1, -1);
        v38 = v45;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v38, -1, -1);
        MEMORY[0x23B842FA4](v32, -1, -1);

      }
      else
      {

        v37 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
        v37(v19, v15);
        swift_bridgeObjectRelease_n();
      }
      v37(v21, v15);
    }
    if (v51)
    {
      v50(v49, v48, 0);
    }
    else
    {
      v53[0] = 0;
      v53[1] = 0xE000000000000000;
      sub_23A19B794();
      swift_bridgeObjectRelease();
      sub_23A13A274();
      v39 = (void *)swift_allocError();
      *(_QWORD *)v40 = 0xD000000000000043;
      *(_QWORD *)(v40 + 8) = 0x800000023A1A0ED0;
      *(_BYTE *)(v40 + 16) = 0;
      v50(v39, 0, 1);

    }
    return swift_release();
  }
  return result;
}

void sub_23A14B968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  double v47;
  double v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t (**v64)();
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void (*v80)(void *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84[3];

  v80 = a5;
  v76 = a3;
  v77 = a4;
  v78 = a2;
  v82 = a1;
  v8 = sub_23A19ACD8();
  v73 = *(_QWORD *)(v8 - 8);
  v74 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v79 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A19AC0C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v75 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v81 = (char *)&v67 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v67 - v16;
  v18 = sub_23A19B35C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = *(void **)(v6 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x24BEE5610], v18);
  v23 = v22;
  v24 = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
  if ((v24 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
LABEL_4:
    v26 = sub_23A19AE28();
    __swift_project_value_buffer(v26, (uint64_t)qword_25694EAF8);
    v27 = v11;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v28(v17, v82, v10);
    swift_bridgeObjectRetain_n();
    v29 = sub_23A19AE10();
    v30 = sub_23A19B6BC();
    v31 = os_log_type_enabled(v29, v30);
    v69 = v24;
    v70 = v19;
    if (v31)
    {
      v32 = swift_slowAlloc();
      v68 = v28;
      v33 = v32;
      v67 = swift_slowAlloc();
      v84[0] = v67;
      *(_DWORD *)v33 = 136315394;
      swift_bridgeObjectRetain();
      v83 = sub_23A14071C(v24, v19, v84);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2080;
      sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v34 = sub_23A19B8FC();
      v83 = sub_23A14071C(v34, v35, v84);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v36 = *(void (**)(char *, uint64_t))(v27 + 8);
      v36(v17, v10);
      _os_log_impl(&dword_23A123000, v29, v30, "%s receiving file at file=%s", (uint8_t *)v33, 0x16u);
      v37 = v67;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v37, -1, -1);
      v38 = v33;
      v28 = v68;
      MEMORY[0x23B842FA4](v38, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v36 = *(void (**)(char *, uint64_t))(v27 + 8);
      v36(v17, v10);
    }

    v46 = v79;
    sub_23A19ACC0();
    sub_23A19ACB4();
    v48 = v47 * 1000.0;
    if ((~*(_QWORD *)&v48 & 0x7FF0000000000000) != 0)
    {
      if (v48 > -1.0)
      {
        if (v48 < 1.84467441e19)
        {
          v49 = (unint64_t)v48;
          (*(void (**)(char *, uint64_t))(v73 + 8))(v46, v74);
          v50 = swift_allocObject();
          *(_QWORD *)(v50 + 16) = v49;
          v51 = v81;
          v28(v81, v82, v10);
          v79 = (char *)v36;
          v52 = v75;
          v28(v75, (uint64_t)v51, v10);
          v53 = (*(unsigned __int8 *)(v27 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
          v54 = (v12 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
          v55 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
          v56 = (char *)swift_allocObject();
          v57 = v70;
          *((_QWORD *)v56 + 2) = v69;
          *((_QWORD *)v56 + 3) = v57;
          v58 = v10;
          v59 = v76;
          v60 = v27;
          v61 = v77;
          *((_QWORD *)v56 + 4) = v76;
          *((_QWORD *)v56 + 5) = v61;
          *((_QWORD *)v56 + 6) = v49;
          v62 = v52;
          v63 = v58;
          (*(void (**)(char *, char *))(v60 + 32))(&v56[v53], v62);
          v64 = (uint64_t (**)())&v56[v54];
          *v64 = sub_23A14FC6C;
          v64[1] = (uint64_t (*)())v50;
          *(_QWORD *)&v56[v55] = v78;
          v65 = &v56[(v55 + 15) & 0xFFFFFFFFFFFFFFF8];
          v66 = v72;
          *(_QWORD *)v65 = v80;
          *((_QWORD *)v65 + 1) = v66;
          swift_retain_n();
          sub_23A13A0F8(v59);
          swift_retain();
          sub_23A19AF84();
          swift_release();
          swift_release_n();
          swift_release();
          ((void (*)(char *, uint64_t))v79)(v81, v63);
          return;
        }
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (*(_QWORD *)(v6 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
  {
    v72 = a6;
    v71 = swift_retain();
    v24 = sub_23A1440B4(v71);
    v19 = v25;
    if (qword_256944380 == -1)
      goto LABEL_4;
    goto LABEL_16;
  }
  if (qword_256944380 != -1)
LABEL_20:
    swift_once();
  v39 = sub_23A19AE28();
  __swift_project_value_buffer(v39, (uint64_t)qword_25694EAF8);
  v40 = sub_23A19AE10();
  v41 = sub_23A19B6A4();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v84[0] = v43;
    *(_DWORD *)v42 = 136315138;
    v83 = sub_23A14071C(0xD00000000000003DLL, 0x800000023A1A0E10, v84);
    sub_23A19B728();
    _os_log_impl(&dword_23A123000, v40, v41, "%s connection is nil", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v43, -1, -1);
    MEMORY[0x23B842FA4](v42, -1, -1);
  }

  v84[0] = 0;
  v84[1] = 0xE000000000000000;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A13A274();
  v44 = (void *)swift_allocError();
  *(_QWORD *)v45 = 0xD00000000000004FLL;
  *(_QWORD *)(v45 + 8) = 0x800000023A1A0DC0;
  *(_BYTE *)(v45 + 16) = 1;
  v80(v44, 1);

}

uint64_t sub_23A14C09C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  double v7;
  double v8;
  unint64_t v9;
  _QWORD v10[2];

  v2 = sub_23A19ACD8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A19ACC0();
  result = sub_23A19ACB4();
  v8 = v7 * 1000.0;
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v8 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v8 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v9 = (unint64_t)v8;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v9 >= a1)
  {
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23A19B674();
    sub_23A19B590();
    return v10[0];
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_23A14C1C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(uint64_t), unint64_t a8, unint64_t a9, unint64_t a10, uint64_t (*a11)(uint64_t), uint64_t a12, uint64_t a13, void (*a14)(_QWORD, _QWORD))
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  unint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  void (*v44)(char *, uint64_t);
  os_log_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  unint64_t v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t result;
  id v80;
  unint64_t v81;
  uint64_t v82;
  os_log_t v83;
  void (*v84)(uint64_t, char *, uint64_t);
  _QWORD *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  double v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  void (*v96)(uint64_t);
  uint64_t (*v97)(uint64_t);
  unint64_t v98;
  double v99;
  uint64_t v100[2];

  v93 = a8;
  v94 = a5;
  v96 = a7;
  v98 = a6;
  LODWORD(v97) = a3;
  v16 = sub_23A19AC0C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v90 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23A19ACD8();
  v91 = *(double *)(v19 - 8);
  v92 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v95 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569451F0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23A19B248();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v82 - v29;
  sub_23A13AC74(a4, (uint64_t)v23, (uint64_t *)&unk_2569451F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_23A13ACB8((uint64_t)v23, (uint64_t *)&unk_2569451F0);
    v31 = v98;
  }
  else
  {
    v89 = v17;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v23, v24);
    if (qword_256944380 != -1)
      swift_once();
    v32 = sub_23A19AE28();
    __swift_project_value_buffer(v32, (uint64_t)qword_25694EAF8);
    v33 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v33(v28, v30, v24);
    v34 = v98;
    swift_bridgeObjectRetain_n();
    v35 = sub_23A19AE10();
    v36 = sub_23A19B6A4();
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      v86 = v37;
      v39 = v38;
      v85 = (_QWORD *)swift_slowAlloc();
      v87 = swift_slowAlloc();
      v100[0] = v87;
      *(_DWORD *)v39 = 136315650;
      v88 = v16;
      v99 = COERCE_DOUBLE(sub_23A14071C(0xD00000000000003DLL, 0x800000023A1A0E10, v100));
      v84 = (void (*)(uint64_t, char *, uint64_t))v33;
      sub_23A19B728();
      *(_WORD *)(v39 + 12) = 2080;
      swift_bridgeObjectRetain();
      v99 = COERCE_DOUBLE(sub_23A14071C(v94, v34, v100));
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 22) = 2112;
      sub_23A131E34(&qword_256945200, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
      swift_allocError();
      v83 = v35;
      v40 = a1;
      v84(v41, v28, v24);
      *(double *)&v42 = COERCE_DOUBLE(_swift_stdlib_bridgeErrorToNSError());
      v99 = *(double *)&v42;
      v16 = v88;
      sub_23A19B728();
      v43 = v85;
      *(double *)v85 = *(double *)&v42;
      a1 = v40;
      v44 = *(void (**)(char *, uint64_t))(v25 + 8);
      v44(v28, v24);
      v45 = v83;
      _os_log_impl(&dword_23A123000, v83, (os_log_type_t)v86, "%s %s receiveFile encountered error=%@", (uint8_t *)v39, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256945208);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v43, -1, -1);
      v46 = v87;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v46, -1, -1);
      MEMORY[0x23B842FA4](v39, -1, -1);

      v44(v30, v24);
    }
    else
    {

      v47 = *(void (**)(char *, uint64_t))(v25 + 8);
      v47(v28, v24);
      swift_bridgeObjectRelease_n();
      v47(v30, v24);
    }
    v31 = v34;
    v17 = v89;
  }
  if (v96)
    v96(a1);
  if ((v97 & 1) == 0)
  {
    if (qword_256944380 != -1)
      swift_once();
    v64 = sub_23A19AE28();
    __swift_project_value_buffer(v64, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v65 = sub_23A19AE10();
    v66 = sub_23A19B68C();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      v97 = a11;
      v69 = v68;
      v100[0] = v68;
      *(_DWORD *)v67 = 136316162;
      swift_bridgeObjectRetain();
      v99 = COERCE_DOUBLE(sub_23A14071C(v94, v31, v100));
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v67 + 12) = 2048;
      v99 = (double)a1 / (double)a13 * 100.0;
      sub_23A19B728();
      *(_WORD *)(v67 + 22) = 2048;
      v99 = *(double *)&a1;
      sub_23A19B728();
      *(_WORD *)(v67 + 32) = 2048;
      v99 = *(double *)&a13;
      v70 = sub_23A19B728();
      *(_WORD *)(v67 + 42) = 2080;
      v71 = v97(v70);
      v99 = COERCE_DOUBLE(sub_23A14071C(v71, v72, v100));
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v65, v66, "%s read %f%%, %ld/%ld bytes, %s elapsed", (uint8_t *)v67, 0x34u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v69, -1, -1);
      MEMORY[0x23B842FA4](v67, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    return 1;
  }
  v48 = (unint64_t)v95;
  sub_23A19ACC0();
  sub_23A19ACB4();
  v50 = v49 * 1000.0;
  if ((~*(_QWORD *)&v50 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v50 <= -1.0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v50 >= 1.84467441e19)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v48 = (unint64_t)v50;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)&v91 + 8))(v95, v92);
  if (v48 >= a9)
  {
    v93 = v48 - a9;
    v96 = (void (*)(uint64_t))a1;
    v48 = a10;
    if (qword_256944380 == -1)
      goto LABEL_17;
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  swift_once();
LABEL_17:
  v51 = sub_23A19AE28();
  v52 = __swift_project_value_buffer(v51, (uint64_t)qword_25694EAF8);
  v53 = v90;
  (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v90, v48, v16);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v95 = (char *)v52;
  v54 = sub_23A19AE10();
  v55 = sub_23A19B6BC();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc();
    v91 = *(double *)&a13;
    v57 = v56;
    v92 = swift_slowAlloc();
    v100[0] = v92;
    *(_DWORD *)v57 = 136315906;
    swift_bridgeObjectRetain();
    v99 = COERCE_DOUBLE(sub_23A14071C(v94, v31, v100));
    v97 = a11;
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v57 + 12) = 2080;
    sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v58 = sub_23A19B8FC();
    v99 = COERCE_DOUBLE(sub_23A14071C(v58, v59, v100));
    sub_23A19B728();
    swift_bridgeObjectRelease();
    v60 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v53, v16);
    *(_WORD *)(v57 + 22) = 2080;
    v61 = v97(v60);
    v99 = COERCE_DOUBLE(sub_23A14071C(v61, v62, v100));
    v31 = v98;
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 32) = 2048;
    v99 = v91;
    sub_23A19B728();
    _os_log_impl(&dword_23A123000, v54, v55, "%s finished receiving file=%s after duration=%s with size=%ld", (uint8_t *)v57, 0x2Au);
    v63 = v92;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v63, -1, -1);
    MEMORY[0x23B842FA4](v57, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);

    swift_release_n();
  }
  v73 = (uint64_t)v96;
  swift_bridgeObjectRetain_n();
  v74 = sub_23A19AE10();
  v75 = sub_23A19B6BC();
  if (!os_log_type_enabled(v74, v75))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
  v76 = (double)v93 / 1000.0;
  v77 = swift_slowAlloc();
  v78 = swift_slowAlloc();
  v100[0] = v78;
  *(_DWORD *)v77 = 136315394;
  swift_bridgeObjectRetain();
  v99 = COERCE_DOUBLE(sub_23A14071C(v94, v31, v100));
  sub_23A19B728();
  result = swift_bridgeObjectRelease_n();
  *(_WORD *)(v77 + 12) = 2080;
  if ((~*(_QWORD *)&v76 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v76 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v76 < 9.22337204e18)
  {
    v80 = sub_23A160B9C(v73, (uint64_t)v76);
    v99 = COERCE_DOUBLE(sub_23A14071C((uint64_t)v80, v81, v100));
    sub_23A19B728();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v74, v75, "%s observed throughput of %s", (uint8_t *)v77, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v78, -1, -1);
    MEMORY[0x23B842FA4](v77, -1, -1);

LABEL_31:
    a14(0, 0);
    return 1;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_23A14CDB4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (qword_256944380 != -1)
    swift_once();
  v5 = sub_23A19AE28();
  __swift_project_value_buffer(v5, (uint64_t)qword_25694EAF8);
  swift_bridgeObjectRetain_n();
  v6 = sub_23A19AE10();
  v7 = sub_23A19B68C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v12 = v9;
    *(_DWORD *)v8 = 136315394;
    swift_bridgeObjectRetain();
    sub_23A14071C(a2, a3, &v12);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    v10 = sub_23A19B59C();
    sub_23A14071C(v10, v11, &v12);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v6, v7, "%s received %s request", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v9, -1, -1);
    MEMORY[0x23B842FA4](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_23A14CF90(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v8 = sub_23A19AE28();
  v9 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v13 = sub_23A19B59C();
    v15 = v14;
    swift_beginAccess();
    *(_QWORD *)(a2 + 16) = v13;
    *(_QWORD *)(a2 + 24) = v15;
    swift_bridgeObjectRelease();
    if (qword_256944380 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v8, (uint64_t)qword_25694EAF8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v16, v8);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v17 = sub_23A19AE10();
    v18 = sub_23A19B68C();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      v27 = v18;
      v19 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v32 = v28;
      *(_DWORD *)v19 = 136315394;
      swift_bridgeObjectRetain();
      v31 = sub_23A14071C(a3, a4, &v32);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2080;
      swift_beginAccess();
      v20 = *(_QWORD *)(a2 + 24);
      if (v20)
      {
        v29 = *(_QWORD *)(a2 + 16);
        v30 = v20;
        swift_bridgeObjectRetain();
        v21 = sub_23A19B518();
        v23 = v22;
      }
      else
      {
        v23 = 0xE300000000000000;
        v21 = 7104878;
      }
      v24 = v27;
      v29 = sub_23A14071C(v21, v23, &v32);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v17, v24, "%s to %s path", (uint8_t *)v19, 0x16u);
      v25 = v28;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v25, -1, -1);
      MEMORY[0x23B842FA4](v19, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return result;
}

uint64_t sub_23A14D278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;

  if (qword_256944380 != -1)
    swift_once();
  v8 = sub_23A19AE28();
  __swift_project_value_buffer(v8, (uint64_t)qword_25694EAF8);
  swift_bridgeObjectRetain_n();
  v9 = sub_23A19AE10();
  v10 = sub_23A19B68C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v18 = v12;
    *(_DWORD *)v11 = 136315650;
    swift_bridgeObjectRetain();
    sub_23A14071C(a5, a6, &v18);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    v13 = sub_23A19B59C();
    sub_23A14071C(v13, v14, &v18);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2080;
    v15 = sub_23A19B59C();
    sub_23A14071C(v15, v16, &v18);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v9, v10, "%s read HTTP header '%s' with value '%s'", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v12, -1, -1);
    MEMORY[0x23B842FA4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 1;
}

uint64_t sub_23A14D4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4, a5) & 1;
}

uint64_t *CosmoHttpConnection.deinit()
{
  uint64_t *v0;
  char *v1;
  uint64_t v2;

  sub_23A13A1E4(v0[2]);
  sub_23A13A1E4(v0[4]);
  sub_23A13A1E4(v0[6]);
  sub_23A13A1E4(v0[8]);
  sub_23A13A1E4(v0[10]);
  v1 = (char *)v0 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_id;
  v2 = sub_23A19AD2C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23A13AC20((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_config, type metadata accessor for CosmoHttpConnection.Configuration);
  sub_23A13AC20((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_descriptor, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t CosmoHttpConnection.__deallocating_deinit()
{
  CosmoHttpConnection.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_23A14D5CC()
{
  unint64_t result;

  result = qword_256944E78;
  if (!qword_256944E78)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CosmoHttpConnection.State, &type metadata for CosmoHttpConnection.State);
    atomic_store(result, (unint64_t *)&qword_256944E78);
  }
  return result;
}

uint64_t sub_23A14D610()
{
  return sub_23A131E34((unint64_t *)&unk_2569449A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_23A14D63C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_id;
  v4 = sub_23A19AD2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id sub_23A14D690(id result, id a2, char a3)
{
  if (a3 == 2 || a3 == 1)
    return result;
  if (!a3)
    return (id)swift_bridgeObjectRetain();
  return result;
}

void destroy for CosmoHttpError(uint64_t a1)
{
  sub_23A14D6C8(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_23A14D6C8(void *a1, id a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {

  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t _s5Cosmo14CosmoHttpErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23A14D690(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CosmoHttpError(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23A14D690(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23A14D6C8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CosmoHttpError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23A14D6C8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoHttpError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CosmoHttpError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23A14D85C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_23A14D874(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CosmoHttpError()
{
  return &type metadata for CosmoHttpError;
}

uint64_t getEnumTagSinglePayload for CosmoListener.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CosmoHttpConnection.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A14D978 + 4 * byte_23A19CFC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A14D9AC + 4 * byte_23A19CFC0[v4]))();
}

uint64_t sub_23A14D9AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A14D9B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A14D9BCLL);
  return result;
}

uint64_t sub_23A14D9C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A14D9D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A14D9D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A14D9DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CosmoHttpConnection.State()
{
  return &type metadata for CosmoHttpConnection.State;
}

uint64_t sub_23A14D9F8()
{
  return type metadata accessor for CosmoHttpConnection(0);
}

uint64_t type metadata accessor for CosmoHttpConnection(uint64_t a1)
{
  return sub_23A141024(a1, qword_256944EC8);
}

uint64_t sub_23A14DA14()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23A19AD2C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for CosmoHttpConnection.Configuration(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for NetworkDescriptor();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for CosmoHttpConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CosmoHttpConnection.stateChangedCallback.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of CosmoHttpConnection.stateChangedCallback.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of CosmoHttpConnection.stateChangedCallback.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CosmoHttpConnection.Configuration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23A19AC0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for CosmoHttpConnection.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for CosmoHttpConnection.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23A19AC0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for CosmoHttpConnection.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23A19AC0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *initializeWithTake for CosmoHttpConnection.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23A19AC0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for CosmoHttpConnection.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23A19AC0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoHttpConnection.Configuration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A14DD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for CosmoHttpConnection.Configuration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A14DDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23A14DE00()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A19AC0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23A14DE78(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = (uint64_t *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v7 = a2 + 1;
    v8 = a2[2];
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
    }
    else
    {
      v10 = *v7;
      sub_23A131DF0(*v7, a2[2]);
      v4[1] = v10;
      v4[2] = v8;
    }
    v11 = *(int *)(a3 + 24);
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23A19AC0C();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_unknownObjectRetain();
  }
  return v4;
}

uint64_t sub_23A14DFB8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 >> 60 != 15)
    sub_23A125ED8(*(_QWORD *)(a1 + 8), v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_23A19AC0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_unknownObjectRelease();
}

uint64_t sub_23A14E048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = (uint64_t *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_23A131DF0(*v6, *(_QWORD *)(a2 + 16));
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v7;
  }
  v9 = *(int *)(a3 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_23A19AC0C();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_23A14E15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = (_OWORD *)(a1 + 8);
  v7 = (uint64_t *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) >> 60 == 15)
  {
    if (v8 >> 60 != 15)
    {
      v9 = *v7;
      sub_23A131DF0(*v7, *(_QWORD *)(a2 + 16));
      *(_QWORD *)(a1 + 8) = v9;
      *(_QWORD *)(a1 + 16) = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
    sub_23A14E30C(a1 + 8);
LABEL_6:
    *v6 = *(_OWORD *)v7;
    goto LABEL_8;
  }
  v10 = *v7;
  sub_23A131DF0(*v7, *(_QWORD *)(a2 + 16));
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v8;
  sub_23A125ED8(v11, v12);
LABEL_8:
  v13 = *(int *)(a3 + 24);
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = sub_23A19AC0C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_13;
  }
  if (v20)
  {
LABEL_13:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_14:
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_23A14E30C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t sub_23A14E340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23A19AC0C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_23A14E420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = (_OWORD *)(a1 + 8);
  v7 = (_OWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8 >> 60 == 15)
    goto LABEL_4;
  v9 = *(_QWORD *)(a2 + 16);
  if (v9 >> 60 == 15)
  {
    sub_23A14E30C(a1 + 8);
LABEL_4:
    *v6 = *v7;
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)v7;
  *(_QWORD *)(a1 + 16) = v9;
  sub_23A125ED8(v10, v8);
LABEL_6:
  v11 = *(int *)(a3 + 24);
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_23A19AC0C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_11;
  }
  if (v18)
  {
LABEL_11:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_12:
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_23A14E598()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A14E5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23A14E628()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A14E634(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for RawHTTPResponse(uint64_t a1)
{
  return sub_23A141024(a1, (uint64_t *)&unk_2569451A0);
}

void sub_23A14E6C8()
{
  unint64_t v0;

  sub_23A14E750();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23A14E750()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2569451B0)
  {
    sub_23A19AC0C();
    v0 = sub_23A19B710();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2569451B0);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RawHTTPRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for RawHTTPRequest(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >> 60 != 15)
    sub_23A125ED8(*(_QWORD *)(a1 + 16), v2);
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for RawHTTPRequest(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_23A131DF0(v7, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
  }
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RawHTTPRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 2;
  v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_23A131DF0(*v4, a2[3]);
      v8 = a1[2];
      v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_23A125ED8(v8, v9);
      goto LABEL_8;
    }
    sub_23A14E30C((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v6 = *v4;
  sub_23A131DF0(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
LABEL_8:
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for RawHTTPRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_23A125ED8(v8, v6);
      goto LABEL_6;
    }
    sub_23A14E30C((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
LABEL_6:
  a1[4] = a2[4];
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawHTTPRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RawHTTPRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawHTTPRequest()
{
  return &type metadata for RawHTTPRequest;
}

uint64_t sub_23A14EAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569451E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A14EB0C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BDCDC48] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t sub_23A14EB48()
{
  return swift_deallocObject();
}

uint64_t sub_23A14EB58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = *(uint64_t **)(v0 + 16);
  *v1 = sub_23A19B59C();
  v1[1] = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A14EB84()
{
  return swift_deallocObject();
}

uint64_t sub_23A14EB94()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

_QWORD *sub_23A14EBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256944DA8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unsigned __int8 *sub_23A14EC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_23A19B608();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23A14EF90();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_23A19B7C4();
  }
LABEL_7:
  v11 = sub_23A14ED14(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_23A14ED14(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_23A14EF90()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_23A19B614();
  v4 = sub_23A14F00C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23A14F00C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_23A14F150(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23A14EBCC(v9, 0);
      v12 = sub_23A14F23C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x23B84244C](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x23B84244CLL);
LABEL_9:
      sub_23A19B7C4();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x23B84244C]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_23A14F150(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_23A18BF6C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_23A18BF6C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_23A19B5D8();
  }
  __break(1u);
  return result;
}

unint64_t sub_23A14F23C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_23A18BF6C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_23A19B5E4();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_23A19B7C4();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_23A18BF6C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_23A19B5C0();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23A14F44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];
  __int128 v26[2];
  uint64_t v27[6];

  v12 = sub_23A19B2D8();
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23A19B2F0();
  v15 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[3] = a5;
  v27[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  sub_23A13A854((uint64_t)v27, (uint64_t)v26);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a2;
  v19[4] = a3;
  sub_23A13A83C(v26, (uint64_t)(v19 + 5));
  aBlock[4] = sub_23A14F6E4;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_12;
  v20 = _Block_copy(aBlock);
  swift_retain();
  sub_23A13A0F8(a2);
  sub_23A19B2E4();
  v24 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A1516C4(&qword_256944520, (uint64_t *)&unk_2569458B0, MEMORY[0x24BEE12C8]);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v17, v14, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v22);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_23A14F6A8()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

void sub_23A14F6E4()
{
  uint64_t v0;

  sub_23A146098(*(_QWORD *)(v0 + 16), *(void (**)(void *, uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), (char *)(v0 + 40));
}

uint64_t sub_23A14F6F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A14F730(uint64_t a1)
{
  uint64_t v1;

  return sub_23A146F14(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint8_t **)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(void *, uint64_t))(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23A14F744()
{
  return swift_deallocObject();
}

uint64_t sub_23A14F754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_23A19AC0C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_23A19AFE4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_23A14F858(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v7 = *(_QWORD *)(sub_23A19AC0C() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)(sub_23A19AFE4() - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + v11 + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_23A147590(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + v8, *(_QWORD *)(v3 + v9), *(uint64_t (**)(uint64_t))(v3 + v10), *(_QWORD *)(v3 + v10 + 8), *(_QWORD *)(v3 + v11), v3 + v13, *(_QWORD *)(v3 + ((*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFF8))) & 1;
}

uint64_t sub_23A14F93C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v25;

  v8 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a3 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
  {
    if (qword_256944380 != -1)
      swift_once();
    v17 = sub_23A19AE28();
    __swift_project_value_buffer(v17, (uint64_t)qword_25694EAF8);
    v18 = sub_23A19AE10();
    v19 = sub_23A19B6A4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      MEMORY[0x23B842FA4](v20, -1, -1);
    }
    goto LABEL_13;
  }
  sub_23A19B08C();
  swift_retain_n();
  sub_23A1558D0();
  v14 = sub_23A19AF6C();
  if (!v14)
  {
    if (qword_256944380 != -1)
      swift_once();
    v21 = sub_23A19AE28();
    __swift_project_value_buffer(v21, (uint64_t)qword_25694EAF8);
    v18 = sub_23A19AE10();
    v22 = sub_23A19B6A4();
    if (os_log_type_enabled(v18, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      MEMORY[0x23B842FA4](v23, -1, -1);
    }
    swift_release();
LABEL_13:

    swift_release();
    sub_23A13AC20(a2, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
    sub_23A13AC20(a1, type metadata accessor for CosmoHttpConnection.Configuration);
    return 0;
  }
  v15 = v14;
  sub_23A13ABDC(a1, (uint64_t)v13, type metadata accessor for CosmoHttpConnection.Configuration);
  sub_23A13ABDC(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoHttpConnection(0);
  v16 = swift_allocObject();
  sub_23A143458((uint64_t)v13, (uint64_t)v10, 1, v15, a4);
  swift_release();
  swift_release();
  sub_23A13AC20(a2, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  sub_23A13AC20(a1, type metadata accessor for CosmoHttpConnection.Configuration);
  return v16;
}

uint64_t sub_23A14FC5C()
{
  return swift_deallocObject();
}

uint64_t sub_23A14FC6C()
{
  uint64_t v0;

  return sub_23A14C09C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A14FC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23A19AC0C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 56) & ~v3), v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A14FD44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v9 = *(_QWORD *)(sub_23A19AC0C() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23A14C1C4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(void (**)(uint64_t))(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), v4 + v10, *(uint64_t (**)(uint64_t))(v4 + v11), *(_QWORD *)(v4 + v11 + 8), *(_QWORD *)(v4 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(_QWORD, _QWORD))(v4+ ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8))) & 1;
}

uint64_t sub_23A14FE08(uint64_t a1, uint64_t a2, unint64_t isEscapingClosureAtFileLocation)
{
  NSObject *v5;
  NSObject *v6;
  nw_protocol_metadata_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unsigned int status_code;
  uint64_t aBlock[6];
  uint64_t v28;

  v5 = sub_23A19AFC0();
  v6 = nw_protocol_copy_http_definition();
  v7 = nw_content_context_copy_protocol_metadata(v5, v6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v7)
  {
    if (!nw_http_metadata_copy_response())
    {
      if (qword_256944380 != -1)
        swift_once();
      v18 = sub_23A19AE28();
      __swift_project_value_buffer(v18, (uint64_t)qword_25694EAF8);
      swift_bridgeObjectRetain_n();
      v19 = sub_23A19AE10();
      v20 = sub_23A19B6A4();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        aBlock[0] = v22;
        *(_DWORD *)v21 = 136315138;
        swift_bridgeObjectRetain();
        v28 = sub_23A14071C(a2, isEscapingClosureAtFileLocation, aBlock);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A123000, v19, v20, "%s could not extract HTTP response metadata", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v22, -1, -1);
        MEMORY[0x23B842FA4](v21, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_unknownObjectRelease();
      return 0;
    }
    status_code = nw_http_response_get_status_code();
    if (qword_256944380 != -1)
      swift_once();
    v8 = sub_23A19AE28();
    __swift_project_value_buffer(v8, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v9 = sub_23A19AE10();
    v10 = sub_23A19B68C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      aBlock[0] = v12;
      *(_DWORD *)v11 = 136315394;
      swift_bridgeObjectRetain();
      v28 = sub_23A14071C(a2, isEscapingClosureAtFileLocation, aBlock);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v11 + 12) = 512;
      LOWORD(v28) = status_code;
      sub_23A19B728();
      _os_log_impl(&dword_23A123000, v9, v10, "%s read HTTP status %hu", (uint8_t *)v11, 0x10u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v12, -1, -1);
      MEMORY[0x23B842FA4](v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    nw_http_response_copy();
    nw_http_response_copy_header_fields();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a2;
    *(_QWORD *)(v23 + 24) = isEscapingClosureAtFileLocation;
    a2 = swift_allocObject();
    *(_QWORD *)(a2 + 16) = sub_23A1509B0;
    *(_QWORD *)(a2 + 24) = v23;
    aBlock[4] = (uint64_t)sub_23A1509C8;
    aBlock[5] = a2;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23A14D4A0;
    aBlock[3] = (uint64_t)&block_descriptor_50;
    v24 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    nw_http_fields_enumerate();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    _Block_release(v24);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return status_code;
    __break(1u);
  }
  else if (qword_256944380 == -1)
  {
    goto LABEL_8;
  }
  swift_once();
LABEL_8:
  v13 = sub_23A19AE28();
  __swift_project_value_buffer(v13, (uint64_t)qword_25694EAF8);
  swift_bridgeObjectRetain_n();
  v14 = sub_23A19AE10();
  v15 = sub_23A19B6A4();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    aBlock[0] = v17;
    *(_DWORD *)v16 = 136315138;
    swift_bridgeObjectRetain();
    v28 = sub_23A14071C(a2, isEscapingClosureAtFileLocation, aBlock);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A123000, v14, v15, "%s could not extract HTTP definition for HTTP response", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v17, -1, -1);
    MEMORY[0x23B842FA4](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_23A150410()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A150434(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];

  v12 = sub_23A19B35C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  v31 = a3;
  *(_WORD *)(v16 + 24) = a3;
  *(_QWORD *)(v16 + 32) = a4;
  *(_QWORD *)(v16 + 40) = a5;
  v32 = a5;
  v17 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  *(_QWORD *)(v16 + 48) = a6;
  *v15 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17;
  LOBYTE(a3) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((a3 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_5;
  }
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection);
  if (v19)
  {
    v20 = swift_allocObject();
    swift_weakInit();
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v20;
    v21[3] = v19;
    v21[4] = sub_23A150930;
    v21[5] = v16;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_23A19AFF0();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  if (qword_256944380 != -1)
    goto LABEL_10;
LABEL_5:
  v22 = sub_23A19AE28();
  __swift_project_value_buffer(v22, (uint64_t)qword_25694EAF8);
  v23 = sub_23A19AE10();
  v24 = sub_23A19B6A4();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v34[0] = v26;
    *(_DWORD *)v25 = 136315138;
    v33 = sub_23A14071C(0xD000000000000023, 0x800000023A1A0EA0, v34);
    sub_23A19B728();
    _os_log_impl(&dword_23A123000, v23, v24, "%s connection is nil", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v26, -1, -1);
    MEMORY[0x23B842FA4](v25, -1, -1);
  }

  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A13A274();
  v27 = (void *)swift_allocError();
  *(_QWORD *)v28 = 0xD000000000000035;
  *(_QWORD *)(v28 + 8) = 0x800000023A1A0E60;
  *(_BYTE *)(v28 + 16) = 1;
  sub_23A14B01C(v27, 0, 1, a2, v31, a4, v32, a6);

  return swift_release();
}

uint64_t sub_23A1507E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23A19AC0C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A150884(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(sub_23A19AC0C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23A14ABE0(a1, v4, *(_QWORD *)(v2 + 16), *(_WORD *)(v2 + 24), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23A1508FC()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A150930(void *a1, unint64_t a2, char a3)
{
  uint64_t v3;

  return sub_23A14B01C(a1, a2, a3 & 1, *(_QWORD *)(v3 + 16), *(_WORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48));
}

uint64_t sub_23A15094C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_23A14B494(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(void (**)(void *, uint64_t, uint64_t))(v5 + 32), *(_QWORD *)(v5 + 40));
}

id sub_23A150974(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)sub_23A13A53C((uint64_t)a1, a2);
}

void sub_23A150980(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_23A125F1C((uint64_t)a1, a2);
}

uint64_t sub_23A15098C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A1509B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23A14D278(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_23A1509B8()
{
  return swift_deallocObject();
}

uint64_t sub_23A1509C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_23A1509EC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  NSObject *v5;
  NSObject *v6;
  nw_protocol_metadata_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  char isEscapingClosureAtFileLocation;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *log;
  uint64_t v34;
  uint64_t aBlock;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void *v38;
  uint64_t (*v39)();
  uint64_t v40;
  uint64_t v41;

  v5 = sub_23A19AFC0();
  v6 = nw_protocol_copy_http_definition();
  v7 = nw_content_context_copy_protocol_metadata(v5, v6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (!v7)
  {
    if (qword_256944380 == -1)
      goto LABEL_8;
    goto LABEL_27;
  }
  if (!nw_http_metadata_copy_request())
  {
    if (qword_256944380 != -1)
      swift_once();
    v22 = sub_23A19AE28();
    __swift_project_value_buffer(v22, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v23 = sub_23A19AE10();
    v24 = sub_23A19B6A4();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      aBlock = v26;
      *(_DWORD *)v25 = 136315138;
      swift_bridgeObjectRetain();
      v41 = sub_23A14071C(a2, a3, &aBlock);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v23, v24, "%s could not extract HTTP request metadata", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v26, -1, -1);
      MEMORY[0x23B842FA4](v25, -1, -1);

LABEL_22:
      swift_unknownObjectRelease();
      return 0;
    }

LABEL_21:
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23A1515A4;
  *(_QWORD *)(v9 + 24) = v8;
  v39 = sub_23A15178C;
  v40 = v9;
  v10 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v36 = 1107296256;
  v37 = sub_23A142CCC;
  v38 = &block_descriptor_69;
  v11 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  nw_http_request_access_method();
  _Block_release(v11);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v11 & 1) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a2;
  v34 = a2;
  v13[4] = a3;
  a2 = swift_allocObject();
  *(_QWORD *)(a2 + 16) = sub_23A1515C0;
  *(_QWORD *)(a2 + 24) = v13;
  v39 = sub_23A15178C;
  v40 = a2;
  aBlock = v10;
  v36 = 1107296256;
  v37 = sub_23A142CCC;
  v38 = &block_descriptor_81;
  v14 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  nw_http_request_access_path();
  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
LABEL_8:
    v17 = sub_23A19AE28();
    __swift_project_value_buffer(v17, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v18 = sub_23A19AE10();
    v19 = sub_23A19B6A4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      aBlock = v21;
      *(_DWORD *)v20 = 136315138;
      swift_bridgeObjectRetain();
      v41 = sub_23A14071C(a2, a3, &aBlock);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v18, v19, "%s could not extract HTTP definition for HTTP request", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v21, -1, -1);
      MEMORY[0x23B842FA4](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  swift_beginAccess();
  if (!*(_QWORD *)(v12 + 24))
  {
    if (qword_256944380 != -1)
      swift_once();
    v27 = sub_23A19AE28();
    __swift_project_value_buffer(v27, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v28 = sub_23A19AE10();
    v29 = sub_23A19B6A4();
    if (os_log_type_enabled(v28, v29))
    {
      log = v28;
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v41 = v31;
      *(_DWORD *)v30 = 136315138;
      swift_bridgeObjectRetain();
      sub_23A14071C(v34, a3, &v41);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, log, v29, "%s got bad request with no HTTP path", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v31, -1, -1);
      MEMORY[0x23B842FA4](v30, -1, -1);
      swift_release();
      swift_release();
      swift_release();

      swift_unknownObjectRelease();
      goto LABEL_22;
    }
    swift_release();
    swift_release();
    swift_release();

    swift_unknownObjectRelease();
    goto LABEL_21;
  }
  v16 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v16;
}

uint64_t sub_23A151140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  unint64_t v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[2];

  v14 = sub_23A19B35C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (uint8_t **)((char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v35 = a3;
  v36 = a6;
  v18[4] = a4;
  v18[5] = a5;
  v19 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  v18[6] = a6;
  v20 = a7;
  v21 = v18;
  v18[7] = v20;
  *v17 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v19;
  LOBYTE(v19) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v19 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_5;
  }
  v23 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection);
  if (v23)
  {
    v24 = swift_allocObject();
    swift_weakInit();
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v24;
    v25[3] = v23;
    v25[4] = sub_23A15153C;
    v25[5] = v21;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_23A19AFF0();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  if (qword_256944380 != -1)
    goto LABEL_10;
LABEL_5:
  v26 = sub_23A19AE28();
  __swift_project_value_buffer(v26, (uint64_t)qword_25694EAF8);
  v27 = sub_23A19AE10();
  v28 = sub_23A19B6A4();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v38[0] = v30;
    *(_DWORD *)v29 = 136315138;
    v34 = v29 + 4;
    v37 = sub_23A14071C(0xD000000000000023, 0x800000023A1A0EA0, v38);
    sub_23A19B728();
    _os_log_impl(&dword_23A123000, v27, v28, "%s connection is nil", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v30, -1, -1);
    MEMORY[0x23B842FA4](v29, -1, -1);
  }

  v38[0] = 0;
  v38[1] = 0xE000000000000000;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A13A274();
  v31 = (void *)swift_allocError();
  *(_QWORD *)v32 = 0xD000000000000035;
  *(_QWORD *)(v32 + 8) = 0x800000023A1A0E60;
  *(_BYTE *)(v32 + 16) = 1;
  sub_23A149270(v31, 0, 1, a2, v35, a4, a5, v36, v20);

  return swift_release();
}

uint64_t sub_23A151500()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23A15153C(void *a1, unint64_t a2, char a3)
{
  uint64_t v3;

  sub_23A149270(a1, a2, a3 & 1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t objectdestroy_40Tm_0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23A1515A4(uint64_t a1)
{
  uint64_t v1;

  sub_23A14CDB4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23A1515AC()
{
  return swift_deallocObject();
}

uint64_t sub_23A1515C0(uint64_t a1)
{
  uint64_t v1;

  return sub_23A14CF90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23A1515CC()
{
  return swift_deallocObject();
}

uint64_t sub_23A1515DC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A151608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_23A148698(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t sub_23A151610()
{
  uint64_t v0;

  return sub_23A145D84(v0);
}

uint64_t sub_23A151618()
{
  uint64_t v0;

  return sub_23A143E54(v0);
}

uint64_t objectdestroy_74Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23A151650(uint64_t a1)
{
  uint64_t v1;

  sub_23A1441CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23A15165C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23A151680()
{
  unint64_t result;

  result = qword_256945870;
  if (!qword_256945870)
  {
    result = MEMORY[0x23B842EF0](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256945870);
  }
  return result;
}

uint64_t sub_23A1516C4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B842EF0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23A151704()
{
  unint64_t result;

  result = qword_256945290;
  if (!qword_256945290)
  {
    result = MEMORY[0x23B842EF0](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_256945290);
  }
  return result;
}

uint64_t sub_23A151790(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[4];
  _QWORD v5[2];

  v4[2] = a2;
  sub_23A19B710();
  sub_23A151818((void (*)(char *, char *))sub_23A151E60, (uint64_t)v4, MEMORY[0x24BEE4078], MEMORY[0x24BEE0D00], v2, (uint64_t)v5);
  if (v5[1])
    return v5[0];
  else
    return 7104878;
}

uint64_t sub_23A151818@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_23A1519A8()
{
  uint64_t v0;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_25694EAF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25694EAF8);
  return sub_23A19AE1C();
}

uint64_t sub_23A151A24()
{
  uint64_t v0;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_25694EB10);
  __swift_project_value_buffer(v0, (uint64_t)qword_25694EB10);
  return sub_23A19AE1C();
}

uint64_t sub_23A151AA0()
{
  uint64_t v0;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_25694EB28);
  __swift_project_value_buffer(v0, (uint64_t)qword_25694EB28);
  return sub_23A19AE1C();
}

uint64_t sub_23A151B20()
{
  uint64_t v0;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_25694EB40);
  __swift_project_value_buffer(v0, (uint64_t)qword_25694EB40);
  return sub_23A19AE1C();
}

uint64_t sub_23A151B98()
{
  uint64_t v0;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_25694EB58);
  __swift_project_value_buffer(v0, (uint64_t)qword_25694EB58);
  return sub_23A19AE1C();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23A151C58()
{
  uint64_t v0;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_25694EB70);
  __swift_project_value_buffer(v0, (uint64_t)qword_25694EB70);
  return sub_23A19AE1C();
}

uint64_t sub_23A151CD0()
{
  uint64_t v0;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_25694EB88);
  __swift_project_value_buffer(v0, (uint64_t)qword_25694EB88);
  return sub_23A19AE1C();
}

uint64_t sub_23A151D58()
{
  uint64_t v0;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_25694EBA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25694EBA0);
  return sub_23A19AE1C();
}

uint64_t sub_23A151DDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_23A19B518();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_23A151E60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23A151DDC(a1, a2);
}

uint64_t sub_23A151E7C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x6572756C696166;
  else
    v2 = 0x73736563637573;
  if ((a2 & 1) != 0)
    v3 = 0x6572756C696166;
  else
    v3 = 0x73736563637573;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_23A19B908();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_23A151EF8(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aReady_8[8 * a1] == *(_QWORD *)&aReady_8[8 * a2]
    && *(_QWORD *)&aCanceled_3[8 * a1 + 8] == *(_QWORD *)&aCanceled_3[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_23A19B908();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_23A151F80(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6164696C61766E69;
  else
    v3 = 0x7964616572;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xEB00000000646574;
  if ((a2 & 1) != 0)
    v5 = 0x6164696C61766E69;
  else
    v5 = 0x7964616572;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000646574;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23A19B908();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23A152024(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aReady_9[8 * a1] == *(_QWORD *)&aReady_9[8 * a2] && qword_23A19D4B8[a1] == qword_23A19D4B8[a2])
    v3 = 1;
  else
    v3 = sub_23A19B908();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_23A1520A8()
{
  sub_23A19B980();
  sub_23A19B56C();
  swift_bridgeObjectRelease();
  return sub_23A19B9A4();
}

uint64_t sub_23A152110()
{
  sub_23A19B980();
  sub_23A19B56C();
  swift_bridgeObjectRelease();
  return sub_23A19B9A4();
}

uint64_t sub_23A15217C()
{
  sub_23A19B980();
  sub_23A19B56C();
  swift_bridgeObjectRelease();
  return sub_23A19B9A4();
}

uint64_t sub_23A1521F0()
{
  sub_23A19B980();
  sub_23A19B56C();
  swift_bridgeObjectRelease();
  return sub_23A19B9A4();
}

uint64_t sub_23A152274()
{
  sub_23A19B56C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A1522B8()
{
  sub_23A19B56C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A1522FC()
{
  sub_23A19B56C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A152358()
{
  sub_23A19B56C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A152398()
{
  sub_23A19B980();
  sub_23A19B56C();
  swift_bridgeObjectRelease();
  return sub_23A19B9A4();
}

uint64_t sub_23A152400()
{
  sub_23A19B980();
  sub_23A19B56C();
  swift_bridgeObjectRelease();
  return sub_23A19B9A4();
}

uint64_t sub_23A152480()
{
  sub_23A19B980();
  sub_23A19B56C();
  swift_bridgeObjectRelease();
  return sub_23A19B9A4();
}

uint64_t sub_23A1524E4()
{
  sub_23A19B980();
  sub_23A19B56C();
  swift_bridgeObjectRelease();
  return sub_23A19B9A4();
}

uint64_t sub_23A152554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_2569452A0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2569452A0);
  if (qword_256944388 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_25694EB10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_23A1525E4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6164696C61766E69;
  else
    return 0x7964616572;
}

uint64_t sub_23A152620(char *a1, char *a2)
{
  return sub_23A151F80(*a1, *a2) & 1;
}

uint64_t sub_23A152640()
{
  return sub_23A1521F0();
}

uint64_t sub_23A152658()
{
  return sub_23A1522FC();
}

uint64_t sub_23A152670()
{
  return sub_23A152400();
}

uint64_t sub_23A152688@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23A19B860();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_23A1526E4@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23A1525E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

_QWORD *sub_23A15270C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = v4;
  v37 = a3;
  v34 = a2;
  v8 = sub_23A19AEC4();
  MEMORY[0x24BDAC7A8](v8);
  v35 = (uint64_t)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NetworkDescriptor();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v36 = (uint64_t)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v32 - v13;
  v33 = sub_23A19B6EC();
  v15 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23A19B6C8();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23A19B2F0();
  MEMORY[0x24BDAC7A8](v19);
  v4[2] = 0;
  v4[3] = 0;
  *((_BYTE *)v4 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady) = 0;
  *((_BYTE *)v4 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) = 0;
  v20 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue) = MEMORY[0x24BEE4AF8];
  v21 = v34;
  v4[4] = a1;
  v4[5] = v21;
  if (a4)
  {
    v22 = a4;
  }
  else
  {
    v34 = sub_23A125AD0();
    sub_23A19B2E4();
    v38 = v20;
    v32[1] = sub_23A131E34((unint64_t *)&unk_256945240, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569444F0);
    sub_23A131E74((unint64_t *)&unk_256945250, (uint64_t *)&unk_2569444F0);
    sub_23A19B764();
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5750], v33);
    v22 = (void *)sub_23A19B704();
  }
  v4[6] = v22;
  v23 = v37;
  sub_23A154B34(v37, (uint64_t)v4 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_descriptor);
  sub_23A154B34(v23, (uint64_t)v14);
  v24 = a4;
  v25 = v22;
  sub_23A155458(v35);
  sub_23A1558D0();
  sub_23A19B08C();
  swift_allocObject();
  v26 = sub_23A19B014();
  v27 = v36;
  sub_23A154B34((uint64_t)v14, v36);
  type metadata accessor for CosmoConnection();
  swift_allocObject();
  v28 = sub_23A159308(v27, 1, v26, (uint64_t)v22);
  sub_23A154AF8((uint64_t)v14);
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_connection) = v28;
  v29 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v30 = *((_QWORD *)v28 + 2);
  *((_QWORD *)v28 + 2) = sub_23A154B78;
  *((_QWORD *)v28 + 3) = v29;
  swift_retain();
  sub_23A13A1E4(v30);

  sub_23A154AF8(v23);
  swift_release();
  return v5;
}

uint64_t sub_23A152AE0(unsigned __int8 *a1)
{
  unsigned __int8 v1;
  uint64_t result;
  unsigned __int8 v3;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = v1;
    sub_23A15319C(&v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A152B48()
{
  return sub_23A152E08((uint64_t)sub_23A154AC4, (uint64_t)&block_descriptor_6_0);
}

uint64_t sub_23A152B5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_connection);
  v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = sub_23A154AF0;
  *(_QWORD *)(v1 + 40) = v2;
  sub_23A13A1E4(v3);
  if (qword_2569443C0 != -1)
    swift_once();
  v4 = sub_23A19AE28();
  __swift_project_value_buffer(v4, (uint64_t)qword_2569452A0);
  swift_retain_n();
  v5 = sub_23A19AE10();
  v6 = sub_23A19B6BC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_retain();
    v9 = sub_23A15476C();
    v11 = v10;
    swift_release();
    sub_23A14071C(v9, v11, &v13);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v5, v6, "Starting channel, %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v8, -1, -1);
    MEMORY[0x23B842FA4](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return sub_23A159B9C();
}

uint64_t sub_23A152D7C(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A153968(a1, a2, a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A152DF4()
{
  return sub_23A152E08((uint64_t)sub_23A154ABC, (uint64_t)&block_descriptor_3);
}

uint64_t sub_23A152E08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = v2;
  v6 = sub_23A19B2D8();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19B2F0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)(v5 + 48);
  aBlock[4] = a1;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = a2;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_23A19B2E4();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v14, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_23A152FCC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  if (qword_2569443C0 != -1)
    swift_once();
  v0 = sub_23A19AE28();
  __swift_project_value_buffer(v0, (uint64_t)qword_2569452A0);
  swift_retain_n();
  v1 = sub_23A19AE10();
  v2 = sub_23A19B6BC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v9 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_retain();
    v5 = sub_23A15476C();
    v7 = v6;
    swift_release();
    sub_23A14071C(v5, v7, &v9);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v1, v2, "Stopping channel, %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v4, -1, -1);
    MEMORY[0x23B842FA4](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return sub_23A15C388();
}

uint64_t sub_23A15319C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = *(void **)(v2 + 48);
  *v7 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    swift_once();
LABEL_10:
    v23 = sub_23A19AE28();
    __swift_project_value_buffer(v23, (uint64_t)qword_2569452A0);
    swift_retain_n();
    v24 = sub_23A19AE10();
    v25 = sub_23A19B6BC();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v33 = v27;
      *(_DWORD *)v26 = 136315138;
      swift_retain();
      v28 = sub_23A15476C();
      v30 = v29;
      swift_release();
      v32 = sub_23A14071C(v28, v30, &v33);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v24, v25, "Channel ready, %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v27, -1, -1);
      MEMORY[0x23B842FA4](v26, -1, -1);

      v31 = *(void (**)(_QWORD))(v2 + 16);
      if (!v31)
        return sub_23A153E38();
    }
    else
    {

      swift_release_n();
      v31 = *(void (**)(_QWORD))(v2 + 16);
      if (!v31)
        return sub_23A153E38();
    }
    swift_retain();
    v31(0);
    sub_23A13A1E4((uint64_t)v31);
    return sub_23A153E38();
  }
  if (!v8)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady) = 1;
    if (qword_2569443C0 == -1)
      goto LABEL_10;
    goto LABEL_21;
  }
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) & 1) != 0)
    return result;
  if (qword_2569443C0 != -1)
    swift_once();
  v12 = sub_23A19AE28();
  __swift_project_value_buffer(v12, (uint64_t)qword_2569452A0);
  swift_retain_n();
  v13 = sub_23A19AE10();
  v14 = sub_23A19B6BC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v33 = v16;
    *(_DWORD *)v15 = 136315394;
    LOBYTE(v32) = v8;
    v17 = sub_23A19B518();
    v32 = sub_23A14071C(v17, v18, &v33);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_retain();
    v19 = sub_23A15476C();
    v21 = v20;
    swift_release();
    v32 = sub_23A14071C(v19, v21, &v33);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v13, v14, "Channel invalidated, connection-state=%s %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v16, -1, -1);
    MEMORY[0x23B842FA4](v15, -1, -1);

    v22 = *(void (**)(uint64_t))(v2 + 16);
    if (!v22)
      return sub_23A153644();
    goto LABEL_17;
  }

  swift_release_n();
  v22 = *(void (**)(uint64_t))(v2 + 16);
  if (v22)
  {
LABEL_17:
    swift_retain();
    v22(1);
    sub_23A13A1E4((uint64_t)v22);
  }
  return sub_23A153644();
}

uint64_t sub_23A153644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(__int128 *);
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int16 v26;

  v1 = v0;
  v2 = sub_23A19B35C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + 48);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) = 1;
  v2 = v1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue;
  result = swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
    return result;
  if (qword_2569443C0 != -1)
    goto LABEL_14;
LABEL_4:
  v9 = sub_23A19AE28();
  __swift_project_value_buffer(v9, (uint64_t)qword_2569452A0);
  swift_retain_n();
  v10 = sub_23A19AE10();
  v11 = sub_23A19B6BC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_QWORD *)&v25 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_retain();
    v14 = sub_23A15476C();
    v16 = v15;
    swift_release();
    v24 = sub_23A14071C(v14, v16, (uint64_t *)&v25);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v10, v11, "Failing pending requests, %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v13, -1, -1);
    MEMORY[0x23B842FA4](v12, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v17 = *(_QWORD *)v2;
  v18 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    v19 = v17 + 64;
    v23 = xmmword_23A19D2F0;
    do
    {
      v20 = *(_QWORD *)(v19 - 24);
      v21 = *(_QWORD *)(v19 - 16);
      v22 = *(void (**)(__int128 *))(v19 - 8);
      v25 = v23;
      v26 = 258;
      sub_23A131DF0(v20, v21);
      swift_retain();
      v22(&v25);
      sub_23A125ED8(v20, v21);
      swift_release();
      v19 += 40;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)v2 = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A153968(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t *);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[2];
  __int16 v39;

  v4 = v3;
  v8 = sub_23A19AE28();
  v36 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19B35C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v4 + 48);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  LOBYTE(v15) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v17 = v4 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue;
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)v17 + 16))
    {
      if (qword_2569443C0 == -1)
        goto LABEL_12;
      goto LABEL_19;
    }
    swift_beginAccess();
    v18 = *(_QWORD **)v17;
    if (*(_QWORD *)(*(_QWORD *)v17 + 16))
    {
      v19 = (void (*)(uint64_t *))v18[7];
      v21 = v18[5];
      v20 = v18[6];
      sub_23A131DF0(v21, v20);
      swift_retain();
      sub_23A170584(0, 1);
      swift_endAccess();
      if (a3 >> 60 == 15)
        v22 = 0;
      else
        v22 = a2;
      if (a3 >> 60 == 15)
        v23 = 0xC000000000000000;
      else
        v23 = a3;
      v38[0] = v22;
      v38[1] = v23;
      v39 = 0;
      sub_23A13A53C(a2, a3);
      v19(v38);
      sub_23A125ED8(v21, v20);
      swift_release();
      return sub_23A125ED8(v22, v23);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_19:
  swift_once();
LABEL_12:
  v25 = __swift_project_value_buffer(v8, (uint64_t)qword_2569452A0);
  v26 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v10, v25, v8);
  sub_23A13A53C(a2, a3);
  swift_retain();
  sub_23A13A53C(a2, a3);
  swift_retain();
  v27 = sub_23A19AE10();
  v28 = sub_23A19B6A4();
  if (os_log_type_enabled(v27, (os_log_type_t)v28))
  {
    v29 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v38[0] = v34;
    *(_DWORD *)v29 = 67109634;
    LODWORD(v37) = a1;
    sub_23A19B728();
    *(_WORD *)(v29 + 8) = 2080;
    v35 = v28;
    if (a3 >> 60 != 15)
      __asm { BR              X11 }
    v37 = sub_23A14071C(7104878, 0xE300000000000000, v38);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A125F1C(a2, a3);
    sub_23A125F1C(a2, a3);
    *(_WORD *)(v29 + 18) = 2080;
    swift_retain();
    v30 = sub_23A15476C();
    v32 = v31;
    swift_release();
    v37 = sub_23A14071C(v30, v32, v38);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v27, (os_log_type_t)v35, "[Received] Unexpected message received with no pending requests, type=%u size=%s %s", (uint8_t *)v29, 0x1Cu);
    v33 = v34;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v33, -1, -1);
    MEMORY[0x23B842FA4](v29, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v10, v8);
  }
  else
  {
    sub_23A125F1C(a2, a3);
    sub_23A125F1C(a2, a3);

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  }
}

uint64_t sub_23A153E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  char *v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_23A19B2D8();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A19B2F0();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v34 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A19B35C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v1 + 48);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  v12 = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v12 & 1) == 0)
    goto LABEL_14;
  v12 = v1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v12 + 16))
  {
    if (qword_2569443C0 != -1)
      goto LABEL_15;
    while (1)
    {
      v14 = sub_23A19AE28();
      __swift_project_value_buffer(v14, (uint64_t)qword_2569452A0);
      swift_retain_n();
      v15 = sub_23A19AE10();
      v16 = sub_23A19B6BC();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v18 = swift_slowAlloc();
        aBlock[0] = v18;
        *(_DWORD *)v17 = 136315138;
        swift_retain();
        v19 = sub_23A15476C();
        v21 = v20;
        swift_release();
        v42 = sub_23A14071C(v19, v21, aBlock);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v15, v16, "[Flush] Flushing request-queue, %s", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v18, -1, -1);
        MEMORY[0x23B842FA4](v17, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      result = *(_QWORD *)v12;
      v22 = *(_QWORD *)(*(_QWORD *)v12 + 16);
      if (!v22)
        break;
      v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_connection);
      v32 = OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue;
      v31 = swift_bridgeObjectRetain();
      v23 = (_QWORD *)(v31 + 64);
      v24 = v34;
      v25 = v37;
      while (1)
      {
        v26 = *((_DWORD *)v23 - 8);
        if (!v26)
          break;
        v41 = *v23;
        v12 = *(v23 - 3);
        v27 = *(v23 - 2);
        v28 = v33;
        v40 = *(_QWORD *)(v33 + v32);
        v29 = swift_allocObject();
        *(_QWORD *)(v29 + 16) = v28;
        *(_DWORD *)(v29 + 24) = v26;
        *(_QWORD *)(v29 + 32) = v12;
        *(_QWORD *)(v29 + 40) = v27;
        aBlock[4] = (uint64_t)sub_23A154A94;
        aBlock[5] = v29;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_23A126ED0;
        aBlock[3] = (uint64_t)&block_descriptor_1;
        v30 = _Block_copy(aBlock);
        sub_23A131DF0(v12, v27);
        swift_retain();
        swift_retain();
        sub_23A131DF0(v12, v27);
        sub_23A19B2E4();
        v42 = MEMORY[0x24BEE4AF8];
        sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
        sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
        v1 = v39;
        sub_23A19B764();
        MEMORY[0x23B8425E4](0, v24, v25, v30);
        _Block_release(v30);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v1);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v36);
        swift_release();
        sub_23A125ED8(v12, v27);
        swift_release();
        v23 += 5;
        if (!--v22)
          return swift_bridgeObjectRelease();
      }
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      swift_once();
    }
  }
  return result;
}

uint64_t sub_23A15431C()
{
  uint64_t v0;

  sub_23A13A1E4(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();

  sub_23A154AF8(v0 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_descriptor);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23A154384()
{
  return type metadata accessor for CosmoSerialChannelClient();
}

uint64_t type metadata accessor for CosmoSerialChannelClient()
{
  uint64_t result;

  result = qword_256945300;
  if (!qword_256945300)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A1543C8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NetworkDescriptor();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for CosmoSerialChannelClient.PendingRequest(uint64_t a1)
{
  sub_23A125ED8(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return swift_release();
}

uint64_t initializeWithCopy for CosmoSerialChannelClient.PendingRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_23A131DF0(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CosmoSerialChannelClient.PendingRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_23A131DF0(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_23A125ED8(v6, v7);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CosmoSerialChannelClient.PendingRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_23A125ED8(v4, v5);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoSerialChannelClient.PendingRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CosmoSerialChannelClient.PendingRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoSerialChannelClient.PendingRequest()
{
  return &type metadata for CosmoSerialChannelClient.PendingRequest;
}

uint64_t storeEnumTagSinglePayload for CosmoSerialChannelClient.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A1546A4 + 4 * byte_23A19D305[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A1546D8 + 4 * byte_23A19D300[v4]))();
}

uint64_t sub_23A1546D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A1546E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A1546E8);
  return result;
}

uint64_t sub_23A1546F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A1546FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A154700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A154708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CosmoSerialChannelClient.State()
{
  return &type metadata for CosmoSerialChannelClient.State;
}

unint64_t sub_23A154728()
{
  unint64_t result;

  result = qword_256945460;
  if (!qword_256945460)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19D448, &type metadata for CosmoSerialChannelClient.State);
    atomic_store(result, (unint64_t *)&qword_256945460);
  }
  return result;
}

uint64_t sub_23A15476C()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRetain();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  NetworkDescriptor.description.getter();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    sub_23A19B794();
    swift_bridgeObjectRelease();
    sub_23A19B8FC();
    sub_23A19B590();
    swift_bridgeObjectRelease();
  }
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 0x3D656D616ELL;
}

uint64_t sub_23A154A38()
{
  return sub_23A15476C();
}

uint64_t sub_23A154A58()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 != 15)
    sub_23A125ED8(*(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject();
}

void sub_23A154A94()
{
  uint64_t v0;

  sub_23A15CAD4(*(_QWORD *)(v0 + 16), *(_DWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_23A154ABC()
{
  return sub_23A152FCC();
}

uint64_t sub_23A154AC4()
{
  uint64_t v0;

  return sub_23A152B5C(v0);
}

uint64_t sub_23A154ACC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A154AF0(int a1, uint64_t a2, unint64_t a3)
{
  return sub_23A152D7C(a1, a2, a3);
}

uint64_t sub_23A154AF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NetworkDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23A154B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A154B78(unsigned __int8 *a1)
{
  return sub_23A152AE0(a1);
}

uint64_t sub_23A154B90()
{
  uint64_t result;

  type metadata accessor for CosmoMessageProtocol();
  sub_23A155410();
  sub_23A19B1AC();
  swift_allocObject();
  result = sub_23A19B1A0();
  qword_256945468 = result;
  return result;
}

uint64_t static CosmoMessageProtocol.definition.getter()
{
  if (qword_2569443C8 != -1)
    swift_once();
  return swift_retain();
}

unint64_t static CosmoMessageProtocol.label.getter()
{
  return 0xD000000000000014;
}

uint64_t CosmoMessageProtocol.__allocating_init(framer:)()
{
  swift_release();
  return swift_allocObject();
}

uint64_t CosmoMessageProtocol.init(framer:)()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_23A154C7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BDE0538];
  v3 = sub_23A19B1B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t NWProtocolFramer.Message.messageTypeHeader.getter()
{
  uint64_t result;
  unsigned int v1;
  _BYTE v2[24];
  uint64_t v3;

  sub_23A19B1DC();
  if (v3)
  {
    result = swift_dynamicCast();
    if ((_DWORD)result)
      return v1;
  }
  else
  {
    sub_23A1550D8((uint64_t)v2);
    return 0;
  }
  return result;
}

uint64_t NWProtocolFramer.Message.init(messageTypeHeader:)()
{
  uint64_t v0;

  if (qword_2569443C8 != -1)
    swift_once();
  swift_retain();
  v0 = sub_23A19B1C4();
  swift_retain();
  sub_23A19B1E8();
  swift_release();
  return v0;
}

uint64_t CosmoMessageProtocol.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CosmoMessageProtocol.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_23A154DFC()
{
  return 0xD000000000000014;
}

uint64_t sub_23A154E18()
{
  swift_release();
  type metadata accessor for CosmoMessageProtocol();
  return swift_allocObject();
}

uint64_t sub_23A154E38(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t __src;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  sub_23A19B1DC();
  if (!v16)
  {
    sub_23A1550D8((uint64_t)&v14);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v4 = 0;
    goto LABEL_6;
  }
  v4 = __src;
LABEL_6:
  if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
  {
    result = sub_23A19B7E8();
    __break(1u);
  }
  else
  {
    LODWORD(__src) = v4;
    v13 = a3;
    v14 = sub_23A165390(&__src, 4);
    v15 = v5;
    v6 = sub_23A165390(&v13, 4);
    v8 = v7;
    sub_23A19AC84();
    sub_23A125ED8(v6, v8);
    v9 = v14;
    v10 = v15;
    sub_23A19B218();
    sub_23A125ED8(v9, v10);
    return sub_23A19B224();
  }
  return result;
}

uint64_t sub_23A1550D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23A155118()
{
  sub_23A19B20C();
  return 8;
}

uint64_t type metadata accessor for CosmoMessageProtocol()
{
  return objc_opt_self();
}

uint64_t method lookup function for CosmoMessageProtocol()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CosmoMessageProtocol.__allocating_init(framer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.start(framer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.wakeup(framer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.stop(framer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.cleanup(framer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.handleOutput(framer:message:messageLength:isComplete:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.handleInput(framer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_23A15532C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((a3 & 1) != 0)
    return 0;
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (!a1)
  {
    if (v4 <= 0)
      goto LABEL_4;
    return 0;
  }
  if (a2 - a1 < v4)
    return 0;
LABEL_4:
  *(_QWORD *)v5 = sub_23A15537C(a1);
  *(_BYTE *)(v5 + 8) = 0;
  return v4;
}

uint64_t sub_23A15537C(uint64_t a1)
{
  if (!a1)
    __break(1u);
  sub_23A19B728();
  sub_23A19B728();
  return 0;
}

unint64_t sub_23A155410()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256945540;
  if (!qword_256945540)
  {
    v1 = type metadata accessor for CosmoMessageProtocol();
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CosmoMessageProtocol, v1);
    atomic_store(result, (unint64_t *)&qword_256945540);
  }
  return result;
}

void sub_23A155458(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v13[8];

  v13[5] = a1;
  v2 = sub_23A19AD2C();
  v13[3] = *(_QWORD *)(v2 - 8);
  v13[4] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23A19AEB8();
  v13[1] = *(_QWORD *)(v3 - 8);
  v13[2] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v13[0] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945648);
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23A19AF48();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945550);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  sub_23A154B34(v1, (uint64_t)v9);
  v12 = (char *)&loc_23A155614 + *((int *)qword_23A1558C0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23A155624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945558);
  v9 = v0 + *(int *)(v8 + 48);

  sub_23A158940(v9, v2);
  sub_23A19AF54();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v5, 1, v3) == 1)
  {
    __break(1u);
    JUMPOUT(0x23A1558C0);
  }
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
  v10(v4, v5, v3);
  sub_23A158940(v2, v6);
  v12 = *(_QWORD *)(v7 - 136);
  v11 = *(_QWORD *)(v7 - 128);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11);
  v14 = *(_QWORD *)(v7 - 144);
  if (v13 == 1)
  {
    sub_23A19AEAC();
    sub_23A13ACB8(v6, &qword_256945550);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 + 32))(*(_QWORD *)(v7 - 144), v6, v11);
  }
  v15 = *(_QWORD *)(v7 - 104);
  v16 = v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256945650) + 48);
  v10(v15, v4, v3);
  v17 = *MEMORY[0x24BDDFED0];
  v18 = sub_23A19AE94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v15, v17, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v16, v14, v11);
  v19 = *MEMORY[0x24BDDFF58];
  v20 = sub_23A19AEC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v15, v19, v20);
}

void sub_23A1558D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v1);
  sub_23A154B34(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)&loc_23A15594C + dword_23A155CA4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23A15595C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v2 = sub_23A19B65C();
  *(_QWORD *)(v2 + 16) = 8;
  *(_QWORD *)(v2 + 32) = 0;
  v3 = (_BYTE *)(v2 + 32);
  SecRandomCopyBytes((SecRandomRef)*MEMORY[0x24BDE94B8], 8uLL, (void *)(v2 + 32));
  v4 = sub_23A165390(v3, 8);
  v6 = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 128) = v4;
  *(_QWORD *)(v1 - 120) = v6;
  v7 = sub_23A155E28(0, (uint64_t *)(v1 - 128), 0);
  sub_23A125ED8(v4, v6);
  sub_23A13ACB8(v0, &qword_256945550);
  return v7;
}

void sub_23A155CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v1);
  sub_23A154B34(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_23A155D34 + 4 * byte_23A19D5B0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23A155D34()
{
  uint64_t v0;

  sub_23A13ACB8(v0, &qword_256945550);
  return 5260116;
}

uint64_t sub_23A155E28(char a1, uint64_t *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD);
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18[4];

  v6 = sub_23A19AF60();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  v11 = a2[1];
  sub_23A19B11C();
  swift_allocObject();
  sub_23A19B110();
  sub_23A19B104();
  sub_23A19B0F8();
  if ((a1 & 1) != 0)
  {
    sub_23A19B0E0();
    v18[0] = v10;
    v18[1] = v11;
    sub_23A156354(v18);
  }
  sub_23A19B0E0();
  swift_retain();
  swift_retain();
  v12 = sub_23A19B0D4();
  sub_23A19B098();
  if ((a3 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDE00D8], v6);
    sub_23A19B0BC();
  }
  if (qword_2569443C8 != -1)
    swift_once();
  sub_23A19B200();
  swift_allocObject();
  swift_retain();
  v13 = sub_23A19B1F4();
  sub_23A19B0B0();
  swift_retain();
  v14 = (void (*)(uint64_t *, _QWORD))sub_23A19B0A4();
  if (*v15 >> 62 && (swift_bridgeObjectRetain(), v17 = sub_23A19B800(), result = swift_bridgeObjectRelease(), v17 < 0))
  {
    __break(1u);
  }
  else
  {
    sub_23A170060(0, 0, v13);
    v14(v18, 0);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v12;
  }
  return result;
}

uint64_t sub_23A15606C(char a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, char a7, int a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  NSObject *options;
  NSObject *v22;
  NSObject *v23;
  uint64_t v24;
  void (*v25)(_QWORD *, _QWORD);
  _QWORD *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD aBlock[6];

  v30 = a8;
  v29 = sub_23A19AF60();
  v15 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a6;
  *(_BYTE *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a2;
  *(_QWORD *)(v18 + 40) = a3;
  *(_QWORD *)(v18 + 48) = a4;
  *(_QWORD *)(v18 + 56) = a5;
  *(_BYTE *)(v18 + 64) = a7;
  aBlock[4] = sub_23A15898C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A1568D0;
  aBlock[3] = &block_descriptor_7;
  v19 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  sub_23A131DF0(a2, a3);
  sub_23A131DF0(a4, a5);
  swift_release();
  nw_parameters_create_quic(v19);
  _Block_release(v19);
  nw_parameters_set_attach_protocol_listener();
  sub_23A19B0E0();
  swift_unknownObjectRetain();
  v20 = sub_23A19B0EC();
  sub_23A19B098();
  if ((v30 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BDE00D8], v29);
    sub_23A19B0BC();
  }
  if ((a7 & 1) != 0)
  {
    options = nw_http3_create_options();
    v22 = sub_23A19B0C8();
    v23 = nw_parameters_copy_default_protocol_stack(v22);
    swift_unknownObjectRelease();
    nw_protocol_stack_prepend_application_protocol(v23, options);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
LABEL_9:
    swift_unknownObjectRelease();
    return v20;
  }
  if (qword_2569443C8 != -1)
    swift_once();
  sub_23A19B200();
  swift_allocObject();
  swift_retain();
  v24 = sub_23A19B1F4();
  sub_23A19B0B0();
  swift_retain();
  v25 = (void (*)(_QWORD *, _QWORD))sub_23A19B0A4();
  if (!(*v26 >> 62)
    || (swift_bridgeObjectRetain(),
        v28 = sub_23A19B800(),
        result = swift_bridgeObjectRelease(),
        (v28 & 0x8000000000000000) == 0))
  {
    sub_23A170060(0, 0, v24);
    v25(aBlock, 0);
    swift_release();
    swift_release();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A156354(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  void (*v30)(uint64_t, uint64_t);
  NSObject *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945628);
  MEMORY[0x24BDAC7A8](v2);
  v37 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23A19B314();
  v41 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A19B50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945630);
  v36 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19B3E0();
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = a1[1];
  sub_23A19B140();
  swift_allocObject();
  v38 = sub_23A19B134();
  v43 = v14;
  v44 = v15;
  sub_23A131DF0(v14, v15);
  sub_23A19B3D4();
  if (qword_2569443E0 != -1)
    swift_once();
  sub_23A19B500();
  v16 = sub_23A19B4E8();
  v18 = v17;
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v18 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    v43 = v16;
    v44 = v18;
    sub_23A19B464();
    sub_23A131E34(&qword_256945638, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
    sub_23A1589A8();
    v33 = v13;
    sub_23A19B458();
    sub_23A125F1C(v16, v18);
    v20 = v42;
    v22 = v39;
    v21 = v40;
    sub_23A19B3EC();
    v23 = v38;
    v24 = sub_23A19B128();
    v25 = sub_23A19B2FC();
    v26 = v22;
    v27 = v37;
    sub_23A158624(v37);
    v28 = v41;
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v27, 1, v26);
    if ((_DWORD)result != 1)
    {
      v29 = sub_23A19B2FC();
      sec_protocol_options_add_pre_shared_key(v24, v25, v29);

      swift_unknownObjectRelease();
      v30 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v30(v27, v26);
      v31 = sub_23A19B128();
      sec_protocol_options_append_tls_ciphersuite(v31, (tls_ciphersuite_t)0xA8u);
      swift_unknownObjectRelease();
      v30((uint64_t)v20, v26);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v21);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
      return v23;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23A156708(NSObject *a1, NSObject *a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, char a8)
{
  NSObject *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;

  v15 = nw_quic_copy_sec_protocol_options(a1);
  sec_protocol_options_set_local_identity(v15, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256945620);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_23A19D500;
  if ((a3 & 1) != 0)
  {
    *(_QWORD *)(v16 + 32) = a4;
    *(_QWORD *)(v16 + 40) = a5;
    sub_23A131DF0(a4, a5);
    v17 = (void *)sub_23A19B638();
    swift_bridgeObjectRelease();
    sec_protocol_options_set_client_raw_public_key_certificates();

    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_23A19D500;
    *(_QWORD *)(v18 + 32) = a6;
    *(_QWORD *)(v18 + 40) = a7;
    v19 = a6;
    v20 = a7;
  }
  else
  {
    *(_QWORD *)(v16 + 32) = a6;
    *(_QWORD *)(v16 + 40) = a7;
    sub_23A131DF0(a6, a7);
    v21 = (void *)sub_23A19B638();
    swift_bridgeObjectRelease();
    sec_protocol_options_set_client_raw_public_key_certificates();

    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_23A19D500;
    *(_QWORD *)(v22 + 32) = a4;
    *(_QWORD *)(v22 + 40) = a5;
    v19 = a4;
    v20 = a5;
  }
  sub_23A131DF0(v19, v20);
  v23 = (void *)sub_23A19B638();
  swift_bridgeObjectRelease();
  sec_protocol_options_set_server_raw_public_key_certificates();

  sec_protocol_options_set_peer_authentication_required(v15, 1);
  if ((a8 & 1) != 0)
  {
    sec_protocol_options_clear_tls_application_protocols();
    sec_protocol_options_add_tls_application_protocol(v15, "h3");
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_23A1568D0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23A156918@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945658);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A19ACF0();
  if (qword_256944448 != -1)
    swift_once();
  v5 = sub_23A19B524();
  swift_bridgeObjectRelease();
  v6 = sub_23A19B524();
  nw_endpoint_create_bonjour_service((const char *)(v5 + 32), (const char *)(v6 + 32), "local");
  swift_release();
  swift_release();
  swift_unknownObjectRetain();
  sub_23A19AED0();
  v7 = sub_23A19AEC4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_23A13ACB8((uint64_t)v4, (uint64_t *)&unk_256945658);
    if (qword_256944380 != -1)
      swift_once();
    v10 = sub_23A19AE28();
    __swift_project_value_buffer(v10, (uint64_t)qword_25694EAF8);
    v11 = sub_23A19AE10();
    v12 = sub_23A19B6B0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_23A123000, v11, v12, "[Endpoint] Could not create NWEndpoint from nw_endpoint_t", v13, 2u);
      MEMORY[0x23B842FA4](v13, -1, -1);
    }

    result = sub_23A19B7F4();
    __break(1u);
  }
  else
  {
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v4, v7);
  }
  return result;
}

void sub_23A156B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_23A19AD2C();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v2);
  sub_23A154B34(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_23A156C3C + 4 * byte_23A19D5B4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23A156C3C()
{
  uint64_t v0;

  sub_23A13ACB8(v0, &qword_256945550);
  return 0;
}

void sub_23A156D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v1);
  sub_23A154B34(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_23A156DBC + 4 * byte_23A19D5B8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23A156DBC()
{
  uint64_t v0;

  sub_23A13ACB8(v0, &qword_256945550);
  return 0;
}

void sub_23A156EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v1);
  sub_23A154B34(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_23A156F80 + 4 * byte_23A19D5BC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23A156F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23A19B254();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
  return sub_23A13ACB8(v1, &qword_256945550);
}

uint64_t NetworkDescriptor.description.getter()
{
  uint64_t v0;

  sub_23A157344(v0);
  sub_23A19B794();
  sub_23A19B590();
  sub_23A155CB4();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  return 0;
}

void sub_23A157344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v2 = sub_23A19AD2C();
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945550);
  v8 = MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_23A154B34(a1, (uint64_t)v6);
  v9 = (char *)sub_23A15747C + 4 * byte_23A19D5C0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23A15747C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945558);
  v5 = v0 + *(int *)(v4 + 48);

  sub_23A158940(v5, v2);
  sub_23A158940(v2, v1);
  v6 = sub_23A19AEB8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v1, 1, v6) == 1)
  {
    sub_23A13ACB8(v1, &qword_256945550);
  }
  else
  {
    sub_23A19AEA0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
  }
  *(_QWORD *)(v3 - 96) = 0x2E302E302E373231;
  *(_QWORD *)(v3 - 88) = 0xEA00000000003A31;
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 0x6B636162706F6F6CLL;
}

uint64_t initializeBufferWithCopyOfBuffer for NetworkDescriptor(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23A157788 + 4 * byte_23A19D5C4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void destroy for NetworkDescriptor(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v2 = sub_23A19AEB8();
      v3 = *(_QWORD *)(v2 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
      {
        v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
        v11 = a1;
        v9 = v2;
        goto LABEL_10;
      }
      break;
    case 1u:
      v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945558);
      v5 = a1 + *(int *)(v4 + 48);
      v6 = sub_23A19AEB8();
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);

      break;
    case 2u:
      sub_23A125ED8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      break;
    case 3u:
      sub_23A125ED8(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
      sub_23A125ED8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
      swift_unknownObjectRelease();
      v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945210) + 96);
      v9 = sub_23A19AD2C();
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
      v11 = v8;
LABEL_10:
      v10(v11, v9);
      break;
    default:
      return;
  }
}

void initializeWithCopy for NetworkDescriptor()
{
  char *v0;

  v0 = (char *)sub_23A157B7C + 4 * byte_23A19D5CC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void *sub_23A157B7C()
{
  void *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23A19AEB8();
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945550);
    memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v3 + 16))(v0, v1, v2);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v0, 0, 1, v2);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for NetworkDescriptor(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23A154AF8(result);
    v2 = (char *)&loc_23A157DF8 + 4 * byte_23A19D5D0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t type metadata accessor for NetworkDescriptor()
{
  uint64_t result;

  result = qword_2569455D8;
  if (!qword_2569455D8)
    return swift_getSingletonMetadata();
  return result;
}

char *initializeWithTake for NetworkDescriptor(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945210);
      v11 = *(int *)(v10 + 96);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = sub_23A19AD2C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      a1[*(int *)(v10 + 112)] = a2[*(int *)(v10 + 112)];
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      *a1 = *a2;
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945558);
      v16 = *(int *)(v15 + 48);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = sub_23A19AEB8();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945550);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      *(_QWORD *)&a1[*(int *)(v15 + 64)] = *(_QWORD *)&a2[*(int *)(v15 + 64)];
      goto LABEL_14;
    case 0:
      v7 = sub_23A19AEB8();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945550);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_14;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for NetworkDescriptor(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_23A154AF8((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        *a1 = *a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945210);
        v11 = *(int *)(v10 + 96);
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = sub_23A19AD2C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        a1[*(int *)(v10 + 112)] = a2[*(int *)(v10 + 112)];
LABEL_14:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        *a1 = *a2;
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945558);
        v16 = *(int *)(v15 + 48);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_23A19AEB8();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945550);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        *(_QWORD *)&a1[*(int *)(v15 + 64)] = *(_QWORD *)&a2[*(int *)(v15 + 64)];
        goto LABEL_14;
      case 0:
        v7 = sub_23A19AEB8();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945550);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        goto LABEL_14;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_23A1584C4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char *v8;

  sub_23A1585AC();
  if (v1 <= 0x3F)
  {
    v5 = *(_QWORD *)(v0 - 8) + 64;
    swift_getTupleTypeLayout3();
    v6 = &v4;
    v7 = &unk_23A19D658;
    sub_23A19AD2C();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout();
      v8 = &v3;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_23A1585AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2569455E8[0])
  {
    sub_23A19AEB8();
    v0 = sub_23A19B710();
    if (!v1)
      atomic_store(v0, qword_2569455E8);
  }
}

uint64_t sub_23A158600()
{
  return sub_23A19B308();
}

uint64_t sub_23A158624@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v2 = sub_23A19B314();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = sub_23A19B50C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A19B500();
  sub_23A19B4E8();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v9 >> 60 != 15)
    __asm { BR              X10 }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
}

uint64_t sub_23A158940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_23A1589A8()
{
  unint64_t result;

  result = qword_256945640;
  if (!qword_256945640)
  {
    result = MEMORY[0x23B842EF0](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256945640);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_23A125ED8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_23A125ED8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_23A158A24(NSObject *a1)
{
  uint64_t v1;

  return sub_23A156708(a1, *(NSObject **)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64));
}

uint64_t CosmoConnection.__allocating_init(descriptor:queue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A19AEC4();
  MEMORY[0x24BDAC7A8](v7);
  sub_23A155458((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A1558D0();
  sub_23A19B08C();
  swift_allocObject();
  v9 = sub_23A19B014();
  sub_23A154B34(a1, (uint64_t)v6);
  type metadata accessor for CosmoConnection();
  v10 = swift_allocObject();
  sub_23A159308((uint64_t)v6, 1, v9, a2);
  sub_23A154AF8(a1);
  return v10;
}

uint64_t type metadata accessor for CosmoConnection()
{
  uint64_t result;

  result = qword_2569456B8;
  if (!qword_2569456B8)
    return swift_getSingletonMetadata();
  return result;
}

Cosmo::CosmoConnection::State_optional __swiftcall CosmoConnection.State.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Cosmo::CosmoConnection::State_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23A19B860();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CosmoConnection.State.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aReady_10[8 * *v0];
}

Cosmo::CosmoConnection::State_optional sub_23A158C20(Swift::String *a1)
{
  return CosmoConnection.State.init(rawValue:)(*a1);
}

uint64_t sub_23A158C2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CosmoConnection.State.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23A158C50@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A14EB94;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A13A0F8(v4);
}

uint64_t sub_23A158CD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A14EB94;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_23A13A0F8(v3);
  return sub_23A13A1E4(v8);
}

uint64_t (*sub_23A158D84())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23A158DC0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned int *, _QWORD *);

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A15DDFC;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_23A13A0F8(v4);
}

uint64_t sub_23A158E48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(int, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A15DDC4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 32);
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  sub_23A13A0F8(v3);
  return sub_23A13A1E4(v8);
}

uint64_t sub_23A158EF4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  sub_23A13A0F8(v1);
  return v1;
}

uint64_t sub_23A158F40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_23A13A1E4(v5);
}

uint64_t (*sub_23A158F90())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23A158FCC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 48);
  v5 = *(_QWORD *)(v3 + 56);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A15DDBC;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_23A13A0F8(v4);
}

uint64_t sub_23A159054(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A15DDB4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 48);
  *(_QWORD *)(v7 + 48) = v6;
  *(_QWORD *)(v7 + 56) = v5;
  sub_23A13A0F8(v3);
  return sub_23A13A1E4(v8);
}

uint64_t sub_23A159100()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  sub_23A13A0F8(v1);
  return v1;
}

uint64_t sub_23A15914C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return sub_23A13A1E4(v5);
}

uint64_t (*sub_23A15919C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t CosmoConnection.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_id;
  v4 = sub_23A19AD2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CosmoConnection.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CosmoConnection.__allocating_init(descriptor:connection:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A154B34(a1, (uint64_t)v8);
  type metadata accessor for CosmoConnection();
  v9 = swift_allocObject();
  sub_23A159308((uint64_t)v8, 0, a2, a3);
  sub_23A154AF8(a1);
  return v9;
}

_OWORD *sub_23A159308(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;

  v5 = v4;
  *(_QWORD *)&v61 = a4;
  v64 = a3;
  LODWORD(v63) = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945840);
  MEMORY[0x24BDAC7A8](v7);
  v57 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945220);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v54 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945850);
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)&v62 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945230);
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v58 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_23A19B6EC();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23A19B6C8();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23A19B2F0();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23A19AD2C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[2] = 0u;
  v4[3] = 0u;
  v4[1] = 0u;
  v22 = OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection) = 0;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_listener) = 0;
  sub_23A19AD20();
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))((uint64_t)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_id, v21, v18);
  v65 = a1;
  v23 = a1;
  v24 = (void *)v61;
  sub_23A154B34(v23, (uint64_t)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor);
  if (v24)
  {
    v25 = (uint64_t)v24;
  }
  else
  {
    v53 = sub_23A125AD0();
    sub_23A19B2E4();
    *(_QWORD *)&v69 = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256945240, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569444F0);
    sub_23A1516C4((unint64_t *)&unk_256945250, (uint64_t *)&unk_2569444F0, MEMORY[0x24BEE12C8]);
    sub_23A19B764();
    (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v15, *MEMORY[0x24BEE5750], v56);
    v25 = sub_23A19B704();
  }
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue) = v25;
  *((_BYTE *)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_initiated) = v63 & 1;
  *(_QWORD *)((char *)v4 + v22) = v64;
  v63 = v24;
  swift_retain();
  swift_release();
  *(_QWORD *)&v69 = sub_23A19AFFC();
  *((_QWORD *)&v69 + 1) = v26;
  v27 = v62;
  if (qword_256944438 != -1)
    swift_once();
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945860);
  __swift_project_value_buffer(v28, (uint64_t)qword_256946888);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945260);
  sub_23A151680();
  sub_23A1516C4((unint64_t *)&unk_256945270, (uint64_t *)&unk_256945860, MEMORY[0x24BEE7460]);
  sub_23A19B4A0();
  swift_bridgeObjectRelease();
  v29 = v66;
  v30 = v67;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v27, 1, v67) == 1)
  {
    sub_23A13ACB8(v27, (uint64_t *)&unk_256945850);
    *(_QWORD *)&v69 = sub_23A19AFFC();
    *((_QWORD *)&v69 + 1) = v31;
    if (qword_256944440 != -1)
      swift_once();
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945880);
    __swift_project_value_buffer(v32, (uint64_t)qword_2569468A0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945280);
    sub_23A1516C4((unint64_t *)&unk_256945890, (uint64_t *)&unk_256945880, MEMORY[0x24BEE7460]);
    v33 = (uint64_t)v57;
    sub_23A19B4A0();
    swift_bridgeObjectRelease();
    v34 = v59;
    v35 = v60;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v33, 1, v60) == 1)
    {
      sub_23A13ACB8(v33, (uint64_t *)&unk_256945840);
      v36 = sub_23A19AFFC();
      v38 = v37;
      swift_release();

      sub_23A154AF8(v65);
    }
    else
    {
      v47 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v54, v33, v35);
      sub_23A19AE04();
      swift_bridgeObjectRelease();
      v48 = MEMORY[0x23B84241C](v72, v73, v74, v75);
      v50 = v49;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v69 = v48;
      *((_QWORD *)&v69 + 1) = v50;
      swift_bridgeObjectRetain();
      sub_23A19B590();
      swift_release();

      swift_bridgeObjectRelease();
      v38 = *((_QWORD *)&v69 + 1);
      v36 = v69;
      sub_23A154AF8(v65);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v47, v35);
    }
  }
  else
  {
    v39 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v58, v27, v30);
    sub_23A19AE04();
    swift_bridgeObjectRelease();
    v61 = v76;
    v41 = v77;
    v40 = v78;
    v62 = v79;
    v43 = v80;
    v42 = v81;
    v44 = MEMORY[0x23B84241C](v72, v73, v74, v75);
    v46 = v45;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v69 = v44;
    *((_QWORD *)&v69 + 1) = v46;
    swift_bridgeObjectRetain();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v68 = v69;
    v69 = v61;
    v70 = v41;
    v71 = v40;
    sub_23A151704();
    sub_23A19B584();
    swift_bridgeObjectRelease();
    v69 = v68;
    swift_bridgeObjectRetain();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v68 = v69;
    v69 = v62;
    v70 = v43;
    v71 = v42;
    sub_23A19B584();
    swift_bridgeObjectRelease();
    v69 = v68;
    swift_bridgeObjectRetain();
    sub_23A19B590();
    swift_release();

    swift_bridgeObjectRelease();
    v38 = *((_QWORD *)&v69 + 1);
    v36 = v69;
    sub_23A154AF8(v65);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v39, v67);
  }
  v51 = (uint64_t *)((char *)v5 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_name);
  *v51 = v36;
  v51[1] = v38;
  return v5;
}

uint64_t sub_23A159B9C()
{
  return sub_23A15C39C((uint64_t)sub_23A159E10, (uint64_t)&block_descriptor_3);
}

uint64_t sub_23A159BB0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  if (*(_QWORD *)(result + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection))
  {
    v1 = swift_retain();
    v2 = sub_23A159E30(v1);
    v4 = v3;
    if (qword_256944380 != -1)
      swift_once();
    v5 = sub_23A19AE28();
    __swift_project_value_buffer(v5, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v6 = sub_23A19AE10();
    v7 = sub_23A19B6BC();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v12 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_23A14071C(v2, v4, &v12);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v6, v7, "Starting %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v9, -1, -1);
      MEMORY[0x23B842FA4](v8, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v10 = swift_allocObject();
    swift_weakInit();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v10;
    v11[3] = v2;
    v11[4] = v4;
    swift_retain();
    sub_23A13A0F8((uint64_t)sub_23A15DE6C);
    sub_23A19B008();
    swift_release();
    swift_release();
    sub_23A19B044();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A159E10()
{
  uint64_t v0;

  return sub_23A159BB0(v0);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_23A159E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  if (a1)
  {
    sub_23A19AF78();
    sub_23A19B8FC();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    sub_23A19B590();
  }
  sub_23A155CB4();
  v3 = v1;
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return v3;
}

void sub_23A159F1C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t Strong;
  char *v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  unint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(NSObject *, char *, uint64_t);
  NSObject *v74;
  NSObject *v75;
  _BOOL4 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  unint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  const char *v96;
  char *v97;
  unint64_t v98;
  char *v99;
  NSObject *v100;
  uint64_t v101;
  void (*v102)(NSObject *, uint64_t);
  void (*v103)(NSObject *, uint64_t);
  NSObject *v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  unint64_t v108;
  NSObject *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(NSObject *, uint64_t, uint64_t);
  char v118;
  NSObject *v119;
  unint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  void (*v128)(uint64_t *);
  char v129;
  NSObject *v130;
  os_log_type_t v131;
  uint8_t *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  NSObject *v138;
  os_log_type_t v139;
  uint8_t *v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  uint64_t v145;
  void (*v146)(uint64_t *);
  _QWORD *v147;
  void (*v148)(uint64_t *);
  void *v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  NSObject *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  NSObject *v171;
  uint64_t v172;
  NSObject *v173;
  char *v174;
  char *v175;
  NSObject *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint8_t *v182;
  uint64_t v183[3];
  uint64_t v184;
  char v185;

  v179 = a4;
  v176 = a3;
  v5 = sub_23A19AEC4();
  MEMORY[0x24BDAC7A8](v5);
  v164 = (uint64_t)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569451F0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v169 = (uint64_t)&v157 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v157 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v166 = (uint64_t)&v157 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v171 = ((char *)&v157 - v15);
  v16 = sub_23A19AE28();
  v181 = *(_QWORD *)(v16 - 8);
  v182 = (uint8_t *)v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v178 = (char *)&v157 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v174 = (char *)&v157 - v19;
  v20 = sub_23A19B248();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v157 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v180 = (char *)&v157 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v165 = ((char *)&v157 - v28);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v167 = (char *)&v157 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v177 = (char *)&v157 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v173 = ((char *)&v157 - v34);
  MEMORY[0x24BDAC7A8](v33);
  v175 = (char *)&v157 - v35;
  v163 = sub_23A19B35C();
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163);
  v161 = (uint64_t *)((char *)&v157 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v160 = sub_23A19B158();
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x24BDAC7A8](v160);
  v158 = (uint64_t *)((char *)&v157 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v172 = type metadata accessor for NetworkDescriptor();
  v38 = MEMORY[0x24BDAC7A8](v172);
  v168 = (uint64_t)&v157 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v170 = (uint64_t)&v157 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v157 - v42;
  v44 = sub_23A19B038();
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v47 = (char *)&v157 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return;
  v49 = (char *)Strong;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v47, a1, v44);
  v50 = (*(uint64_t (**)(char *, uint64_t))(v45 + 88))(v47, v44);
  if (v50 == *MEMORY[0x24BDE0310])
  {
    v163 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t))(v45 + 96))(v47, v44);
    v51 = v21;
    v52 = v180;
    v53 = v47;
    v54 = v20;
    v174 = *(char **)(v21 + 32);
    ((void (*)(char *, char *, uint64_t))v174)(v180, v53, v20);
    if (qword_256944380 != -1)
      swift_once();
    v55 = (uint64_t)v182;
    v56 = __swift_project_value_buffer((uint64_t)v182, (uint64_t)qword_25694EAF8);
    v57 = v181;
    v58 = v178;
    (*(void (**)(char *, uint64_t, uint64_t))(v181 + 16))(v178, v56, v55);
    v59 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
    v59(v24, v52, v54);
    v60 = (unint64_t)v179;
    swift_bridgeObjectRetain_n();
    v61 = sub_23A19AE10();
    LODWORD(v175) = sub_23A19B6BC();
    if (os_log_type_enabled(v61, (os_log_type_t)v175))
    {
      v173 = v61;
      v62 = swift_slowAlloc();
      v172 = swift_slowAlloc();
      v183[0] = v172;
      *(_DWORD *)v62 = 136315394;
      v63 = v51;
      swift_bridgeObjectRetain();
      v184 = sub_23A14071C((uint64_t)v176, v60, v183);
      v176 = &v185;
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v62 + 12) = 2080;
      v59(v12, v24, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v12, 0, 1, v54);
      v64 = v169;
      sub_23A13AC74((uint64_t)v12, v169, (uint64_t *)&unk_2569451F0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v64, 1, v54) == 1)
      {
        v65 = 7104878;
        v66 = 0xE300000000000000;
      }
      else
      {
        v97 = v177;
        ((void (*)(char *, uint64_t, uint64_t))v174)(v177, v64, v54);
        v59(v167, v97, v54);
        v65 = sub_23A19B518();
        v66 = v98;
        (*(void (**)(char *, uint64_t))(v63 + 8))(v97, v54);
      }
      v99 = v178;
      v100 = v173;
      sub_23A13ACB8((uint64_t)v12, (uint64_t *)&unk_2569451F0);
      v184 = sub_23A14071C(v65, v66, v183);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v89 = *(void (**)(char *, uint64_t))(v63 + 8);
      v89(v24, v54);
      _os_log_impl(&dword_23A123000, v100, (os_log_type_t)v175, "%s in waiting state, error=%s", (uint8_t *)v62, 0x16u);
      v101 = v172;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v101, -1, -1);
      MEMORY[0x23B842FA4](v62, -1, -1);

      (*(void (**)(char *, uint8_t *))(v181 + 8))(v99, v182);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v89 = *(void (**)(char *, uint64_t))(v51 + 8);
      v89(v24, v54);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v55);
    }
    sub_23A15C388();
    swift_release();
    v89(v180, v54);
    return;
  }
  if (v50 == *MEMORY[0x24BDE0308])
  {
    (*(void (**)(char *, uint64_t))(v45 + 96))(v47, v44);
    v67 = v21;
    v68 = v175;
    v178 = *(char **)(v21 + 32);
    ((void (*)(char *, char *, uint64_t))v178)(v175, v47, v20);
    if (qword_256944380 != -1)
      swift_once();
    v69 = (uint64_t)v182;
    v70 = __swift_project_value_buffer((uint64_t)v182, (uint64_t)qword_25694EAF8);
    v71 = v181;
    v72 = v174;
    (*(void (**)(char *, uint64_t, uint64_t))(v181 + 16))(v174, v70, v69);
    v73 = *(void (**)(NSObject *, char *, uint64_t))(v67 + 16);
    v74 = v173;
    v73(v173, v68, v20);
    swift_retain_n();
    v75 = sub_23A19AE10();
    LODWORD(v180) = sub_23A19B6A4();
    v76 = os_log_type_enabled(v75, (os_log_type_t)v180);
    v179 = (char *)v73;
    if (v76)
    {
      v176 = v75;
      v77 = swift_slowAlloc();
      v78 = (uint64_t)v49;
      v169 = swift_slowAlloc();
      v183[0] = v169;
      *(_DWORD *)v77 = 136315394;
      v79 = swift_retain();
      v80 = v74;
      v81 = v20;
      v82 = sub_23A159E30(v79);
      v84 = v83;
      swift_release();
      v184 = sub_23A14071C(v82, v84, v183);
      sub_23A19B728();
      v163 = v78;
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 12) = 2080;
      v85 = (uint64_t)v171;
      v73(v171, (char *)v80, v81);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v67 + 56))(v85, 0, 1, v81);
      v86 = v166;
      sub_23A13AC74(v85, v166, (uint64_t *)&unk_2569451F0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v86, 1, v81) == 1)
      {
        v87 = 7104878;
        v88 = 0xE300000000000000;
      }
      else
      {
        v107 = v177;
        ((void (*)(char *, uint64_t, uint64_t))v178)(v177, v86, v81);
        v73(v167, v107, v81);
        v87 = sub_23A19B518();
        v88 = v108;
        (*(void (**)(char *, uint64_t))(v67 + 8))(v107, v81);
      }
      v109 = v176;
      sub_23A13ACB8((uint64_t)v171, (uint64_t *)&unk_2569451F0);
      v184 = sub_23A14071C(v87, v88, v183);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v103 = *(void (**)(NSObject *, uint64_t))(v67 + 8);
      v103(v173, v81);
      _os_log_impl(&dword_23A123000, v109, (os_log_type_t)v180, "%s failed, error=%s", (uint8_t *)v77, 0x16u);
      v110 = v169;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v110, -1, -1);
      MEMORY[0x23B842FA4](v77, -1, -1);

      (*(void (**)(char *, uint8_t *))(v181 + 8))(v174, v182);
      v49 = (char *)v163;
      v20 = v81;
      v104 = v177;
      v68 = v175;
    }
    else
    {
      swift_release_n();
      v102 = *(void (**)(NSObject *, uint64_t))(v67 + 8);
      v102(v74, v20);

      v103 = v102;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v69);
      v104 = v177;
    }
    sub_23A15C388();
    v111 = (uint64_t)&v49[OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor];
    v112 = v170;
    sub_23A154B34((uint64_t)&v49[OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor], v170);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23A125ED8(*(_QWORD *)v112, *(_QWORD *)(v112 + 8));
      if (v49[OBJC_IVAR____TtC5Cosmo15CosmoConnection_initiated] == 1)
      {
        LODWORD(v104->isa) = 53;
        (*(void (**)(NSObject *, _QWORD, uint64_t))(v67 + 104))(v104, *MEMORY[0x24BDE0680], v20);
        v113 = MEMORY[0x23B842128](v68, v104);
        v103(v104, v20);
        if ((v113 & 1) != 0)
        {
          sub_23A155458(v164);
          sub_23A1558D0();
          sub_23A19B08C();
          swift_allocObject();
          *(_QWORD *)&v49[OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection] = sub_23A19B014();
          swift_retain();
          v114 = swift_release();
          sub_23A159B9C(v114);
          swift_release();
LABEL_53:
          swift_release();
          v103(v68, v20);
          return;
        }
      }
    }
    else
    {
      sub_23A154AF8(v112);
    }
    v115 = v168;
    sub_23A154B34(v111, v168);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23A125ED8(*(_QWORD *)v115, *(_QWORD *)(v115 + 8));
      LODWORD(v104->isa) = 54;
      v116 = *MEMORY[0x24BDE0680];
      v117 = *(void (**)(NSObject *, uint64_t, uint64_t))(v67 + 104);
      v117(v104, v116, v20);
      v118 = MEMORY[0x23B842128](v68, v104);
      v103(v104, v20);
      v119 = v165;
      ((void (*)(NSObject *, char *, uint64_t))v179)(v165, v68, v20);
      if ((v118 & 1) != 0)
      {
        v103(v119, v20);
        goto LABEL_48;
      }
      LODWORD(v104->isa) = 96;
      v117(v104, v116, v20);
      v127 = MEMORY[0x23B842128](v119, v104);
      v103(v104, v20);
      v103(v119, v20);
      if ((v127 & 1) != 0)
      {
LABEL_48:
        swift_beginAccess();
        v128 = (void (*)(uint64_t *))*((_QWORD *)v49 + 2);
        if (v128)
        {
          v129 = 1;
LABEL_52:
          LOBYTE(v184) = v129;
          swift_retain();
          v128(&v184);
          sub_23A13A1E4((uint64_t)v128);
          goto LABEL_53;
        }
LABEL_54:
        v103(v68, v20);
        goto LABEL_55;
      }
    }
    else
    {
      sub_23A154AF8(v115);
    }
    swift_beginAccess();
    v128 = (void (*)(uint64_t *))*((_QWORD *)v49 + 2);
    if (v128)
    {
      v129 = 2;
      goto LABEL_52;
    }
    goto LABEL_54;
  }
  if (v50 == *MEMORY[0x24BDE0300])
  {
    v90 = (uint64_t)v182;
    if (qword_256944380 != -1)
      swift_once();
    __swift_project_value_buffer(v90, (uint64_t)qword_25694EAF8);
    v91 = (unint64_t)v179;
    swift_bridgeObjectRetain_n();
    v92 = sub_23A19AE10();
    v93 = sub_23A19B6BC();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc();
      v95 = swift_slowAlloc();
      v183[0] = v95;
      *(_DWORD *)v94 = 136315138;
      swift_bridgeObjectRetain();
      v184 = sub_23A14071C((uint64_t)v176, v91, v183);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      v96 = "%s in setup state";
LABEL_29:
      _os_log_impl(&dword_23A123000, v92, v93, v96, v94, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v95, -1, -1);
      MEMORY[0x23B842FA4](v94, -1, -1);
      swift_release();

      return;
    }
    goto LABEL_30;
  }
  v105 = (uint64_t)v182;
  if (v50 == *MEMORY[0x24BDE0320])
  {
    if (qword_256944380 != -1)
      swift_once();
    __swift_project_value_buffer(v105, (uint64_t)qword_25694EAF8);
    v106 = (unint64_t)v179;
    swift_bridgeObjectRetain_n();
    v92 = sub_23A19AE10();
    v93 = sub_23A19B6BC();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc();
      v95 = swift_slowAlloc();
      v183[0] = v95;
      *(_DWORD *)v94 = 136315138;
      swift_bridgeObjectRetain();
      v184 = sub_23A14071C((uint64_t)v176, v106, v183);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      v96 = "%s in preparing state";
      goto LABEL_29;
    }
LABEL_30:

    swift_bridgeObjectRelease_n();
LABEL_55:
    swift_release();
    return;
  }
  if (v50 == *MEMORY[0x24BDE02F8])
  {
    if (qword_256944380 != -1)
      swift_once();
    __swift_project_value_buffer(v105, (uint64_t)qword_25694EAF8);
    v120 = (unint64_t)v179;
    swift_bridgeObjectRetain_n();
    v121 = sub_23A19AE10();
    v122 = sub_23A19B6BC();
    if (os_log_type_enabled(v121, v122))
    {
      v123 = (uint8_t *)swift_slowAlloc();
      v124 = v49;
      v125 = swift_slowAlloc();
      v183[0] = v125;
      *(_DWORD *)v123 = 136315138;
      swift_bridgeObjectRetain();
      v184 = sub_23A14071C((uint64_t)v176, v120, v183);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v121, v122, "%s in ready state", v123, 0xCu);
      swift_arrayDestroy();
      v126 = v125;
      v49 = v124;
      MEMORY[0x23B842FA4](v126, -1, -1);
      MEMORY[0x23B842FA4](v123, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_23A154B34((uint64_t)&v49[OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor], (uint64_t)v43);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23A125ED8(*((_QWORD *)v43 + 1), *((_QWORD *)v43 + 2));
      sub_23A125ED8(*((_QWORD *)v43 + 3), *((_QWORD *)v43 + 4));
      swift_unknownObjectRelease();
      v134 = &v43[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945210) + 96)];
      v135 = sub_23A19AD2C();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v135 - 8) + 8))(v134, v135);
      if (*(_QWORD *)&v49[OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection])
      {
        sub_23A19B194();
        swift_retain();
        sub_23A19B14C();
        v43 = v49;
        v136 = sub_23A19B074();
        swift_release();
        swift_release();
        if (v136)
        {
          sub_23A19B188();
          if (swift_dynamicCastClass())
          {
            v137 = (unint64_t)v179;
            swift_bridgeObjectRetain_n();
            v138 = sub_23A19AE10();
            v139 = sub_23A19B6BC();
            if (os_log_type_enabled(v138, v139))
            {
              v140 = (uint8_t *)swift_slowAlloc();
              v141 = swift_slowAlloc();
              *(_DWORD *)v140 = 136315138;
              v182 = v140 + 4;
              v183[0] = v141;
              swift_bridgeObjectRetain();
              v184 = sub_23A14071C((uint64_t)v176, v137, v183);
              sub_23A19B728();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_23A123000, v138, v139, "%s setting keep-alive to 15 seconds", v140, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23B842FA4](v141, -1, -1);
              MEMORY[0x23B842FA4](v140, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            v147 = v158;
            *v158 = 15;
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(v159 + 104))(v147, *MEMORY[0x24BDE04D0], v160);
            sub_23A19B17C();
            v49 = v43;
          }
          swift_release();
        }
      }
      sub_23A15B7C4();
    }
    else
    {
      sub_23A154AF8((uint64_t)v43);
    }
    swift_beginAccess();
    v148 = (void (*)(uint64_t *))*((_QWORD *)v49 + 2);
    if (v148)
    {
      LOBYTE(v184) = 0;
      swift_retain();
      v148(&v184);
      sub_23A13A1E4((uint64_t)v148);
    }
    v149 = *(void **)&v49[OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue];
    v150 = v161;
    *v161 = v149;
    v151 = v162;
    v152 = v163;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v162 + 104))(v150, *MEMORY[0x24BEE5610], v163);
    v153 = v149;
    v105 = sub_23A19B374();
    (*(void (**)(_QWORD *, uint64_t))(v151 + 8))(v150, v152);
    if ((v105 & 1) != 0)
    {
      v154 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection];
      if (v154)
      {
        v155 = swift_allocObject();
        swift_weakInit();
        v156 = swift_allocObject();
        *(_QWORD *)(v156 + 16) = v155;
        *(_QWORD *)(v156 + 24) = v154;
        swift_retain_n();
        swift_retain();
        sub_23A19AFF0();
        swift_release();
        swift_release();
        swift_release();
      }
      goto LABEL_55;
    }
    __break(1u);
LABEL_88:
    swift_once();
LABEL_59:
    __swift_project_value_buffer(v105, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain_n();
    v130 = sub_23A19AE10();
    v131 = sub_23A19B6BC();
    if (os_log_type_enabled(v130, v131))
    {
      v132 = (uint8_t *)swift_slowAlloc();
      v133 = swift_slowAlloc();
      v183[0] = v133;
      *(_DWORD *)v132 = 136315138;
      swift_bridgeObjectRetain();
      v184 = sub_23A14071C((uint64_t)v176, (unint64_t)v43, v183);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v130, v131, "%s in cancelled state", v132, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v133, -1, -1);
      MEMORY[0x23B842FA4](v132, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v146 = (void (*)(uint64_t *))*((_QWORD *)v49 + 2);
    if (v146)
    {
      LOBYTE(v184) = 1;
      swift_retain();
      v146(&v184);
      sub_23A13A1E4((uint64_t)v146);
    }
    goto LABEL_55;
  }
  v43 = v179;
  if (v50 == *MEMORY[0x24BDE0318])
  {
    if (qword_256944380 == -1)
      goto LABEL_59;
    goto LABEL_88;
  }
  if (qword_256944380 != -1)
    swift_once();
  __swift_project_value_buffer(v105, (uint64_t)qword_25694EAF8);
  swift_bridgeObjectRetain_n();
  v142 = sub_23A19AE10();
  v143 = sub_23A19B6A4();
  if (os_log_type_enabled(v142, v143))
  {
    v144 = (uint8_t *)swift_slowAlloc();
    v145 = swift_slowAlloc();
    v183[0] = v145;
    v163 = (uint64_t)v49;
    *(_DWORD *)v144 = 136315138;
    swift_bridgeObjectRetain();
    v184 = sub_23A14071C((uint64_t)v176, (unint64_t)v43, v183);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A123000, v142, v143, "%s in unknown state", v144, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v145, -1, -1);
    MEMORY[0x23B842FA4](v144, -1, -1);
    swift_release();

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
}

void sub_23A15B7C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_23A19B35C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v10 = v9;
  v11 = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection))
    return;
  sub_23A154B34(v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    swift_retain();
    sub_23A154AF8((uint64_t)v4);
    if (qword_256944380 == -1)
    {
LABEL_10:
      v22 = sub_23A19AE28();
      __swift_project_value_buffer(v22, (uint64_t)qword_25694EAF8);
      v23 = sub_23A19AE10();
      v24 = sub_23A19B6A4();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_23A123000, v23, v24, "Bad API usage, raw TCP cannot set a per-connection NWListener", v25, 2u);
        MEMORY[0x23B842FA4](v25, -1, -1);
        swift_release();

        return;
      }

      goto LABEL_13;
    }
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  v12 = v4[1];
  v13 = v4[2];
  swift_retain();
  sub_23A125ED8(v12, v13);
  sub_23A125ED8(v4[3], v4[4]);
  swift_unknownObjectRelease();
  v14 = (char *)v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945210) + 96);
  v15 = sub_23A19AD2C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_beginAccess();
  v16 = *(_QWORD *)(v1 + 48);
  if (!v16)
  {
LABEL_13:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v1 + 56);
  sub_23A19AF3C();
  swift_retain();
  sub_23A13A0F8(v16);
  sub_23A1558D0();
  v18 = sub_23A19AEDC();
  v19 = OBJC_IVAR____TtC5Cosmo15CosmoConnection_listener;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_listener) = v18;
  swift_release();
  if (*(_QWORD *)(v1 + v19))
  {
    v20 = swift_allocObject();
    swift_weakInit();
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v20;
    v21[3] = v16;
    v21[4] = v17;
    sub_23A13A0F8(v16);
    swift_retain();
    swift_retain();
    sub_23A13A0F8((uint64_t)sub_23A15DD7C);
    sub_23A19AEF4();
    swift_release();
    swift_release();
    swift_release();
    if (*(_QWORD *)(v1 + v19))
    {
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      swift_retain();
      sub_23A13A0F8((uint64_t)sub_23A15DD88);
      sub_23A19AEE8();
      swift_release();
      swift_release_n();
      if (*(_QWORD *)(v1 + v19))
      {
        swift_retain();
        sub_23A19AF18();
        swift_release();
        sub_23A13A1E4(v16);
        goto LABEL_13;
      }
    }
  }
  swift_release();
  sub_23A13A1E4(v16);
}

uint64_t sub_23A15BC04(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  _QWORD v24[2];
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;

  v25 = a3;
  v6 = type metadata accessor for NetworkDescriptor();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v24 - v10;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    if (qword_256944380 != -1)
      swift_once();
    v14 = sub_23A19AE28();
    __swift_project_value_buffer(v14, (uint64_t)qword_25694EAF8);
    swift_retain_n();
    swift_retain_n();
    v15 = sub_23A19AE10();
    v16 = sub_23A19B6BC();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v27 = v18;
      v24[0] = v9;
      v24[1] = a4;
      *(_DWORD *)v17 = 136315138;
      v19 = sub_23A159E30(a1);
      v26 = sub_23A14071C(v19, v20, &v27);
      v9 = (char *)v24[0];
      sub_23A19B728();
      swift_release_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v15, v16, "Received incoming stream, %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v18, -1, -1);
      MEMORY[0x23B842FA4](v17, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    sub_23A154B34(v13 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor, (uint64_t)v11);
    v21 = *(void **)(v13 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
    sub_23A154B34((uint64_t)v11, (uint64_t)v9);
    type metadata accessor for CosmoConnection();
    v22 = swift_allocObject();
    swift_retain();
    v23 = v21;
    sub_23A159308((uint64_t)v9, 0, a1, (uint64_t)v21);
    sub_23A154AF8((uint64_t)v11);
    v25(v22);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A15BEF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  unint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  os_log_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  int v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945830);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v39 - v6;
  v8 = sub_23A19AF0C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v48 = (char *)v39 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v39 - v14;
  v16 = sub_23A19AE28();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_256944380 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v16, (uint64_t)qword_25694EAF8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v21, v16);
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v45(v15, a1, v8);
    swift_retain_n();
    v22 = sub_23A19AE10();
    v46 = sub_23A19B6BC();
    if (os_log_type_enabled(v22, (os_log_type_t)v46))
    {
      v39[0] = v19;
      v41 = v22;
      v43 = v17;
      v44 = v16;
      v23 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v50 = v40;
      *(_DWORD *)v23 = 136315394;
      v42 = v7;
      v24 = swift_retain();
      v25 = sub_23A159E30(v24);
      v27 = v26;
      swift_release();
      v28 = v25;
      v29 = (uint64_t)v5;
      v49 = sub_23A14071C(v28, v27, &v50);
      v39[1] = &v50;
      v30 = (uint64_t)v42;
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v31 = (void (*)(char *, char *, uint64_t))v45;
      v45((char *)v30, (uint64_t)v15, v8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v30, 0, 1, v8);
      sub_23A13AC74(v30, v29, &qword_256945830);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v29, 1, v8) == 1)
      {
        v32 = 0xE300000000000000;
        v33 = 7104878;
      }
      else
      {
        v34 = v48;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v48, v29, v8);
        v31(v47, v34, v8);
        v33 = sub_23A19B518();
        v32 = v35;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v34, v8);
      }
      v36 = v39[0];
      sub_23A13ACB8(v30, &qword_256945830);
      v49 = sub_23A14071C(v33, v32, &v50);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      v37 = v41;
      _os_log_impl(&dword_23A123000, v41, (os_log_type_t)v46, "%s listener state update, state=%s", (uint8_t *)v23, 0x16u);
      v38 = v40;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v38, -1, -1);
      MEMORY[0x23B842FA4](v23, -1, -1);
      swift_release();

      return (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v36, v44);
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);

      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  return result;
}

uint64_t sub_23A15C388()
{
  return sub_23A15C39C((uint64_t)sub_23A15C8B8, (uint64_t)&block_descriptor_3_0);
}

uint64_t sub_23A15C39C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = v2;
  v6 = sub_23A19B2D8();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19B2F0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
  aBlock[4] = a1;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = a2;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_23A19B2E4();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A1516C4(&qword_256944520, (uint64_t *)&unk_2569458B0, MEMORY[0x24BEE12C8]);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v14, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_23A15C570(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t *);
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_23A19B038();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v26 - v8;
  v10 = OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection))
  {
    swift_beginAccess();
    v11 = *(void (**)(uint64_t *))(a1 + 16);
    if (v11)
    {
      v12 = *(_QWORD *)(a1 + 24);
      swift_retain();
      sub_23A13A0F8((uint64_t)v11);
      sub_23A19B050();
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BDE0300], v2);
      v13 = MEMORY[0x23B841F18](v9, v6);
      v14 = *(void (**)(char *, uint64_t))(v3 + 8);
      v14(v6, v2);
      v14(v9, v2);
      if ((v13 & 1) != 0)
      {
        if (qword_256944380 != -1)
          swift_once();
        v15 = sub_23A19AE28();
        __swift_project_value_buffer(v15, (uint64_t)qword_25694EAF8);
        swift_retain_n();
        v16 = sub_23A19AE10();
        v17 = sub_23A19B6BC();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc();
          v28 = swift_slowAlloc();
          v31 = v28;
          v29 = v12;
          *(_DWORD *)v18 = 136315138;
          v26[1] = v18 + 4;
          v27 = v18;
          v19 = swift_retain();
          v20 = sub_23A159E30(v19);
          v22 = v21;
          swift_release();
          v30 = sub_23A14071C(v20, v22, &v31);
          sub_23A19B728();
          swift_release_n();
          swift_bridgeObjectRelease();
          v23 = v27;
          _os_log_impl(&dword_23A123000, v16, v17, "%s, canceling (never started)", v27, 0xCu);
          v24 = v28;
          swift_arrayDestroy();
          MEMORY[0x23B842FA4](v24, -1, -1);
          MEMORY[0x23B842FA4](v23, -1, -1);

        }
        else
        {

          swift_release_n();
        }
        LOBYTE(v31) = 1;
        v11(&v31);
      }
      sub_23A13A1E4((uint64_t)v11);
    }
    else
    {
      swift_retain();
    }
    sub_23A19B05C();
    *(_QWORD *)(a1 + v10) = 0;
    swift_release();
    result = swift_release();
  }
  v25 = OBJC_IVAR____TtC5Cosmo15CosmoConnection_listener;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_listener))
  {
    swift_retain();
    sub_23A19AF30();
    *(_QWORD *)(a1 + v25) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A15C8B8()
{
  uint64_t v0;

  return sub_23A15C570(v0);
}

uint64_t sub_23A15C8C0(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v7 = sub_23A19B2D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19B2F0();
  v12 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v18[0] = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v3;
    *(_DWORD *)(v16 + 24) = a3;
    *(_QWORD *)(v16 + 32) = a1;
    *(_QWORD *)(v16 + 40) = a2;
    aBlock[4] = sub_23A154A94;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A126ED0;
    aBlock[3] = &block_descriptor_6_1;
    v17 = _Block_copy(aBlock);
    swift_retain();
    sub_23A13A53C(a1, a2);
    sub_23A19B2E4();
    v18[1] = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
    sub_23A1516C4(&qword_256944520, (uint64_t *)&unk_2569458B0, MEMORY[0x24BEE12C8]);
    sub_23A19B764();
    MEMORY[0x23B8425E4](0, v15, v10, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23A15CAD4(uint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  uint64_t v40;
  os_log_t v41;
  uint64_t v42[4];
  uint64_t v43;
  uint64_t v44;

  LODWORD(v41) = a2;
  v7 = sub_23A19AFE4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19AE28();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection);
  if (v15)
  {
    v39 = v10;
    v16 = qword_256944380;
    swift_retain();
    if (v16 != -1)
      swift_once();
    v17 = __swift_project_value_buffer(v11, (uint64_t)qword_25694EAF8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v17, v11);
    swift_retain();
    swift_retain();
    sub_23A13A53C(a3, a4);
    swift_retain();
    swift_retain();
    sub_23A13A53C(a3, a4);
    v18 = a3;
    v19 = sub_23A19AE10();
    v38 = sub_23A19B698();
    v20 = os_log_type_enabled(v19, (os_log_type_t)v38);
    v40 = v18;
    if (v20)
    {
      v35 = v19;
      v36 = v8;
      v37 = v7;
      v21 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v42[0] = v34;
      *(_DWORD *)v21 = 136315650;
      v22 = sub_23A159E30(v15);
      v43 = sub_23A14071C(v22, v23, v42);
      v33 = &v44;
      sub_23A19B728();
      swift_release_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 1024;
      LODWORD(v43) = (_DWORD)v41;
      sub_23A19B728();
      *(_WORD *)(v21 + 18) = 2080;
      if (a4 >> 60 != 15)
        __asm { BR              X11 }
      v24 = v40;
      v43 = sub_23A14071C(7104878, 0xE300000000000000, v42);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A125F1C(v24, a4);
      sub_23A125F1C(v24, a4);
      v28 = v35;
      _os_log_impl(&dword_23A123000, v35, (os_log_type_t)v38, "%s sending messageHeader=%u, data-size=%s", (uint8_t *)v21, 0x1Cu);
      v29 = v34;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v29, -1, -1);
      MEMORY[0x23B842FA4](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v8 = v36;
      v7 = v37;
    }
    else
    {
      swift_release_n();
      swift_release_n();
      sub_23A125F1C(v18, a4);
      sub_23A125F1C(v18, a4);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    sub_23A19B1D0();
    if (qword_2569443C8 != -1)
      swift_once();
    swift_retain();
    v30 = sub_23A19B1C4();
    v42[3] = MEMORY[0x24BEE44F0];
    LODWORD(v42[0]) = (_DWORD)v41;
    sub_23A19B1E8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256945838);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_23A19D6B0;
    *(_QWORD *)(v31 + 32) = v30;
    v42[0] = v31;
    sub_23A19B644();
    sub_23A19AFD8();
    swift_allocObject();
    swift_retain();
    sub_23A19AF90();
    v32 = v39;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v39, *MEMORY[0x24BDE01C0], v7);
    sub_23A19B020();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v32, v7);
  }
  else
  {
    if (qword_256944380 != -1)
      swift_once();
    __swift_project_value_buffer(v11, (uint64_t)qword_25694EAF8);
    v41 = (os_log_t)sub_23A19AE10();
    v25 = sub_23A19B6A4();
    if (os_log_type_enabled(v41, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_DWORD *)v26 = 136315138;
      v42[0] = v27;
      v43 = sub_23A14071C(0xD00000000000001DLL, 0x800000023A1A1240, v42);
      sub_23A19B728();
      _os_log_impl(&dword_23A123000, v41, v25, "%s connection is nil", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v27, -1, -1);
      MEMORY[0x23B842FA4](v26, -1, -1);
    }

  }
}

uint64_t sub_23A15D1A4()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 != 15)
    sub_23A125ED8(*(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject();
}

uint64_t sub_23A15D1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59[4];
  uint64_t v60;

  v12 = sub_23A19B35C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (_QWORD *)((char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v17 = result;
    v56 = v13;
    v57 = a5;
    v18 = sub_23A159E30(a7);
    v20 = v19;
    if (a3)
    {
      v55 = v18;
      swift_retain();
      v21 = sub_23A19AFCC();
      if ((v21 & 1) != 0)
      {
        if (qword_256944380 != -1)
          swift_once();
        v22 = sub_23A19AE28();
        __swift_project_value_buffer(v22, (uint64_t)qword_25694EAF8);
        swift_bridgeObjectRetain();
        v23 = sub_23A19AE10();
        v24 = sub_23A19B6BC();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = swift_slowAlloc();
          v54 = v17;
          v26 = (uint8_t *)v25;
          v27 = swift_slowAlloc();
          v53 = v21;
          v28 = v27;
          v59[0] = v27;
          *(_DWORD *)v26 = 136315138;
          v52[1] = v26 + 4;
          swift_bridgeObjectRetain();
          v60 = sub_23A14071C(v55, v20, v59);
          sub_23A19B728();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_23A123000, v23, v24, "%s read close", v26, 0xCu);
          swift_arrayDestroy();
          LOBYTE(v21) = v53;
          MEMORY[0x23B842FA4](v28, -1, -1);
          v29 = v26;
          v17 = v54;
          MEMORY[0x23B842FA4](v29, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_23A19B05C();
        goto LABEL_34;
      }
      if (qword_2569443C8 != -1)
        swift_once();
      if (sub_23A19AFA8())
      {
        sub_23A19B1D0();
        if (swift_dynamicCastClass())
        {
          swift_bridgeObjectRelease();
          swift_beginAccess();
          v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
          if (!v36)
          {
LABEL_33:
            swift_release();
LABEL_34:
            v43 = v57;
            v44 = sub_23A19B248();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44) != 1|| (v21 & 1) != 0)
            {
              goto LABEL_36;
            }
            v45 = *(void **)(v17 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
            *v15 = v45;
            v46 = v56;
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(v56 + 104))(v15, *MEMORY[0x24BEE5610], v12);
            v47 = v45;
            v48 = sub_23A19B374();
            result = (*(uint64_t (**)(_QWORD *, uint64_t))(v46 + 8))(v15, v12);
            if ((v48 & 1) == 0)
            {
              __break(1u);
              return result;
            }
            v49 = *(_QWORD *)(v17 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection);
            if (v49)
            {
              v50 = swift_allocObject();
              swift_weakInit();
              v51 = swift_allocObject();
              *(_QWORD *)(v51 + 16) = v50;
              *(_QWORD *)(v51 + 24) = v49;
              swift_retain_n();
              swift_retain();
              sub_23A19AFF0();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
            else
            {
LABEL_36:
              swift_release();
            }
            return swift_release();
          }
          v55 = *(_QWORD *)(v17 + 40);
          swift_retain();
          sub_23A19B1DC();
          if (v59[3])
          {
            if ((swift_dynamicCast() & 1) != 0)
            {
              v37 = v58;
LABEL_32:
              v36(v37, a1, a2);
              sub_23A13A1E4((uint64_t)v36);
              goto LABEL_33;
            }
          }
          else
          {
            sub_23A13ACB8((uint64_t)v59, &qword_256944A48);
          }
          v37 = 0;
          goto LABEL_32;
        }
        swift_release();
      }
      if (qword_256944380 != -1)
        swift_once();
      v38 = sub_23A19AE28();
      __swift_project_value_buffer(v38, (uint64_t)qword_25694EAF8);
      swift_bridgeObjectRetain();
      v39 = sub_23A19AE10();
      v40 = sub_23A19B6A4();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        v42 = swift_slowAlloc();
        v59[0] = v42;
        *(_DWORD *)v41 = 136315138;
        swift_bridgeObjectRetain();
        v60 = sub_23A14071C(v55, v20, v59);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A123000, v39, v40, "%s could not read messageTypeHeader", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v42, -1, -1);
        MEMORY[0x23B842FA4](v41, -1, -1);

        swift_release();
        return swift_release();
      }

      swift_release();
    }
    else
    {
      v30 = v18;
      if (qword_256944380 != -1)
        swift_once();
      v31 = sub_23A19AE28();
      __swift_project_value_buffer(v31, (uint64_t)qword_25694EAF8);
      swift_bridgeObjectRetain();
      v32 = sub_23A19AE10();
      v33 = sub_23A19B6A4();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v59[0] = v35;
        *(_DWORD *)v34 = 136315138;
        swift_bridgeObjectRetain();
        v60 = sub_23A14071C(v30, v20, v59);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23A123000, v32, v33, "%s receiveMessage has nil context", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v35, -1, -1);
        MEMORY[0x23B842FA4](v34, -1, -1);

        return swift_release();
      }

    }
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t *CosmoConnection.deinit()
{
  uint64_t *v0;
  char *v1;
  uint64_t v2;

  sub_23A13A1E4(v0[2]);
  sub_23A13A1E4(v0[4]);
  sub_23A13A1E4(v0[6]);
  v1 = (char *)v0 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_id;
  v2 = sub_23A19AD2C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23A154AF8((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t CosmoConnection.__deallocating_deinit()
{
  CosmoConnection.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_23A15DA74()
{
  unint64_t result;

  result = qword_256945678;
  if (!qword_256945678)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CosmoConnection.State, &type metadata for CosmoConnection.State);
    atomic_store(result, (unint64_t *)&qword_256945678);
  }
  return result;
}

uint64_t sub_23A15DAB8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_id;
  v4 = sub_23A19AD2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t storeEnumTagSinglePayload for CosmoConnection.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A15DB64 + 4 * byte_23A19D6C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A15DB98 + 4 * byte_23A19D6C0[v4]))();
}

uint64_t sub_23A15DB98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A15DBA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A15DBA8);
  return result;
}

uint64_t sub_23A15DBB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A15DBBCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A15DBC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A15DBC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CosmoConnection.State()
{
  return &type metadata for CosmoConnection.State;
}

uint64_t sub_23A15DBE4()
{
  return type metadata accessor for CosmoConnection();
}

uint64_t sub_23A15DBEC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23A19AD2C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for NetworkDescriptor();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CosmoConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CosmoConnection.stateChangedCallback.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CosmoConnection.stateChangedCallback.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CosmoConnection.stateChangedCallback.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CosmoConnection.messageCallback.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of CosmoConnection.messageCallback.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of CosmoConnection.messageCallback.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of CosmoConnection.newStreamHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of CosmoConnection.newStreamHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of CosmoConnection.newStreamHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of CosmoConnection.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of CosmoConnection.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of CosmoConnection.send(data:messageTypeHeader:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t sub_23A15DD4C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A15DD70()
{
  return objectdestroy_15Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23A15DD7C(uint64_t a1)
{
  uint64_t v1;

  return sub_23A15BC04(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23A15DD88(uint64_t a1)
{
  return sub_23A15BEF4(a1);
}

uint64_t sub_23A15DD90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A15DDB4(uint64_t a1)
{
  uint64_t v1;

  return sub_23A15DF04(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_23A15DDBC(_QWORD *a1)
{
  uint64_t v1;

  return sub_23A15DEE0(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_23A15DDC4(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(int *, _QWORD *);
  _QWORD v6[2];
  int v7;

  v4 = *(uint64_t (**)(int *, _QWORD *))(v3 + 16);
  v7 = a1;
  v6[0] = a2;
  v6[1] = a3;
  return v4(&v7, v6);
}

uint64_t sub_23A15DDFC(unsigned int *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*a1, *a2, a2[1]);
}

uint64_t sub_23A15DE28()
{
  return objectdestroy_15Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_15Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_23A15DE6C(uint64_t a1)
{
  uint64_t v1;

  sub_23A159F1C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(char **)(v1 + 32));
}

uint64_t sub_23A15DE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_23A15D1E0(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t objectdestroy_42Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A15DEE0(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

uint64_t sub_23A15DF04(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  return a2(&v3);
}

Cosmo::CosmoListener::State_optional __swiftcall CosmoListener.State.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Cosmo::CosmoListener::State_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23A19B860();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CosmoListener.State.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aReady_11[8 * *v0];
}

uint64_t sub_23A15DFB0(char *a1, char *a2)
{
  return sub_23A151EF8(*a1, *a2);
}

uint64_t sub_23A15DFBC()
{
  return sub_23A152110();
}

uint64_t sub_23A15DFC4()
{
  return sub_23A1522B8();
}

uint64_t sub_23A15DFCC()
{
  return sub_23A152480();
}

Cosmo::CosmoListener::State_optional sub_23A15DFD4(Swift::String *a1)
{
  return CosmoListener.State.init(rawValue:)(*a1);
}

uint64_t sub_23A15DFE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CosmoListener.State.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23A15E004@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A14EB94;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A13A0F8(v4);
}

uint64_t sub_23A15E08C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A14EB94;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_23A13A0F8(v3);
  return sub_23A13A1E4(v8);
}

uint64_t sub_23A15E138@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A160A4C;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_23A13A0F8(v4);
}

uint64_t sub_23A15E1C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A160A1C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 32);
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  sub_23A13A0F8(v3);
  return sub_23A13A1E4(v8);
}

uint64_t (*sub_23A15E26C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t CosmoListener.__allocating_init(descriptor:queue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  CosmoListener.init(descriptor:queue:)(a1, a2);
  return v4;
}

_OWORD *CosmoListener.init(descriptor:queue:)(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v5 = sub_23A19B6EC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A19B6C8();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23A19B2F0();
  MEMORY[0x24BDAC7A8](v10);
  v2[2] = 0u;
  v2[3] = 0u;
  v2[1] = 0u;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener) = 0;
  *((_BYTE *)v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) = 0;
  sub_23A154B34(a1, (uint64_t)v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor);
  if (!a2)
  {
    v14 = sub_23A125AD0();
    sub_23A19B2E4();
    v15 = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256945240, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    v13 = v5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569444F0);
    sub_23A131E74((unint64_t *)&unk_256945250, (uint64_t *)&unk_2569444F0);
    sub_23A19B764();
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5750], v13);
    a2 = sub_23A19B704();
  }
  sub_23A154AF8(a1);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue) = a2;
  return v2;
}

uint64_t sub_23A15E514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_23A19B2D8();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A19B2F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue);
  aBlock[4] = sub_23A15EA8C;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_4;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_23A19B2E4();
  v13[1] = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_23A15E6E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A19AEB8();
  MEMORY[0x24BDAC7A8](v2);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) = 0;
  sub_23A1558D0();
  swift_retain();
  sub_23A19AEAC();
  sub_23A19AF3C();
  swift_allocObject();
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener) = sub_23A19AF24();
  swift_retain();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_23A13A0F8((uint64_t)sub_23A160A94);
  sub_23A19AEE8();
  swift_release_n();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_23A13A0F8((uint64_t)sub_23A160A9C);
  sub_23A19AEF4();
  swift_release_n();
  sub_23A19AF18();
  swift_release();
  return swift_release();
}

uint64_t sub_23A15EA8C()
{
  uint64_t v0;

  return sub_23A15E6E8(v0);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_23A15EAAC(void (*a1)(char *, uint64_t))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A15EB64(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A15EB08(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A15FE68(a1);
    return swift_release();
  }
  return result;
}

void sub_23A15EB64(void (*a1)(char *, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, uint64_t);
  char *v73;
  unint64_t v74;
  uint64_t v75;
  NSObject *v76;
  char *v77;
  int v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  void (*v85)(NSObject *, char *, uint64_t);
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  char *v97;
  char v98;
  void (*v99)(char *, uint64_t);
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  char *v103;
  NSObject *v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  NSObject *v112;
  void (*v113)(NSObject *, uint64_t);
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  void (*v120)(uint64_t *);
  char *v121;
  uint64_t v122;
  void (*v123)(char *, char *, uint64_t);
  char *v124;
  NSObject *v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  _BOOL4 v134;
  uint64_t v135;
  uint8_t *v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t *);
  char *v140;
  void (*v141)(char *, uint64_t);
  uint64_t v142;
  void (*v143)(uint64_t *);
  char *v144;
  unint64_t v145;
  uint64_t v146;
  char *v147;
  unint64_t v148;
  char *v149;
  NSObject *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  NSObject *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  NSObject *v171;
  void (*v172)(char *, uint64_t, uint64_t);
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  NSObject *v182;
  void (*v183)(char *, char *, uint64_t);
  uint64_t v184;
  void (*v185)(char *, uint64_t);
  uint64_t v186;
  uint64_t v187;

  v185 = a1;
  v155 = sub_23A19AEC4();
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v153 = (uint64_t)&v151 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569451F0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v157 = (uint64_t)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v159 = (char *)&v151 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v156 = (uint64_t)&v151 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v158 = (char *)&v151 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v167 = (uint64_t)&v151 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v171 = ((char *)&v151 - v14);
  v180 = sub_23A19B248();
  v174 = *(_QWORD *)(v180 - 8);
  v15 = MEMORY[0x24BDAC7A8](v180);
  v163 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v162 = (char *)&v151 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v168 = (char *)&v151 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v164 = ((char *)&v151 - v22);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v169 = (char *)&v151 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v182 = ((char *)&v151 - v26);
  MEMORY[0x24BDAC7A8](v25);
  v173 = (char *)&v151 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945830);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v170 = (uint64_t)&v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v178 = (char *)&v151 - v31;
  v32 = sub_23A19AF0C();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v179 = (char *)&v151 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v166 = (char *)&v151 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v151 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v151 - v41;
  v43 = sub_23A19AE28();
  v183 = *(void (**)(char *, char *, uint64_t))(v43 - 8);
  v184 = v43;
  v44 = MEMORY[0x24BDAC7A8](v43);
  v161 = (char *)&v151 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v160 = (char *)&v151 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v181 = (char *)&v151 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v51 = (char *)&v151 - v50;
  v52 = sub_23A19B35C();
  v53 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v55 = (uint64_t *)((char *)&v151 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = *(void **)(v1 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue);
  *v55 = v56;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v53 + 104))(v55, *MEMORY[0x24BEE5610], v52);
  v57 = v56;
  LOBYTE(v56) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v53 + 8))(v55, v52);
  if ((v56 & 1) != 0)
  {
    v165 = v40;
    v175 = v1;
    if (qword_256944380 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v58 = v184;
  v59 = __swift_project_value_buffer(v184, (uint64_t)qword_25694EAF8);
  v60 = v183;
  v172 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v183 + 2);
  v172(v51, v59, v58);
  v61 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v33 + 16);
  v61(v42, (void (*)(_QWORD, _QWORD))v185, v32);
  v62 = sub_23A19AE10();
  v63 = sub_23A19B6BC();
  v64 = os_log_type_enabled(v62, v63);
  v176 = v59;
  v177 = v61;
  if (v64)
  {
    v65 = (uint8_t *)swift_slowAlloc();
    v152 = swift_slowAlloc();
    v187 = v152;
    *(_DWORD *)v65 = 136315138;
    v66 = (uint64_t)v178;
    v61(v178, (void (*)(_QWORD, _QWORD))v42, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v66, 0, 1, v32);
    v67 = v66;
    v68 = v170;
    sub_23A13AC74(v67, v170, &qword_256945830);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v68, 1, v32) == 1)
    {
      v69 = 7104878;
      v70 = 0xE300000000000000;
    }
    else
    {
      v73 = v165;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v165, v68, v32);
      v61(v166, (void (*)(_QWORD, _QWORD))v73, v32);
      v69 = sub_23A19B518();
      v70 = v74;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v73, v32);
    }
    sub_23A13ACB8((uint64_t)v178, &qword_256945830);
    v186 = sub_23A14071C(v69, v70, &v187);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    v71 = *(void (**)(char *, uint64_t))(v33 + 8);
    v71(v42, v32);
    _os_log_impl(&dword_23A123000, v62, v63, "[Listener] State update, state=%s", v65, 0xCu);
    v75 = v152;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v75, -1, -1);
    MEMORY[0x23B842FA4](v65, -1, -1);

    v58 = v184;
    v72 = (void (*)(char *, uint64_t))*((_QWORD *)v183 + 1);
    v72(v51, v184);
  }
  else
  {
    v71 = *(void (**)(char *, uint64_t))(v33 + 8);
    v71(v42, v32);

    v72 = (void (*)(char *, uint64_t))*((_QWORD *)v60 + 1);
    v72(v51, v58);
  }
  v76 = v182;
  v77 = v179;
  v177(v179, (void (*)(_QWORD, _QWORD))v185, v32);
  v78 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v77, v32);
  v80 = v180;
  v79 = v181;
  if (v78 == *MEMORY[0x24BDDFFC8])
  {
    v185 = v72;
    (*(void (**)(char *, uint64_t))(v33 + 96))(v77, v32);
    v81 = v173;
    v82 = v174;
    v83 = *(void (**)(char *, char *, uint64_t))(v174 + 32);
    v83(v173, v77, v80);
    v172(v79, v176, v58);
    v84 = v58;
    v85 = *(void (**)(NSObject *, char *, uint64_t))(v82 + 16);
    v85(v76, v81, v80);
    v86 = sub_23A19AE10();
    v87 = sub_23A19B6BC();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      v89 = swift_slowAlloc();
      v187 = v89;
      *(_DWORD *)v88 = 136315138;
      v90 = (uint64_t)v171;
      v85(v171, (char *)v76, v80);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v90, 0, 1, v80);
      v91 = v167;
      sub_23A13AC74(v90, v167, (uint64_t *)&unk_2569451F0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v91, 1, v80) == 1)
      {
        v92 = 7104878;
        v93 = 0xE300000000000000;
      }
      else
      {
        v117 = v169;
        v83(v169, (char *)v91, v80);
        v85(v164, v117, v80);
        v92 = sub_23A19B518();
        v93 = v118;
        (*(void (**)(char *, uint64_t))(v82 + 8))(v117, v80);
      }
      sub_23A13ACB8((uint64_t)v171, (uint64_t *)&unk_2569451F0);
      v186 = sub_23A14071C(v92, v93, &v187);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v113 = *(void (**)(NSObject *, uint64_t))(v82 + 8);
      v113(v182, v80);
      _os_log_impl(&dword_23A123000, v86, v87, "[Listener] Waiting for network to become available, error=%s", v88, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v89, -1, -1);
      MEMORY[0x23B842FA4](v88, -1, -1);

      v185(v181, v184);
      v81 = v173;
    }
    else
    {
      v113 = *(void (**)(NSObject *, uint64_t))(v82 + 8);
      v113(v76, v80);

      v185(v79, v84);
    }
    v119 = v175;
    swift_beginAccess();
    v120 = *(void (**)(uint64_t *))(v119 + 16);
    if (v120)
    {
      LOBYTE(v186) = 1;
      swift_retain();
      v120(&v186);
      sub_23A13A1E4((uint64_t)v120);
    }
    sub_23A1603E4();
    v113(v81, v80);
  }
  else if (v78 == *MEMORY[0x24BDDFFC0])
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v77, v32);
    v94 = v174;
    v95 = *(void (**)(char *, char *, uint64_t))(v174 + 32);
    v96 = v168;
    v95(v168, v77, v80);
    v97 = v169;
    *(_DWORD *)v169 = -65569;
    (*(void (**)(char *, _QWORD, uint64_t))(v94 + 104))(v97, *MEMORY[0x24BDE0678], v80);
    v98 = MEMORY[0x23B842128](v96, v97);
    v99 = *(void (**)(char *, uint64_t))(v94 + 8);
    v99(v97, v80);
    if ((v98 & 1) != 0)
    {
      v185 = v99;
      v100 = v160;
      v172(v160, v176, v58);
      v101 = v58;
      v102 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
      v103 = v162;
      v102(v162, v96, v80);
      v104 = sub_23A19AE10();
      LODWORD(v183) = sub_23A19B6BC();
      if (os_log_type_enabled(v104, (os_log_type_t)v183))
      {
        v182 = v104;
        v105 = (uint8_t *)swift_slowAlloc();
        v106 = swift_slowAlloc();
        v187 = v106;
        *(_DWORD *)v105 = 136315138;
        v107 = (uint64_t)v158;
        v102(v158, v103, v80);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v94 + 56))(v107, 0, 1, v80);
        v108 = v156;
        sub_23A13AC74(v107, v156, (uint64_t *)&unk_2569451F0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v108, 1, v80) == 1)
        {
          v109 = 7104878;
          v110 = 0xE300000000000000;
          v111 = v160;
          v112 = v182;
          v99 = v185;
        }
        else
        {
          v144 = v169;
          v95(v169, (char *)v108, v80);
          v102((char *)v164, v144, v80);
          v109 = sub_23A19B518();
          v110 = v145;
          v99 = v185;
          v185(v144, v80);
          v111 = v160;
          v112 = v182;
        }
        sub_23A13ACB8((uint64_t)v158, (uint64_t *)&unk_2569451F0);
        v186 = sub_23A14071C(v109, v110, &v187);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        v99(v162, v80);
        _os_log_impl(&dword_23A123000, v112, (os_log_type_t)v183, "[Listener] Failed with error=%s, restarting", v105, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v106, -1, -1);
        MEMORY[0x23B842FA4](v105, -1, -1);

        v72(v111, v184);
        v96 = v168;
      }
      else
      {
        v140 = v103;
        v141 = v185;
        v185(v140, v80);

        v99 = v141;
        v72(v100, v101);
      }
      v146 = v175;
      sub_23A1603E4();
      *(_BYTE *)(v146 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) = 1;
      sub_23A15E514();
    }
    else
    {
      v183 = v95;
      v121 = v161;
      v172(v161, v176, v58);
      v122 = v58;
      v123 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
      v124 = v163;
      v123(v163, v96, v80);
      v125 = sub_23A19AE10();
      LODWORD(v185) = sub_23A19B6BC();
      if (os_log_type_enabled(v125, (os_log_type_t)v185))
      {
        v182 = v125;
        v126 = (uint8_t *)swift_slowAlloc();
        v127 = swift_slowAlloc();
        v187 = v127;
        *(_DWORD *)v126 = 136315138;
        v128 = (uint64_t)v159;
        v123(v159, v124, v80);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v94 + 56))(v128, 0, 1, v80);
        v129 = v157;
        sub_23A13AC74(v128, v157, (uint64_t *)&unk_2569451F0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v129, 1, v80) == 1)
        {
          v130 = 7104878;
          v131 = 0xE300000000000000;
        }
        else
        {
          v147 = v169;
          v183(v169, (char *)v129, v80);
          v123((char *)v164, v147, v80);
          v130 = sub_23A19B518();
          v131 = v148;
          v99(v147, v80);
        }
        v149 = v161;
        v150 = v182;
        sub_23A13ACB8((uint64_t)v159, (uint64_t *)&unk_2569451F0);
        v186 = sub_23A14071C(v130, v131, &v187);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        v99(v163, v80);
        _os_log_impl(&dword_23A123000, v150, (os_log_type_t)v185, "[Listener] Failed with error=%s, stopping", v126, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v127, -1, -1);
        MEMORY[0x23B842FA4](v126, -1, -1);

        v72(v149, v184);
        v96 = v168;
      }
      else
      {
        v99(v124, v80);

        v72(v121, v122);
      }
      sub_23A1603E4();
    }
    v99(v96, v80);
  }
  else if (v78 == *MEMORY[0x24BDDFFB8])
  {
    v114 = sub_23A19AE10();
    v115 = sub_23A19B68C();
    if (os_log_type_enabled(v114, v115))
    {
      v116 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v116 = 0;
      _os_log_impl(&dword_23A123000, v114, v115, "[Listener] Initialized but not started", v116, 2u);
      MEMORY[0x23B842FA4](v116, -1, -1);
    }

  }
  else if (v78 == *MEMORY[0x24BDDFFB0])
  {
    v132 = sub_23A19AE10();
    v133 = sub_23A19B6BC();
    v134 = os_log_type_enabled(v132, v133);
    v135 = v175;
    if (v134)
    {
      v136 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v136 = 0;
      _os_log_impl(&dword_23A123000, v132, v133, "[Listener] Ready to accept incoming connections", v136, 2u);
      MEMORY[0x23B842FA4](v136, -1, -1);
    }

    if (*(_QWORD *)(v135 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener)
      && (swift_retain(),
          v137 = v153,
          sub_23A155458(v153),
          v138 = sub_23A19AE88(),
          (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v137, v155),
          v138))
    {
      sub_23A19AF00();
      nw_array_create();
      swift_unknownObjectRetain();
      nw_array_append();
      nw_listener_set_advertise_endpoints();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_beginAccess();
      v139 = *(void (**)(uint64_t *))(v135 + 16);
      if (v139)
      {
        LOBYTE(v186) = 0;
        swift_retain();
        v139(&v186);
        sub_23A13A1E4((uint64_t)v139);
      }
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_23A19B7F4();
      __break(1u);
    }
  }
  else
  {
    v142 = v175;
    if (v78 == *MEMORY[0x24BDDFFD0])
    {
      if ((*(_BYTE *)(v175 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) & 1) == 0)
      {
        swift_beginAccess();
        v143 = *(void (**)(uint64_t *))(v142 + 16);
        if (v143)
        {
          LOBYTE(v186) = 2;
          swift_retain();
          v143(&v186);
          sub_23A13A1E4((uint64_t)v143);
        }
      }
    }
    else
    {
      v71(v77, v32);
    }
  }
}

void sub_23A15FE68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  char *v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];

  v2 = v1;
  v30 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  MEMORY[0x24BDAC7A8](v30);
  v31 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for NetworkDescriptor();
  v5 = MEMORY[0x24BDAC7A8](v32);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v28 - v9;
  v11 = sub_23A19B35C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (_QWORD *)((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  v17 = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) != 0)
  {
    if (qword_256944380 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v18 = sub_23A19AE28();
  __swift_project_value_buffer(v18, (uint64_t)qword_25694EAF8);
  swift_retain_n();
  v19 = sub_23A19AE10();
  v20 = sub_23A19B6BC();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v29 = v2;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v33 = a1;
    v34[0] = v23;
    v28[1] = v7;
    *(_DWORD *)v22 = 136315138;
    sub_23A19B08C();
    v28[0] = v16;
    swift_retain();
    v24 = sub_23A19B518();
    v33 = sub_23A14071C(v24, v25, v34);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v19, v20, "[Listener] Received connection=%s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v23, -1, -1);
    v26 = v22;
    v2 = v29;
    MEMORY[0x23B842FA4](v26, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  sub_23A154B34(v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor, (uint64_t)v10);
  v27 = (char *)&loc_23A160178 + dword_23A1603D4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23A1603E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v0;
  v3 = sub_23A19B35C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v8 = v7;
  LOBYTE(v7) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v1 = OBJC_IVAR____TtC5Cosmo13CosmoListener_listener;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener))
  {
    v9 = qword_256944380;
    swift_retain();
    if (v9 == -1)
    {
LABEL_4:
      v10 = sub_23A19AE28();
      __swift_project_value_buffer(v10, (uint64_t)qword_25694EAF8);
      v11 = sub_23A19AE10();
      v12 = sub_23A19B6BC();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_23A123000, v11, v12, "[Listener] Stopping", v13, 2u);
        MEMORY[0x23B842FA4](v13, -1, -1);
      }

      sub_23A19AF30();
      *(_QWORD *)(v2 + v1) = 0;
      swift_release();
      swift_release();
      return;
    }
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  if (qword_256944380 != -1)
    swift_once();
  v14 = sub_23A19AE28();
  __swift_project_value_buffer(v14, (uint64_t)qword_25694EAF8);
  v15 = sub_23A19AE10();
  v16 = sub_23A19B68C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v20 = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = sub_23A14071C(0x2928706F7473, 0xE600000000000000, &v20);
    sub_23A19B728();
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v18, -1, -1);
    MEMORY[0x23B842FA4](v17, -1, -1);
  }

}

uint64_t *CosmoListener.deinit()
{
  uint64_t *v0;

  sub_23A13A1E4(v0[2]);
  sub_23A13A1E4(v0[4]);
  sub_23A13A1E4(v0[6]);
  sub_23A154AF8((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor);

  swift_release();
  return v0;
}

uint64_t CosmoListener.__deallocating_deinit()
{
  uint64_t *v0;

  sub_23A13A1E4(v0[2]);
  sub_23A13A1E4(v0[4]);
  sub_23A13A1E4(v0[6]);
  sub_23A154AF8((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor);

  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_23A160784()
{
  unint64_t result;

  result = qword_2569458C0;
  if (!qword_2569458C0)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CosmoListener.State, &type metadata for CosmoListener.State);
    atomic_store(result, (unint64_t *)&qword_2569458C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CosmoListener.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A160824 + 4 * byte_23A19D895[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A160858 + 4 * byte_23A19D890[v4]))();
}

uint64_t sub_23A160858(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A160860(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A160868);
  return result;
}

uint64_t sub_23A160874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A16087CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A160880(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A160888(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CosmoListener.State()
{
  return &type metadata for CosmoListener.State;
}

uint64_t sub_23A1608A4()
{
  return type metadata accessor for CosmoListener();
}

uint64_t type metadata accessor for CosmoListener()
{
  uint64_t result;

  result = qword_2569458F0;
  if (!qword_2569458F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A1608E8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NetworkDescriptor();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CosmoListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CosmoListener.stateChangedCallback.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of CosmoListener.stateChangedCallback.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of CosmoListener.stateChangedCallback.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of CosmoListener.connectionReceivedCallback.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CosmoListener.connectionReceivedCallback.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CosmoListener.connectionReceivedCallback.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CosmoListener.__allocating_init(descriptor:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of CosmoListener.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of CosmoListener.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t sub_23A1609F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A160A1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_23A160A4C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_23A160A70()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A160A94(void (*a1)(char *, uint64_t))
{
  return sub_23A15EAAC(a1);
}

uint64_t sub_23A160A9C(uint64_t a1)
{
  return sub_23A15EB08(a1);
}

uint64_t URL.fileSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  char v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v0 = sub_23A1615F0();
  if (!v0)
  {
    v7 = 0u;
    v8 = 0u;
    goto LABEL_13;
  }
  v1 = v0;
  if (!*(_QWORD *)(v0 + 16))
  {
    v7 = 0u;
    v8 = 0u;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v2 = (id)*MEMORY[0x24BDD0D08];
  v3 = sub_23A16195C((uint64_t)v2);
  if ((v4 & 1) == 0)
  {
    v7 = 0u;
    v8 = 0u;

    goto LABEL_12;
  }
  sub_23A13A9C4(*(_QWORD *)(v1 + 56) + 32 * v3, (uint64_t)&v7);

  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v8 + 1))
  {
LABEL_13:
    sub_23A1550D8((uint64_t)&v7);
    return 0;
  }
  if (swift_dynamicCast())
    return v6;
  else
    return 0;
}

id sub_23A160B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  id v4;
  id result;
  id v6;
  uint64_t v7;

  if (a2 <= 1)
    v2 = 1;
  else
    v2 = a2;
  v3 = (double)a1 / (double)v2;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1490]), sel_init);
  result = objc_msgSend(v4, sel_setCountStyle_, 0);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 < 9.22337204e18)
  {
    v6 = objc_msgSend(v4, sel_stringFromByteCount_, (uint64_t)v3);
    v7 = sub_23A19B4DC();

    sub_23A19B590();
    return (id)v7;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t advertiseEndpoint(_:onListener:)()
{
  nw_array_create();
  swift_unknownObjectRetain();
  nw_array_append();
  nw_listener_set_advertise_endpoints();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_23A160CF4(uint64_t result, _QWORD *a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _BOOL8 v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v2 = (_QWORD *)result;
  v3 = a2[2];
  if (!v3)
    goto LABEL_9;
  v4 = *(_QWORD *)(result + 16);
  if (!v4)
    return 1;
  result = a2[4];
  v6 = a2[5];
  if (result != v2[4] || v6 != v2[5])
  {
    result = sub_23A19B908();
    v8 = 0;
    if ((result & 1) == 0)
      return v8;
  }
  v9 = v3 - 1;
  if (v3 != 1)
  {
    v11 = v4 - 1;
    v12 = a2 + 7;
    v13 = v2 + 7;
    while (v9)
    {
      v8 = v11 == 0;
      if (!v11)
        return v8;
      result = *(v12 - 1);
      if (result != *(v13 - 1) || *v12 != *v13)
      {
        result = sub_23A19B908();
        if ((result & 1) == 0)
          return v8;
      }
      --v11;
      v12 += 2;
      v13 += 2;
      if (!--v9)
        goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    v10 = v2[2];
    if (v3 == v10)
      return 1;
    if (v3 < v10)
      return 0;
  }
  __break(1u);
  return result;
}

unint64_t sub_23A160DE8(unint64_t *a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  char v6;

  v2 = *a1;
  v1 = a1[1];
  v3 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v3 = *a1;
  v4 = 7;
  if (((v1 >> 60) & ((v2 & 0x800000000000000) == 0)) != 0)
    v4 = 11;
  if (sub_23A1625A4(0xFuLL, v4 | (v3 << 16), v2, v1) != 1)
    return 0;
  swift_bridgeObjectRetain();
  result = sub_23A160E94(v2, v1);
  if ((result & 0x100000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = sub_23A19AB28();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
  return result;
}

unint64_t sub_23A160E94(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_23A162508(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_23A19B788();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
        sub_23A19B7C4();
      v5 = sub_23A19B7D0();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t sub_23A160F70(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *);
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v4 = a3;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = (uint64_t (*)(_QWORD *))result;
    v6 = 0;
    v7 = (uint64_t *)(a3 + 40);
    v8 = MEMORY[0x24BEE4AF8];
    v15 = (uint64_t (*)(_QWORD *))result;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *(v7 - 1);
      v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      swift_bridgeObjectRetain();
      v11 = v5(v18);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v19 = v8;
        if ((result & 1) == 0)
        {
          result = sub_23A184B40(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v19;
        }
        v13 = *(_QWORD *)(v8 + 16);
        v12 = *(_QWORD *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          result = sub_23A184B40(v12 > 1, v13 + 1, 1);
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v13 + 1;
        v14 = v8 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v9;
        v4 = a3;
        v5 = v15;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_23A1610E0(uint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  unsigned __int8 v11;
  uint64_t v12;
  unsigned int v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 *v17;
  unsigned int v18;
  char v19;
  __int16 v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 *v25;
  unsigned int v26;
  char v27;
  __int16 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 *v32;
  unsigned int v33;
  char v34;
  __int16 v35;
  _QWORD v36[3];

  if (a3 - 37 < 0xFFFFFFFFFFFFFFDDLL)
  {
    __break(1u);
LABEL_76:
    swift_bridgeObjectRelease();
    v11 = 0;
    v10 = 1;
    return v11 | (v10 << 8);
  }
  v4 = HIBYTE(a2) & 0xF;
  v5 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = v4;
  else
    v6 = result & 0xFFFFFFFFFFFFLL;
  if (!v6)
    goto LABEL_76;
  if ((a2 & 0x1000000000000000) != 0)
  {
    v9 = sub_23A162180(result, a2, a3);
    swift_bridgeObjectRelease();
    v10 = (v9 >> 8) & 1;
LABEL_12:
    if (v10)
      v11 = 0;
    else
      v11 = v9;
    return v11 | (v10 << 8);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_23A19B7C4();
    v9 = sub_23A162260(v8, v5, a3);
    v10 = (v9 >> 8) & 1;
    goto LABEL_11;
  }
  v36[0] = result;
  v36[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v4)
    {
      v21 = v4 - 1;
      if (v21)
      {
        LOBYTE(v13) = 0;
        v22 = a3 + 48;
        v23 = a3 + 55;
        v24 = a3 + 87;
        if (a3 > 0xA)
        {
          v22 = 58;
        }
        else
        {
          v24 = 97;
          v23 = 65;
        }
        v25 = (unsigned __int8 *)v36 + 1;
        v10 = 1;
        do
        {
          v26 = *v25;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              LOBYTE(v9) = 0;
              if (v26 < 0x61 || v26 >= v24)
                goto LABEL_11;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v13 * a3;
          if ((v28 & 0xFF00) != 0)
            goto LABEL_74;
          v13 = v28 + (v26 + v27);
          if (((v13 >> 8) & 1) != 0)
            goto LABEL_74;
          ++v25;
          --v21;
        }
        while (v21);
LABEL_73:
        v10 = 0;
        LOBYTE(v9) = v13;
        goto LABEL_11;
      }
      goto LABEL_74;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v4)
      {
        LOBYTE(v13) = 0;
        v29 = a3 + 48;
        v30 = a3 + 55;
        v31 = a3 + 87;
        if (a3 > 0xA)
        {
          v29 = 58;
        }
        else
        {
          v31 = 97;
          v30 = 65;
        }
        v32 = (unsigned __int8 *)v36;
        v10 = 1;
        while (1)
        {
          v33 = *v32;
          if (v33 < 0x30 || v33 >= v29)
          {
            if (v33 < 0x41 || v33 >= v30)
            {
              LOBYTE(v9) = 0;
              if (v33 < 0x61 || v33 >= v31)
                goto LABEL_11;
              v34 = -87;
            }
            else
            {
              v34 = -55;
            }
          }
          else
          {
            v34 = -48;
          }
          v35 = v13 * a3;
          if ((v35 & 0xFF00) != 0)
            goto LABEL_74;
          v13 = v35 + (v33 + v34);
          if (((v13 >> 8) & 1) != 0)
            goto LABEL_74;
          ++v32;
          if (!--v4)
            goto LABEL_73;
        }
      }
      goto LABEL_74;
    }
    if (v4)
    {
      v12 = v4 - 1;
      if (v12)
      {
        LOBYTE(v13) = 0;
        v14 = a3 + 48;
        v15 = a3 + 55;
        v16 = a3 + 87;
        if (a3 > 0xA)
        {
          v14 = 58;
        }
        else
        {
          v16 = 97;
          v15 = 65;
        }
        v17 = (unsigned __int8 *)v36 + 1;
        v10 = 1;
        while (1)
        {
          v18 = *v17;
          if (v18 < 0x30 || v18 >= v14)
          {
            if (v18 < 0x41 || v18 >= v15)
            {
              LOBYTE(v9) = 0;
              if (v18 < 0x61 || v18 >= v16)
                goto LABEL_11;
              v19 = -87;
            }
            else
            {
              v19 = -55;
            }
          }
          else
          {
            v19 = -48;
          }
          v20 = v13 * a3;
          if ((v20 & 0xFF00) != 0)
            break;
          v13 = v20 - (v18 + v19);
          if ((v13 & 0xFFFFFF00) != 0)
            break;
          ++v17;
          if (!--v12)
            goto LABEL_73;
        }
      }
LABEL_74:
      LOBYTE(v9) = 0;
      v10 = 1;
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23A161438(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23A161488()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  if (BYTE6(v1) == 16)
  {
    sub_23A1589A8();
    sub_23A19AB40();
    sub_23A19AD08();
    sub_23A125ED8(v2, v1);
    v3 = sub_23A19AD2C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v0, 0, 1, v3);
  }
  else
  {
    sub_23A125ED8(v2, v1);
    v5 = sub_23A19AD2C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v0, 1, 1, v5);
  }
}

uint64_t sub_23A1615F0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  id v14;
  unint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_23A19AC00();
  v1 = (void *)sub_23A19B4B8();
  swift_bridgeObjectRelease();
  v14 = 0;
  v2 = objc_msgSend(v0, sel_attributesOfItemAtPath_error_, v1, &v14);

  v3 = v14;
  if (v2)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_23A131E34(&qword_256944AE0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23A19C698);
    v4 = sub_23A19B47C();
    v5 = v3;

  }
  else
  {
    v6 = v14;
    v7 = (void *)sub_23A19ABAC();

    swift_willThrow();
    v17 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
    sub_23A161FD4();
    swift_dynamicCast();
    v8 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256945538);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_23A19D500;
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_23A19B794();
    swift_bridgeObjectRelease();
    v14 = (id)0xD000000000000015;
    v15 = 0x800000023A1A1360;
    v10 = objc_msgSend(v8, sel_description);
    sub_23A19B4DC();

    sub_23A19B590();
    swift_bridgeObjectRelease();
    v11 = v14;
    v12 = v15;
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v12;
    sub_23A19B968();

    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

unint64_t sub_23A161858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23A19B980();
  sub_23A19B56C();
  v4 = sub_23A19B9A4();
  return sub_23A161A64(a1, a2, v4);
}

unint64_t sub_23A1618BC(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x23B842860](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_23A161B44(a1, v3);
}

unint64_t sub_23A1618F0(uint64_t a1)
{
  uint64_t v2;

  sub_23A19AD2C();
  sub_23A131E34((unint64_t *)&unk_2569449A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_23A19B494();
  return sub_23A161BE0(a1, v2);
}

unint64_t sub_23A16195C(uint64_t a1)
{
  uint64_t v2;

  sub_23A19B4DC();
  sub_23A19B980();
  sub_23A19B56C();
  v2 = sub_23A19B9A4();
  swift_bridgeObjectRelease();
  return sub_23A161D20(a1, v2);
}

unint64_t sub_23A1619DC(uint64_t a1)
{
  uint64_t v2;

  sub_23A19B980();
  type metadata accessor for CFString(0);
  sub_23A131E34(&qword_256945A40, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_23A19C4D4);
  sub_23A19AD44();
  v2 = sub_23A19B9A4();
  return sub_23A161E94(a1, v2);
}

unint64_t sub_23A161A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23A19B908() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23A19B908() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23A161B44(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23A161BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_23A19AD2C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_23A131E34(&qword_256945A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_23A19B4AC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_23A161D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_23A19B4DC();
    v8 = v7;
    if (v6 == sub_23A19B4DC() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_23A19B908();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_23A19B4DC();
          v15 = v14;
          if (v13 == sub_23A19B4DC() && v15 == v16)
            break;
          v18 = sub_23A19B908();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_23A161E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_23A131E34(&qword_256945A40, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_23A19C4D4);
    v7 = v6;
    v8 = sub_23A19AD38();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_23A19AD38();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_23A161FD4()
{
  unint64_t result;

  result = qword_256945A48;
  if (!qword_256945A48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256945A48);
  }
  return result;
}

uint64_t sub_23A162010(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946600);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_23A19B830();
  __break(1u);
  return result;
}

uint64_t sub_23A162180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int16 v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_23A19B608();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23A14EF90();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_23A19B7C4();
  }
LABEL_7:
  v11 = (unsigned __int16)sub_23A162260(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FF;
}

unsigned __int8 *sub_23A162260(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int8 v12;
  int v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned int v24;
  unsigned int v25;
  char v26;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v14 = a2 - 1;
      if (a2 != 1)
      {
        v15 = a3 + 87;
        if (a3 > 10)
        {
          v16 = a3 + 55;
        }
        else
        {
          v15 = 97;
          v16 = 65;
        }
        if (a3 <= 10)
          v17 = a3 + 48;
        else
          v17 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v18 = result + 1;
          do
          {
            v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                v12 = 0;
                v13 = 1;
                if (v19 < 0x61 || v19 >= v15)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v20 = -87;
              }
              else
              {
                v20 = -55;
              }
            }
            else
            {
              v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) + (v19 + v20);
            if (((v8 >> 8) & 1) != 0)
              goto LABEL_72;
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v21 = a3 + 87;
        if (a3 > 10)
        {
          v22 = a3 + 55;
        }
        else
        {
          v21 = 97;
          v22 = 65;
        }
        if (a3 <= 10)
          v23 = a3 + 48;
        else
          v23 = 58;
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                v12 = 0;
                v13 = 1;
                if (v25 < 0x61 || v25 >= v21)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v26 = -87;
              }
              else
              {
                v26 = -55;
              }
            }
            else
            {
              v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v24 = (v24 * a3) + (v25 + v26);
            if (((v24 >> 8) & 1) != 0)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_23A162508(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_23A1627B4(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_23A162820(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_23A1625A4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  unint64_t result;
  unint64_t v9;
  uint64_t i;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  uint64_t v23;

  v7 = sub_23A162920(a1, a3, a4);
  result = sub_23A162920(a2, a3, a4);
  v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (i = 0; ; ++i)
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if ((a4 & 0x1000000000000000) != 0)
      {
        result = sub_23A19B53C();
        v7 = result;
      }
      else
      {
        v12 = v7 >> 16;
        if ((a4 & 0x2000000000000000) != 0)
        {
          v22 = a3;
          v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0)
            result = sub_23A19B7C4();
          v13 = *(unsigned __int8 *)(result + v12);
        }
        v14 = (char)v13;
        v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0)
          LOBYTE(v15) = 1;
        v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14)
        return v11;
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        result = sub_23A19B548();
        v7 = result;
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v22 = a3;
          v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          if ((*((_BYTE *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            v20 = 0;
            do
              v21 = *((_BYTE *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            v19 = 1 - v20;
          }
          else
          {
            v19 = 1;
          }
        }
        else
        {
          result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0)
            result = sub_23A19B7C4();
          v17 = 0;
          do
            v18 = *(_BYTE *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          v19 = -v17;
        }
        v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14)
        return v11;
    }
    goto LABEL_36;
  }
  return 0;
}

unint64_t sub_23A1627B4(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_23A18BF6C(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_23A162820(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v10 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          v5 = v10;
        }
        return v5 << 16;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 != (a2 & 0xFFFFFFFFFFFFLL))
        {
          do
LABEL_9:
            v7 = *(_BYTE *)(v6 + v5--) & 0xC0;
          while (v7 == 128);
          ++v5;
        }
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_23A19B7C4();
        v5 = v12;
        if (v12 != v9)
          goto LABEL_9;
      }
      return v5 << 16;
    }
    v8 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v8 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v8)
      return sub_23A19B77C();
  }
  return result;
}

unint64_t sub_23A162920(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_23A1629BC(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_23A162820(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_23A1629BC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_23A18BF6C(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
    __break(1u);
  return result;
}

uint64_t sub_23A162A28(uint64_t a1, unint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  __int128 *v10;
  _QWORD *v11;
  uint64_t inited;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  unsigned __int8 *v29;
  int v30;
  unsigned __int8 v31;
  unsigned __int8 *v32;
  int v33;
  char v34;
  unsigned __int8 *v35;
  int v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD v45[4];
  __int128 v46;
  uint64_t v47;
  char v48;
  _QWORD v49[5];
  __int128 v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t *)sub_23A19AB34();
  v5 = *(v4 - 1);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A19AB1C();
  v8 = sub_23A19B578();
  if (v8)
  {
    v9 = v8;
    v10 = (__int128 *)sub_23A165050(v8, 0);
    swift_bridgeObjectRetain();
    v11 = sub_23A164F98(v49, (uint64_t *)v10 + 4, v9, a1, a2);
    swift_bridgeObjectRelease();
    if (v11 != (_QWORD *)v9)
      goto LABEL_75;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = (__int128 *)MEMORY[0x24BEE4AF8];
  }
  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946600);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 32) = 48;
  v46 = xmmword_23A19DA00;
  *(_OWORD *)(inited + 16) = xmmword_23A19DA00;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  *(_QWORD *)(inited + 48) = 120;
  *(_QWORD *)(inited + 56) = 0xE100000000000000;
  v13 = sub_23A160CF4(inited, v10);
  swift_setDeallocating();
  swift_retain();
  swift_arrayDestroy();
  v14 = swift_release();
  if ((v13 & 1) == 0)
  {
    i = (uint64_t)v10;
    goto LABEL_16;
  }
  v9 = *((_QWORD *)v10 + 2);
  if (v9 >= 2)
    a2 = 2;
  else
    a2 = *((_QWORD *)v10 + 2);
  sub_23A19B914();
  swift_unknownObjectRetain_n();
  v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_release();
    v15 = MEMORY[0x24BEE4AF8];
  }
  v16 = *(_QWORD *)(v15 + 16);
  swift_release();
  if (v16 != v9 - a2)
    goto LABEL_76;
  i = swift_dynamicCastClass();
  v14 = swift_release();
  if (i)
    goto LABEL_16;
  for (i = MEMORY[0x24BEE4AF8]; ; i = sub_23A162010((uint64_t)v10, (uint64_t)(v10 + 2), a2, (2 * v9) | 1))
  {
    v14 = swift_release();
LABEL_16:
    v10 = (__int128 *)v45;
    MEMORY[0x24BDAC7A8](v14);
    v45[-2] = v7;
    v18 = (_QWORD *)sub_23A160F70((uint64_t)sub_23A163198, (uint64_t)&v45[-4], i);
    v19 = v18;
    v20 = v18[2];
    if (!v20)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t *))(v5 + 8))(v7, v4);
      return 0;
    }
    v50 = xmmword_23A19DA10;
    if ((v20 & 1) == 0)
    {
      v9 = 0;
      goto LABEL_68;
    }
    v23 = v18[4];
    v22 = v18[5];
    v24 = HIBYTE(v22) & 0xF;
    v25 = v23 & 0xFFFFFFFFFFFFLL;
    if ((v22 & 0x2000000000000000) != 0)
      v26 = HIBYTE(v22) & 0xF;
    else
      v26 = v23 & 0xFFFFFFFFFFFFLL;
    if (!v26)
    {
      __break(1u);
LABEL_78:
      swift_bridgeObjectRetain();
      LOWORD(v23) = sub_23A162180(v23, v22, 16);
      swift_bridgeObjectRelease();
      if ((v23 & 0x100) != 0)
        goto LABEL_85;
      goto LABEL_67;
    }
    if ((v22 & 0x1000000000000000) != 0)
      goto LABEL_78;
    if ((v22 & 0x2000000000000000) != 0)
    {
      v49[0] = v18[4];
      v49[1] = v22 & 0xFFFFFFFFFFFFFFLL;
      if (v23 == 43)
      {
        if (!v24)
          goto LABEL_83;
        if (!--v24)
        {
LABEL_85:
          __break(1u);
          JUMPOUT(0x23A163188);
        }
        LOBYTE(v23) = 0;
        v32 = (unsigned __int8 *)v49 + 1;
        while (1)
        {
          v33 = *v32;
          v34 = v33 - 48;
          if ((v33 - 48) >= 0xA)
          {
            if ((v33 - 65) < 6)
            {
              v34 = v33 - 55;
            }
            else
            {
              if ((v33 - 97) > 5)
                break;
              v34 = v33 - 87;
            }
          }
          if (v23 > 0xFu)
            break;
          LOBYTE(v23) = v34 + 16 * v23;
          ++v32;
          if (!--v24)
            goto LABEL_66;
        }
      }
      else if (v23 == 45)
      {
        if (!v24)
        {
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          swift_bridgeObjectRelease();
          __break(1u);
        }
        if (!--v24)
          goto LABEL_85;
        LOBYTE(v23) = 0;
        v29 = (unsigned __int8 *)v49 + 1;
        while (1)
        {
          v30 = *v29;
          v31 = v30 - 48;
          if ((v30 - 48) >= 0xA)
          {
            if ((v30 - 65) < 6)
            {
              v31 = v30 - 55;
            }
            else
            {
              if ((v30 - 97) > 5)
                break;
              v31 = v30 - 87;
            }
          }
          if (v23 > 0xFu)
            break;
          LODWORD(v23) = 16 * (v23 & 0xF) - v31;
          if ((v23 & 0xFFFFFF00) != 0)
            break;
          ++v29;
          if (!--v24)
            goto LABEL_66;
        }
      }
      else
      {
        if (!v24)
          goto LABEL_85;
        LOBYTE(v23) = 0;
        v35 = (unsigned __int8 *)v49;
        while (1)
        {
          v36 = *v35;
          v37 = v36 - 48;
          if ((v36 - 48) >= 0xA)
          {
            if ((v36 - 65) < 6)
            {
              v37 = v36 - 55;
            }
            else
            {
              if ((v36 - 97) > 5)
                break;
              v37 = v36 - 87;
            }
          }
          if (v23 > 0xFu)
            break;
          LOBYTE(v23) = v37 + 16 * v23;
          ++v35;
          if (!--v24)
            goto LABEL_66;
        }
      }
      LOBYTE(v23) = 0;
      LODWORD(v24) = 1;
LABEL_66:
      if ((_DWORD)v24)
        goto LABEL_85;
    }
    else
    {
      if ((v23 & 0x1000000000000000) != 0)
        v27 = (unsigned __int8 *)((v22 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v27 = (unsigned __int8 *)sub_23A19B7C4();
      v28 = sub_23A162260(v27, v25, 16);
      if (((v28 >> 8) & 1) != 0)
        goto LABEL_85;
      LOBYTE(v23) = v28;
    }
LABEL_67:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945A58);
    v49[3] = v38;
    v49[4] = sub_23A1516C4(&qword_256945A60, &qword_256945A58, MEMORY[0x24BDD06A0]);
    LOBYTE(v49[0]) = v23;
    v48 = *(_BYTE *)__swift_project_boxed_opaque_existential_1(v49, v38);
    v9 = 1;
    v10 = &v50;
    sub_23A19AC48();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    if (v20 <= 1)
      break;
LABEL_68:
    v45[1] = v7;
    v45[2] = v5;
    v45[3] = v4;
    v4 = &v19[2 * v9 + 7];
    a2 = (unint64_t)&qword_256945A60;
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v46;
    v40 = v19[2];
    if (v9 >= v40)
    {
      __break(1u);
    }
    else
    {
      v41 = v19[2 * v9 + 5];
      *(_QWORD *)(v39 + 32) = v19[2 * v9 + 4];
      *(_QWORD *)(v39 + 40) = v41;
      v7 = (char *)(v9 + 1);
      if (v9 + 1 < v40)
      {
        v42 = *v4;
        *(_QWORD *)(v39 + 48) = v19[2 * v9 + 6];
        *(_QWORD *)(v39 + 56) = v42;
        v49[0] = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256945A68);
        sub_23A1516C4(&qword_256945A70, &qword_256945A68, MEMORY[0x24BEE12C8]);
        v43 = sub_23A19B5FC();
        if ((sub_23A1610E0(v43, v44, 0x10uLL) & 0x100) == 0)
          __asm { BR              X11 }
        goto LABEL_84;
      }
    }
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    swift_release();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t *))(v5 + 8))(v7, v4);
  return v50;
}

unint64_t sub_23A163198(unint64_t *a1)
{
  return sub_23A160DE8(a1) & 1;
}

uint64_t static TransferConstants.protocolVersion.getter()
{
  return 1;
}

ValueMetadata *type metadata accessor for TransferConstants()
{
  return &type metadata for TransferConstants;
}

uint64_t static SharedSecret.accV2Compatibile(protocolVersion:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (result > 0xFu)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    v4 = MEMORY[0x24BEE4260];
    v5 = sub_23A19B65C();
    *(_QWORD *)(v5 + 16) = 2;
    *(_WORD *)(v5 + 32) = 0;
    SecRandomCopyBytes((SecRandomRef)*MEMORY[0x24BDE94B8], 2uLL, (void *)(v5 + 32));
    v6 = sub_23A18C788((_BYTE *)(v5 + 32), (_BYTE *)(v5 + 34));
    v8 = v7;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256945A78);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_23A19D500;
    v10 = MEMORY[0x24BEE42B0];
    *(_QWORD *)(v9 + 56) = v4;
    *(_QWORD *)(v9 + 64) = v10;
    *(_BYTE *)(v9 + 32) = v3;
    v15 = sub_23A19B4F4();
    v16 = v11;
    SharedSecret.asLowercasedHex.getter();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    result = sub_23A162A28(v15, v16);
    if (v12 >> 60 != 15)
    {
      v13 = result;
      v14 = v12;
      result = sub_23A125ED8(v6, v8 & 0xFFFFFFFFFFFFFFLL);
      *a2 = v13;
      a2[1] = v14;
      return result;
    }
  }
  __break(1u);
  return result;
}

void SharedSecret.advertisementIdentifer.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_23A19B464();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8];
  MEMORY[0x24BDAC7A8](v1);
  v3 = sub_23A19B3BC();
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v5 = *(_QWORD *)(v0 + 8) >> 62;
  sub_23A131DF0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  sub_23A131E34(&qword_256945638, v2, MEMORY[0x24BDC6AE8]);
  sub_23A19B3A4();
  __asm { BR              X9 }
}

uint64_t sub_23A16343C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 - 112) = v5;
  *(_WORD *)(v7 - 104) = v6;
  *(_BYTE *)(v7 - 102) = BYTE2(v6);
  *(_BYTE *)(v7 - 101) = BYTE3(v6);
  *(_BYTE *)(v7 - 100) = BYTE4(v6);
  *(_BYTE *)(v7 - 99) = BYTE5(v6);
  sub_23A19B38C();
  sub_23A125ED8(v5, v6);
  sub_23A19B398();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 128) + 8))(v4, v2);
  sub_23A125ED8(v5, v6);
  v8 = *(_QWORD *)(v7 - 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, v1, v0);
  sub_23A131E34(&qword_256945A80, (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0], MEMORY[0x24BDC6300]);
  if (*(_QWORD *)(sub_23A19B620() + 16) < 0x10uLL)
  {
    __break(1u);
    JUMPOUT(0x23A163688);
  }
  sub_23A19AD08();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v1, v0);
}

uint64_t SharedSecret.asACCV2CompatibileHex.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  unint64_t v13;
  uint64_t v14;

  v12 = *v0;
  SharedSecret.asLowercasedHex.getter();
  v2 = v1;
  v4 = v3;
  v5 = sub_23A19B578();
  if (v5)
  {
    v6 = v5;
    v7 = sub_23A165050(v5, 0);
    swift_bridgeObjectRetain();
    v8 = sub_23A164F98(&v12, v7 + 4, v6, v2, v4);
    result = swift_bridgeObjectRelease();
    if (v8 != (_QWORD *)v6)
    {
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v10 = v7[2];
  v11 = v10 - 5;
  if (v10 < 5)
    v11 = 0;
  *(_QWORD *)&v12 = v7;
  *((_QWORD *)&v12 + 1) = v7 + 4;
  v13 = v11;
  v14 = (2 * v10) | 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256945A88);
  sub_23A16543C();
  return sub_23A19B5FC();
}

void SharedSecret.protocolVersion.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_23A1637D0@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned __int8 v2;

  if ((a1 & 0xFF000000000000) != 0)
  {
    v2 = sub_23A19ACA8();
    a2 = 0;
  }
  else
  {
    v2 = 0;
  }
  return v2 | (a2 << 8);
}

uint64_t SharedSecret.init(length:)@<X0>(size_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  const __SecRandom *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_23A163D70(0, a1);
  v5 = (const __SecRandom *)*MEMORY[0x24BDE94B8];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = (uint64_t)sub_23A164830(0, *(_QWORD *)(v4 + 16), 0, (char *)v4);
  SecRandomCopyBytes(v5, a1, (void *)(v4 + 32));
  v6 = sub_23A165390((_BYTE *)(v4 + 32), a1);
  v8 = v7;
  result = swift_bridgeObjectRelease();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

BOOL static ClosedReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ClosedReason.hash(into:)()
{
  return sub_23A19B98C();
}

uint64_t ClosedReason.hashValue.getter()
{
  sub_23A19B980();
  sub_23A19B98C();
  return sub_23A19B9A4();
}

uint64_t SharedSecret.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_23A131DF0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

void SharedSecret.asLowercasedHex.getter()
{
  uint64_t v1;

  v1 = sub_23A19AC90();
  MEMORY[0x24BDAC7A8](v1);
  __asm { BR              X10 }
}

uint64_t sub_23A163A08()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  sub_23A131DF0(v3, v2);
  sub_23A131DF0(v3, v2);
  sub_23A19AC9C();
  sub_23A125ED8(v3, v2);
  sub_23A131E34(&qword_256945A98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDD78], MEMORY[0x24BDCDD80]);
  sub_23A19B71C();
  if ((*(_BYTE *)(v4 - 81) & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
    *(_OWORD *)(v4 - 128) = xmmword_23A19D500;
    v7 = MEMORY[0x24BEE4260];
    v8 = MEMORY[0x24BEE42B0];
    do
    {
      v9 = *(_BYTE *)(v4 - 82);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256945A78);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = *(_OWORD *)(v4 - 128);
      *(_QWORD *)(v10 + 56) = v7;
      *(_QWORD *)(v10 + 64) = v8;
      *(_BYTE *)(v10 + 32) = v9;
      sub_23A19B4F4();
      *(_QWORD *)(v4 - 104) = v5;
      *(_QWORD *)(v4 - 96) = v6;
      swift_bridgeObjectRetain();
      sub_23A19B590();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(v4 - 104);
      v6 = *(_QWORD *)(v4 - 96);
      sub_23A19B71C();
    }
    while (*(_BYTE *)(v4 - 81) != 1);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v1, v0);
  return v5;
}

uint64_t SharedSecret.init(hexEncoded:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  result = sub_23A162A28(a1, a2);
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = result;
  v7 = 0xF000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a3 = v6;
  a3[1] = v7;
  return result;
}

uint64_t static SharedSecret.accV2Compatibile.getter@<X0>(uint64_t *a1@<X8>)
{
  return static SharedSecret.accV2Compatibile(protocolVersion:)(1, a1);
}

uint64_t SharedSecret.asURLSafeBase64Encoded.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_23A19AB34();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23A19AC6C();
  v18 = v4;
  v15 = 43;
  v16 = 0xE100000000000000;
  v13 = 45;
  v14 = 0xE100000000000000;
  sub_23A165488();
  v5 = sub_23A19B74C();
  v7 = v6;
  swift_bridgeObjectRelease();
  v17 = v5;
  v18 = v7;
  v15 = 47;
  v16 = 0xE100000000000000;
  v13 = 95;
  v14 = 0xE100000000000000;
  v8 = sub_23A19B74C();
  v10 = v9;
  swift_bridgeObjectRelease();
  v17 = v8;
  v18 = v10;
  sub_23A19AB1C();
  v11 = sub_23A19B740();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_23A163D70(int a1, size_t a2)
{
  uint64_t v4;
  uint64_t result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_23A19B7E8();
    __break(1u);
  }
  else
  {
    if (!a2)
      return MEMORY[0x24BEE4AF8];
    v4 = sub_23A19B65C();
    *(_QWORD *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t SharedSecret.init(data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t SharedSecret.init(urlSafeBase64Encoded:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  sub_23A165488();
  sub_23A19B74C();
  swift_bridgeObjectRelease();
  sub_23A19B74C();
  swift_bridgeObjectRelease();
  v2 = sub_23A19B578();
  v3 = v2 & 3;
  if (v2 <= 0)
    v3 = -(-v2 & 3);
  if (v3 >= 1)
  {
    v4 = 4 - v3;
    swift_bridgeObjectRetain();
    v5 = sub_23A19B578();
    swift_bridgeObjectRelease();
    result = v5 + v4;
    if (__OFADD__(v5, v4))
    {
      __break(1u);
      return result;
    }
    sub_23A19B758();
    swift_bridgeObjectRelease();
  }
  v7 = sub_23A19AC30();
  v9 = v8;
  result = swift_bridgeObjectRelease();
  if (v9 >> 60 == 15)
    v10 = 0;
  else
    v10 = v7;
  v11 = 0xF000000000000000;
  if (v9 >> 60 != 15)
    v11 = v9;
  *a1 = v10;
  a1[1] = v11;
  return result;
}

uint64_t SharedSecret.init(accCompatibileHexEncoded:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if (sub_23A19B578() == 5)
  {
    result = sub_23A162A28(a1, a2);
    if (v7 >> 60 == 15)
      v8 = 0;
    else
      v8 = result;
    v9 = 0xF000000000000000;
    if (v7 >> 60 != 15)
      v9 = v7;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v8 = 0;
    v9 = 0xF000000000000000;
  }
  *a3 = v8;
  a3[1] = v9;
  return result;
}

uint64_t SharedSecret.init(pinCode:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = sub_23A19B50C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A19B500();
  v6 = sub_23A19B4E8();
  v8 = v7;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    *a1 = v6;
    a1[1] = v8;
  }
  return result;
}

uint64_t PinCode.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void sub_23A164170()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_23A19B464();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8];
  MEMORY[0x24BDAC7A8](v1);
  v3 = sub_23A19B3BC();
  MEMORY[0x24BDAC7A8](v3);
  v5 = *v0;
  v4 = v0[1];
  swift_bridgeObjectRetain();
  sub_23A189570(v5, v4);
  v7 = v6;
  sub_23A131E34(&qword_256945638, v2, MEMORY[0x24BDC6AE8]);
  sub_23A19B3A4();
  __asm { BR              X10 }
}

uint64_t sub_23A16428C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 104) = v4;
  *(_WORD *)(v7 - 96) = v5;
  *(_BYTE *)(v7 - 94) = BYTE2(v5);
  *(_BYTE *)(v7 - 93) = BYTE3(v5);
  *(_BYTE *)(v7 - 92) = BYTE4(v5);
  *(_BYTE *)(v7 - 91) = BYTE5(v5);
  sub_23A19B38C();
  sub_23A125ED8(v4, v5);
  sub_23A19B398();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 120) + 8))(v3, v1);
  sub_23A125ED8(v4, v5);
  sub_23A19B3B0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v0);
  return *(_QWORD *)(v7 - 104);
}

uint64_t sub_23A1644A4@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  char v12;
  unint64_t v13;
  unint64_t v14;

  if (a1)
  {
    v5 = a1;
    v6 = (char *)MEMORY[0x24BEE4AF8];
    if (a2)
      goto LABEL_6;
  }
  else
  {
    v6 = (char *)MEMORY[0x24BEE4AF8];
    if (!a2)
      goto LABEL_7;
    v5 = 0;
  }
  do
  {
    do
    {
      v12 = *v5++;
      v11 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_23A164830(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v14 = *((_QWORD *)v6 + 2);
      v13 = *((_QWORD *)v6 + 3);
      if (v14 >= v13 >> 1)
        v6 = sub_23A164830((char *)(v13 > 1), v14 + 1, 1, v6);
      *((_QWORD *)v6 + 2) = v14 + 1;
      v6[v14 + 32] = v11;
    }
    while (!a2);
LABEL_6:
    ;
  }
  while (v5 != a2);
LABEL_7:
  v7 = sub_23A18CA40((uint64_t)v6);
  v9 = v8;
  result = swift_bridgeObjectRelease();
  *a3 = v7;
  a3[1] = v9;
  return result;
}

Cosmo::PinCode __swiftcall PinCode.init(stringLiteral:)(Cosmo::PinCode stringLiteral)
{
  Cosmo::PinCode *v1;

  *v1 = stringLiteral;
  return stringLiteral;
}

uint64_t static PinCode.random(length:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if ((unint64_t)(result - 9) >= 0xFFFFFFFFFFFFFFF8)
  {
    v3 = result;
    v4 = 0;
    v8 = 0;
    v9 = 0xE000000000000000;
    while (v4 != v3)
    {
      v7 = 0;
      MEMORY[0x23B842FB0](&v7, 8);
      v5 = v7;
      if (10 * v7 <= 5)
      {
        do
        {
          v7 = 0;
          MEMORY[0x23B842FB0](&v7, 8);
          v5 = v7;
        }
        while (10 * v7 < 6);
      }
      ++v4;
      v7 = (v5 * (unsigned __int128)0xAuLL) >> 64;
      sub_23A19B8FC();
      sub_23A19B590();
      result = swift_bridgeObjectRelease();
      if (v4 == v3)
      {
        v6 = v9;
        *a2 = v8;
        a2[1] = v6;
        return result;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t PinCode.description.getter()
{
  swift_bridgeObjectRetain();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  return 0x2865646F436E6950;
}

uint64_t static PinCode.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23A19B908();
}

_QWORD *sub_23A164768@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_23A164774(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23A19B908();
}

Cosmo::PinCode __swiftcall PinCode.init(integerLiteral:)(Swift::Int integerLiteral)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  Cosmo::PinCode result;

  v2 = v1;
  v3 = sub_23A19B8FC();
  *v2 = v3;
  v2[1] = (uint64_t)v4;
  result.value._object = v4;
  result.value._countAndFlagsBits = v3;
  return result;
}

uint64_t sub_23A1647E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23A19B8FC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

char *sub_23A164830(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256944DA8);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23A1652AC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23A164928(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945AC0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23A165C8C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A164A48(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23A19AB64();
  if (!result || (result = sub_23A19AB88(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_23A19AB7C();
      sub_23A19B464();
      sub_23A131E34(&qword_256945638, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_23A19B38C();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23A164B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_23A164B6C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x23A164D50);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_23A164D74(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23A164DD0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_23A164B0C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_23A125ED8(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

_QWORD *sub_23A164F98(_QWORD *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = result;
  v6 = HIBYTE(a5) & 0xF;
  v12 = a4;
  v13 = a5;
  if ((a5 & 0x2000000000000000) == 0)
    v6 = a4 & 0xFFFFFFFFFFFFLL;
  v14 = v6;
  if (!a2)
  {
    v7 = 0;
LABEL_14:
    *v5 = a4;
    v5[1] = a5;
    v5[2] = 0;
    v5[3] = v6;
    return (_QWORD *)v7;
  }
  v7 = a3;
  if (!a3)
    goto LABEL_14;
  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = a2;
    v9 = 0;
    while (1)
    {
      v10 = sub_23A19B5A8();
      if (!v11)
        break;
      ++v9;
      *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    v7 = v9;
LABEL_13:
    v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23A165050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946600);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_23A1650C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_23A19AB64();
  v11 = result;
  if (result)
  {
    result = sub_23A19AB88();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_23A19AB7C();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_23A164B0C(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void _s5Cosmo12SharedSecretV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23A1651B4()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_23A1651E8 + dword_23A16529C[v0 >> 62]))();
}

BOOL sub_23A1651F8@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  _BOOL8 result;

  result = 0;
  if (a1 == BYTE6(v4))
  {
    if (a1 < 1)
      return 1;
    sub_23A131DF0(v3, v4);
    sub_23A164D74(v1, v2);
    if ((v5 & 1) != 0)
      return 1;
  }
  return result;
}

char *sub_23A1652AC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_23A19B830();
  __break(1u);
  return result;
}

uint64_t sub_23A165390(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_23A18C788(__src, &__src[a2]);
  sub_23A19AB94();
  swift_allocObject();
  sub_23A19AB58();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_23A19AC3C();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

unint64_t sub_23A16543C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256945A90;
  if (!qword_256945A90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256945A88);
    result = MEMORY[0x23B842EF0](MEMORY[0x24BEE2180], v1);
    atomic_store(result, (unint64_t *)&qword_256945A90);
  }
  return result;
}

unint64_t sub_23A165488()
{
  unint64_t result;

  result = qword_256945AA0;
  if (!qword_256945AA0)
  {
    result = MEMORY[0x23B842EF0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256945AA0);
  }
  return result;
}

unint64_t sub_23A1654D0()
{
  unint64_t result;

  result = qword_256945AA8;
  if (!qword_256945AA8)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for ClosedReason, &type metadata for ClosedReason);
    atomic_store(result, (unint64_t *)&qword_256945AA8);
  }
  return result;
}

unint64_t sub_23A165518()
{
  unint64_t result;

  result = qword_256945AB0;
  if (!qword_256945AB0)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for PinCode, &type metadata for PinCode);
    atomic_store(result, (unint64_t *)&qword_256945AB0);
  }
  return result;
}

uint64_t sub_23A16555C()
{
  return MEMORY[0x24BEE0D80];
}

unint64_t sub_23A16556C()
{
  unint64_t result;

  result = qword_256945AB8;
  if (!qword_256945AB8)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for PinCode, &type metadata for PinCode);
    atomic_store(result, (unint64_t *)&qword_256945AB8);
  }
  return result;
}

uint64_t sub_23A1655B0()
{
  return MEMORY[0x24BEE0D90];
}

uint64_t sub_23A1655BC()
{
  return MEMORY[0x24BEE0D88];
}

uint64_t sub_23A1655C8()
{
  return MEMORY[0x24BEE17E8];
}

uint64_t getEnumTagSinglePayload for ClosedReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClosedReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23A1656B0 + 4 * byte_23A19DA51[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23A1656E4 + 4 * byte_23A19DA4C[v4]))();
}

uint64_t sub_23A1656E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A1656EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A1656F4);
  return result;
}

uint64_t sub_23A165700(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A165708);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23A16570C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A165714(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClosedReason()
{
  return &type metadata for ClosedReason;
}

unint64_t destroy for TransferError(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *_s5Cosmo13TransferErrorOwCP_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = a2[1];
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for TransferError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = a1[1];
  v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v4 = a2[1];
  v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for TransferError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = a2[1];
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for TransferError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 2;
  if (v5 >= 4)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TransferError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 3;
  }
  return result;
}

uint64_t sub_23A165980(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_23A1659A4(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransferError()
{
  return &type metadata for TransferError;
}

uint64_t *initializeBufferWithCopyOfBuffer for SharedSecret(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_23A131DF0(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for SharedSecret(uint64_t a1)
{
  return sub_23A125ED8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for SharedSecret(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_23A131DF0(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_23A125ED8(v5, v6);
  return a1;
}

uint64_t *assignWithTake for SharedSecret(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_23A125ED8(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedSecret(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SharedSecret(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedSecret()
{
  return &type metadata for SharedSecret;
}

_QWORD *initializeBufferWithCopyOfBuffer for PinCode(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PinCode()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for PinCode(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PinCode(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PinCode(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PinCode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PinCode()
{
  return &type metadata for PinCode;
}

uint64_t sub_23A165C8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23A19B830();
  __break(1u);
  return result;
}

BOOL static CosmoBrowser.EndpointState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CosmoBrowser.EndpointState.hash(into:)()
{
  return sub_23A19B98C();
}

uint64_t CosmoBrowser.EndpointState.hashValue.getter()
{
  sub_23A19B980();
  sub_23A19B98C();
  return sub_23A19B9A4();
}

uint64_t sub_23A165E10@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A14EB94;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A13A0F8(v4);
}

uint64_t sub_23A165E98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A14EB94;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_23A13A0F8(v3);
  return sub_23A13A1E4(v8);
}

uint64_t sub_23A165F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v1 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A154B34(v0 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_descriptor, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_23A125ED8(*(_QWORD *)v3, *((_QWORD *)v3 + 1));
    if (qword_256944450 != -1)
      swift_once();
    v6 = qword_2569468C8;
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 3)
  {
    sub_23A125ED8(*((_QWORD *)v3 + 1), *((_QWORD *)v3 + 2));
    sub_23A125ED8(*((_QWORD *)v3 + 3), *((_QWORD *)v3 + 4));
    swift_unknownObjectRelease();
    v5 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945210) + 96)];
    if (qword_256944458 != -1)
      swift_once();
    v6 = qword_2569468D8;
    v7 = sub_23A19AD2C();
    v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    swift_bridgeObjectRetain();
    v8(v5, v7);
  }
  else
  {
    sub_23A154AF8((uint64_t)v3);
    return 16718;
  }
  return v6;
}

void sub_23A1660C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945BF0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A19B254();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  sub_23A156EF8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    sub_23A1558D0();
    sub_23A19B2CC();
    swift_allocObject();
    v15 = sub_23A19B278();
    v16 = OBJC_IVAR____TtC5Cosmo12CosmoBrowser_browser;
    *(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_browser) = v15;
    swift_release();
    if (*(_QWORD *)(v0 + v16))
    {
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      swift_retain();
      sub_23A13A0F8((uint64_t)sub_23A167828);
      sub_23A19B260();
      swift_release();
      swift_release_n();
      if (*(_QWORD *)(v0 + v16))
      {
        swift_allocObject();
        swift_weakInit();
        swift_retain();
        swift_retain();
        sub_23A13A0F8((uint64_t)sub_23A167830);
        sub_23A19B26C();
        swift_release();
        swift_release_n();
      }
    }
    if (qword_256944380 != -1)
      swift_once();
    v17 = sub_23A19AE28();
    __swift_project_value_buffer(v17, (uint64_t)qword_25694EAF8);
    swift_retain_n();
    v18 = sub_23A19AE10();
    v19 = sub_23A19B6BC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v28 = v10;
      v22 = v21;
      v30 = v21;
      v27 = v16;
      *(_DWORD *)v20 = 136315138;
      v23 = sub_23A165F44();
      v29 = sub_23A14071C(v23, v24, &v30);
      v25 = v27;
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v18, v19, "[Browser] Starting browser for Bonjour type=%s", v20, 0xCu);
      swift_arrayDestroy();
      v26 = v22;
      v10 = v28;
      MEMORY[0x23B842FA4](v26, -1, -1);
      MEMORY[0x23B842FA4](v20, -1, -1);

      if (!*(_QWORD *)(v0 + v25))
        goto LABEL_17;
    }
    else
    {

      swift_release_n();
      if (!*(_QWORD *)(v0 + v16))
      {
LABEL_17:
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        return;
      }
    }
    swift_retain();
    sub_23A19B290();
    swift_release();
    goto LABEL_17;
  }
  sub_23A13ACB8((uint64_t)v3, &qword_256945BF0);
  if (qword_256944380 != -1)
    swift_once();
  v11 = sub_23A19AE28();
  __swift_project_value_buffer(v11, (uint64_t)qword_25694EAF8);
  v12 = sub_23A19AE10();
  v13 = sub_23A19B6A4();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_23A123000, v12, v13, "[Browser] No Bonjour type!", v14, 2u);
    MEMORY[0x23B842FA4](v14, -1, -1);
  }

}

uint64_t sub_23A166588(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945C08);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v32 - v6;
  v8 = sub_23A19B284();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v39 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)&v32 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - v14;
  v16 = sub_23A19AE28();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_256944380 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v16, (uint64_t)qword_25694EAF8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v21, v16);
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v38(v15, a1, v8);
    swift_retain_n();
    v22 = sub_23A19AE10();
    v37 = sub_23A19B6BC();
    if (os_log_type_enabled(v22, (os_log_type_t)v37))
    {
      v34 = v22;
      v35 = v17;
      v36 = v16;
      v23 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v42 = v33;
      *(_DWORD *)v23 = 136315394;
      v24 = sub_23A165F44();
      v41 = sub_23A14071C(v24, v25, &v42);
      v32 = &v42;
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v38(v7, (uint64_t)v15, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
      sub_23A167838((uint64_t)v7, (uint64_t)v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
      {
        v26 = 0xE300000000000000;
        v27 = 7104878;
      }
      else
      {
        v28 = v40;
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v40, v5, v8);
        v38(v39, (uint64_t)v28, v8);
        v27 = sub_23A19B518();
        v26 = v29;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v28, v8);
      }
      sub_23A13ACB8((uint64_t)v7, &qword_256945C08);
      v41 = sub_23A14071C(v27, v26, &v42);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      v30 = v34;
      _os_log_impl(&dword_23A123000, v34, (os_log_type_t)v37, "[Browser] Browser for Bonjour type=%s changed state=%s", (uint8_t *)v23, 0x16u);
      v31 = v33;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v31, -1, -1);
      MEMORY[0x23B842FA4](v23, -1, -1);
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v19, v36);
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);

      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  return result;
}

uint64_t sub_23A1669D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t i;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int v32;
  _BYTE v33[4];
  int v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;

  v3 = sub_23A19B2B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_23A19B29C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v33[-v12];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v41 = result;
    sub_23A156B78();
    v38 = v15;
    v40 = v16;
    sub_23A156D3C();
    v39 = v18;
    v19 = *(_QWORD *)(a2 + 56);
    v35 = a2 + 56;
    v20 = 1 << *(_BYTE *)(a2 + 32);
    v21 = -1;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    v22 = v21 & v19;
    v36 = (unint64_t)(v20 + 63) >> 6;
    v37 = v17;
    v42 = *MEMORY[0x24BDE0748];
    v34 = *MEMORY[0x24BDE0758];
    v23 = a2;
    result = swift_bridgeObjectRetain();
    v24 = 0;
    if (v22)
      goto LABEL_8;
LABEL_9:
    v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      return result;
    }
    if (v29 >= v36)
      goto LABEL_28;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v24;
    if (!v30)
    {
      v24 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_28;
      v30 = *(_QWORD *)(v35 + 8 * v24);
      if (v30)
        goto LABEL_22;
      v24 = v29 + 2;
      if (v29 + 2 >= v36)
      {
LABEL_28:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      v30 = *(_QWORD *)(v35 + 8 * v24);
      if (!v30)
      {
        v31 = v29 + 3;
        if (v31 < v36)
        {
          v30 = *(_QWORD *)(v35 + 8 * v31);
          if (v30)
          {
            v24 = v31;
            goto LABEL_22;
          }
          while (1)
          {
            v24 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_31;
            if (v24 >= v36)
              goto LABEL_28;
            v30 = *(_QWORD *)(v35 + 8 * v24);
            ++v31;
            if (v30)
              goto LABEL_22;
          }
        }
        goto LABEL_28;
      }
    }
LABEL_22:
    v22 = (v30 - 1) & v30;
    for (i = __clz(__rbit64(v30)) + (v24 << 6); ; i = v27 | (v24 << 6))
    {
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v8 + 16))(v13, *(_QWORD *)(v23 + 48) + *(_QWORD *)(v8 + 72) * i, v7);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v11, v13, v7);
      v32 = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 88))(v11, v7);
      if (v32 == v42)
        break;
      if (v32 == v34)
      {
        (*(void (**)(_BYTE *, uint64_t))(v8 + 96))(v11, v7);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v6, v11, v3);
        v25 = (uint64_t)v6;
        v26 = 0;
LABEL_7:
        sub_23A166D4C(v25, v26, v38, v40, v37, v39, v41);
        result = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
        if (!v22)
          goto LABEL_9;
        goto LABEL_8;
      }
      result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
      if (!v22)
        goto LABEL_9;
LABEL_8:
      v27 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 96))(v11, v7);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v6, v11, v3);
    v25 = (uint64_t)v6;
    v26 = 1;
    goto LABEL_7;
  }
  return result;
}

void sub_23A166D4C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  BOOL v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  void (**v37)(uint64_t *);
  void (*v38)(uint64_t *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;

  v13 = sub_23A19AEC4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23A19B2A8();
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v14 + 88))(v16, v13) != *MEMORY[0x24BDDFF48])
  {
    (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
    return;
  }
  v40 = a7;
  (*(void (**)(uint64_t *, uint64_t))(v14 + 96))(v16, v13);
  v18 = *v16;
  v17 = v16[1];
  v20 = v16[2];
  v19 = v16[3];
  swift_bridgeObjectRelease();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945BF8);
  sub_23A13ACB8((uint64_t)v16 + *(int *)(v21 + 80), &qword_256945C00);
  v22 = 0x652D65766F6D6572;
  if ((a2 & 1) != 0)
    v22 = 0x6E6576652D646461;
  v41 = v22;
  v42 = v20;
  if ((a2 & 1) != 0)
    v23 = 0xE900000000000074;
  else
    v23 = 0xEC000000746E6576;
  if (a4
    && (v18 == a3 ? (v24 = v17 == a4) : (v24 = 0),
        (v24 || (sub_23A19B908() & 1) != 0)
     && a6
     && (v20 == a5 ? (v25 = v19 == a6) : (v25 = 0), v25 || (sub_23A19B908() & 1) != 0)))
  {
    if (qword_256944380 != -1)
      swift_once();
    v26 = sub_23A19AE28();
    __swift_project_value_buffer(v26, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = sub_23A19AE10();
    v28 = sub_23A19B6BC();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v43[0] = v31;
      *(_DWORD *)v30 = 136315650;
      swift_bridgeObjectRetain();
      v44 = sub_23A14071C(v41, v23, v43);
      LODWORD(v41) = v29;
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      v44 = sub_23A14071C(v18, v17, v43);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 22) = 2080;
      swift_bridgeObjectRetain();
      v44 = sub_23A14071C(v42, v19, v43);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v27, (os_log_type_t)v41, "[Browser] Received %s for Bonjour-service-name=%s Bonjour-service-type=%s", (uint8_t *)v30, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v31, -1, -1);
      MEMORY[0x23B842FA4](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v37 = (void (**)(uint64_t *))(v40 + 16);
    if ((a2 & 1) != 0)
    {
      swift_beginAccess();
      v38 = *v37;
      if (!v38)
        return;
      LOBYTE(v44) = 0;
    }
    else
    {
      swift_beginAccess();
      v38 = *v37;
      if (!v38)
        return;
      LOBYTE(v44) = 1;
    }
    swift_retain();
    v38(&v44);
    sub_23A13A1E4((uint64_t)v38);
  }
  else
  {
    if (qword_256944380 != -1)
      swift_once();
    v32 = sub_23A19AE28();
    __swift_project_value_buffer(v32, (uint64_t)qword_25694EAF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = sub_23A19AE10();
    v34 = sub_23A19B6BC();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v43[0] = v36;
      *(_DWORD *)v35 = 136315650;
      swift_bridgeObjectRetain();
      v44 = sub_23A14071C(v41, v23, v43);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      v44 = sub_23A14071C(v18, v17, v43);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 22) = 2080;
      swift_bridgeObjectRetain();
      v44 = sub_23A14071C(v42, v19, v43);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A123000, v33, v34, "[Browser] Ignoring %s for Bonjour-service-name=%s Bonjour-service-type=%s", (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v36, -1, -1);
      MEMORY[0x23B842FA4](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_23A167380()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (qword_256944380 != -1)
    swift_once();
  v1 = sub_23A19AE28();
  __swift_project_value_buffer(v1, (uint64_t)qword_25694EAF8);
  swift_retain_n();
  v2 = sub_23A19AE10();
  v3 = sub_23A19B6BC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_23A165F44();
    sub_23A14071C(v6, v7, &v8);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v2, v3, "[Browser] Stopping browser for Bonjour type=%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v5, -1, -1);
    MEMORY[0x23B842FA4](v4, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_browser))
  {
    swift_retain();
    sub_23A19B2C0();
    swift_release();
  }
}

uint64_t CosmoBrowser.deinit()
{
  uint64_t v0;

  sub_23A13A1E4(*(_QWORD *)(v0 + 16));
  sub_23A154AF8(v0 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_descriptor);

  swift_release();
  return v0;
}

uint64_t CosmoBrowser.__deallocating_deinit()
{
  uint64_t v0;

  sub_23A13A1E4(*(_QWORD *)(v0 + 16));
  sub_23A154AF8(v0 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_descriptor);

  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_23A1675E8()
{
  unint64_t result;

  result = qword_256945AD8;
  if (!qword_256945AD8)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CosmoBrowser.EndpointState, &type metadata for CosmoBrowser.EndpointState);
    atomic_store(result, (unint64_t *)&qword_256945AD8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CosmoBrowser.EndpointState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A167680 + 4 * byte_23A19DCDD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A1676B4 + 4 * asc_23A19DCD8[v4]))();
}

uint64_t sub_23A1676B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A1676BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A1676C4);
  return result;
}

uint64_t sub_23A1676D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A1676D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A1676DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A1676E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CosmoBrowser.EndpointState()
{
  return &type metadata for CosmoBrowser.EndpointState;
}

uint64_t sub_23A167700()
{
  return type metadata accessor for CosmoBrowser();
}

uint64_t type metadata accessor for CosmoBrowser()
{
  uint64_t result;

  result = qword_256945B08;
  if (!qword_256945B08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A167744()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NetworkDescriptor();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CosmoBrowser()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CosmoBrowser.endpointChanged.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CosmoBrowser.endpointChanged.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CosmoBrowser.endpointChanged.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_23A167804()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A167828(uint64_t a1)
{
  return sub_23A166588(a1);
}

uint64_t sub_23A167830(uint64_t a1, uint64_t a2)
{
  return sub_23A1669D8(a1, a2);
}

uint64_t sub_23A167838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A167880()
{
  swift_release();
  return swift_deallocObject();
}

SecKeyRef getLocalKeyPair(serializedKeyPair:)(uint64_t a1, unint64_t a2)
{
  SecKeyRef result;
  NSObject *v5;
  NSObject *v6;

  if (a2 >> 60 == 15)
    return createKeyPair((void *)*MEMORY[0x24BDE9060], 256);
  sub_23A131DF0(a1, a2);
  v5 = deserialize(serializedKeyPair:)();
  if (v5)
  {
    v6 = v5;
    sub_23A125F1C(a1, a2);
    return (SecKeyRef)v6;
  }
  else
  {
    result = (SecKeyRef)sub_23A19B7F4();
    __break(1u);
  }
  return result;
}

uint64_t getPublicKey(identity:)(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = publicKeyFromIdentity(a1);
  v2 = sub_23A19AC78();

  return v2;
}

uint64_t copyPublicKeyFrom(identity:)(NSObject *a1)
{
  __SecIdentity *v1;
  __SecIdentity *v2;
  OSStatus v3;
  SecKeyRef v4;
  __SecKey *v5;
  SecKeyRef v6;
  SecKeyRef v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  NSObject *v28;
  SecKeyRef v30[2];

  v30[1] = *(SecKeyRef *)MEMORY[0x24BDAC8D0];
  v1 = sec_identity_copy_ref(a1);
  if (!v1)
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v11 = sub_23A19AE28();
    __swift_project_value_buffer(v11, (uint64_t)qword_25694EB70);
    v12 = sub_23A19AE10();
    v13 = sub_23A19B6A4();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_23A123000, v12, v13, "Unable to copy secIdentity", v14, 2u);
      MEMORY[0x23B842FA4](v14, -1, -1);
    }

    return 0;
  }
  v2 = v1;
  v30[0] = 0;
  v3 = SecIdentityCopyPrivateKey(v1, v30);
  v4 = v30[0];
  if (v3 != sub_23A19AE34())
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v15 = sub_23A19AE28();
    __swift_project_value_buffer(v15, (uint64_t)qword_25694EB70);
    v16 = sub_23A19AE10();
    v17 = sub_23A19B6A4();
    if (!os_log_type_enabled(v16, v17))
      goto LABEL_21;
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    v19 = "SecIdentityCopyPrivateKey failed";
    goto LABEL_20;
  }
  if (!v4)
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v20 = sub_23A19AE28();
    __swift_project_value_buffer(v20, (uint64_t)qword_25694EB70);
    v16 = sub_23A19AE10();
    v17 = sub_23A19B6A4();
    if (!os_log_type_enabled(v16, v17))
      goto LABEL_21;
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    v19 = "Could not copy privateKey";
LABEL_20:
    _os_log_impl(&dword_23A123000, v16, v17, v19, v18, 2u);
    MEMORY[0x23B842FA4](v18, -1, -1);
LABEL_21:

LABEL_33:
    return 0;
  }
  v5 = v4;
  v6 = SecKeyCopyPublicKey(v5);
  if (!v6)
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v21 = sub_23A19AE28();
    __swift_project_value_buffer(v21, (uint64_t)qword_25694EB70);
    v22 = sub_23A19AE10();
    v23 = sub_23A19B6A4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_23A123000, v22, v23, "Could not create publicKey from privateKey", v24, 2u);
      MEMORY[0x23B842FA4](v24, -1, -1);
    }
    goto LABEL_32;
  }
  v7 = v6;
  v8 = (void *)SecKeyCopySubjectPublicKeyInfo();
  if (!v8)
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v25 = sub_23A19AE28();
    __swift_project_value_buffer(v25, (uint64_t)qword_25694EB70);
    v22 = sub_23A19AE10();
    v26 = sub_23A19B6A4();
    if (os_log_type_enabled(v22, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_23A123000, v22, v26, "Could not create data from publicKey", v27, 2u);
      MEMORY[0x23B842FA4](v27, -1, -1);
      v28 = v7;
    }
    else
    {
      v28 = v22;
      v22 = v5;
      v5 = v2;
      v2 = v7;
    }

LABEL_32:
    goto LABEL_33;
  }
  v9 = v8;
  v10 = sub_23A19AC78();

  return v10;
}

uint64_t copyPrivateKeyFrom(identity:)(NSObject *a1)
{
  __SecIdentity *v1;
  __SecIdentity *v2;
  OSStatus v3;
  SecKeyRef v4;
  __SecKey *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  uint64_t v16;
  SecKeyRef v18[2];

  v18[1] = *(SecKeyRef *)MEMORY[0x24BDAC8D0];
  v1 = sec_identity_copy_ref(a1);
  if (!v1)
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v7 = sub_23A19AE28();
    __swift_project_value_buffer(v7, (uint64_t)qword_25694EB70);
    v8 = sub_23A19AE10();
    v9 = sub_23A19B6A4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23A123000, v8, v9, "Unable to copy secIdentity", v10, 2u);
      MEMORY[0x23B842FA4](v10, -1, -1);
    }

    return 0;
  }
  v2 = v1;
  v18[0] = 0;
  v3 = SecIdentityCopyPrivateKey(v1, v18);
  v4 = v18[0];
  if (v3 != sub_23A19AE34())
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v11 = sub_23A19AE28();
    __swift_project_value_buffer(v11, (uint64_t)qword_25694EB70);
    v12 = sub_23A19AE10();
    v13 = sub_23A19B6A4();
    if (!os_log_type_enabled(v12, v13))
      goto LABEL_19;
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = "SecIdentityCopyPrivateKey failed";
    goto LABEL_18;
  }
  if (!v4)
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v16 = sub_23A19AE28();
    __swift_project_value_buffer(v16, (uint64_t)qword_25694EB70);
    v12 = sub_23A19AE10();
    v13 = sub_23A19B6A4();
    if (!os_log_type_enabled(v12, v13))
      goto LABEL_19;
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = "Could not copy privateKey";
LABEL_18:
    _os_log_impl(&dword_23A123000, v12, v13, v15, v14, 2u);
    MEMORY[0x23B842FA4](v14, -1, -1);
LABEL_19:

    return 0;
  }
  v5 = v4;
  v6 = serializeKeyPair(keyPair:)(v5);

  return v6;
}

uint64_t serializeKeyPair(keyPair:)(__SecKey *a1)
{
  CFDataRef v1;
  NSObject *v2;
  CFErrorRef v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  CFErrorRef error[2];

  error[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  error[0] = 0;
  v1 = SecKeyCopyExternalRepresentation(a1, error);
  v2 = v1;
  v3 = error[0];
  if (error[0])
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v4 = sub_23A19AE28();
    __swift_project_value_buffer(v4, (uint64_t)qword_25694EB70);
    v5 = sub_23A19AE10();
    v6 = sub_23A19B6A4();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v17 = v8;
      *(_DWORD *)v7 = 136315138;
      type metadata accessor for CFError(0);
      sub_23A131E34(&qword_256945C10, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
      v9 = sub_23A19B92C();
      v11 = v10;

      sub_23A14071C(v9, v11, &v17);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v5, v6, "Error encountered during serialization of keyPair, error: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v8, -1, -1);
      MEMORY[0x23B842FA4](v7, -1, -1);

      return 0;
    }

LABEL_9:
    return 0;
  }
  if (!v1)
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v14 = sub_23A19AE28();
    __swift_project_value_buffer(v14, (uint64_t)qword_25694EB70);
    v2 = sub_23A19AE10();
    v15 = sub_23A19B6A4();
    if (os_log_type_enabled(v2, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_23A123000, v2, v15, "Failed to serialize keyPair", v16, 2u);
      MEMORY[0x23B842FA4](v16, -1, -1);
    }
    goto LABEL_9;
  }
  v12 = sub_23A19AC78();

  return v12;
}

NSObject *deserialize(serializedKeyPair:)()
{
  uint64_t inited;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  const __CFData *v11;
  const __CFDictionary *v12;
  NSObject *v13;
  CFErrorRef v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v27;
  CFErrorRef error[12];

  error[11] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256945C18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23A19DDD0;
  v1 = (void *)*MEMORY[0x24BDE9050];
  v2 = (void *)*MEMORY[0x24BDE9060];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDE9050];
  *(_QWORD *)(inited + 40) = v2;
  v3 = (void *)*MEMORY[0x24BDE9028];
  v4 = (void *)*MEMORY[0x24BDE9030];
  *(_QWORD *)(inited + 48) = *MEMORY[0x24BDE9028];
  *(_QWORD *)(inited + 56) = v4;
  v5 = (void *)*MEMORY[0x24BDE9048];
  *(_QWORD *)(inited + 64) = *MEMORY[0x24BDE9048];
  v6 = v1;
  v7 = v2;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  *(_QWORD *)(inited + 72) = sub_23A19B680();
  sub_23A168778(inited);
  error[0] = 0;
  v11 = (const __CFData *)sub_23A19AC60();
  type metadata accessor for CFString(0);
  sub_23A131E34(&qword_256944978, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_23A19C500);
  v12 = (const __CFDictionary *)sub_23A19B470();
  swift_bridgeObjectRelease();
  v13 = SecKeyCreateWithData(v11, v12, error);

  v14 = error[0];
  if (error[0])
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v15 = sub_23A19AE28();
    __swift_project_value_buffer(v15, (uint64_t)qword_25694EB70);
    v16 = sub_23A19AE10();
    v17 = sub_23A19B6A4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v27 = v19;
      *(_DWORD *)v18 = 136315138;
      type metadata accessor for CFError(0);
      sub_23A131E34(&qword_256945C10, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
      v20 = sub_23A19B92C();
      v22 = v21;

      sub_23A14071C(v20, v22, &v27);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v16, v17, "Error encountered during deserialization of keyPair, error: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v19, -1, -1);
      MEMORY[0x23B842FA4](v18, -1, -1);

      return 0;
    }

LABEL_12:
    return 0;
  }
  if (!v13)
  {
    if (qword_2569443A8 != -1)
      swift_once();
    v23 = sub_23A19AE28();
    __swift_project_value_buffer(v23, (uint64_t)qword_25694EB70);
    v13 = sub_23A19AE10();
    v24 = sub_23A19B6A4();
    if (os_log_type_enabled(v13, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_23A123000, v13, v24, "Failed to deserialize keyPair", v25, 2u);
      MEMORY[0x23B842FA4](v25, -1, -1);
    }
    goto LABEL_12;
  }
  return v13;
}

unint64_t sub_23A168778(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256945C20);
  v2 = (_QWORD *)sub_23A19B824();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    result = sub_23A1619DC((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23A168880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_256945C28);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256945C28);
  if (qword_256944390 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_25694EB28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

Cosmo::CosmoMultiplexChannelClient::State_optional __swiftcall CosmoMultiplexChannelClient.State.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  Cosmo::CosmoMultiplexChannelClient::State_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23A19B860();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t CosmoMultiplexChannelClient.State.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6164696C61766E69;
  else
    return 0x7964616572;
}

uint64_t sub_23A1689B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23A151F7C(*a1, *a2);
}

uint64_t sub_23A1689BC()
{
  unsigned __int8 *v0;

  return sub_23A152178(*v0);
}

uint64_t sub_23A1689C4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_23A1522F8(a1, *v1);
}

uint64_t sub_23A1689CC(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_23A1523FC(a1, *v1);
}

Cosmo::CosmoMultiplexChannelClient::State_optional sub_23A1689D4(Swift::String *a1)
{
  return CosmoMultiplexChannelClient.State.init(rawValue:)(*a1);
}

uint64_t sub_23A1689E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CosmoMultiplexChannelClient.State.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t CosmoMultiplexChannelClient.Configuration.maxOutstandingRequests.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CosmoMultiplexChannelClient.Configuration.httpConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CosmoMultiplexChannelClient.Configuration(0);
  return sub_23A13ABDC(v1 + *(int *)(v3 + 20), a1, type metadata accessor for CosmoHttpConnection.Configuration);
}

uint64_t type metadata accessor for CosmoMultiplexChannelClient.Configuration(uint64_t a1)
{
  return sub_23A141024(a1, qword_256945E90);
}

uint64_t CosmoMultiplexChannelClient.Configuration.init(maxOutstandingRequests:httpConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;

  *a3 = a1;
  v5 = type metadata accessor for CosmoMultiplexChannelClient.Configuration(0);
  return sub_23A13AB54(a2, (uint64_t)a3 + *(int *)(v5 + 20), type metadata accessor for CosmoHttpConnection.Configuration);
}

uint64_t sub_23A168AA0@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A14EB94;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A13A0F8(v4);
}

uint64_t sub_23A168B28(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A14EB94;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_23A13A0F8(v3);
  return sub_23A13A1E4(v8);
}

uint64_t CosmoMultiplexChannelClient.__allocating_init(config:name:descriptor:queue:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  CosmoMultiplexChannelClient.init(config:name:descriptor:queue:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t CosmoMultiplexChannelClient.init(config:name:descriptor:queue:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = v5;
  v46 = a5;
  v47 = a2;
  v51 = a4;
  v9 = sub_23A19AEC4();
  MEMORY[0x24BDAC7A8](v9);
  v50 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NetworkDescriptor();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v48 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v43 - v14;
  v16 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v49 = (uint64_t)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v52 = (uint64_t)&v43 - v19;
  v20 = sub_23A19B6EC();
  v44 = *(_QWORD *)(v20 - 8);
  v45 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23A19B6C8();
  MEMORY[0x24BDAC7A8](v23);
  v24 = sub_23A19B2F0();
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) = 0;
  v25 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests) = v25;
  v26 = a1;
  v27 = a1;
  v28 = v46;
  sub_23A13ABDC(v27, v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config, type metadata accessor for CosmoMultiplexChannelClient.Configuration);
  v29 = (_QWORD *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_name);
  *v29 = v47;
  v29[1] = a3;
  v53 = v26;
  if (v28)
  {
    v30 = v28;
  }
  else
  {
    sub_23A125AD0();
    sub_23A19B2E4();
    v54 = v25;
    v47 = (id)sub_23A131E34((unint64_t *)&unk_256945240, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569444F0);
    sub_23A131E74((unint64_t *)&unk_256945250, (uint64_t *)&unk_2569444F0);
    v26 = v53;
    sub_23A19B764();
    (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v22, *MEMORY[0x24BEE5750], v45);
    v30 = (void *)sub_23A19B704();
  }
  v31 = v28;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue) = v30;
  v32 = v51;
  sub_23A13ABDC(v51, v6 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_descriptor, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  v33 = type metadata accessor for CosmoMultiplexChannelClient.Configuration(0);
  v34 = v52;
  sub_23A13ABDC(v26 + *(int *)(v33 + 20), v52, type metadata accessor for CosmoHttpConnection.Configuration);
  sub_23A13ABDC(v32, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  v47 = v31;
  v35 = v30;
  sub_23A155458(v50);
  sub_23A1558D0();
  sub_23A19B08C();
  swift_allocObject();
  v36 = sub_23A19B014();
  v37 = v49;
  sub_23A13ABDC(v34, v49, type metadata accessor for CosmoHttpConnection.Configuration);
  v38 = v48;
  sub_23A13ABDC((uint64_t)v15, v48, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoHttpConnection(0);
  swift_allocObject();
  v39 = sub_23A143458(v37, v38, 1, v36, v30);
  sub_23A13AC20((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  sub_23A13AC20(v34, type metadata accessor for CosmoHttpConnection.Configuration);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_parentConnection) = v39;
  v40 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v41 = *((_QWORD *)v39 + 2);
  *((_QWORD *)v39 + 2) = sub_23A16915C;
  *((_QWORD *)v39 + 3) = v40;
  swift_retain();
  sub_23A13A1E4(v41);

  sub_23A13AC20(v32, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  sub_23A13AC20(v53, type metadata accessor for CosmoMultiplexChannelClient.Configuration);
  swift_release();
  return v6;
}

uint64_t sub_23A169138()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A16915C(char *a1)
{
  uint64_t v1;

  return sub_23A12CD84(a1, v1, (void (*)(char *))sub_23A169788);
}

uint64_t sub_23A16917C()
{
  return sub_23A1693E4((uint64_t)sub_23A1693B0, (uint64_t)&block_descriptor_5);
}

uint64_t sub_23A169190(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_parentConnection);
  v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = sub_23A16915C;
  *(_QWORD *)(v1 + 24) = v2;
  sub_23A13A1E4(v3);
  if (qword_2569443D0 != -1)
    swift_once();
  v4 = sub_23A19AE28();
  __swift_project_value_buffer(v4, (uint64_t)qword_256945C28);
  swift_retain_n();
  v5 = sub_23A19AE10();
  v6 = sub_23A19B6BC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_retain();
    v9 = CosmoMultiplexChannelClient.description.getter();
    v11 = v10;
    swift_release();
    sub_23A14071C(v9, v11, &v13);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v5, v6, "[Start] Starting parent channel, %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v8, -1, -1);
    MEMORY[0x23B842FA4](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return sub_23A143E40();
}

uint64_t sub_23A1693B0()
{
  uint64_t v0;

  return sub_23A169190(v0);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_23A1693D0()
{
  return sub_23A1693E4((uint64_t)sub_23A169780, (uint64_t)&block_descriptor_3_1);
}

uint64_t sub_23A1693E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = v2;
  v6 = sub_23A19B2D8();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19B2F0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  aBlock[4] = a1;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = a2;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_23A19B2E4();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v14, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_23A1695B0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  if (qword_2569443D0 != -1)
    swift_once();
  v0 = sub_23A19AE28();
  __swift_project_value_buffer(v0, (uint64_t)qword_256945C28);
  swift_retain_n();
  v1 = sub_23A19AE10();
  v2 = sub_23A19B6BC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v9 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_retain();
    v5 = CosmoMultiplexChannelClient.description.getter();
    v7 = v6;
    swift_release();
    sub_23A14071C(v5, v7, &v9);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v1, v2, "[Stop] Stopping parent channel, %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v4, -1, -1);
    MEMORY[0x23B842FA4](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return sub_23A145B9C();
}

uint64_t sub_23A169780()
{
  return sub_23A1695B0();
}

void sub_23A169788(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  int v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void (*v29)(uint64_t *);
  void (*v30)(uint64_t *);
  uint64_t v31;
  uint64_t v32[3];

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  v9 = *a1;
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v10 = v8;
  LOBYTE(a1) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((a1 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_9;
  }
  if (v9)
  {
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) & 1) == 0)
    {
      if (qword_2569443D0 != -1)
        swift_once();
      v11 = sub_23A19AE28();
      __swift_project_value_buffer(v11, (uint64_t)qword_256945C28);
      swift_retain_n();
      v12 = sub_23A19AE10();
      v13 = sub_23A19B6BC();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        v15 = swift_slowAlloc();
        v32[0] = v15;
        *(_DWORD *)v14 = 136315394;
        LOBYTE(v31) = v9;
        v16 = sub_23A19B518();
        v31 = sub_23A14071C(v16, v17, v32);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2080;
        swift_retain();
        v18 = CosmoMultiplexChannelClient.description.getter();
        v20 = v19;
        swift_release();
        v31 = sub_23A14071C(v18, v20, v32);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v12, v13, "Parent channel invalidated, connection-state=%s %s", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v15, -1, -1);
        MEMORY[0x23B842FA4](v14, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      sub_23A169C5C();
      swift_beginAccess();
      v30 = *(void (**)(uint64_t *))(v2 + 16);
      if (v30)
      {
        LOBYTE(v31) = 1;
        swift_retain();
        v30(&v31);
        sub_23A13A1E4((uint64_t)v30);
      }
    }
    return;
  }
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) = 1;
  if (qword_2569443D0 != -1)
    goto LABEL_20;
LABEL_9:
  v21 = sub_23A19AE28();
  __swift_project_value_buffer(v21, (uint64_t)qword_256945C28);
  swift_retain_n();
  v22 = sub_23A19AE10();
  v23 = sub_23A19B6BC();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v32[0] = v25;
    *(_DWORD *)v24 = 136315138;
    swift_retain();
    v26 = CosmoMultiplexChannelClient.description.getter();
    v28 = v27;
    swift_release();
    v31 = sub_23A14071C(v26, v28, v32);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v22, v23, "Parent channel ready, %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v25, -1, -1);
    MEMORY[0x23B842FA4](v24, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  v29 = *(void (**)(uint64_t *))(v2 + 16);
  if (v29)
  {
    LOBYTE(v31) = 0;
    swift_retain();
    v29(&v31);
    sub_23A13A1E4((uint64_t)v29);
  }
  sub_23A16B980();
}

uint64_t sub_23A169C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t result;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_23A19B2D8();
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v42 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A19B2F0();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A19B35C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  v12 = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    v33 = sub_23A19B800();
    result = swift_bridgeObjectRelease();
    if (!v33)
      return result;
    goto LABEL_4;
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) = 1;
  v12 = v1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue;
  result = swift_beginAccess();
  if (*(_QWORD *)v12 >> 62)
    goto LABEL_20;
  if (!*(_QWORD *)((*(_QWORD *)v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    return result;
LABEL_4:
  v14 = (unint64_t *)(v1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  result = swift_beginAccess();
  v15 = *v14;
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = sub_23A19B800();
    result = swift_bridgeObjectRelease();
    if (!v34)
      return result;
  }
  else if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  if (qword_2569443D0 != -1)
    swift_once();
  v16 = sub_23A19AE28();
  __swift_project_value_buffer(v16, (uint64_t)qword_256945C28);
  swift_retain_n();
  v17 = sub_23A19AE10();
  v18 = sub_23A19B6BC();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    aBlock[0] = v20;
    *(_DWORD *)v19 = 136315138;
    swift_retain();
    v21 = CosmoMultiplexChannelClient.description.getter();
    v23 = v22;
    swift_release();
    v45 = sub_23A14071C(v21, v23, aBlock);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v17, v18, "Failing pending requests, %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v20, -1, -1);
    MEMORY[0x23B842FA4](v19, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v24 = *(_QWORD *)v12;
  if (*(_QWORD *)v12 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_23A19B800();
    v25 = result;
    if (result)
      goto LABEL_13;
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v25)
    {
LABEL_13:
      if (v25 < 1)
      {
        __break(1u);
        return result;
      }
      v26 = 0;
      v37 = v24 & 0xC000000000000001;
      v36 = 0x800000023A1A17D0;
      v35 = xmmword_23A19D2F0;
      v38 = v24;
      v27 = v42;
      do
      {
        if (v37)
        {
          v28 = MEMORY[0x23B842698](v26, v24);
        }
        else
        {
          v28 = *(_QWORD *)(v24 + 8 * v26 + 32);
          swift_retain();
        }
        ++v26;
        v29 = swift_allocObject();
        *(_QWORD *)(v29 + 16) = v28;
        *(_QWORD *)(v29 + 24) = 0xD00000000000001DLL;
        *(_QWORD *)(v29 + 32) = v36;
        *(_OWORD *)(v29 + 40) = v35;
        *(_BYTE *)(v29 + 56) = 2;
        aBlock[4] = (uint64_t)sub_23A1704D4;
        aBlock[5] = v29;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_23A126ED0;
        aBlock[3] = (uint64_t)&block_descriptor_33;
        v30 = _Block_copy(aBlock);
        swift_retain();
        v31 = v39;
        sub_23A19B2E4();
        v45 = MEMORY[0x24BEE4AF8];
        sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
        sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
        v32 = v44;
        sub_23A19B764();
        MEMORY[0x23B8425E4](0, v31, v27, v30);
        _Block_release(v30);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v32);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
        swift_release();
        swift_release();
        v24 = v38;
      }
      while (v25 != v26);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A16A264(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v26 = a3;
  v27 = a6;
  v28 = a2;
  v30 = sub_23A19B2D8();
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A19B2F0();
  v31 = *(_QWORD *)(v12 - 8);
  v32 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a5 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v29 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a5);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = (char *)swift_allocObject();
  v20 = v27;
  *((_QWORD *)v19 + 2) = a5;
  *((_QWORD *)v19 + 3) = v20;
  v21 = v26;
  *((_QWORD *)v19 + 4) = v6;
  *((_QWORD *)v19 + 5) = v21;
  *((_QWORD *)v19 + 6) = a4;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v19[v18], (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  v19[v18 + v17] = v28;
  aBlock[4] = sub_23A16AAE4;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_9_0;
  v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23A19B2E4();
  v34 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  v23 = v30;
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v15, v11, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
  return swift_release();
}

void sub_23A16A4F4(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(uint64_t *);
  uint64_t v28;
  id v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  int v49;
  void (*v50)(uint64_t *);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v49 = a5;
  v50 = a2;
  v51 = a3;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569449D0);
  v11 = sub_23A19B9B0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t *)((char *)&v47 - v14);
  v16 = *(_QWORD *)(a6 - 8);
  v17 = MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v47 - v20;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) & 1) != 0)
  {
    sub_23A13A274();
    v22 = swift_allocError();
    *(_OWORD *)v23 = xmmword_23A19D2F0;
    *(_BYTE *)(v23 + 16) = 2;
    *v15 = v22;
    swift_storeEnumTagMultiPayload();
    v50(v15);
    (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v15, v11);
    return;
  }
  v48 = type metadata accessor for PendingRequest(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v24(v21, a4, a6);
  v47 = *(id *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  v25 = swift_allocObject();
  swift_weakInit();
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a6;
  v26[3] = a7;
  v27 = v50;
  v26[4] = v25;
  v26[5] = v27;
  v28 = a7;
  v26[6] = v51;
  v24(v19, (uint64_t)v21, a6);
  v29 = v47;
  swift_retain();
  swift_retain();
  v30 = v49;
  LODWORD(v51) = v49 & 1;
  v31 = sub_23A170384((uint64_t)v19, v49 & 1, (uint64_t)v29, (uint64_t)sub_23A170A64, (uint64_t)v26, v48, a6, v28);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, a6);
  swift_release();
  v32 = swift_allocObject();
  swift_weakInit();
  v33 = v31[2];
  v31[2] = sub_23A170A74;
  v31[3] = v32;
  sub_23A13A1E4(v33);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) != 1)
    goto LABEL_8;
  v34 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  v35 = *v34;
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_23A19B800();
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v36 < *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (v30 & 1) != 0)
  {
    sub_23A16C1E0((uint64_t)v31);
  }
  else
  {
LABEL_8:
    sub_23A16B678((uint64_t)v31, v51);
    if (qword_2569443D0 != -1)
      swift_once();
    v37 = sub_23A19AE28();
    __swift_project_value_buffer(v37, (uint64_t)qword_256945C28);
    swift_retain_n();
    v38 = sub_23A19AE10();
    v39 = sub_23A19B6BC();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v53 = v51;
      *(_DWORD *)v40 = 136315650;
      v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 48))(a6, v28);
      v52 = sub_23A14071C(v41, v42, &v53);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 1024;
      LODWORD(v52) = v49 & 1;
      sub_23A19B728();
      *(_WORD *)(v40 + 18) = 2080;
      swift_retain();
      v43 = CosmoMultiplexChannelClient.description.getter();
      v45 = v44;
      swift_release();
      v52 = sub_23A14071C(v43, v45, &v53);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v38, v39, "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v40, 0x1Cu);
      v46 = v51;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v46, -1, -1);
      MEMORY[0x23B842FA4](v40, -1, -1);
      swift_release();

      return;
    }

    swift_release_n();
  }
  swift_release();
}

uint64_t sub_23A16AA6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_23A16AAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_23A16A4F4(*(_QWORD *)(v0 + 32), *(void (**)(uint64_t *))(v0 + 40), *(_QWORD *)(v0 + 48), v0 + v3, *(unsigned __int8 *)(v0 + v3 + *(_QWORD *)(v2 + 64)), v1, *(_QWORD *)(v0 + 24));
}

uint64_t sub_23A16AB14(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t *v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *);
  uint64_t v33;

  v31 = a4;
  v32 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569449D0);
  v33 = sub_23A19B9B0();
  v30 = *(_QWORD *)(v33 - 8);
  v6 = MEMORY[0x24BDAC7A8](v33);
  v29 = (_QWORD *)((char *)v28 - v7);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v28 - v9;
  v11 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946550);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A13AC74(a1, (uint64_t)v16, (uint64_t *)&unk_256946550);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = *(_QWORD *)v16;
      v19 = *((_QWORD *)v16 + 1);
      v20 = v16[16];
      sub_23A13A274();
      v21 = swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_BYTE *)(v22 + 16) = v20;
      v23 = v29;
      *v29 = v21;
      v24 = v33;
      swift_storeEnumTagMultiPayload();
      v32(v23);
      swift_release();
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v30 + 8))(v23, v24);
    }
    else
    {
      sub_23A13AB54((uint64_t)v16, (uint64_t)v13, type metadata accessor for CosmoHttpResponseContent);
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      (*(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v13, AssociatedTypeWitness, AssociatedConformanceWitness);
      v26 = v29;
      (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(v29, v10, AssociatedTypeWitness);
      v27 = v33;
      swift_storeEnumTagMultiPayload();
      v32(v26);
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v30 + 8))(v26, v27);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
      return sub_23A13AC20((uint64_t)v13, type metadata accessor for CosmoHttpResponseContent);
    }
  }
  return result;
}

uint64_t sub_23A16B100(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v2 = sub_23A19AC0C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23A13ABDC(a1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload() != 1)
    __asm { BR              X10 }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v5, v8, v2);
  v13 = 0x3D4C5255656C6966;
  v14 = 0xE800000000000000;
  sub_23A19ABF4();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v10 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

uint64_t sub_23A16B4FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  v2 = sub_23A19B35C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = *(void **)(result + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
    *v5 = v8;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
    v9 = v8;
    LOBYTE(v8) = sub_23A19B374();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v8 & 1) != 0)
    {
      v10 = (unint64_t *)(v7 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
      swift_beginAccess();
      v11 = *v10;
      swift_bridgeObjectRetain();
      v12 = sub_23A1920E8(a1, v11);
      v14 = v13;
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        swift_beginAccess();
        sub_23A192294(v12);
        swift_endAccess();
        swift_release();
      }
      sub_23A16B980();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23A16B678(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  v5 = sub_23A19B35C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((a2 & 1) == 0)
  {
LABEL_16:
    v18 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue);
    swift_beginAccess();
    v19 = swift_retain();
    MEMORY[0x23B842518](v19);
    if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_17:
      sub_23A19B668();
      sub_23A19B644();
      return swift_endAccess();
    }
LABEL_22:
    sub_23A19B650();
    goto LABEL_17;
  }
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue);
  swift_beginAccess();
  v12 = *v11;
  if (!((unint64_t)*v11 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v13 = sub_23A19B800();
  if (!v13)
    goto LABEL_15;
LABEL_5:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v21 = *(_BYTE *)(MEMORY[0x23B842698](0, v12)
                   + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
    swift_unknownObjectRelease();
    if ((v21 & 1) != 0)
    {
LABEL_7:
      if (v13 != 1)
      {
        v14 = 5;
        while (1)
        {
          v15 = v14 - 4;
          if ((v12 & 0xC000000000000001) != 0)
          {
            v16 = *(_BYTE *)(MEMORY[0x23B842698](v14 - 4, v12)
                           + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
            swift_unknownObjectRelease();
            if ((v16 & 1) == 0)
              goto LABEL_19;
          }
          else if ((*(_BYTE *)(*(_QWORD *)(v12 + 8 * v14)
                              + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) & 1) == 0)
          {
LABEL_19:
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
          v17 = v14 - 3;
          if (__OFADD__(v15, 1))
            break;
          ++v14;
          if (v17 == v13)
            goto LABEL_15;
        }
        __break(1u);
        goto LABEL_21;
      }
      goto LABEL_15;
    }
  }
  else if ((*(_BYTE *)(*(_QWORD *)(v12 + 32)
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) & 1) != 0)
  {
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  v15 = 0;
LABEL_27:
  swift_beginAccess();
  if (!((unint64_t)*v11 >> 62))
  {
    v22 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_retain();
    if (v22 >= v15)
      goto LABEL_29;
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  v23 = sub_23A19B800();
  result = swift_bridgeObjectRelease();
  if (v23 < v15)
    goto LABEL_32;
LABEL_29:
  if ((v15 & 0x8000000000000000) == 0)
  {
    sub_23A17006C(v15, v15, a1, (void (*)(_QWORD))type metadata accessor for PendingRequest);
    return swift_endAccess();
  }
LABEL_33:
  __break(1u);
  return result;
}

void sub_23A16B980()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t i;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  unint64_t v51;

  v2 = v0;
  v3 = sub_23A19B35C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  *v6 = (uint64_t)v7;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v8 = v7;
  LOBYTE(v7) = sub_23A19B374();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v16 = sub_23A19B800();
    swift_bridgeObjectRelease();
    if (!v16)
      return;
    goto LABEL_5;
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) != 1)
    return;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue);
  swift_beginAccess();
  if ((unint64_t)*v6 >> 62)
    goto LABEL_18;
  if (!*(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    return;
LABEL_5:
  v9 = *v6;
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v10 = sub_23A19B800();
    if (v10)
    {
LABEL_7:
      if (v10 >= 1)
      {
        v11 = 0;
        v12 = 0;
        v1 = v9 & 0xC000000000000001;
        while (1)
        {
          if (v1)
          {
            v13 = *(unsigned __int8 *)(MEMORY[0x23B842698](v11, v9)
                                     + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
            swift_unknownObjectRelease();
            v14 = __OFADD__(v12, v13);
            v12 += v13;
            if (v14)
              goto LABEL_16;
          }
          else
          {
            v15 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 8 * v11 + 32)
                                     + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
            v14 = __OFADD__(v12, v15);
            v12 += v15;
            if (v14)
            {
LABEL_16:
              __break(1u);
              goto LABEL_17;
            }
          }
          if (v10 == ++v11)
            goto LABEL_22;
        }
      }
      goto LABEL_81;
    }
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v10)
      goto LABEL_7;
  }
  v12 = 0;
LABEL_22:
  swift_bridgeObjectRelease_n();
  if ((unint64_t)*v6 >> 62)
  {
LABEL_77:
    swift_bridgeObjectRetain();
    v17 = sub_23A19B800();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v1 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config);
  v18 = (unint64_t *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  v19 = *v18;
  if (!(v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    v21 = v1 - v20;
    if (!__OFSUB__(v1, v20))
      goto LABEL_26;
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  swift_bridgeObjectRetain();
  v47 = sub_23A19B800();
  swift_bridgeObjectRelease();
  v21 = v1 - v47;
  if (__OFSUB__(v1, v47))
    goto LABEL_80;
LABEL_26:
  if (v21 >= v17)
    v21 = v17;
  if (v21 <= v12)
    v1 = v12;
  else
    v1 = v21;
  if (v1 > 0)
  {
    if (qword_2569443D0 == -1)
    {
LABEL_33:
      v22 = sub_23A19AE28();
      __swift_project_value_buffer(v22, (uint64_t)qword_256945C28);
      swift_retain_n();
      v23 = sub_23A19AE10();
      v24 = sub_23A19B6BC();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc();
        v49 = swift_slowAlloc();
        v50[0] = v49;
        *(_DWORD *)v25 = 134218242;
        v51 = v1;
        sub_23A19B728();
        *(_WORD *)(v25 + 12) = 2080;
        swift_retain();
        v26 = CosmoMultiplexChannelClient.description.getter();
        v28 = v27;
        swift_release();
        v51 = sub_23A14071C(v26, v28, v50);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v23, v24, "[Flush] Flushing count=%ld requests, %s", (uint8_t *)v25, 0x16u);
        v29 = v49;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v29, -1, -1);
        MEMORY[0x23B842FA4](v25, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v51 = MEMORY[0x24BEE4AF8];
      v12 = 1;
      while (1)
      {
        swift_beginAccess();
        if ((unint64_t)*v6 >> 62)
        {
          swift_bridgeObjectRetain();
          v40 = sub_23A19B800();
          swift_bridgeObjectRelease();
          if (!v40)
          {
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
            goto LABEL_77;
          }
        }
        else if (!*(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_72;
        }
        v38 = *v6;
        if ((unint64_t)*v6 >> 62)
        {
          swift_bridgeObjectRetain();
          v41 = sub_23A19B800();
          swift_bridgeObjectRelease();
          if (!v41)
            goto LABEL_73;
        }
        else if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_73;
        }
        if ((v38 & 0xC000000000000001) != 0)
        {
          MEMORY[0x23B842698](0, v38);
        }
        else
        {
          if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_74;
          swift_retain();
        }
        if ((unint64_t)*v6 >> 62)
        {
          swift_bridgeObjectRetain();
          v42 = sub_23A19B800();
          swift_bridgeObjectRelease();
          if (!v42)
            goto LABEL_76;
        }
        else if (!*(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_76;
        }
        sub_23A1706F8(0, 1);
        v39 = swift_endAccess();
        MEMORY[0x23B842518](v39);
        if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23A19B650();
        sub_23A19B668();
        sub_23A19B644();
        if (v1 == v12)
          break;
        v14 = __OFADD__(v12++, 1);
        if (v14)
          goto LABEL_75;
      }
      v43 = v51;
      if (v51 >> 62)
      {
        swift_bridgeObjectRetain();
        v44 = sub_23A19B800();
        swift_bridgeObjectRelease();
        if (v44)
          goto LABEL_65;
      }
      else
      {
        v44 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v44)
        {
LABEL_65:
          if (v44 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v44; ++i)
          {
            if ((v43 & 0xC000000000000001) != 0)
            {
              v46 = MEMORY[0x23B842698](i, v43);
            }
            else
            {
              v46 = *(_QWORD *)(v43 + 8 * i + 32);
              swift_retain();
            }
            sub_23A16C1E0(v46);
            swift_release();
          }
        }
      }
      swift_bridgeObjectRelease();
      return;
    }
LABEL_82:
    swift_once();
    goto LABEL_33;
  }
  if (qword_2569443D0 != -1)
    swift_once();
  v30 = sub_23A19AE28();
  __swift_project_value_buffer(v30, (uint64_t)qword_256945C28);
  swift_retain_n();
  v31 = sub_23A19AE10();
  v32 = sub_23A19B6BC();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v50[0] = v34;
    *(_DWORD *)v33 = 136315138;
    swift_retain();
    v35 = CosmoMultiplexChannelClient.description.getter();
    v37 = v36;
    swift_release();
    v51 = sub_23A14071C(v35, v37, v50);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v31, v32, "[Flush] Skipping, %s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v34, -1, -1);
    MEMORY[0x23B842FA4](v33, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23A16C1E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35[2];
  char v36;
  uint64_t v37;

  v2 = v1;
  v34[1] = a1;
  v3 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CosmoMultiplexChannelClient.Configuration(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A19B35C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (_QWORD *)((char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v17 = v16;
  v18 = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_23A13ABDC(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config, (uint64_t)v11, type metadata accessor for CosmoMultiplexChannelClient.Configuration);
  sub_23A13AB54((uint64_t)&v11[*(int *)(v9 + 20)], (uint64_t)v8, type metadata accessor for CosmoHttpConnection.Configuration);
  sub_23A13ABDC(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_descriptor, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_parentConnection);
  v20 = v17;
  swift_retain();
  v21 = sub_23A14F93C((uint64_t)v8, (uint64_t)v5, v19, v17);
  if (v21)
  {
    v8 = (char *)v21;
    v22 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
    swift_beginAccess();
    v23 = swift_retain();
    MEMORY[0x23B842518](v23);
    if (*(_QWORD *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_4:
      sub_23A19B668();
      sub_23A19B644();
      swift_endAccess();
      sub_23A16D664((uint64_t)v8);
      return swift_release();
    }
LABEL_12:
    sub_23A19B650();
    goto LABEL_4;
  }
  if (qword_2569443D0 != -1)
    swift_once();
  v25 = sub_23A19AE28();
  __swift_project_value_buffer(v25, (uint64_t)qword_256945C28);
  swift_retain_n();
  v26 = sub_23A19AE10();
  v27 = sub_23A19B6BC();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v35[0] = v29;
    *(_DWORD *)v28 = 136315138;
    swift_retain();
    v30 = CosmoMultiplexChannelClient.description.getter();
    v32 = v31;
    swift_release();
    v37 = sub_23A14071C(v30, v32, v35);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v26, v27, "[Request] Could not create outbound request stream, %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v29, -1, -1);
    MEMORY[0x23B842FA4](v28, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v35[0] = 0xD000000000000021;
  v35[1] = 0x800000023A1A1760;
  v36 = 0;
  v33 = sub_23A16DA34(0xD000000000000021, 0x800000023A1A1760, (uint64_t)v35);
  return sub_23A16B980(v33);
}

uint64_t CosmoMultiplexChannelClient.deinit()
{
  uint64_t v0;

  sub_23A13A1E4(*(_QWORD *)(v0 + 16));
  sub_23A13AC20(v0 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config, type metadata accessor for CosmoMultiplexChannelClient.Configuration);
  swift_bridgeObjectRelease();

  sub_23A13AC20(v0 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_descriptor, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CosmoMultiplexChannelClient.__deallocating_deinit()
{
  CosmoMultiplexChannelClient.deinit();
  return swift_deallocClassInstance();
}

uint64_t CosmoMultiplexChannelClient.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  _WORD v30[8];

  v1 = v0;
  swift_bridgeObjectRetain();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  strcpy((char *)v30, "endpoint=");
  NetworkDescriptor.description.getter();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  strcpy((char *)v30, "isReady=");
  sub_23A19B590();
  swift_bridgeObjectRelease();
  strcpy((char *)v30, "isTerminated=");
  v30[7] = -4864;
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue);
  swift_beginAccess();
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain_n();
    v4 = sub_23A19B800();
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  if (!v4)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_32;
  }
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    v5 = 0;
    v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = *(unsigned __int8 *)(MEMORY[0x23B842698](v5, v3)
                                + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        swift_unknownObjectRelease();
        v8 = __OFADD__(v6, v7);
        v6 += v7;
        if (v8)
          goto LABEL_26;
      }
      else
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 8 * v5 + 32)
                                + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        v8 = __OFADD__(v6, v9);
        v6 += v9;
        if (v8)
        {
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
      }
      ++v5;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease_n();
    if (!v6)
      goto LABEL_32;
    sub_23A19B794();
    swift_bridgeObjectRelease();
    v3 = *v2;
    if (!((unint64_t)*v2 >> 62))
    {
      v10 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (!v10)
        goto LABEL_31;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRetain_n();
  result = sub_23A19B800();
  v10 = result;
  if (result)
  {
LABEL_15:
    if (v10 < 1)
    {
      __break(1u);
      goto LABEL_76;
    }
    v12 = 0;
    v13 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v14 = *(unsigned __int8 *)(MEMORY[0x23B842698](v12, v3)
                                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        swift_unknownObjectRelease();
        v8 = __OFADD__(v13, v14);
        v13 += v14;
        if (v8)
          goto LABEL_27;
      }
      else
      {
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 8 * v12 + 32)
                                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        v8 = __OFADD__(v13, v15);
        v13 += v15;
        if (v8)
          goto LABEL_27;
      }
      ++v12;
    }
    while (v10 != v12);
  }
LABEL_31:
  swift_bridgeObjectRelease_n();
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
LABEL_32:
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_23A19B800();
    swift_bridgeObjectRelease();
    if (!v16)
      goto LABEL_38;
  }
  else if (!*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_38;
  }
  sub_23A19B794();
  swift_bridgeObjectRelease();
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23A19B800();
    swift_bridgeObjectRelease();
  }
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
LABEL_38:
  v17 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  v18 = *v17;
  if (!((unint64_t)*v17 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v19)
      goto LABEL_40;
LABEL_64:
    swift_bridgeObjectRelease_n();
    goto LABEL_68;
  }
LABEL_63:
  swift_bridgeObjectRetain_n();
  v19 = sub_23A19B800();
  if (!v19)
    goto LABEL_64;
LABEL_40:
  if (v19 < 1)
  {
    __break(1u);
    goto LABEL_66;
  }
  v20 = 0;
  v21 = 0;
  do
  {
    if ((v18 & 0xC000000000000001) != 0)
    {
      v22 = *(unsigned __int8 *)(MEMORY[0x23B842698](v20, v18)
                               + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
      swift_unknownObjectRelease();
      v8 = __OFADD__(v21, v22);
      v21 += v22;
      if (v8)
        goto LABEL_61;
    }
    else
    {
      v23 = *(unsigned __int8 *)(*(_QWORD *)(v18 + 8 * v20 + 32)
                               + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
      v8 = __OFADD__(v21, v23);
      v21 += v23;
      if (v8)
      {
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
    }
    ++v20;
  }
  while (v19 != v20);
  swift_bridgeObjectRelease_n();
  if (!v21)
    goto LABEL_68;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  v18 = *v17;
  if ((unint64_t)*v17 >> 62)
  {
LABEL_66:
    swift_bridgeObjectRetain_n();
    result = sub_23A19B800();
    v24 = result;
    if (!result)
    {
LABEL_67:
      swift_bridgeObjectRelease_n();
      sub_23A19B8FC();
      sub_23A19B590();
      swift_bridgeObjectRelease();
LABEL_68:
      if ((unint64_t)*v17 >> 62)
      {
        swift_bridgeObjectRetain();
        v29 = sub_23A19B800();
        swift_bridgeObjectRelease();
        if (v29)
          goto LABEL_70;
      }
      else if (*(_QWORD *)((*v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_70:
        sub_23A19B794();
        swift_bridgeObjectRelease();
        if ((unint64_t)*v17 >> 62)
        {
          swift_bridgeObjectRetain();
          sub_23A19B800();
          swift_bridgeObjectRelease();
        }
        sub_23A19B8FC();
        sub_23A19B590();
        swift_bridgeObjectRelease();
      }
      sub_23A19B794();
      swift_bridgeObjectRelease();
      sub_23A19B590();
      sub_23A19B590();
      swift_bridgeObjectRelease();
      sub_23A19B590();
      swift_bridgeObjectRelease();
      sub_23A19B590();
      swift_bridgeObjectRelease();
      sub_23A19B590();
      swift_bridgeObjectRelease();
      sub_23A19B590();
      swift_bridgeObjectRelease();
      sub_23A19B590();
      sub_23A19B590();
      swift_bridgeObjectRelease();
      sub_23A19B590();
      sub_23A19B590();
      swift_bridgeObjectRelease();
      return 0x3D656D616ELL;
    }
    goto LABEL_51;
  }
  v24 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n();
  if (!v24)
    goto LABEL_67;
LABEL_51:
  if (v24 >= 1)
  {
    v25 = 0;
    v26 = 0;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
      {
        v27 = *(unsigned __int8 *)(MEMORY[0x23B842698](v25, v18)
                                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        swift_unknownObjectRelease();
        v8 = __OFADD__(v26, v27);
        v26 += v27;
        if (v8)
          goto LABEL_62;
      }
      else
      {
        v28 = *(unsigned __int8 *)(*(_QWORD *)(v18 + 8 * v25 + 32)
                                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        v8 = __OFADD__(v26, v28);
        v26 += v28;
        if (v8)
          goto LABEL_62;
      }
      ++v25;
    }
    while (v24 != v25);
    goto LABEL_67;
  }
LABEL_76:
  __break(1u);
  return result;
}

unint64_t sub_23A16D004()
{
  unint64_t result;

  result = qword_256945C70;
  if (!qword_256945C70)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CosmoMultiplexChannelClient.State, &type metadata for CosmoMultiplexChannelClient.State);
    atomic_store(result, (unint64_t *)&qword_256945C70);
  }
  return result;
}

uint64_t sub_23A16D048()
{
  return CosmoMultiplexChannelClient.description.getter();
}

uint64_t storeEnumTagSinglePayload for CosmoMultiplexChannelClient.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A16D0BC + 4 * byte_23A19DE05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A16D0F0 + 4 * byte_23A19DE00[v4]))();
}

uint64_t sub_23A16D0F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A16D0F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A16D100);
  return result;
}

uint64_t sub_23A16D10C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A16D114);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A16D118(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A16D120(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CosmoMultiplexChannelClient.State()
{
  return &type metadata for CosmoMultiplexChannelClient.State;
}

uint64_t sub_23A16D13C()
{
  return type metadata accessor for CosmoMultiplexChannelClient(0);
}

uint64_t type metadata accessor for CosmoMultiplexChannelClient(uint64_t a1)
{
  return sub_23A141024(a1, qword_256945CA0);
}

uint64_t sub_23A16D158()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for CosmoMultiplexChannelClient.Configuration(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for NetworkDescriptor();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for CosmoMultiplexChannelClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.stateChangedCallback.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.stateChangedCallback.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.stateChangedCallback.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.__allocating_init(config:name:descriptor:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.request<A>(request:forceFlush:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CosmoMultiplexChannelClient.Configuration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    *(uint64_t *)((char *)a1 + v5) = *(uint64_t *)((char *)a2 + v5);
    v8 = *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
    v9 = &v6[v8];
    v10 = &v7[v8];
    v11 = sub_23A19AC0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for CosmoMultiplexChannelClient.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = v2 + *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  v4 = sub_23A19AC0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

_QWORD *initializeWithCopy for CosmoMultiplexChannelClient.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v7 = *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = sub_23A19AC0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_QWORD *assignWithCopy for CosmoMultiplexChannelClient.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v7 = *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = sub_23A19AC0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_QWORD *initializeWithTake for CosmoMultiplexChannelClient.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v7 = *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = sub_23A19AC0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

_QWORD *assignWithTake for CosmoMultiplexChannelClient.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v7 = *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = sub_23A19AC0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoMultiplexChannelClient.Configuration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A16D55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for CosmoMultiplexChannelClient.Configuration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A16D5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23A16D5EC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CosmoHttpConnection.Configuration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23A16D664(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_23A19B2D8();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A19B2F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(_QWORD *)(v2 + 32);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_23A17054C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_21;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23A19B2E4();
  v16[1] = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, v5, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_23A16D854(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = a2;
  swift_retain();
  swift_release();
  v3 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v4 = a2[2];
  a2[2] = sub_23A170554;
  a2[3] = v3;
  sub_23A13A1E4(v4);
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = a2[8];
  a2[8] = sub_23A170574;
  a2[9] = v5;
  sub_23A13A1E4(v6);
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = a2[10];
  a2[10] = sub_23A17057C;
  a2[11] = v7;
  sub_23A13A1E4(v8);
  return sub_23A143E40();
}

uint64_t sub_23A16D960(unsigned __int16 *a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A16EC38(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A16D9BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  _QWORD v5[2];
  char v6;

  v1 = *a1;
  v2 = a1[1];
  v3 = *((_BYTE *)a1 + 16);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5[0] = v1;
    v5[1] = v2;
    v6 = v3;
    sub_23A16F304((uint64_t)v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A16DA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_23A19B2D8();
  v23 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19B2F0();
  v21 = *(_QWORD *)(v11 - 8);
  v22 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)a3;
  v15 = *(_QWORD *)(a3 + 8);
  v20[1] = *(_QWORD *)(v4 + 32);
  v16 = *(_BYTE *)(a3 + 16);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v4;
  *(_QWORD *)(v17 + 24) = a1;
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = v14;
  *(_QWORD *)(v17 + 48) = v15;
  *(_BYTE *)(v17 + 56) = v16;
  aBlock[4] = sub_23A1704D4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_15;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23A13A924(v14, v15, v16);
  sub_23A19B2E4();
  v24 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v13, v10, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v22);
  return swift_release();
}

uint64_t sub_23A16DC54(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unsigned __int8 v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void (*v38)(_QWORD);
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  os_log_t v51;
  os_log_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t *v59;
  uint64_t v60;
  void (*v61)(uint64_t *);
  uint64_t v62;
  uint64_t v63;
  os_log_t v64;
  uint64_t *v65;
  os_log_t v66;
  void (*v67)(_QWORD);
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  os_log_t v74;

  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946550);
  result = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)((char *)a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection))
  {
    v16 = qword_2569443D0;
    swift_retain();
    if (v16 != -1)
      swift_once();
    v70 = a2;
    v17 = sub_23A19AE28();
    __swift_project_value_buffer(v17, (uint64_t)qword_256945C28);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23A13A924(a4, a5, a6);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23A13A924(a4, a5, a6);
    swift_retain();
    v18 = sub_23A19AE10();
    v19 = sub_23A19B6BC();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      v74 = (os_log_t)v68;
      *(_DWORD *)v21 = 136315906;
      LODWORD(v67) = v20;
      v22 = swift_retain();
      v66 = v18;
      v23 = sub_23A1440B4(v22);
      v69 = a1;
      v24 = (uint64_t *)a3;
      v25 = a6;
      v27 = v26;
      swift_release();
      v71 = sub_23A14071C(v23, v27, (uint64_t *)&v74);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      v28 = (unint64_t)v24;
      v65 = v24;
      a1 = v69;
      v71 = sub_23A14071C(v70, v28, (uint64_t *)&v74);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 22) = 2080;
      v71 = a4;
      v72 = a5;
      v73 = v25;
      sub_23A13A924(a4, a5, v25);
      v29 = sub_23A19B518();
      v71 = sub_23A14071C(v29, v30, (uint64_t *)&v74);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A13A824(a4, a5, v25);
      sub_23A13A824(a4, a5, v25);
      *(_WORD *)(v21 + 32) = 2080;
      swift_retain();
      v31 = sub_23A16F984();
      v33 = v32;
      swift_release();
      v71 = sub_23A14071C(v31, v33, (uint64_t *)&v74);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      v34 = v66;
      _os_log_impl(&dword_23A123000, v66, (os_log_type_t)v67, "[Stop] Stopping channel %s, reason='%s' error=%s, %s", (uint8_t *)v21, 0x2Au);
      v35 = v68;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v35, -1, -1);
      MEMORY[0x23B842FA4](v21, -1, -1);

      v36 = v70;
      v37 = v65;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();
      sub_23A13A824(a4, a5, a6);
      sub_23A13A824(a4, a5, a6);

      swift_release_n();
      v37 = (_QWORD *)a3;
      v25 = a6;
      v36 = v70;
    }
    v53 = (char *)a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
    v54 = *(uint64_t *)((char *)a1
                     + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith);
    v55 = *((_QWORD *)v53 + 1);
    v56 = *((_QWORD *)v53 + 2);
    v57 = *((_QWORD *)v53 + 3);
    *(_QWORD *)v53 = v36;
    *((_QWORD *)v53 + 1) = v37;
    *((_QWORD *)v53 + 2) = a4;
    *((_QWORD *)v53 + 3) = a5;
    v58 = v53[32];
    v53[32] = v25;
    swift_bridgeObjectRetain();
    sub_23A13A924(a4, a5, v25);
    sub_23A1704D8(v54, v55, v56, v57, v58);
    sub_23A145B9C();
    return swift_release();
  }
  else
  {
    v38 = *(void (**)(_QWORD))((char *)a1
                                        + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
    if (v38)
    {
      v69 = (uint64_t *)((char *)a1
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
      v39 = qword_2569443D0;
      v70 = *(uint64_t *)((char *)a1
                       + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion
                       + 8);
      swift_retain();
      if (v39 != -1)
        swift_once();
      v40 = sub_23A19AE28();
      __swift_project_value_buffer(v40, (uint64_t)qword_256945C28);
      swift_bridgeObjectRetain();
      sub_23A13A924(a4, a5, a6);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_23A13A924(a4, a5, a6);
      swift_retain();
      v41 = sub_23A19AE10();
      v42 = sub_23A19B6BC();
      LODWORD(v68) = v42;
      if (os_log_type_enabled(v41, v42))
      {
        v43 = swift_slowAlloc();
        v67 = v38;
        v44 = a2;
        v45 = v43;
        v66 = (os_log_t)swift_slowAlloc();
        v74 = v66;
        *(_DWORD *)v45 = 136315650;
        v64 = v41;
        swift_bridgeObjectRetain();
        v71 = sub_23A14071C(v44, a3, (uint64_t *)&v74);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2080;
        v71 = a4;
        v72 = a5;
        v73 = a6;
        sub_23A13A924(a4, a5, a6);
        v46 = sub_23A19B518();
        v71 = sub_23A14071C(v46, v47, (uint64_t *)&v74);
        v65 = &v72;
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A13A824(a4, a5, a6);
        sub_23A13A824(a4, a5, a6);
        *(_WORD *)(v45 + 22) = 2080;
        swift_retain();
        v48 = sub_23A16F984();
        v50 = v49;
        swift_release();
        v71 = sub_23A14071C(v48, v50, (uint64_t *)&v74);
        sub_23A19B728();
        swift_release_n();
        v38 = v67;
        swift_bridgeObjectRelease();
        v51 = v64;
        _os_log_impl(&dword_23A123000, v64, (os_log_type_t)v68, "[Stop] Failing, no channel stream found, reason='%s' error=%s %s", (uint8_t *)v45, 0x20u);
        v52 = v66;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v52, -1, -1);
        MEMORY[0x23B842FA4](v45, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_23A13A824(a4, a5, a6);
        sub_23A13A824(a4, a5, a6);

        swift_release_n();
      }
      *(_QWORD *)v15 = a4;
      *((_QWORD *)v15 + 1) = a5;
      v15[16] = a6;
      swift_storeEnumTagMultiPayload();
      sub_23A13A924(a4, a5, a6);
      v38(v15);
      sub_23A13ACB8((uint64_t)v15, (uint64_t *)&unk_256946550);
      v59 = v69;
      v60 = *v69;
      *v69 = 0;
      v59[1] = 0;
      sub_23A13A1E4(v60);
      v61 = (void (*)(uint64_t *))a1[2];
      if (v61)
      {
        swift_retain();
        v61(a1);
        sub_23A13A1E4((uint64_t)v38);
        v62 = (uint64_t)v61;
      }
      else
      {
        v62 = (uint64_t)v38;
      }
      return sub_23A13A1E4(v62);
    }
  }
  return result;
}

uint64_t sub_23A16E460(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(uint64_t);
  uint64_t *v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v65;
  os_log_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t);
  uint64_t *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77[2];
  unsigned __int8 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946550);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_23A19B35C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *a1;
  v13 = *(void **)(v3 + 32);
  *v11 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v14 = v13;
  LOBYTE(v13) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection);
  if (v16)
  {
    if (v12)
    {
      v17 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
      if (!v17)
      {
        swift_retain();
        v54 = *(void (**)(uint64_t))(v3 + 16);
        if (!v54)
          return swift_release();
        goto LABEL_26;
      }
      v69 = v12;
      v70 = v7;
      v72 = v5;
      v74 = (uint64_t *)(v3
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
      v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith);
      v19 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                      + 8);
      v21 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                      + 16);
      v20 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                      + 24);
      v22 = 3;
      if (v19)
      {
        v22 = *(_QWORD *)(v3
                        + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                        + 16);
        v2 = *(_QWORD *)(v3
                       + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                       + 24);
      }
      else
      {
        v2 = 0;
      }
      v23 = *(_BYTE *)(v3
                     + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                     + 32);
      if (v19)
        LOBYTE(v7) = *(_BYTE *)(v3
                              + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                              + 32);
      else
        LOBYTE(v7) = 2;
      v24 = 0xD00000000000002ELL;
      if (v19)
        v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith);
      v68 = v24;
      v25 = 0x800000023A1A1710;
      if (v19)
        v25 = v19;
      v75 = v25;
      v76 = v22;
      v71 = v16;
      swift_retain();
      v73 = (void (*)(uint64_t))v17;
      sub_23A13A0F8(v17);
      sub_23A170488(v18, v19, v21, v20, v23);
      if (qword_2569443D0 == -1)
      {
LABEL_16:
        v26 = sub_23A19AE28();
        __swift_project_value_buffer(v26, (uint64_t)qword_256945C28);
        swift_retain();
        v27 = v76;
        sub_23A13A924(v76, v2, v7);
        swift_retain();
        sub_23A13A924(v27, v2, v7);
        v28 = v75;
        swift_bridgeObjectRetain();
        v29 = sub_23A19AE10();
        v30 = sub_23A19B6BC();
        v31 = v30;
        v32 = v2;
        v33 = v7;
        if (os_log_type_enabled(v29, v30))
        {
          v34 = swift_slowAlloc();
          v67 = swift_slowAlloc();
          v81 = v67;
          *(_DWORD *)v34 = 136316162;
          v66 = v29;
          v77[0] = sub_23A14071C(0xD00000000000001FLL, 0x800000023A1A1740, &v81);
          sub_23A19B728();
          v35 = v32;
          *(_WORD *)(v34 + 12) = 2080;
          LOBYTE(v77[0]) = v69;
          v69 = v31;
          v36 = sub_23A19B518();
          v77[0] = sub_23A14071C(v36, v37, &v81);
          sub_23A19B728();
          swift_bridgeObjectRelease();
          *(_WORD *)(v34 + 22) = 2080;
          swift_bridgeObjectRetain();
          v77[0] = sub_23A14071C(v68, v28, &v81);
          sub_23A19B728();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v34 + 32) = 2080;
          v77[0] = v27;
          v77[1] = v32;
          v78 = v33;
          sub_23A13A924(v27, v32, v33);
          v38 = sub_23A19B518();
          v77[0] = sub_23A14071C(v38, v39, &v81);
          sub_23A19B728();
          swift_bridgeObjectRelease();
          sub_23A13A824(v27, v32, v33);
          sub_23A13A824(v27, v32, v33);
          *(_WORD *)(v34 + 42) = 2080;
          swift_retain();
          v40 = sub_23A16F984();
          v42 = v41;
          swift_release();
          v77[0] = sub_23A14071C(v40, v42, &v81);
          sub_23A19B728();
          swift_release_n();
          v32 = v35;
          swift_bridgeObjectRelease();
          v43 = v66;
          _os_log_impl(&dword_23A123000, v66, (os_log_type_t)v69, "%s channel stream ended, state=%s reason='%s' error=%s %s", (uint8_t *)v34, 0x34u);
          v44 = v67;
          swift_arrayDestroy();
          MEMORY[0x23B842FA4](v44, -1, -1);
          MEMORY[0x23B842FA4](v34, -1, -1);

        }
        else
        {
          swift_bridgeObjectRelease_n();
          sub_23A13A824(v27, v32, v7);
          sub_23A13A824(v27, v32, v7);

          swift_release_n();
        }
        v56 = v73;
        v55 = v74;
        v57 = (uint64_t)v70;
        *v70 = v27;
        *(_QWORD *)(v57 + 8) = v32;
        *(_BYTE *)(v57 + 16) = v33;
        swift_storeEnumTagMultiPayload();
        v56(v57);
        sub_23A13A1E4((uint64_t)v56);
        sub_23A13ACB8(v57, (uint64_t *)&unk_256946550);
        v58 = *v55;
        *v55 = 0;
        v55[1] = 0;
        sub_23A13A1E4(v58);
        v54 = *(void (**)(uint64_t))(v3 + 16);
        if (!v54)
          return swift_release();
LABEL_26:
        swift_retain();
        v54(v3);
        sub_23A13A1E4((uint64_t)v54);
        return swift_release();
      }
LABEL_32:
      swift_once();
      goto LABEL_16;
    }
    v45 = qword_2569443D0;
    swift_retain();
    if (v45 != -1)
      swift_once();
    v46 = sub_23A19AE28();
    __swift_project_value_buffer(v46, (uint64_t)qword_256945C28);
    swift_retain_n();
    v47 = sub_23A19AE10();
    v48 = sub_23A19B6BC();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v77[0] = v50;
      *(_DWORD *)v49 = 136315138;
      swift_retain();
      v51 = sub_23A16F984();
      v53 = v52;
      swift_release();
      v81 = sub_23A14071C(v51, v53, v77);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v47, v48, "Channel stream ready, sending request, %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v50, -1, -1);
      MEMORY[0x23B842FA4](v49, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v59 = (_QWORD *)(v3 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
    v60 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage + 24);
    v61 = v59[4];
    v62 = __swift_project_boxed_opaque_existential_1(v59, v60);
    v79 = v60;
    v63 = *(_QWORD *)(v61 + 8);
    v80 = v63;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v77);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(boxed_opaque_existential_1, v62, v60);
    sub_23A14F44C((uint64_t)boxed_opaque_existential_1, 0, 0, v16, v60, v63);
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  }
  return result;
}

void sub_23A16EC38(unsigned __int16 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t *v20;
  void (*v21)(char *);
  unsigned int v22;
  __int128 v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v2 = v1;
  v4 = type metadata accessor for RawHTTPResponse(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A19AC0C();
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v43 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946550);
  MEMORY[0x24BDAC7A8](v46);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23A19B35C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(v2 + 32);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  v19 = v18;
  LOBYTE(v18) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_8;
  }
  v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  v21 = *(void (**)(char *))(v2
                                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  if (v21)
  {
    v22 = *a1;
    if (v22 > 0x193)
    {
      if (v22 == 404)
      {
        v23 = xmmword_23A19C720;
        goto LABEL_18;
      }
      if (v22 == 500)
      {
        v23 = xmmword_23A19DDF0;
        goto LABEL_18;
      }
    }
    else
    {
      if (v22 == 200)
      {
        v34 = *((_QWORD *)a1 + 2);
        if (v34 >> 60 != 15)
        {
          v40 = *((_QWORD *)a1 + 1);
          *(_QWORD *)v13 = v40;
          *((_QWORD *)v13 + 1) = v34;
          type metadata accessor for CosmoHttpResponseContent(0);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_23A13A53C(v40, v34);
          sub_23A13A53C(v40, v34);
          sub_23A13A0F8((uint64_t)v21);
          v21(v13);
          sub_23A13A1E4((uint64_t)v21);
          sub_23A125F1C(v40, v34);
          goto LABEL_22;
        }
        sub_23A13AC74((uint64_t)a1 + *(int *)(v4 + 24), (uint64_t)v9, &qword_256945140);
        v36 = v44;
        v35 = v45;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v9, 1, v45) != 1)
        {
          v41 = v43;
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v43, v9, v35);
          (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v13, v41, v35);
          type metadata accessor for CosmoHttpResponseContent(0);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          swift_retain();
          v21(v13);
          sub_23A13A1E4((uint64_t)v21);
          sub_23A13ACB8((uint64_t)v13, (uint64_t *)&unk_256946550);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v41, v35);
          goto LABEL_23;
        }
        swift_retain();
        sub_23A13ACB8((uint64_t)v9, &qword_256945140);
        v37 = 0xD000000000000026;
        v38 = 0x800000023A1A16E0;
        goto LABEL_20;
      }
      if (v22 == 400)
      {
        v23 = xmmword_23A19C700;
LABEL_18:
        *(_OWORD *)v13 = v23;
        v13[16] = 2;
        swift_storeEnumTagMultiPayload();
        swift_retain();
LABEL_21:
        v21(v13);
        sub_23A13A1E4((uint64_t)v21);
LABEL_22:
        sub_23A13ACB8((uint64_t)v13, (uint64_t *)&unk_256946550);
LABEL_23:
        v39 = *v20;
        *v20 = 0;
        v20[1] = 0;
        sub_23A13A1E4(v39);
        return;
      }
    }
    v47 = 0;
    v48 = 0xE000000000000000;
    swift_retain();
    sub_23A19B794();
    swift_bridgeObjectRelease();
    v47 = 0xD000000000000012;
    v48 = 0x800000023A1A16C0;
    LOWORD(v49) = v22;
    sub_23A19B8FC();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v37 = v47;
    v38 = v48;
LABEL_20:
    *(_QWORD *)v13 = v37;
    *((_QWORD *)v13 + 1) = v38;
    v13[16] = 0;
    swift_storeEnumTagMultiPayload();
    goto LABEL_21;
  }
  if (qword_2569443D0 != -1)
    goto LABEL_27;
LABEL_8:
  v24 = sub_23A19AE28();
  __swift_project_value_buffer(v24, (uint64_t)qword_256945C28);
  sub_23A13ABDC((uint64_t)a1, (uint64_t)v6, type metadata accessor for RawHTTPResponse);
  swift_retain_n();
  v25 = sub_23A19AE10();
  v26 = sub_23A19B6A4();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v47 = v28;
    *(_DWORD *)v27 = 136315650;
    v49 = sub_23A14071C(0xD000000000000016, 0x800000023A1A16A0, (uint64_t *)&v47);
    sub_23A19B728();
    *(_WORD *)(v27 + 12) = 2080;
    v29 = sub_23A142D28();
    v49 = sub_23A14071C(v29, v30, (uint64_t *)&v47);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A13AC20((uint64_t)v6, type metadata accessor for RawHTTPResponse);
    *(_WORD *)(v27 + 22) = 2080;
    swift_retain();
    v31 = sub_23A16F984();
    v33 = v32;
    swift_release();
    v49 = sub_23A14071C(v31, v33, (uint64_t *)&v47);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v25, v26, "%s ignoring response, no completion handler, response=%s %s", (uint8_t *)v27, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v28, -1, -1);
    MEMORY[0x23B842FA4](v27, -1, -1);

  }
  else
  {
    sub_23A13AC20((uint64_t)v6, type metadata accessor for RawHTTPResponse);

    swift_release_n();
  }
}

void sub_23A16F304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD);
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  os_log_t v42;
  uint64_t v43;
  void (*v44)(_QWORD);
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char v50;
  uint64_t v51;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946550);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A19B35C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (void (*)(_QWORD))((char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)a1;
  v11 = *(void **)(a1 + 8);
  v13 = *(char *)(a1 + 16);
  v14 = *(void **)(v2 + 32);
  *(_QWORD *)v10 = v14;
  (*(void (**)(void (*)(_QWORD), _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5610], v7);
  v15 = v14;
  LOBYTE(v14) = sub_23A19B374();
  (*(void (**)(void (*)(_QWORD), uint64_t))(v8 + 8))(v10, v7);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  LOBYTE(v7) = v13;
  v8 = v2 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion;
  v10 = *(void (**)(_QWORD))(v2
                                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  if (v10)
  {
    v16 = qword_2569443D0;
    v47 = *(_QWORD *)(v8 + 8);
    swift_retain();
    if (v16 == -1)
    {
LABEL_4:
      v17 = sub_23A19AE28();
      __swift_project_value_buffer(v17, (uint64_t)qword_256945C28);
      sub_23A14D690(v12, v11, v7);
      swift_retain();
      sub_23A14D690(v12, v11, v7);
      swift_retain();
      v18 = sub_23A19AE10();
      v19 = sub_23A19B6A4();
      v46 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v44 = v10;
        v21 = v20;
        v43 = swift_slowAlloc();
        v51 = v43;
        *(_DWORD *)v21 = 136315394;
        v41[1] = v21 + 4;
        v48 = (uint64_t)v12;
        v49 = v11;
        v50 = v7;
        sub_23A14D690(v12, v11, v7);
        v45 = v13;
        v22 = sub_23A19B518();
        v42 = v18;
        v48 = sub_23A14071C(v22, v23, &v51);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A14D6C8(v12, v11, v7);
        sub_23A14D6C8(v12, v11, v7);
        *(_WORD *)(v21 + 12) = 2080;
        swift_retain();
        v24 = sub_23A16F984();
        v26 = v25;
        swift_release();
        v48 = sub_23A14071C(v24, v26, &v51);
        v13 = v45;
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        v27 = v42;
        _os_log_impl(&dword_23A123000, v42, (os_log_type_t)v46, "Encountered error while receiving HTTP response, error=%s %s", (uint8_t *)v21, 0x16u);
        v28 = v43;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v28, -1, -1);
        v29 = v21;
        v10 = v44;
        MEMORY[0x23B842FA4](v29, -1, -1);

      }
      else
      {
        sub_23A14D6C8(v12, v11, v7);
        sub_23A14D6C8(v12, v11, v7);

        swift_release_n();
      }
      *(_QWORD *)v6 = qword_23A19E050[v13];
      *((_QWORD *)v6 + 1) = 0;
      v6[16] = 2;
      swift_storeEnumTagMultiPayload();
      v10(v6);
      sub_23A13A1E4((uint64_t)v10);
      sub_23A13ACB8((uint64_t)v6, (uint64_t *)&unk_256946550);
      v40 = *(_QWORD *)v8;
      *(_QWORD *)v8 = 0;
      *(_QWORD *)(v8 + 8) = 0;
      sub_23A13A1E4(v40);
      return;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  if (qword_2569443D0 != -1)
    swift_once();
  v30 = sub_23A19AE28();
  __swift_project_value_buffer(v30, (uint64_t)qword_256945C28);
  sub_23A14D690(v12, v11, v13);
  swift_retain();
  sub_23A14D690(v12, v11, v13);
  swift_retain();
  v31 = sub_23A19AE10();
  v32 = sub_23A19B6A4();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v51 = v47;
    *(_DWORD *)v33 = 136315650;
    v48 = sub_23A14071C(0xD00000000000001DLL, 0x800000023A1A1680, &v51);
    sub_23A19B728();
    *(_WORD *)(v33 + 12) = 2080;
    v48 = (uint64_t)v12;
    v49 = v11;
    v50 = v13;
    sub_23A14D690(v12, v11, v13);
    v34 = sub_23A19B518();
    v48 = sub_23A14071C(v34, v35, &v51);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A14D6C8(v12, v11, v13);
    sub_23A14D6C8(v12, v11, v13);
    *(_WORD *)(v33 + 22) = 2080;
    swift_retain();
    v36 = sub_23A16F984();
    v38 = v37;
    swift_release();
    v48 = sub_23A14071C(v36, v38, &v51);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v31, v32, "%s ignoring error, no completion handler, error=%s %s", (uint8_t *)v33, 0x20u);
    v39 = v47;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v39, -1, -1);
    MEMORY[0x23B842FA4](v33, -1, -1);

  }
  else
  {
    sub_23A14D6C8(v12, v11, v13);
    sub_23A14D6C8(v12, v11, v13);

    swift_release_n();
  }
}

uint64_t sub_23A16F984()
{
  uint64_t v0;

  sub_23A16FB2C(v0);
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19AD2C();
  sub_23A131E34(&qword_256946070, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 4023401;
}

uint64_t sub_23A16FB2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256945140);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A19AC0C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  v24 = 0x3D6874617020;
  v25 = 0xE600000000000000;
  v9 = (_QWORD *)(a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage + 24);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage + 32);
  __swift_project_boxed_opaque_existential_1(v9, v10);
  _s5Cosmo0A11HttpRequestPAAE12instancePathSSvg_0(v10, v11);
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  v12 = v9[3];
  v13 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v12);
  _s5Cosmo0A11HttpRequestPAAE14instanceMethodSSvg_0(v12, v13);
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v15 = v9[3];
  v14 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v15);
  (*(void (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 16))(v15);
  if (v16 >> 60 != 15)
  {
    v19 = v16;
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_23A19B794();
    swift_bridgeObjectRelease();
    v22 = 0xD000000000000016;
    v23 = 0x800000023A1A1660;
    __asm { BR              X11 }
  }
  v18 = v9[3];
  v17 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v18);
  (*(void (**)(uint64_t))(*(_QWORD *)(v17 + 8) + 24))(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23A13ACB8((uint64_t)v4, &qword_256945140);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v22 = 0x3D656C696620;
    v23 = 0xE600000000000000;
    sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    sub_23A19B8FC();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v24;
}

uint64_t sub_23A16FEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23A13A1E4(*(_QWORD *)(v0 + 16));

  v1 = v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_id;
  v2 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  swift_release();
  sub_23A13A1E4(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion));
  sub_23A1704D8(*(_QWORD *)(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith), *(_QWORD *)(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith + 24), *(_BYTE *)(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_23A16FF5C()
{
  return type metadata accessor for PendingRequest(0);
}

uint64_t type metadata accessor for PendingRequest(uint64_t a1)
{
  return sub_23A141024(a1, qword_256945F18);
}

uint64_t sub_23A16FF78()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A19AD2C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23A170024()
{
  return sub_23A19ACFC();
}

uint64_t sub_23A170040()
{
  return sub_23A16F984();
}

uint64_t sub_23A170060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A17006C(a1, a2, a3, MEMORY[0x24BDE05A0]);
}

uint64_t sub_23A17006C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  unint64_t *v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a4;
    v9 = a3;
    v5 = a2;
    v7 = a1;
    v8 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v25 = sub_23A19B800();
  swift_bridgeObjectRelease();
  if (v25 < v5)
    goto LABEL_31;
LABEL_4:
  v11 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v10 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v12 = sub_23A19B800();
    swift_bridgeObjectRelease();
    v13 = v12 + v10;
    if (!__OFADD__(v12, v10))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v16 = sub_23A19B800();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v8 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v12 + v10;
  if (__OFADD__(v12, v10))
    goto LABEL_36;
LABEL_8:
  v8 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v8;
  v28 = v9;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    v15 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v12 = 1;
  }
  if (v8 >> 62)
    goto LABEL_37;
  v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v16 <= v13)
    v16 = v13;
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x23B8426A4](v12, v16, 1, v8);
  swift_bridgeObjectRelease();
  *v4 = v8;
  v15 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v17 = (_QWORD *)(v15 + 32 + 8 * v7);
  v6(0);
  swift_arrayDestroy();
  if (!v10)
  {
LABEL_28:
    *v17 = v28;
    return sub_23A19B644();
  }
  if (!(v8 >> 62))
  {
    v18 = *(_QWORD *)(v15 + 16);
    v19 = v18 - v5;
    if (!__OFSUB__(v18, v5))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v26 = sub_23A19B800();
  swift_bridgeObjectRelease();
  v19 = v26 - v5;
  if (__OFSUB__(v26, v5))
    goto LABEL_40;
LABEL_21:
  if ((v19 & 0x8000000000000000) == 0)
  {
    v20 = (char *)(v17 + 1);
    v21 = (char *)(v15 + 32 + 8 * v5);
    if (v17 + 1 != (_QWORD *)v21 || v20 >= &v21[8 * v19])
      memmove(v20, v21, 8 * v19);
    if (!(v8 >> 62))
    {
      v22 = *(_QWORD *)(v15 + 16);
      v23 = v22 + v10;
      if (!__OFADD__(v22, v10))
      {
LABEL_27:
        *(_QWORD *)(v15 + 16) = v23;
        goto LABEL_28;
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v27 = sub_23A19B800();
    swift_bridgeObjectRelease();
    v23 = v27 + v10;
    if (!__OFADD__(v27, v10))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_23A19B830();
  __break(1u);
  return result;
}

uint64_t sub_23A170350@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23A19B554();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *sub_23A170384(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a7;
  v23 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_1, a1, a7);
  type metadata accessor for PendingRequest(0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  sub_23A19AD20();
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = 0;
  v16 = (_QWORD *)((char *)v15
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  *v16 = 0;
  v16[1] = 0;
  v17 = (char *)v15 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
  v17[32] = 0;
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  sub_23A13A83C(&v21, (uint64_t)v15 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  *((_BYTE *)v15 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) = a2;
  v15[4] = a3;
  v18 = (_QWORD *)((char *)v15
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  v19 = *(_QWORD *)((char *)v15
                  + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  *v18 = a4;
  v18[1] = a5;
  sub_23A13A1E4(v19);
  return v15;
}

uint64_t sub_23A170488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return sub_23A13A924(a3, a4, a5);
  }
  return result;
}

uint64_t sub_23A1704D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_23A13A824(a3, a4, a5);
  }
  return result;
}

uint64_t sub_23A170520()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A17054C()
{
  uint64_t v0;

  return sub_23A16D854(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_23A170554(char *a1)
{
  uint64_t v1;

  return sub_23A12CD84(a1, v1, (void (*)(char *))sub_23A16E460);
}

uint64_t sub_23A170574(unsigned __int16 *a1)
{
  return sub_23A16D960(a1);
}

uint64_t sub_23A17057C(uint64_t *a1)
{
  return sub_23A16D9BC(a1);
}

uint64_t sub_23A170584(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_23A164928(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[5 * a2 + 4];
    if (a1 != a2 || &v4[5 * a1 + 4] >= (_QWORD *)&v16[40 * v15])
      result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, 40 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_23A19B830();
  __break(1u);
  return result;
}

uint64_t sub_23A1706F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_23A19B800();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_23A19B800();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_23A19B800();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x23B8426A4](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for PendingRequest(0);
  swift_arrayDestroy();
  if (!v6)
    return sub_23A19B644();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_23A19B800();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_23A19B644();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_23A19B800();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_23A19B830();
  __break(1u);
  return result;
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_23A13A824(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_23A170A00()
{
  uint64_t v0;

  return sub_23A16DC54(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
}

uint64_t sub_23A170A14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A170A38()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A170A64(uint64_t a1)
{
  uint64_t v1;

  return sub_23A16AB14(a1, *(_QWORD *)(v1 + 32), *(void (**)(uint64_t *))(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23A170A74(uint64_t a1)
{
  return sub_23A16B4FC(a1);
}

uint64_t sub_23A170AAC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  void *v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v23[0] = a7;
  v9 = v7;
  v14 = sub_23A19B2D8();
  v26 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23A19B2F0();
  v24 = *(_QWORD *)(v17 - 8);
  v25 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[1] = *(_QWORD *)(v9 + 48);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v9;
  v20[3] = a3;
  v20[4] = a4;
  v20[5] = a1;
  v20[6] = a2;
  aBlock[4] = a6;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = v23[0];
  v21 = _Block_copy(aBlock);
  sub_23A131DF0(a1, a2);
  swift_retain();
  swift_retain();
  sub_23A19B2E4();
  v27 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v19, v16, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v25);
  return swift_release();
}

uint64_t sub_23A170CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v5 = v4;
  v10 = sub_23A19B2D8();
  v21 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23A19B2F0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)(v5 + 48);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v5;
  v17[3] = a3;
  v17[4] = a4;
  v17[5] = a1;
  v17[6] = a2;
  aBlock[4] = sub_23A185ADC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_116;
  v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23A19B2E4();
  v22 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

uint64_t sub_23A170ECC(uint64_t a1, uint64_t (*a2)(__int128 *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD **v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a4;
  v32 = a5;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) == 1)
  {
    v28 = xmmword_23A19D2F0;
    v29 = 258;
    return a2(&v28);
  }
  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  sub_23A1858C0();
  v9 = sub_23A19AAF8();
  v11 = v10;
  swift_release();
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a2;
  v13[4] = a3;
  v14 = (_QWORD **)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue);
  swift_beginAccess();
  v15 = *v14;
  sub_23A131DF0(v9, v11);
  swift_retain();
  sub_23A131DF0(v9, v11);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v14 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_23A164928(0, v15[2] + 1, 1, v15);
    *v14 = v15;
  }
  v18 = v15[2];
  v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    v15 = sub_23A164928((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
    *v14 = v15;
  }
  v15[2] = v18 + 1;
  v19 = &v15[5 * v18];
  *((_DWORD *)v19 + 8) = 1;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = sub_23A185914;
  v19[8] = v13;
  swift_endAccess();
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady) & 1) != 0)
  {
    sub_23A15C8C0(v9, v11, 1);
    sub_23A125ED8(v9, v11);
LABEL_13:
    sub_23A125ED8(v9, v11);
    return swift_release();
  }
  if (qword_2569443C0 != -1)
    swift_once();
  v20 = sub_23A19AE28();
  __swift_project_value_buffer(v20, (uint64_t)qword_2569452A0);
  swift_retain_n();
  v21 = sub_23A19AE10();
  v22 = sub_23A19B6BC();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_QWORD *)&v28 = v27;
    *(_DWORD *)v23 = 136315138;
    swift_retain();
    v24 = sub_23A15476C();
    v26 = v25;
    swift_release();
    v30 = sub_23A14071C(v24, v26, (uint64_t *)&v28);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v21, v22, "[Request] Queueing, %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v27, -1, -1);
    MEMORY[0x23B842FA4](v23, -1, -1);
    sub_23A125ED8(v9, v11);

    goto LABEL_13;
  }
  sub_23A125ED8(v9, v11);
  swift_release();
  sub_23A125ED8(v9, v11);

  return swift_release_n();
}

uint64_t sub_23A1715A4(uint64_t a1, uint64_t (*a2)(__int128 *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD **v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a4;
  v32 = a5;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) == 1)
  {
    v28 = xmmword_23A19D2F0;
    v29 = 258;
    return a2(&v28);
  }
  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  sub_23A1859B4();
  v9 = sub_23A19AAF8();
  v11 = v10;
  swift_release();
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a2;
  v13[4] = a3;
  v14 = (_QWORD **)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue);
  swift_beginAccess();
  v15 = *v14;
  sub_23A131DF0(v9, v11);
  swift_retain();
  sub_23A131DF0(v9, v11);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v14 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_23A164928(0, v15[2] + 1, 1, v15);
    *v14 = v15;
  }
  v18 = v15[2];
  v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    v15 = sub_23A164928((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
    *v14 = v15;
  }
  v15[2] = v18 + 1;
  v19 = &v15[5 * v18];
  *((_DWORD *)v19 + 8) = 3;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = sub_23A185A08;
  v19[8] = v13;
  swift_endAccess();
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady) & 1) != 0)
  {
    sub_23A15C8C0(v9, v11, 3);
    sub_23A125ED8(v9, v11);
LABEL_13:
    sub_23A125ED8(v9, v11);
    return swift_release();
  }
  if (qword_2569443C0 != -1)
    swift_once();
  v20 = sub_23A19AE28();
  __swift_project_value_buffer(v20, (uint64_t)qword_2569452A0);
  swift_retain_n();
  v21 = sub_23A19AE10();
  v22 = sub_23A19B6BC();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_QWORD *)&v28 = v27;
    *(_DWORD *)v23 = 136315138;
    swift_retain();
    v24 = sub_23A15476C();
    v26 = v25;
    swift_release();
    v30 = sub_23A14071C(v24, v26, (uint64_t *)&v28);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v21, v22, "[Request] Queueing, %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v27, -1, -1);
    MEMORY[0x23B842FA4](v23, -1, -1);
    sub_23A125ED8(v9, v11);

    goto LABEL_13;
  }
  sub_23A125ED8(v9, v11);
  swift_release();
  sub_23A125ED8(v9, v11);

  return swift_release_n();
}

uint64_t sub_23A171C7C(uint64_t a1, uint64_t (*a2)(_OWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD **v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _OWORD v28[2];
  char v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a4;
  v31 = a5;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) == 1)
  {
    v28[0] = xmmword_23A19D2F0;
    v28[1] = xmmword_23A19D2F0;
    v29 = 1;
    return a2(v28);
  }
  sub_23A19AB10();
  swift_allocObject();
  sub_23A19AB04();
  sub_23A185AE8();
  v9 = sub_23A19AAF8();
  v11 = v10;
  swift_release();
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a2;
  v13[4] = a3;
  v14 = (_QWORD **)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue);
  swift_beginAccess();
  v15 = *v14;
  sub_23A131DF0(v9, v11);
  swift_retain();
  sub_23A131DF0(v9, v11);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v14 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_23A164928(0, v15[2] + 1, 1, v15);
    *v14 = v15;
  }
  v18 = v15[2];
  v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    v15 = sub_23A164928((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
    *v14 = v15;
  }
  v15[2] = v18 + 1;
  v19 = &v15[5 * v18];
  *((_DWORD *)v19 + 8) = 5;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = sub_23A185B3C;
  v19[8] = v13;
  swift_endAccess();
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady) & 1) != 0)
  {
    sub_23A15C8C0(v9, v11, 5);
    sub_23A125ED8(v9, v11);
LABEL_13:
    sub_23A125ED8(v9, v11);
    return swift_release();
  }
  if (qword_2569443C0 != -1)
    swift_once();
  v20 = sub_23A19AE28();
  __swift_project_value_buffer(v20, (uint64_t)qword_2569452A0);
  swift_retain_n();
  v21 = sub_23A19AE10();
  v22 = sub_23A19B6BC();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_QWORD *)&v28[0] = v27;
    *(_DWORD *)v23 = 136315138;
    swift_retain();
    v24 = sub_23A15476C();
    v26 = v25;
    swift_release();
    sub_23A14071C(v24, v26, (uint64_t *)v28);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v21, v22, "[Request] Queueing, %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v27, -1, -1);
    MEMORY[0x23B842FA4](v23, -1, -1);
    sub_23A125ED8(v9, v11);

    goto LABEL_13;
  }
  sub_23A125ED8(v9, v11);
  swift_release();
  sub_23A125ED8(v9, v11);

  return swift_release_n();
}

uint64_t sub_23A17233C(uint64_t a1, unint64_t a2, __int16 a3, uint64_t a4, void (*a5)(__int128 *), uint64_t a6, void (*a7)(void))
{
  uint64_t result;
  __int128 v13;
  __int128 v14;
  __int16 v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if ((a3 & 0x100) != 0)
    {
      *(_QWORD *)&v14 = a1;
      *((_QWORD *)&v14 + 1) = a2;
      LOBYTE(v15) = a3;
      HIBYTE(v15) = 1;
      sub_23A13A924(a1, a2, a3);
      a5(&v14);
      swift_release();
      return sub_23A185928(a1, a2, a3, 1);
    }
    else
    {
      sub_23A19AAEC();
      swift_allocObject();
      sub_23A131DF0(a1, a2);
      sub_23A19AAE0();
      a7();
      sub_23A19AAD4();
      swift_release();
      v14 = v13;
      v15 = 0;
      sub_23A131DF0(v13, *((unint64_t *)&v13 + 1));
      a5(&v14);
      swift_release();
      sub_23A185928(a1, a2, a3, 0);
      sub_23A125ED8(v13, *((unint64_t *)&v13 + 1));
      return sub_23A125ED8(v13, *((unint64_t *)&v13 + 1));
    }
  }
  return result;
}

uint64_t sub_23A172A78(uint64_t a1, unint64_t a2, __int16 a3, uint64_t a4, void (*a5)(__int128 *))
{
  uint64_t result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if ((a3 & 0x100) != 0)
    {
      *(_QWORD *)&v12 = a1;
      *((_QWORD *)&v12 + 1) = a2;
      v13 = a3;
      LOBYTE(v14) = 1;
      sub_23A13A924(a1, a2, a3);
      a5(&v12);
      swift_release();
      return sub_23A185928(a1, a2, a3, 1);
    }
    else
    {
      sub_23A19AAEC();
      swift_allocObject();
      sub_23A131DF0(a1, a2);
      sub_23A19AAE0();
      sub_23A185B64();
      sub_23A19AAD4();
      swift_release();
      v12 = v10;
      v13 = v11;
      LOBYTE(v14) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a5(&v12);
      swift_release();
      sub_23A185928(a1, a2, a3, 0);
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_23A1731C8(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v5 = v4;
  v10 = sub_23A19B2D8();
  v21 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23A19B2F0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v5;
  *(_QWORD *)(v17 + 24) = a3;
  *(_QWORD *)(v17 + 32) = a4;
  *(_BYTE *)(v17 + 40) = a1;
  *(_BYTE *)(v17 + 41) = a2;
  aBlock[4] = sub_23A185D68;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_142;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23A19B2E4();
  v22 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

uint64_t sub_23A1733E0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v22 = a6;
  v8 = v6;
  v12 = sub_23A19B2D8();
  v25 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23A19B2F0();
  v15 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v8 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v8;
  *(_QWORD *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  *(_BYTE *)(v18 + 40) = a1;
  aBlock[4] = a5;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = v22;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23A19B2E4();
  v26 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v17, v14, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v24);
  return swift_release();
}

uint64_t sub_23A1735EC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v35 = a8;
  v33 = a7;
  v30 = a6;
  v31 = a3;
  v10 = v8;
  v32 = a2;
  v13 = sub_23A19B2D8();
  v38 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23A19B2F0();
  v36 = *(_QWORD *)(v16 - 8);
  v37 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a5(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v30 - v22;
  v34 = *(_QWORD *)(v10 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  sub_23A13ABDC(a1, (uint64_t)&v30 - v22, a5);
  v24 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = v24 + v21;
  v26 = (_QWORD *)swift_allocObject();
  v27 = v31;
  v26[2] = v10;
  v26[3] = v27;
  v26[4] = a4;
  sub_23A13AB54((uint64_t)v23, (uint64_t)v26 + v24, a5);
  *((_BYTE *)v26 + v25) = v32;
  aBlock[4] = v33;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = v35;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23A19B2E4();
  v39 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v18, v15, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v37);
  return swift_release();
}

void sub_23A173870(uint64_t a1, void (*a2)(id *), uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char v38;
  uint64_t v39;
  uint64_t v40;

  v8 = sub_23A19AE28();
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) == 1)
  {
    sub_23A13A274();
    v12 = (void *)swift_allocError();
    *(_OWORD *)v13 = xmmword_23A19D2F0;
    *(_BYTE *)(v13 + 16) = 2;
    v37 = v12;
    v38 = 1;
    a2(&v37);
    sub_23A13AC68(v37, v38);
  }
  else
  {
    v36 = v9;
    v14 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
    v15 = swift_allocObject();
    swift_weakInit();
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = v15;
    v16[3] = a2;
    v16[4] = a3;
    v17 = v14;
    swift_retain();
    v18 = sub_23A184EC0(a4 & 1, (uint64_t)v17, (uint64_t)sub_23A185648, (uint64_t)v16, (uint64_t)&type metadata for CloseRequest, (uint64_t (*)(void))sub_23A185674);
    v19 = swift_allocObject();
    swift_weakInit();
    v20 = v18[2];
    v18[2] = sub_23A170A74;
    v18[3] = v19;
    sub_23A13A1E4(v20);
    if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) & 1) == 0)
      goto LABEL_8;
    v21 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
    swift_beginAccess();
    v22 = *v21;
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = sub_23A19B800();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v23 < *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (a4 & 1) != 0)
    {
      sub_23A16C1E0((uint64_t)v18);
      swift_release();
    }
    else
    {
LABEL_8:
      sub_23A16B678((uint64_t)v18, a4 & 1);
      if (qword_2569443D0 != -1)
        swift_once();
      v24 = __swift_project_value_buffer(v8, (uint64_t)qword_256945C28);
      v25 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v11, v24, v8);
      swift_retain_n();
      v26 = sub_23A19AE10();
      v27 = sub_23A19B6BC();
      v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        v29 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        v40 = v35;
        *(_DWORD *)v29 = 136315650;
        HIDWORD(v34) = v28;
        v39 = sub_23A14071C(0x65736F6C632FLL, 0xE600000000000000, &v40);
        sub_23A19B728();
        *(_WORD *)(v29 + 12) = 1024;
        LODWORD(v39) = a4 & 1;
        sub_23A19B728();
        *(_WORD *)(v29 + 18) = 2080;
        swift_retain();
        v30 = CosmoMultiplexChannelClient.description.getter();
        v32 = v31;
        swift_release();
        v39 = sub_23A14071C(v30, v32, &v40);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v26, BYTE4(v34), "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v29, 0x1Cu);
        v33 = v35;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v33, -1, -1);
        MEMORY[0x23B842FA4](v29, -1, -1);
        swift_release();

        (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
      }
      else
      {

        swift_release_n();
        swift_release();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v8);
      }
    }
  }
}

void sub_23A173D00(uint64_t a1, void (*a2)(void **), uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37[2];
  char v38;
  uint64_t v39;
  uint64_t v40;

  v8 = sub_23A19AE28();
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) == 1)
  {
    sub_23A13A274();
    v12 = (void *)swift_allocError();
    *(_OWORD *)v13 = xmmword_23A19D2F0;
    *(_BYTE *)(v13 + 16) = 2;
    v37[0] = v12;
    v38 = 1;
    a2(v37);
    sub_23A185CAC(v37[0], (uint64_t)v37[1], v38);
  }
  else
  {
    v36 = v9;
    v14 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
    v15 = swift_allocObject();
    swift_weakInit();
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = v15;
    v16[3] = a2;
    v16[4] = a3;
    v17 = v14;
    swift_retain();
    v18 = sub_23A184EC0(a4 & 1, (uint64_t)v17, (uint64_t)sub_23A185CA0, (uint64_t)v16, (uint64_t)&type metadata for FileListRequest, (uint64_t (*)(void))sub_23A185CBC);
    v19 = swift_allocObject();
    swift_weakInit();
    v20 = v18[2];
    v18[2] = sub_23A170A74;
    v18[3] = v19;
    sub_23A13A1E4(v20);
    if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) & 1) == 0)
      goto LABEL_8;
    v21 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
    swift_beginAccess();
    v22 = *v21;
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = sub_23A19B800();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v23 < *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (a4 & 1) != 0)
    {
      sub_23A16C1E0((uint64_t)v18);
      swift_release();
    }
    else
    {
LABEL_8:
      sub_23A16B678((uint64_t)v18, a4 & 1);
      if (qword_2569443D0 != -1)
        swift_once();
      v24 = __swift_project_value_buffer(v8, (uint64_t)qword_256945C28);
      v25 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v11, v24, v8);
      swift_retain_n();
      v26 = sub_23A19AE10();
      v27 = sub_23A19B6BC();
      v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        v29 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        v40 = v35;
        *(_DWORD *)v29 = 136315650;
        HIDWORD(v34) = v28;
        v39 = sub_23A14071C(0x73656C69662FLL, 0xE600000000000000, &v40);
        sub_23A19B728();
        *(_WORD *)(v29 + 12) = 1024;
        LODWORD(v39) = a4 & 1;
        sub_23A19B728();
        *(_WORD *)(v29 + 18) = 2080;
        swift_retain();
        v30 = CosmoMultiplexChannelClient.description.getter();
        v32 = v31;
        swift_release();
        v39 = sub_23A14071C(v30, v32, &v40);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v26, BYTE4(v34), "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v29, 0x1Cu);
        v33 = v35;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v33, -1, -1);
        MEMORY[0x23B842FA4](v29, -1, -1);
        swift_release();

        (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
      }
      else
      {

        swift_release_n();
        swift_release();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v8);
      }
    }
  }
}

void sub_23A174190(uint64_t a1, void (*a2)(void **), uint64_t a3, char a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43[3];
  char v44;
  uint64_t v45;
  uint64_t v46;

  v10 = sub_23A19AE28();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) == 1)
  {
    sub_23A13A274();
    v15 = (void *)swift_allocError();
    *(_OWORD *)v16 = xmmword_23A19D2F0;
    *(_BYTE *)(v16 + 16) = 2;
    v43[0] = v15;
    v44 = 1;
    a2(v43);
    sub_23A185DDC(v43[0], (uint64_t)v43[1], (uint64_t)v43[2], v44);
  }
  else
  {
    v41 = v11;
    v42 = v12;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
    v18 = swift_allocObject();
    swift_weakInit();
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v18;
    v19[3] = a2;
    v20 = a5;
    v19[4] = a3;
    v21 = v17;
    swift_retain();
    v22 = sub_23A184FA8(a4, a5 & 1, (uint64_t)v21, (uint64_t)sub_23A185DD0, (uint64_t)v19);
    v23 = swift_allocObject();
    swift_weakInit();
    v24 = v22[2];
    v22[2] = sub_23A170A74;
    v22[3] = v23;
    sub_23A13A1E4(v24);
    if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) & 1) == 0)
      goto LABEL_8;
    v25 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
    swift_beginAccess();
    v26 = *v25;
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      v27 = sub_23A19B800();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v27 < *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (a5 & 1) != 0)
    {
      sub_23A16C1E0((uint64_t)v22);
      swift_release();
    }
    else
    {
LABEL_8:
      sub_23A16B678((uint64_t)v22, a5 & 1);
      if (qword_2569443D0 != -1)
        swift_once();
      v28 = v41;
      v29 = __swift_project_value_buffer(v41, (uint64_t)qword_256945C28);
      v30 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v14, v29, v28);
      swift_retain_n();
      v31 = sub_23A19AE10();
      v32 = sub_23A19B6BC();
      v33 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        v34 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        v46 = v40;
        *(_DWORD *)v34 = 136315650;
        HIDWORD(v39) = v33;
        v45 = sub_23A14071C(0x657361656C2FLL, 0xE600000000000000, &v46);
        sub_23A19B728();
        *(_WORD *)(v34 + 12) = 1024;
        LODWORD(v45) = v20 & 1;
        sub_23A19B728();
        *(_WORD *)(v34 + 18) = 2080;
        swift_retain();
        v35 = CosmoMultiplexChannelClient.description.getter();
        v37 = v36;
        swift_release();
        v45 = sub_23A14071C(v35, v37, &v46);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v31, BYTE4(v39), "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v34, 0x1Cu);
        v38 = v40;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v38, -1, -1);
        MEMORY[0x23B842FA4](v34, -1, -1);
        swift_release();

        (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v28);
      }
      else
      {

        swift_release_n();
        swift_release();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v28);
      }
    }
  }
}

uint64_t sub_23A174620(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v49 = a5;
  v9 = sub_23A19AE28();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FileRequest(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v46 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946578);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (uint64_t *)((char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) == 1)
  {
    sub_23A13A274();
    v21 = swift_allocError();
    *(_OWORD *)v22 = xmmword_23A19D2F0;
    *(_BYTE *)(v22 + 16) = 2;
    *v20 = v21;
    swift_storeEnumTagMultiPayload();
    a2(v20);
    return sub_23A13ACB8((uint64_t)v20, &qword_256946578);
  }
  else
  {
    v47 = v9;
    v48 = v10;
    sub_23A13ABDC(a4, (uint64_t)v17, type metadata accessor for FileRequest);
    v24 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
    v25 = swift_allocObject();
    swift_weakInit();
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = v25;
    v26[3] = a2;
    v26[4] = a3;
    sub_23A13ABDC((uint64_t)v17, (uint64_t)v15, type metadata accessor for FileRequest);
    v27 = v24;
    swift_retain();
    swift_retain();
    v28 = v49;
    v29 = sub_23A1850A0((uint64_t)v15, v49 & 1, (uint64_t)v27, (uint64_t)sub_23A185884, (uint64_t)v26, type metadata accessor for FileRequest, (unint64_t *)&unk_256946580, (uint64_t)&protocol conformance descriptor for FileRequest);
    sub_23A13AC20((uint64_t)v17, type metadata accessor for FileRequest);
    swift_release();
    v30 = swift_allocObject();
    swift_weakInit();
    v31 = v29[2];
    v29[2] = sub_23A170A74;
    v29[3] = v30;
    sub_23A13A1E4(v31);
    v32 = v28;
    if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) & 1) == 0)
      goto LABEL_8;
    v33 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
    swift_beginAccess();
    if (*v33 >> 62)
    {
      swift_bridgeObjectRetain();
      v34 = sub_23A19B800();
      swift_bridgeObjectRelease();
    }
    else
    {
      v34 = *(_QWORD *)((*v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v34 < *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (v28 & 1) != 0)
    {
      sub_23A16C1E0((uint64_t)v29);
      return swift_release();
    }
    else
    {
LABEL_8:
      sub_23A16B678((uint64_t)v29, v28 & 1);
      if (qword_2569443D0 != -1)
        swift_once();
      v35 = v47;
      v36 = __swift_project_value_buffer(v47, (uint64_t)qword_256945C28);
      v37 = v48;
      v38 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v50, v36, v35);
      swift_retain_n();
      v39 = sub_23A19AE10();
      v40 = sub_23A19B6BC();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v46 = swift_slowAlloc();
        v52 = v46;
        *(_DWORD *)v41 = 136315650;
        v51 = sub_23A14071C(0x656C69662FLL, 0xE500000000000000, &v52);
        sub_23A19B728();
        *(_WORD *)(v41 + 12) = 1024;
        LODWORD(v51) = v32 & 1;
        sub_23A19B728();
        *(_WORD *)(v41 + 18) = 2080;
        swift_retain();
        v42 = CosmoMultiplexChannelClient.description.getter();
        v44 = v43;
        swift_release();
        v51 = sub_23A14071C(v42, v44, &v52);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v39, v40, "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v41, 0x1Cu);
        v45 = v46;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v45, -1, -1);
        MEMORY[0x23B842FA4](v41, -1, -1);
        swift_release();

        return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v50, v35);
      }
      else
      {

        swift_release_n();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v35);
      }
    }
  }
}

void sub_23A174BA8(uint64_t a1, void (*a2)(id *), uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v10 = sub_23A19AE28();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RejectFileRequest(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v42 - v18;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) == 1)
  {
    sub_23A13A274();
    v20 = (void *)swift_allocError();
    *(_OWORD *)v21 = xmmword_23A19D2F0;
    *(_BYTE *)(v21 + 16) = 2;
    v47 = v20;
    v48 = 1;
    a2(&v47);
    sub_23A13AC68(v47, v48);
  }
  else
  {
    v44 = v13;
    v45 = v11;
    v46 = v10;
    sub_23A13ABDC(a4, (uint64_t)&v42 - v18, type metadata accessor for RejectFileRequest);
    v22 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
    v23 = swift_allocObject();
    swift_weakInit();
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = v23;
    v24[3] = a2;
    v24[4] = a3;
    sub_23A13ABDC((uint64_t)v19, (uint64_t)v17, type metadata accessor for RejectFileRequest);
    v25 = v22;
    swift_retain();
    swift_retain();
    v26 = sub_23A1850A0((uint64_t)v17, a5 & 1, (uint64_t)v25, (uint64_t)sub_23A185730, (uint64_t)v24, type metadata accessor for RejectFileRequest, &qword_256946568, (uint64_t)&protocol conformance descriptor for RejectFileRequest);
    sub_23A13AC20((uint64_t)v19, type metadata accessor for RejectFileRequest);
    swift_release();
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = v26[2];
    v26[2] = sub_23A170A74;
    v26[3] = v27;
    sub_23A13A1E4(v28);
    if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) & 1) == 0)
      goto LABEL_8;
    v29 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
    swift_beginAccess();
    if (*v29 >> 62)
    {
      swift_bridgeObjectRetain();
      v30 = sub_23A19B800();
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = *(_QWORD *)((*v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v30 < *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (a5 & 1) != 0)
    {
      sub_23A16C1E0((uint64_t)v26);
      swift_release();
    }
    else
    {
LABEL_8:
      v43 = a5;
      sub_23A16B678((uint64_t)v26, a5 & 1);
      if (qword_2569443D0 != -1)
        swift_once();
      v31 = v46;
      v32 = __swift_project_value_buffer(v46, (uint64_t)qword_256945C28);
      v33 = v44;
      v34 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v32, v31);
      swift_retain_n();
      v35 = sub_23A19AE10();
      v36 = sub_23A19B6BC();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v50 = v42;
        *(_DWORD *)v37 = 136315650;
        v49 = sub_23A14071C(0x467463656A65722FLL, 0xEB00000000656C69, &v50);
        sub_23A19B728();
        *(_WORD *)(v37 + 12) = 1024;
        LODWORD(v49) = v43 & 1;
        sub_23A19B728();
        *(_WORD *)(v37 + 18) = 2080;
        swift_retain();
        v38 = CosmoMultiplexChannelClient.description.getter();
        v40 = v39;
        swift_release();
        v49 = sub_23A14071C(v38, v40, &v50);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v35, v36, "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v37, 0x1Cu);
        v41 = v42;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v41, -1, -1);
        MEMORY[0x23B842FA4](v37, -1, -1);
        swift_release();

        (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v46);
      }
      else
      {

        swift_release_n();
        swift_release();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v31);
      }
    }
  }
}

void sub_23A1750F8(uint64_t a1, uint64_t a2, void (*a3)(void **))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  _DWORD v16[10];
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char v20;

  v5 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946550);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_23A13AC74(a1, (uint64_t)v10, (uint64_t *)&unk_256946550);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = *(_QWORD *)v10;
      v12 = *((_QWORD *)v10 + 1);
      v13 = v10[16];
      sub_23A13A274();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v15 = v11;
      *(_QWORD *)(v15 + 8) = v12;
      *(_BYTE *)(v15 + 16) = v13;
      v18 = v14;
      v20 = 1;
      a3(&v18);
      swift_release();
      sub_23A185CAC(v18, v19, v20);
    }
    else
    {
      sub_23A13AB54((uint64_t)v10, (uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
      sub_23A13CA0C((uint64_t)v7);
      v18 = (void *)v16[8];
      v19 = v17;
      v20 = 0;
      swift_bridgeObjectRetain();
      a3(&v18);
      swift_bridgeObjectRelease_n();
      swift_release();
      sub_23A13AC20((uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
    }
  }
}

void sub_23A1755C0(uint64_t a1, uint64_t a2, void (*a3)(void **))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  _DWORD v16[10];
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v5 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946550);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_23A13AC74(a1, (uint64_t)v10, (uint64_t *)&unk_256946550);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = *(_QWORD *)v10;
      v12 = *((_QWORD *)v10 + 1);
      v13 = v10[16];
      sub_23A13A274();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v15 = v11;
      *(_QWORD *)(v15 + 8) = v12;
      *(_BYTE *)(v15 + 16) = v13;
      v19 = v14;
      v22 = 1;
      a3(&v19);
      swift_release();
      sub_23A185DDC(v19, v20, v21, v22);
    }
    else
    {
      sub_23A13AB54((uint64_t)v10, (uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
      sub_23A13C8BC((uint64_t)v7);
      v19 = (void *)v16[8];
      v20 = v17;
      v21 = v18;
      v22 = 0;
      swift_bridgeObjectRetain();
      a3(&v19);
      swift_bridgeObjectRelease_n();
      swift_release();
      sub_23A13AC20((uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
    }
  }
}

uint64_t sub_23A175A94(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[6];

  v24[5] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946578);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (_QWORD *)((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for CosmoFileHttpResponse(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946550);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A13AC74(a1, (uint64_t)v17, (uint64_t *)&unk_256946550);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = *(_QWORD *)v17;
      v20 = *((_QWORD *)v17 + 1);
      v21 = v17[16];
      sub_23A13A274();
      v22 = swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_BYTE *)(v23 + 16) = v21;
      *v8 = v22;
      swift_storeEnumTagMultiPayload();
      a3(v8);
      swift_release();
      return sub_23A13ACB8((uint64_t)v8, &qword_256946578);
    }
    else
    {
      sub_23A13AB54((uint64_t)v17, (uint64_t)v14, type metadata accessor for CosmoHttpResponseContent);
      static CosmoFileHttpResponse._create(from:)((uint64_t)v14, v11);
      sub_23A13ABDC((uint64_t)v11, (uint64_t)v8, type metadata accessor for CosmoFileHttpResponse);
      swift_storeEnumTagMultiPayload();
      a3(v8);
      swift_release();
      sub_23A13ACB8((uint64_t)v8, &qword_256946578);
      sub_23A13AC20((uint64_t)v11, type metadata accessor for CosmoFileHttpResponse);
      return sub_23A13AC20((uint64_t)v14, type metadata accessor for CosmoHttpResponseContent);
    }
  }
  return result;
}

uint64_t sub_23A176010(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, void (*a5)(uint64_t *__return_ptr, char *), uint64_t (*a6)(uint64_t, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;

  v10 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946550);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A13AC74(a1, (uint64_t)v15, (uint64_t *)&unk_256946550);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = *(_QWORD *)v15;
      v18 = *((_QWORD *)v15 + 1);
      v19 = v15[16];
      sub_23A13A274();
      v20 = swift_allocError();
      *(_QWORD *)v21 = v17;
      *(_QWORD *)(v21 + 8) = v18;
      *(_BYTE *)(v21 + 16) = v19;
      v24 = v20;
      v25 = 1;
      a3(&v24);
      swift_release();
      return a6(v24, v25);
    }
    else
    {
      sub_23A13AB54((uint64_t)v15, (uint64_t)v12, type metadata accessor for CosmoHttpResponseContent);
      a5(&v23, v12);
      v24 = v23;
      v25 = 0;
      a3(&v24);
      swift_release();
      return sub_23A13AC20((uint64_t)v12, type metadata accessor for CosmoHttpResponseContent);
    }
  }
  return result;
}

double TransferClient.Configuration.gracefulDisconnectWindowInterval.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

Cosmo::TransferClient::Configuration __swiftcall TransferClient.Configuration.init(gracefulDisconnectWindowInterval:)(Cosmo::TransferClient::Configuration gracefulDisconnectWindowInterval)
{
  Cosmo::TransferClient::Configuration *v1;

  v1->gracefulDisconnectWindowInterval = gracefulDisconnectWindowInterval.gracefulDisconnectWindowInterval;
  return gracefulDisconnectWindowInterval;
}

uint64_t TransferClient.FileDescriptor.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23A19AD2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TransferClient.FileDescriptor.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TransferClient.FileDescriptor(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for TransferClient.FileDescriptor(uint64_t a1)
{
  return sub_23A141024(a1, qword_256946190);
}

uint64_t TransferClient.FileDescriptor.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TransferClient.FileDescriptor(0) + 24));
}

uint64_t TransferClient.FileDescriptor.description.getter()
{
  uint64_t v0;
  id v1;
  uint64_t result;
  id v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1490]), sel_init);
  objc_msgSend(v1, sel_setCountStyle_, 0);
  result = type metadata accessor for TransferClient.FileDescriptor(0);
  if ((*(_QWORD *)(v0 + *(int *)(result + 24)) & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = objc_msgSend(v1, sel_stringFromByteCount_);
    sub_23A19B4DC();

    sub_23A19B794();
    swift_bridgeObjectRelease();
    sub_23A19AD2C();
    sub_23A131E34(&qword_256946070, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_23A19B8FC();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    sub_23A19B590();
    swift_bridgeObjectRetain();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    sub_23A19B590();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    sub_23A19B590();

    return 0xD000000000000012;
  }
  return result;
}

uint64_t sub_23A176750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23A19AD2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TransferClient.State.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23A1767C4 + 4 * byte_23A19E090[*v0]))(0xD000000000000021, 0x800000023A1A1A40);
}

uint64_t sub_23A1767C4()
{
  return 0x6C616974696E69;
}

uint64_t sub_23A1767DC@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

uint64_t sub_23A1768C8()
{
  return 0x656E6E6F63736964;
}

BOOL static TransferClient.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TransferClient.State.hash(into:)()
{
  return sub_23A19B98C();
}

BOOL static TransferClient.State.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t TransferClient.State.hashValue.getter()
{
  sub_23A19B980();
  sub_23A19B98C();
  return sub_23A19B9A4();
}

Cosmo::TransferClient::AttestationResult_optional __swiftcall TransferClient.AttestationResult.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  Cosmo::TransferClient::AttestationResult_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23A19B860();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t TransferClient.AttestationResult.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6572756C696166;
  else
    return 0x73736563637573;
}

uint64_t sub_23A176A28(char *a1, char *a2)
{
  return sub_23A151E7C(*a1, *a2);
}

uint64_t sub_23A176A34()
{
  return sub_23A15217C();
}

uint64_t sub_23A176A3C()
{
  return sub_23A152274();
}

uint64_t sub_23A176A44()
{
  return sub_23A1524E4();
}

Cosmo::TransferClient::AttestationResult_optional sub_23A176A4C(Swift::String *a1)
{
  return TransferClient.AttestationResult.init(rawValue:)(*a1);
}

uint64_t sub_23A176A58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TransferClient.AttestationResult.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

id TransferClient.queue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

double TransferClient.config.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 24);
  *a1 = result;
  return result;
}

uint64_t sub_23A176A90@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23A19AE64();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23A176B0C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_23A19AE70();
}

uint64_t sub_23A176B84()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23A19AE64();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23A176BFC()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256946080);
  sub_23A19AE4C();
  return swift_endAccess();
}

uint64_t sub_23A176C60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946538);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256946080);
  sub_23A19AE58();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_23A176D70()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256946080);
  sub_23A19AE4C();
  return swift_endAccess();
}

uint64_t sub_23A176DD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
  swift_beginAccess();
  return MEMORY[0x23B843028](v1);
}

uint64_t TransferClient.__allocating_init(delegate:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  v8 = 0x3FF0000000000000;
  type metadata accessor for TransferClient(0);
  v6 = swift_allocObject();
  TransferClient.init(delegate:config:queue:)(a1, a2, &v8, a3);
  return v6;
}

uint64_t TransferClient.__allocating_init(delegate:config:queue:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  TransferClient.init(delegate:config:queue:)(a1, a2, a3, a4);
  return v8;
}

uint64_t type metadata accessor for TransferClient(uint64_t a1)
{
  return sub_23A141024(a1, (uint64_t *)&unk_2569461F8);
}

uint64_t TransferClient.init(delegate:config:queue:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a2;
  v7 = sub_23A19B6EC();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v25 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A19B6C8();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23A19B2F0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946080);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a3;
  v16 = v4 + OBJC_IVAR____TtC5Cosmo14TransferClient__fileTransfers;
  v28 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256946088);
  sub_23A19AE40();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v16, v14, v11);
  v17 = v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
  *(_QWORD *)(v17 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_stateAtDisconnect) = 18;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret) = xmmword_23A19C6E0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationBrowser) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel) = 0;
  v18 = (_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
  *v18 = 0;
  v18[1] = 0;
  v19 = (_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_pinCode);
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult) = 2;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferBrowser) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localSecIdentity) = 0;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey) = xmmword_23A19C6E0;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey) = xmmword_23A19C6E0;
  v20 = v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferServiceUUID;
  v21 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesRequestedCount) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesReceivedCount) = 0;
  swift_beginAccess();
  *(_QWORD *)(v17 + 8) = v26;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v4 + 24) = v15;
  if (!a4)
  {
    sub_23A125AD0();
    sub_23A19B2E4();
    v27 = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256945240, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569444F0);
    sub_23A131E74((unint64_t *)&unk_256945250, (uint64_t *)&unk_2569444F0);
    sub_23A19B764();
    (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x24BEE5750], v24);
    a4 = sub_23A19B704();
  }
  swift_unknownObjectRelease();
  *(_QWORD *)(v4 + 16) = a4;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) = 0;
  return v4;
}

void sub_23A1772DC(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = *(void **)(v1 + 16);
  *v7 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) = v8;
    if (qword_2569443B0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v11 = sub_23A19AE28();
  __swift_project_value_buffer(v11, (uint64_t)qword_25694EB88);
  v12 = sub_23A19AE10();
  v13 = sub_23A19B6BC();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v21 = v15;
    *(_DWORD *)v14 = 136315394;
    LOBYTE(v20) = v2;
    v16 = TransferClient.State.description.getter();
    v20 = sub_23A14071C(v16, v17, &v21);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    LOBYTE(v20) = v8;
    v18 = TransferClient.State.description.getter();
    v20 = sub_23A14071C(v18, v19, &v21);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v12, v13, "[State] Updated, old-state='%s' new-state='%s'", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v15, -1, -1);
    MEMORY[0x23B842FA4](v14, -1, -1);
  }

}

uint64_t TransferClient.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Cosmo14TransferClient__fileTransfers;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946080);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23A125EB4(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate);
  sub_23A125F1C(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8));
  swift_release();
  swift_release();
  sub_23A13A1E4(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_23A125F1C(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey + 8));
  sub_23A125F1C(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey + 8));
  sub_23A13ACB8(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferServiceUUID, (uint64_t *)&unk_256944500);
  swift_release();
  return v0;
}

uint64_t TransferClient.__deallocating_deinit()
{
  TransferClient.deinit();
  return swift_deallocClassInstance();
}

uint64_t TransferClient.connect(secret:onConnect:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_23A19B2D8();
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23A19B2F0();
  v11 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v14 = a1[1];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = v15;
  v16[6] = v14;
  aBlock[4] = sub_23A177DBC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_6;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23A131DF0(v15, v14);
  sub_23A19B2E4();
  v22 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v13, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  return swift_release();
}

void sub_23A177898(uint64_t a1, void (*a2)(void *, uint64_t), void (*a3)(void *, uint64_t), uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  void (*v11)(void *, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  void (*v22)(void *, uint64_t);
  void (*v23)(void *, uint64_t);
  uint64_t v24;
  unint64_t v25;
  void (**v26)(void *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __int16 v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void *, uint64_t);
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v10 = sub_23A19AE28();
  v11 = *(void (**)(void *, uint64_t))(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state))
  {
    if (qword_2569443B0 != -1)
      swift_once();
    __swift_project_value_buffer(v10, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v15 = sub_23A19AE10();
    v16 = sub_23A19B6BC();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v43 = a3;
      v44 = v18;
      *(_DWORD *)v17 = 136315138;
      LOBYTE(v46) = *(_BYTE *)(a1 + v14);
      v19 = TransferClient.State.description.getter();
      v46 = sub_23A14071C(v19, v20, &v44);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v15, v16, "[Connect] Must be invoked while in the initial state, state=%s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v18, -1, -1);
      MEMORY[0x23B842FA4](v17, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_23A13A180();
    v38 = (void *)swift_allocError();
    *v39 = xmmword_23A19C6F0;
    a2(v38, 1);

  }
  else
  {
    v21 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret);
    v22 = a3;
    v23 = a2;
    v24 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret);
    v25 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8);
    *v21 = a4;
    v21[1] = a5;
    sub_23A131DF0(a4, a5);
    sub_23A125F1C(v24, v25);
    v26 = (void (**)(void *, uint64_t))(a1
                                                + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
    v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
    *v26 = v23;
    v26[1] = v22;
    swift_retain();
    sub_23A13A1E4(v27);
    if (qword_2569443B0 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v10, (uint64_t)qword_25694EB88);
    (*((void (**)(char *, uint64_t, uint64_t))v11 + 2))(v13, v28, v10);
    sub_23A131DF0(a4, a5);
    sub_23A131DF0(a4, a5);
    sub_23A131DF0(a4, a5);
    sub_23A131DF0(a4, a5);
    v29 = sub_23A19AE10();
    v30 = sub_23A19B6BC();
    if (os_log_type_enabled(v29, v30))
    {
      v43 = v11;
      v31 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v45 = a5;
      v46 = v42;
      *(_DWORD *)v31 = 136315394;
      v44 = a4;
      v32 = SharedSecret.asACCV2CompatibileHex.getter();
      v44 = sub_23A14071C(v32, v33, &v46);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A125ED8(a4, a5);
      sub_23A125ED8(a4, a5);
      *(_WORD *)(v31 + 12) = 2080;
      v44 = a4;
      v45 = a5;
      SharedSecret.protocolVersion.getter();
      if ((v34 & 0x100) != 0)
      {
        v37 = 0xE300000000000000;
        v35 = 7104878;
      }
      else
      {
        LOBYTE(v44) = v34;
        v35 = sub_23A19B518();
        v37 = v36;
      }
      v44 = sub_23A14071C(v35, v37, &v46);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A125ED8(a4, a5);
      sub_23A125ED8(a4, a5);
      _os_log_impl(&dword_23A123000, v29, v30, "[Connect] Using shared-secret=%s, protocol-version=%s", (uint8_t *)v31, 0x16u);
      v40 = v42;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v40, -1, -1);
      MEMORY[0x23B842FA4](v31, -1, -1);

      (*((void (**)(char *, uint64_t))v43 + 1))(v13, v10);
    }
    else
    {
      sub_23A125ED8(a4, a5);
      sub_23A125ED8(a4, a5);
      sub_23A125ED8(a4, a5);
      sub_23A125ED8(a4, a5);

      (*((void (**)(char *, uint64_t))v11 + 1))(v13, v10);
    }
    sub_23A177DE4();
  }
}

void sub_23A177DBC()
{
  uint64_t v0;

  sub_23A177898(*(_QWORD *)(v0 + 16), *(void (**)(void *, uint64_t))(v0 + 24), *(void (**)(void *, uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_23A177DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  char v13;
  uint64_t result;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[7];
  char v25;

  v1 = type metadata accessor for NetworkDescriptor();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v24[-v5];
  v7 = sub_23A19B35C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(void **)(v0 + 16);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5610], v7);
  v12 = v11;
  v13 = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) != 0)
  {
    v15 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret);
    v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8);
    if (v16 >> 60 != 15)
    {
      v17 = *v15;
      *(_QWORD *)v6 = *v15;
      *((_QWORD *)v6 + 1) = v16;
      v6[16] = 0;
      swift_storeEnumTagMultiPayload();
      sub_23A13ABDC((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
      type metadata accessor for CosmoBrowser();
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = 0;
      *(_QWORD *)(v18 + 24) = 0;
      *(_QWORD *)(v18 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_browser) = 0;
      sub_23A13ABDC((uint64_t)v4, v18 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_descriptor, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
      sub_23A13A53C(v17, v16);
      v19 = v12;
      sub_23A13A53C(v17, v16);
      sub_23A13AC20((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
      *(_QWORD *)(v18 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_queue) = v19;
      v20 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationBrowser;
      *(_QWORD *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationBrowser) = v18;
      swift_release();
      v21 = *(_QWORD *)(v0 + v20);
      if (v21)
      {
        v22 = swift_allocObject();
        swift_weakInit();
        swift_beginAccess();
        v23 = *(_QWORD *)(v21 + 16);
        *(_QWORD *)(v21 + 16) = sub_23A185E40;
        *(_QWORD *)(v21 + 24) = v22;
        sub_23A13A1E4(v23);
      }
      v25 = 1;
      sub_23A1772DC(&v25);
      if (*(_QWORD *)(v0 + v20))
      {
        swift_retain();
        sub_23A1660C4();
        swift_release();
        sub_23A125F1C(v17, v16);
        return sub_23A13AC20((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
      }
      else
      {
        sub_23A13AC20((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
        return sub_23A125F1C(v17, v16);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23A1780A0(char *a1)
{
  char v1;
  uint64_t Strong;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if ((v1 & 1) != 0)
    {
      if (qword_2569443B0 != -1)
        swift_once();
      v3 = sub_23A19AE28();
      __swift_project_value_buffer(v3, (uint64_t)qword_25694EB88);
      swift_retain_n();
      v4 = sub_23A19AE10();
      v5 = sub_23A19B6BC();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = swift_slowAlloc();
        v14 = v7;
        *(_DWORD *)v6 = 136315138;
        v8 = TransferClient.State.description.getter();
        sub_23A14071C(v8, v9, &v14);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        v10 = "[AttestationSetup] Advertised attestation-endpoint removed, state=%s";
LABEL_12:
        _os_log_impl(&dword_23A123000, v4, v5, v10, v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v7, -1, -1);
        MEMORY[0x23B842FA4](v6, -1, -1);
        swift_release();

        return;
      }
LABEL_13:

      swift_release_n();
      return;
    }
    if (*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 1u)
    {
      if (qword_2569443B0 != -1)
        swift_once();
      v11 = sub_23A19AE28();
      __swift_project_value_buffer(v11, (uint64_t)qword_25694EB88);
      swift_retain_n();
      v4 = sub_23A19AE10();
      v5 = sub_23A19B6BC();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = swift_slowAlloc();
        *(_DWORD *)v6 = 136315138;
        v14 = v7;
        v12 = TransferClient.State.description.getter();
        sub_23A14071C(v12, v13, &v14);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        v10 = "[AttestationSetup] Ignoring add of file-transfer-endpoint, state=%s";
        goto LABEL_12;
      }
      goto LABEL_13;
    }
    sub_23A1783B8();
    swift_release();
  }
}

uint64_t sub_23A1783B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint8_t *v38;
  int v39;
  uint64_t v40;
  os_log_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;

  v1 = v0;
  v44 = type metadata accessor for NetworkDescriptor();
  v2 = MEMORY[0x24BDAC7A8](v44);
  v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v37 - v5;
  v7 = sub_23A19AD2C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19B35C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (unint64_t)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(v1 + 16);
  *(_QWORD *)v14 = v15;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v43 = v15;
  v16 = sub_23A19B374();
  result = (*(uint64_t (**)(unint64_t, uint64_t))(v12 + 8))(v14, v11);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8);
  if (v14 >> 60 == 15)
    return result;
  v16 = *v18;
  sub_23A131DF0(*v18, *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8));
  if (qword_2569443B0 != -1)
    goto LABEL_14;
LABEL_4:
  v19 = sub_23A19AE28();
  __swift_project_value_buffer(v19, (uint64_t)qword_25694EB88);
  sub_23A13A53C(v16, v14);
  sub_23A131DF0(v16, v14);
  v20 = sub_23A19AE10();
  v21 = sub_23A19B6BC();
  v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v41 = v20;
    v23 = swift_slowAlloc();
    v39 = v22;
    v24 = (uint8_t *)v23;
    v40 = swift_slowAlloc();
    v45[1] = v14;
    v46 = v40;
    v42 = v4;
    *(_DWORD *)v24 = 136315138;
    v37[1] = v24 + 4;
    v38 = v24;
    v45[0] = v16;
    SharedSecret.advertisementIdentifer.getter();
    sub_23A131E34(&qword_256946070, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v25 = sub_23A19B8FC();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v45[0] = sub_23A14071C(v25, v27, &v46);
    v4 = v42;
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A125F1C(v16, v14);
    sub_23A125F1C(v16, v14);
    v20 = v41;
    v28 = v38;
    _os_log_impl(&dword_23A123000, v41, (os_log_type_t)v39, "[Connect] Starting attestation-channel with Bonjour attestationServiceUUID=%s", v38, 0xCu);
    v29 = v40;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v29, -1, -1);
    MEMORY[0x23B842FA4](v28, -1, -1);
  }
  else
  {
    sub_23A125F1C(v16, v14);
    sub_23A125F1C(v16, v14);
  }

  *(_QWORD *)v6 = v16;
  *((_QWORD *)v6 + 1) = v14;
  v6[16] = 0;
  swift_storeEnumTagMultiPayload();
  sub_23A13ABDC((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoSerialChannelClient();
  swift_allocObject();
  v30 = v43;
  v31 = v43;
  sub_23A13A53C(v16, v14);
  v32 = sub_23A15270C(0xD000000000000013, 0x800000023A1A2050, (uint64_t)v4, v30);
  v33 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel) = v32;
  swift_release();
  v34 = *(_QWORD *)(v1 + v33);
  if (v34)
  {
    v35 = swift_allocObject();
    swift_weakInit();
    v36 = *(_QWORD *)(v34 + 16);
    *(_QWORD *)(v34 + 16) = sub_23A185E48;
    *(_QWORD *)(v34 + 24) = v35;
    sub_23A13A1E4(v36);
  }
  LOBYTE(v45[0]) = 2;
  sub_23A1772DC((char *)v45);
  if (*(_QWORD *)(v1 + v33))
  {
    swift_retain();
    sub_23A152B48();
    swift_release();
    sub_23A125F1C(v16, v14);
    return sub_23A13AC20((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  }
  else
  {
    sub_23A13AC20((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
    return sub_23A125F1C(v16, v14);
  }
}

uint64_t sub_23A17886C(char a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A1788C8(a1 & 1);
    return swift_release();
  }
  return result;
}

void sub_23A1788C8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  unsigned int v11;
  uint64_t *v12;
  void (*v13)(_QWORD, _QWORD);
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v1;
  v5 = sub_23A19B35C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v3 + 16);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
LABEL_8:
    v15 = sub_23A19AE28();
    __swift_project_value_buffer(v15, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v16 = sub_23A19AE10();
    v17 = sub_23A19B6BC();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_DWORD *)v18 = 136315138;
      v23 = v19;
      LOBYTE(v22) = *(_BYTE *)(v3 + v2);
      v20 = TransferClient.State.description.getter();
      v22 = sub_23A14071C(v20, v21, &v23);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v16, v17, "Disconnect: Ignoring attestation-channel state change, state=%s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v19, -1, -1);
      MEMORY[0x23B842FA4](v18, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return;
  }
  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel))
    return;
  v2 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  v11 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v11 > 0xF)
  {
    if (qword_2569443B0 == -1)
      goto LABEL_8;
    goto LABEL_17;
  }
  if ((a1 & 1) != 0)
  {
    if (v11 <= 0xB)
    {
      LOBYTE(v23) = 2;
      sub_23A179838((unsigned __int8 *)&v23, 0xD00000000000001FLL, 0x800000023A1A2070);
    }
  }
  else
  {
    LOBYTE(v23) = 3;
    sub_23A1772DC((char *)&v23);
    v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
    v13 = *(void (**)(_QWORD, _QWORD))(v3
                                                + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
    if (v13)
    {
      swift_retain();
      v13(0, 0);
      sub_23A13A1E4((uint64_t)v13);
      v14 = *v12;
    }
    else
    {
      v14 = 0;
    }
    *v12 = 0;
    v12[1] = 0;
    sub_23A13A1E4(v14);
    sub_23A178BCC();
  }
}

void sub_23A178BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[4];
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76[3];
  uint64_t v77;

  v1 = v0;
  v2 = sub_23A19ADEC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v68[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23A19B35C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(void **)(v1 + 16);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_42:
    swift_once();
LABEL_14:
    v31 = sub_23A19AE28();
    __swift_project_value_buffer(v31, (uint64_t)qword_25694EB88);
    v32 = sub_23A19AE10();
    v33 = sub_23A19B6A4();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v76[0] = v35;
      *(_DWORD *)v34 = 136315138;
      v36 = sub_23A17B978();
      v77 = sub_23A14071C(v36, v37, v76);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v38 = "[Initiate SPAKE2] Unexpected state, %s";
LABEL_20:
      _os_log_impl(&dword_23A123000, v32, v33, v38, v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v35, -1, -1);
      MEMORY[0x23B842FA4](v34, -1, -1);
      swift_release_n();

      return;
    }
LABEL_21:

LABEL_22:
    swift_release_n();
    return;
  }
  v12 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v12 == 3)
  {
LABEL_5:
    swift_retain_n();
    goto LABEL_6;
  }
  if (v12 != 7)
  {
    swift_retain_n();
    goto LABEL_13;
  }
  v13 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult);
  if (v13 == 2)
    goto LABEL_5;
  if ((v13 & 1) == 0)
  {
    swift_retain_n();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v54 = sub_23A19B908();
  swift_retain_n();
  swift_bridgeObjectRelease();
  if ((v54 & 1) != 0)
  {
LABEL_13:
    if (qword_2569443B0 == -1)
      goto LABEL_14;
    goto LABEL_42;
  }
LABEL_6:
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel))
  {
    if (qword_2569443B0 != -1)
      swift_once();
    v39 = sub_23A19AE28();
    __swift_project_value_buffer(v39, (uint64_t)qword_25694EB88);
    v32 = sub_23A19AE10();
    v33 = sub_23A19B6BC();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v76[0] = v35;
      *(_DWORD *)v34 = 136315138;
      v40 = sub_23A17B978();
      v77 = sub_23A14071C(v40, v41, v76);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v38 = "[Initiate SPAKE2] Could not find attestation-channel, %s";
      goto LABEL_20;
    }
    goto LABEL_21;
  }
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_pinCode + 8);
  if (!v14)
  {
    v42 = qword_2569443B0;
    swift_retain();
    if (v42 != -1)
      swift_once();
    v43 = sub_23A19AE28();
    __swift_project_value_buffer(v43, (uint64_t)qword_25694EB88);
    v44 = sub_23A19AE10();
    v45 = sub_23A19B6BC();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v76[0] = v47;
      *(_DWORD *)v46 = 136315138;
      v48 = sub_23A17B978();
      v77 = sub_23A14071C(v48, v49, v76);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v44, v45, "[Initiate SPAKE2] Skipping, waiting for auth() to called first, %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v47, -1, -1);
      MEMORY[0x23B842FA4](v46, -1, -1);
      swift_release_n();

    }
    else
    {

      swift_release_n();
    }
    goto LABEL_38;
  }
  v15 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount;
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_pinCode);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount) = v18;
    v19 = qword_2569443B0;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v19 == -1)
      goto LABEL_10;
  }
  swift_once();
LABEL_10:
  v20 = sub_23A19AE28();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_25694EB88);
  swift_bridgeObjectRetain_n();
  v73 = v21;
  v22 = sub_23A19AE10();
  v23 = sub_23A19B6BC();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc();
    v69 = v24;
    v26 = v25;
    v70 = swift_slowAlloc();
    v76[0] = v70;
    *(_DWORD *)v26 = 136315394;
    v72 = v15;
    swift_bridgeObjectRetain();
    v77 = sub_23A14071C(v7, v14, v76);
    v71 = v7;
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 2080;
    v27 = sub_23A17B978();
    v77 = sub_23A14071C(v27, v28, v76);
    v7 = v71;
    v15 = v72;
    sub_23A19B728();
    swift_bridgeObjectRelease();
    v29 = v22;
    _os_log_impl(&dword_23A123000, v22, (os_log_type_t)v69, "[Initiate SPAKE2] pin=%s, %s", (uint8_t *)v26, 0x16u);
    v30 = v70;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v30, -1, -1);
    MEMORY[0x23B842FA4](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v76[0] = v7;
  v76[1] = v14;
  v50 = *(_QWORD *)(v1 + v15);
  type metadata accessor for Spake2Verifier(0);
  swift_allocObject();
  v51 = sub_23A18AB14(v76, v50);
  if (!v51)
  {
    LOBYTE(v76[0]) = 0;
    sub_23A179838((unsigned __int8 *)v76, 0xD00000000000001FLL, 0x800000023A1A1CD0);
    swift_release();
    goto LABEL_22;
  }
  v52 = v51;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier) = v51;
  swift_retain();
  swift_release();
  v53 = v52 + OBJC_IVAR____TtC5Cosmo14Spake2Verifier_verifier;
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v53, v2);
  v55 = sub_23A19ADE0();
  v57 = v56;
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  sub_23A131DF0(v55, v57);
  sub_23A131DF0(v55, v57);
  sub_23A131DF0(v55, v57);
  v58 = sub_23A19AE10();
  v59 = sub_23A19B6BC();
  if (os_log_type_enabled(v58, v59))
  {
    v61 = swift_slowAlloc();
    v73 = swift_slowAlloc();
    v77 = v73;
    *(_DWORD *)v61 = 136315394;
    v62 = sub_23A19AC6C();
    v75 = sub_23A14071C(v62, v63, &v77);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A125ED8(v55, v57);
    sub_23A125ED8(v55, v57);
    *(_WORD *)(v61 + 12) = 2080;
    v64 = sub_23A17B978();
    v75 = sub_23A14071C(v64, v65, &v77);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v58, v59, "[SPAKE2 Share] Sending shareV=%s, %s", (uint8_t *)v61, 0x16u);
    v66 = v73;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v66, -1, -1);
    MEMORY[0x23B842FA4](v61, -1, -1);
  }
  else
  {
    sub_23A125ED8(v55, v57);
    sub_23A125ED8(v55, v57);
  }

  v67 = swift_allocObject();
  swift_weakInit();
  sub_23A170AAC(v55, v57, (uint64_t)sub_23A185890, v67, (uint64_t)&unk_250B269F8, (uint64_t)sub_23A1858B4, (uint64_t)&block_descriptor_92);
  swift_release();
  LOBYTE(v77) = 4;
  sub_23A1772DC((char *)&v77);
  sub_23A125ED8(v55, v57);
  swift_release_n();
  sub_23A125ED8(v55, v57);
  swift_release();
LABEL_38:
  swift_release();
}

uint64_t sub_23A179838(unsigned __int8 *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;
  void *v19;
  uint64_t result;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t aBlock[6];

  v4 = v3;
  v8 = sub_23A19B32C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v55 = (char *)v46 - v12;
  v51 = sub_23A19B2D8();
  MEMORY[0x24BDAC7A8](v51);
  v53 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23A19B35C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (_QWORD *)((char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *a1;
  v19 = *(void **)(v4 + 16);
  *v17 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  v52 = v19;
  LOBYTE(v19) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v19 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_4;
  }
  v50 = v9;
  v9 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  if (*(unsigned __int8 *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 0xFu)
    return result;
  v47 = v8;
  v49 = a2;
  if (qword_2569443B0 != -1)
    goto LABEL_16;
LABEL_4:
  v21 = sub_23A19AE28();
  __swift_project_value_buffer(v21, (uint64_t)qword_25694EB88);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v22 = sub_23A19AE10();
  v23 = sub_23A19B6BC();
  v24 = os_log_type_enabled(v22, v23);
  v48 = a3;
  if (v24)
  {
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    aBlock[0] = v26;
    *(_DWORD *)v25 = 136315394;
    swift_bridgeObjectRetain();
    v56 = sub_23A14071C(v49, a3, aBlock);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    LOBYTE(v56) = *(_BYTE *)(v4 + v9);
    v27 = TransferClient.State.description.getter();
    v56 = sub_23A14071C(v27, v28, aBlock);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v22, v23, "[Close] Closing, reason='%s', state=%s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v26, -1, -1);
    MEMORY[0x23B842FA4](v25, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  LOBYTE(aBlock[0]) = 16;
  sub_23A1772DC((char *)aBlock);
  if (*(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient) && v18 == 3)
  {
    swift_retain_n();
    swift_retain();
    v29 = sub_23A19AE10();
    v30 = sub_23A19B6BC();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      *(_DWORD *)v31 = 136315138;
      aBlock[0] = v32;
      v46[1] = v31 + 4;
      LOBYTE(v56) = *(_BYTE *)(v4 + v9);
      v33 = TransferClient.State.description.getter();
      v56 = sub_23A14071C(v33, v34, aBlock);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v29, v30, "[Close] Sending request to TransferHost, state=%s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v32, -1, -1);
      MEMORY[0x23B842FA4](v31, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v35 = v48;
    v36 = swift_allocObject();
    swift_weakInit();
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v36;
    *(_BYTE *)(v37 + 24) = 3;
    v38 = v49;
    *(_QWORD *)(v37 + 32) = v49;
    *(_QWORD *)(v37 + 40) = v35;
    aBlock[4] = (uint64_t)sub_23A1855C4;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23A126ED0;
    aBlock[3] = (uint64_t)&block_descriptor_36;
    _Block_copy(aBlock);
    v56 = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
    sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
    sub_23A19B764();
    sub_23A19B350();
    swift_allocObject();
    v39 = sub_23A19B338();
    swift_release();
    swift_release();
    v40 = v54;
    sub_23A19B320();
    v41 = v55;
    MEMORY[0x23B842254](v40, *(double *)(v4 + 24));
    v42 = *(void (**)(char *, uint64_t))(v50 + 8);
    v43 = v47;
    v42(v40, v47);
    sub_23A19B6E0();
    v42(v41, v43);
    v44 = swift_allocObject();
    swift_weakInit();
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = v44;
    *(_QWORD *)(v45 + 24) = v39;
    *(_BYTE *)(v45 + 32) = 3;
    *(_QWORD *)(v45 + 40) = v38;
    *(_QWORD *)(v45 + 48) = v35;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23A1733E0(1, (uint64_t)sub_23A185608, v45, (uint64_t)&unk_250B26818, (uint64_t)sub_23A185628, (uint64_t)&block_descriptor_46);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    LOBYTE(aBlock[0]) = v18;
    return sub_23A185254((char *)aBlock);
  }
}

void sub_23A179F5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  char v11;
  void *v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  os_log_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[2];
  unsigned __int8 v70;
  uint64_t v71;

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 17);
  v12 = *(void **)(v2 + 16);
  *v7 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v13 = v12;
  LOBYTE(v12) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
LABEL_11:
    v26 = sub_23A19AE28();
    __swift_project_value_buffer(v26, (uint64_t)qword_25694EB88);
    v27 = sub_23A19AE10();
    v28 = sub_23A19B6BC();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v69[0] = v30;
      *(_DWORD *)v29 = 136315138;
      v31 = sub_23A17B978();
      v71 = sub_23A14071C(v31, v32, v69);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v33 = "[SPAKE2 Share Response] Disconnect detected, ignoring, %s";
LABEL_17:
      _os_log_impl(&dword_23A123000, v27, v28, v33, v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v30, -1, -1);
      MEMORY[0x23B842FA4](v29, -1, -1);
      swift_release_n();

      return;
    }
LABEL_18:

LABEL_19:
    swift_release_n();
    return;
  }
  v14 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v14 > 0xF)
  {
    v25 = qword_2569443B0;
    swift_retain_n();
    if (v25 == -1)
      goto LABEL_11;
    goto LABEL_35;
  }
  if (v14 != 4)
  {
    v34 = qword_2569443B0;
    swift_retain_n();
    if (v34 != -1)
      swift_once();
    v35 = sub_23A19AE28();
    __swift_project_value_buffer(v35, (uint64_t)qword_25694EB88);
    v27 = sub_23A19AE10();
    v28 = sub_23A19B6A4();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v69[0] = v30;
      *(_DWORD *)v29 = 136315138;
      v36 = sub_23A17B978();
      v71 = sub_23A14071C(v36, v37, v69);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v33 = "[SPAKE2 Share Response] Unexpected state, %s";
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier);
  if (v15)
  {
    if ((v11 & 1) != 0)
    {
      swift_retain_n();
      swift_retain();
      sub_23A185978(v9, v8, v10, 1);
      if (qword_2569443B0 != -1)
        swift_once();
      v16 = sub_23A19AE28();
      __swift_project_value_buffer(v16, (uint64_t)qword_25694EB88);
      sub_23A13A924(v9, v8, v10);
      v17 = sub_23A19AE10();
      v18 = sub_23A19B6A4();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        v67 = swift_slowAlloc();
        v71 = v67;
        *(_DWORD *)v19 = 136315394;
        v68 = v15;
        v69[0] = v9;
        v69[1] = v8;
        v70 = v10;
        sub_23A13A924(v9, v8, v10);
        v20 = sub_23A19B518();
        v69[0] = sub_23A14071C(v20, v21, &v71);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A185928(v9, v8, v10, 1);
        sub_23A185928(v9, v8, v10, 1);
        *(_WORD *)(v19 + 12) = 2080;
        v22 = sub_23A17B978();
        v69[0] = sub_23A14071C(v22, v23, &v71);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v17, v18, "[SPAKE2 Share Response] Failed to receive Spake2Share-response, error=%s %s", (uint8_t *)v19, 0x16u);
        v24 = v67;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v24, -1, -1);
        MEMORY[0x23B842FA4](v19, -1, -1);
      }
      else
      {
        sub_23A185928(v9, v8, v10, 1);
        sub_23A185928(v9, v8, v10, 1);
      }

      LOBYTE(v69[0]) = 2;
      sub_23A179838((unsigned __int8 *)v69, 0xD00000000000001CLL, 0x800000023A1A1D60);
      swift_release();
      goto LABEL_19;
    }
    LOBYTE(v69[0]) = 5;
    swift_retain_n();
    swift_retain();
    sub_23A185978(v9, v8, v10, 0);
    sub_23A1772DC((char *)v69);
    if (qword_2569443B0 != -1)
      swift_once();
    v38 = sub_23A19AE28();
    v39 = __swift_project_value_buffer(v38, (uint64_t)qword_25694EB88);
    sub_23A185978(v9, v8, v10, 0);
    sub_23A131DF0(v9, v8);
    v40 = sub_23A19AE10();
    v41 = sub_23A19B6BC();
    v42 = os_log_type_enabled(v40, v41);
    v68 = v15;
    if (v42)
    {
      v43 = swift_slowAlloc();
      v66 = swift_slowAlloc();
      v69[0] = v66;
      *(_DWORD *)v43 = 136315394;
      v67 = v39;
      v44 = sub_23A19AC6C();
      v71 = sub_23A14071C(v44, v45, v69);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A185928(v9, v8, v10, 0);
      sub_23A185928(v9, v8, v10, 0);
      *(_WORD *)(v43 + 12) = 2080;
      v46 = sub_23A17B978();
      v71 = sub_23A14071C(v46, v47, v69);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v40, v41, "[SPAKE2 Share Response] shareP=%s, %s", (uint8_t *)v43, 0x16u);
      v48 = v66;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v48, -1, -1);
      MEMORY[0x23B842FA4](v43, -1, -1);
    }
    else
    {
      sub_23A185928(v9, v8, v10, 0);
      sub_23A185928(v9, v8, v10, 0);
    }

    swift_beginAccess();
    sub_23A131DF0(v9, v8);
    v49 = sub_23A19ADC8();
    v51 = v50;
    swift_endAccess();
    sub_23A185928(v9, v8, v10, 0);
    sub_23A131DF0(v49, v51);
    sub_23A131DF0(v49, v51);
    sub_23A131DF0(v49, v51);
    v52 = sub_23A19AE10();
    v53 = sub_23A19B6BC();
    v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      v55 = swift_slowAlloc();
      LODWORD(v66) = v54;
      v56 = v55;
      v67 = swift_slowAlloc();
      v69[0] = v67;
      *(_DWORD *)v56 = 136315394;
      v57 = sub_23A19AC6C();
      v71 = sub_23A14071C(v57, v58, v69);
      v65 = v52;
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A125ED8(v49, v51);
      sub_23A125ED8(v49, v51);
      *(_WORD *)(v56 + 12) = 2080;
      v59 = sub_23A17B978();
      v71 = sub_23A14071C(v59, v60, v69);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v61 = v65;
      _os_log_impl(&dword_23A123000, v65, (os_log_type_t)v66, "[SPAKE2 Confirm] Sending confirmV=%s %s", (uint8_t *)v56, 0x16u);
      v62 = v67;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v62, -1, -1);
      MEMORY[0x23B842FA4](v56, -1, -1);

    }
    else
    {
      sub_23A125ED8(v49, v51);
      sub_23A125ED8(v49, v51);

    }
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel))
    {
      v63 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_23A170AAC(v49, v51, (uint64_t)sub_23A185984, v63, (uint64_t)&unk_250B26A98, (uint64_t)sub_23A1859A8, (uint64_t)&block_descriptor_105);
      swift_release();
      swift_release();
    }
    LOBYTE(v69[0]) = 6;
    sub_23A1772DC((char *)v69);
    sub_23A125ED8(v49, v51);
    sub_23A185928(v9, v8, v10, 0);
    swift_release_n();
    sub_23A125ED8(v49, v51);
    swift_release();
  }
  else
  {
    LOBYTE(v69[0]) = 0;
    swift_retain();
    sub_23A179838((unsigned __int8 *)v69, 0xD000000000000038, 0x800000023A1A1D20);
    swift_release();
  }
}

uint64_t sub_23A17AC80(uint64_t *a1, uint64_t a2, void (*a3)(_QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t result;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((_BYTE *)a1 + 16);
  v7 = *((_BYTE *)a1 + 17);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9[0] = v4;
    v9[1] = v5;
    v10 = v6;
    v11 = v7;
    a3(v9);
    return swift_release();
  }
  return result;
}

void sub_23A17AD04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  char *v9;
  unsigned __int8 v10;
  char v11;
  void *v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[2];
  unsigned __int8 v64;
  uint64_t v65;

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(char **)a1;
  v8 = *(char **)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 17);
  v12 = *(void **)(v2 + 16);
  *v7 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v13 = v12;
  LOBYTE(v12) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
LABEL_11:
    v28 = sub_23A19AE28();
    __swift_project_value_buffer(v28, (uint64_t)qword_25694EB88);
    v29 = sub_23A19AE10();
    v30 = sub_23A19B6BC();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v63[0] = v32;
      *(_DWORD *)v31 = 136315138;
      v33 = sub_23A17B978();
      v65 = sub_23A14071C(v33, v34, v63);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v35 = "[SPAKE2 Confirm Response] Disconnect detected, ignoring, %s";
LABEL_17:
      _os_log_impl(&dword_23A123000, v29, v30, v35, v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v32, -1, -1);
      MEMORY[0x23B842FA4](v31, -1, -1);
      swift_release_n();

      return;
    }
LABEL_18:

    goto LABEL_19;
  }
  v14 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v14 > 0xF)
  {
    v27 = qword_2569443B0;
    swift_retain_n();
    if (v27 == -1)
      goto LABEL_11;
    goto LABEL_35;
  }
  if (v14 != 6)
  {
    v36 = qword_2569443B0;
    swift_retain_n();
    if (v36 != -1)
      swift_once();
    v37 = sub_23A19AE28();
    __swift_project_value_buffer(v37, (uint64_t)qword_25694EB88);
    v29 = sub_23A19AE10();
    v30 = sub_23A19B6A4();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v63[0] = v32;
      *(_DWORD *)v31 = 136315138;
      v38 = sub_23A17B978();
      v65 = sub_23A14071C(v38, v39, v63);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      v35 = "[SPAKE2 Confirm Response] Unexpected state, %s";
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier);
  if (v15)
  {
    if ((v11 & 1) != 0)
    {
      swift_retain_n();
      swift_retain();
      sub_23A185978((uint64_t)v9, (uint64_t)v8, v10, 1);
      if (qword_2569443B0 != -1)
        swift_once();
      v16 = sub_23A19AE28();
      __swift_project_value_buffer(v16, (uint64_t)qword_25694EB88);
      sub_23A13A924((uint64_t)v9, (uint64_t)v8, v10);
      v17 = sub_23A19AE10();
      v18 = sub_23A19B6A4();
      v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        v20 = swift_slowAlloc();
        LODWORD(v60) = v19;
        v21 = v20;
        v61 = swift_slowAlloc();
        v65 = v61;
        *(_DWORD *)v21 = 136315394;
        v63[0] = (uint64_t)v9;
        v63[1] = (uint64_t)v8;
        v64 = v10;
        sub_23A13A924((uint64_t)v9, (uint64_t)v8, v10);
        v22 = sub_23A19B518();
        v63[0] = sub_23A14071C(v22, v23, &v65);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 1);
        sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 1);
        *(_WORD *)(v21 + 12) = 2080;
        v24 = sub_23A17B978();
        v63[0] = sub_23A14071C(v24, v25, &v65);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v17, (os_log_type_t)v60, "[SPAKE2 Share Confirm] Failed to receive Spake2Confirm-response, error=%s %s", (uint8_t *)v21, 0x16u);
        v26 = v61;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v26, -1, -1);
        MEMORY[0x23B842FA4](v21, -1, -1);
      }
      else
      {
        sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 1);
        sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 1);
      }

      LOBYTE(v63[0]) = 2;
      sub_23A179838((unsigned __int8 *)v63, 0xD00000000000001ELL, 0x800000023A1A1DF0);
    }
    else
    {
      LOBYTE(v63[0]) = 7;
      swift_retain_n();
      swift_retain();
      sub_23A185978((uint64_t)v9, (uint64_t)v8, v10, 0);
      sub_23A1772DC((char *)v63);
      if (qword_2569443B0 != -1)
        swift_once();
      v40 = sub_23A19AE28();
      v41 = __swift_project_value_buffer(v40, (uint64_t)qword_25694EB88);
      sub_23A185978((uint64_t)v9, (uint64_t)v8, v10, 0);
      sub_23A131DF0((uint64_t)v9, (unint64_t)v8);
      v42 = sub_23A19AE10();
      v43 = sub_23A19B6BC();
      v44 = os_log_type_enabled(v42, v43);
      v62 = v15;
      if (v44)
      {
        v45 = swift_slowAlloc();
        v60 = swift_slowAlloc();
        v63[0] = v60;
        *(_DWORD *)v45 = 136315394;
        v46 = sub_23A19AC6C();
        v61 = v41;
        v65 = sub_23A14071C(v46, v47, v63);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 0);
        sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 0);
        *(_WORD *)(v45 + 12) = 2080;
        v48 = sub_23A17B978();
        v65 = sub_23A14071C(v48, v49, v63);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v42, v43, "[SPAKE2 Confirm Response] confirmP=%s, %s", (uint8_t *)v45, 0x16u);
        v50 = v60;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v50, -1, -1);
        MEMORY[0x23B842FA4](v45, -1, -1);
      }
      else
      {
        sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 0);
        sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 0);
      }

      sub_23A131DF0((uint64_t)v9, (unint64_t)v8);
      sub_23A18B054(v9, v8);
      sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 0);
      *(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult) = 0;
      v51 = sub_23A19AE10();
      v52 = sub_23A19B6BC();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = swift_slowAlloc();
        v63[0] = v54;
        *(_DWORD *)v53 = 136315138;
        v61 = (uint64_t)(v53 + 4);
        v55 = sub_23A17B978();
        v65 = sub_23A14071C(v55, v56, v63);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v51, v52, "[SPAKE2 Confirm Response] PIN validated, %s", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v54, -1, -1);
        MEMORY[0x23B842FA4](v53, -1, -1);
      }

      sub_23A17BA6C();
      v57 = v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
      swift_beginAccess();
      if (MEMORY[0x23B843028](v57))
      {
        v58 = *(_QWORD *)(v57 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 8))(v2, ObjectType, v58);
        sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 0);
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_19;
      }
      sub_23A185928((uint64_t)v9, (uint64_t)v8, v10, 0);
    }
    swift_release();
LABEL_19:
    swift_release_n();
    return;
  }
  LOBYTE(v63[0]) = 0;
  swift_retain();
  sub_23A179838((unsigned __int8 *)v63, 0xD00000000000003ALL, 0x800000023A1A1DB0);
  swift_release();
}

uint64_t sub_23A17B978()
{
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  TransferClient.State.description.getter();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 0x612D747365747461;
}

uint64_t sub_23A17BA6C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  NSObject *v59;
  __SecKey *KeyPair;
  uint64_t v61;
  uint64_t v62[2];

  v4 = v0;
  v5 = sub_23A19B35C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v4 + 16);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v10 = v9;
  v11 = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_22:
    swift_once();
    goto LABEL_4;
  }
  v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier);
  if (!v11)
  {
    LOBYTE(v62[0]) = 0;
    return sub_23A179838((unsigned __int8 *)v62, 0xD000000000000037, 0x800000023A1A1E10);
  }
  v12 = (void *)*MEMORY[0x24BDE9060];
  swift_retain();
  KeyPair = createKeyPair(v12, 256);
  v2 = secIdentityFromKeyPair(KeyPair);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localSecIdentity) = v2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v13 = publicKeyFromIdentity(v2);
  v1 = sub_23A19AC78();
  v3 = v14;

  v15 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey);
  v16 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey);
  v17 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey + 8);
  *v15 = v1;
  v15[1] = v3;
  sub_23A131DF0(v1, v3);
  sub_23A125F1C(v16, v17);
  if (qword_2569443B0 != -1)
    goto LABEL_22;
LABEL_4:
  v18 = sub_23A19AE28();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_25694EB88);
  sub_23A131DF0(v1, v3);
  swift_retain();
  sub_23A131DF0(v1, v3);
  swift_retain();
  v20 = sub_23A19AE10();
  v21 = sub_23A19B6BC();
  v22 = os_log_type_enabled(v20, v21);
  v59 = v2;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v56 = v19;
    v25 = v24;
    v62[0] = v24;
    *(_DWORD *)v23 = 136315394;
    v26 = sub_23A19AC6C();
    v57 = v11;
    v61 = sub_23A14071C(v26, v27, v62);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A125ED8(v1, v3);
    sub_23A125ED8(v1, v3);
    *(_WORD *)(v23 + 12) = 2080;
    LOBYTE(v61) = *(_BYTE *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
    v28 = TransferClient.State.description.getter();
    v61 = sub_23A14071C(v28, v29, v62);
    v11 = v57;
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v20, v21, "[FileTransferSetup] Generated localPublicKey=%s, state=%s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v25, -1, -1);
    MEMORY[0x23B842FA4](v23, -1, -1);

  }
  else
  {
    sub_23A125ED8(v1, v3);
    sub_23A125ED8(v1, v3);

    swift_release_n();
  }
  v31 = sub_23A18A218(v1, v3);
  v58 = v3;
  v33 = v32;
  v56 = v1;
  if (v32 >> 60 == 15)
  {
    swift_retain_n();
    v34 = sub_23A19AE10();
    v35 = sub_23A19B6A4();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v62[0] = v37;
      *(_DWORD *)v36 = 136315138;
      LOBYTE(v61) = *(_BYTE *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
      v38 = TransferClient.State.description.getter();
      v61 = sub_23A14071C(v38, v39, v62);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v34, v35, "[FileTransferSetup] Spake2Verifier.encrypt() returned nil, %s", v36, 0xCu);
      swift_arrayDestroy();
      v40 = v37;
      v3 = v58;
      MEMORY[0x23B842FA4](v40, -1, -1);
      MEMORY[0x23B842FA4](v36, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v62[0]) = 0;
    sub_23A179838((unsigned __int8 *)v62, 0xD000000000000025, 0x800000023A1A1E80);

    swift_unknownObjectRelease();
    sub_23A125ED8(v56, v3);
  }
  else
  {
    v41 = v31;
    v42 = sub_23A19AC6C();
    v44 = v43;
    sub_23A125F1C(v41, v33);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v45 = sub_23A19AE10();
    v46 = sub_23A19B6BC();
    v47 = os_log_type_enabled(v45, v46);
    v57 = v11;
    if (v47)
    {
      v48 = swift_slowAlloc();
      v49 = v42;
      v50 = swift_slowAlloc();
      v62[0] = v50;
      *(_DWORD *)v48 = 136315394;
      swift_bridgeObjectRetain();
      v61 = sub_23A14071C(v49, v44, v62);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v48 + 12) = 2080;
      LOBYTE(v61) = *(_BYTE *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
      v51 = TransferClient.State.description.getter();
      v61 = sub_23A14071C(v51, v52, v62);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v45, v46, "[FileTransferSetup] Sending encryptedLocalPublicKey=%s, state=%s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v50, -1, -1);
      MEMORY[0x23B842FA4](v48, -1, -1);

      v42 = v49;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    v53 = v58;
    v54 = v56;
    if (*(_QWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel))
    {
      v55 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_23A170CBC(v42, v44, (uint64_t)sub_23A185AA0, v55);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    LOBYTE(v62[0]) = 8;
    sub_23A1772DC((char *)v62);

    swift_unknownObjectRelease();
    sub_23A125ED8(v54, v53);
  }
  return swift_release();
}

uint64_t sub_23A17C494(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t result;
  _QWORD v7[4];
  char v8;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = *((_BYTE *)a1 + 32);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7[0] = v1;
    v7[1] = v2;
    v7[2] = v3;
    v7[3] = v4;
    v8 = v5;
    sub_23A17C51C((uint64_t)v7);
    return swift_release();
  }
  return result;
}

void sub_23A17C51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  NSObject *v19;
  unint64_t v20;
  char v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  os_log_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  NSObject *v70;
  NSObject *v71;
  os_log_type_t v72;
  int v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  os_log_t v78;
  uint64_t v79;
  unint64_t v80;
  NSObject *v81;
  unint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  os_log_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  unint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  void (*v117)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v118;
  NSObject *v119;
  _BYTE *v120;
  _BYTE *v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  void (*v133)(_BYTE *, uint64_t);
  uint64_t v134;
  unint64_t v135;
  os_log_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  _BYTE v141[4];
  int v142;
  os_log_t v143;
  uint64_t v144;
  _QWORD *v145;
  os_log_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _BYTE *v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  os_log_t v156;
  uint64_t v157;
  uint64_t v158[2];
  unsigned __int8 v159;
  uint64_t v160[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256944500);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v141[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v141[-v8];
  v10 = sub_23A19AD2C();
  v154 = *(_QWORD *)(v10 - 8);
  v155 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v152 = &v141[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v153 = &v141[-v13];
  v14 = sub_23A19B35C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v141[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = *(_QWORD *)(a1 + 8);
  v19 = *(NSObject **)(a1 + 16);
  v156 = *(os_log_t *)a1;
  v157 = v18;
  v20 = *(_QWORD *)(a1 + 24);
  v21 = *(_BYTE *)(a1 + 32);
  v22 = *(void **)(v2 + 16);
  *v17 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  v23 = v22;
  v24 = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v24 & 1) == 0)
  {
    __break(1u);
    goto LABEL_56;
  }
  v25 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  v26 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  v27 = v2;
  if (v26 > 0xF)
  {
    if (qword_2569443B0 != -1)
      swift_once();
    v41 = sub_23A19AE28();
    __swift_project_value_buffer(v41, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v42 = sub_23A19AE10();
    v43 = sub_23A19B6BC();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v45 = swift_slowAlloc();
      *(_DWORD *)v44 = 136315138;
      v158[0] = v45;
      LOBYTE(v160[0]) = *(_BYTE *)(v27 + v25);
      v46 = TransferClient.State.description.getter();
      v160[0] = sub_23A14071C(v46, v47, v158);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      v48 = "[FileTransferSetup Response] Disconnect detected, ignoring, state=%s";
LABEL_18:
      _os_log_impl(&dword_23A123000, v42, v43, v48, v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v45, -1, -1);
      MEMORY[0x23B842FA4](v44, -1, -1);

      return;
    }
LABEL_19:

    swift_release_n();
    return;
  }
  if (v26 != 8)
  {
    if (qword_2569443B0 != -1)
      swift_once();
    v49 = sub_23A19AE28();
    __swift_project_value_buffer(v49, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v42 = sub_23A19AE10();
    v43 = sub_23A19B6A4();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v45 = swift_slowAlloc();
      *(_DWORD *)v44 = 136315138;
      v158[0] = v45;
      LOBYTE(v160[0]) = *(_BYTE *)(v27 + v25);
      v50 = TransferClient.State.description.getter();
      v160[0] = sub_23A14071C(v50, v51, v158);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      v48 = "[FileTransferSetup Response] Unexpected state, state=%s";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v151 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier);
  if (!v28)
  {
    LOBYTE(v158[0]) = 0;
    sub_23A179838((unsigned __int8 *)v158, 0xD000000000000046, 0x800000023A1A1EB0);
    return;
  }
  if ((v21 & 1) != 0)
  {
    swift_retain();
    v29 = v156;
    v30 = v157;
    v31 = v19;
    sub_23A185BA8((uint64_t)v156, v157, v19, v20, 1);
    if (qword_2569443B0 != -1)
      swift_once();
    v32 = sub_23A19AE28();
    __swift_project_value_buffer(v32, (uint64_t)qword_25694EB88);
    swift_retain_n();
    sub_23A185BA8((uint64_t)v29, v30, v19, v20, 1);
    v33 = sub_23A19AE10();
    v34 = sub_23A19B6A4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v154 = swift_slowAlloc();
      v160[0] = v154;
      *(_DWORD *)v35 = 136315394;
      v158[0] = (uint64_t)v29;
      v158[1] = v30;
      v159 = v31;
      sub_23A13A924((uint64_t)v29, v30, v31);
      v36 = sub_23A19B518();
      v155 = v28;
      v158[0] = sub_23A14071C(v36, v37, v160);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A185BD8((uint64_t)v29, v30, v31, v20, 1);
      sub_23A185BD8((uint64_t)v29, v30, v31, v20, 1);
      *(_WORD *)(v35 + 12) = 2080;
      LOBYTE(v158[0]) = *(_BYTE *)(v27 + v151);
      v38 = TransferClient.State.description.getter();
      v158[0] = sub_23A14071C(v38, v39, v160);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v33, v34, "[FileTransferSetup Response] Failed to receive file-transfer-setup-response, error=%s state=%s", (uint8_t *)v35, 0x16u);
      v40 = v154;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v40, -1, -1);
      MEMORY[0x23B842FA4](v35, -1, -1);

    }
    else
    {
      sub_23A185BD8((uint64_t)v29, v30, v31, v20, 1);
      sub_23A185BD8((uint64_t)v29, v30, v31, v20, 1);

      swift_release_n();
    }
    LOBYTE(v158[0]) = 2;
    v61 = 0xD000000000000022;
    v60 = 0x800000023A1A1F00;
LABEL_29:
    sub_23A179838((unsigned __int8 *)v158, v61, v60);
LABEL_49:
    swift_release();
    return;
  }
  LOBYTE(v158[0]) = 9;
  v52 = v157;
  swift_bridgeObjectRetain();
  v53 = v20;
  swift_bridgeObjectRetain();
  swift_retain();
  v150 = v2;
  sub_23A1772DC((char *)v158);
  v54 = sub_23A19AC30();
  v149 = v55;
  if (v55 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_2569443B0 != -1)
      swift_once();
    v56 = sub_23A19AE28();
    __swift_project_value_buffer(v56, (uint64_t)qword_25694EB88);
    v57 = sub_23A19AE10();
    v58 = sub_23A19B6A4();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v59 = 0;
      _os_log_impl(&dword_23A123000, v57, v58, "FileTransferSetup Response] Failed to deserialize encryptedRemotePublicKey from base64", v59, 2u);
      MEMORY[0x23B842FA4](v59, -1, -1);
    }

    LOBYTE(v158[0]) = 1;
    v60 = 0x800000023A1A06C0;
    v61 = 0xD00000000000002DLL;
    goto LABEL_29;
  }
  v17 = (_QWORD *)v54;
  v62 = (uint64_t)v19;
  v63 = sub_23A19AC30();
  if (v64 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_2569443B0 != -1)
      swift_once();
    v65 = sub_23A19AE28();
    __swift_project_value_buffer(v65, (uint64_t)qword_25694EB88);
    v66 = sub_23A19AE10();
    v67 = sub_23A19B6A4();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v68 = 0;
      _os_log_impl(&dword_23A123000, v66, v67, "FileTransferSetup Response] Failed to deserialize fileTransferServiceUUID from base64", v68, 2u);
      MEMORY[0x23B842FA4](v68, -1, -1);
    }

    LOBYTE(v158[0]) = 1;
    sub_23A179838((unsigned __int8 *)v158, 0xD00000000000002DLL, 0x800000023A1A06C0);
    goto LABEL_48;
  }
  v147 = v63;
  v148 = v64;
  if (qword_2569443B0 != -1)
    swift_once();
  v69 = sub_23A19AE28();
  v70 = __swift_project_value_buffer(v69, (uint64_t)qword_25694EB88);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v146 = v70;
  v71 = sub_23A19AE10();
  v72 = sub_23A19B6BC();
  v73 = v72;
  if (os_log_type_enabled(v71, v72))
  {
    v74 = v52;
    v75 = swift_slowAlloc();
    v144 = swift_slowAlloc();
    v158[0] = v144;
    *(_DWORD *)v75 = 136315650;
    v143 = v71;
    swift_bridgeObjectRetain();
    v160[0] = sub_23A14071C((uint64_t)v156, v74, v158);
    v145 = v17;
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v75 + 12) = 2080;
    swift_bridgeObjectRetain();
    v160[0] = sub_23A14071C(v62, v20, v158);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v75 + 22) = 2080;
    v142 = v73;
    LOBYTE(v160[0]) = *(_BYTE *)(v150 + v151);
    v76 = TransferClient.State.description.getter();
    v160[0] = sub_23A14071C(v76, v77, v158);
    v53 = v20;
    v17 = v145;
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    v78 = v143;
    _os_log_impl(&dword_23A123000, v143, (os_log_type_t)v142, "[FileTransferSetup Response] Received response, encryptedRemotePublicKey=%s encryptedServiceUUID=%s state=%s", (uint8_t *)v75, 0x20u);
    v79 = v144;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v79, -1, -1);
    MEMORY[0x23B842FA4](v75, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v80 = sub_23A18A5C4((uint64_t)v17, v149);
  v19 = v81;
  if ((unint64_t)v81 >> 60 == 15)
    goto LABEL_42;
  v92 = v80;
  v93 = sub_23A18A5C4(v147, v148);
  v95 = v94;
  if (v94 >> 60 == 15)
  {
    sub_23A125F1C(v92, (unint64_t)v19);
LABEL_42:
    v82 = v157;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v83 = v150;
    swift_retain_n();
    v84 = sub_23A19AE10();
    v85 = sub_23A19B6A4();
    v86 = v85;
    if (os_log_type_enabled(v84, v85))
    {
      v87 = swift_slowAlloc();
      v155 = swift_slowAlloc();
      v158[0] = v155;
      *(_DWORD *)v87 = 136315650;
      LODWORD(v154) = v86;
      swift_bridgeObjectRetain();
      v160[0] = sub_23A14071C((uint64_t)v156, v82, v158);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v156 = v84;
      *(_WORD *)(v87 + 12) = 2080;
      swift_bridgeObjectRetain();
      v160[0] = sub_23A14071C(v62, v53, v158);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v87 + 22) = 2080;
      LOBYTE(v160[0]) = *(_BYTE *)(v83 + v151);
      v88 = TransferClient.State.description.getter();
      v160[0] = sub_23A14071C(v88, v89, v158);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      v90 = v156;
      _os_log_impl(&dword_23A123000, v156, (os_log_type_t)v154, "[FileTransferSetup Response] Spake2Verifier.decrypt() returned nil for encryptedRemotePublicKey=%s encryptedServiceUUID=%s state=%s", (uint8_t *)v87, 0x20u);
      v91 = v155;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v91, -1, -1);
      MEMORY[0x23B842FA4](v87, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    LOBYTE(v158[0]) = 0;
    sub_23A179838((unsigned __int8 *)v158, 0xD000000000000025, 0x800000023A1A1F60);
LABEL_47:
    sub_23A125F1C(v147, v148);
LABEL_48:
    sub_23A125F1C((uint64_t)v17, v149);
    goto LABEL_49;
  }
  v2 = v93;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23A13A53C(v92, (unint64_t)v19);
  sub_23A13A53C(v2, v95);
  v157 = v95;
  sub_23A161438(v2, v95);
  v14 = v154;
  v24 = v155;
  v96 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v154 + 48))(v9, 1, v155);
  v144 = v92;
  if (v96 == 1)
  {
    sub_23A13ACB8((uint64_t)v9, (uint64_t *)&unk_256944500);
    v97 = v150;
    swift_retain();
    v98 = v157;
    sub_23A13A53C(v2, v157);
    swift_retain();
    sub_23A13A53C(v2, v98);
    v99 = sub_23A19AE10();
    v100 = sub_23A19B6A4();
    v101 = v100;
    if (os_log_type_enabled(v99, v100))
    {
      v102 = swift_slowAlloc();
      v103 = swift_slowAlloc();
      v156 = v19;
      v104 = v103;
      v158[0] = v103;
      *(_DWORD *)v102 = 136315394;
      LODWORD(v155) = v101;
      v105 = v157;
      v106 = sub_23A19AC6C();
      v160[0] = sub_23A14071C(v106, v107, v158);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A125F1C(v2, v105);
      sub_23A125F1C(v2, v105);
      *(_WORD *)(v102 + 12) = 2080;
      LOBYTE(v160[0]) = *(_BYTE *)(v97 + v151);
      v108 = TransferClient.State.description.getter();
      v160[0] = sub_23A14071C(v108, v109, v158);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v99, (os_log_type_t)v155, "[FileTransferSetup Response] Could not initialize UUID from decryptedServiceUUIDData=%s state=%s", (uint8_t *)v102, 0x16u);
      swift_arrayDestroy();
      v110 = v104;
      v19 = v156;
      MEMORY[0x23B842FA4](v110, -1, -1);
      MEMORY[0x23B842FA4](v102, -1, -1);

    }
    else
    {
      v139 = v157;
      sub_23A125F1C(v2, v157);
      sub_23A125F1C(v2, v139);

      swift_release_n();
    }
    LOBYTE(v158[0]) = 0;
    sub_23A179838((unsigned __int8 *)v158, 0xD00000000000001ELL, 0x800000023A1A1F90);
    v140 = v144;
    sub_23A125F1C(v144, (unint64_t)v19);
    sub_23A125F1C(v140, (unint64_t)v19);
    sub_23A125F1C(v2, v157);
    goto LABEL_47;
  }
LABEL_56:
  sub_23A125F1C(v2, v157);
  v111 = v153;
  (*(void (**)(void))(v14 + 32))();
  v112 = v150;
  v113 = (_QWORD *)(v150 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey);
  v114 = v24;
  v115 = *(_QWORD *)(v150 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey);
  v116 = *(_QWORD *)(v150 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey + 8);
  *v113 = v144;
  v113[1] = v19;
  sub_23A131DF0(v144, (unint64_t)v19);
  sub_23A125F1C(v115, v116);
  v117 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16);
  v117(v7, v111, v114);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v114);
  v118 = v112 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferServiceUUID;
  swift_beginAccess();
  sub_23A185C08((uint64_t)v7, v118);
  swift_endAccess();
  v119 = v19;
  v120 = v152;
  v121 = v111;
  v122 = v144;
  v117(v152, v121, v114);
  swift_retain_n();
  sub_23A13A53C(v122, (unint64_t)v119);
  v123 = sub_23A19AE10();
  v124 = sub_23A19B6BC();
  v125 = v124;
  if (os_log_type_enabled(v123, v124))
  {
    v126 = swift_slowAlloc();
    v156 = v119;
    v127 = v126;
    v157 = swift_slowAlloc();
    v158[0] = v157;
    *(_DWORD *)v127 = 136315650;
    v146 = v123;
    v128 = sub_23A19AC6C();
    v145 = v17;
    v160[0] = sub_23A14071C(v128, v129, v158);
    LODWORD(v143) = v125;
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A125F1C(v122, (unint64_t)v156);
    sub_23A125F1C(v122, (unint64_t)v156);
    *(_WORD *)(v127 + 12) = 2080;
    sub_23A131E34(&qword_256946070, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v130 = v155;
    v131 = sub_23A19B8FC();
    v160[0] = sub_23A14071C(v131, v132, v158);
    v17 = v145;
    sub_23A19B728();
    swift_bridgeObjectRelease();
    v133 = *(void (**)(_BYTE *, uint64_t))(v154 + 8);
    v133(v120, v130);
    *(_WORD *)(v127 + 22) = 2080;
    LOBYTE(v160[0]) = *(_BYTE *)(v150 + v151);
    v134 = TransferClient.State.description.getter();
    v160[0] = sub_23A14071C(v134, v135, v158);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    v136 = v146;
    _os_log_impl(&dword_23A123000, v146, (os_log_type_t)v143, "[FileTransferSetup Response] Finished decryption, remotePublicKey=%s fileTransferServiceUUID=%s state=%s", (uint8_t *)v127, 0x20u);
    v137 = v157;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v137, -1, -1);
    v138 = v127;
    v119 = v156;
    MEMORY[0x23B842FA4](v138, -1, -1);

  }
  else
  {
    sub_23A125F1C(v122, (unint64_t)v119);
    sub_23A125F1C(v122, (unint64_t)v119);
    v130 = v155;
    v133 = *(void (**)(_BYTE *, uint64_t))(v154 + 8);
    v133(v120, v155);

    swift_release_n();
  }
  sub_23A17DC20();
  sub_23A125F1C(v122, (unint64_t)v119);
  sub_23A125F1C(v147, v148);
  sub_23A125F1C((uint64_t)v17, v149);
  swift_release();
  v133(v153, v130);
}

void sub_23A17DC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];
  uint64_t v35;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569465D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NetworkDescriptor();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v33 = (uint64_t)&v32 - v10;
  v11 = sub_23A19B35C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v1 + 16);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  v17 = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
LABEL_4:
    v18 = sub_23A19AE28();
    __swift_project_value_buffer(v18, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v19 = sub_23A19AE10();
    v20 = sub_23A19B6A4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v34[0] = v22;
      *(_DWORD *)v21 = 136315138;
      LOBYTE(v35) = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
      v23 = TransferClient.State.description.getter();
      v35 = sub_23A14071C(v23, v24, v34);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v19, v20, "[FileTransferSetup] Failed to setup file-transfer-browser, state=%s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v22, -1, -1);
      MEMORY[0x23B842FA4](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return;
  }
  sub_23A17E058((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23A13ACB8((uint64_t)v4, &qword_2569465D0);
    if (qword_2569443B0 == -1)
      goto LABEL_4;
    goto LABEL_13;
  }
  v25 = v33;
  sub_23A13AB54((uint64_t)v4, v33, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  sub_23A13ABDC(v25, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoBrowser();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = 0;
  *(_QWORD *)(v26 + 24) = 0;
  *(_QWORD *)(v26 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_browser) = 0;
  sub_23A13AB54((uint64_t)v9, v26 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_descriptor, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  *(_QWORD *)(v26 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_queue) = v16;
  v27 = OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferBrowser;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferBrowser) = v26;
  v28 = v16;
  swift_release();
  v29 = *(_QWORD *)(v1 + v27);
  if (v29)
  {
    v30 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    v31 = *(_QWORD *)(v29 + 16);
    *(_QWORD *)(v29 + 16) = sub_23A185C50;
    *(_QWORD *)(v29 + 24) = v30;
    sub_23A13A1E4(v31);
  }
  LOBYTE(v35) = 10;
  sub_23A1772DC((char *)&v35);
  if (*(_QWORD *)(v1 + v27))
  {
    swift_retain();
    sub_23A1660C4();
    swift_release();
  }
  sub_23A13AC20(v25, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
}

uint64_t sub_23A17E058@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256944500);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A19AD2C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A19B35C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v2 + 16);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  LOBYTE(v15) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_localSecIdentity);
  if (v17)
  {
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey + 8);
    if (v18 >> 60 != 15)
    {
      v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey + 8);
      if (v19 >> 60 != 15)
      {
        v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey);
        v39 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey);
        v40 = v20;
        v21 = v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferServiceUUID;
        swift_beginAccess();
        sub_23A13AC74(v21, (uint64_t)v6, (uint64_t *)&unk_256944500);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
        {
          v31 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
          v31(v10, v6, v7);
          v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945210);
          v33 = (char *)(a1 + *(int *)(v32 + 96));
          v34 = *(int *)(v32 + 112);
          *(_BYTE *)a1 = 0;
          v35 = v39;
          v36 = v40;
          *(_QWORD *)(a1 + 8) = v40;
          *(_QWORD *)(a1 + 16) = v19;
          *(_QWORD *)(a1 + 24) = v35;
          *(_QWORD *)(a1 + 32) = v18;
          *(_QWORD *)(a1 + 40) = v17;
          v31(v33, v10, v7);
          *(_BYTE *)(a1 + v34) = 1;
          v37 = type metadata accessor for NetworkDescriptor();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(a1, 0, 1, v37);
          swift_unknownObjectRetain();
          sub_23A13A53C(v35, v18);
          return sub_23A13A53C(v36, v19);
        }
        sub_23A13ACB8((uint64_t)v6, (uint64_t *)&unk_256944500);
      }
    }
  }
  if (qword_2569443B0 != -1)
    goto LABEL_14;
LABEL_8:
  v22 = sub_23A19AE28();
  __swift_project_value_buffer(v22, (uint64_t)qword_25694EB88);
  swift_retain_n();
  v23 = sub_23A19AE10();
  v24 = sub_23A19B6A4();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v42 = v26;
    *(_DWORD *)v25 = 136315138;
    LOBYTE(v41) = *(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
    v27 = TransferClient.State.description.getter();
    v41 = sub_23A14071C(v27, v28, &v42);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v23, v24, "[FileTransferSetup] Unexpected, missing needed value, state=%s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v26, -1, -1);
    MEMORY[0x23B842FA4](v25, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v29 = type metadata accessor for NetworkDescriptor();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
}

void sub_23A17E490(char *a1)
{
  char v1;
  uint64_t Strong;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if ((v1 & 1) != 0)
    {
      if (qword_2569443B0 != -1)
        swift_once();
      v3 = sub_23A19AE28();
      __swift_project_value_buffer(v3, (uint64_t)qword_25694EB88);
      swift_retain_n();
      v4 = sub_23A19AE10();
      v5 = sub_23A19B6BC();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = swift_slowAlloc();
        v14 = v7;
        *(_DWORD *)v6 = 136315138;
        v8 = TransferClient.State.description.getter();
        sub_23A14071C(v8, v9, &v14);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        v10 = "[FileTransferSetup] Advertised file-transfer-endpoint removed, state=%s";
LABEL_12:
        _os_log_impl(&dword_23A123000, v4, v5, v10, v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v7, -1, -1);
        MEMORY[0x23B842FA4](v6, -1, -1);
        swift_release();

        return;
      }
LABEL_13:

      swift_release_n();
      return;
    }
    if (*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 0xAu)
    {
      if (qword_2569443B0 != -1)
        swift_once();
      v11 = sub_23A19AE28();
      __swift_project_value_buffer(v11, (uint64_t)qword_25694EB88);
      swift_retain_n();
      v4 = sub_23A19AE10();
      v5 = sub_23A19B6BC();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = swift_slowAlloc();
        *(_DWORD *)v6 = 136315138;
        v14 = v7;
        v12 = TransferClient.State.description.getter();
        sub_23A14071C(v12, v13, &v14);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        v10 = "[FileTransferSetup] Ignoring add of file-transfer-endpoint, state=%s";
        goto LABEL_12;
      }
      goto LABEL_13;
    }
    sub_23A17E7A8();
    swift_release();
  }
}

void sub_23A17E7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  uint64_t v42;

  v1 = v0;
  v39 = type metadata accessor for CosmoMultiplexChannelClient.Configuration(0);
  MEMORY[0x24BDAC7A8](v39);
  v3 = (uint64_t *)((char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569465D0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NetworkDescriptor();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - v11;
  v13 = sub_23A19B35C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v1 + 16);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5610], v13);
  v38 = v17;
  LOBYTE(v17) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
LABEL_4:
    v18 = sub_23A19AE28();
    __swift_project_value_buffer(v18, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v19 = sub_23A19AE10();
    v20 = sub_23A19B6A4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v41[0] = v22;
      *(_DWORD *)v21 = 136315138;
      LOBYTE(v42) = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
      v23 = TransferClient.State.description.getter();
      v42 = sub_23A14071C(v23, v24, v41);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v19, v20, "[FileTransferSetup] Failed to setup file-transfer-client, state=%s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v22, -1, -1);
      MEMORY[0x23B842FA4](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return;
  }
  sub_23A17E058((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23A13ACB8((uint64_t)v6, &qword_2569465D0);
    if (qword_2569443B0 == -1)
      goto LABEL_4;
    goto LABEL_13;
  }
  v25 = (uint64_t)v12;
  sub_23A13AB54((uint64_t)v6, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  v26 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v27 = objc_msgSend(v26, sel_temporaryDirectory);

  v28 = (_QWORD *)((char *)v3 + *(int *)(v39 + 20));
  type metadata accessor for CosmoHttpConnection.Configuration(0);
  sub_23A19ABE8();

  *v28 = 15;
  *v3 = 5;
  v29 = v40;
  sub_23A13ABDC((uint64_t)v12, v40, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoMultiplexChannelClient(0);
  swift_allocObject();
  v30 = v38;
  v31 = v38;
  v32 = CosmoMultiplexChannelClient.init(config:name:descriptor:queue:)((uint64_t)v3, (void *)0xD000000000000014, 0x800000023A1A1FB0, v29, v30);
  v33 = OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient) = v32;
  swift_release();
  v34 = *(_QWORD *)(v1 + v33);
  if (v34)
  {
    v35 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    v36 = *(_QWORD *)(v34 + 16);
    *(_QWORD *)(v34 + 16) = sub_23A185C58;
    *(_QWORD *)(v34 + 24) = v35;
    sub_23A13A1E4(v36);
  }
  LOBYTE(v42) = 11;
  sub_23A1772DC((char *)&v42);
  if (*(_QWORD *)(v1 + v33))
  {
    swift_retain();
    sub_23A16917C();
    swift_release();
  }
  sub_23A13AC20(v25, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDescriptor);
}

uint64_t sub_23A17EC88(char *a1)
{
  char v1;
  uint64_t result;
  char v3;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = v1;
    sub_23A17ECF0(&v3);
    return swift_release();
  }
  return result;
}

void sub_23A17ECF0(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = v1;
  v5 = sub_23A19B35C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *a1;
  v10 = *(void **)(v3 + 16);
  *v8 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v11 = v10;
  LOBYTE(v10) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    swift_once();
LABEL_7:
    v15 = sub_23A19AE28();
    __swift_project_value_buffer(v15, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v16 = sub_23A19AE10();
    v17 = sub_23A19B68C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_DWORD *)v18 = 136315138;
      v48 = v19;
      LOBYTE(v47) = *(_BYTE *)(v3 + v2);
      v20 = TransferClient.State.description.getter();
      v47 = sub_23A14071C(v20, v21, &v48);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v16, v17, "Disconnect detected, ignoring file-transfer-client state change, state=%s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v19, -1, -1);
      MEMORY[0x23B842FA4](v18, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return;
  }
  v12 = OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient;
  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient))
    return;
  v2 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 0xFu)
  {
    if (qword_2569443B0 == -1)
      goto LABEL_7;
    goto LABEL_33;
  }
  if ((v9 & 1) != 0)
  {
    LOBYTE(v48) = 2;
    v13 = 0xD000000000000020;
    v14 = 0x800000023A1A1FD0;
LABEL_26:
    sub_23A179838((unsigned __int8 *)&v48, v13, v14);
    return;
  }
  LOBYTE(v48) = 12;
  sub_23A1772DC((char *)&v48);
  v22 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_stateAtDisconnect);
  if (v22 != 18)
  {
    if (qword_2569443B0 != -1)
      swift_once();
    v30 = sub_23A19AE28();
    __swift_project_value_buffer(v30, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v31 = sub_23A19AE10();
    v32 = sub_23A19B6BC();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v48 = v34;
      *(_DWORD *)v33 = 136315394;
      LOBYTE(v47) = v22;
      v35 = TransferClient.State.description.getter();
      v47 = sub_23A14071C(v35, v36, &v48);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      LOBYTE(v47) = *(_BYTE *)(v3 + v2);
      v37 = TransferClient.State.description.getter();
      v47 = sub_23A14071C(v37, v38, &v48);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v31, v32, "Client invoked disconnect in state=%s, satisfying now, state=%s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v34, -1, -1);
      MEMORY[0x23B842FA4](v33, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v48) = 3;
    v14 = 0x800000023A1A1C10;
    v13 = 0xD00000000000001ALL;
    goto LABEL_26;
  }
  sub_23A17F51C();
  if (qword_2569443B0 != -1)
    swift_once();
  v23 = sub_23A19AE28();
  __swift_project_value_buffer(v23, (uint64_t)qword_25694EB88);
  swift_retain_n();
  v24 = sub_23A19AE10();
  v25 = sub_23A19B6BC();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v48 = v27;
    *(_DWORD *)v26 = 16777730;
    LOBYTE(v47) = 1;
    sub_23A19B728();
    *(_WORD *)(v26 + 5) = 2080;
    LOBYTE(v47) = *(_BYTE *)(v3 + v2);
    v28 = TransferClient.State.description.getter();
    v47 = sub_23A14071C(v28, v29, &v48);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v24, v25, "[Lease] Sending lease-request with version=%hhu, state=%s", (uint8_t *)v26, 0xFu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v27, -1, -1);
    MEMORY[0x23B842FA4](v26, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  if (*(_QWORD *)(v3 + v12))
  {
    v39 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_23A1731C8(1, 0, (uint64_t)sub_23A185C60, v39);
    swift_release();
    swift_release();
  }
  swift_retain_n();
  v40 = sub_23A19AE10();
  v41 = sub_23A19B6BC();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    *(_DWORD *)v42 = 136315138;
    v48 = v43;
    LOBYTE(v47) = *(_BYTE *)(v3 + v2);
    v44 = TransferClient.State.description.getter();
    v47 = sub_23A14071C(v44, v45, &v48);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v40, v41, "[FileList] Requesting list, state=%s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v43, -1, -1);
    MEMORY[0x23B842FA4](v42, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  if (*(_QWORD *)(v3 + v12))
  {
    v46 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_23A1733E0(0, (uint64_t)sub_23A185C68, v46, (uint64_t)&unk_250B26B88, (uint64_t)sub_23A185C80, (uint64_t)&block_descriptor_130);
    swift_release();
    swift_release();
  }
  LOBYTE(v48) = 13;
  sub_23A1772DC((char *)&v48);
}

uint64_t sub_23A17F51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;

  v3 = v0;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v3 + 16);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v9 = v8;
  LOBYTE(v8) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_5;
  }
  v2 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationBrowser;
  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationBrowser))
    return result;
  v1 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel;
  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel))
    return result;
  v11 = qword_2569443B0;
  swift_retain();
  swift_retain();
  if (v11 != -1)
    goto LABEL_10;
LABEL_5:
  v12 = sub_23A19AE28();
  __swift_project_value_buffer(v12, (uint64_t)qword_25694EB88);
  v13 = sub_23A19AE10();
  v14 = sub_23A19B6BC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23A123000, v13, v14, "[Attestation] Closing Browser and attestation-channel", v15, 2u);
    MEMORY[0x23B842FA4](v15, -1, -1);
  }

  sub_23A167380();
  *(_QWORD *)(v3 + v2) = 0;
  swift_release();
  sub_23A152DF4();
  *(_QWORD *)(v3 + v1) = 0;
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23A17F6F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  _QWORD v6[3];
  char v7;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = *((_BYTE *)a1 + 24);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6[0] = v1;
    v6[1] = v2;
    v6[2] = v3;
    v7 = v4;
    sub_23A17F770((uint64_t)v6);
    return swift_release();
  }
  return result;
}

void sub_23A17F770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  v12 = *(void **)(v2 + 16);
  *v7 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v13 = v12;
  LOBYTE(v12) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_27:
    swift_once();
LABEL_9:
    v25 = sub_23A19AE28();
    __swift_project_value_buffer(v25, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v26 = sub_23A19AE10();
    v27 = sub_23A19B6BC();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      *(_DWORD *)v28 = 136315138;
      v44 = v29;
      LOBYTE(v43) = *(_BYTE *)(v2 + v5);
      v30 = TransferClient.State.description.getter();
      v43 = sub_23A14071C(v30, v31, &v44);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v26, v27, "[Lease] Disconnect detected, ignoring, state=%s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v29, -1, -1);
      MEMORY[0x23B842FA4](v28, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return;
  }
  v5 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 0xFu)
  {
    if (qword_2569443B0 == -1)
      goto LABEL_9;
    goto LABEL_27;
  }
  if ((v11 & 1) != 0)
  {
    v14 = v9;
    if (qword_2569443B0 != -1)
      swift_once();
    v15 = sub_23A19AE28();
    __swift_project_value_buffer(v15, (uint64_t)qword_25694EB88);
    sub_23A185E30(v9, v8, v10, 1);
    swift_retain();
    sub_23A185E30(v9, v8, v10, 1);
    swift_retain();
    v16 = sub_23A19AE10();
    v17 = sub_23A19B6A4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v43 = (uint64_t)v9;
      v44 = v42;
      *(_DWORD *)v18 = 136315394;
      v19 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
      v20 = sub_23A19B518();
      v43 = sub_23A14071C(v20, v21, &v44);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A185DDC(v9, v8, v10, 1);
      sub_23A185DDC(v9, v8, v10, 1);
      *(_WORD *)(v18 + 12) = 2080;
      LOBYTE(v43) = *(_BYTE *)(v2 + v5);
      v22 = TransferClient.State.description.getter();
      v43 = sub_23A14071C(v22, v23, &v44);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v16, v17, "[Lease] Failed to receive response, error=%s, state=%s", (uint8_t *)v18, 0x16u);
      v24 = v42;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v24, -1, -1);
      MEMORY[0x23B842FA4](v18, -1, -1);

    }
    else
    {
      sub_23A185DDC(v9, v8, v10, 1);
      sub_23A185DDC(v9, v8, v10, 1);

      swift_release_n();
    }
    LOBYTE(v44) = 2;
    sub_23A179838((unsigned __int8 *)&v44, 0xD000000000000016, 0x800000023A1A2030);
    sub_23A185DDC(v9, v8, v10, 1);
  }
  else
  {
    if (v10)
      v32 = v8;
    else
      v32 = 16718;
    if (v10)
      v33 = v10;
    else
      v33 = 0xE200000000000000;
    sub_23A185E30(v9, v8, v10, 0);
    if (qword_2569443B0 != -1)
      swift_once();
    v34 = sub_23A19AE28();
    __swift_project_value_buffer(v34, (uint64_t)qword_25694EB88);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v35 = sub_23A19AE10();
    v36 = sub_23A19B6BC();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v44 = v38;
      *(_DWORD *)v37 = 136315394;
      swift_bridgeObjectRetain();
      v43 = sub_23A14071C(v32, v33, &v44);
      sub_23A19B728();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2080;
      LOBYTE(v43) = *(_BYTE *)(v2 + v5);
      v39 = TransferClient.State.description.getter();
      v43 = sub_23A14071C(v39, v40, &v44);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v35, v36, "[Lease] Remote TransferHost ended lease with reason=%s, state=%s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v38, -1, -1);
      MEMORY[0x23B842FA4](v37, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    LOBYTE(v44) = 5;
    sub_23A179838((unsigned __int8 *)&v44, v32, v33);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23A17FE64(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  _QWORD v5[2];
  char v6;

  v1 = *a1;
  v2 = a1[1];
  v3 = *((_BYTE *)a1 + 16);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5[0] = v1;
    v5[1] = v2;
    v6 = v3;
    sub_23A17FEDC((uint64_t)v5);
    return swift_release();
  }
  return result;
}

void sub_23A17FEDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  char v11;
  void *v12;
  id v13;
  unsigned int v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v3 = v1;
  v5 = sub_23A19B35C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  v12 = *(void **)(v3 + 16);
  *v8 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v13 = v12;
  LOBYTE(v12) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  v2 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  v14 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v14 > 0xF)
  {
    if (qword_2569443B0 == -1)
    {
LABEL_10:
      v26 = sub_23A19AE28();
      __swift_project_value_buffer(v26, (uint64_t)qword_25694EB88);
      swift_retain_n();
      v27 = sub_23A19AE10();
      v28 = sub_23A19B6BC();
      if (!os_log_type_enabled(v27, v28))
        goto LABEL_28;
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      *(_DWORD *)v29 = 136315138;
      v55 = v30;
      LOBYTE(v54) = *(_BYTE *)(v3 + v2);
      v31 = TransferClient.State.description.getter();
      v54 = sub_23A14071C(v31, v32, &v55);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      v33 = "[FileList] Disconnect detected, ignoring, state=%s";
LABEL_16:
      _os_log_impl(&dword_23A123000, v27, v28, v33, v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v30, -1, -1);
      MEMORY[0x23B842FA4](v29, -1, -1);

      return;
    }
LABEL_32:
    swift_once();
    goto LABEL_10;
  }
  if (v14 != 13)
  {
    if (qword_2569443B0 != -1)
      swift_once();
    v34 = sub_23A19AE28();
    __swift_project_value_buffer(v34, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v27 = sub_23A19AE10();
    v28 = sub_23A19B6A4();
    if (!os_log_type_enabled(v27, v28))
      goto LABEL_28;
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    *(_DWORD *)v29 = 136315138;
    v55 = v30;
    LOBYTE(v54) = *(_BYTE *)(v3 + v2);
    v35 = TransferClient.State.description.getter();
    v54 = sub_23A14071C(v35, v36, &v55);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    v33 = "[FileList] Unexpected state, state=%s";
    goto LABEL_16;
  }
  if ((v11 & 1) != 0)
  {
    v15 = v10;
    if (qword_2569443B0 != -1)
      swift_once();
    v16 = sub_23A19AE28();
    __swift_project_value_buffer(v16, (uint64_t)qword_25694EB88);
    sub_23A185D00(v10, v9, 1);
    swift_retain();
    sub_23A185D00(v10, v9, 1);
    swift_retain();
    v17 = sub_23A19AE10();
    v18 = sub_23A19B6A4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v54 = (uint64_t)v10;
      v55 = v20;
      *(_DWORD *)v19 = 136315394;
      v21 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
      v22 = sub_23A19B518();
      v54 = sub_23A14071C(v22, v23, &v55);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A185CAC(v10, v9, 1);
      sub_23A185CAC(v10, v9, 1);
      *(_WORD *)(v19 + 12) = 2080;
      LOBYTE(v54) = *(_BYTE *)(v3 + v2);
      v24 = TransferClient.State.description.getter();
      v54 = sub_23A14071C(v24, v25, &v55);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v17, v18, "[FileList] Failed to receive file-list-request-response, error=%s state=%s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v20, -1, -1);
      MEMORY[0x23B842FA4](v19, -1, -1);

    }
    else
    {
      sub_23A185CAC(v10, v9, 1);
      sub_23A185CAC(v10, v9, 1);

      swift_release_n();
    }
    LOBYTE(v55) = 2;
    sub_23A179838((unsigned __int8 *)&v55, 0xD000000000000024, 0x800000023A1A2000);
    sub_23A185CAC(v10, v9, 1);
    return;
  }
  LOBYTE(v55) = 14;
  swift_bridgeObjectRetain();
  sub_23A1772DC((char *)&v55);
  v37 = *(_QWORD *)(v9 + 16);
  if (!v37)
  {
    sub_23A185CAC(v10, v9, 0);
    if (qword_2569443B0 != -1)
      swift_once();
    v48 = sub_23A19AE28();
    __swift_project_value_buffer(v48, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v27 = sub_23A19AE10();
    v28 = sub_23A19B6A4();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      *(_DWORD *)v29 = 136315138;
      v55 = v30;
      LOBYTE(v54) = *(_BYTE *)(v3 + v2);
      v49 = TransferClient.State.description.getter();
      v54 = sub_23A14071C(v49, v50, &v55);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      v33 = "[FileList] Received empty-list, state=%s";
      goto LABEL_16;
    }
LABEL_28:

    swift_release_n();
    return;
  }
  if (qword_2569443B0 != -1)
    swift_once();
  v38 = sub_23A19AE28();
  __swift_project_value_buffer(v38, (uint64_t)qword_25694EB88);
  sub_23A185D00(v10, v9, 0);
  swift_retain();
  sub_23A185D00(v10, v9, 0);
  swift_retain();
  v39 = sub_23A19AE10();
  v40 = sub_23A19B6BC();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    v54 = v37;
    v55 = v53;
    *(_DWORD *)v41 = 134218498;
    sub_23A19B728();
    *(_WORD *)(v41 + 12) = 2080;
    v52 = v41 + 14;
    sub_23A19AD2C();
    sub_23A131E34((unint64_t *)&unk_2569449A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    v42 = sub_23A19B488();
    v44 = v43;
    sub_23A185CAC(v10, v9, 0);
    v54 = sub_23A14071C(v42, v44, &v55);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A185CAC(v10, v9, 0);
    sub_23A185CAC(v10, v9, 0);
    *(_WORD *)(v41 + 22) = 2080;
    LOBYTE(v54) = *(_BYTE *)(v3 + v2);
    v45 = TransferClient.State.description.getter();
    v54 = sub_23A14071C(v45, v46, &v55);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v39, v40, "[FileList] Received list, count=%ld list=%s, state=%s", (uint8_t *)v41, 0x20u);
    v47 = v53;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v47, -1, -1);
    MEMORY[0x23B842FA4](v41, -1, -1);

  }
  else
  {
    sub_23A185CAC(v10, v9, 0);
    sub_23A185CAC(v10, v9, 0);

    swift_release_n();
  }
  v51 = sub_23A1808D8(v9);
  sub_23A185CAC(v10, v9, 0);
  swift_getKeyPath();
  swift_getKeyPath();
  v55 = v51;
  swift_retain();
  sub_23A19AE70();
}

uint64_t sub_23A1808D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569465E0);
  v3 = MEMORY[0x24BDAC7A8](v65);
  v64 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v63 = (char *)&v54 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v62 = (char *)&v54 - v7;
  v8 = type metadata accessor for TransferClient.FileDescriptor(0);
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (!v11)
    return v12;
  v54 = v1;
  v70 = MEMORY[0x24BEE4AF8];
  sub_23A184B5C(0, v11, 0);
  result = sub_23A1851CC(a1);
  v15 = result;
  v16 = 0;
  v17 = a1 + 64;
  v66 = a1 + 80;
  v58 = v10;
  v59 = a1;
  v55 = v11;
  v56 = v14;
  v57 = a1 + 64;
  while ((v15 & 0x8000000000000000) == 0 && (uint64_t)v15 < 1 << *(_BYTE *)(a1 + 32))
  {
    v19 = v15 >> 6;
    if ((*(_QWORD *)(v17 + 8 * (v15 >> 6)) & (1 << v15)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v14)
      goto LABEL_26;
    v67 = v16;
    v68 = 1 << v15;
    v20 = v65;
    v21 = (uint64_t)v62;
    v22 = &v62[*(int *)(v65 + 48)];
    v23 = *(_QWORD *)(a1 + 48);
    v24 = sub_23A19AD2C();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v23 + *(_QWORD *)(v25 + 72) * v15;
    v27 = v15;
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
    v28(v21, v26, v24);
    v29 = *(_QWORD *)(a1 + 56);
    v69 = v27;
    v30 = (uint64_t *)(v29 + 24 * v27);
    v32 = *v30;
    v31 = v30[1];
    v33 = v30[2];
    *(_QWORD *)v22 = *v30;
    *((_QWORD *)v22 + 1) = v31;
    *((_QWORD *)v22 + 2) = v33;
    v34 = v63;
    v28((uint64_t)v63, v21, v24);
    v35 = &v34[*(int *)(v20 + 48)];
    *(_QWORD *)v35 = v32;
    *((_QWORD *)v35 + 1) = v31;
    *((_QWORD *)v35 + 2) = v33;
    v36 = (uint64_t)v34;
    v37 = v64;
    sub_23A185D10(v36, v64);
    swift_bridgeObjectRetain_n();
    sub_23A13ACB8(v21, &qword_2569465E0);
    v38 = *(int *)(v20 + 48);
    v39 = (uint64_t)v58;
    v40 = (uint64_t *)(v37 + v38);
    v42 = *v40;
    v41 = v40[1];
    v43 = v40[2];
    v28((uint64_t)v58, v37, v24);
    v44 = v61;
    v45 = (_QWORD *)(v39 + *(int *)(v61 + 20));
    *v45 = v42;
    v45[1] = v41;
    *(_QWORD *)(v39 + *(int *)(v44 + 24)) = v43;
    swift_bridgeObjectRetain();
    sub_23A13ACB8(v37, &qword_2569465E0);
    v12 = v70;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23A184B5C(0, *(_QWORD *)(v12 + 16) + 1, 1);
      v12 = v70;
    }
    v47 = *(_QWORD *)(v12 + 16);
    v46 = *(_QWORD *)(v12 + 24);
    a1 = v59;
    v48 = v69;
    if (v47 >= v46 >> 1)
    {
      sub_23A184B5C(v46 > 1, v47 + 1, 1);
      v12 = v70;
    }
    *(_QWORD *)(v12 + 16) = v47 + 1;
    result = sub_23A13AB54(v39, v12+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(_QWORD *)(v60 + 72) * v47, type metadata accessor for TransferClient.FileDescriptor);
    v15 = 1 << *(_BYTE *)(a1 + 32);
    if (v48 >= (uint64_t)v15)
      goto LABEL_27;
    v17 = v57;
    v49 = *(_QWORD *)(v57 + 8 * v19);
    if ((v49 & v68) == 0)
      goto LABEL_28;
    LODWORD(v14) = v56;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v56)
      goto LABEL_29;
    v50 = v49 & (-2 << (v48 & 0x3F));
    if (v50)
    {
      v15 = __clz(__rbit64(v50)) | v48 & 0xFFFFFFFFFFFFFFC0;
      v18 = v55;
    }
    else
    {
      v51 = v19 + 1;
      v52 = (v15 + 63) >> 6;
      v18 = v55;
      if (v19 + 1 < v52)
      {
        v53 = *(_QWORD *)(v57 + 8 * v51);
        if (v53)
        {
LABEL_22:
          v15 = __clz(__rbit64(v53)) + (v51 << 6);
        }
        else
        {
          while (v52 - 2 != v19)
          {
            v53 = *(_QWORD *)(v66 + 8 * v19++);
            if (v53)
            {
              v51 = v19 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v16 = v67 + 1;
    if (v67 + 1 == v18)
      return v12;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

Cosmo::PinCode __swiftcall TransferClient.auth()()
{
  Cosmo::PinCode v0;
  uint64_t v1;
  void *v2;
  Cosmo::PinCode result;
  _QWORD v4[2];
  _QWORD v5[2];

  static PinCode.random(length:)(4, v5);
  v4[0] = v5[0];
  v4[1] = v5[1];
  v0.value._countAndFlagsBits = (uint64_t)v4;
  TransferClient.auth(pinCode:)(v0);
  v1 = swift_bridgeObjectRelease();
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

Cosmo::PinCode __swiftcall TransferClient.auth(pinCode:)(Cosmo::PinCode pinCode)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *countAndFlagsBits;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  Cosmo::PinCode result;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v3 = v2;
  countAndFlagsBits = (uint64_t *)pinCode.value._countAndFlagsBits;
  v23 = v1;
  v5 = sub_23A19B2D8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v22 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23A19B2F0();
  v9 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *countAndFlagsBits;
  v13 = countAndFlagsBits[1];
  v20[1] = *(_QWORD *)(v3 + 16);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v3;
  v14[3] = v12;
  v14[4] = v13;
  aBlock[4] = sub_23A181588;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_8;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23A19B2E4();
  v24 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v11, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  swift_release();
  v16 = v23;
  *v23 = v12;
  v16[1] = v13;
  v17 = swift_bridgeObjectRetain();
  result.value._object = v18;
  result.value._countAndFlagsBits = v17;
  return result;
}

void sub_23A180F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  const char *v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v4 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_pinCode);
  *v4 = a2;
  v4[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult) != 2)
  {
    sub_23A19B794();
    swift_bridgeObjectRelease();
    v20 = 0xD000000000000018;
    v21 = 0x800000023A1A1CB0;
    sub_23A19B590();
    swift_bridgeObjectRelease();
    sub_23A19B590();
  }
  sub_23A19B794();
  swift_bridgeObjectRelease();
  v20 = 0x3D6E69702D77656ELL;
  v21 = 0xE800000000000000;
  swift_bridgeObjectRetain();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  if (v4[1])
  {
    swift_bridgeObjectRetain();
    sub_23A19B518();
  }
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  v6 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  TransferClient.State.description.getter();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v8 = v20;
  v7 = v21;
  v9 = *(unsigned __int8 *)(a1 + v6);
  if (v9 > 2)
  {
    if (v9 != 3)
    {
      if (v9 == 7)
      {
        v16 = *(unsigned __int8 *)(a1 + v5);
        if (v16 == 2)
          goto LABEL_14;
        if ((v16 & 1) != 0)
        {
          v17 = sub_23A19B908();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
            goto LABEL_14;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      if (*(unsigned __int8 *)(a1 + v6) - 4 > 2)
      {
        if (qword_2569443B0 != -1)
          swift_once();
        v19 = sub_23A19AE28();
        __swift_project_value_buffer(v19, (uint64_t)qword_25694EB88);
        swift_bridgeObjectRetain();
        v11 = sub_23A19AE10();
        v12 = sub_23A19B6BC();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc();
          v14 = swift_slowAlloc();
          v20 = v14;
          *(_DWORD *)v13 = 136315138;
          swift_bridgeObjectRetain();
          sub_23A14071C(v8, v7, &v20);
          sub_23A19B728();
          swift_bridgeObjectRelease_n();
          v15 = "[Auth] Ignoring, %s";
          goto LABEL_10;
        }
      }
      else
      {
        if (qword_2569443B0 != -1)
          swift_once();
        v18 = sub_23A19AE28();
        __swift_project_value_buffer(v18, (uint64_t)qword_25694EB88);
        swift_bridgeObjectRetain();
        v11 = sub_23A19AE10();
        v12 = sub_23A19B6BC();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc();
          v14 = swift_slowAlloc();
          v20 = v14;
          *(_DWORD *)v13 = 136315138;
          swift_bridgeObjectRetain();
          sub_23A14071C(v8, v7, &v20);
          sub_23A19B728();
          swift_bridgeObjectRelease_n();
          v15 = "[Auth] Queuing PIN in case we need to re-attest, %s";
          goto LABEL_10;
        }
      }
      goto LABEL_27;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    sub_23A178BCC();
    return;
  }
  if (qword_2569443B0 != -1)
    swift_once();
  v10 = sub_23A19AE28();
  __swift_project_value_buffer(v10, (uint64_t)qword_25694EB88);
  swift_bridgeObjectRetain();
  v11 = sub_23A19AE10();
  v12 = sub_23A19B6BC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_23A14071C(v8, v7, &v20);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    v15 = "[Auth] Queuing PIN until attestation-channel is available, %s";
LABEL_10:
    _os_log_impl(&dword_23A123000, v11, v12, v15, v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v14, -1, -1);
    MEMORY[0x23B842FA4](v13, -1, -1);

    return;
  }
LABEL_27:

  swift_bridgeObjectRelease_n();
}

uint64_t sub_23A181578()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_23A181588()
{
  uint64_t *v0;

  sub_23A180F4C(v0[2], v0[3], v0[4]);
}

uint64_t TransferClient.requestFile(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A182664(a1, a2, a3, (uint64_t)&unk_250B26538, (uint64_t)sub_23A181DC8, (uint64_t)&block_descriptor_14);
}

void sub_23A1815B0(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  os_log_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD);
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _BYTE v62[4];
  int v63;
  os_log_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_QWORD);
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946570);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)&v62[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for FileRequest(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v62[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for TransferClient.FileDescriptor(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v62[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  v19 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v19 > 0xF)
    return;
  v66 = v8;
  if ((v19 & 0xFE) != 0xE)
    goto LABEL_9;
  swift_getKeyPath();
  swift_getKeyPath();
  v67 = a2;
  sub_23A19AE64();
  swift_release();
  a2 = v67;
  swift_release();
  v20 = *(_QWORD *)(v68 + 16);
  swift_bridgeObjectRelease();
  if (!v20)
  {
LABEL_9:
    if (qword_2569443B0 != -1)
      swift_once();
    v24 = sub_23A19AE28();
    __swift_project_value_buffer(v24, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v25 = sub_23A19AE10();
    v26 = sub_23A19B6A4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v65 = a3;
      v28 = (uint8_t *)v27;
      v29 = swift_slowAlloc();
      v67 = a2;
      v68 = v29;
      v30 = v29;
      *(_DWORD *)v28 = 136315138;
      LOBYTE(v70) = *(_BYTE *)(a1 + v18);
      v31 = TransferClient.State.description.getter();
      v70 = sub_23A14071C(v31, v32, &v68);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v25, v26, "[Request] Must be invoked after having received the file-list, state=%s", v28, 0xCu);
      swift_arrayDestroy();
      v33 = v30;
      a2 = v67;
      MEMORY[0x23B842FA4](v33, -1, -1);
      MEMORY[0x23B842FA4](v28, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_23A13A180();
    v34 = swift_allocError();
    *v35 = xmmword_23A19C6F0;
    *v10 = v34;
    swift_storeEnumTagMultiPayload();
    a2(v10);
LABEL_17:
    sub_23A13ACB8((uint64_t)v10, &qword_256946570);
    return;
  }
  v65 = a3;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23A19AE64();
  swift_release();
  swift_release();
  v21 = *(_QWORD *)(v68 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    v68 = 0;
    v69 = 0xE000000000000000;
    sub_23A19B794();
    sub_23A19B590();
    sub_23A19AD2C();
    sub_23A131E34(&qword_256946070, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_23A19B8FC();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v36 = v68;
    v37 = v69;
    sub_23A13A180();
    v38 = swift_allocError();
    *v39 = v36;
    v39[1] = v37;
    *v10 = v38;
    swift_storeEnumTagMultiPayload();
    v67(v10);
    goto LABEL_17;
  }
  v22 = v68 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v23 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  while ((sub_23A19ACFC() & 1) == 0)
  {
    v22 += v23;
    if (!--v21)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease_n();
  v40 = OBJC_IVAR____TtC5Cosmo14TransferClient_filesRequestedCount;
  v41 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesRequestedCount);
  v42 = __OFADD__(v41, 1);
  v43 = v41 + 1;
  if (v42)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesRequestedCount) = v43;
    if (*(_BYTE *)(a1 + v18) != 15)
    {
      LOBYTE(v68) = 15;
      sub_23A1772DC((char *)&v68);
    }
    if (qword_2569443B0 == -1)
      goto LABEL_23;
  }
  swift_once();
LABEL_23:
  v44 = sub_23A19AE28();
  __swift_project_value_buffer(v44, (uint64_t)qword_25694EB88);
  sub_23A13ABDC(a4, (uint64_t)v17, type metadata accessor for TransferClient.FileDescriptor);
  swift_retain_n();
  v45 = sub_23A19AE10();
  v46 = sub_23A19B6BC();
  v47 = v46;
  if (os_log_type_enabled(v45, v46))
  {
    v48 = swift_slowAlloc();
    v64 = v45;
    v49 = v48;
    v66 = swift_slowAlloc();
    v68 = v66;
    *(_DWORD *)v49 = 136315650;
    v63 = v47;
    v50 = TransferClient.FileDescriptor.description.getter();
    v70 = sub_23A14071C(v50, v51, &v68);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A13AC20((uint64_t)v17, type metadata accessor for TransferClient.FileDescriptor);
    *(_WORD *)(v49 + 12) = 2048;
    v52 = *(_QWORD *)(a1 + v40);
    swift_release();
    v70 = v52;
    sub_23A19B728();
    swift_release();
    *(_WORD *)(v49 + 22) = 2080;
    LOBYTE(v70) = *(_BYTE *)(a1 + v18);
    v53 = TransferClient.State.description.getter();
    v70 = sub_23A14071C(v53, v54, &v68);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    v55 = v64;
    _os_log_impl(&dword_23A123000, v64, (os_log_type_t)v63, "[Request] Requesting file=%s, files-requested-count=%ld state=%s", (uint8_t *)v49, 0x20u);
    v56 = v66;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v56, -1, -1);
    MEMORY[0x23B842FA4](v49, -1, -1);

  }
  else
  {
    swift_release();
    sub_23A13AC20((uint64_t)v17, type metadata accessor for TransferClient.FileDescriptor);

    swift_release_n();
  }
  v57 = v65;
  v58 = v67;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient))
  {
    v59 = sub_23A19AD2C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v13, a4, v59);
    v60 = swift_allocObject();
    swift_weakInit();
    v61 = (_QWORD *)swift_allocObject();
    v61[2] = v60;
    v61[3] = v58;
    v61[4] = v57;
    swift_retain();
    swift_retain();
    sub_23A1735EC((uint64_t)v13, 0, (uint64_t)sub_23A18576C, (uint64_t)v61, type metadata accessor for FileRequest, (uint64_t)&unk_250B26980, (uint64_t)sub_23A18580C, (uint64_t)&block_descriptor_79);
    swift_release();
    swift_release();
    sub_23A13AC20((uint64_t)v13, type metadata accessor for FileRequest);
  }
}

uint64_t sub_23A181DC8()
{
  return sub_23A1830FC((uint64_t (*)(_QWORD, _QWORD, _QWORD, char *))sub_23A1815B0);
}

uint64_t sub_23A181DD4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t Strong;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t *);
  uint64_t v61;
  uint64_t v62;

  v60 = a3;
  v6 = type metadata accessor for CosmoFileHttpResponse(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v56 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946578);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (void **)((char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946570);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_23A13A180();
    v36 = swift_allocError();
    *v37 = 0xD000000000000017;
    v37[1] = 0x800000023A1A1C70;
    *v17 = v36;
    swift_storeEnumTagMultiPayload();
    v60(v17);
    return sub_23A13ACB8((uint64_t)v17, &qword_256946570);
  }
  v19 = Strong;
  v58 = a4;
  v59 = v15;
  sub_23A13AC74(a1, (uint64_t)v14, &qword_256946578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *v14;
    v21 = qword_2569443B0;
    swift_retain_n();
    if (v21 != -1)
      swift_once();
    v22 = sub_23A19AE28();
    __swift_project_value_buffer(v22, (uint64_t)qword_25694EB88);
    swift_retain();
    v23 = v20;
    swift_retain();
    v24 = v20;
    v25 = sub_23A19AE10();
    v26 = sub_23A19B6A4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v61 = (uint64_t)v20;
      v62 = v28;
      *(_DWORD *)v27 = 136315650;
      v29 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
      v30 = sub_23A19B518();
      v61 = sub_23A14071C(v30, v31, &v62);
      sub_23A19B728();
      swift_bridgeObjectRelease();

      *(_WORD *)(v27 + 12) = 2080;
      v32 = sub_23A182540();
      v61 = sub_23A14071C(v32, v33, &v62);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2080;
      LOBYTE(v61) = *(_BYTE *)(v19 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
      v34 = TransferClient.State.description.getter();
      v61 = sub_23A14071C(v34, v35, &v62);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v25, v26, "[Request] Received error=%s, %s state=%s", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v28, -1, -1);
      MEMORY[0x23B842FA4](v27, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    *v17 = (uint64_t)v20;
    swift_storeEnumTagMultiPayload();
    v53 = v20;
    v60(v17);
    swift_release_n();

    swift_release();
    return sub_23A13ACB8((uint64_t)v17, &qword_256946570);
  }
  sub_23A13AB54((uint64_t)v14, (uint64_t)v11, type metadata accessor for CosmoFileHttpResponse);
  v38 = *(_QWORD *)(v19 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesReceivedCount);
  v39 = __OFADD__(v38, 1);
  v40 = v38 + 1;
  if (v39)
  {
    __break(1u);
    goto LABEL_18;
  }
  *(_QWORD *)(v19 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesReceivedCount) = v40;
  v41 = qword_2569443B0;
  swift_retain_n();
  if (v41 != -1)
LABEL_18:
    swift_once();
  v42 = sub_23A19AE28();
  __swift_project_value_buffer(v42, (uint64_t)qword_25694EB88);
  sub_23A13ABDC((uint64_t)v11, (uint64_t)v9, type metadata accessor for CosmoFileHttpResponse);
  swift_retain_n();
  v43 = sub_23A19AE10();
  v44 = sub_23A19B6BC();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    v62 = v57;
    *(_DWORD *)v45 = 136315650;
    sub_23A19AC0C();
    sub_23A131E34(&qword_256944A50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v46 = sub_23A19B8FC();
    v61 = sub_23A14071C(v46, v47, &v62);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A13AC20((uint64_t)v9, type metadata accessor for CosmoFileHttpResponse);
    *(_WORD *)(v45 + 12) = 2080;
    v48 = sub_23A182540();
    v61 = sub_23A14071C(v48, v49, &v62);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 22) = 2080;
    LOBYTE(v61) = *(_BYTE *)(v19 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
    v50 = TransferClient.State.description.getter();
    v61 = sub_23A14071C(v50, v51, &v62);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v43, v44, "[Request] Received file-response at file=%s, %s state=%s", (uint8_t *)v45, 0x20u);
    v52 = v57;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v52, -1, -1);
    MEMORY[0x23B842FA4](v45, -1, -1);

  }
  else
  {
    sub_23A13AC20((uint64_t)v9, type metadata accessor for CosmoFileHttpResponse);

    swift_release_n();
  }
  v55 = sub_23A19AC0C();
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v17, v11, v55);
  swift_storeEnumTagMultiPayload();
  v60(v17);
  swift_release_n();
  sub_23A13ACB8((uint64_t)v17, &qword_256946570);
  return sub_23A13AC20((uint64_t)v11, type metadata accessor for CosmoFileHttpResponse);
}

unint64_t sub_23A182540()
{
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 0xD000000000000016;
}

uint64_t TransferClient.markAsRejected(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A182664(a1, a2, a3, (uint64_t)&unk_250B26588, (uint64_t)sub_23A1830F0, (uint64_t)&block_descriptor_20);
}

uint64_t sub_23A182664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v25 = a5;
  v26 = a6;
  v23[1] = a4;
  v24 = a2;
  v9 = sub_23A19B2D8();
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A19B2F0();
  v28 = *(_QWORD *)(v12 - 8);
  v29 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TransferClient.FileDescriptor(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v27 = *(_QWORD *)(v6 + 16);
  sub_23A13ABDC(a1, (uint64_t)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TransferClient.FileDescriptor);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = (_QWORD *)swift_allocObject();
  v20 = v24;
  v19[2] = v6;
  v19[3] = v20;
  v19[4] = a3;
  sub_23A13AB54((uint64_t)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v19 + v18, type metadata accessor for TransferClient.FileDescriptor);
  aBlock[4] = v25;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = v26;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23A19B2E4();
  v31 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v14, v11, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v29);
  return swift_release();
}

void sub_23A1828CC(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  _OWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  NSObject *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD, _QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD, _QWORD);
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v8 = type metadata accessor for RejectFileRequest(0);
  MEMORY[0x24BDAC7A8](v8);
  v59 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TransferClient.FileDescriptor(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v53 - v15;
  v17 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  v18 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v18 > 0xF)
    return;
  if ((v18 & 0xFE) != 0xE)
    goto LABEL_9;
  swift_getKeyPath();
  swift_getKeyPath();
  v58 = a2;
  sub_23A19AE64();
  swift_release();
  a2 = v58;
  swift_release();
  v19 = *(_QWORD *)(v60 + 16);
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_9:
    if (qword_2569443B0 != -1)
      swift_once();
    v24 = sub_23A19AE28();
    __swift_project_value_buffer(v24, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v25 = sub_23A19AE10();
    v26 = sub_23A19B6A4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v57 = a3;
      v28 = (uint8_t *)v27;
      v29 = swift_slowAlloc();
      *(_DWORD *)v28 = 136315138;
      v60 = v29;
      LOBYTE(v62) = *(_BYTE *)(a1 + v17);
      v30 = TransferClient.State.description.getter();
      v62 = sub_23A14071C(v30, v31, &v60);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v25, v26, "[Reject] Ignoring, no file-list received, state=%s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v29, -1, -1);
      MEMORY[0x23B842FA4](v28, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_23A13A180();
    v32 = (void *)swift_allocError();
    *v33 = xmmword_23A19C6F0;
    a2(v32, 1);
LABEL_17:

    return;
  }
  v57 = a3;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23A19AE64();
  swift_release();
  swift_release();
  v20 = *(_QWORD *)(v60 + 16);
  if (!v20)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    v60 = 0;
    v61 = 0xE000000000000000;
    sub_23A19B794();
    sub_23A19B590();
    sub_23A19AD2C();
    sub_23A131E34(&qword_256946070, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_23A19B8FC();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    v34 = v60;
    v35 = v61;
    sub_23A13A180();
    v32 = (void *)swift_allocError();
    *v36 = v34;
    v36[1] = v35;
    v58(v32, 1);
    goto LABEL_17;
  }
  v21 = *(unsigned __int8 *)(v11 + 80);
  v55 = ~v21;
  v56 = v21;
  v22 = v60 + ((v21 + 32) & ~v21);
  v23 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  while ((sub_23A19ACFC() & 1) == 0)
  {
    v22 += v23;
    if (!--v20)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease_n();
  if (qword_2569443B0 != -1)
    swift_once();
  v37 = sub_23A19AE28();
  __swift_project_value_buffer(v37, (uint64_t)qword_25694EB88);
  sub_23A13ABDC(a4, (uint64_t)v16, type metadata accessor for TransferClient.FileDescriptor);
  swift_retain_n();
  v38 = sub_23A19AE10();
  v39 = sub_23A19B6BC();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v54 = swift_slowAlloc();
    v60 = v54;
    *(_DWORD *)v40 = 136315394;
    v53 = v40 + 4;
    v41 = TransferClient.FileDescriptor.description.getter();
    v62 = sub_23A14071C(v41, v42, &v60);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A13AC20((uint64_t)v16, type metadata accessor for TransferClient.FileDescriptor);
    *(_WORD *)(v40 + 12) = 2080;
    LOBYTE(v62) = *(_BYTE *)(a1 + v17);
    v43 = v38;
    v44 = TransferClient.State.description.getter();
    v62 = sub_23A14071C(v44, v45, &v60);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v38, v39, "[Reject] Rejecting file=%s, state=%s", (uint8_t *)v40, 0x16u);
    v46 = v54;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v46, -1, -1);
    MEMORY[0x23B842FA4](v40, -1, -1);

  }
  else
  {
    sub_23A13AC20((uint64_t)v16, type metadata accessor for TransferClient.FileDescriptor);

    swift_release_n();
  }
  v47 = v58;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient))
  {
    v48 = sub_23A19AD2C();
    v49 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v59, a4, v48);
    v50 = swift_allocObject();
    swift_weakInit();
    sub_23A13ABDC(a4, (uint64_t)v14, type metadata accessor for TransferClient.FileDescriptor);
    v51 = (v56 + 40) & v55;
    v52 = (_QWORD *)swift_allocObject();
    v52[2] = v50;
    v52[3] = v47;
    v52[4] = v57;
    sub_23A13AB54((uint64_t)v14, (uint64_t)v52 + v51, type metadata accessor for TransferClient.FileDescriptor);
    swift_retain();
    swift_retain();
    sub_23A1735EC(v49, 0, (uint64_t)sub_23A1856BC, (uint64_t)v52, type metadata accessor for RejectFileRequest, (uint64_t)&unk_250B268E0, (uint64_t)sub_23A18570C, (uint64_t)&block_descriptor_63);
    swift_release();
    swift_release();
    sub_23A13AC20(v49, type metadata accessor for RejectFileRequest);
  }
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TransferClient.FileDescriptor(0) - 8) + 80);
  v2 = (v1 + 40) & ~v1;
  swift_release();
  swift_release();
  v3 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A1830F0()
{
  return sub_23A1830FC((uint64_t (*)(_QWORD, _QWORD, _QWORD, char *))sub_23A1828CC);
}

uint64_t sub_23A1830FC(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, char *))
{
  char *v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TransferClient.FileDescriptor(0) - 8) + 80);
  return a1(*((_QWORD *)v1 + 2), *((_QWORD *)v1 + 3), *((_QWORD *)v1 + 4), &v1[(v2 + 40) & ~v2]);
}

void sub_23A183140(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char v15;
  uint64_t Strong;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  void (*v45)(_QWORD, _QWORD);
  uint64_t v46;
  uint64_t v47;

  v8 = type metadata accessor for TransferClient.FileDescriptor(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v45 - v12;
  v14 = *(void **)a1;
  v15 = *(_BYTE *)(a1 + 8);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = Strong;
    if ((v15 & 1) != 0)
    {
      v18 = v14;
      if (qword_2569443B0 != -1)
        swift_once();
      v19 = sub_23A19AE28();
      __swift_project_value_buffer(v19, (uint64_t)qword_25694EB88);
      sub_23A13ABDC(a5, (uint64_t)v11, type metadata accessor for TransferClient.FileDescriptor);
      swift_retain();
      sub_23A13AC5C(v14, 1);
      swift_retain();
      sub_23A13AC5C(v14, 1);
      v20 = sub_23A19AE10();
      v21 = sub_23A19B6A4();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        v45 = a3;
        v24 = v23;
        v47 = v23;
        *(_DWORD *)v22 = 136315650;
        v25 = TransferClient.FileDescriptor.description.getter();
        v46 = sub_23A14071C(v25, v26, &v47);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A13AC20((uint64_t)v11, type metadata accessor for TransferClient.FileDescriptor);
        *(_WORD *)(v22 + 12) = 2080;
        v46 = (uint64_t)v14;
        v27 = v14;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
        v28 = sub_23A19B518();
        v46 = sub_23A14071C(v28, v29, &v47);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A13AC68(v14, 1);
        sub_23A13AC68(v14, 1);
        *(_WORD *)(v22 + 22) = 2080;
        LOBYTE(v46) = *(_BYTE *)(v17 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
        v30 = TransferClient.State.description.getter();
        v46 = sub_23A14071C(v30, v31, &v47);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v20, v21, "[Reject] Failed to reject file=%s, error=%s state=%s", (uint8_t *)v22, 0x20u);
        swift_arrayDestroy();
        v32 = v24;
        a3 = v45;
        MEMORY[0x23B842FA4](v32, -1, -1);
        MEMORY[0x23B842FA4](v22, -1, -1);

      }
      else
      {
        sub_23A13AC20((uint64_t)v11, type metadata accessor for TransferClient.FileDescriptor);
        sub_23A13AC68(v14, 1);
        sub_23A13AC68(v14, 1);

        swift_release_n();
      }
      v44 = v14;
      a3(v14, 1);
      swift_release();
      sub_23A13AC68(v14, 1);
      sub_23A13AC68(v14, 1);
    }
    else
    {
      if (qword_2569443B0 != -1)
        swift_once();
      v35 = sub_23A19AE28();
      __swift_project_value_buffer(v35, (uint64_t)qword_25694EB88);
      sub_23A13ABDC(a5, (uint64_t)v13, type metadata accessor for TransferClient.FileDescriptor);
      swift_retain_n();
      v36 = sub_23A19AE10();
      v37 = sub_23A19B6BC();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc();
        v39 = swift_slowAlloc();
        v47 = v39;
        *(_DWORD *)v38 = 136315394;
        v40 = TransferClient.FileDescriptor.description.getter();
        v46 = sub_23A14071C(v40, v41, &v47);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A13AC20((uint64_t)v13, type metadata accessor for TransferClient.FileDescriptor);
        *(_WORD *)(v38 + 12) = 2080;
        LOBYTE(v46) = *(_BYTE *)(v17 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
        v42 = TransferClient.State.description.getter();
        v46 = sub_23A14071C(v42, v43, &v47);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v36, v37, "[Reject] Host rejected file=%s, state=(%s)", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v39, -1, -1);
        MEMORY[0x23B842FA4](v38, -1, -1);

      }
      else
      {
        sub_23A13AC20((uint64_t)v13, type metadata accessor for TransferClient.FileDescriptor);

        swift_release_n();
      }
      a3(0, 0);
      swift_release();
    }
  }
  else
  {
    sub_23A13A180();
    v33 = (void *)swift_allocError();
    *v34 = 0xD000000000000017;
    v34[1] = 0x800000023A1A1C70;
    a3(v33, 1);

  }
}

Swift::Void __swiftcall TransferClient.disconnect()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v12[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_23A19B2D8();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A19B2F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(_QWORD *)(v1 + 16);
  aBlock[4] = sub_23A183B20;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_23;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_23A19B2E4();
  v12[1] = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
}

void sub_23A183914(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  v2 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v2 <= 0xF)
  {
    if (v2 - 3 > 8)
    {
      LOBYTE(v11) = 3;
      sub_23A179838((unsigned __int8 *)&v11, 0xD00000000000001ALL, 0x800000023A1A1C10);
    }
    else
    {
      if (qword_2569443B0 != -1)
        swift_once();
      v4 = sub_23A19AE28();
      __swift_project_value_buffer(v4, (uint64_t)qword_25694EB88);
      swift_retain_n();
      v5 = sub_23A19AE10();
      v6 = sub_23A19B6BC();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        v8 = swift_slowAlloc();
        *(_DWORD *)v7 = 136315138;
        v11 = v8;
        v9 = TransferClient.State.description.getter();
        sub_23A14071C(v9, v10, &v11);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v5, v6, "[Disconnect] Queueing disconnect until file-transfer-channel established, state=%s", v7, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v8, -1, -1);
        MEMORY[0x23B842FA4](v7, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      *(_BYTE *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_stateAtDisconnect) = *(_BYTE *)(a1 + v1);
    }
  }
}

void sub_23A183B20()
{
  uint64_t v0;

  sub_23A183914(v0);
}

unint64_t sub_23A183B2C()
{
  unint64_t result;

  result = qword_256946128;
  if (!qword_256946128)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for TransferClient.State, &type metadata for TransferClient.State);
    atomic_store(result, (unint64_t *)&qword_256946128);
  }
  return result;
}

unint64_t sub_23A183B74()
{
  unint64_t result;

  result = qword_256946130;
  if (!qword_256946130)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for TransferClient.AttestationResult, &type metadata for TransferClient.AttestationResult);
    atomic_store(result, (unint64_t *)&qword_256946130);
  }
  return result;
}

uint64_t sub_23A183BC0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
  swift_beginAccess();
  result = MEMORY[0x23B843028](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_23A183C18(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of TransferClientDelegate.attestationPassed(transferClient:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TransferClientDelegate.attestationFailed(transferClient:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TransferClientDelegate.closed(reason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for TransferClient.Configuration()
{
  return &type metadata for TransferClient.Configuration;
}

uint64_t *initializeBufferWithCopyOfBuffer for TransferClient.FileDescriptor(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23A19AD2C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TransferClient.FileDescriptor(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransferClient.FileDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransferClient.FileDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for TransferClient.FileDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for TransferClient.FileDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for TransferClient.FileDescriptor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A183F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23A19AD2C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TransferClient.FileDescriptor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A183FF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23A19AD2C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23A18406C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A19AD2C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TransferClient.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TransferClient.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_23A1841C8 + 4 * byte_23A19E0A7[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_23A1841FC + 4 * byte_23A19E0A2[v4]))();
}

uint64_t sub_23A1841FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A184204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A18420CLL);
  return result;
}

uint64_t sub_23A184218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A184220);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_23A184224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A18422C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransferClient.State()
{
  return &type metadata for TransferClient.State;
}

uint64_t storeEnumTagSinglePayload for TransferClient.AttestationResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A184294 + 4 * byte_23A19E0B1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A1842C8 + 4 * byte_23A19E0AC[v4]))();
}

uint64_t sub_23A1842C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A1842D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A1842D8);
  return result;
}

uint64_t sub_23A1842E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A1842ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A1842F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A1842F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransferClient.AttestationResult()
{
  return &type metadata for TransferClient.AttestationResult;
}

uint64_t sub_23A184314()
{
  return type metadata accessor for TransferClient(0);
}

void sub_23A18431C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23A184458();
  if (v0 <= 0x3F)
  {
    sub_23A1844B0();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for TransferClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransferClient.fileTransfers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of TransferClient.$fileTransfers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of TransferClient.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of TransferClient.__allocating_init(delegate:config:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 760))();
}

void sub_23A184458()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256946208)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256946088);
    v0 = sub_23A19AE7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256946208);
  }
}

void sub_23A1844B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256946210)
  {
    sub_23A19AD2C();
    v0 = sub_23A19B710();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256946210);
  }
}

uint64_t sub_23A184504(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_2569443B0 != -1)
      swift_once();
    v4 = sub_23A19AE28();
    __swift_project_value_buffer(v4, (uint64_t)qword_25694EB88);
    swift_retain_n();
    v5 = sub_23A19AE10();
    v6 = sub_23A19B6BC();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = TransferClient.State.description.getter();
      sub_23A14071C(v9, v10, &v11);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v5, v6, "[Close] Failsafe triggered, state=%s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v8, -1, -1);
      MEMORY[0x23B842FA4](v7, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v11) = a2;
    sub_23A185254((char *)&v11);
    return swift_release();
  }
  return result;
}

void sub_23A1846F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v5;
  char v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_23A19B344();
    if ((v6 & 1) != 0)
    {
      v7 = v5;
      if (qword_2569443B0 != -1)
        swift_once();
      v8 = sub_23A19AE28();
      __swift_project_value_buffer(v8, (uint64_t)qword_25694EB88);
      swift_retain();
      sub_23A13AC5C(v5, 1);
      swift_retain();
      sub_23A13AC5C(v5, 1);
      v9 = sub_23A19AE10();
      v10 = sub_23A19B6A4();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        v25 = v12;
        *(_DWORD *)v11 = 136315394;
        v13 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
        v14 = sub_23A19B518();
        sub_23A14071C(v14, v15, &v25);
        sub_23A19B728();
        swift_bridgeObjectRelease();
        sub_23A13AC68(v5, 1);
        sub_23A13AC68(v5, 1);
        *(_WORD *)(v11 + 12) = 2080;
        v16 = TransferClient.State.description.getter();
        sub_23A14071C(v16, v17, &v25);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v9, v10, "[Close] Failed to receive ack from TransferHost, error=%s, state=%s", (uint8_t *)v11, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v12, -1, -1);
        MEMORY[0x23B842FA4](v11, -1, -1);

      }
      else
      {
        sub_23A13AC68(v5, 1);
        sub_23A13AC68(v5, 1);

        swift_release_n();
      }
      LOBYTE(v25) = a4;
      sub_23A185254((char *)&v25);
      swift_release();
      sub_23A13AC68(v5, 1);
    }
    else
    {
      if (qword_2569443B0 != -1)
        swift_once();
      v18 = sub_23A19AE28();
      __swift_project_value_buffer(v18, (uint64_t)qword_25694EB88);
      swift_retain_n();
      v19 = sub_23A19AE10();
      v20 = sub_23A19B6BC();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v25 = v22;
        *(_DWORD *)v21 = 136315138;
        v23 = TransferClient.State.description.getter();
        sub_23A14071C(v23, v24, &v25);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v19, v20, "[Close] TransferHost acked request, state=%s", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v22, -1, -1);
        MEMORY[0x23B842FA4](v21, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      LOBYTE(v25) = a4;
      sub_23A185254((char *)&v25);
      swift_release();
    }
  }
}

uint64_t sub_23A184B40(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23A184B78(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23A184B5C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A184CE0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23A184B78(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256946600);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23A19B830();
  __break(1u);
  return result;
}

uint64_t sub_23A184CE0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569465E8);
  v10 = *(_QWORD *)(type metadata accessor for TransferClient.FileDescriptor(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for TransferClient.FileDescriptor(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_23A19B830();
  __break(1u);
  return result;
}

_QWORD *sub_23A184EC0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a5;
  v18 = a6();
  type metadata accessor for PendingRequest(0);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  sub_23A19AD20();
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = 0;
  v11 = (_QWORD *)((char *)v10
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  *v11 = 0;
  v11[1] = 0;
  v12 = (char *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
  v12[32] = 0;
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  sub_23A13A83C(&v16, (uint64_t)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  *((_BYTE *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) = a1;
  v10[4] = a2;
  v13 = (_QWORD *)((char *)v10
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  v14 = *(_QWORD *)((char *)v10
                  + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  *v13 = a3;
  v13[1] = a4;
  sub_23A13A1E4(v14);
  return v10;
}

_QWORD *sub_23A184FA8(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v16;
  ValueMetadata *v17;
  unint64_t v18;

  v17 = &type metadata for LeaseRequest;
  v18 = sub_23A185DEC();
  LOBYTE(v16) = a1;
  type metadata accessor for PendingRequest(0);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  sub_23A19AD20();
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = 0;
  v11 = (_QWORD *)((char *)v10
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  *v11 = 0;
  v11[1] = 0;
  v12 = (char *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
  v12[32] = 0;
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  sub_23A13A83C(&v16, (uint64_t)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  *((_BYTE *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) = a2;
  v10[4] = a3;
  v13 = (_QWORD *)((char *)v10
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  v14 = *(_QWORD *)((char *)v10
                  + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  *v13 = a4;
  v13[1] = a5;
  sub_23A13A1E4(v14);
  return v10;
}

_QWORD *sub_23A1850A0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a6(0);
  v25 = sub_23A131E34(a7, a6, a8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
  sub_23A13AB54(a1, (uint64_t)boxed_opaque_existential_1, a6);
  type metadata accessor for PendingRequest(0);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  sub_23A19AD20();
  *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = 0;
  v18 = (_QWORD *)((char *)v17
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  *v18 = 0;
  v18[1] = 0;
  v19 = (char *)v17 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
  v19[32] = 0;
  *(_OWORD *)v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  sub_23A13A83C(&v23, (uint64_t)v17 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  *((_BYTE *)v17 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) = a2;
  v17[4] = a3;
  v20 = (_QWORD *)((char *)v17
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  v21 = *(_QWORD *)((char *)v17
                  + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  *v20 = a4;
  v20[1] = a5;
  sub_23A13A1E4(v21);
  return v17;
}

uint64_t sub_23A1851CC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23A185254(char *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  char v27[24];

  v3 = v1;
  v5 = sub_23A19B35C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *a1;
  v10 = *(void **)(v3 + 16);
  *(_QWORD *)v8 = v10;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v11 = v10;
  LOBYTE(v10) = sub_23A19B374();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 0x10u)
    return result;
  v27[0] = 17;
  sub_23A1772DC(v27);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_stateAtDisconnect) = 18;
  v2 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
  v8 = *(char **)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
  if (v8)
  {
    v13 = qword_2569443B0;
    swift_retain();
    if (v13 == -1)
    {
LABEL_5:
      v14 = sub_23A19AE28();
      __swift_project_value_buffer(v14, (uint64_t)qword_25694EB88);
      v15 = sub_23A19AE10();
      v16 = sub_23A19B6BC();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_23A123000, v15, v16, "[Close] Found incomplete onConnect() lambda, completing with error", v17, 2u);
        MEMORY[0x23B842FA4](v17, -1, -1);
      }

      sub_23A13A180();
      v18 = (void *)swift_allocError();
      *v19 = xmmword_23A19E080;
      ((void (*)(void *, uint64_t))v8)(v18, 1);

      sub_23A13A1E4((uint64_t)v8);
      v20 = *v2;
      goto LABEL_9;
    }
LABEL_17:
    swift_once();
    goto LABEL_5;
  }
  v20 = 0;
LABEL_9:
  *v2 = 0;
  v2[1] = 0;
  sub_23A13A1E4(v20);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult) = 2;
  sub_23A17F51C();
  v21 = OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferBrowser;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferBrowser))
  {
    swift_retain();
    sub_23A167380();
    swift_release();
  }
  *(_QWORD *)(v3 + v21) = 0;
  swift_release();
  v22 = OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient))
  {
    swift_retain();
    sub_23A1693D0();
    swift_release();
  }
  *(_QWORD *)(v3 + v22) = 0;
  swift_release();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier) = 0;
  swift_release();
  v23 = v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
  swift_beginAccess();
  result = MEMORY[0x23B843028](v23);
  if (result)
  {
    v24 = *(_QWORD *)(v23 + 8);
    ObjectType = swift_getObjectType();
    HIBYTE(v26) = v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 24))((char *)&v26 + 7, ObjectType, v24);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23A185574()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A185598()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A1855C4()
{
  uint64_t v0;

  return sub_23A184504(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23A1855D4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23A185608(uint64_t a1)
{
  uint64_t v1;

  sub_23A1846F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_23A185618()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23A185628()
{
  uint64_t v0;

  sub_23A173870(*(_QWORD *)(v0 + 16), *(void (**)(id *))(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_23A185638()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23A185648(uint64_t a1)
{
  uint64_t v1;

  return sub_23A176010(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(_QWORD *)(v1 + 32), (void (*)(uint64_t *__return_ptr, char *))sub_23A13C898, (uint64_t (*)(uint64_t, _QWORD))sub_23A13AC68);
}

unint64_t sub_23A185674()
{
  unint64_t result;

  result = qword_256946548;
  if (!qword_256946548)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CloseRequest, &type metadata for CloseRequest);
    atomic_store(result, (unint64_t *)&qword_256946548);
  }
  return result;
}

void sub_23A1856BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TransferClient.FileDescriptor(0) - 8) + 80);
  sub_23A183140(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_23A185700()
{
  return objectdestroy_59Tm(type metadata accessor for RejectFileRequest);
}

uint64_t sub_23A18570C()
{
  return sub_23A185820(type metadata accessor for RejectFileRequest, (uint64_t (*)(_QWORD, _QWORD, _QWORD, char *, _QWORD))sub_23A174BA8);
}

uint64_t sub_23A185720()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23A185730(uint64_t a1)
{
  uint64_t v1;

  return sub_23A176010(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(_QWORD *)(v1 + 32), (void (*)(uint64_t *__return_ptr, char *))sub_23A13CB5C, (uint64_t (*)(uint64_t, _QWORD))sub_23A185E54);
}

uint64_t sub_23A18575C()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23A18576C(uint64_t a1)
{
  uint64_t v1;

  return sub_23A181DD4(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23A185778()
{
  return objectdestroy_59Tm(type metadata accessor for FileRequest);
}

uint64_t objectdestroy_59Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  v3 = (v2 + 40) & ~v2;
  swift_release();
  swift_release();
  v4 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v1 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_23A18580C()
{
  return sub_23A185820(type metadata accessor for FileRequest, (uint64_t (*)(_QWORD, _QWORD, _QWORD, char *, _QWORD))sub_23A174620);
}

uint64_t sub_23A185820(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, _QWORD, _QWORD, char *, _QWORD))
{
  char *v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a1(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return a2(*((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), *((_QWORD *)v2 + 4), &v2[v4], v2[v4 + *(_QWORD *)(v3 + 64)]);
}

uint64_t sub_23A185874()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23A185884(uint64_t a1)
{
  uint64_t v1;

  return sub_23A175A94(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23A185890(uint64_t *a1)
{
  uint64_t v1;

  return sub_23A17AC80(a1, v1, (void (*)(_QWORD *))sub_23A179F5C);
}

uint64_t sub_23A1858B4()
{
  return sub_23A13AE80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A170ECC);
}

unint64_t sub_23A1858C0()
{
  unint64_t result;

  result = qword_256946590;
  if (!qword_256946590)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F8CC, &type metadata for Spake2ShareRequest);
    atomic_store(result, (unint64_t *)&qword_256946590);
  }
  return result;
}

uint64_t sub_23A185904()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23A185914(uint64_t a1)
{
  return sub_23A185A1C(a1, (void (*)(void))sub_23A185934);
}

uint64_t sub_23A185928(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_23A13A824(a1, a2, a3);
  else
    return sub_23A125ED8(a1, a2);
}

unint64_t sub_23A185934()
{
  unint64_t result;

  result = qword_256946598;
  if (!qword_256946598)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F8A4, &type metadata for Spake2ShareRequest.Response);
    atomic_store(result, (unint64_t *)&qword_256946598);
  }
  return result;
}

uint64_t sub_23A185978(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_23A13A924(a1, a2, a3);
  else
    return sub_23A131DF0(a1, a2);
}

uint64_t sub_23A185984(uint64_t *a1)
{
  uint64_t v1;

  return sub_23A17AC80(a1, v1, (void (*)(_QWORD *))sub_23A17AD04);
}

uint64_t sub_23A1859A8()
{
  return sub_23A13AE80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A1715A4);
}

unint64_t sub_23A1859B4()
{
  unint64_t result;

  result = qword_2569465B0;
  if (!qword_2569465B0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F87C, &type metadata for Spake2ConfirmRequest);
    atomic_store(result, (unint64_t *)&qword_2569465B0);
  }
  return result;
}

uint64_t sub_23A1859F8()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23A185A08(uint64_t a1)
{
  return sub_23A185A1C(a1, (void (*)(void))sub_23A185A5C);
}

uint64_t sub_23A185A1C(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;

  return sub_23A17233C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8), *(_QWORD *)(v2 + 16), *(void (**)(__int128 *))(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

unint64_t sub_23A185A5C()
{
  unint64_t result;

  result = qword_2569465B8;
  if (!qword_2569465B8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F854, &type metadata for Spake2ConfirmRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2569465B8);
  }
  return result;
}

uint64_t sub_23A185AA0(uint64_t *a1)
{
  return sub_23A17C494(a1);
}

uint64_t sub_23A185AA8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A185ADC()
{
  return sub_23A13AE80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23A171C7C);
}

unint64_t sub_23A185AE8()
{
  unint64_t result;

  result = qword_2569465C0;
  if (!qword_2569465C0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F82C, &type metadata for FileChannelSetupRequest);
    atomic_store(result, (unint64_t *)&qword_2569465C0);
  }
  return result;
}

uint64_t sub_23A185B2C()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23A185B3C(uint64_t a1)
{
  uint64_t v1;

  return sub_23A172A78(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8), *(_QWORD *)(v1 + 16), *(void (**)(__int128 *))(v1 + 24));
}

unint64_t sub_23A185B64()
{
  unint64_t result;

  result = qword_2569465C8;
  if (!qword_2569465C8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F804, &type metadata for FileChannelSetupRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2569465C8);
  }
  return result;
}

uint64_t sub_23A185BA8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return sub_23A13A924(a1, a2, a3);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A185BD8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return sub_23A13A824(a1, a2, a3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A185C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256944500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_23A185C50(char *a1)
{
  sub_23A17E490(a1);
}

uint64_t sub_23A185C58(char *a1)
{
  return sub_23A17EC88(a1);
}

uint64_t sub_23A185C60(uint64_t *a1)
{
  return sub_23A17F6F0(a1);
}

uint64_t sub_23A185C68(uint64_t *a1)
{
  return sub_23A17FE64(a1);
}

uint64_t sub_23A185C70()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23A185C80()
{
  uint64_t v0;

  sub_23A173D00(*(_QWORD *)(v0 + 16), *(void (**)(void **))(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_23A185C90()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23A185CA0(uint64_t a1)
{
  uint64_t v1;

  sub_23A1750F8(a1, *(_QWORD *)(v1 + 16), *(void (**)(void **))(v1 + 24));
}

void sub_23A185CAC(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

unint64_t sub_23A185CBC()
{
  unint64_t result;

  result = qword_2569465D8;
  if (!qword_2569465D8)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for FileListRequest, &type metadata for FileListRequest);
    atomic_store(result, (unint64_t *)&qword_2569465D8);
  }
  return result;
}

id sub_23A185D00(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_23A185D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569465E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A185D58()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23A185D68()
{
  uint64_t v0;

  sub_23A174190(*(_QWORD *)(v0 + 16), *(void (**)(void **))(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_BYTE *)(v0 + 41));
}

uint64_t sub_23A185D7C()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_4Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_23A185DD0(uint64_t a1)
{
  uint64_t v1;

  sub_23A1755C0(a1, *(_QWORD *)(v1 + 16), *(void (**)(void **))(v1 + 24));
}

void sub_23A185DDC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

unint64_t sub_23A185DEC()
{
  unint64_t result;

  result = qword_2569465F0;
  if (!qword_2569465F0)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for LeaseRequest, &type metadata for LeaseRequest);
    atomic_store(result, (unint64_t *)&qword_2569465F0);
  }
  return result;
}

id sub_23A185E30(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_23A185E40(char *a1)
{
  sub_23A1780A0(a1);
}

uint64_t sub_23A185E48(char a1)
{
  return sub_23A17886C(a1 & 1);
}

_QWORD *CosmoSerialChannelHost.__allocating_init(name:descriptor:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v8;

  swift_allocObject();
  v8 = sub_23A188680(a1, a2, a3, a4);

  return v8;
}

uint64_t sub_23A185F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_256946610);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256946610);
  if (qword_256944398 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_25694EB40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

Cosmo::CosmoSerialChannelHost::State_optional __swiftcall CosmoSerialChannelHost.State.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  Cosmo::CosmoSerialChannelHost::State_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23A19B860();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t CosmoSerialChannelHost.State.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6164696C61766E69;
  else
    return 0x7964616572;
}

Cosmo::CosmoSerialChannelHost::State_optional sub_23A186064(Swift::String *a1)
{
  return CosmoSerialChannelHost.State.init(rawValue:)(*a1);
}

uint64_t sub_23A186070@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CosmoSerialChannelHost.State.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23A186094@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A14EB94;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A13A0F8(v4);
}

uint64_t sub_23A18611C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A14EB94;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_23A13A0F8(v3);
  return sub_23A13A1E4(v8);
}

_QWORD *CosmoSerialChannelHost.init(name:descriptor:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v5;

  v5 = sub_23A188680(a1, a2, a3, a4);

  return v5;
}

uint64_t sub_23A1861F4()
{
  return sub_23A152E08((uint64_t)sub_23A188D60, (uint64_t)&block_descriptor_17);
}

uint64_t sub_23A186208(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD **)(a1 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_listener);
  v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v3 = v1[2];
  v1[2] = sub_23A188D68;
  v1[3] = v2;
  sub_23A13A1E4(v3);
  v4 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v5 = v1[4];
  v1[4] = sub_23A188D88;
  v1[5] = v4;
  sub_23A13A1E4(v5);
  if (qword_2569443D8 != -1)
    swift_once();
  v6 = sub_23A19AE28();
  __swift_project_value_buffer(v6, (uint64_t)qword_256946610);
  swift_retain_n();
  v7 = sub_23A19AE10();
  v8 = sub_23A19B6BC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_retain();
    v11 = CosmoSerialChannelHost.description.getter();
    v13 = v12;
    swift_release();
    sub_23A14071C(v11, v13, &v15);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v7, v8, "[Start] Listener starting, %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v10, -1, -1);
    MEMORY[0x23B842FA4](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return sub_23A15E514();
}

uint64_t sub_23A186474(_QWORD *a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A186988(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A1864D0()
{
  return sub_23A152E08((uint64_t)sub_23A188D44, (uint64_t)&block_descriptor_14_0);
}

uint64_t sub_23A1864E4(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  void (*v30)(uint64_t *);
  uint64_t v31;
  uint64_t v32[3];

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = *(void **)(v2 + 48);
  *v7 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    swift_once();
LABEL_4:
    v11 = sub_23A19AE28();
    __swift_project_value_buffer(v11, (uint64_t)qword_256946610);
    swift_retain_n();
    v12 = sub_23A19AE10();
    v13 = sub_23A19B6BC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v32[0] = v15;
      *(_DWORD *)v14 = 136315394;
      LOBYTE(v31) = v8;
      v16 = sub_23A19B518();
      v31 = sub_23A14071C(v16, v17, v32);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      swift_retain();
      v18 = CosmoSerialChannelHost.description.getter();
      v20 = v19;
      swift_release();
      v31 = sub_23A14071C(v18, v20, v32);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v12, v13, "Listener invalidated, state=%s %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v15, -1, -1);
      MEMORY[0x23B842FA4](v14, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    result = swift_beginAccess();
    v30 = *(void (**)(uint64_t *))(v2 + 16);
    if (v30)
    {
      LOBYTE(v31) = 1;
LABEL_16:
      swift_retain();
      v30(&v31);
      return sub_23A13A1E4((uint64_t)v30);
    }
    return result;
  }
  if (v8)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_ready) = 0;
    *(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_terminated) = 1;
    if (qword_2569443D8 == -1)
      goto LABEL_4;
    goto LABEL_19;
  }
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_ready) = 1;
  if (qword_2569443D8 != -1)
    swift_once();
  v21 = sub_23A19AE28();
  __swift_project_value_buffer(v21, (uint64_t)qword_256946610);
  swift_retain_n();
  v22 = sub_23A19AE10();
  v23 = sub_23A19B6BC();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v32[0] = v25;
    *(_DWORD *)v24 = 136315138;
    swift_retain();
    v26 = CosmoSerialChannelHost.description.getter();
    v28 = v27;
    swift_release();
    v31 = sub_23A14071C(v26, v28, v32);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v22, v23, "Listener ready, %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v25, -1, -1);
    MEMORY[0x23B842FA4](v24, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  result = swift_beginAccess();
  v30 = *(void (**)(uint64_t *))(v2 + 16);
  if (v30)
  {
    LOBYTE(v31) = 0;
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_23A186988(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37[3];

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (_QWORD *)((char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + 48);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v9 = v8;
  LOBYTE(v8) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v10 = OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection))
  {
    if (qword_2569443D8 == -1)
    {
LABEL_4:
      v11 = sub_23A19AE28();
      __swift_project_value_buffer(v11, (uint64_t)qword_256946610);
      swift_retain_n();
      v12 = sub_23A19AE10();
      v13 = sub_23A19B6BC();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v37[0] = v15;
        *(_DWORD *)v14 = 136315138;
        swift_retain();
        v16 = CosmoSerialChannelHost.description.getter();
        v18 = v17;
        swift_release();
        v36 = sub_23A14071C(v16, v18, v37);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v12, v13, "Ignoring incoming connection, %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v15, -1, -1);
        MEMORY[0x23B842FA4](v14, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      return sub_23A15C388();
    }
LABEL_15:
    swift_once();
    goto LABEL_4;
  }
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_acceptedConnectionCount);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_17;
  }
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_acceptedConnectionCount) = v21;
  if (qword_2569443D8 != -1)
LABEL_17:
    swift_once();
  v22 = sub_23A19AE28();
  __swift_project_value_buffer(v22, (uint64_t)qword_256946610);
  swift_retain_n();
  v23 = sub_23A19AE10();
  v24 = sub_23A19B6BC();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v37[0] = v26;
    *(_DWORD *)v25 = 136315138;
    v35[1] = v25 + 4;
    swift_retain();
    v27 = CosmoSerialChannelHost.description.getter();
    v29 = v28;
    swift_release();
    v36 = sub_23A14071C(v27, v29, v37);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v23, v24, "Received incoming channel, %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v26, -1, -1);
    MEMORY[0x23B842FA4](v25, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  *(_QWORD *)(v2 + v10) = a1;
  swift_retain();
  swift_release();
  v31 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v32 = a1[2];
  a1[2] = sub_23A188D1C;
  a1[3] = v31;
  sub_23A13A1E4(v32);
  v33 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v34 = a1[4];
  a1[4] = sub_23A188D3C;
  a1[5] = v33;
  sub_23A13A1E4(v34);
  return sub_23A159B9C();
}

uint64_t sub_23A186E40(unsigned int a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A1872B4(a1, a2, a3);
    return swift_release();
  }
  return result;
}

void sub_23A186EB8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = *(void **)(v2 + 48);
  *v7 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v8)
  {
    if (qword_2569443D8 == -1)
    {
LABEL_4:
      v11 = sub_23A19AE28();
      __swift_project_value_buffer(v11, (uint64_t)qword_256946610);
      swift_retain_n();
      v12 = sub_23A19AE10();
      v13 = sub_23A19B6BC();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v29 = v15;
        *(_DWORD *)v14 = 136315138;
        swift_retain();
        v16 = CosmoSerialChannelHost.description.getter();
        v18 = v17;
        swift_release();
        v28 = sub_23A14071C(v16, v18, &v29);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v12, v13, "Channel closed, %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v15, -1, -1);
        MEMORY[0x23B842FA4](v14, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v27 = OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection;
      if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection))
      {
        swift_retain();
        sub_23A15C388();
        swift_release();
      }
      *(_QWORD *)(v2 + v27) = 0;
      swift_release();
      return;
    }
LABEL_16:
    swift_once();
    goto LABEL_4;
  }
  if (qword_2569443D8 != -1)
    swift_once();
  v19 = sub_23A19AE28();
  __swift_project_value_buffer(v19, (uint64_t)qword_256946610);
  swift_retain_n();
  v20 = sub_23A19AE10();
  v21 = sub_23A19B6BC();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v29 = v23;
    *(_DWORD *)v22 = 136315138;
    swift_retain();
    v24 = CosmoSerialChannelHost.description.getter();
    v26 = v25;
    swift_release();
    v28 = sub_23A14071C(v24, v26, &v29);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v20, v21, "Channel ready, %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v23, -1, -1);
    MEMORY[0x23B842FA4](v22, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23A1872B4(unsigned int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  void (*v18)(uint64_t *, _QWORD *);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  unint64_t v36;

  v4 = v3;
  v8 = sub_23A19B35C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (_QWORD *)((char *)&v34[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v4 + 48);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_12;
  }
  v14 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_handlers);
  swift_beginAccess();
  v15 = *v14;
  if (*(_QWORD *)(v15 + 16))
  {
    v16 = sub_23A1618BC(a1);
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(uint64_t *, _QWORD *))(*(_QWORD *)(v15 + 56) + 16 * v16);
      if (a3 >> 60 == 15)
        v19 = 0;
      else
        v19 = a2;
      if (a3 >> 60 == 15)
        v20 = 0xC000000000000000;
      else
        v20 = a3;
      v21 = swift_allocObject();
      swift_weakInit();
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v21;
      *(_DWORD *)(v22 + 24) = a1;
      v35 = v19;
      v36 = v20;
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = sub_23A188C50;
      *(_QWORD *)(v23 + 24) = v22;
      v34[0] = sub_23A188C60;
      v34[1] = v23;
      swift_retain();
      sub_23A13A53C(a2, a3);
      swift_retain();
      swift_retain();
      v18(&v35, v34);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return sub_23A125ED8(v19, v20);
    }
  }
  if (qword_2569443D8 != -1)
    goto LABEL_17;
LABEL_12:
  v25 = sub_23A19AE28();
  __swift_project_value_buffer(v25, (uint64_t)qword_256946610);
  swift_retain_n();
  v26 = sub_23A19AE10();
  v27 = sub_23A19B6A4();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    v35 = v29;
    *(_DWORD *)v28 = 67109378;
    LODWORD(v34[0]) = a1;
    sub_23A19B728();
    *(_WORD *)(v28 + 8) = 2080;
    swift_retain();
    v30 = CosmoSerialChannelHost.description.getter();
    v32 = v31;
    swift_release();
    v34[0] = sub_23A14071C(v30, v32, &v35);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v26, v27, "No handler registered for incoming messageType=%u, %s", (uint8_t *)v28, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v29, -1, -1);
    MEMORY[0x23B842FA4](v28, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v35 = 0;
  v36 = 0xE000000000000000;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  v35 = 0xD00000000000001BLL;
  v36 = 0x800000023A1A2150;
  LODWORD(v34[0]) = a1;
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A187F0C(v35, v36);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A1876CC(void *a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, int a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  _QWORD v22[2];
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v23 = a6;
  v10 = sub_23A19B2D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23A19B2F0();
  v14 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v18 = result;
    v22[1] = *(_QWORD *)(result + 48);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a1;
    *(_QWORD *)(v19 + 24) = a2;
    *(_QWORD *)(v19 + 32) = a3;
    v22[0] = v11;
    v20 = a4 & 1;
    *(_BYTE *)(v19 + 40) = a4 & 1;
    *(_QWORD *)(v19 + 48) = v18;
    *(_DWORD *)(v19 + 56) = v23;
    aBlock[4] = sub_23A188CD8;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A126ED0;
    aBlock[3] = &block_descriptor_7;
    v21 = _Block_copy(aBlock);
    sub_23A188D08(a1, a2, a3, v20);
    swift_retain();
    sub_23A19B2E4();
    v25 = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
    sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
    sub_23A19B764();
    MEMORY[0x23B8425E4](0, v16, v13, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v22[0] + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v24);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_23A187924(id a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_type_t type;
  uint64_t v31;
  NSObject *oslog;
  uint64_t v33;
  unint64_t v34;

  if ((a4 & 1) != 0)
  {
    v8 = a1;
    if (qword_2569443D8 != -1)
      swift_once();
    v9 = sub_23A19AE28();
    __swift_project_value_buffer(v9, (uint64_t)qword_256946610);
    sub_23A188D08(a1, a2, a3, 1);
    swift_retain();
    sub_23A188D08(a1, a2, a3, 1);
    swift_retain();
    v10 = sub_23A19AE10();
    v11 = sub_23A19B6BC();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v33 = v31;
      *(_DWORD *)v12 = 136315394;
      type = v11;
      v13 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569449D0);
      v14 = sub_23A19B518();
      sub_23A14071C(v14, v15, &v33);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A188CC4(a1, a2, a3, 1);
      sub_23A188CC4(a1, a2, a3, 1);
      *(_WORD *)(v12 + 12) = 2080;
      swift_retain();
      v16 = CosmoSerialChannelHost.description.getter();
      v18 = v17;
      swift_release();
      sub_23A14071C(v16, v18, &v33);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v10, type, "Handler completed with error=%s, %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v31, -1, -1);
      MEMORY[0x23B842FA4](v12, -1, -1);

    }
    else
    {
      sub_23A188CC4(a1, a2, a3, 1);
      sub_23A188CC4(a1, a2, a3, 1);

      swift_release_n();
    }
    v33 = 0;
    v34 = 0xE000000000000000;
    sub_23A19B794();
    swift_bridgeObjectRelease();
    v33 = 0xD000000000000018;
    v34 = 0x800000023A1A2170;
    sub_23A19B8FC();
    sub_23A19B590();
    swift_bridgeObjectRelease();
    sub_23A19B590();
    sub_23A187F0C(v33, v34);
    swift_bridgeObjectRelease();
    v19 = a1;
    v20 = a2;
    v21 = a3;
    v22 = 1;
    goto LABEL_10;
  }
  if (*(_QWORD *)(a5 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection))
  {
    sub_23A188D08(a1, a2, a3, 0);
    swift_retain();
    sub_23A15C8C0(a2, a3, (int)a1);
    swift_release();
    sub_23A188CC4(a1, a2, a3, 0);
    return;
  }
  sub_23A131DF0(a2, a3);
  sub_23A131DF0(a2, a3);
  if (qword_2569443D8 != -1)
    swift_once();
  v23 = sub_23A19AE28();
  __swift_project_value_buffer(v23, (uint64_t)qword_256946610);
  swift_retain_n();
  oslog = sub_23A19AE10();
  v24 = sub_23A19B6A4();
  if (os_log_type_enabled(oslog, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v33 = v26;
    *(_DWORD *)v25 = 136315138;
    swift_retain();
    v27 = CosmoSerialChannelHost.description.getter();
    v29 = v28;
    swift_release();
    sub_23A14071C(v27, v29, &v33);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, oslog, v24, "No channel to write response on, %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v26, -1, -1);
    MEMORY[0x23B842FA4](v25, -1, -1);

    sub_23A188CC4(a1, a2, a3, 0);
    v19 = a1;
    v20 = a2;
    v21 = a3;
    v22 = 0;
LABEL_10:
    sub_23A188CC4(v19, v20, v21, v22);
    return;
  }
  sub_23A188CC4(a1, a2, a3, 0);
  swift_release_n();
  sub_23A188CC4(a1, a2, a3, 0);

}

void sub_23A187F0C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = sub_23A19B35C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + 48);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    if (qword_2569443D8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v12 = sub_23A19AE28();
  __swift_project_value_buffer(v12, (uint64_t)qword_256946610);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v13 = sub_23A19AE10();
  v14 = sub_23A19B6BC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v22 = v16;
    *(_DWORD *)v15 = 136315394;
    swift_bridgeObjectRetain();
    v21 = sub_23A14071C(a1, a2, &v22);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    swift_retain();
    v17 = CosmoSerialChannelHost.description.getter();
    v19 = v18;
    swift_release();
    v21 = sub_23A14071C(v17, v19, &v22);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v13, v14, "[Close] Closing, reason='%s' %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v16, -1, -1);
    MEMORY[0x23B842FA4](v15, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v20 = OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection))
  {
    swift_retain();
    sub_23A15C388();
    swift_release();
  }
  *(_QWORD *)(v3 + v20) = 0;
  swift_release();
  sub_23A1603E4();
}

uint64_t CosmoSerialChannelHost.deinit()
{
  uint64_t v0;

  sub_23A13A1E4(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();

  sub_23A154AF8(v0 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_descriptor);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CosmoSerialChannelHost.__deallocating_deinit()
{
  uint64_t v0;

  sub_23A13A1E4(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();

  sub_23A154AF8(v0 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_descriptor);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t CosmoSerialChannelHost.description.getter()
{
  swift_bridgeObjectRetain();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  NetworkDescriptor.description.getter();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 0x3D656D616ELL;
}

uint64_t sub_23A188660()
{
  return CosmoSerialChannelHost.description.getter();
}

_QWORD *sub_23A188680(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _OWORD *v20;
  id v21;
  id v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = v4;
  v10 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23A19B6EC();
  v25 = *(_QWORD *)(v13 - 8);
  v26 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23A19B6C8();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23A19B2F0();
  MEMORY[0x24BDAC7A8](v17);
  v4[2] = 0;
  v4[3] = 0;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection) = 0;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_handlers) = MEMORY[0x24BEE4B00];
  *((_BYTE *)v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_ready) = 0;
  *((_BYTE *)v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_terminated) = 0;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_acceptedConnectionCount) = 0;
  v4[4] = a1;
  v4[5] = a2;
  if (a4)
  {
    v18 = a4;
  }
  else
  {
    v24[2] = sub_23A125AD0();
    sub_23A19B2E4();
    v27 = MEMORY[0x24BEE4AF8];
    v24[1] = sub_23A131E34((unint64_t *)&unk_256945240, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569444F0);
    sub_23A131E74((unint64_t *)&unk_256945250, (uint64_t *)&unk_2569444F0);
    a4 = 0;
    sub_23A19B764();
    (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v15, *MEMORY[0x24BEE5750], v26);
    v18 = (void *)sub_23A19B704();
  }
  v5[6] = v18;
  sub_23A154B34(a3, (uint64_t)v5 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_descriptor);
  sub_23A154B34(a3, (uint64_t)v12);
  type metadata accessor for CosmoListener();
  v19 = a3;
  v20 = (_OWORD *)swift_allocObject();
  v20[1] = 0u;
  v20[2] = 0u;
  v20[3] = 0u;
  *(_QWORD *)((char *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener) = 0;
  *((_BYTE *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) = 0;
  sub_23A154B34((uint64_t)v12, (uint64_t)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor);
  v21 = a4;
  v22 = v18;
  sub_23A154AF8((uint64_t)v12);
  *(_QWORD *)((char *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue) = v22;
  sub_23A154AF8(v19);
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_listener) = v20;
  return v5;
}

unint64_t sub_23A1889A4()
{
  unint64_t result;

  result = qword_256946650;
  if (!qword_256946650)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CosmoSerialChannelHost.State, &type metadata for CosmoSerialChannelHost.State);
    atomic_store(result, (unint64_t *)&qword_256946650);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CosmoSerialChannelHost.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A188A3C + 4 * byte_23A19E4A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A188A70 + 4 * byte_23A19E4A0[v4]))();
}

uint64_t sub_23A188A70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A188A78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A188A80);
  return result;
}

uint64_t sub_23A188A8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A188A94);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A188A98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A188AA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CosmoSerialChannelHost.State()
{
  return &type metadata for CosmoSerialChannelHost.State;
}

uint64_t sub_23A188ABC()
{
  return type metadata accessor for CosmoSerialChannelHost();
}

uint64_t type metadata accessor for CosmoSerialChannelHost()
{
  uint64_t result;

  result = qword_256946680;
  if (!qword_256946680)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A188B00()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NetworkDescriptor();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CosmoSerialChannelHost()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CosmoSerialChannelHost.listenerStateChangedCallback.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CosmoSerialChannelHost.listenerStateChangedCallback.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CosmoSerialChannelHost.listenerStateChangedCallback.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CosmoSerialChannelHost.__allocating_init(name:descriptor:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t sub_23A188C08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A188C2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A188C50(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v4;

  return sub_23A1876CC(a1, a2, a3, a4 & 1, *(_QWORD *)(v4 + 16), *(_DWORD *)(v4 + 24));
}

uint64_t sub_23A188C60(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t sub_23A188C90()
{
  uint64_t v0;

  sub_23A188CC4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

void sub_23A188CC4(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  if ((a4 & 1) != 0)

  else
    sub_23A125ED8(a2, a3);
}

void sub_23A188CD8()
{
  uint64_t v0;

  sub_23A187924(*(id *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

id sub_23A188D08(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return a1;
  else
    return (id)sub_23A131DF0(a2, a3);
}

uint64_t sub_23A188D1C(char *a1)
{
  uint64_t v1;

  return sub_23A12CD84(a1, v1, (void (*)(char *))sub_23A186EB8);
}

uint64_t sub_23A188D3C(unsigned int a1, uint64_t a2, unint64_t a3)
{
  return sub_23A186E40(a1, a2, a3);
}

void sub_23A188D44()
{
  sub_23A187F0C(0xD00000000000002BLL, 0x800000023A1A2190);
}

uint64_t sub_23A188D60()
{
  uint64_t v0;

  return sub_23A186208(v0);
}

uint64_t sub_23A188D68(char *a1)
{
  uint64_t v1;

  return sub_23A12CD84(a1, v1, (void (*)(char *))sub_23A1864E4);
}

uint64_t sub_23A188D88(_QWORD *a1)
{
  return sub_23A186474(a1);
}

uint64_t sub_23A188D90()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23A188DCC()
{
  qword_25694EC40 = 0x6F6D736F43;
  *(_QWORD *)algn_25694EC48 = 0xE500000000000000;
}

uint64_t sub_23A188DEC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_23A19B8FC();
  qword_256946820 = result;
  *(_QWORD *)algn_256946828 = v1;
  return result;
}

uint64_t static Constants.Test.PinCode.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_2569443E8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256946828;
  *a1 = qword_256946820;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A188E8C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256944500);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23A19AD2C();
  __swift_allocate_value_buffer(v3, qword_256946830);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_256946830);
  sub_23A19ACE4();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t static Constants.Test.serviceUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2569443F0 != -1)
    swift_once();
  v2 = sub_23A19AD2C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256946830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_23A188FDC(uint64_t a1)
{
  return sub_23A189130(a1, 0xD000000000000084, 0x800000023A1A2270, &qword_256946848, &qword_256946850);
}

uint64_t static Constants.Test.KeyPair.Foo.serializedKeyPair.getter()
{
  return sub_23A18906C(&qword_2569443F8, &qword_256946848, &qword_256946850);
}

uint64_t sub_23A189024(uint64_t a1)
{
  return sub_23A189130(a1, 0xD00000000000007CLL, 0x800000023A1A21F0, &qword_256946858, &qword_256946860);
}

uint64_t static Constants.Test.KeyPair.Foo.serializedPublicKey.getter()
{
  return sub_23A18906C(&qword_256944400, &qword_256946858, &qword_256946860);
}

uint64_t sub_23A18906C(_QWORD *a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;

  if (*a1 != -1)
    swift_once();
  v5 = *a2;
  sub_23A131DF0(v5, *a3);
  return v5;
}

uint64_t sub_23A1890C0(uint64_t a1)
{
  return sub_23A189130(a1, 0xD000000000000084, 0x800000023A1A2270, &qword_256946868, &qword_256946870);
}

uint64_t static Constants.Test.KeyPair.Bar.serializedKeyPair.getter()
{
  return sub_23A18906C(&qword_256944408, &qword_256946868, &qword_256946870);
}

uint64_t sub_23A189108(uint64_t a1)
{
  return sub_23A189130(a1, 0xD00000000000007CLL, 0x800000023A1A21F0, &qword_256946878, &qword_256946880);
}

uint64_t sub_23A189130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t result;
  unint64_t v8;

  result = sub_23A19AC30();
  if (v8 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    *a4 = result;
    *a5 = v8;
  }
  return result;
}

uint64_t static Constants.Test.KeyPair.Bar.serializedPublicKey.getter()
{
  return sub_23A18906C(&qword_256944410, &qword_256946878, &qword_256946880);
}

void sub_23A189198()
{
  qword_25694EC50 = 0x7370747468;
  *(_QWORD *)algn_25694EC58 = 0xE500000000000000;
}

void sub_23A1891B8()
{
  qword_25694EC60 = 1919247728;
  *(_QWORD *)algn_25694EC68 = 0xE400000000000000;
}

void sub_23A1891D4()
{
  qword_25694EC70 = 0x656D614E656C6946;
  *(_QWORD *)algn_25694EC78 = 0xE800000000000000;
}

void sub_23A1891F8()
{
  qword_25694EC80 = 0x2E312F6F6D736F43;
  *(_QWORD *)algn_25694EC88 = 0xE900000000000030;
}

uint64_t sub_23A189220()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945860);
  __swift_allocate_value_buffer(v0, qword_256946888);
  __swift_project_value_buffer(v0, (uint64_t)qword_256946888);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945260);
  return sub_23A19ADF8();
}

uint64_t static Constants.Parsing.outNameRegex.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23A189364(&qword_256944438, (uint64_t *)&unk_256945860, (uint64_t)qword_256946888, a1);
}

uint64_t sub_23A1892C0()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945880);
  __swift_allocate_value_buffer(v0, qword_2569468A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2569468A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256945280);
  return sub_23A19ADF8();
}

uint64_t static Constants.Parsing.inNameRegex.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23A189364(&qword_256944440, (uint64_t *)&unk_256945880, (uint64_t)qword_2569468A0, a1);
}

uint64_t sub_23A189364@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

void sub_23A1893D0()
{
  qword_2569468B8 = 0x6C61636F6CLL;
  unk_2569468C0 = 0xE500000000000000;
}

uint64_t static Constants.Bonjour.domain.getter()
{
  return sub_23A1894B0(&qword_256944448, &qword_2569468B8);
}

void sub_23A189410()
{
  strcpy((char *)&qword_2569468C8, "_cosmotcp._tcp");
  unk_2569468D7 = -18;
}

uint64_t static Constants.Bonjour.tcpServiceType.getter()
{
  return sub_23A1894B0(&qword_256944450, &qword_2569468C8);
}

void sub_23A189460()
{
  qword_2569468D8 = 0x75716F6D736F635FLL;
  unk_2569468E0 = 0xEF7064755F2E6369;
}

uint64_t static Constants.Bonjour.quicServiceType.getter()
{
  return sub_23A1894B0(&qword_256944458, &qword_2569468D8);
}

uint64_t sub_23A1894B0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

ValueMetadata *type metadata accessor for Constants()
{
  return &type metadata for Constants;
}

ValueMetadata *type metadata accessor for Constants.Test()
{
  return &type metadata for Constants.Test;
}

ValueMetadata *type metadata accessor for Constants.Test.KeyPair()
{
  return &type metadata for Constants.Test.KeyPair;
}

ValueMetadata *type metadata accessor for Constants.Test.KeyPair.Foo()
{
  return &type metadata for Constants.Test.KeyPair.Foo;
}

ValueMetadata *type metadata accessor for Constants.Test.KeyPair.Bar()
{
  return &type metadata for Constants.Test.KeyPair.Bar;
}

ValueMetadata *type metadata accessor for Constants.Parsing()
{
  return &type metadata for Constants.Parsing;
}

ValueMetadata *type metadata accessor for Constants.Bonjour()
{
  return &type metadata for Constants.Bonjour;
}

uint64_t sub_23A189570(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256946CA8);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_23A13ACB8((uint64_t)v14, &qword_256946CB0);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_23A19B7C4();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_23A18C940(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_23A19B5B4();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_23A18C9A4(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0]);
    sub_23A18C074();
    __asm { BR              X12 }
  }
  sub_23A13A83C(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_23A19ABA0();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

void sub_23A189A74(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x24BDAC8D0];
  v3[3] = MEMORY[0x24BDCDDE8];
  v3[4] = MEMORY[0x24BDCDDC8];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_23A189AD8
     + dword_23A189D0C[__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x24BDCDDE8])[1] >> 62];
  __asm { BR              X10 }
}

uint64_t sub_23A189AE8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v6 = v2;
  v7 = v3;
  v8 = BYTE2(v3);
  v9 = BYTE3(v3);
  v10 = BYTE4(v3);
  v11 = BYTE5(v3);
  sub_23A131DF0(v1, v0);
  sub_23A18C364(&v6, (_BYTE *)&v6 + BYTE6(v3), &v12);
  sub_23A125ED8(v1, v0);
  v4 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  return v4;
}

uint64_t sub_23A189D1C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = MEMORY[0x24BEE0F88];
  v8[4] = MEMORY[0x24BDCFB90];
  v8[0] = a1;
  v8[1] = a2;
  v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x24BEE0F88]);
  v3 = (_BYTE *)*v2;
  if (*v2 && (v4 = (_BYTE *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      v6 = sub_23A18C788(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      v6 = sub_23A18C848((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      v6 = sub_23A18C8C0((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t sub_23A189DD4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_23A189570(0xD00000000000001CLL, 0x800000023A1A23D0);
  qword_25694EC90 = result;
  *(_QWORD *)algn_25694EC98 = v1;
  return result;
}

uint64_t sub_23A189E0C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_23A189570(0x746E65696C63, 0xE600000000000000);
  qword_25694ECA0 = result;
  *(_QWORD *)algn_25694ECA8 = v1;
  return result;
}

uint64_t sub_23A189E3C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_23A189570(0x726576726573, 0xE600000000000000);
  qword_25694ECB0 = result;
  *(_QWORD *)algn_25694ECB8 = v1;
  return result;
}

uint64_t sub_23A189E6C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_23A189570(7955819, 0xE300000000000000);
  *(_QWORD *)&xmmword_25694ECC0 = result;
  *((_QWORD *)&xmmword_25694ECC0 + 1) = v1;
  return result;
}

uint64_t sub_23A189E98()
{
  uint64_t result;
  uint64_t v1;

  result = sub_23A189570(0x65636E6F6ELL, 0xE500000000000000);
  qword_25694ECD0 = result;
  *(_QWORD *)algn_25694ECD8 = v1;
  return result;
}

uint64_t sub_23A189EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  *(_QWORD *)&v30 = a4;
  *((_QWORD *)&v30 + 1) = a5;
  v32 = a2;
  v27 = a1;
  v36 = sub_23A19B3E0();
  v29 = *(_QWORD *)(v36 - 8);
  v6 = MEMORY[0x24BDAC7A8](v36);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v26 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v26 - v12;
  sub_23A19AD5C();
  v28 = v5;
  v31 = v35;
  sub_23A131DF0(v35, *((unint64_t *)&v35 + 1));
  sub_23A19B3D4();
  if (qword_256944478 != -1)
    swift_once();
  v35 = xmmword_25694ECC0;
  sub_23A19B464();
  sub_23A131E34(&qword_256945638, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
  sub_23A1589A8();
  v33 = v11;
  sub_23A19B44C();
  if (qword_256944480 != -1)
    swift_once();
  v14 = qword_25694ECD0;
  v15 = *(_QWORD *)algn_25694ECD8;
  v16 = v30;
  v35 = v30;
  sub_23A131DF0(qword_25694ECD0, *(unint64_t *)algn_25694ECD8);
  sub_23A131DF0(v16, *((unint64_t *)&v16 + 1));
  sub_23A18C4E8(v14, v15);
  sub_23A125ED8(v14, v15);
  v17 = v35;
  v34 = v35;
  sub_23A19B44C();
  sub_23A125ED8(v17, *((unint64_t *)&v17 + 1));
  v18 = v28;
  sub_23A19B3C8();
  v19 = v13;
  v20 = v29;
  v21 = *(void (**)(char *, uint64_t))(v29 + 8);
  v22 = v8;
  v23 = v36;
  v21(v22, v36);
  v24 = v35;
  sub_23A131DF0(v35, *((unint64_t *)&v35 + 1));
  sub_23A19B410();
  if (v18)
  {
    sub_23A125ED8(v24, *((unint64_t *)&v24 + 1));
    sub_23A125ED8(v31, *((unint64_t *)&v31 + 1));
    v21(v33, v23);
    return ((uint64_t (*)(char *, uint64_t))v21)(v19, v23);
  }
  else
  {
    v21(v19, v23);
    sub_23A125ED8(v31, *((unint64_t *)&v31 + 1));
    sub_23A125ED8(v24, *((unint64_t *)&v24 + 1));
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(v27, v33, v23);
  }
}

uint64_t sub_23A18A204@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_23A1644A4(a1, a2, a3);
}

uint64_t sub_23A18A218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;

  v39 = a1;
  v40 = a2;
  v3 = sub_23A19B440();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946C88);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v35 - v9;
  v11 = sub_23A19B41C();
  v42 = *(_QWORD *)(v11 - 8);
  v43 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946C90);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23A19B3E0();
  MEMORY[0x24BDAC7A8](v17);
  v47 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v2;
  v20 = v2 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
  v22 = v21;
  swift_beginAccess();
  sub_23A13AC74(v20, (uint64_t)v16, &qword_256946C90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17) == 1)
  {
    v23 = &qword_256946C90;
    v24 = (uint64_t)v16;
LABEL_5:
    sub_23A13ACB8(v24, v23);
    return 0;
  }
  v25 = v13;
  v26 = v41;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v47, v16, v17);
  v27 = v17;
  v28 = v19 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
  swift_beginAccess();
  sub_23A13AC74(v28, (uint64_t)v10, &qword_256946C88);
  v29 = v42;
  v30 = v22;
  v31 = v43;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v10, 1, v43) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v47, v27);
    v23 = &qword_256946C88;
    v24 = (uint64_t)v10;
    goto LABEL_5;
  }
  v35 = v30;
  v36 = v27;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v25, v10, v31);
  v45 = v39;
  v46 = v40;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v8, v25, v31);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v8, 0, 1, v31);
  sub_23A1589A8();
  v33 = v44;
  sub_23A19B404();
  sub_23A13ACB8((uint64_t)v8, &qword_256946C88);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v31);
  }
  else
  {
    v34 = v31;
    v31 = sub_23A19B428();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v38);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v34);
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v47, v36);
  return v31;
}

unint64_t sub_23A18A5C4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a2;
  v30 = a1;
  v3 = sub_23A19B440();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946C88);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946C90);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A19B3E0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v2 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
  swift_beginAccess();
  sub_23A13AC74(v16, (uint64_t)v11, &qword_256946C90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v17 = &qword_256946C90;
    v18 = (uint64_t)v11;
LABEL_5:
    sub_23A13ACB8(v18, v17);
    return 0;
  }
  v19 = v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v20 = v2 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
  swift_beginAccess();
  sub_23A13AC74(v20, (uint64_t)v8, &qword_256946C88);
  v21 = sub_23A19B41C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v8, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v17 = &qword_256946C88;
    v18 = (uint64_t)v8;
    goto LABEL_5;
  }
  v26 = v12;
  sub_23A13ACB8((uint64_t)v8, &qword_256946C88);
  v22 = v29;
  sub_23A131DF0(v19, v29);
  v23 = v31;
  sub_23A18A8AC(v19, v22);
  if (!v23)
  {
    v22 = sub_23A19B3F8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v26);
  return v22;
}

void sub_23A18A8AC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23A18A8E8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (BYTE6(v0) > 0x1BuLL)
  {
    sub_23A131DF0(v1, v0);
    sub_23A189A74(v1, v0);
    sub_23A19B434();
  }
  else
  {
    v2 = sub_23A19B380();
    sub_23A131E34(&qword_256946CB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC61A8], MEMORY[0x24BDC61C0]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, *MEMORY[0x24BDC61A0], v2);
    swift_willThrow();
  }
  return sub_23A125ED8(v1, v0);
}

uint64_t sub_23A18A9EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23A13ACB8(v0 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey, &qword_256946C90);
  sub_23A13ACB8(v0 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce, &qword_256946C88);
  return swift_deallocClassInstance();
}

uint64_t sub_23A18AA44()
{
  return type metadata accessor for Spake2Peer(0);
}

uint64_t type metadata accessor for Spake2Peer(uint64_t a1)
{
  return sub_23A141024(a1, (uint64_t *)&unk_256946910);
}

void sub_23A18AA60()
{
  unint64_t v0;
  unint64_t v1;

  sub_23A132238(319, &qword_256946920, (void (*)(uint64_t))MEMORY[0x24BDC63E0]);
  if (v0 <= 0x3F)
  {
    sub_23A132238(319, qword_256946928, (void (*)(uint64_t))MEMORY[0x24BDC65D0]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_23A18AB14(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v3 = v2;
  v6 = sub_23A19AD74();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A19ADEC();
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v37 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[1];
  v36 = *a1;
  v44 = v36;
  v45 = v12;
  v38 = v12;
  v39 = v3;
  swift_retain();
  sub_23A164170();
  v14 = v13;
  v16 = v15;
  v44 = 0x3D74706D65747461;
  v45 = 0xE800000000000000;
  v43 = a2;
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v17 = sub_23A189570(v44, v45);
  v19 = v18;
  v40 = v14;
  v41 = v16;
  sub_23A131DF0(v14, v16);
  if (qword_256944460 != -1)
    swift_once();
  sub_23A131DF0(qword_25694EC90, *(unint64_t *)algn_25694EC98);
  v42 = v17;
  sub_23A131DF0(v17, v19);
  if (qword_256944470 != -1)
    swift_once();
  sub_23A131DF0(qword_25694ECB0, *(unint64_t *)algn_25694ECB8);
  if (qword_256944468 != -1)
    swift_once();
  v20 = qword_25694ECA0;
  v21 = *(_QWORD *)algn_25694ECA8;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE2A380], v6);
  sub_23A131DF0(v20, v21);
  v22 = v37;
  v24 = v40;
  v23 = v41;
  v25 = v42;
  sub_23A19ADD4();
  sub_23A125ED8(v25, v19);
  sub_23A125ED8(v24, v23);
  v26 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v39 + OBJC_IVAR____TtC5Cosmo14Spake2Verifier_verifier, v22, v35);
  swift_release();
  v27 = v26 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
  v28 = sub_23A19B3E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v29 = v26 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
  v30 = sub_23A19B41C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = v38;
  *(_QWORD *)(v26 + 16) = v36;
  *(_QWORD *)(v26 + 24) = v31;
  return v26;
}

uint64_t sub_23A18B054(char *a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(_QWORD, _QWORD, _QWORD);
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void (*v59)(_QWORD, _QWORD, _QWORD);

  v57 = a1;
  v58 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946C88);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v54 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v53 = (char *)&v48 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946C90);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v51 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v48 - v10;
  v49 = sub_23A19B41C();
  v56 = *(_QWORD *)(v49 - 8);
  v11 = MEMORY[0x24BDAC7A8](v49);
  v55 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v48 - v13;
  v15 = sub_23A19B3E0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v48 - v20;
  v22 = sub_23A19AD68();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v2;
  swift_beginAccess();
  v26 = v59;
  sub_23A19ADBC();
  result = swift_endAccess();
  if (!v26)
  {
    v59 = (void (*)(_QWORD, _QWORD, _QWORD))v22;
    v57 = v14;
    v58 = v21;
    v28 = (uint64_t)v55;
    v29 = v56;
    if (qword_256944470 != -1)
      swift_once();
    v30 = v19;
    v31 = (uint64_t)v19;
    v32 = v28;
    sub_23A189EC8(v31, v28, (uint64_t)v25, qword_25694ECB0, *(uint64_t *)algn_25694ECB8);
    (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v23 + 8))(v25, v59);
    v33 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v34 = v58;
    v35 = v30;
    v36 = v32;
    v37 = v15;
    v33(v58, v35, v15);
    v59 = *(void (**)(_QWORD, _QWORD, _QWORD))(v29 + 32);
    v38 = v57;
    v39 = v49;
    v59(v57, v36, v49);
    v40 = v50;
    v33(v50, v34, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v40, 0, 1, v37);
    v41 = (uint64_t)v40;
    v42 = v51;
    sub_23A13A980(v41, v51, &qword_256946C90);
    v43 = v52;
    v44 = v52 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
    swift_beginAccess();
    sub_23A13A76C(v42, v44, &qword_256946C90);
    swift_endAccess();
    v45 = (uint64_t)v53;
    v59(v53, v38, v39);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v45, 0, 1, v39);
    v46 = v54;
    sub_23A13A980(v45, v54, &qword_256946C88);
    v47 = v43 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
    swift_beginAccess();
    sub_23A13A76C(v46, v47, &qword_256946C88);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_23A18B454()
{
  return sub_23A18BDF8(&OBJC_IVAR____TtC5Cosmo14Spake2Verifier_verifier, (uint64_t (*)(_QWORD))MEMORY[0x24BE2A3E0]);
}

uint64_t sub_23A18B468()
{
  return sub_23A18BE44(&OBJC_IVAR____TtC5Cosmo14Spake2Verifier_verifier, (uint64_t (*)(_QWORD))MEMORY[0x24BE2A3E0]);
}

uint64_t sub_23A18B47C()
{
  return type metadata accessor for Spake2Verifier(0);
}

uint64_t type metadata accessor for Spake2Verifier(uint64_t a1)
{
  return sub_23A141024(a1, qword_256946A28);
}

uint64_t sub_23A18B498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A18BF00(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE2A3E0]);
}

uint64_t sub_23A18B4A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v3 = v2;
  v6 = sub_23A19AD74();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A19ADB0();
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v37 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[1];
  v36 = *a1;
  v44 = v36;
  v45 = v12;
  v38 = v12;
  v39 = v3;
  swift_retain();
  sub_23A164170();
  v14 = v13;
  v16 = v15;
  v44 = 0x3D74706D65747461;
  v45 = 0xE800000000000000;
  v43 = a2;
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v17 = sub_23A189570(v44, v45);
  v19 = v18;
  v40 = v14;
  v41 = v16;
  sub_23A131DF0(v14, v16);
  if (qword_256944460 != -1)
    swift_once();
  sub_23A131DF0(qword_25694EC90, *(unint64_t *)algn_25694EC98);
  v42 = v17;
  sub_23A131DF0(v17, v19);
  if (qword_256944470 != -1)
    swift_once();
  sub_23A131DF0(qword_25694ECB0, *(unint64_t *)algn_25694ECB8);
  if (qword_256944468 != -1)
    swift_once();
  v20 = qword_25694ECA0;
  v21 = *(_QWORD *)algn_25694ECA8;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE2A380], v6);
  sub_23A131DF0(v20, v21);
  v22 = v37;
  v24 = v40;
  v23 = v41;
  v25 = v42;
  sub_23A19AD98();
  sub_23A125ED8(v25, v19);
  sub_23A125ED8(v24, v23);
  v26 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v39 + OBJC_IVAR____TtC5Cosmo12Spake2Prover_prover, v22, v35);
  swift_release();
  v27 = v26 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
  v28 = sub_23A19B3E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v29 = v26 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
  v30 = sub_23A19B41C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = v38;
  *(_QWORD *)(v26 + 16) = v36;
  *(_QWORD *)(v26 + 24) = v31;
  return v26;
}

uint64_t sub_23A18B9E4(char *a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(_QWORD, _QWORD, _QWORD);
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void (*v59)(_QWORD, _QWORD, _QWORD);

  v57 = a1;
  v58 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946C88);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v54 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v53 = (char *)&v48 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946C90);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v51 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v48 - v10;
  v49 = sub_23A19B41C();
  v56 = *(_QWORD *)(v49 - 8);
  v11 = MEMORY[0x24BDAC7A8](v49);
  v55 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v48 - v13;
  v15 = sub_23A19B3E0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v48 - v20;
  v22 = sub_23A19AD68();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v2;
  swift_beginAccess();
  v26 = v59;
  sub_23A19AD80();
  result = swift_endAccess();
  if (!v26)
  {
    v59 = (void (*)(_QWORD, _QWORD, _QWORD))v22;
    v57 = v14;
    v58 = v21;
    v28 = (uint64_t)v55;
    v29 = v56;
    if (qword_256944468 != -1)
      swift_once();
    v30 = v19;
    v31 = (uint64_t)v19;
    v32 = v28;
    sub_23A189EC8(v31, v28, (uint64_t)v25, qword_25694ECA0, *(uint64_t *)algn_25694ECA8);
    (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v23 + 8))(v25, v59);
    v33 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v34 = v58;
    v35 = v30;
    v36 = v32;
    v37 = v15;
    v33(v58, v35, v15);
    v59 = *(void (**)(_QWORD, _QWORD, _QWORD))(v29 + 32);
    v38 = v57;
    v39 = v49;
    v59(v57, v36, v49);
    v40 = v50;
    v33(v50, v34, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v40, 0, 1, v37);
    v41 = (uint64_t)v40;
    v42 = v51;
    sub_23A13A980(v41, v51, &qword_256946C90);
    v43 = v52;
    v44 = v52 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
    swift_beginAccess();
    sub_23A13A76C(v42, v44, &qword_256946C90);
    swift_endAccess();
    v45 = (uint64_t)v53;
    v59(v53, v38, v39);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v45, 0, 1, v39);
    v46 = v54;
    sub_23A13A980(v45, v54, &qword_256946C88);
    v47 = v43 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
    swift_beginAccess();
    sub_23A13A76C(v46, v47, &qword_256946C88);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_23A18BDE4()
{
  return sub_23A18BDF8(&OBJC_IVAR____TtC5Cosmo12Spake2Prover_prover, (uint64_t (*)(_QWORD))MEMORY[0x24BE2A3B0]);
}

uint64_t sub_23A18BDF8(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *a1;
  v4 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t sub_23A18BE30()
{
  return sub_23A18BE44(&OBJC_IVAR____TtC5Cosmo12Spake2Prover_prover, (uint64_t (*)(_QWORD))MEMORY[0x24BE2A3B0]);
}

uint64_t sub_23A18BE44(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  sub_23A13ACB8(v2 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey, &qword_256946C90);
  sub_23A13ACB8(v2 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce, &qword_256946C88);
  v5 = v2 + *a1;
  v6 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

uint64_t sub_23A18BED8()
{
  return type metadata accessor for Spake2Prover(0);
}

uint64_t type metadata accessor for Spake2Prover(uint64_t a1)
{
  return sub_23A141024(a1, qword_256946B70);
}

uint64_t sub_23A18BEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A18BF00(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE2A3B0]);
}

uint64_t sub_23A18BF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23A18BF6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_23A19B5F0();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x23B8424B8](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_23A18BFE4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23A19AB64();
  if (!result || (result = sub_23A19AB88(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_23A19AB7C();
      return sub_23A19AC54();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23A18C074()
{
  __asm { BR              X11 }
}

_QWORD *sub_23A18C0D4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_23A18C364@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_23A18C788(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_23A18C848((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_23A18C8C0((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_23A18C3D8(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_23A18C43C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_23A19AB64();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_23A19AB88();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_23A19AB7C();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

void sub_23A18C4E8(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x24BDAC8D0];
  v3[3] = MEMORY[0x24BDCDDE8];
  v3[4] = MEMORY[0x24BDCDDC8];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_23A18C54C
     + *((int *)qword_23A18C6F0 + (__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x24BDCDDE8])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_23A18C55C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_23A131DF0(v1, v0);
  sub_23A19AC54();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
}

uint64_t sub_23A18C700@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_23A19B7A0();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23A18C788(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_23A18C848(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_23A19AB94();
  swift_allocObject();
  result = sub_23A19AB58();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23A19AC3C();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_23A18C8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_23A19AB94();
  swift_allocObject();
  result = sub_23A19AB58();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

_BYTE *sub_23A18C940(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_23A18C788(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_23A18C848((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_23A18C8C0((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_23A18C9A4(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_23A19AB94();
      swift_allocObject();
      sub_23A19AB70();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_23A19AC3C();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_23A18CA40(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  unint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946C98);
  v10 = sub_23A18CAD8();
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_23A18C364(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

unint64_t sub_23A18CAD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256946CA0;
  if (!qword_256946CA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256946C98);
    result = MEMORY[0x23B842EF0](MEMORY[0x24BDCFBE0], v1);
    atomic_store(result, (unint64_t *)&qword_256946CA0);
  }
  return result;
}

_QWORD *sub_23A18CB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_23A18C3D8((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_23A18CB80, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_23A18CB80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A18C700(a1, a2);
}

uint64_t FileTransferMetadata.init(name:size:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t FileListRequest.Response.init(fileTransferMetadata:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = 200;
  *(_QWORD *)(a2 + 8) = result;
  return result;
}

uint64_t _s5Cosmo11FileRequestV4fileAC10Foundation4UUIDV_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23A19AD2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_23A18CC00()
{
  sub_23A19B980();
  sub_23A19B998();
  return sub_23A19B9A4();
}

uint64_t sub_23A18CC44()
{
  return sub_23A19B998();
}

uint64_t sub_23A18CC6C()
{
  sub_23A19B980();
  sub_23A19B998();
  return sub_23A19B9A4();
}

uint64_t sub_23A18CCAC@<X0>(unsigned int *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_23A19086C(*a1);
  *a2 = result;
  return result;
}

void sub_23A18CCD4(_DWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_23A18CCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A19087C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23A18CD0C()
{
  sub_23A19164C();
  return sub_23A19B9D4();
}

uint64_t sub_23A18CD34()
{
  sub_23A19164C();
  return sub_23A19B9E0();
}

_QWORD *sub_23A18CD5C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A18CE60(a1, &qword_256947288, (void (*)(void))sub_23A19164C, a2);
}

uint64_t sub_23A18CD88(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23A18CEC4(a1, *v1, v1[1], &qword_2569472E8, (void (*)(void))sub_23A19164C);
}

uint64_t sub_23A18CDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A19090C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23A18CDE4()
{
  sub_23A1915C4();
  return sub_23A19B9D4();
}

uint64_t sub_23A18CE0C()
{
  sub_23A1915C4();
  return sub_23A19B9E0();
}

_QWORD *sub_23A18CE34@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A18CE60(a1, &qword_2569472E0, (void (*)(void))sub_23A1915C4, a2);
}

_QWORD *sub_23A18CE60@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;

  result = sub_23A190AD4(a1, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
  }
  return result;
}

uint64_t sub_23A18CE94(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23A18CEC4(a1, *v1, v1[1], &qword_256947270, (void (*)(void))sub_23A1915C4);
}

uint64_t sub_23A18CEC4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_23A19B9C8();
  v15 = a2;
  v16 = v14;
  sub_23A191608();
  sub_23A19B8CC();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_23A18CFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A19099C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23A18CFFC()
{
  sub_23A191718();
  return sub_23A19B9D4();
}

uint64_t sub_23A18D024()
{
  sub_23A191718();
  return sub_23A19B9E0();
}

_QWORD *sub_23A18D04C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A18CE60(a1, &qword_2569472B0, (void (*)(void))sub_23A191718, a2);
}

uint64_t sub_23A18D078(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23A18CEC4(a1, *v1, v1[1], &qword_2569472F8, (void (*)(void))sub_23A191718);
}

uint64_t sub_23A18D0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A190A38(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23A18D0D4()
{
  sub_23A1916D4();
  return sub_23A19B9D4();
}

uint64_t sub_23A18D0FC()
{
  sub_23A1916D4();
  return sub_23A19B9E0();
}

_QWORD *sub_23A18D124@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A18CE60(a1, &qword_2569472F0, (void (*)(void))sub_23A1916D4, a2);
}

uint64_t sub_23A18D150(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23A18CEC4(a1, *v1, v1[1], &qword_2569472A0, (void (*)(void))sub_23A1916D4);
}

uint64_t sub_23A18D180(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  v12[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256947308);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A1917A0();
  sub_23A19B9C8();
  v14 = 0;
  sub_23A19B8C0();
  if (!v5)
  {
    v13 = 1;
    sub_23A19B8C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_23A18D2B0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0xD000000000000012;
}

uint64_t sub_23A18D2F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A190C0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A18D314()
{
  sub_23A1917A0();
  return sub_23A19B9D4();
}

uint64_t sub_23A18D33C()
{
  sub_23A1917A0();
  return sub_23A19B9E0();
}

uint64_t sub_23A18D364@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_23A190CF4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_23A18D390(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23A18D180(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_23A18D3AC()
{
  return 0xD000000000000012;
}

uint64_t sub_23A18D3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A190EA0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23A18D3F0()
{
  sub_23A19175C();
  return sub_23A19B9D4();
}

uint64_t sub_23A18D418()
{
  sub_23A19175C();
  return sub_23A19B9E0();
}

uint64_t sub_23A18D440@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256947300);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A19175C();
  sub_23A19B9BC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_23A19B878();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_23A18D564(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569472C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A19175C();
  sub_23A19B9C8();
  sub_23A19B8C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t LeaseRequest.Response.status.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t LeaseRequest.Response.status.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*LeaseRequest.Response.status.modify())()
{
  return nullsub_1;
}

uint64_t sub_23A18D674(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F73616572;
  else
    return 0x737574617473;
}

uint64_t sub_23A18D69C()
{
  char *v0;

  return sub_23A18D674(*v0);
}

uint64_t sub_23A18D6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A190F24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A18D6C8()
{
  sub_23A18F304();
  return sub_23A19B9D4();
}

uint64_t sub_23A18D6F0()
{
  sub_23A18F304();
  return sub_23A19B9E0();
}

uint64_t LeaseRequest.Response.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946CC0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v10[0] = *(_QWORD *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A18F304();
  sub_23A19B9C8();
  v12 = 0;
  sub_23A19B8E4();
  if (!v2)
  {
    v11 = 1;
    sub_23A19B8B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LeaseRequest.Response.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946CD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A18F304();
  sub_23A19B9BC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_23A19B89C();
  v15 = 1;
  v10 = sub_23A19B86C();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_DWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A18D9A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LeaseRequest.Response.init(from:)(a1, a2);
}

uint64_t sub_23A18D9BC(_QWORD *a1)
{
  return LeaseRequest.Response.encode(to:)(a1);
}

uint64_t sub_23A18D9D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A190FFC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23A18D9FC()
{
  sub_23A18F348();
  return sub_23A19B9D4();
}

uint64_t sub_23A18DA24()
{
  sub_23A18F348();
  return sub_23A19B9E0();
}

uint64_t LeaseRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946CD8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A18F348();
  sub_23A19B9C8();
  sub_23A19B8D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t LeaseRequest.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946CE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A18F348();
  sub_23A19B9BC();
  if (!v2)
  {
    v9 = sub_23A19B890();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23A18DC3C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return LeaseRequest.init(from:)(a1, a2);
}

uint64_t sub_23A18DC50(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946CD8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A18F348();
  sub_23A19B9C8();
  sub_23A19B8D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t FileTransferMetadata.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FileTransferMetadata.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_23A18DD6C(char a1)
{
  if ((a1 & 1) != 0)
    return 1702521203;
  else
    return 1701667182;
}

uint64_t sub_23A18DD8C()
{
  char *v0;

  return sub_23A18DD6C(*v0);
}

uint64_t sub_23A18DD94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A191098(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A18DDB8()
{
  sub_23A18F38C();
  return sub_23A19B9D4();
}

uint64_t sub_23A18DDE0()
{
  sub_23A18F38C();
  return sub_23A19B9E0();
}

uint64_t FileTransferMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946CF0);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A18F38C();
  sub_23A19B9C8();
  v11 = 0;
  sub_23A19B8C0();
  if (!v2)
  {
    v10 = 1;
    sub_23A19B8F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t FileTransferMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946D00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A18F38C();
  sub_23A19B9BC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_23A19B878();
  v11 = v10;
  v15 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23A19B8A8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A18E0BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FileTransferMetadata.init(from:)(a1, a2);
}

uint64_t sub_23A18E0D0(_QWORD *a1)
{
  return FileTransferMetadata.encode(to:)(a1);
}

uint64_t FileListRequest.Response.status.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t FileListRequest.Response.status.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*FileListRequest.Response.status.modify())()
{
  return nullsub_1;
}

uint64_t FileListRequest.Response.fileTransferMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A18E110(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0x737574617473;
}

uint64_t sub_23A18E148()
{
  char *v0;

  return sub_23A18E110(*v0);
}

uint64_t sub_23A18E150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A191160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A18E174()
{
  sub_23A18F3E4();
  return sub_23A19B9D4();
}

uint64_t sub_23A18E19C()
{
  sub_23A18F3E4();
  return sub_23A19B9E0();
}

uint64_t FileListRequest.Response.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946D08);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A18F3E4();
  sub_23A19B9C8();
  v11 = 0;
  sub_23A19B8E4();
  if (!v2)
  {
    v9[1] = v9[0];
    v10 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256946D18);
    sub_23A18F428();
    sub_23A19B8CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FileListRequest.Response.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256946D38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A18F3E4();
  sub_23A19B9BC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = 0;
  v9 = sub_23A19B89C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256946D18);
  v13 = 1;
  sub_23A18F4F0();
  sub_23A19B884();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v12[1];
  *(_DWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A18E49C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FileListRequest.Response.init(from:)(a1, a2);
}

uint64_t sub_23A18E4B0(_QWORD *a1)
{
  return FileListRequest.Response.encode(to:)(a1);
}

uint64_t sub_23A18E4C4()
{
  return 0;
}

uint64_t sub_23A18E4D0()
{
  sub_23A18F5B8();
  return sub_23A19B9D4();
}

uint64_t sub_23A18E4F8()
{
  sub_23A18F5B8();
  return sub_23A19B9E0();
}

uint64_t FileListRequest.encode(to:)(_QWORD *a1)
{
  return sub_23A18F0C4(a1, &qword_256946D58, (void (*)(void))sub_23A18F5B8);
}

uint64_t FileListRequest.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_23A18E574(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_23A18E598(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23A18F1F8(a1, a2, a3, &qword_256946D58, (void (*)(void))sub_23A18F5B8);
}

uint64_t static FileRequest.method.getter()
{
  return sub_23A19B59C();
}

uint64_t sub_23A18E5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A19124C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23A18E604()
{
  sub_23A18F5FC();
  return sub_23A19B9D4();
}

uint64_t sub_23A18E62C()
{
  sub_23A18F5FC();
  return sub_23A19B9E0();
}

uint64_t FileRequest.encode(to:)(_QWORD *a1)
{
  return sub_23A18E888(a1, &qword_256946D68, (void (*)(void))sub_23A18F5FC);
}

uint64_t FileRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23A18E9D4(a1, &qword_256946D78, type metadata accessor for FileRequest, (void (*)(void))sub_23A18F5FC, a2);
}

uint64_t sub_23A18E6B8()
{
  return sub_23A19B59C();
}

uint64_t sub_23A18E6C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FileRequest.init(from:)(a1, a2);
}

uint64_t sub_23A18E6DC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23A18EBE4(a1, a2, a3, &qword_256946D68, (void (*)(void))sub_23A18F5FC);
}

uint64_t RejectFileRequest.Response.status.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t (*RejectFileRequest.Response.status.modify())()
{
  return nullsub_1;
}

uint64_t sub_23A18E724()
{
  sub_23A18F674();
  return sub_23A19B9D4();
}

uint64_t sub_23A18E74C()
{
  sub_23A18F674();
  return sub_23A19B9E0();
}

uint64_t RejectFileRequest.Response.encode(to:)(_QWORD *a1)
{
  return sub_23A18EDAC(a1, &qword_256946D80, (void (*)(void))sub_23A18F674);
}

uint64_t RejectFileRequest.Response.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_23A18EEC8(a1, &qword_256946D90, (void (*)(void))sub_23A18F674, a2);
}

uint64_t sub_23A18E7CC@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return RejectFileRequest.Response.init(from:)(a1, a2);
}

uint64_t sub_23A18E7E0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23A13FE74(a1, a2, a3, &qword_256946D80, (void (*)(void))sub_23A18F674);
}

uint64_t sub_23A18E80C()
{
  sub_23A18F6B8();
  return sub_23A19B9D4();
}

uint64_t sub_23A18E834()
{
  sub_23A18F6B8();
  return sub_23A19B9E0();
}

uint64_t RejectFileRequest.encode(to:)(_QWORD *a1)
{
  return sub_23A18E888(a1, &qword_256946D98, (void (*)(void))sub_23A18F6B8);
}

uint64_t sub_23A18E888(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_23A19B9C8();
  sub_23A19AD2C();
  sub_23A131E34(&qword_256946D28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23A19B8CC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RejectFileRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23A18E9D4(a1, &qword_256946DA8, type metadata accessor for RejectFileRequest, (void (*)(void))sub_23A18F6B8, a2);
}

uint64_t sub_23A18E9D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v19 = a5;
  v23 = sub_23A19AD2C();
  v18 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v22 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v21 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a3;
  v13 = a3(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a4();
  v16 = v24;
  sub_23A19B9BC();
  if (!v16)
  {
    sub_23A131E34(&qword_256946D48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23A19B884();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v10);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v22, v23);
    sub_23A13AB54((uint64_t)v15, v19, v20);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23A18EBA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RejectFileRequest.init(from:)(a1, a2);
}

uint64_t sub_23A18EBB8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23A18EBE4(a1, a2, a3, &qword_256946D98, (void (*)(void))sub_23A18F6B8);
}

uint64_t sub_23A18EBE4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_23A19B9C8();
  sub_23A19AD2C();
  sub_23A131E34(&qword_256946D28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23A19B8CC();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t static CloseRequest.method.getter()
{
  return sub_23A19B59C();
}

uint64_t CloseRequest.Response.status.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t CloseRequest.Response.status.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*CloseRequest.Response.status.modify())()
{
  return nullsub_1;
}

uint64_t sub_23A18ED30()
{
  sub_23A18F710();
  return sub_23A19B9D4();
}

uint64_t sub_23A18ED58()
{
  sub_23A18F710();
  return sub_23A19B9E0();
}

uint64_t CloseRequest.Response.encode(to:)(_QWORD *a1)
{
  return sub_23A18EDAC(a1, &qword_256946DB0, (void (*)(void))sub_23A18F710);
}

uint64_t sub_23A18EDAC(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  void (*v10)(void);

  v10 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10();
  sub_23A19B9C8();
  sub_23A19B8E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CloseRequest.Response.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_23A18EEC8(a1, &qword_256946DC0, (void (*)(void))sub_23A18F710, a2);
}

uint64_t sub_23A18EEC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, _DWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;

  v13 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v14 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_23A19B9BC();
  if (!v4)
  {
    v10 = sub_23A19B89C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
    *v13 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23A18EFDC@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return CloseRequest.Response.init(from:)(a1, a2);
}

uint64_t sub_23A18EFF0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23A13FE74(a1, a2, a3, &qword_256946DB0, (void (*)(void))sub_23A18F710);
}

uint64_t sub_23A18F01C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23A18F048()
{
  sub_23A18F754();
  return sub_23A19B9D4();
}

uint64_t sub_23A18F070()
{
  sub_23A18F754();
  return sub_23A19B9E0();
}

uint64_t CloseRequest.encode(to:)(_QWORD *a1)
{
  return sub_23A18F0C4(a1, &qword_256946DC8, (void (*)(void))sub_23A18F754);
}

uint64_t sub_23A18F0C4(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_23A19B9C8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CloseRequest.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_23A18F1BC()
{
  return sub_23A19B59C();
}

uint64_t sub_23A18F1CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23A18F1F8(a1, a2, a3, &qword_256946DC8, (void (*)(void))sub_23A18F754);
}

uint64_t sub_23A18F1F8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_23A19B9C8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t _s5Cosmo11FileRequestV4pathSSvgZ_0()
{
  return 0x656C69662FLL;
}

uint64_t _s5Cosmo12CloseRequestV4pathSSvgZ_0()
{
  return 0x65736F6C632FLL;
}

uint64_t _s5Cosmo12LeaseRequestV4pathSSvgZ_0()
{
  return 0x657361656C2FLL;
}

unint64_t sub_23A18F304()
{
  unint64_t result;

  result = qword_256946CC8;
  if (!qword_256946CC8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F55C, &type metadata for LeaseRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256946CC8);
  }
  return result;
}

unint64_t sub_23A18F348()
{
  unint64_t result;

  result = qword_256946CE0;
  if (!qword_256946CE0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F50C, &type metadata for LeaseRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256946CE0);
  }
  return result;
}

unint64_t sub_23A18F38C()
{
  unint64_t result;

  result = qword_256946CF8;
  if (!qword_256946CF8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F4BC, &type metadata for FileTransferMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256946CF8);
  }
  return result;
}

uint64_t _s5Cosmo15FileListRequestV4pathSSvgZ_0()
{
  return 0x73656C69662FLL;
}

unint64_t sub_23A18F3E4()
{
  unint64_t result;

  result = qword_256946D10;
  if (!qword_256946D10)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F46C, &type metadata for FileListRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256946D10);
  }
  return result;
}

unint64_t sub_23A18F428()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256946D20;
  if (!qword_256946D20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256946D18);
    v2[0] = sub_23A131E34(&qword_256946D28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23A18F4AC();
    result = MEMORY[0x23B842EF0](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256946D20);
  }
  return result;
}

unint64_t sub_23A18F4AC()
{
  unint64_t result;

  result = qword_256946D30;
  if (!qword_256946D30)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for FileTransferMetadata, &type metadata for FileTransferMetadata);
    atomic_store(result, (unint64_t *)&qword_256946D30);
  }
  return result;
}

unint64_t sub_23A18F4F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256946D40;
  if (!qword_256946D40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256946D18);
    v2[0] = sub_23A131E34(&qword_256946D48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23A18F574();
    result = MEMORY[0x23B842EF0](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256946D40);
  }
  return result;
}

unint64_t sub_23A18F574()
{
  unint64_t result;

  result = qword_256946D50;
  if (!qword_256946D50)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for FileTransferMetadata, &type metadata for FileTransferMetadata);
    atomic_store(result, (unint64_t *)&qword_256946D50);
  }
  return result;
}

unint64_t sub_23A18F5B8()
{
  unint64_t result;

  result = qword_256946D60;
  if (!qword_256946D60)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F41C, &type metadata for FileListRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256946D60);
  }
  return result;
}

unint64_t sub_23A18F5FC()
{
  unint64_t result;

  result = qword_256946D70;
  if (!qword_256946D70)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F3CC, &type metadata for FileRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256946D70);
  }
  return result;
}

uint64_t type metadata accessor for FileRequest(uint64_t a1)
{
  return sub_23A141024(a1, qword_256946F70);
}

uint64_t _s5Cosmo17RejectFileRequestV4pathSSvgZ_0()
{
  return 0x467463656A65722FLL;
}

unint64_t sub_23A18F674()
{
  unint64_t result;

  result = qword_256946D88;
  if (!qword_256946D88)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F37C, &type metadata for RejectFileRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256946D88);
  }
  return result;
}

unint64_t sub_23A18F6B8()
{
  unint64_t result;

  result = qword_256946DA0;
  if (!qword_256946DA0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F32C, &type metadata for RejectFileRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256946DA0);
  }
  return result;
}

uint64_t type metadata accessor for RejectFileRequest(uint64_t a1)
{
  return sub_23A141024(a1, qword_256947000);
}

unint64_t sub_23A18F710()
{
  unint64_t result;

  result = qword_256946DB8;
  if (!qword_256946DB8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F2DC, &type metadata for CloseRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256946DB8);
  }
  return result;
}

unint64_t sub_23A18F754()
{
  unint64_t result;

  result = qword_256946DD0;
  if (!qword_256946DD0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F28C, &type metadata for CloseRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256946DD0);
  }
  return result;
}

uint64_t sub_23A18F798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A14232C(a1, a2, a3, (uint64_t (*)(void))sub_23A142168, (uint64_t (*)(void))sub_23A142124);
}

uint64_t sub_23A18F7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A14232C(a1, a2, a3, (uint64_t (*)(void))sub_23A13AF28, (uint64_t (*)(void))sub_23A1420E0);
}

uint64_t sub_23A18F7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A14232C(a1, a2, a3, (uint64_t (*)(void))sub_23A14209C, (uint64_t (*)(void))sub_23A142058);
}

uint64_t sub_23A18F7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A14232C(a1, a2, a3, (uint64_t (*)(void))sub_23A13A898, (uint64_t (*)(void))sub_23A142014);
}

uint64_t sub_23A18F7F0()
{
  return sub_23A131E34(&qword_256944A88, type metadata accessor for CosmoFileHttpResponse, (uint64_t)&protocol conformance descriptor for CosmoFileHttpResponse);
}

uint64_t sub_23A18F81C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_23A131E34(&qword_256944A80, type metadata accessor for FileRequest, (uint64_t)&protocol conformance descriptor for FileRequest);
  result = sub_23A131E34(&qword_256944D70, type metadata accessor for FileRequest, (uint64_t)&protocol conformance descriptor for FileRequest);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_23A18F878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A14232C(a1, a2, a3, (uint64_t (*)(void))sub_23A141FD0, (uint64_t (*)(void))sub_23A141F8C);
}

uint64_t sub_23A18F890(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_23A131E34(&qword_256944A58, type metadata accessor for RejectFileRequest, (uint64_t)&protocol conformance descriptor for RejectFileRequest);
  result = sub_23A131E34(&qword_256944D58, type metadata accessor for RejectFileRequest, (uint64_t)&protocol conformance descriptor for RejectFileRequest);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_23A18F8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A14232C(a1, a2, a3, (uint64_t (*)(void))sub_23A141F48, (uint64_t (*)(void))sub_23A141F04);
}

uint64_t sub_23A18F904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A14232C(a1, a2, a3, (uint64_t (*)(void))sub_23A13AD48, (uint64_t (*)(void))sub_23A141EC0);
}

ValueMetadata *type metadata accessor for LeaseRequest()
{
  return &type metadata for LeaseRequest;
}

uint64_t destroy for LeaseRequest.Response()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s5Cosmo12LeaseRequestV8ResponseVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LeaseRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LeaseRequest.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LeaseRequest.Response(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LeaseRequest.Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LeaseRequest.Response()
{
  return &type metadata for LeaseRequest.Response;
}

_QWORD *sub_23A18FAC0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FileTransferMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for FileTransferMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for FileTransferMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileTransferMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTransferMetadata()
{
  return &type metadata for FileTransferMetadata;
}

ValueMetadata *type metadata accessor for FileListRequest()
{
  return &type metadata for FileListRequest;
}

uint64_t initializeBufferWithCopyOfBuffer for FileListRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FileListRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FileListRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FileListRequest.Response()
{
  return &type metadata for FileListRequest.Response;
}

uint64_t getEnumTagSinglePayload for FileRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for FileRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t _s5Cosmo11FileRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A19AD2C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s5Cosmo11FileRequestVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23A19AD2C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s5Cosmo11FileRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s5Cosmo11FileRequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s5Cosmo11FileRequestVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s5Cosmo11FileRequestVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RejectFileRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A19AD2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RejectFileRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23A19AD2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23A18FF48()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A19AD2C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RejectFileRequest.Response()
{
  return &type metadata for RejectFileRequest.Response;
}

ValueMetadata *type metadata accessor for CloseRequest()
{
  return &type metadata for CloseRequest;
}

ValueMetadata *type metadata accessor for CloseRequest.Response()
{
  return &type metadata for CloseRequest.Response;
}

ValueMetadata *type metadata accessor for CloseRequest.CodingKeys()
{
  return &type metadata for CloseRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for CloseRequest.Response.CodingKeys()
{
  return &type metadata for CloseRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for RejectFileRequest.CodingKeys()
{
  return &type metadata for RejectFileRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for RejectFileRequest.Response.CodingKeys()
{
  return &type metadata for RejectFileRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for FileRequest.CodingKeys()
{
  return &type metadata for FileRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for FileListRequest.CodingKeys()
{
  return &type metadata for FileListRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for FileListRequest.Response.CodingKeys()
{
  return &type metadata for FileListRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for FileTransferMetadata.CodingKeys()
{
  return &type metadata for FileTransferMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for LeaseRequest.CodingKeys()
{
  return &type metadata for LeaseRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for LeaseRequest.Response.CodingKeys()
{
  return &type metadata for LeaseRequest.Response.CodingKeys;
}

unint64_t sub_23A190090()
{
  unint64_t result;

  result = qword_256947038;
  if (!qword_256947038)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19ECBC, &type metadata for LeaseRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947038);
  }
  return result;
}

unint64_t sub_23A1900D8()
{
  unint64_t result;

  result = qword_256947040;
  if (!qword_256947040)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19ED74, &type metadata for LeaseRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947040);
  }
  return result;
}

unint64_t sub_23A190120()
{
  unint64_t result;

  result = qword_256947048;
  if (!qword_256947048)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EE2C, &type metadata for FileTransferMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947048);
  }
  return result;
}

unint64_t sub_23A190168()
{
  unint64_t result;

  result = qword_256947050;
  if (!qword_256947050)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EEE4, &type metadata for FileListRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947050);
  }
  return result;
}

unint64_t sub_23A1901B0()
{
  unint64_t result;

  result = qword_256947058;
  if (!qword_256947058)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EFEC, &type metadata for FileRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947058);
  }
  return result;
}

unint64_t sub_23A1901F8()
{
  unint64_t result;

  result = qword_256947060;
  if (!qword_256947060)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F0A4, &type metadata for RejectFileRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947060);
  }
  return result;
}

unint64_t sub_23A190240()
{
  unint64_t result;

  result = qword_256947068;
  if (!qword_256947068)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F15C, &type metadata for RejectFileRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947068);
  }
  return result;
}

unint64_t sub_23A190288()
{
  unint64_t result;

  result = qword_256947070;
  if (!qword_256947070)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F214, &type metadata for CloseRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947070);
  }
  return result;
}

unint64_t sub_23A1902D0()
{
  unint64_t result;

  result = qword_256947078;
  if (!qword_256947078)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F23C, &type metadata for CloseRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947078);
  }
  return result;
}

unint64_t sub_23A190318()
{
  unint64_t result;

  result = qword_256947080;
  if (!qword_256947080)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F264, &type metadata for CloseRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947080);
  }
  return result;
}

unint64_t sub_23A190360()
{
  unint64_t result;

  result = qword_256947088;
  if (!qword_256947088)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F184, &type metadata for CloseRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947088);
  }
  return result;
}

unint64_t sub_23A1903A8()
{
  unint64_t result;

  result = qword_256947090;
  if (!qword_256947090)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F1AC, &type metadata for CloseRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947090);
  }
  return result;
}

unint64_t sub_23A1903F0()
{
  unint64_t result;

  result = qword_256947098;
  if (!qword_256947098)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F0CC, &type metadata for RejectFileRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947098);
  }
  return result;
}

unint64_t sub_23A190438()
{
  unint64_t result;

  result = qword_2569470A0;
  if (!qword_2569470A0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F0F4, &type metadata for RejectFileRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470A0);
  }
  return result;
}

unint64_t sub_23A190480()
{
  unint64_t result;

  result = qword_2569470A8;
  if (!qword_2569470A8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F014, &type metadata for RejectFileRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470A8);
  }
  return result;
}

unint64_t sub_23A1904C8()
{
  unint64_t result;

  result = qword_2569470B0;
  if (!qword_2569470B0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F03C, &type metadata for RejectFileRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470B0);
  }
  return result;
}

unint64_t sub_23A190510()
{
  unint64_t result;

  result = qword_2569470B8;
  if (!qword_2569470B8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EF5C, &type metadata for FileRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470B8);
  }
  return result;
}

unint64_t sub_23A190558()
{
  unint64_t result;

  result = qword_2569470C0;
  if (!qword_2569470C0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EF84, &type metadata for FileRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470C0);
  }
  return result;
}

unint64_t sub_23A1905A0()
{
  unint64_t result;

  result = qword_2569470C8;
  if (!qword_2569470C8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EF0C, &type metadata for FileListRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470C8);
  }
  return result;
}

unint64_t sub_23A1905E8()
{
  unint64_t result;

  result = qword_2569470D0;
  if (!qword_2569470D0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EF34, &type metadata for FileListRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470D0);
  }
  return result;
}

unint64_t sub_23A190630()
{
  unint64_t result;

  result = qword_2569470D8;
  if (!qword_2569470D8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EE54, &type metadata for FileListRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470D8);
  }
  return result;
}

unint64_t sub_23A190678()
{
  unint64_t result;

  result = qword_2569470E0;
  if (!qword_2569470E0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EE7C, &type metadata for FileListRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470E0);
  }
  return result;
}

unint64_t sub_23A1906C0()
{
  unint64_t result;

  result = qword_2569470E8;
  if (!qword_2569470E8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19ED9C, &type metadata for FileTransferMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470E8);
  }
  return result;
}

unint64_t sub_23A190708()
{
  unint64_t result;

  result = qword_2569470F0;
  if (!qword_2569470F0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EDC4, &type metadata for FileTransferMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470F0);
  }
  return result;
}

unint64_t sub_23A190750()
{
  unint64_t result;

  result = qword_2569470F8;
  if (!qword_2569470F8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19ECE4, &type metadata for LeaseRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569470F8);
  }
  return result;
}

unint64_t sub_23A190798()
{
  unint64_t result;

  result = qword_256947100;
  if (!qword_256947100)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19ED0C, &type metadata for LeaseRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947100);
  }
  return result;
}

unint64_t sub_23A1907E0()
{
  unint64_t result;

  result = qword_256947108;
  if (!qword_256947108)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EC2C, &type metadata for LeaseRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947108);
  }
  return result;
}

unint64_t sub_23A190828()
{
  unint64_t result;

  result = qword_256947110;
  if (!qword_256947110)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19EC54, &type metadata for LeaseRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947110);
  }
  return result;
}

uint64_t sub_23A19086C(uint64_t result)
{
  if (result >= 7)
    return 7;
  else
    return result;
}

uint64_t sub_23A19087C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x506572616873 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23A19B908();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23A1908F8()
{
  return 0x506572616873;
}

uint64_t sub_23A19090C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x566572616873 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23A19B908();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23A190988()
{
  return 0x566572616873;
}

uint64_t sub_23A19099C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x506D7269666E6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23A19B908();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23A190A20()
{
  return 0x506D7269666E6F63;
}

uint64_t sub_23A190A38(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x566D7269666E6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23A19B908();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23A190ABC()
{
  return 0x566D7269666E6F63;
}

_QWORD *sub_23A190AD4(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  v10 = v9;
  sub_23A19B9BC();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_23A191690();
    sub_23A19B884();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    v10 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v10;
}

uint64_t sub_23A190C0C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x800000023A1A2410 || (sub_23A19B908() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023A1A2430)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23A19B908();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23A190CF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569472D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23A1917A0();
  sub_23A19B9BC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    v7 = sub_23A19B878();
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_23A19B878();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_23A190EA0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x800000023A1A2410)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23A19B908();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_23A190F24(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v3 || (sub_23A19B908() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23A19B908();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23A190FFC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23A19B908();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23A191080()
{
  return 0x6E6F6973726576;
}

uint64_t sub_23A191098(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v3 || (sub_23A19B908() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23A19B908();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23A191160(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v3 || (sub_23A19B908() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023A1A23F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23A19B908();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23A19123C()
{
  return 1701603686;
}

uint64_t sub_23A19124C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1701603686 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23A19B908();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t destroy for FileChannelSetupRequest.Response()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FileChannelSetupRequest.Response(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FileChannelSetupRequest.Response(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for FileChannelSetupRequest.Response(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FileChannelSetupRequest.Response(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileChannelSetupRequest.Response(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FileChannelSetupRequest.Response()
{
  return &type metadata for FileChannelSetupRequest.Response;
}

ValueMetadata *type metadata accessor for FileChannelSetupRequest()
{
  return &type metadata for FileChannelSetupRequest;
}

ValueMetadata *type metadata accessor for Spake2ConfirmRequest.Response()
{
  return &type metadata for Spake2ConfirmRequest.Response;
}

ValueMetadata *type metadata accessor for Spake2ConfirmRequest()
{
  return &type metadata for Spake2ConfirmRequest;
}

ValueMetadata *type metadata accessor for Spake2ShareRequest.Response()
{
  return &type metadata for Spake2ShareRequest.Response;
}

ValueMetadata *type metadata accessor for Spake2ShareRequest()
{
  return &type metadata for Spake2ShareRequest;
}

unint64_t sub_23A1914D8()
{
  unint64_t result;

  result = qword_256947118;
  if (!qword_256947118)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F620, &type metadata for AttestationMessageType);
    atomic_store(result, (unint64_t *)&qword_256947118);
  }
  return result;
}

uint64_t sub_23A19151C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A191594(a1, a2, a3, (uint64_t (*)(void))sub_23A13A230, (uint64_t (*)(void))sub_23A1858C0);
}

uint64_t sub_23A191530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A191594(a1, a2, a3, (uint64_t (*)(void))sub_23A185934, (uint64_t (*)(void))sub_23A13A318);
}

uint64_t sub_23A191544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A191594(a1, a2, a3, (uint64_t (*)(void))sub_23A13A44C, (uint64_t (*)(void))sub_23A1859B4);
}

uint64_t sub_23A191558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A191594(a1, a2, a3, (uint64_t (*)(void))sub_23A185A5C, (uint64_t (*)(void))sub_23A13A4F8);
}

uint64_t sub_23A19156C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A191594(a1, a2, a3, (uint64_t (*)(void))sub_23A13A5FC, (uint64_t (*)(void))sub_23A185AE8);
}

uint64_t sub_23A191580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23A191594(a1, a2, a3, (uint64_t (*)(void))sub_23A185B64, (uint64_t (*)(void))sub_23A13A728);
}

uint64_t sub_23A191594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_23A1915C4()
{
  unint64_t result;

  result = qword_256947278;
  if (!qword_256947278)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FF60, &type metadata for Spake2ShareRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947278);
  }
  return result;
}

unint64_t sub_23A191608()
{
  unint64_t result;

  result = qword_256947280;
  if (!qword_256947280)
  {
    result = MEMORY[0x23B842EF0](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256947280);
  }
  return result;
}

unint64_t sub_23A19164C()
{
  unint64_t result;

  result = qword_256947290;
  if (!qword_256947290)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FF10, &type metadata for Spake2ShareRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947290);
  }
  return result;
}

unint64_t sub_23A191690()
{
  unint64_t result;

  result = qword_256947298;
  if (!qword_256947298)
  {
    result = MEMORY[0x23B842EF0](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256947298);
  }
  return result;
}

unint64_t sub_23A1916D4()
{
  unint64_t result;

  result = qword_2569472A8;
  if (!qword_2569472A8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FEC0, &type metadata for Spake2ConfirmRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569472A8);
  }
  return result;
}

unint64_t sub_23A191718()
{
  unint64_t result;

  result = qword_2569472B8;
  if (!qword_2569472B8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FE70, &type metadata for Spake2ConfirmRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569472B8);
  }
  return result;
}

unint64_t sub_23A19175C()
{
  unint64_t result;

  result = qword_2569472C8;
  if (!qword_2569472C8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FE20, &type metadata for FileChannelSetupRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569472C8);
  }
  return result;
}

unint64_t sub_23A1917A0()
{
  unint64_t result;

  result = qword_2569472D8;
  if (!qword_2569472D8)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FDD0, &type metadata for FileChannelSetupRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569472D8);
  }
  return result;
}

uint64_t _s5Cosmo15FileListRequestV8ResponseV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A191830 + 4 * byte_23A19E6B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A191864 + 4 * asc_23A19E6B0[v4]))();
}

uint64_t sub_23A191864(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A19186C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A191874);
  return result;
}

uint64_t sub_23A191880(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A191888);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A19188C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A191894(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FileChannelSetupRequest.Response.CodingKeys()
{
  return &type metadata for FileChannelSetupRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for FileChannelSetupRequest.CodingKeys()
{
  return &type metadata for FileChannelSetupRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for Spake2ConfirmRequest.Response.CodingKeys()
{
  return &type metadata for Spake2ConfirmRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for Spake2ConfirmRequest.CodingKeys()
{
  return &type metadata for Spake2ConfirmRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for Spake2ShareRequest.Response.CodingKeys()
{
  return &type metadata for Spake2ShareRequest.Response.CodingKeys;
}

uint64_t _s5Cosmo12CloseRequestV8ResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23A191930 + 4 * byte_23A19E6BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23A191950 + 4 * byte_23A19E6BF[v4]))();
}

_BYTE *sub_23A191930(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23A191950(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A191958(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A191960(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23A191968(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23A191970(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Spake2ShareRequest.CodingKeys()
{
  return &type metadata for Spake2ShareRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AttestationMessageType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AttestationMessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23A191A68 + 4 * byte_23A19E6C9[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23A191A9C + 4 * byte_23A19E6C4[v4]))();
}

uint64_t sub_23A191A9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A191AA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A191AACLL);
  return result;
}

uint64_t sub_23A191AB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A191AC0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23A191AC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A191ACC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttestationMessageType()
{
  return &type metadata for AttestationMessageType;
}

unint64_t sub_23A191AEC()
{
  unint64_t result;

  result = qword_256947310;
  if (!qword_256947310)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F958, &type metadata for AttestationMessageType);
    atomic_store(result, (unint64_t *)&qword_256947310);
  }
  return result;
}

unint64_t sub_23A191B34()
{
  unint64_t result;

  result = qword_256947318;
  if (!qword_256947318)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FA10, &type metadata for Spake2ShareRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947318);
  }
  return result;
}

unint64_t sub_23A191B7C()
{
  unint64_t result;

  result = qword_256947320;
  if (!qword_256947320)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FAC8, &type metadata for Spake2ShareRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947320);
  }
  return result;
}

unint64_t sub_23A191BC4()
{
  unint64_t result;

  result = qword_256947328;
  if (!qword_256947328)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FB80, &type metadata for Spake2ConfirmRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947328);
  }
  return result;
}

unint64_t sub_23A191C0C()
{
  unint64_t result;

  result = qword_256947330;
  if (!qword_256947330)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FC38, &type metadata for Spake2ConfirmRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947330);
  }
  return result;
}

unint64_t sub_23A191C54()
{
  unint64_t result;

  result = qword_256947338;
  if (!qword_256947338)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FCF0, &type metadata for FileChannelSetupRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947338);
  }
  return result;
}

unint64_t sub_23A191C9C()
{
  unint64_t result;

  result = qword_256947340;
  if (!qword_256947340)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FDA8, &type metadata for FileChannelSetupRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947340);
  }
  return result;
}

unint64_t sub_23A191CE4()
{
  unint64_t result;

  result = qword_256947348;
  if (!qword_256947348)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FD18, &type metadata for FileChannelSetupRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947348);
  }
  return result;
}

unint64_t sub_23A191D2C()
{
  unint64_t result;

  result = qword_256947350;
  if (!qword_256947350)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FD40, &type metadata for FileChannelSetupRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947350);
  }
  return result;
}

unint64_t sub_23A191D74()
{
  unint64_t result;

  result = qword_256947358;
  if (!qword_256947358)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FC60, &type metadata for FileChannelSetupRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947358);
  }
  return result;
}

unint64_t sub_23A191DBC()
{
  unint64_t result;

  result = qword_256947360;
  if (!qword_256947360)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FC88, &type metadata for FileChannelSetupRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947360);
  }
  return result;
}

unint64_t sub_23A191E04()
{
  unint64_t result;

  result = qword_256947368;
  if (!qword_256947368)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FBA8, &type metadata for Spake2ConfirmRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947368);
  }
  return result;
}

unint64_t sub_23A191E4C()
{
  unint64_t result;

  result = qword_256947370;
  if (!qword_256947370)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FBD0, &type metadata for Spake2ConfirmRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947370);
  }
  return result;
}

unint64_t sub_23A191E94()
{
  unint64_t result;

  result = qword_256947378;
  if (!qword_256947378)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FAF0, &type metadata for Spake2ConfirmRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947378);
  }
  return result;
}

unint64_t sub_23A191EDC()
{
  unint64_t result;

  result = qword_256947380;
  if (!qword_256947380)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FB18, &type metadata for Spake2ConfirmRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947380);
  }
  return result;
}

unint64_t sub_23A191F24()
{
  unint64_t result;

  result = qword_256947388;
  if (!qword_256947388)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FA38, &type metadata for Spake2ShareRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947388);
  }
  return result;
}

unint64_t sub_23A191F6C()
{
  unint64_t result;

  result = qword_256947390;
  if (!qword_256947390)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19FA60, &type metadata for Spake2ShareRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947390);
  }
  return result;
}

unint64_t sub_23A191FB4()
{
  unint64_t result;

  result = qword_256947398;
  if (!qword_256947398)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F980, &type metadata for Spake2ShareRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256947398);
  }
  return result;
}

unint64_t sub_23A191FFC()
{
  unint64_t result;

  result = qword_2569473A0;
  if (!qword_2569473A0)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19F9A8, &type metadata for Spake2ShareRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569473A0);
  }
  return result;
}

_QWORD *CosmoMultiplexChannelHost.__allocating_init(name:descriptor:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v8;

  swift_allocObject();
  v8 = sub_23A199CA8(a1, a2, a3, a4);

  return v8;
}

uint64_t sub_23A1920E8(uint64_t a1, unint64_t a2)
{
  return sub_23A1920F4(a1, a2, &OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_id);
}

uint64_t sub_23A1920F4(uint64_t result, unint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t i;
  char v7;
  unint64_t v8;
  uint64_t j;
  char v10;

  v5 = result;
  if (a2 >> 62)
    goto LABEL_21;
  for (i = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10); i; result = swift_bridgeObjectRelease())
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      MEMORY[0x23B842698](0, a2);
    }
    else
    {
      if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      swift_retain();
    }
    v5 += *a3;
    v7 = sub_23A19ACFC();
    swift_release();
    if ((v7 & 1) != 0)
      return 0;
    for (j = 0; ; ++j)
    {
      v8 = j + 1;
      if (__OFADD__(j, 1))
        break;
      if (v8 == i)
        return 0;
      if ((a2 & 0xC000000000000001) != 0)
      {
        MEMORY[0x23B842698](j + 1, a2);
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_19;
        if (v8 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        swift_retain();
      }
      v10 = sub_23A19ACFC();
      swift_release();
      if ((v10 & 1) != 0)
        return v8;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    i = sub_23A19B800();
  }
  return 0;
}

uint64_t sub_23A192298(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_23A199908(v3);
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_23A19B644();
      return v10;
    }
  }
  result = sub_23A19B830();
  __break(1u);
  return result;
}

uint64_t sub_23A192378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23A19AE28();
  __swift_allocate_value_buffer(v0, qword_2569473A8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2569473A8);
  if (qword_2569443A0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_25694EB58);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

Cosmo::CosmoMultiplexChannelHost::State_optional __swiftcall CosmoMultiplexChannelHost.State.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  Cosmo::CosmoMultiplexChannelHost::State_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23A19B860();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t CosmoMultiplexChannelHost.State.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6164696C61766E69;
  else
    return 0x7964616572;
}

Cosmo::CosmoMultiplexChannelHost::State_optional sub_23A1924A8(Swift::String *a1)
{
  return CosmoMultiplexChannelHost.State.init(rawValue:)(*a1);
}

uint64_t sub_23A1924B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CosmoMultiplexChannelHost.State.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23A1924D8@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23A14EB94;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23A13A0F8(v4);
}

uint64_t sub_23A192560(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23A14EB94;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_23A13A0F8(v3);
  return sub_23A13A1E4(v8);
}

_QWORD *CosmoMultiplexChannelHost.init(name:descriptor:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v5;

  v5 = sub_23A199CA8(a1, a2, a3, a4);

  return v5;
}

uint64_t sub_23A192638()
{
  return sub_23A152E08((uint64_t)sub_23A199FB8, (uint64_t)&block_descriptor_8);
}

uint64_t sub_23A19264C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD **)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_listener);
  v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v3 = v1[2];
  v1[2] = sub_23A19A9D8;
  v1[3] = v2;
  sub_23A13A1E4(v3);
  v4 = swift_allocObject();
  swift_weakInit();
  v5 = v1[6];
  v1[6] = sub_23A19A9F8;
  v1[7] = v4;
  sub_23A13A1E4(v5);
  if (qword_256944488 != -1)
    swift_once();
  v6 = sub_23A19AE28();
  __swift_project_value_buffer(v6, (uint64_t)qword_2569473A8);
  swift_retain_n();
  v7 = sub_23A19AE10();
  v8 = sub_23A19B6BC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_retain();
    v11 = CosmoMultiplexChannelHost.description.getter();
    v13 = v12;
    swift_release();
    sub_23A14071C(v11, v13, &v15);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v7, v8, "[Start] Listener starting, %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v10, -1, -1);
    MEMORY[0x23B842FA4](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return sub_23A15E514();
}

uint64_t sub_23A1928A4(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A19432C(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A192900()
{
  return sub_23A152E08((uint64_t)sub_23A199FD8, (uint64_t)&block_descriptor_3_2);
}

uint64_t sub_23A192914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v8 = v7;
  v25[0] = a7;
  v15 = sub_23A19B2D8();
  v28 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23A19B2F0();
  v26 = *(_QWORD *)(v18 - 8);
  v27 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = *(_QWORD *)(v8 + 48);
  v21 = (_QWORD *)swift_allocObject();
  v22 = v25[0];
  v21[2] = a6;
  v21[3] = v22;
  v21[4] = a1;
  v21[5] = v8;
  v21[6] = a2;
  v21[7] = a3;
  v21[8] = a4;
  v21[9] = a5;
  aBlock[4] = sub_23A19A030;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A126ED0;
  aBlock[3] = &block_descriptor_6_2;
  v23 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23A13A0F8(a4);
  sub_23A19B2E4();
  v29 = MEMORY[0x24BEE4AF8];
  sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
  sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
  sub_23A19B764();
  MEMORY[0x23B8425E4](0, v20, v17, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v15);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v27);
  return swift_release();
}

uint64_t sub_23A192B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23A19AAEC();
  swift_allocObject();
  sub_23A19AAE0();
  sub_23A19AAD4();
  if (v2)
  {
    swift_release();
    __asm { BR              X10 }
  }
  return swift_release();
}

uint64_t sub_23A1931EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];

  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 48))(a7, a8);
  v14 = v13;
  if (qword_256944488 != -1)
    swift_once();
  v15 = sub_23A19AE28();
  __swift_project_value_buffer(v15, (uint64_t)qword_2569473A8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v16 = sub_23A19AE10();
  v17 = sub_23A19B6BC();
  if (os_log_type_enabled(v16, v17))
  {
    v29 = a3;
    v18 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v36[0] = v28;
    *(_DWORD *)v18 = 136315394;
    swift_bridgeObjectRetain();
    sub_23A14071C(v34, v14, v36);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_retain();
    v19 = CosmoMultiplexChannelHost.description.getter();
    v30 = a6;
    v21 = v20;
    swift_release();
    sub_23A14071C(v19, v21, v36);
    sub_23A19B728();
    swift_release_n();
    a6 = v30;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v16, v17, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v28, -1, -1);
    v22 = v18;
    a3 = v29;
    MEMORY[0x23B842FA4](v22, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a7;
  v23[3] = a8;
  v23[4] = a1;
  v23[5] = a2;
  v23[6] = a3;
  v23[7] = a4;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a7;
  v24[3] = a8;
  v24[4] = a5;
  v24[5] = a6;
  v24[6] = a1;
  v24[7] = a2;
  v25 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_23A13A0F8(a5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v35 = *v25;
  *v25 = 0x8000000000000000;
  sub_23A1989DC((uint64_t)sub_23A19A914, (uint64_t)v23, (uint64_t)sub_23A19A974, (uint64_t)v24, v34, v14, isUniquelyReferenced_nonNull_native);
  *v25 = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_23A193560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *, uint64_t (*)(uint64_t a1), _QWORD *), uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t (*)(uint64_t), _QWORD *);

  v27 = a7;
  v12 = *(_QWORD *)(a9 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v26 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v26 - v20;
  sub_23A192B3C(v19, v22);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v21, v18, a9);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v21, a9);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a9;
  v23[3] = a10;
  v23[4] = a3;
  v23[5] = a4;
  swift_retain();
  v27(v15, sub_23A19A9CC, v23);
  swift_release();
  v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v15, a9);
  return ((uint64_t (*)(char *, uint64_t))v24)(v21, a9);
}

uint64_t sub_23A193708(uint64_t a1, void (*a2)(__int128 *))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t *boxed_opaque_existential_1;
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  char v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7 = (char *)&v15 - v6;
  sub_23A13A274();
  v8 = sub_23A19B9B0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v15 - v9, a1, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = v10[16];
    v15 = *(_OWORD *)v10;
    v16 = v12;
    v19 = 1;
    a2(&v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, AssociatedTypeWitness);
    v17 = AssociatedTypeWitness;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v15);
    (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(boxed_opaque_existential_1, v7, AssociatedTypeWitness);
    v19 = 0;
    a2(&v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  }
  return sub_23A13ACB8((uint64_t)&v15, &qword_256944A10);
}

uint64_t sub_23A1938BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void (*a6)(_QWORD, _QWORD, _QWORD, _QWORD), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  void (*v39)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[40];
  __int128 v70;
  uint64_t v71;
  _QWORD v72[5];
  uint64_t v73;
  _BYTE v74[40];
  _BYTE v75[40];
  __int128 v76;
  char v77;
  char v78;

  v66 = a2;
  v67 = a8;
  v60 = a5;
  v61 = a4;
  v62 = a3;
  v65 = a1;
  v11 = sub_23A19AE28();
  v56 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v55 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = sub_23A19B710();
  v53 = *(_QWORD *)(v14 - 8);
  v54 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v59 = (char *)&v51 - v16;
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v51 - v18;
  sub_23A13A274();
  v20 = sub_23A19B9B0();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v51 - v22;
  v64 = *(_QWORD *)(a10 - 8);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v24);
  if (a6)
  {
    v51 = v29;
    v52 = result;
    v58 = (char *)&v51 - v28;
    v63 = a6;
    swift_retain();
    sub_23A192B3C(v65, v66);
    v30 = v64;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v58, v26, a10);
    sub_23A13AC74(v62, (uint64_t)&v76, &qword_256944A10);
    if ((v78 & 1) != 0)
    {
      v31 = a10;
      v32 = v77;
      *(_OWORD *)v23 = v76;
      v23[16] = v32;
      v33 = v52;
LABEL_6:
      swift_storeEnumTagMultiPayload();
      v38 = v58;
      v39 = v63;
      v63(v58, v23, v61, v60 & 1);
      sub_23A13A1E4((uint64_t)v39);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v23, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v38, v31);
    }
    sub_23A13A83C(&v76, (uint64_t)v75);
    sub_23A13A854((uint64_t)v75, (uint64_t)v74);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256944A18);
    v34 = v59;
    v35 = swift_dynamicCast();
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    if ((v35 & 1) != 0)
    {
      v31 = a10;
      v36(v34, 0, 1, AssociatedTypeWitness);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
      v37 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v37(v19, v34, AssociatedTypeWitness);
      v37(v23, v19, AssociatedTypeWitness);
      v33 = v52;
      goto LABEL_6;
    }
    v67 = a10;
    v36(v34, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v34, v54);
    if (qword_256944488 != -1)
      swift_once();
    v40 = v57;
    v41 = __swift_project_value_buffer(v57, (uint64_t)qword_2569473A8);
    v43 = v55;
    v42 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v41, v40);
    sub_23A13A854((uint64_t)v75, (uint64_t)v74);
    v44 = sub_23A19AE10();
    v45 = sub_23A19B6A4();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v73 = v47;
      *(_DWORD *)v46 = 136315138;
      sub_23A13A854((uint64_t)v74, (uint64_t)v72);
      sub_23A13AC74((uint64_t)v72, (uint64_t)&v70, &qword_256944A20);
      if (v71)
      {
        sub_23A13A83C(&v70, (uint64_t)v69);
        sub_23A13A854((uint64_t)v69, (uint64_t)&v68);
        v48 = sub_23A19B518();
        v50 = v49;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
      }
      else
      {
        v50 = 0xE300000000000000;
        v48 = 7104878;
      }
      sub_23A13ACB8((uint64_t)v72, &qword_256944A20);
      v72[0] = sub_23A14071C(v48, v50, &v73);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
      _os_log_impl(&dword_23A123000, v44, v45, "[Respond] Could not cast %s into response type", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v47, -1, -1);
      MEMORY[0x23B842FA4](v46, -1, -1);
      sub_23A13A1E4((uint64_t)v63);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v58, v67);
    }
    else
    {
      sub_23A13A1E4((uint64_t)v63);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v40);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v58, v67);
    }
  }
  return result;
}

uint64_t sub_23A193E88(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  void (*v30)(uint64_t *);
  uint64_t v31;
  uint64_t v32[3];

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = *(void **)(v2 + 48);
  *v7 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    swift_once();
LABEL_4:
    v11 = sub_23A19AE28();
    __swift_project_value_buffer(v11, (uint64_t)qword_2569473A8);
    swift_retain_n();
    v12 = sub_23A19AE10();
    v13 = sub_23A19B6BC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v32[0] = v15;
      *(_DWORD *)v14 = 136315394;
      LOBYTE(v31) = v8;
      v16 = sub_23A19B518();
      v31 = sub_23A14071C(v16, v17, v32);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      swift_retain();
      v18 = CosmoMultiplexChannelHost.description.getter();
      v20 = v19;
      swift_release();
      v31 = sub_23A14071C(v18, v20, v32);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v12, v13, "Listener invalidated, state=%s %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v15, -1, -1);
      MEMORY[0x23B842FA4](v14, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    result = swift_beginAccess();
    v30 = *(void (**)(uint64_t *))(v2 + 16);
    if (v30)
    {
      LOBYTE(v31) = 1;
LABEL_16:
      swift_retain();
      v30(&v31);
      return sub_23A13A1E4((uint64_t)v30);
    }
    return result;
  }
  if (v8)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_ready) = 0;
    *(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_terminated) = 1;
    if (qword_256944488 == -1)
      goto LABEL_4;
    goto LABEL_19;
  }
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_ready) = 1;
  if (qword_256944488 != -1)
    swift_once();
  v21 = sub_23A19AE28();
  __swift_project_value_buffer(v21, (uint64_t)qword_2569473A8);
  swift_retain_n();
  v22 = sub_23A19AE10();
  v23 = sub_23A19B6BC();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v32[0] = v25;
    *(_DWORD *)v24 = 136315138;
    swift_retain();
    v26 = CosmoMultiplexChannelHost.description.getter();
    v28 = v27;
    swift_release();
    v31 = sub_23A14071C(v26, v28, v32);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v22, v23, "Listener ready, %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v25, -1, -1);
    MEMORY[0x23B842FA4](v24, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  result = swift_beginAccess();
  v30 = *(void (**)(uint64_t *))(v2 + 16);
  if (v30)
  {
    LOBYTE(v31) = 0;
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_23A19432C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30[3];

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v30[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + 48);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v9 = v8;
  LOBYTE(v8) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_acceptedStreamCount);
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (!v11)
    {
      *(_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_acceptedStreamCount) = v12;
      if (qword_256944488 == -1)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  swift_once();
LABEL_4:
  v13 = sub_23A19AE28();
  __swift_project_value_buffer(v13, (uint64_t)qword_2569473A8);
  swift_retain_n();
  swift_retain_n();
  v14 = sub_23A19AE10();
  v15 = sub_23A19B6BC();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v30[0] = v17;
    *(_DWORD *)v16 = 136315394;
    v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_name);
    v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_name + 8);
    swift_bridgeObjectRetain();
    v29 = sub_23A14071C(v18, v19, v30);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    swift_retain();
    v20 = CosmoMultiplexChannelHost.description.getter();
    v22 = v21;
    swift_release();
    v29 = sub_23A14071C(v20, v22, v30);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v14, v15, "Received incoming stream, name=%s, %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v17, -1, -1);
    MEMORY[0x23B842FA4](v16, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  type metadata accessor for PendingResponse(0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  v23 = sub_23A194FB4(a1, v2);
  v24 = swift_allocObject();
  swift_weakInit();
  v25 = v23[2];
  v23[2] = sub_23A19A89C;
  v23[3] = v24;
  sub_23A13A1E4(v25);
  v26 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_activeResponses);
  swift_beginAccess();
  v27 = swift_retain();
  MEMORY[0x23B842518](v27);
  if (*(_QWORD *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23A19B650();
  sub_23A19B668();
  sub_23A19B644();
  swift_endAccess();
  sub_23A1950EC();
  return swift_release();
}

uint64_t sub_23A1946F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  v2 = sub_23A19B35C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = *(void **)(result + 48);
    *v5 = v8;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
    v9 = v8;
    LOBYTE(v8) = sub_23A19B374();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v8 & 1) != 0)
    {
      v10 = (unint64_t *)(v7 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_activeResponses);
      swift_beginAccess();
      v11 = *v10;
      swift_bridgeObjectRetain();
      v12 = sub_23A1920F4(a1, v11, &OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_id);
      v14 = v13;
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        swift_beginAccess();
        sub_23A192298(v12);
        swift_endAccess();
        swift_release();
      }
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_23A194874(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];

  v3 = v2;
  v6 = sub_23A19B35C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + 48);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    if (qword_256944488 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v12 = sub_23A19AE28();
  __swift_project_value_buffer(v12, (uint64_t)qword_2569473A8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v13 = sub_23A19AE10();
  v14 = sub_23A19B6BC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27[0] = v25;
    *(_DWORD *)v15 = 136315394;
    swift_bridgeObjectRetain();
    v26 = sub_23A14071C(a1, a2, v27);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    swift_retain();
    v16 = CosmoMultiplexChannelHost.description.getter();
    v18 = v17;
    swift_release();
    v26 = sub_23A14071C(v16, v18, v27);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v13, v14, "[Close] Closing, reason='%s' %s", (uint8_t *)v15, 0x16u);
    v19 = v25;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v19, -1, -1);
    MEMORY[0x23B842FA4](v15, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_activeResponses);
  swift_beginAccess();
  v21 = *v20;
  if (!((unint64_t)*v20 >> 62))
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22)
      goto LABEL_8;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_23A1603E4();
    return;
  }
  swift_bridgeObjectRetain();
  v22 = sub_23A19B800();
  if (!v22)
    goto LABEL_17;
LABEL_8:
  if (v22 >= 1)
  {
    for (i = 0; i != v22; ++i)
    {
      if ((v21 & 0xC000000000000001) != 0)
        MEMORY[0x23B842698](i, v21);
      else
        swift_retain();
      sub_23A1952F4(a1, a2);
      swift_release();
    }
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t CosmoMultiplexChannelHost.deinit()
{
  uint64_t v0;

  sub_23A13A1E4(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();

  sub_23A154AF8(v0 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_descriptor);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CosmoMultiplexChannelHost.__deallocating_deinit()
{
  uint64_t v0;

  sub_23A13A1E4(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();

  sub_23A154AF8(v0 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_descriptor);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t CosmoMultiplexChannelHost.description.getter()
{
  swift_bridgeObjectRetain();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  NetworkDescriptor.description.getter();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B794();
  swift_bridgeObjectRelease();
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 0x3D656D616ELL;
}

uint64_t sub_23A194F94()
{
  return CosmoMultiplexChannelHost.description.getter();
}

_QWORD *sub_23A194FB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2[2] = 0;
  v2[3] = 0;
  sub_23A19AD20();
  swift_weakInit();
  v5 = (_QWORD *)((char *)v2
                + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
  *v5 = 0;
  v5[1] = 0;
  *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData) = xmmword_23A19C6E0;
  *((_BYTE *)v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse) = 0;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_stream) = a1;
  swift_weakAssign();
  v6 = *(void **)(a2 + 48);
  v2[4] = v6;
  v7 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = sub_23A19A8A4;
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain();
  v9 = v6;
  swift_retain();
  sub_23A13A1E4(v8);
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_23A1950EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_23A19B35C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + 32);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v9 = *(_QWORD **)(v1 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_stream);
    v10 = swift_allocObject();
    swift_weakInit();
    v11 = v9[4];
    v9[4] = sub_23A19A868;
    v9[5] = v10;
    sub_23A13A1E4(v11);
    v12 = swift_allocObject();
    swift_weakInit();
    v13 = v9[10];
    v9[10] = sub_23A19A870;
    v9[11] = v12;
    sub_23A13A1E4(v13);
    return sub_23A143E40();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23A195220(uint64_t *a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23A1961A4(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A19527C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  _QWORD v5[2];
  char v6;

  v1 = *a1;
  v2 = a1[1];
  v3 = *((_BYTE *)a1 + 16);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5[0] = v1;
    v5[1] = v2;
    v6 = v3;
    sub_23A197594((uint64_t)v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A1952F4(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  id v13;
  uint64_t (*v14)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  id v40;
  char v41;
  ValueMetadata *v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t *boxed_opaque_existential_1;
  void *v47;
  id v48;
  ValueMetadata *v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  _QWORD v54[2];
  uint64_t v55;
  int v56;
  id v57;
  uint64_t (*v58)(_QWORD *, uint64_t);
  unint64_t v59;
  uint64_t v60;
  uint64_t v61[3];
  ValueMetadata *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  ValueMetadata *v66;
  unint64_t v67;

  v3 = v2;
  v6 = sub_23A19B35C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + 32);
  *v9 = v10;
  v11 = *MEMORY[0x24BEE5610];
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104);
  v12(v9, v11, v6);
  v13 = v10;
  LOBYTE(v10) = sub_23A19B374();
  v14 = *(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8);
  result = v14(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (!*(_QWORD *)(v3 + 16))
    return result;
  v58 = v14;
  v59 = a1;
  v57 = v13;
  v64 = 0;
  v65 = 0xE000000000000000;
  sub_23A19B794();
  swift_bridgeObjectRelease();
  v64 = 0x43205D706F74535BLL;
  v65 = 0xEF20676E69736F6CLL;
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_stream);
  v17 = swift_retain();
  v60 = v16;
  sub_23A1440B4(v17);
  swift_release();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  v13 = (id)v64;
  a1 = v65;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData + 8) >> 60 == 15
    || (*(_BYTE *)(v3 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse) & 1) != 0)
  {
    if (qword_256944488 == -1)
    {
LABEL_6:
      v18 = sub_23A19AE28();
      __swift_project_value_buffer(v18, (uint64_t)qword_2569473A8);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v19 = sub_23A19AE10();
      v20 = sub_23A19B6BC();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        v22 = swift_slowAlloc();
        v64 = v22;
        *(_DWORD *)v21 = 136315650;
        swift_bridgeObjectRetain();
        v61[0] = sub_23A14071C((uint64_t)v13, a1, &v64);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v21 + 12) = 2080;
        swift_bridgeObjectRetain();
        v61[0] = sub_23A14071C(v59, a2, &v64);
        sub_23A19B728();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v21 + 22) = 2080;
        swift_retain();
        v23 = sub_23A1979A0();
        v25 = v24;
        swift_release();
        v61[0] = sub_23A14071C(v23, v25, &v64);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v19, v20, "%s, reason='%s' %s", (uint8_t *)v21, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v22, -1, -1);
        MEMORY[0x23B842FA4](v21, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      return sub_23A145B9C();
    }
LABEL_22:
    swift_once();
    goto LABEL_6;
  }
  v59 = OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse;
  if (qword_256944488 != -1)
    swift_once();
  v26 = sub_23A19AE28();
  __swift_project_value_buffer(v26, (uint64_t)qword_2569473A8);
  swift_retain_n();
  swift_bridgeObjectRetain();
  v27 = sub_23A19AE10();
  v28 = sub_23A19B6BC();
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc();
    v56 = v29;
    v31 = v30;
    v55 = swift_slowAlloc();
    v64 = v55;
    *(_DWORD *)v31 = 136315394;
    swift_bridgeObjectRetain();
    v61[0] = sub_23A14071C((uint64_t)v13, a1, &v64);
    sub_23A19B728();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2080;
    v54[1] = v31 + 14;
    swift_retain();
    v32 = sub_23A1979A0();
    v34 = v33;
    swift_release();
    v61[0] = sub_23A14071C(v32, v34, &v64);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    v35 = v55;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v35, -1, -1);
    MEMORY[0x23B842FA4](v31, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v36 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
  if (v36)
  {
    v37 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler
                    + 8);
    v38 = (_QWORD *)swift_allocObject();
    v38[2] = v36;
    v38[3] = v37;
    v38[4] = v3;
    v66 = &type metadata for CosmoInternalServerErrorHttpResponse;
    v67 = sub_23A19A514();
    LODWORD(v64) = 500;
    v39 = v57;
    *v9 = v57;
    v12(v9, v11, v6);
    sub_23A13A0F8(v36);
    v40 = v39;
    swift_retain();
    sub_23A13A0F8(v36);
    v41 = sub_23A19B374();
    result = v58(v9, v6);
    if ((v41 & 1) != 0)
    {
      *(_BYTE *)(v3 + v59) = 1;
      v42 = v66;
      v43 = v67;
      v44 = __swift_project_boxed_opaque_existential_1(&v64, (uint64_t)v66);
      v62 = v42;
      v45 = *(_QWORD *)(v43 + 8);
      v63 = v45;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v61);
      (*((void (**)(uint64_t *, _QWORD *, ValueMetadata *))v42[-1].Description + 2))(boxed_opaque_existential_1, v44, v42);
      sub_23A14F44C((uint64_t)boxed_opaque_existential_1, (uint64_t)sub_23A19A858, (uint64_t)v38, v60, (uint64_t)v42, v45);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      sub_23A13A1E4(v36);
      return swift_release();
    }
    __break(1u);
  }
  else
  {
    v66 = &type metadata for CosmoInternalServerErrorHttpResponse;
    v67 = sub_23A19A514();
    LODWORD(v64) = 500;
    v47 = v57;
    *v9 = v57;
    v12(v9, v11, v6);
    v48 = v47;
    LOBYTE(v47) = sub_23A19B374();
    result = v58(v9, v6);
    if ((v47 & 1) != 0)
    {
      *(_BYTE *)(v3 + v59) = 1;
      v49 = v66;
      v50 = v67;
      v51 = __swift_project_boxed_opaque_existential_1(&v64, (uint64_t)v66);
      v62 = v49;
      v52 = *(_QWORD *)(v50 + 8);
      v63 = v52;
      v53 = __swift_allocate_boxed_opaque_existential_1(v61);
      (*((void (**)(uint64_t *, _QWORD *, ValueMetadata *))v49[-1].Description + 2))(v53, v51, v49);
      sub_23A14F44C((uint64_t)v53, 0, 0, v60, (uint64_t)v49, v52);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23A195AD8(uint64_t a1, char a2, void (*a3)(uint64_t, unint64_t, __int128 *, uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  char v14;
  char v15;

  v7 = a2 & 1;
  v8 = *(_QWORD *)(a5 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
  v9 = *(_QWORD *)(a5 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData + 8);
  if (v9 >> 60 == 15)
    v10 = 0;
  else
    v10 = *(_QWORD *)(a5 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
  if (v9 >> 60 == 15)
    v11 = 0xC000000000000000;
  else
    v11 = *(_QWORD *)(a5 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData + 8);
  v13 = xmmword_23A19DDF0;
  v14 = 2;
  v15 = 1;
  sub_23A13A53C(v8, v9);
  a3(v10, v11, &v13, a1, v7);
  sub_23A125ED8(v10, v11);
  return sub_23A13ACB8((uint64_t)&v13, &qword_256944A10);
}

void sub_23A195B90(unsigned __int8 *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  void *v9;
  id v10;
  void (*v11)(uint64_t *);
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, unint64_t, __int128 *, void *, uint64_t);
  uint64_t v52;
  __int128 v53;
  char v54;
  char v55;

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = (void *)v2[4];
  *v7 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v10 = v9;
  LOBYTE(v9) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    swift_once();
LABEL_8:
    v13 = sub_23A19AE28();
    __swift_project_value_buffer(v13, (uint64_t)qword_2569473A8);
    swift_retain_n();
    v14 = sub_23A19AE10();
    v15 = sub_23A19B6BC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_QWORD *)&v53 = v17;
      *(_DWORD *)v16 = 136315394;
      v18 = swift_retain();
      v19 = sub_23A1440B4(v18);
      v21 = v20;
      swift_release();
      v52 = sub_23A14071C(v19, v21, (uint64_t *)&v53);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      swift_retain();
      v22 = sub_23A1979A0();
      v24 = v23;
      swift_release();
      v52 = sub_23A14071C(v22, v24, (uint64_t *)&v53);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v14, v15, "%s ready, awaiting request, %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v17, -1, -1);
      MEMORY[0x23B842FA4](v16, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return;
  }
  if (!v8)
  {
    if (qword_256944488 == -1)
      goto LABEL_8;
    goto LABEL_26;
  }
  v11 = (void (*)(uint64_t *))v2[2];
  if (v11)
  {
    v12 = *(uint64_t *)((char *)v2
                     + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
    if (v12
      && (*((_BYTE *)v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse) & 1) == 0)
    {
      v25 = *(uint64_t *)((char *)v2
                       + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler
                       + 8);
      sub_23A13A0F8(v2[2]);
      v50 = v25;
      v51 = (void (*)(uint64_t, unint64_t, __int128 *, void *, uint64_t))v12;
      sub_23A13A0F8(v12);
      if (qword_256944488 != -1)
        swift_once();
      v26 = sub_23A19AE28();
      __swift_project_value_buffer(v26, (uint64_t)qword_2569473A8);
      swift_retain_n();
      v27 = sub_23A19AE10();
      v28 = sub_23A19B6BC();
      v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        v30 = swift_slowAlloc();
        v49 = swift_slowAlloc();
        *(_QWORD *)&v53 = v49;
        *(_DWORD *)v30 = 136315394;
        v48 = v29;
        v31 = swift_retain();
        v32 = sub_23A1440B4(v31);
        v34 = v33;
        swift_release();
        v52 = sub_23A14071C(v32, v34, (uint64_t *)&v53);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        swift_retain();
        v35 = sub_23A1979A0();
        v37 = v36;
        swift_release();
        v52 = sub_23A14071C(v35, v37, (uint64_t *)&v53);
        sub_23A19B728();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A123000, v27, (os_log_type_t)v48, "%s invalidated before sending response, %s", (uint8_t *)v30, 0x16u);
        v38 = v49;
        swift_arrayDestroy();
        MEMORY[0x23B842FA4](v38, -1, -1);
        MEMORY[0x23B842FA4](v30, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v39 = *(uint64_t *)((char *)v2
                       + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
      v40 = *(uint64_t *)((char *)v2
                       + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData
                       + 8);
      if (v40 >> 60 == 15)
        v41 = 0;
      else
        v41 = *(uint64_t *)((char *)v2
                         + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
      if (v40 >> 60 == 15)
        v42 = 0xC000000000000000;
      else
        v42 = *(uint64_t *)((char *)v2
                         + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData
                         + 8);
      v53 = xmmword_23A19DDF0;
      v54 = 2;
      v55 = 1;
      sub_23A13A274();
      v43 = (void *)swift_allocError();
      *(_OWORD *)v44 = xmmword_23A19FFB0;
      *(_BYTE *)(v44 + 16) = 2;
      sub_23A13A53C(v39, v40);
      v45 = (uint64_t)v51;
      v51(v41, v42, &v53, v43, 1);
      sub_23A13A1E4(v45);

      sub_23A125ED8(v41, v42);
      sub_23A13ACB8((uint64_t)&v53, &qword_256944A10);
    }
    else
    {
      swift_retain();
    }
    v11(v2);
    sub_23A13A1E4((uint64_t)v11);
    v46 = v2[2];
    v2[2] = 0;
    v2[3] = 0;
    sub_23A13A1E4(v46);
  }
}

void sub_23A1961A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t);
  void (*v8)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t);
  uint64_t v9;
  void (*v10)(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t), uint64_t, uint64_t);
  void (*v11)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t);
  void (*v12)(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t), uint64_t);
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t), uint64_t, uint64_t);
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  os_log_t v56;
  void (*v57)(_QWORD, _QWORD);
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  os_log_t v72;
  os_log_t v73;
  void (*v74)(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t), uint64_t, uint64_t);
  void (*v75)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t);
  void (*v76)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t);
  uint64_t v77;
  ValueMetadata *v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  os_log_t v89;
  os_log_t v90;
  void (*v91)(_QWORD, _QWORD);
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t);
  void (*v95)(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t), uint64_t, uint64_t);
  uint64_t v96[5];
  uint64_t v97[3];
  ValueMetadata *v98;
  unint64_t v99;

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))((char *)&v88
                                                                                                 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))(v1 + 32);
  *v7 = v8;
  v9 = *MEMORY[0x24BEE5610];
  v10 = *(void (**)(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t), uint64_t, uint64_t))(v5 + 104);
  v10(v7, v9, v4);
  v11 = v8;
  LOBYTE(v8) = sub_23A19B374();
  v12 = *(void (**)(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t), uint64_t))(v5 + 8);
  v12(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_37:
    swift_once();
LABEL_4:
    v19 = sub_23A19AE28();
    __swift_project_value_buffer(v19, (uint64_t)qword_2569473A8);
    swift_retain_n();
    v20 = sub_23A19AE10();
    v21 = sub_23A19B6BC();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v97[0] = v23;
      *(_DWORD *)v22 = 136315394;
      v96[0] = sub_23A14071C(0xD000000000000015, 0x800000023A1A25B0, v97);
      sub_23A19B728();
      *(_WORD *)(v22 + 12) = 2080;
      swift_retain();
      v24 = sub_23A1979A0();
      v26 = v25;
      swift_release();
      v96[0] = sub_23A14071C(v24, v26, v97);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A123000, v20, v21, "%s ignoring request, already sent response, %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v23, -1, -1);
      MEMORY[0x23B842FA4](v22, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return;
  }
  v94 = v11;
  v95 = v10;
  v13 = a1[2];
  v14 = a1[3];
  v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData + 8);
  *v15 = v13;
  v15[1] = v14;
  sub_23A13A53C(v13, v14);
  sub_23A125F1C(v16, v17);
  v18 = OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse) & 1) != 0)
  {
    if (qword_256944488 == -1)
      goto LABEL_4;
    goto LABEL_37;
  }
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v28 = *a1;
    v91 = (void (*)(_QWORD, _QWORD))v12;
    v92 = v28;
    v29 = a1[1];
    v93 = Strong;
    v30 = (uint64_t *)(Strong + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
    swift_beginAccess();
    v31 = *v30;
    if (*(_QWORD *)(v31 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = sub_23A161858(v92, v29);
      if ((v33 & 1) != 0)
      {
        v34 = *(_QWORD *)(v31 + 56) + 32 * v32;
        v35 = *(_QWORD *)(v34 + 8);
        v94 = *(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))v34;
        v36 = *(_QWORD *)(v34 + 16);
        v37 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v34 + 24);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = (_QWORD *)(v2
                       + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
        v39 = *(_QWORD *)(v2
                        + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
        *v38 = v36;
        v38[1] = v37;
        v95 = (void (*)(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t), uint64_t, uint64_t))v37;
        swift_retain();
        sub_23A13A1E4(v39);
        if (qword_256944488 != -1)
          swift_once();
        v40 = sub_23A19AE28();
        __swift_project_value_buffer(v40, (uint64_t)qword_2569473A8);
        swift_retain_n();
        sub_23A19A59C((uint64_t)a1);
        swift_retain();
        sub_23A19A59C((uint64_t)a1);
        v41 = sub_23A19AE10();
        v42 = sub_23A19B6BC();
        v43 = v42;
        if (os_log_type_enabled(v41, v42))
        {
          v44 = swift_slowAlloc();
          LODWORD(v90) = v43;
          v45 = v44;
          v91 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
          v97[0] = (uint64_t)v91;
          *(_DWORD *)v45 = 136315650;
          v89 = v41;
          v46 = swift_retain();
          v47 = sub_23A1440B4(v46);
          v92 = v35;
          v49 = v48;
          swift_release();
          v96[0] = sub_23A14071C(v47, v49, v97);
          sub_23A19B728();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v45 + 12) = 2080;
          sub_23A19A59C((uint64_t)a1);
          v50 = sub_23A1428E8();
          v52 = v51;
          sub_23A19A5E8((uint64_t)a1);
          v96[0] = sub_23A14071C(v50, v52, v97);
          sub_23A19B728();
          swift_bridgeObjectRelease();
          sub_23A19A5E8((uint64_t)a1);
          sub_23A19A5E8((uint64_t)a1);
          *(_WORD *)(v45 + 22) = 2080;
          swift_retain();
          v53 = sub_23A1979A0();
          v55 = v54;
          swift_release();
          v96[0] = sub_23A14071C(v53, v55, v97);
          sub_23A19B728();
          swift_release_n();
          swift_bridgeObjectRelease();
          v56 = v89;
          _os_log_impl(&dword_23A123000, v89, (os_log_type_t)v90, "%s received request=%s, %s", (uint8_t *)v45, 0x20u);
          v57 = v91;
          swift_arrayDestroy();
          MEMORY[0x23B842FA4](v57, -1, -1);
          MEMORY[0x23B842FA4](v45, -1, -1);

        }
        else
        {
          swift_release_n();
          sub_23A19A5E8((uint64_t)a1);
          sub_23A19A5E8((uint64_t)a1);

          swift_release_n();
        }
        if (v14 >> 60 == 15)
          v83 = 0;
        else
          v83 = v13;
        if (v14 >> 60 == 15)
          v84 = 0xC000000000000000;
        else
          v84 = v14;
        v85 = swift_allocObject();
        swift_weakInit();
        v86 = swift_allocObject();
        *(_QWORD *)(v86 + 16) = v85;
        v87 = *((_OWORD *)a1 + 1);
        *(_OWORD *)(v86 + 24) = *(_OWORD *)a1;
        *(_OWORD *)(v86 + 40) = v87;
        *(_QWORD *)(v86 + 56) = a1[4];
        sub_23A13A53C(v13, v14);
        sub_23A19A59C((uint64_t)a1);
        swift_retain();
        v94(v83, v84, sub_23A19A6C4, v86);
        swift_release();
        swift_release();
        swift_release();
        sub_23A125ED8(v83, v84);
        swift_release();
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (qword_256944488 != -1)
      swift_once();
    v66 = sub_23A19AE28();
    __swift_project_value_buffer(v66, (uint64_t)qword_2569473A8);
    sub_23A19A59C((uint64_t)a1);
    v67 = sub_23A19AE10();
    v68 = sub_23A19B6A4();
    v69 = v68;
    v90 = v67;
    if (os_log_type_enabled(v67, v68))
    {
      v70 = swift_slowAlloc();
      HIDWORD(v88) = v69;
      v71 = v70;
      v89 = (os_log_t)swift_slowAlloc();
      v97[0] = (uint64_t)v89;
      *(_DWORD *)v71 = 136315394;
      v96[0] = sub_23A14071C(0xD000000000000015, 0x800000023A1A25B0, v97);
      sub_23A19B728();
      *(_WORD *)(v71 + 12) = 2080;
      swift_bridgeObjectRetain();
      v96[0] = sub_23A14071C(v92, v29, v97);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      sub_23A19A5E8((uint64_t)a1);
      v72 = v90;
      _os_log_impl(&dword_23A123000, v90, BYTE4(v88), "%s no handler found for path=%s", (uint8_t *)v71, 0x16u);
      v73 = v89;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v73, -1, -1);
      MEMORY[0x23B842FA4](v71, -1, -1);

    }
    else
    {
      sub_23A19A5E8((uint64_t)a1);

    }
    v75 = v94;
    v74 = v95;
    v98 = &type metadata for CosmoNotFoundHttpResponse;
    v99 = sub_23A19A634();
    LODWORD(v97[0]) = 404;
    *v7 = v75;
    v74(v7, v9, v4);
    v76 = v75;
    LOBYTE(v74) = sub_23A19B374();
    v91(v7, v4);
    if ((v74 & 1) != 0)
    {
      *(_BYTE *)(v2 + v18) = 1;
      v77 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_stream);
      v78 = v98;
      v79 = v99;
      v80 = __swift_project_boxed_opaque_existential_1(v97, (uint64_t)v98);
      v96[3] = (uint64_t)v78;
      v81 = *(_QWORD *)(v79 + 8);
      v96[4] = v81;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v96);
      (*((void (**)(uint64_t *, _QWORD *, ValueMetadata *))v78[-1].Description + 2))(boxed_opaque_existential_1, v80, v78);
      sub_23A14F44C((uint64_t)boxed_opaque_existential_1, 0, 0, v77, (uint64_t)v78, v81);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
LABEL_35:
      swift_release();
      return;
    }
    __break(1u);
    goto LABEL_39;
  }
  if (qword_256944488 != -1)
LABEL_39:
    swift_once();
  v58 = sub_23A19AE28();
  __swift_project_value_buffer(v58, (uint64_t)qword_2569473A8);
  swift_retain_n();
  v59 = sub_23A19AE10();
  v60 = sub_23A19B6A4();
  if (os_log_type_enabled(v59, v60))
  {
    v61 = swift_slowAlloc();
    v62 = swift_slowAlloc();
    v97[0] = v62;
    *(_DWORD *)v61 = 136315394;
    v96[0] = sub_23A14071C(0xD000000000000015, 0x800000023A1A25B0, v97);
    sub_23A19B728();
    *(_WORD *)(v61 + 12) = 2080;
    swift_retain();
    v63 = sub_23A1979A0();
    v65 = v64;
    swift_release();
    v96[0] = sub_23A14071C(v63, v65, v97);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v62, -1, -1);
    MEMORY[0x23B842FA4](v61, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  sub_23A1952F4(0xD000000000000028, 0x800000023A1A2580);
}

uint64_t sub_23A196D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  _QWORD v18[3];
  _QWORD aBlock[6];
  _BYTE v20[48];

  v5 = sub_23A19B2D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A19B2F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = result;
    v18[1] = *(_QWORD *)(result + 32);
    sub_23A13AC74(a1, (uint64_t)v20, &qword_256944A10);
    v15 = swift_allocObject();
    sub_23A19A73C((uint64_t)v20, v15 + 16);
    v16 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v15 + 72) = *(_OWORD *)a3;
    *(_QWORD *)(v15 + 64) = v14;
    *(_OWORD *)(v15 + 88) = v16;
    *(_QWORD *)(v15 + 104) = *(_QWORD *)(a3 + 32);
    aBlock[4] = sub_23A19A784;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A126ED0;
    aBlock[3] = &block_descriptor_18;
    v17 = _Block_copy(aBlock);
    swift_retain();
    sub_23A19A59C(a3);
    sub_23A19B2E4();
    v18[2] = MEMORY[0x24BEE4AF8];
    sub_23A131E34((unint64_t *)&unk_256944510, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    v18[0] = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569458B0);
    sub_23A131E74(&qword_256944520, (uint64_t *)&unk_2569458B0);
    sub_23A19B764();
    MEMORY[0x23B8425E4](0, v12, v8, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, _QWORD))(v10 + 8))(v12, v18[0]);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23A196FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  unsigned __int8 v11;
  uint64_t v12;
  NSObject *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  ValueMetadata *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t (*v24)(uint64_t, char);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v32;
  int v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[40];
  __int128 v39;
  uint64_t v40;
  _QWORD v41[5];
  uint64_t v42;
  _BYTE v43[48];
  _QWORD v44[3];
  ValueMetadata *v45;
  unint64_t v46;
  __int128 v47;
  unsigned __int8 v48;
  char v49;

  v6 = sub_23A19AE28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A13AC74(a1, (uint64_t)&v47, &qword_256944A10);
  if ((v49 & 1) != 0)
  {
    v10 = v47;
    v11 = v48;
    if (v48 >= 2u)
      __asm { BR              X9 }
    v45 = &type metadata for CosmoInternalServerErrorHttpResponse;
    v46 = sub_23A19A514();
    sub_23A13A824(v10, *((uint64_t *)&v10 + 1), v11);
    LODWORD(v44[0]) = 500;
    if (qword_256944488 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v6, (uint64_t)qword_2569473A8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_23A13A854((uint64_t)v44, (uint64_t)v43);
    swift_retain_n();
    v13 = sub_23A19AE10();
    v14 = sub_23A19B6BC();
    if (os_log_type_enabled(v13, (os_log_type_t)v14))
    {
      v35 = v7;
      v15 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v42 = v32;
      *(_DWORD *)v15 = 136315394;
      sub_23A13A854((uint64_t)v43, (uint64_t)v41);
      sub_23A13AC74((uint64_t)v41, (uint64_t)&v39, &qword_256944A20);
      v36 = a1;
      v34 = v13;
      v33 = v14;
      if (v40)
      {
        sub_23A13A83C(&v39, (uint64_t)v38);
        sub_23A13A854((uint64_t)v38, (uint64_t)&v37);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256944A18);
        v16 = sub_23A19B518();
        v18 = v17;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      }
      else
      {
        v18 = 0xE300000000000000;
        v16 = 7104878;
      }
      sub_23A13ACB8((uint64_t)v41, &qword_256944A20);
      v41[0] = sub_23A14071C(v16, v18, &v42);
      sub_23A19B728();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      *(_WORD *)(v15 + 12) = 2080;
      swift_retain();
      v25 = sub_23A1979A0();
      v27 = v26;
      swift_release();
      v41[0] = sub_23A14071C(v25, v27, &v42);
      sub_23A19B728();
      swift_release_n();
      swift_bridgeObjectRelease();
      v28 = v34;
      _os_log_impl(&dword_23A123000, v34, (os_log_type_t)v33, "HTTP stream sending response=%s, %s", (uint8_t *)v15, 0x16u);
      v29 = v32;
      swift_arrayDestroy();
      MEMORY[0x23B842FA4](v29, -1, -1);
      MEMORY[0x23B842FA4](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v6);
      a1 = v36;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    sub_23A13AC74(a1, (uint64_t)v43, &qword_256944A10);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a2;
    v30 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v19 + 24) = *(_OWORD *)a3;
    *(_OWORD *)(v19 + 40) = v30;
    *(_QWORD *)(v19 + 56) = *(_QWORD *)(a3 + 32);
    sub_23A19A73C((uint64_t)v43, v19 + 64);
    v21 = v45;
    v22 = v46;
    v23 = __swift_project_boxed_opaque_existential_1(v44, (uint64_t)v45);
    swift_retain();
    sub_23A19A59C(a3);
    v24 = sub_23A19A798;
  }
  else
  {
    sub_23A13A83C(&v47, (uint64_t)v44);
    sub_23A13AC74(a1, (uint64_t)v43, &qword_256944A10);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a2;
    v20 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v19 + 24) = *(_OWORD *)a3;
    *(_OWORD *)(v19 + 40) = v20;
    *(_QWORD *)(v19 + 56) = *(_QWORD *)(a3 + 32);
    sub_23A19A73C((uint64_t)v43, v19 + 64);
    v21 = v45;
    v22 = v46;
    v23 = __swift_project_boxed_opaque_existential_1(v44, (uint64_t)v45);
    swift_retain();
    sub_23A19A59C(a3);
    v24 = sub_23A19AA20;
  }
  sub_23A199B24((uint64_t)v23, (uint64_t)v24, v19, a2, (uint64_t)v21, v22);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
}

uint64_t sub_23A1974BC(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v5)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3
                                                                                   + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
  if (v5)
  {
    v7 = result;
    v8 = a2 & 1;
    v9 = *(_QWORD *)(a4 + 16);
    v10 = *(_QWORD *)(a4 + 24);
    if (v10 >> 60 == 15)
      v11 = 0;
    else
      v11 = *(_QWORD *)(a4 + 16);
    if (v10 >> 60 == 15)
      v12 = 0xC000000000000000;
    else
      v12 = *(_QWORD *)(a4 + 24);
    sub_23A13A0F8(*(_QWORD *)(a3
                            + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler));
    sub_23A13A53C(v9, v10);
    v5(v11, v12, a5, v7, v8);
    sub_23A13A1E4((uint64_t)v5);
    return sub_23A125ED8(v11, v12);
  }
  return result;
}

uint64_t sub_23A197594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  ValueMetadata *v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  char v38;
  ValueMetadata *v39;
  unint64_t v40;

  v2 = v1;
  v4 = sub_23A19B35C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 16);
  v11 = *(void **)(v2 + 32);
  *v7 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v12 = v11;
  LOBYTE(v11) = sub_23A19B374();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v11 & 1) != 0)
  {
    if (qword_256944488 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v13 = sub_23A19AE28();
  __swift_project_value_buffer(v13, (uint64_t)qword_2569473A8);
  swift_retain_n();
  sub_23A14D690(v9, v8, v10);
  swift_retain();
  sub_23A14D690(v9, v8, v10);
  v14 = sub_23A19AE10();
  v15 = sub_23A19B6A4();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v36 = v35;
    *(_DWORD *)v17 = 136315650;
    HIDWORD(v34) = v16;
    v18 = swift_retain();
    v19 = sub_23A1440B4(v18);
    v21 = v20;
    swift_release();
    v37[0] = sub_23A14071C(v19, v21, &v36);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    v37[0] = v9;
    v37[1] = v8;
    v38 = v10;
    sub_23A14D690(v9, v8, v10);
    v22 = sub_23A19B518();
    v37[0] = sub_23A14071C(v22, v23, &v36);
    sub_23A19B728();
    swift_bridgeObjectRelease();
    sub_23A14D6C8(v9, v8, v10);
    sub_23A14D6C8(v9, v8, v10);
    *(_WORD *)(v17 + 22) = 2080;
    swift_retain();
    v24 = sub_23A1979A0();
    v26 = v25;
    swift_release();
    v37[0] = sub_23A14071C(v24, v26, &v36);
    sub_23A19B728();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A123000, v14, BYTE4(v34), "%s encountered error=%s while receiving request, %s", (uint8_t *)v17, 0x20u);
    v27 = v35;
    swift_arrayDestroy();
    MEMORY[0x23B842FA4](v27, -1, -1);
    MEMORY[0x23B842FA4](v17, -1, -1);

  }
  else
  {
    swift_release_n();
    sub_23A14D6C8(v9, v8, v10);
    sub_23A14D6C8(v9, v8, v10);

    swift_release_n();
  }
  if ((v10 - 1) >= 2u)
  {
    v28 = 400;
    v29 = &type metadata for CosmoBadRequestHttpResponse;
    v30 = sub_23A19A558();
  }
  else
  {
    v28 = 500;
    v29 = &type metadata for CosmoInternalServerErrorHttpResponse;
    v30 = sub_23A19A514();
  }
  v31 = v30;
  v39 = v29;
  v40 = v30;
  LODWORD(v37[0]) = v28;
  v32 = __swift_project_boxed_opaque_existential_1(v37, (uint64_t)v29);
  sub_23A199B24((uint64_t)v32, 0, 0, v2, (uint64_t)v29, v31);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_23A1979A0()
{
  sub_23A19B794();
  sub_23A19B590();
  sub_23A19AD2C();
  sub_23A131E34(&qword_256946070, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23A19B8FC();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  sub_23A19B590();
  sub_23A19B590();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23A197B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23A13A1E4(*(_QWORD *)(v0 + 16));

  v1 = v0 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_id;
  v2 = sub_23A19AD2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_weakDestroy();
  swift_release();
  sub_23A13A1E4(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler));
  sub_23A125F1C(*(_QWORD *)(v0 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData), *(_QWORD *)(v0 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData + 8));
  return swift_deallocClassInstance();
}

uint64_t sub_23A197C18()
{
  return sub_23A19ACFC();
}

uint64_t sub_23A197C34()
{
  return sub_23A1979A0();
}

uint64_t sub_23A197C54(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256947788);
  v40 = a2;
  v6 = sub_23A19B818();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_40;
    if (v13 >= v38)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v39 + 8 * v13);
    if (!v24)
    {
      v25 = v13 + 1;
      if (v13 + 1 >= v38)
      {
LABEL_31:
        swift_release();
        v3 = v37;
        if ((v40 & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      }
      v24 = *(_QWORD *)(v39 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          v13 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v13 >= v38)
            goto LABEL_31;
          v24 = *(_QWORD *)(v39 + 8 * v13);
          ++v25;
          if (v24)
            goto LABEL_20;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_21:
    v26 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v5 + 56) + 32 * v21;
    v30 = *(_QWORD *)v29;
    v41 = *(_OWORD *)(v29 + 8);
    v31 = *(_QWORD *)(v29 + 24);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    sub_23A19B980();
    sub_23A19B56C();
    result = sub_23A19B9A4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v16 == v33;
        if (v16 == v33)
          v16 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v35 == -1);
      v17 = __clz(__rbit64(~v35)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v28;
    v18[1] = v27;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
    *(_QWORD *)v19 = v30;
    *(_OWORD *)(v19 + 8) = v41;
    *(_QWORD *)(v19 + 24) = v31;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23A197F7C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  __int128 v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256947798);
  result = sub_23A19B818();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8++, 1))
          goto LABEL_40;
        if (v8 >= v13)
        {
LABEL_31:
          if ((a2 & 1) == 0)
          {
            result = swift_release();
            v3 = v30;
            goto LABEL_38;
          }
          v29 = 1 << *(_BYTE *)(v5 + 32);
          if (v29 >= 64)
            bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v9 = -1 << v29;
          v3 = v30;
          *(_QWORD *)(v5 + 16) = 0;
          break;
        }
        v22 = v9[v8];
        if (!v22)
        {
          v23 = v8 + 1;
          if (v8 + 1 >= v13)
            goto LABEL_31;
          v22 = v9[v23];
          if (!v22)
          {
            while (1)
            {
              v8 = v23 + 1;
              if (__OFADD__(v23, 1))
                break;
              if (v8 >= v13)
                goto LABEL_31;
              v22 = v9[v8];
              ++v23;
              if (v22)
                goto LABEL_20;
            }
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            return result;
          }
          ++v8;
        }
LABEL_20:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v24 = *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v20);
      v31 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        swift_retain();
      result = MEMORY[0x23B842860](*(_QWORD *)(v7 + 40), v24, 4);
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v18) = v24;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_23A198228(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_23A19AC0C();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_23A19AD2C();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256947790);
  v11 = sub_23A19B818();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_39;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_22;
    }
    if (__OFADD__(v19++, 1))
      goto LABEL_41;
    if (v19 >= v45)
      break;
    v26 = v46;
    v27 = v46[v19];
    if (!v27)
    {
      v28 = v19 + 1;
      if (v19 + 1 >= v45)
      {
LABEL_31:
        v40 = v48;
        swift_release();
        v3 = v44;
        if ((v43 & 1) == 0)
          goto LABEL_39;
        goto LABEL_35;
      }
      v27 = v46[v28];
      if (!v27)
      {
        while (1)
        {
          v19 = v28 + 1;
          if (__OFADD__(v28, 1))
            break;
          if (v19 >= v45)
            goto LABEL_31;
          v27 = v46[v19];
          ++v28;
          if (v27)
            goto LABEL_21;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v19;
    }
LABEL_21:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_22:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_23A131E34((unint64_t *)&unk_2569449A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23A19B494();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_39;
LABEL_35:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_39:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_23A198608(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v3 = v2;
  v5 = sub_23A19AD2C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569477A0);
  v47 = a2;
  v10 = sub_23A19B818();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v49 = v8;
  v50 = v5;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v44 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v42 = v2;
  v43 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v45 = v9;
  v46 = v6;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v43)
      break;
    v24 = v44;
    v25 = v44[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v43)
        goto LABEL_34;
      v25 = v44[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v43)
        {
LABEL_34:
          swift_release();
          v3 = v42;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v44[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v43)
              goto LABEL_34;
            v25 = v44[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v9 + 48) + v27 * v22;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v49, v28, v50);
      v29 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 24 * v22);
      v30 = v29[1];
      v48 = *v29;
      v31 = v29[2];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v49, v28, v50);
      v32 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 24 * v22);
      v30 = v32[1];
      v48 = *v32;
      v31 = v32[2];
      swift_bridgeObjectRetain();
    }
    sub_23A131E34((unint64_t *)&unk_2569449A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23A19B494();
    v33 = -1 << *(_BYTE *)(v11 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      v6 = v46;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v27 * v19, v49, v50);
    v20 = (_QWORD *)(*(_QWORD *)(v11 + 56) + 24 * v19);
    *v20 = v48;
    v20[1] = v30;
    v20[2] = v31;
    ++*(_QWORD *)(v11 + 16);
    v9 = v45;
  }
  swift_release();
  v3 = v42;
  v24 = v44;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v9 + 32);
  if (v40 >= 64)
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v40;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23A1989DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v8 = v7;
  v15 = *v7;
  v17 = sub_23A161858(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_23A198EF0();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (_QWORD *)(v23[7] + 32 * v17);
      *v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      v24[3] = a4;
      swift_release();
      return swift_release();
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v28 = (uint64_t *)(v23[6] + 16 * v17);
    *v28 = a5;
    v28[1] = a6;
    v29 = (_QWORD *)(v23[7] + 32 * v17);
    *v29 = a1;
    v29[1] = a2;
    v29[2] = a3;
    v29[3] = a4;
    v30 = v23[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v23[2] = v32;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23A197C54(v20, a7 & 1);
  v26 = sub_23A161858(a5, a6);
  if ((v21 & 1) == (v27 & 1))
  {
    v17 = v26;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23A19B920();
  __break(1u);
  return result;
}

uint64_t sub_23A198B78(uint64_t a1, uint64_t a2, unsigned int a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23A1618BC(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_23A1990BC();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      *v19 = a1;
      v19[1] = a2;
      return swift_release();
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_23A197F7C(result, a4 & 1);
  result = sub_23A1618BC(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23A19B920();
  __break(1u);
  return result;
}

uint64_t sub_23A198CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v6 = (_QWORD **)v5;
  v28 = a2;
  v29 = a3;
  v10 = sub_23A19AD2C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_23A1618F0(a4);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    v22 = *v6;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (uint64_t *)(v22[7] + 24 * v16);
      result = swift_bridgeObjectRelease();
      v25 = v28;
      *v23 = a1;
      v23[1] = v25;
      v23[2] = v29;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_23A199520();
    goto LABEL_7;
  }
  sub_23A198608(v19, a5 & 1);
  v26 = sub_23A1618F0(a4);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_23A19B920();
    __break(1u);
    return result;
  }
  v16 = v26;
  v22 = *v6;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  return sub_23A198E3C(v16, (uint64_t)v13, a1, v28, v29, v22);
}

uint64_t sub_23A198E3C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v12 = a6[6];
  v13 = sub_23A19AD2C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a2, v13);
  v15 = (_QWORD *)(a6[7] + 24 * a1);
  *v15 = a3;
  v15[1] = a4;
  v15[2] = a5;
  v16 = a6[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a6[2] = v18;
  return result;
}

void *sub_23A198EF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256947788);
  v2 = *v0;
  v3 = sub_23A19B80C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    if (!v28)
      break;
LABEL_23:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 24);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_OWORD *)(v21 + 8);
    *v24 = v19;
    v24[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_OWORD *)(v26 + 8) = v25;
    *(_QWORD *)(v26 + 24) = v23;
    swift_bridgeObjectRetain();
    swift_retain();
    result = (void *)swift_retain();
  }
  v29 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_23A1990BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256947798);
  v2 = *v0;
  v3 = sub_23A19B80C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    if (!v21)
      break;
LABEL_23:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

char *sub_23A19924C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;

  v1 = v0;
  v37 = sub_23A19AC0C();
  v33 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23A19AD2C();
  v32 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256947790);
  v4 = *v0;
  v5 = sub_23A19B80C();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = (char *)swift_release();
LABEL_25:
    *v1 = v6;
    return result;
  }
  result = (char *)(v5 + 64);
  v8 = (char *)(v4 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v30 = v1;
  v31 = v4 + 64;
  if (v6 != v4 || result >= &v8[8 * v9])
    result = (char *)memmove(result, v8, 8 * v9);
  v10 = 0;
  v11 = *(_QWORD *)(v4 + 16);
  v38 = v4;
  v39 = v6;
  *(_QWORD *)(v6 + 16) = v11;
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v40 = (unint64_t)(v12 + 63) >> 6;
  v15 = v32;
  v16 = v33;
  v17 = v34;
  v18 = v36;
  v19 = v6;
  while (1)
  {
    if (v14)
    {
      v41 = (v14 - 1) & v14;
      v20 = __clz(__rbit64(v14)) | (v10 << 6);
      v21 = v38;
      goto LABEL_9;
    }
    v27 = __OFADD__(v10++, 1);
    v21 = v38;
    if (v27)
      goto LABEL_27;
    if (v10 >= v40)
    {
LABEL_24:
      result = (char *)swift_release();
      v1 = v30;
      v6 = v39;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v31 + 8 * v10);
    if (!v28)
      break;
LABEL_21:
    v41 = (v28 - 1) & v28;
    v20 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v15 + 72) * v20;
    v23 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v17, *(_QWORD *)(v21 + 48) + v22, v35);
    v24 = *(_QWORD *)(v16 + 72) * v20;
    v25 = *(_QWORD *)(v21 + 56) + v24;
    v26 = v37;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, v25, v37);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 48) + v22, v17, v23);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(_QWORD *)(v19 + 56) + v24, v18, v26);
    v14 = v41;
  }
  v29 = v10 + 1;
  if (v10 + 1 >= v40)
    goto LABEL_24;
  v28 = *(_QWORD *)(v31 + 8 * v29);
  if (v28)
  {
    ++v10;
    goto LABEL_21;
  }
  v6 = v39;
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v40)
    {
      result = (char *)swift_release();
      v1 = v30;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v31 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_21;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_23A199520()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  const void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;

  v39 = sub_23A19AD2C();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569477A0);
  v34 = v0;
  v2 = *v0;
  v3 = sub_23A19B80C();
  v4 = *(_QWORD *)(v2 + 16);
  v41 = v3;
  if (!v4)
  {
    result = (void *)swift_release();
    v32 = v41;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return result;
  }
  v5 = v3;
  result = (void *)(v3 + 64);
  v7 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  v36 = (const void *)(v2 + 64);
  if (v5 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
  {
    result = memmove(result, v36, 8 * v7);
    v5 = v41;
  }
  v9 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v40 = v2;
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v35 = (unint64_t)(v10 + 63) >> 6;
  v14 = v37;
  v13 = v38;
  v15 = v39;
  v16 = v41;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v42 = v9;
      v18 = v17 | (v9 << 6);
      v19 = v40;
      goto LABEL_12;
    }
    v27 = v9 + 1;
    v19 = v40;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v35)
      goto LABEL_26;
    v28 = *((_QWORD *)v36 + v27);
    v29 = v9 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_26;
      v28 = *((_QWORD *)v36 + v29);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v42 = v29;
    v18 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v14 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v13, *(_QWORD *)(v19 + 48) + v20, v15);
    v21 = 24 * v18;
    v22 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 24 * v18);
    v23 = *v22;
    v24 = v22[1];
    v25 = v22[2];
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v16 + 48) + v20, v13, v15);
    v26 = (_QWORD *)(*(_QWORD *)(v16 + 56) + v21);
    *v26 = v23;
    v26[1] = v24;
    v26[2] = v25;
    result = (void *)swift_bridgeObjectRetain();
    v9 = v42;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_26:
    result = (void *)swift_release();
    v31 = v34;
    v32 = v41;
    goto LABEL_28;
  }
  v28 = *((_QWORD *)v36 + v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_26;
    v28 = *((_QWORD *)v36 + v29);
    ++v30;
    if (v28)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23A1997B0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_23A131DF0(a1, a2);
  sub_23A1999BC(a1, a2);
  sub_23A125ED8(a1, a2);
  v4 = sub_23A19B554();
  swift_release();
  return v4;
}

uint64_t sub_23A199824@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23A19B554();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23A19985C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_23A19AB64();
  v9 = result;
  if (result)
  {
    result = sub_23A19AB88();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_23A19AB7C();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_23A199970(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

void sub_23A199908(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23A19B800();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x23B8426A4);
}

_QWORD *sub_23A199970(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

void sub_23A1999BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_23A19AC90();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

_QWORD *sub_23A199A38()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256944DA8);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_23A131DF0(v2, v0);
    v7 = sub_23A19AC24();
    sub_23A125ED8(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x23A199B0CLL);
    }
  }
  return v4;
}

uint64_t sub_23A199B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *boxed_opaque_existential_1;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26[5];
  uint64_t v27[3];
  uint64_t v28;
  uint64_t v29;

  v12 = sub_23A19B35C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = a5;
  v29 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  v17 = *(void **)(a4 + 32);
  *v15 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v18 = v17;
  LOBYTE(v17) = sub_23A19B374();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v17 & 1) != 0)
  {
    *(_BYTE *)(a4 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse) = 1;
    v20 = *(_QWORD *)(a4 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_stream);
    v21 = v28;
    v22 = v29;
    v23 = __swift_project_boxed_opaque_existential_1(v27, v28);
    v26[3] = v21;
    v24 = *(_QWORD *)(v22 + 8);
    v26[4] = v24;
    v25 = __swift_allocate_boxed_opaque_existential_1(v26);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v25, v23, v21);
    sub_23A14F44C((uint64_t)v25, a2, a3, v20, v21, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_23A199CA8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _OWORD *v20;
  id v21;
  id v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = v4;
  v27 = a3;
  v9 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A19B6EC();
  v25 = *(_QWORD *)(v12 - 8);
  v26 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23A19B6C8();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23A19B2F0();
  MEMORY[0x24BDAC7A8](v16);
  v4[2] = 0;
  v4[3] = 0;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers) = MEMORY[0x24BEE4B00];
  *((_BYTE *)v4 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_ready) = 0;
  *((_BYTE *)v4 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_terminated) = 0;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_acceptedStreamCount) = 0;
  v17 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_activeResponses) = MEMORY[0x24BEE4AF8];
  v4[4] = a1;
  v4[5] = a2;
  if (a4)
  {
    v18 = a4;
  }
  else
  {
    v24[1] = sub_23A125AD0();
    sub_23A19B2E4();
    v28 = v17;
    sub_23A131E34((unint64_t *)&unk_256945240, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569444F0);
    sub_23A131E74((unint64_t *)&unk_256945250, (uint64_t *)&unk_2569444F0);
    sub_23A19B764();
    (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v14, *MEMORY[0x24BEE5750], v26);
    v18 = (void *)sub_23A19B704();
  }
  v5[6] = v18;
  v19 = v27;
  sub_23A154B34(v27, (uint64_t)v5 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_descriptor);
  sub_23A154B34(v19, (uint64_t)v11);
  type metadata accessor for CosmoListener();
  v20 = (_OWORD *)swift_allocObject();
  v20[1] = 0u;
  v20[2] = 0u;
  v20[3] = 0u;
  *(_QWORD *)((char *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener) = 0;
  *((_BYTE *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) = 0;
  sub_23A154B34((uint64_t)v11, (uint64_t)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor);
  v21 = a4;
  v22 = v18;
  sub_23A154AF8((uint64_t)v11);
  *(_QWORD *)((char *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue) = v22;
  sub_23A154AF8(v19);
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_listener) = v20;
  return v5;
}

uint64_t sub_23A199FB8()
{
  uint64_t v0;

  return sub_23A19264C(v0);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

void sub_23A199FD8()
{
  sub_23A194874(0xD00000000000002ELL, 0x800000023A1A25D0);
}

uint64_t sub_23A199FF4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 64))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A19A030()
{
  uint64_t *v0;

  return sub_23A1931EC(v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[2], v0[3]);
}

unint64_t sub_23A19A048()
{
  unint64_t result;

  result = qword_2569473E0;
  if (!qword_2569473E0)
  {
    result = MEMORY[0x23B842EF0](&protocol conformance descriptor for CosmoMultiplexChannelHost.State, &type metadata for CosmoMultiplexChannelHost.State);
    atomic_store(result, (unint64_t *)&qword_2569473E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CosmoMultiplexChannelHost.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A19A0E0 + 4 * byte_23A19FFD3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A19A114 + 4 * byte_23A19FFCE[v4]))();
}

uint64_t sub_23A19A114(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A19A11C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A19A124);
  return result;
}

uint64_t sub_23A19A130(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A19A138);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A19A13C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A19A144(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CosmoMultiplexChannelHost.State()
{
  return &type metadata for CosmoMultiplexChannelHost.State;
}

uint64_t sub_23A19A160()
{
  return type metadata accessor for CosmoMultiplexChannelHost(0);
}

uint64_t type metadata accessor for CosmoMultiplexChannelHost(uint64_t a1)
{
  return sub_23A141024(a1, qword_256947410);
}

uint64_t sub_23A19A17C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NetworkDescriptor();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CosmoMultiplexChannelHost()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.listenerStateChangedCallback.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.listenerStateChangedCallback.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.listenerStateChangedCallback.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.__allocating_init(name:descriptor:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.respond<A>(for:handler:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t sub_23A19A2A0()
{
  return type metadata accessor for PendingResponse(0);
}

uint64_t type metadata accessor for PendingResponse(uint64_t a1)
{
  return sub_23A141024(a1, qword_2569475F8);
}

uint64_t sub_23A19A2BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A19AD2C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for CosmoMultiplexChannelHost.Handler()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CosmoMultiplexChannelHost.Handler(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CosmoMultiplexChannelHost.Handler(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CosmoMultiplexChannelHost.Handler(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoMultiplexChannelHost.Handler(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CosmoMultiplexChannelHost.Handler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoMultiplexChannelHost.Handler()
{
  return &type metadata for CosmoMultiplexChannelHost.Handler;
}

unint64_t sub_23A19A514()
{
  unint64_t result;

  result = qword_256947770;
  if (!qword_256947770)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CC70, &type metadata for CosmoInternalServerErrorHttpResponse);
    atomic_store(result, (unint64_t *)&qword_256947770);
  }
  return result;
}

unint64_t sub_23A19A558()
{
  unint64_t result;

  result = qword_256947778;
  if (!qword_256947778)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CC54, &type metadata for CosmoBadRequestHttpResponse);
    atomic_store(result, (unint64_t *)&qword_256947778);
  }
  return result;
}

uint64_t sub_23A19A59C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_23A13A53C(v2, v3);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_23A19A5E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_23A125F1C(v2, v3);
  swift_unknownObjectRelease();
  return a1;
}

unint64_t sub_23A19A634()
{
  unint64_t result;

  result = qword_256947780;
  if (!qword_256947780)
  {
    result = MEMORY[0x23B842EF0](&unk_23A19CC38, &type metadata for CosmoNotFoundHttpResponse);
    atomic_store(result, (unint64_t *)&qword_256947780);
  }
  return result;
}

uint64_t sub_23A19A678()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 48);
  if (v1 >> 60 != 15)
    sub_23A125ED8(*(_QWORD *)(v0 + 40), v1);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A19A6C4(uint64_t a1)
{
  uint64_t v1;

  return sub_23A196D50(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_23A19A6D0()
{
  uint64_t v0;
  unint64_t v1;

  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
    sub_23A13A824(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  else
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 96);
  if (v1 >> 60 != 15)
    sub_23A125ED8(*(_QWORD *)(v0 + 88), v1);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A19A73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256944A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A19A784()
{
  uint64_t v0;

  return sub_23A196FB0(v0 + 16, *(_QWORD *)(v0 + 64), v0 + 72);
}

uint64_t sub_23A19A798(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_23A1974BC(a1, a2 & 1, *(_QWORD *)(v2 + 16), v2 + 24, v2 + 64);
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 48);
  if (v1 >> 60 != 15)
    sub_23A125ED8(*(_QWORD *)(v0 + 40), v1);
  swift_unknownObjectRelease();
  if ((*(_BYTE *)(v0 + 104) & 1) != 0)
    sub_23A13A824(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  else
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocObject();
}

uint64_t sub_23A19A82C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A19A858(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_23A195AD8(a1, a2 & 1, *(void (**)(uint64_t, unint64_t, __int128 *, uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_23A19A868(uint64_t *a1)
{
  return sub_23A195220(a1);
}

uint64_t sub_23A19A870(uint64_t *a1)
{
  return sub_23A19527C(a1);
}

uint64_t sub_23A19A878()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A19A89C(uint64_t a1)
{
  return sub_23A1946F8(a1);
}

uint64_t sub_23A19A8A4(char *a1)
{
  uint64_t v1;

  return sub_23A12CD84(a1, v1, (void (*)(char *))sub_23A195B90);
}

uint64_t sub_23A19A8C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A19A8E8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A19A914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23A193560(a1, a2, a3, a4, *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(void (**)(char *, uint64_t (*)(uint64_t), _QWORD *))(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_23A19A940()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A19A974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return sub_23A1938BC(a1, a2, a3, a4, a5 & 1, *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 16));
}

uint64_t sub_23A19A9A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A19A9CC(uint64_t a1)
{
  uint64_t v1;

  return sub_23A193708(a1, *(void (**)(__int128 *))(v1 + 32));
}

uint64_t sub_23A19A9D8(char *a1)
{
  uint64_t v1;

  return sub_23A12CD84(a1, v1, (void (*)(char *))sub_23A193E88);
}

uint64_t sub_23A19A9F8(uint64_t a1)
{
  return sub_23A1928A4(a1);
}

void secIdentityFromKeyPair_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0(&dword_23A123000, v0, v1, "SecGenerateSelfSignedCertificate failed", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void secIdentityFromKeyPair_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0(&dword_23A123000, v0, v1, "SecIdentityCreate failed", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void secIdentityFromKeyPair_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0(&dword_23A123000, v0, v1, "sec_identity_create failed", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void publicKeyFromIdentity_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0(&dword_23A123000, v0, v1, "SecIdentityCopyPrivateKey failed", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_23A19AAD4()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23A19AAE0()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23A19AAEC()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23A19AAF8()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23A19AB04()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23A19AB10()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23A19AB1C()
{
  return MEMORY[0x24BDCB630]();
}

uint64_t sub_23A19AB28()
{
  return MEMORY[0x24BDCB710]();
}

uint64_t sub_23A19AB34()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_23A19AB40()
{
  return MEMORY[0x24BDCB7E0]();
}

uint64_t sub_23A19AB4C()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_23A19AB58()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_23A19AB64()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_23A19AB70()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_23A19AB7C()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_23A19AB88()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23A19AB94()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_23A19ABA0()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_23A19ABAC()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23A19ABB8()
{
  return MEMORY[0x24BDCD748]();
}

uint64_t sub_23A19ABC4()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_23A19ABD0()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_23A19ABDC()
{
  return MEMORY[0x24BDCD918]();
}

uint64_t sub_23A19ABE8()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_23A19ABF4()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_23A19AC00()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_23A19AC0C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23A19AC18()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_23A19AC24()
{
  return MEMORY[0x24BDCDBF8]();
}

uint64_t sub_23A19AC30()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_23A19AC3C()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_23A19AC48()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_23A19AC54()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_23A19AC60()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23A19AC6C()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_23A19AC78()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23A19AC84()
{
  return MEMORY[0x24BDCDD40]();
}

uint64_t sub_23A19AC90()
{
  return MEMORY[0x24BDCDD78]();
}

uint64_t sub_23A19AC9C()
{
  return MEMORY[0x24BDCDD88]();
}

uint64_t sub_23A19ACA8()
{
  return MEMORY[0x24BDCDE70]();
}

uint64_t sub_23A19ACB4()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_23A19ACC0()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23A19ACCC()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23A19ACD8()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23A19ACE4()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_23A19ACF0()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23A19ACFC()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23A19AD08()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_23A19AD14()
{
  return MEMORY[0x24BDCEA18]();
}

uint64_t sub_23A19AD20()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23A19AD2C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23A19AD38()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_23A19AD44()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_23A19AD50()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_23A19AD5C()
{
  return MEMORY[0x24BE29FD0]();
}

uint64_t sub_23A19AD68()
{
  return MEMORY[0x24BE29FD8]();
}

uint64_t sub_23A19AD74()
{
  return MEMORY[0x24BE2A388]();
}

uint64_t sub_23A19AD80()
{
  return MEMORY[0x24BE2A390]();
}

uint64_t sub_23A19AD8C()
{
  return MEMORY[0x24BE2A398]();
}

uint64_t sub_23A19AD98()
{
  return MEMORY[0x24BE2A3A0]();
}

uint64_t sub_23A19ADA4()
{
  return MEMORY[0x24BE2A3A8]();
}

uint64_t sub_23A19ADB0()
{
  return MEMORY[0x24BE2A3B0]();
}

uint64_t sub_23A19ADBC()
{
  return MEMORY[0x24BE2A3C0]();
}

uint64_t sub_23A19ADC8()
{
  return MEMORY[0x24BE2A3C8]();
}

uint64_t sub_23A19ADD4()
{
  return MEMORY[0x24BE2A3D0]();
}

uint64_t sub_23A19ADE0()
{
  return MEMORY[0x24BE2A3D8]();
}

uint64_t sub_23A19ADEC()
{
  return MEMORY[0x24BE2A3E0]();
}

uint64_t sub_23A19ADF8()
{
  return MEMORY[0x24BEE73C0]();
}

uint64_t sub_23A19AE04()
{
  return MEMORY[0x24BEE7420]();
}

uint64_t sub_23A19AE10()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23A19AE1C()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23A19AE28()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23A19AE34()
{
  return MEMORY[0x24BEE5370]();
}

uint64_t sub_23A19AE40()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_23A19AE4C()
{
  return MEMORY[0x24BDB9EA0]();
}

uint64_t sub_23A19AE58()
{
  return MEMORY[0x24BDB9EA8]();
}

uint64_t sub_23A19AE64()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_23A19AE70()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_23A19AE7C()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t sub_23A19AE88()
{
  return MEMORY[0x24BDDFEB8]();
}

uint64_t sub_23A19AE94()
{
  return MEMORY[0x24BDDFEE0]();
}

uint64_t sub_23A19AEA0()
{
  return MEMORY[0x24BDDFF00]();
}

uint64_t sub_23A19AEAC()
{
  return MEMORY[0x24BDDFF08]();
}

uint64_t sub_23A19AEB8()
{
  return MEMORY[0x24BDDFF20]();
}

uint64_t sub_23A19AEC4()
{
  return MEMORY[0x24BDDFF68]();
}

uint64_t sub_23A19AED0()
{
  return MEMORY[0x24BDDFF80]();
}

uint64_t sub_23A19AEDC()
{
  return MEMORY[0x24BDDFF88]();
}

uint64_t sub_23A19AEE8()
{
  return MEMORY[0x24BDDFF90]();
}

uint64_t sub_23A19AEF4()
{
  return MEMORY[0x24BDDFF98]();
}

uint64_t sub_23A19AF00()
{
  return MEMORY[0x24BDDFFA0]();
}

uint64_t sub_23A19AF0C()
{
  return MEMORY[0x24BDDFFD8]();
}

uint64_t sub_23A19AF18()
{
  return MEMORY[0x24BDDFFE8]();
}

uint64_t sub_23A19AF24()
{
  return MEMORY[0x24BDDFFF0]();
}

uint64_t sub_23A19AF30()
{
  return MEMORY[0x24BDDFFF8]();
}

uint64_t sub_23A19AF3C()
{
  return MEMORY[0x24BDE0030]();
}

uint64_t sub_23A19AF48()
{
  return MEMORY[0x24BDE0048]();
}

uint64_t sub_23A19AF54()
{
  return MEMORY[0x24BDE0068]();
}

uint64_t sub_23A19AF60()
{
  return MEMORY[0x24BDE00E0]();
}

uint64_t sub_23A19AF6C()
{
  return MEMORY[0x24BDE0150]();
}

uint64_t sub_23A19AF78()
{
  return MEMORY[0x24BDE0158]();
}

uint64_t sub_23A19AF84()
{
  return MEMORY[0x24BDE0170]();
}

uint64_t sub_23A19AF90()
{
  return MEMORY[0x24BDE0180]();
}

uint64_t sub_23A19AF9C()
{
  return MEMORY[0x24BDE0188]();
}

uint64_t sub_23A19AFA8()
{
  return MEMORY[0x24BDE0198]();
}

uint64_t sub_23A19AFB4()
{
  return MEMORY[0x24BDE01A0]();
}

uint64_t sub_23A19AFC0()
{
  return MEMORY[0x24BDE01A8]();
}

uint64_t sub_23A19AFCC()
{
  return MEMORY[0x24BDE01B0]();
}

uint64_t sub_23A19AFD8()
{
  return MEMORY[0x24BDE01B8]();
}

uint64_t sub_23A19AFE4()
{
  return MEMORY[0x24BDE01D0]();
}

uint64_t sub_23A19AFF0()
{
  return MEMORY[0x24BDE01E0]();
}

uint64_t sub_23A19AFFC()
{
  return MEMORY[0x24BDE01E8]();
}

uint64_t sub_23A19B008()
{
  return MEMORY[0x24BDE01F0]();
}

uint64_t sub_23A19B014()
{
  return MEMORY[0x24BDE02E0]();
}

uint64_t sub_23A19B020()
{
  return MEMORY[0x24BDE02E8]();
}

uint64_t sub_23A19B02C()
{
  return MEMORY[0x24BDE02F0]();
}

uint64_t sub_23A19B038()
{
  return MEMORY[0x24BDE0328]();
}

uint64_t sub_23A19B044()
{
  return MEMORY[0x24BDE0340]();
}

uint64_t sub_23A19B050()
{
  return MEMORY[0x24BDE0348]();
}

uint64_t sub_23A19B05C()
{
  return MEMORY[0x24BDE0350]();
}

uint64_t sub_23A19B068()
{
  return MEMORY[0x24BDE0358]();
}

uint64_t sub_23A19B074()
{
  return MEMORY[0x24BDE0368]();
}

uint64_t sub_23A19B080()
{
  return MEMORY[0x24BDE0370]();
}

uint64_t sub_23A19B08C()
{
  return MEMORY[0x24BDE0378]();
}

uint64_t sub_23A19B098()
{
  return MEMORY[0x24BDE0390]();
}

uint64_t sub_23A19B0A4()
{
  return MEMORY[0x24BDE03B0]();
}

uint64_t sub_23A19B0B0()
{
  return MEMORY[0x24BDE03B8]();
}

uint64_t sub_23A19B0BC()
{
  return MEMORY[0x24BDE03C8]();
}

uint64_t sub_23A19B0C8()
{
  return MEMORY[0x24BDE03D0]();
}

uint64_t sub_23A19B0D4()
{
  return MEMORY[0x24BDE03E0]();
}

uint64_t sub_23A19B0E0()
{
  return MEMORY[0x24BDE03F0]();
}

uint64_t sub_23A19B0EC()
{
  return MEMORY[0x24BDE0400]();
}

uint64_t sub_23A19B0F8()
{
  return MEMORY[0x24BDE0458]();
}

uint64_t sub_23A19B104()
{
  return MEMORY[0x24BDE0478]();
}

uint64_t sub_23A19B110()
{
  return MEMORY[0x24BDE04A0]();
}

uint64_t sub_23A19B11C()
{
  return MEMORY[0x24BDE04A8]();
}

uint64_t sub_23A19B128()
{
  return MEMORY[0x24BDE04B0]();
}

uint64_t sub_23A19B134()
{
  return MEMORY[0x24BDE04B8]();
}

uint64_t sub_23A19B140()
{
  return MEMORY[0x24BDE04C0]();
}

uint64_t sub_23A19B14C()
{
  return MEMORY[0x24BDE04C8]();
}

uint64_t sub_23A19B158()
{
  return MEMORY[0x24BDE04D8]();
}

uint64_t sub_23A19B164()
{
  return MEMORY[0x24BDE04E0]();
}

uint64_t sub_23A19B170()
{
  return MEMORY[0x24BDE04E8]();
}

uint64_t sub_23A19B17C()
{
  return MEMORY[0x24BDE04F0]();
}

uint64_t sub_23A19B188()
{
  return MEMORY[0x24BDE04F8]();
}

uint64_t sub_23A19B194()
{
  return MEMORY[0x24BDE0500]();
}

uint64_t sub_23A19B1A0()
{
  return MEMORY[0x24BDE0528]();
}

uint64_t sub_23A19B1AC()
{
  return MEMORY[0x24BDE0530]();
}

uint64_t sub_23A19B1B8()
{
  return MEMORY[0x24BDE0540]();
}

uint64_t sub_23A19B1C4()
{
  return MEMORY[0x24BDE0548]();
}

uint64_t sub_23A19B1D0()
{
  return MEMORY[0x24BDE0558]();
}

uint64_t sub_23A19B1DC()
{
  return MEMORY[0x24BDE0560]();
}

uint64_t sub_23A19B1E8()
{
  return MEMORY[0x24BDE0568]();
}

uint64_t sub_23A19B1F4()
{
  return MEMORY[0x24BDE0570]();
}

uint64_t sub_23A19B200()
{
  return MEMORY[0x24BDE0578]();
}

uint64_t sub_23A19B20C()
{
  return MEMORY[0x24BDE0580]();
}

uint64_t sub_23A19B218()
{
  return MEMORY[0x24BDE0588]();
}

uint64_t sub_23A19B224()
{
  return MEMORY[0x24BDE0590]();
}

uint64_t sub_23A19B230()
{
  return MEMORY[0x24BDE0598]();
}

uint64_t sub_23A19B23C()
{
  return MEMORY[0x24BDE0670]();
}

uint64_t sub_23A19B248()
{
  return MEMORY[0x24BDE0688]();
}

uint64_t sub_23A19B254()
{
  return MEMORY[0x24BDE06B0]();
}

uint64_t sub_23A19B260()
{
  return MEMORY[0x24BDE06D0]();
}

uint64_t sub_23A19B26C()
{
  return MEMORY[0x24BDE06D8]();
}

uint64_t sub_23A19B278()
{
  return MEMORY[0x24BDE06E0]();
}

uint64_t sub_23A19B284()
{
  return MEMORY[0x24BDE0718]();
}

uint64_t sub_23A19B290()
{
  return MEMORY[0x24BDE0728]();
}

uint64_t sub_23A19B29C()
{
  return MEMORY[0x24BDE0768]();
}

uint64_t sub_23A19B2A8()
{
  return MEMORY[0x24BDE0780]();
}

uint64_t sub_23A19B2B4()
{
  return MEMORY[0x24BDE0788]();
}

uint64_t sub_23A19B2C0()
{
  return MEMORY[0x24BDE0798]();
}

uint64_t sub_23A19B2CC()
{
  return MEMORY[0x24BDE07A0]();
}

uint64_t sub_23A19B2D8()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_23A19B2E4()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23A19B2F0()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23A19B2FC()
{
  return MEMORY[0x24BEE5518]();
}

uint64_t sub_23A19B308()
{
  return MEMORY[0x24BEE5528]();
}

uint64_t sub_23A19B314()
{
  return MEMORY[0x24BEE5538]();
}

uint64_t sub_23A19B320()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_23A19B32C()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_23A19B338()
{
  return MEMORY[0x24BEE55D8]();
}

uint64_t sub_23A19B344()
{
  return MEMORY[0x24BEE55E0]();
}

uint64_t sub_23A19B350()
{
  return MEMORY[0x24BEE55F8]();
}

uint64_t sub_23A19B35C()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_23A19B368()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_23A19B374()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_23A19B380()
{
  return MEMORY[0x24BDC61A8]();
}

uint64_t sub_23A19B38C()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_23A19B398()
{
  return MEMORY[0x24BDC62B0]();
}

uint64_t sub_23A19B3A4()
{
  return MEMORY[0x24BDC62C8]();
}

uint64_t sub_23A19B3B0()
{
  return MEMORY[0x24BDC62E0]();
}

uint64_t sub_23A19B3BC()
{
  return MEMORY[0x24BDC62F0]();
}

uint64_t sub_23A19B3C8()
{
  return MEMORY[0x24BDC63A0]();
}

uint64_t sub_23A19B3D4()
{
  return MEMORY[0x24BDC63B0]();
}

uint64_t sub_23A19B3E0()
{
  return MEMORY[0x24BDC63E0]();
}

uint64_t sub_23A19B3EC()
{
  return MEMORY[0x24BDC6520]();
}

uint64_t sub_23A19B3F8()
{
  return MEMORY[0x24BDC6580]();
}

uint64_t sub_23A19B404()
{
  return MEMORY[0x24BDC65A8]();
}

uint64_t sub_23A19B410()
{
  return MEMORY[0x24BDC65B8]();
}

uint64_t sub_23A19B41C()
{
  return MEMORY[0x24BDC65D0]();
}

uint64_t sub_23A19B428()
{
  return MEMORY[0x24BDC6620]();
}

uint64_t sub_23A19B434()
{
  return MEMORY[0x24BDC6628]();
}

uint64_t sub_23A19B440()
{
  return MEMORY[0x24BDC6638]();
}

uint64_t sub_23A19B44C()
{
  return MEMORY[0x24BDC66C8]();
}

uint64_t sub_23A19B458()
{
  return MEMORY[0x24BDC66E0]();
}

uint64_t sub_23A19B464()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_23A19B470()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23A19B47C()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23A19B488()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_23A19B494()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23A19B4A0()
{
  return MEMORY[0x24BEE75B8]();
}

uint64_t sub_23A19B4AC()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23A19B4B8()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23A19B4C4()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_23A19B4D0()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23A19B4DC()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23A19B4E8()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_23A19B4F4()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_23A19B500()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_23A19B50C()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_23A19B518()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_23A19B524()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_23A19B530()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23A19B53C()
{
  return MEMORY[0x24BEE0A80]();
}

uint64_t sub_23A19B548()
{
  return MEMORY[0x24BEE0A88]();
}

uint64_t sub_23A19B554()
{
  return MEMORY[0x24BEE0AD0]();
}

uint64_t sub_23A19B560()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_23A19B56C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23A19B578()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23A19B584()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_23A19B590()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23A19B59C()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_23A19B5A8()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_23A19B5B4()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23A19B5C0()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_23A19B5CC()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_23A19B5D8()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_23A19B5E4()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_23A19B5F0()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_23A19B5FC()
{
  return MEMORY[0x24BEE0DC8]();
}

uint64_t sub_23A19B608()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_23A19B614()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23A19B620()
{
  return MEMORY[0x24BEE0E00]();
}

uint64_t sub_23A19B62C()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23A19B638()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23A19B644()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23A19B650()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23A19B65C()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23A19B668()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23A19B674()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_23A19B680()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_23A19B68C()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23A19B698()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23A19B6A4()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23A19B6B0()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23A19B6BC()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23A19B6C8()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_23A19B6D4()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_23A19B6E0()
{
  return MEMORY[0x24BEE56C0]();
}

uint64_t sub_23A19B6EC()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_23A19B6F8()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_23A19B704()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_23A19B710()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23A19B71C()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_23A19B728()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23A19B734()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23A19B740()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_23A19B74C()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_23A19B758()
{
  return MEMORY[0x24BDD0630]();
}

uint64_t sub_23A19B764()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23A19B770()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23A19B77C()
{
  return MEMORY[0x24BEE2500]();
}

uint64_t sub_23A19B788()
{
  return MEMORY[0x24BEE2508]();
}

uint64_t sub_23A19B794()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23A19B7A0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23A19B7AC()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23A19B7B8()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_23A19B7C4()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23A19B7D0()
{
  return MEMORY[0x24BEE2840]();
}

uint64_t sub_23A19B7DC()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23A19B7E8()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23A19B7F4()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23A19B800()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23A19B80C()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23A19B818()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23A19B824()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23A19B830()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23A19B83C()
{
  return MEMORY[0x24BEE30E0]();
}

uint64_t sub_23A19B848()
{
  return MEMORY[0x24BEE30E8]();
}

uint64_t sub_23A19B854()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_23A19B860()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23A19B86C()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_23A19B878()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23A19B884()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23A19B890()
{
  return MEMORY[0x24BEE33A8]();
}

uint64_t sub_23A19B89C()
{
  return MEMORY[0x24BEE33B8]();
}

uint64_t sub_23A19B8A8()
{
  return MEMORY[0x24BEE33C0]();
}

uint64_t sub_23A19B8B4()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_23A19B8C0()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23A19B8CC()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23A19B8D8()
{
  return MEMORY[0x24BEE34F8]();
}

uint64_t sub_23A19B8E4()
{
  return MEMORY[0x24BEE3508]();
}

uint64_t sub_23A19B8F0()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_23A19B8FC()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23A19B908()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23A19B914()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_23A19B920()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23A19B92C()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_23A19B938()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23A19B944()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23A19B950()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23A19B95C()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23A19B968()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_23A19B974()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_23A19B980()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23A19B98C()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23A19B998()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_23A19B9A4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23A19B9B0()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_23A19B9BC()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23A19B9C8()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23A19B9D4()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23A19B9E0()
{
  return MEMORY[0x24BEE4A10]();
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x24BDBC298](cf);
}

uint64_t SecGenerateSelfSignedCertificate()
{
  return MEMORY[0x24BDE8A40]();
}

OSStatus SecIdentityCopyPrivateKey(SecIdentityRef identityRef, SecKeyRef *privateKeyRef)
{
  return MEMORY[0x24BDE8A50](identityRef, privateKeyRef);
}

uint64_t SecIdentityCreate()
{
  return MEMORY[0x24BDE8A58]();
}

CFDataRef SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x24BDE8AA8](key, error);
}

SecKeyRef SecKeyCopyPublicKey(SecKeyRef key)
{
  return (SecKeyRef)MEMORY[0x24BDE8AC8](key);
}

uint64_t SecKeyCopySubjectPublicKeyInfo()
{
  return MEMORY[0x24BDE8AD0]();
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x24BDE8B30](parameters, error);
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x24BDE8B40](keyData, attributes, error);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x24BDE8CC8](rnd, count, bytes);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x24BDAEEA8](__b, *(_QWORD *)&__c, __len);
}

uint64_t nw_array_append()
{
  return MEMORY[0x24BDE0A10]();
}

uint64_t nw_array_create()
{
  return MEMORY[0x24BDE0A38]();
}

nw_protocol_metadata_t nw_content_context_copy_protocol_metadata(nw_content_context_t context, nw_protocol_definition_t protocol)
{
  return (nw_protocol_metadata_t)MEMORY[0x24BDE0D00](context, protocol);
}

nw_content_context_t nw_content_context_create(const char *context_identifier)
{
  return (nw_content_context_t)MEMORY[0x24BDE0D10](context_identifier);
}

void nw_content_context_set_is_final(nw_content_context_t context, BOOL is_final)
{
  MEMORY[0x24BDE0D38](context, is_final);
}

void nw_content_context_set_metadata_for_protocol(nw_content_context_t context, nw_protocol_metadata_t protocol_metadata)
{
  MEMORY[0x24BDE0D40](context, protocol_metadata);
}

nw_endpoint_t nw_endpoint_create_bonjour_service(const char *name, const char *type, const char *domain)
{
  return (nw_endpoint_t)MEMORY[0x24BDE0E78](name, type, domain);
}

uint64_t nw_http3_create_options()
{
  return MEMORY[0x24BDE11C8]();
}

uint64_t nw_http_create_metadata_for_request()
{
  return MEMORY[0x24BDE11E0]();
}

uint64_t nw_http_create_metadata_for_response()
{
  return MEMORY[0x24BDE11F0]();
}

uint64_t nw_http_fields_append()
{
  return MEMORY[0x24BDE1240]();
}

uint64_t nw_http_fields_copy_value_by_name()
{
  return MEMORY[0x24BDE1248]();
}

uint64_t nw_http_fields_enumerate()
{
  return MEMORY[0x24BDE1260]();
}

uint64_t nw_http_metadata_copy_request()
{
  return MEMORY[0x24BDE1280]();
}

uint64_t nw_http_metadata_copy_response()
{
  return MEMORY[0x24BDE1288]();
}

uint64_t nw_http_request_access_method()
{
  return MEMORY[0x24BDE12B0]();
}

uint64_t nw_http_request_access_path()
{
  return MEMORY[0x24BDE12B8]();
}

uint64_t nw_http_request_create()
{
  return MEMORY[0x24BDE12D8]();
}

uint64_t nw_http_response_copy()
{
  return MEMORY[0x24BDE1318]();
}

uint64_t nw_http_response_copy_header_fields()
{
  return MEMORY[0x24BDE1328]();
}

uint64_t nw_http_response_create_well_known()
{
  return MEMORY[0x24BDE1338]();
}

uint64_t nw_http_response_get_status_code()
{
  return MEMORY[0x24BDE1348]();
}

uint64_t nw_listener_set_advertise_endpoints()
{
  return MEMORY[0x24BDE1470]();
}

nw_protocol_stack_t nw_parameters_copy_default_protocol_stack(nw_parameters_t parameters)
{
  return (nw_protocol_stack_t)MEMORY[0x24BDE1528](parameters);
}

nw_parameters_t nw_parameters_create_quic(nw_parameters_configure_protocol_block_t configure_quic)
{
  return (nw_parameters_t)MEMORY[0x24BDE1578](configure_quic);
}

uint64_t nw_parameters_set_attach_protocol_listener()
{
  return MEMORY[0x24BDE1638]();
}

uint64_t nw_protocol_copy_http_definition()
{
  return MEMORY[0x24BDE1B40]();
}

void nw_protocol_stack_prepend_application_protocol(nw_protocol_stack_t stack, nw_protocol_options_t protocol)
{
  MEMORY[0x24BDE2040](stack, protocol);
}

sec_protocol_options_t nw_quic_copy_sec_protocol_options(nw_protocol_options_t options)
{
  return (sec_protocol_options_t)MEMORY[0x24BDE22D0](options);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

SecIdentityRef sec_identity_copy_ref(sec_identity_t identity)
{
  return (SecIdentityRef)MEMORY[0x24BDE9578](identity);
}

sec_identity_t sec_identity_create(SecIdentityRef identity)
{
  return (sec_identity_t)MEMORY[0x24BDE9580](identity);
}

void sec_protocol_options_add_pre_shared_key(sec_protocol_options_t options, dispatch_data_t psk, dispatch_data_t psk_identity)
{
  MEMORY[0x24BDE95D0](options, psk, psk_identity);
}

void sec_protocol_options_add_tls_application_protocol(sec_protocol_options_t options, const char *application_protocol)
{
  MEMORY[0x24BDE95D8](options, application_protocol);
}

void sec_protocol_options_append_tls_ciphersuite(sec_protocol_options_t options, tls_ciphersuite_t ciphersuite)
{
  MEMORY[0x24BDE95E0](options, ciphersuite);
}

uint64_t sec_protocol_options_clear_tls_application_protocols()
{
  return MEMORY[0x24BDE95F0]();
}

uint64_t sec_protocol_options_set_client_raw_public_key_certificates()
{
  return MEMORY[0x24BDE9610]();
}

void sec_protocol_options_set_local_identity(sec_protocol_options_t options, sec_identity_t identity)
{
  MEMORY[0x24BDE9620](options, identity);
}

void sec_protocol_options_set_peer_authentication_required(sec_protocol_options_t options, BOOL peer_authentication_required)
{
  MEMORY[0x24BDE9640](options, peer_authentication_required);
}

uint64_t sec_protocol_options_set_server_raw_public_key_certificates()
{
  return MEMORY[0x24BDE9658]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x24BEE4DD8]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

