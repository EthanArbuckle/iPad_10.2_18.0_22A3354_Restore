uint64_t sub_239157384(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  v6 = *(_DWORD *)(result + 72);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 4) != 0)
LABEL_4:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
LABEL_5:
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 40);
    if (!v9)
    {
      sub_239131728();
      v9 = *(_QWORD *)(qword_2542CF380 + 40);
    }
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
    v8 = *(_DWORD *)(v5 + 72);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0)
        return result;
      goto LABEL_21;
    }
  }
  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_10;
  }
  v10 = *(_QWORD *)(v5 + 48);
  if (!v10)
  {
    sub_239131728();
    v10 = *(_QWORD *)(qword_2542CF380 + 48);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x40) != 0)
  {
LABEL_21:
    v11 = *(_QWORD *)(v5 + 56);
    if (!v11)
    {
      sub_239131728();
      v11 = *(_QWORD *)(qword_2542CF380 + 56);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  }
  return result;
}

uint64_t sub_2391574CC(uint64_t a1)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  uint64_t v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;

  LOBYTE(v2) = *(_BYTE *)(a1 + 72);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_44;
  }
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
    else if (v4 >= 0x80)
    {
      v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      v2 = *(_DWORD *)(a1 + 72);
      v3 = v5 + 1;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 72) & 2) == 0)
      goto LABEL_17;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    v2 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v7 = 2;
  }
  v3 += v7;
LABEL_17:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      v2 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v9 = 2;
    }
    v3 += v9;
    if ((v2 & 0x10) == 0)
    {
LABEL_19:
      if ((v2 & 0x20) == 0)
        goto LABEL_20;
      goto LABEL_32;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_19;
  }
  v10 = *(_QWORD *)(a1 + 40);
  if (!v10)
  {
    sub_239131728();
    v10 = *(_QWORD *)(qword_2542CF380 + 40);
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391550C0(v10);
  v12 = (int)v11;
  if (v11 >= 0x80)
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
  else
    v13 = 1;
  v3 += v12 + v13 + 1;
  v2 = *(_DWORD *)(a1 + 72);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_44;
    goto LABEL_38;
  }
LABEL_32:
  v14 = *(_QWORD *)(a1 + 48);
  if (!v14)
  {
    sub_239131728();
    v14 = *(_QWORD *)(qword_2542CF380 + 48);
  }
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239155F38(v14);
  v16 = (int)v15;
  if (v15 >= 0x80)
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
  else
    v17 = 1;
  v3 += v16 + v17 + 1;
  if ((*(_DWORD *)(a1 + 72) & 0x40) != 0)
  {
LABEL_38:
    v18 = *(_QWORD *)(a1 + 56);
    if (!v18)
    {
      sub_239131728();
      v18 = *(_QWORD *)(qword_2542CF380 + 56);
    }
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391565E8(v18);
    v20 = (int)v19;
    if (v19 >= 0x80)
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
    else
      v21 = 1;
    v3 += v20 + v21 + 1;
  }
LABEL_44:
  v22 = *(_DWORD *)(a1 + 24);
  v23 = (v22 + v3);
  if (v22 >= 1)
  {
    v24 = 0;
    do
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915478C(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v24));
      v26 = (int)v25;
      if (v25 >= 0x80)
        v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      else
        v27 = 1;
      v23 = (v26 + v23 + v27);
      ++v24;
    }
    while (v24 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 68) = v23;
  return v23;
}

void sub_2391576E0(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71D60, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23915674C(a1, (uint64_t)lpsrc);
}

uint64_t sub_239157748()
{
  return 1;
}

_QWORD *sub_239157750@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.GanssAidRequestPerGanss");
}

void sub_239157760(_DWORD *a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _BYTE v19[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_2391087A4(a1 + 4, a1[6] + v4);
    memcpy((void *)(*((_QWORD *)a1 + 2) + 4 * (int)a1[6]), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    a1[6] += *(_DWORD *)(a2 + 24);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 10));
  if (*(int *)(a2 + 48) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * v5);
      v7 = a1[13];
      v8 = (int)a1[12];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[14])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 10));
          v7 = a1[13];
        }
        a1[13] = v7 + 1;
        v10 = operator new();
        *(_OWORD *)(v10 + 40) = 0u;
        *(_OWORD *)(v10 + 56) = 0u;
        *(_DWORD *)(v10 + 72) = 0;
        *(_QWORD *)v10 = &off_250A70948;
        *(_QWORD *)(v10 + 8) = 0;
        *(_QWORD *)(v10 + 16) = 0;
        *(_QWORD *)(v10 + 24) = 0;
        *(_DWORD *)(v10 + 32) = 0;
        v11 = *((_QWORD *)a1 + 5);
        v12 = (int)a1[12];
        a1[12] = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)a1 + 5);
        a1[12] = v8 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v8);
      }
      sub_23915674C(v10, v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 48));
  }
  LOBYTE(v13) = *(_BYTE *)(a2 + 72);
  if ((_BYTE)v13)
  {
    if ((*(_BYTE *)(a2 + 72) & 1) != 0)
    {
      v15 = *(_DWORD *)(a2 + 8);
      a1[18] |= 1u;
      a1[2] = v15;
      v13 = *(_DWORD *)(a2 + 72);
      if ((v13 & 2) == 0)
      {
LABEL_16:
        if ((v13 & 8) == 0)
          goto LABEL_17;
        goto LABEL_23;
      }
    }
    else if ((*(_BYTE *)(a2 + 72) & 2) == 0)
    {
      goto LABEL_16;
    }
    v16 = *(_DWORD *)(a2 + 12);
    a1[18] |= 2u;
    a1[3] = v16;
    v13 = *(_DWORD *)(a2 + 72);
    if ((v13 & 8) == 0)
    {
LABEL_17:
      if ((v13 & 0x10) == 0)
        goto LABEL_18;
      goto LABEL_24;
    }
LABEL_23:
    v17 = *(_DWORD *)(a2 + 32);
    a1[18] |= 8u;
    a1[8] = v17;
    v13 = *(_DWORD *)(a2 + 72);
    if ((v13 & 0x10) == 0)
    {
LABEL_18:
      if ((v13 & 0x20) == 0)
        return;
      goto LABEL_19;
    }
LABEL_24:
    v18 = *(_DWORD *)(a2 + 36);
    a1[18] |= 0x10u;
    a1[9] = v18;
    if ((*(_DWORD *)(a2 + 72) & 0x20) == 0)
      return;
LABEL_19:
    v14 = *(_DWORD *)(a2 + 64);
    a1[18] |= 0x20u;
    a1[16] = v14;
  }
}

void sub_2391579A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391579BC(uint64_t a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_250A709C0;
  sub_239131728();
  v2 = *(_DWORD *)(a1 + 52);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *(_DWORD *)(a1 + 52);
      }
    }
  }
  v5 = *(_QWORD *)(a1 + 40);
  if (v5)
    MEMORY[0x23B838820](v5, 0x80C80B8603338);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
    MEMORY[0x23B838820](v6, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_239157A64(uint64_t a1)
{
  sub_2391579BC(a1);
  JUMPOUT(0x23B838844);
}

double sub_239157A88()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A709C0;
  *(_QWORD *)(v0 + 64) = 0;
  *(_DWORD *)(v0 + 72) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_DWORD *)(v0 + 56) = 0;
  return result;
}

uint64_t sub_239157AD8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(_BYTE *)(result + 72))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 32) = 0;
    *(_DWORD *)(result + 64) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  if (*(int *)(result + 48) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t sub_239157B4C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  _DWORD *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  unsigned __int8 *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t result;
  unsigned __int8 *v21;
  int v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int v36;
  int v37;
  int v38;
  BOOL v39;
  int v40;
  _BYTE *v41;
  unsigned int *v42;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v43;
  unsigned int v44;
  unsigned int v45;

  v4 = a1 + 4;
  v5 = a1 + 3;
  v6 = a1 + 8;
  v7 = a1 + 9;
  v8 = a1 + 16;
  v42 = a1 + 2;
  v43 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 10);
LABEL_2:
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v42 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        a1[18] |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_35;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v15 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_35:
        if ((unint64_t)v15 >= v12 || (char)*v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v21 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v15;
          v21 = v15 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        a1[18] |= 2u;
        if ((unint64_t)v21 < v12)
        {
          v22 = *v21;
          goto LABEL_53;
        }
        continue;
      case 3u:
        v11 = TagFallback & 7;
        if (v11 == 2)
        {
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline();
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v21 = (unsigned __int8 *)*((_QWORD *)this + 1);
            v12 = *((_QWORD *)this + 2);
            if ((unint64_t)v21 >= v12)
              goto LABEL_2;
            v22 = *v21;
            if (v22 == 32)
              break;
LABEL_53:
            if (v22 != 24)
              goto LABEL_2;
            v16 = (char *)(v21 + 1);
            *((_QWORD *)this + 1) = v16;
LABEL_42:
            v44 = 0;
            if ((unint64_t)v16 >= v12 || *v16 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
              if (!(_DWORD)result)
                return result;
              v23 = v44;
            }
            else
            {
              v23 = *v16;
              *((_QWORD *)this + 1) = v16 + 1;
            }
            if (v23 <= 6)
            {
              v24 = a1[6];
              if (v24 == a1[7])
              {
                sub_2391087A4(v4, v24 + 1);
                v24 = a1[6];
              }
              v25 = *((_QWORD *)a1 + 2);
              a1[6] = v24 + 1;
              *(_DWORD *)(v25 + 4 * v24) = v23;
            }
          }
          v17 = (char *)(v21 + 1);
          *((_QWORD *)this + 1) = v17;
LABEL_56:
          if ((unint64_t)v17 >= v12 || *v17 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
            if (!(_DWORD)result)
              return result;
            v26 = (_BYTE *)*((_QWORD *)this + 1);
            v12 = *((_QWORD *)this + 2);
          }
          else
          {
            *v6 = *v17;
            v26 = v17 + 1;
            *((_QWORD *)this + 1) = v26;
          }
          a1[18] |= 8u;
          if ((unint64_t)v26 < v12 && *v26 == 40)
          {
            v18 = v26 + 1;
            *((_QWORD *)this + 1) = v18;
LABEL_64:
            if ((unint64_t)v18 >= v12 || *v18 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
              if (!(_DWORD)result)
                return result;
              v27 = (_BYTE *)*((_QWORD *)this + 1);
              v12 = *((_QWORD *)this + 2);
            }
            else
            {
              *v7 = *v18;
              v27 = v18 + 1;
              *((_QWORD *)this + 1) = v27;
            }
            a1[18] |= 0x10u;
            if ((unint64_t)v27 < v12 && *v27 == 48)
            {
              v19 = v27 + 1;
              *((_QWORD *)this + 1) = v19;
LABEL_72:
              if ((unint64_t)v19 >= v12 || *v19 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                if (!(_DWORD)result)
                  return result;
                v28 = (_BYTE *)*((_QWORD *)this + 1);
                v12 = *((_QWORD *)this + 2);
              }
              else
              {
                *v8 = *v19;
                v28 = v19 + 1;
                *((_QWORD *)this + 1) = v28;
              }
              a1[18] |= 0x20u;
              if ((unint64_t)v28 < v12 && *v28 == 58)
              {
                do
                {
                  *((_QWORD *)this + 1) = v28 + 1;
LABEL_80:
                  v29 = a1[13];
                  v30 = (int)a1[12];
                  if ((int)v30 >= v29)
                  {
                    if (v29 == a1[14])
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v43);
                      v29 = a1[13];
                    }
                    a1[13] = v29 + 1;
                    v32 = operator new();
                    *(_OWORD *)(v32 + 40) = 0u;
                    *(_OWORD *)(v32 + 56) = 0u;
                    *(_DWORD *)(v32 + 72) = 0;
                    *(_QWORD *)v32 = &off_250A70948;
                    *(_QWORD *)(v32 + 8) = 0;
                    *(_QWORD *)(v32 + 16) = 0;
                    *(_QWORD *)(v32 + 24) = 0;
                    *(_DWORD *)(v32 + 32) = 0;
                    v33 = *((_QWORD *)a1 + 5);
                    v34 = (int)a1[12];
                    a1[12] = v34 + 1;
                    *(_QWORD *)(v33 + 8 * v34) = v32;
                  }
                  else
                  {
                    v31 = *((_QWORD *)a1 + 5);
                    a1[12] = v30 + 1;
                    v32 = *(_QWORD *)(v31 + 8 * v30);
                  }
                  v45 = 0;
                  v35 = (char *)*((_QWORD *)this + 1);
                  if ((unint64_t)v35 >= *((_QWORD *)this + 2) || *v35 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0;
                  }
                  else
                  {
                    v45 = *v35;
                    *((_QWORD *)this + 1) = v35 + 1;
                  }
                  v36 = *((_DWORD *)this + 14);
                  v37 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v36 + 1;
                  if (v36 >= v37)
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
                  if (!sub_239156CA8(v32, this) || !*((_BYTE *)this + 36))
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
                  v38 = *((_DWORD *)this + 14);
                  v39 = __OFSUB__(v38, 1);
                  v40 = v38 - 1;
                  if (v40 < 0 == v39)
                    *((_DWORD *)this + 14) = v40;
                  v28 = (_BYTE *)*((_QWORD *)this + 1);
                  v41 = (_BYTE *)*((_QWORD *)this + 2);
                }
                while (v28 < v41 && *v28 == 58);
                if (v28 == v41 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  result = 1;
                  *((_BYTE *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v16 = (char *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          goto LABEL_42;
        }
LABEL_25:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v17 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_56;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v18 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_64;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v19 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_72;
      case 7u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_25;
        goto LABEL_80;
      default:
        v11 = TagFallback & 7;
        goto LABEL_25;
    }
  }
}

uint64_t sub_2391580C4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 72);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
  }
  if ((v6 & 2) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(*(_QWORD *)(v5 + 16) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 8) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
    v8 = *(_DWORD *)(v5 + 72);
    if ((v8 & 0x10) == 0)
    {
LABEL_10:
      if ((v8 & 0x20) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
  }
  else if ((v8 & 0x10) == 0)
  {
    goto LABEL_10;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x20) != 0)
LABEL_11:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
LABEL_12:
  if (*(int *)(v5 + 48) >= 1)
  {
    v9 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(*(_QWORD *)(v5 + 40) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 48));
  }
  return result;
}

uint64_t sub_2391581D8(uint64_t a1)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;

  LOBYTE(v2) = *(_BYTE *)(a1 + 72);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_30;
  }
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 72);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 72) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if ((v2 & 8) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      v8 = 2;
    }
    v3 += v8;
    if ((v2 & 0x10) == 0)
    {
LABEL_16:
      if ((v2 & 0x20) == 0)
        goto LABEL_30;
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    v2 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v10 = 2;
  }
  v3 += v10;
  if ((v2 & 0x20) != 0)
  {
LABEL_26:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v11 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    else
      v12 = 2;
    v3 += v12;
  }
LABEL_30:
  v13 = *(_DWORD *)(a1 + 24);
  if (v13 < 1)
  {
    v15 = 0;
  }
  else
  {
    v14 = 0;
    v15 = 0;
    do
    {
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 16)
                                                                                             + 4 * v14);
      if ((v16 & 0x80000000) != 0)
      {
        v17 = 10;
      }
      else if (v16 >= 0x80)
      {
        v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
        v13 = *(_DWORD *)(a1 + 24);
      }
      else
      {
        v17 = 1;
      }
      v15 += v17;
      ++v14;
    }
    while (v14 < v13);
  }
  v18 = *(_DWORD *)(a1 + 48);
  v19 = (v15 + v18 + v3 + v13);
  if (v18 >= 1)
  {
    v20 = 0;
    do
    {
      v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391574CC(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8 * v20));
      v22 = (int)v21;
      if (v21 >= 0x80)
        v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
      else
        v23 = 1;
      v19 = (v22 + v19 + v23);
      ++v20;
    }
    while (v20 < *(int *)(a1 + 48));
  }
  *(_DWORD *)(a1 + 68) = v19;
  return v19;
}

void sub_2391583A4(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71D78, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239157760(a1, (uint64_t)lpsrc);
}

uint64_t sub_23915840C()
{
  return 1;
}

_QWORD *sub_239158414@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.GanssAssistanceRequest");
}

void sub_239158424(uint64_t a1, uint64_t a2)
{
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v4)
    return;
  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 9)
      __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 22345, "::CoreGem::proto::gnss::Emergency::ErrorCodes_IsValid(value)");
    *(_DWORD *)(a1 + 44) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    v4 = *(_DWORD *)(a2 + 44);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0)
      goto LABEL_9;
LABEL_13:
    *(_DWORD *)(a1 + 44) |= 4u;
    v7 = *(_QWORD *)(a1 + 16);
    if (!v7)
    {
      v7 = operator new();
      *(_QWORD *)(v7 + 8) = 0;
      *(_QWORD *)(v7 + 16) = 0;
      *(_QWORD *)v7 = &off_250A6F430;
      *(_DWORD *)(v7 + 24) = 0;
      *(_QWORD *)(a1 + 16) = v7;
    }
    v8 = *(_QWORD *)(a2 + 16);
    if (!v8)
    {
      sub_239131728();
      v8 = *(_QWORD *)(qword_2542CF6F0 + 16);
    }
    sub_23913D808((_DWORD *)v7, v8);
    v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0)
        return;
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  v6 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_DWORD *)(a1 + 12) = v6;
  v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) != 0)
    goto LABEL_13;
LABEL_9:
  if ((v4 & 8) == 0)
    goto LABEL_10;
LABEL_18:
  *(_DWORD *)(a1 + 44) |= 8u;
  v9 = *(_QWORD *)(a1 + 24);
  if (!v9)
  {
    v9 = operator new();
    *(_QWORD *)v9 = &off_250A70678;
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *(_OWORD *)(v9 + 40) = 0u;
    *(_OWORD *)(v9 + 52) = 0u;
    *(_QWORD *)(a1 + 24) = v9;
  }
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
  {
    sub_239131728();
    v10 = *(_QWORD *)(qword_2542CF6F0 + 24);
  }
  sub_23915378C((_DWORD *)v9, v10);
  if ((*(_DWORD *)(a2 + 44) & 0x10) != 0)
  {
LABEL_23:
    *(_DWORD *)(a1 + 44) |= 0x10u;
    v11 = *(_QWORD *)(a1 + 32);
    if (!v11)
    {
      v11 = operator new();
      *(_QWORD *)v11 = &off_250A709C0;
      *(_QWORD *)(v11 + 64) = 0;
      *(_DWORD *)(v11 + 72) = 0;
      *(_OWORD *)(v11 + 8) = 0u;
      *(_OWORD *)(v11 + 24) = 0u;
      *(_OWORD *)(v11 + 40) = 0u;
      *(_DWORD *)(v11 + 56) = 0;
      *(_QWORD *)(a1 + 32) = v11;
    }
    v12 = *(_QWORD *)(a2 + 32);
    if (!v12)
    {
      sub_239131728();
      v12 = *(_QWORD *)(qword_2542CF6F0 + 32);
    }
    sub_239157760((_DWORD *)v11, v12);
  }
}

void sub_23915867C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239158694(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = &off_250A70A38;
  sub_239131728();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF6F0 != a1)
  {
    v2 = *((_QWORD *)a1 + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)a1 + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)a1 + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239158718(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239158694(a1);
  JUMPOUT(0x23B838844);
}

double sub_23915873C()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A70A38;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_QWORD *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_239158780(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 44);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v2 = *(_DWORD *)(result + 44);
      }
    }
    if ((v2 & 8) != 0)
    {
      v4 = *(_QWORD *)(result + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 64))
        {
          *(_DWORD *)(v4 + 56) = 0;
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        *(_DWORD *)(v4 + 48) = 0;
        *(_DWORD *)(v4 + 64) = 0;
        v2 = *(_DWORD *)(result + 44);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      result = *(_QWORD *)(result + 32);
      if (result)
        result = sub_239157AD8(result);
    }
  }
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_23915880C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  unint64_t v10;
  char *v11;
  int v12;
  uint64_t result;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  _BYTE *v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;

  v4 = (unsigned int *)(a1 + 12);
  while (1)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 < *((_QWORD *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v37 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37);
          if (!(_DWORD)result)
            return result;
          v9 = v37;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        if (v9 <= 8)
        {
          *(_DWORD *)(a1 + 44) |= 1u;
          *(_DWORD *)(a1 + 8) = v9;
        }
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 < v10 && *v14 == 16)
        {
          v11 = v14 + 1;
          *((_QWORD *)this + 1) = v11;
          goto LABEL_30;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_30:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v11;
          v15 = v11 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        v12 = *(_DWORD *)(a1 + 44) | 2;
        *(_DWORD *)(a1 + 44) = v12;
        if ((unint64_t)v15 >= v10 || *v15 != 26)
          continue;
        *((_QWORD *)this + 1) = v15 + 1;
LABEL_38:
        *(_DWORD *)(a1 + 44) = v12 | 4;
        v16 = *(_QWORD *)(a1 + 16);
        if (!v16)
        {
          v16 = operator new();
          *(_QWORD *)(v16 + 8) = 0;
          *(_QWORD *)(v16 + 16) = 0;
          *(_QWORD *)v16 = &off_250A6F430;
          *(_DWORD *)(v16 + 24) = 0;
          *(_QWORD *)(a1 + 16) = v16;
        }
        v37 = 0;
        v17 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0;
        }
        else
        {
          v37 = *v17;
          *((_QWORD *)this + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)this + 14);
        v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23913D9E4((_DWORD *)v16, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v20 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v20, 1);
        v22 = v20 - 1;
        if (v22 < 0 == v21)
          *((_DWORD *)this + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v23 >= *((_QWORD *)this + 2) || *v23 != 34)
          continue;
        *((_QWORD *)this + 1) = v23 + 1;
LABEL_52:
        *(_DWORD *)(a1 + 44) |= 8u;
        v24 = *(_QWORD *)(a1 + 24);
        if (!v24)
        {
          v24 = operator new();
          *(_QWORD *)v24 = &off_250A70678;
          *(_OWORD *)(v24 + 8) = 0u;
          *(_OWORD *)(v24 + 24) = 0u;
          *(_OWORD *)(v24 + 40) = 0u;
          *(_OWORD *)(v24 + 52) = 0u;
          *(_QWORD *)(a1 + 24) = v24;
        }
        v37 = 0;
        v25 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v25 >= *((_QWORD *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0;
        }
        else
        {
          v37 = *v25;
          *((_QWORD *)this + 1) = v25 + 1;
        }
        v26 = *((_DWORD *)this + 14);
        v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239153A38((unsigned int *)v24, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v28 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v28, 1);
        v29 = v28 - 1;
        if (v29 < 0 == v21)
          *((_DWORD *)this + 14) = v29;
        v30 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v30 >= *((_QWORD *)this + 2) || *v30 != 42)
          continue;
        *((_QWORD *)this + 1) = v30 + 1;
LABEL_66:
        *(_DWORD *)(a1 + 44) |= 0x10u;
        v31 = *(_QWORD *)(a1 + 32);
        if (!v31)
        {
          v31 = operator new();
          *(_QWORD *)v31 = &off_250A709C0;
          *(_QWORD *)(v31 + 64) = 0;
          *(_DWORD *)(v31 + 72) = 0;
          *(_OWORD *)(v31 + 8) = 0u;
          *(_OWORD *)(v31 + 24) = 0u;
          *(_OWORD *)(v31 + 40) = 0u;
          *(_DWORD *)(v31 + 56) = 0;
          *(_QWORD *)(a1 + 32) = v31;
        }
        v37 = 0;
        v32 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0;
        }
        else
        {
          v37 = *v32;
          *((_QWORD *)this + 1) = v32 + 1;
        }
        v33 = *((_DWORD *)this + 14);
        v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239157B4C((_DWORD *)v31, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v35 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v35, 1);
        v36 = v35 - 1;
        if (v36 < 0 == v21)
          *((_DWORD *)this + 14) = v36;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_20;
        v12 = *(_DWORD *)(a1 + 44);
        goto LABEL_38;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_52;
        goto LABEL_20;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_20;
        goto LABEL_66;
      default:
        v7 = TagFallback & 7;
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_239158D2C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_9:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
    sub_239131728();
    v7 = *(_QWORD *)(qword_2542CF6F0 + 16);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    goto LABEL_15;
  }
LABEL_12:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
  {
    sub_239131728();
    v8 = *(_QWORD *)(qword_2542CF6F0 + 24);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 0x10) != 0)
  {
LABEL_15:
    v9 = *(_QWORD *)(v5 + 32);
    if (!v9)
    {
      sub_239131728();
      v9 = *(_QWORD *)(qword_2542CF6F0 + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  }
  return result;
}

uint64_t sub_239158E18(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  uint64_t v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;

  LOBYTE(v2) = *(_BYTE *)(a1 + 44);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_39;
  }
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 44);
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 44) & 2) == 0)
      goto LABEL_17;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_17:
  if ((v2 & 4) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    if (!v7)
    {
      sub_239131728();
      v7 = *(_QWORD *)(qword_2542CF6F0 + 16);
    }
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23913DC94(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v3 = (v3 + v9 + v10 + 1);
    v2 = *(_DWORD *)(a1 + 44);
    if ((v2 & 8) == 0)
    {
LABEL_19:
      if ((v2 & 0x10) == 0)
        goto LABEL_39;
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(a1 + 24);
  if (!v11)
  {
    sub_239131728();
    v11 = *(_QWORD *)(qword_2542CF6F0 + 24);
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391541EC(v11);
  v13 = (int)v12;
  if (v12 >= 0x80)
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
  else
    v14 = 1;
  v3 = (v3 + v13 + v14 + 1);
  if ((*(_DWORD *)(a1 + 44) & 0x10) != 0)
  {
LABEL_33:
    v15 = *(_QWORD *)(a1 + 32);
    if (!v15)
    {
      sub_239131728();
      v15 = *(_QWORD *)(qword_2542CF6F0 + 32);
    }
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391581D8(v15);
    v17 = (int)v16;
    if (v16 >= 0x80)
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    else
      v18 = 1;
    v3 = (v3 + v17 + v18 + 1);
  }
LABEL_39:
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

void sub_239158FAC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71D90, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239158424(a1, (uint64_t)lpsrc);
}

uint64_t sub_239159014()
{
  return 1;
}

_QWORD *sub_23915901C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.AssistanceNeededReport");
}

void sub_23915902C(uint64_t a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = &off_250A70AB0;
  sub_239131728();
  v2 = *(_DWORD *)(a1 + 20);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *(_DWORD *)(a1 + 20);
      }
    }
  }
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    MEMORY[0x23B838820](v5, 0x80C80B8603338);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_2391590B8(uint64_t a1)
{
  sub_23915902C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_2391590DC()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A70AB0;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_239159120(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(_BYTE *)(result + 40))
    *(_DWORD *)(result + 32) = 0;
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_239159184(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  char *v9;
  unint64_t v10;
  _BYTE *v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  unsigned int v26;

  v4 = a1 + 8;
  v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v9 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v9 >= v10 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v9;
          v11 = v9 + 1;
          *((_QWORD *)this + 1) = v11;
        }
        a1[10] |= 1u;
        if ((unint64_t)v11 < v10 && *v11 == 18)
          goto LABEL_23;
      }
      if (TagFallback >> 3 != 2)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_16;
      while (1)
      {
        v13 = a1[5];
        v14 = (int)a1[4];
        if ((int)v14 >= v13)
        {
          if (v13 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
            v13 = a1[5];
          }
          a1[5] = v13 + 1;
          v16 = operator new();
          *(_QWORD *)v16 = &off_250A6F9D0;
          *(_OWORD *)(v16 + 8) = 0u;
          *(_OWORD *)(v16 + 24) = 0u;
          *(_OWORD *)(v16 + 40) = 0u;
          *(_QWORD *)(v16 + 56) = 0;
          v17 = *((_QWORD *)a1 + 1);
          v18 = (int)a1[4];
          a1[4] = v18 + 1;
          *(_QWORD *)(v17 + 8 * v18) = v16;
        }
        else
        {
          v15 = *((_QWORD *)a1 + 1);
          a1[4] = v14 + 1;
          v16 = *(_QWORD *)(v15 + 8 * v14);
        }
        v26 = 0;
        v19 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0;
        }
        else
        {
          v26 = *v19;
          *((_QWORD *)this + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)this + 14);
        v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391439D4(v16, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v22 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)this + 14) = v24;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        v25 = (_BYTE *)*((_QWORD *)this + 2);
        if (v11 >= v25 || *v11 != 18)
          break;
LABEL_23:
        *((_QWORD *)this + 1) = v11 + 1;
      }
      if (v11 == v25 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_239159438(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = result;
  if ((*(_BYTE *)(result + 40) & 1) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 32), (uint64_t)a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_2391594AC(uint64_t a1)
{
  int v2;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v3 >= 0x80)
      v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    else
      v2 = 2;
  }
  else
  {
    v2 = 0;
  }
  v4 = *(_DWORD *)(a1 + 16);
  v5 = (v4 + v2);
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239144218(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v6));
      v8 = (int)v7;
      if (v7 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      else
        v9 = 1;
      v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 36) = v5;
  return v5;
}

void sub_239159558(int *a1, int *lpsrc)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _BYTE v13[48];

  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71DA8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (lpsrc[4] >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*((_QWORD *)lpsrc + 1) + 8 * v4);
      v6 = a1[5];
      v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          v6 = a1[5];
        }
        a1[5] = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_250A6F9D0;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *(_QWORD *)(v9 + 56) = 0;
        v10 = *((_QWORD *)a1 + 1);
        v11 = a1[4];
        a1[4] = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)a1 + 1);
        a1[4] = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      sub_239143668(v9, v5);
      ++v4;
    }
    while (v4 < lpsrc[4]);
  }
  if ((lpsrc[10] & 1) != 0)
  {
    v12 = lpsrc[8];
    a1[10] |= 1u;
    a1[8] = v12;
  }
}

void sub_23915970C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239159724()
{
  return 1;
}

_QWORD *sub_23915972C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.EutranCellTime");
}

void sub_23915973C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A70B28;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239159774(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23915973C(a1);
  JUMPOUT(0x23B838844);
}

double sub_239159798()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A70B28;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_DWORD *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_2391597DC(uint64_t result)
{
  if (*(_BYTE *)(result + 40))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_2391597F8(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  unsigned __int8 *v28;
  uint64_t result;

  v4 = a1 + 2;
  v5 = a1 + 3;
  v6 = a1 + 4;
  v7 = a1 + 5;
  v8 = a1 + 6;
  v9 = a1 + 7;
  v10 = a1 + 8;
  while (2)
  {
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v4 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
LABEL_30:
          a1[10] |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)this + 1) = v17;
            goto LABEL_33;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          goto LABEL_30;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v17 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_33:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v17;
          v23 = v17 + 1;
          *((_QWORD *)this + 1) = v23;
        }
        a1[10] |= 2u;
        if ((unint64_t)v23 >= v14 || *v23 != 24)
          continue;
        v18 = v23 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_41:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v18;
          v24 = v18 + 1;
          *((_QWORD *)this + 1) = v24;
        }
        a1[10] |= 4u;
        if ((unint64_t)v24 >= v14 || *v24 != 32)
          continue;
        v19 = v24 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_49:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v19;
          v25 = v19 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        a1[10] |= 8u;
        if ((unint64_t)v25 >= v14 || *v25 != 40)
          continue;
        v20 = v25 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_57:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v26 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v20;
          v26 = v20 + 1;
          *((_QWORD *)this + 1) = v26;
        }
        a1[10] |= 0x10u;
        if ((unint64_t)v26 >= v14 || *v26 != 48)
          continue;
        v21 = v26 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_65:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v21;
          v27 = v21 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        a1[10] |= 0x20u;
        if ((unint64_t)v27 >= v14 || *v27 != 56)
          continue;
        v22 = v27 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_73:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v28 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v22;
          v28 = (unsigned __int8 *)(v22 + 1);
          *((_QWORD *)this + 1) = v28;
        }
        a1[10] |= 0x40u;
        if (v28 != (unsigned __int8 *)v14 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v18 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_41;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v19 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_49;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v20 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_57;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v21 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_65;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v22 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_73;
      default:
        v13 = TagFallback & 7;
LABEL_24:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *sub_239159C08(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = result;
  v6 = result[10];
  if ((v6 & 1) != 0)
  {
    result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[10];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[10];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return result;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  }
LABEL_14:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  if ((v5[10] & 0x40) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  return result;
}

uint64_t sub_239159CF0(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;

  LOBYTE(v2) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_40;
  }
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 40);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 40) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      v8 = 2;
    }
    v3 = (v8 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_28;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    v2 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v10 = 2;
  }
  v3 = (v10 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_32;
  }
LABEL_28:
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    v2 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v12 = 2;
  }
  v3 = (v12 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0)
      goto LABEL_40;
    goto LABEL_36;
  }
LABEL_32:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
    v2 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    v14 = 2;
  }
  v3 = (v14 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_36:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v15 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
    else
      v16 = 2;
    v3 = (v16 + v3);
  }
LABEL_40:
  *(_DWORD *)(a1 + 36) = v3;
  return v3;
}

void sub_239159E58(_DWORD *a1, _DWORD *lpsrc)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _BYTE v12[48];

  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71DC0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((_BYTE *)lpsrc + 40);
  if (!(_BYTE)v4)
    return;
  if ((lpsrc[10] & 1) != 0)
  {
    v6 = lpsrc[2];
    a1[10] |= 1u;
    a1[2] = v6;
    v4 = lpsrc[10];
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
  }
  else if ((lpsrc[10] & 2) == 0)
  {
    goto LABEL_7;
  }
  v7 = lpsrc[3];
  a1[10] |= 2u;
  a1[3] = v7;
  v4 = lpsrc[10];
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0)
      goto LABEL_9;
    goto LABEL_17;
  }
LABEL_16:
  v8 = lpsrc[4];
  a1[10] |= 4u;
  a1[4] = v8;
  v4 = lpsrc[10];
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0)
      goto LABEL_10;
LABEL_18:
    v10 = lpsrc[6];
    a1[10] |= 0x10u;
    a1[6] = v10;
    v4 = lpsrc[10];
    if ((v4 & 0x20) == 0)
    {
LABEL_11:
      if ((v4 & 0x40) == 0)
        return;
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_17:
  v9 = lpsrc[5];
  a1[10] |= 8u;
  a1[5] = v9;
  v4 = lpsrc[10];
  if ((v4 & 0x10) != 0)
    goto LABEL_18;
LABEL_10:
  if ((v4 & 0x20) == 0)
    goto LABEL_11;
LABEL_19:
  v11 = lpsrc[7];
  a1[10] |= 0x20u;
  a1[7] = v11;
  if ((lpsrc[10] & 0x40) != 0)
  {
LABEL_12:
    v5 = lpsrc[8];
    a1[10] |= 0x40u;
    a1[8] = v5;
  }
}

void sub_239159FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23915A000()
{
  return 1;
}

_QWORD *sub_23915A008@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.ClsGeranCellTime");
}

void sub_23915A018(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  _BYTE v7[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_23915A0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23915A0D8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A70BA0;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23915A110(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23915A0D8(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_23915A134()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_250A70BA0;
  return result;
}

uint64_t sub_23915A16C(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23915A180(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;

  v4 = a1 + 2;
  v5 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v11 = (char *)*((_QWORD *)this + 1);
      v9 = *((_QWORD *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
        if (!(_DWORD)result)
          return result;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
      }
      else
      {
        *v4 = *v11;
        v12 = v11 + 1;
        *((_QWORD *)this + 1) = v12;
      }
      a1[5] |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        v10 = v12 + 1;
        *((_QWORD *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v10;
          v13 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)this + 1) = v13;
        }
        a1[5] |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23915A31C(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_23915A374(uint64_t a1)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *(_BYTE *)(a1 + 20);
  if (v2)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v3 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_23915A400(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71DD8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23915A018(a1, (uint64_t)lpsrc);
}

uint64_t sub_23915A468()
{
  return 1;
}

_QWORD *sub_23915A470@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.GpsTowCdmaCellTime");
}

void sub_23915A480(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  _BYTE v8[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0)
      return;
LABEL_7:
    v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_23915A550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23915A568(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A70C18;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23915A5A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23915A568(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23915A5C4()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A70C18;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_23915A600(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_23915A618(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  char *v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  _BYTE *v16;
  unsigned __int8 *v17;
  uint64_t result;

  v4 = a1 + 2;
  v5 = a1 + 3;
  v6 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v13 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        a1[6] |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_27;
        }
      }
      if (v9 != 2)
        break;
      v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v15 = (char *)*((_QWORD *)this + 1);
      v11 = *((_QWORD *)this + 2);
LABEL_27:
      if ((unint64_t)v15 >= v11 || *v15 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v15;
        v16 = v15 + 1;
        *((_QWORD *)this + 1) = v16;
      }
      a1[6] |= 2u;
      if ((unint64_t)v16 < v11 && *v16 == 24)
      {
        v12 = v16 + 1;
        *((_QWORD *)this + 1) = v12;
LABEL_35:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v17 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v12;
          v17 = (unsigned __int8 *)(v12 + 1);
          *((_QWORD *)this + 1) = v17;
        }
        a1[6] |= 4u;
        if (v17 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

unsigned int *sub_23915A838(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = result;
  v6 = result[6];
  if ((v6 & 1) != 0)
  {
    result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[6];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  if ((v5[6] & 4) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  return result;
}

uint64_t sub_23915A8B0(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;

  LOBYTE(v2) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 24);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v7 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    else
      v8 = 2;
    v3 = (v8 + v3);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_23915A964(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71DF0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23915A480(a1, (uint64_t)lpsrc);
}

uint64_t sub_23915A9CC()
{
  return 1;
}

_QWORD *sub_23915A9D4@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.CtsEutranCellTime");
}

void sub_23915A9E4(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      v6 = *(_QWORD *)(a1 + 8);
      if (!v6)
      {
        v6 = operator new();
        *(_QWORD *)(v6 + 8) = 0;
        *(_QWORD *)(v6 + 16) = 0;
        *(_QWORD *)v6 = &off_250A70BA0;
        *(_QWORD *)(a1 + 8) = v6;
      }
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
      {
        sub_239131728();
        v7 = *(_QWORD *)(qword_2542CF3B0 + 8);
      }
      sub_23915A018((_DWORD *)v6, v7);
      v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 16) = v8;
    if ((*(_DWORD *)(a2 + 28) & 4) == 0)
      return;
LABEL_7:
    v5 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(_DWORD *)(a1 + 20) = v5;
  }
}

void sub_23915AB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23915AB24(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_250A70C90;
  sub_239131728();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF3B0 != a1)
  {
    v2 = *((_QWORD *)a1 + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23915AB80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23915AB24(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_23915ABA4()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_250A70C90;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_23915ABDC(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 28))
  {
    if ((*(_BYTE *)(result + 28) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_QWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_23915AC0C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  unsigned int v8;
  int v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t result;
  unsigned __int8 *v23;
  unsigned int v24;

  v4 = (unsigned int *)(a1 + 16);
  v5 = (unsigned int *)(a1 + 20);
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v8 = TagFallback >> 3;
      if (TagFallback >> 3 == 1)
        break;
      if (v8 == 2)
      {
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v14 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_33:
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v14;
          v21 = v14 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v21 < v10 && *v21 == 24)
        {
          v11 = v21 + 1;
          *((_QWORD *)this + 1) = v11;
LABEL_41:
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!(_DWORD)result)
              return result;
            v23 = (unsigned __int8 *)*((_QWORD *)this + 1);
            v10 = *((_QWORD *)this + 2);
          }
          else
          {
            *v5 = *v11;
            v23 = (unsigned __int8 *)(v11 + 1);
            *((_QWORD *)this + 1) = v23;
          }
          *(_DWORD *)(a1 + 28) |= 4u;
          if (v23 == (unsigned __int8 *)v10
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
        }
      }
      else
      {
        if (v8 == 3)
        {
          v9 = TagFallback & 7;
          if ((TagFallback & 7) == 0)
          {
            v11 = (char *)*((_QWORD *)this + 1);
            v10 = *((_QWORD *)this + 2);
            goto LABEL_41;
          }
        }
        else
        {
          v9 = TagFallback & 7;
        }
LABEL_21:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
    }
    v9 = TagFallback & 7;
    if (v9 != 2)
      goto LABEL_21;
    *(_DWORD *)(a1 + 28) |= 1u;
    v12 = *(_QWORD *)(a1 + 8);
    if (!v12)
    {
      v12 = operator new();
      *(_QWORD *)(v12 + 8) = 0;
      *(_QWORD *)(v12 + 16) = 0;
      *(_QWORD *)v12 = &off_250A70BA0;
      *(_QWORD *)(a1 + 8) = v12;
    }
    v24 = 0;
    v13 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24))
        return 0;
    }
    else
    {
      v24 = *v13;
      *((_QWORD *)this + 1) = v13 + 1;
    }
    v15 = *((_DWORD *)this + 14);
    v16 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v15 + 1;
    if (v15 >= v16)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
    if (!sub_23915A180((unsigned int *)v12, this) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    v17 = *((_DWORD *)this + 14);
    v18 = __OFSUB__(v17, 1);
    v19 = v17 - 1;
    if (v19 < 0 == v18)
      *((_DWORD *)this + 14) = v19;
    v20 = (_BYTE *)*((_QWORD *)this + 1);
    v10 = *((_QWORD *)this + 2);
    if ((unint64_t)v20 < v10 && *v20 == 16)
    {
      v14 = v20 + 1;
      *((_QWORD *)this + 1) = v14;
      goto LABEL_33;
    }
  }
}

uint64_t sub_23915AED0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;

  v5 = (unsigned int *)result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
    {
      sub_239131728();
      v7 = *(_QWORD *)(qword_2542CF3B0 + 8);
    }
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = v5[7];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  if ((v5[7] & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  return result;
}

uint64_t sub_23915AF5C(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;

  LOBYTE(v2) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_21;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (!v4)
    {
      sub_239131728();
      v4 = *(_QWORD *)(qword_2542CF3B0 + 8);
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915A374(v4);
    v6 = (int)v5;
    if (v5 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    else
      v7 = 1;
    v3 = (v6 + v7 + 1);
    v2 = *(_DWORD *)(a1 + 28);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_16;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    v2 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    v9 = 2;
  }
  v3 = (v9 + v3);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    else
      v11 = 2;
    v3 = (v11 + v3);
  }
LABEL_21:
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_23915B030(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71E08, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23915A9E4(a1, (uint64_t)lpsrc);
}

uint64_t sub_23915B098()
{
  return 1;
}

_QWORD *sub_23915B0A0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.CtsCdmaCellTime");
}

void sub_23915B0B0(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      v5 = *(_QWORD *)(a1 + 8);
      if (!v5)
      {
        v5 = operator new();
        *(_QWORD *)(v5 + 8) = 0;
        *(_QWORD *)(v5 + 16) = 0;
        *(_QWORD *)v5 = &off_250A70C18;
        *(_DWORD *)(v5 + 24) = 0;
        *(_QWORD *)(a1 + 8) = v5;
      }
      v6 = *(_QWORD *)(a2 + 8);
      if (!v6)
      {
        sub_239131728();
        v6 = *(_QWORD *)(qword_2542CF688 + 8);
      }
      sub_23915A480((_DWORD *)v5, v6);
      v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      v7 = *(_QWORD **)(a1 + 16);
      if (!v7)
      {
        v7 = (_QWORD *)operator new();
        *v7 = &off_250A70C90;
        v7[1] = 0;
        v7[2] = 0;
        v7[3] = 0;
        *(_QWORD *)(a1 + 16) = v7;
      }
      v8 = *(_QWORD *)(a2 + 16);
      if (!v8)
      {
        sub_239131728();
        v8 = *(_QWORD *)(qword_2542CF688 + 16);
      }
      sub_23915A9E4((uint64_t)v7, v8);
    }
  }
}

void sub_23915B204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23915B21C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a1 = &off_250A70D08;
  sub_239131728();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF688 != a1)
  {
    v2 = *((_QWORD *)a1 + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)a1 + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23915B28C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23915B21C(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_23915B2B0()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_250A70D08;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_23915B2E8(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 28);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 28) & 1) != 0)
    {
      v3 = *(_QWORD *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v2 = *(_DWORD *)(result + 28);
      }
    }
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(result + 16);
      if (result)
        result = sub_23915ABDC(result);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_23915B344(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _QWORD *v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t result;
  unsigned int v22;
  unsigned int v23;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_17;
        *(_DWORD *)(a1 + 28) |= 1u;
        v7 = *(_QWORD *)(a1 + 8);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)(v7 + 8) = 0;
          *(_QWORD *)(v7 + 16) = 0;
          *(_QWORD *)v7 = &off_250A70C18;
          *(_DWORD *)(v7 + 24) = 0;
          *(_QWORD *)(a1 + 8) = v7;
        }
        v22 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))return 0;
        }
        else
        {
          v22 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)this + 14);
        v10 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23915A618((unsigned int *)v7, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v11 = *((_DWORD *)this + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)this + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 < *((_QWORD *)this + 2) && *v14 == 18)
        {
          *((_QWORD *)this + 1) = v14 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v6 = TagFallback & 7;
      if (v6 != 2)
        goto LABEL_17;
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      v15 = *(_QWORD **)(a1 + 16);
      if (!v15)
      {
        v15 = (_QWORD *)operator new();
        *v15 = &off_250A70C90;
        v15[1] = 0;
        v15[2] = 0;
        v15[3] = 0;
        *(_QWORD *)(a1 + 16) = v15;
      }
      v23 = 0;
      v16 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v16 >= *((_QWORD *)this + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))return 0;
      }
      else
      {
        v23 = *v16;
        *((_QWORD *)this + 1) = v16 + 1;
      }
      v17 = *((_DWORD *)this + 14);
      v18 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v17 + 1;
      if (v17 >= v18)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
      if (!sub_23915AC0C((uint64_t)v15, this) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
      v19 = *((_DWORD *)this + 14);
      v12 = __OFSUB__(v19, 1);
      v20 = v19 - 1;
      if (v20 < 0 == v12)
        *((_DWORD *)this + 14) = v20;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v6 = TagFallback & 7;
LABEL_17:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23915B61C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      return result;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(result + 8);
  if (!v7)
  {
    sub_239131728();
    v7 = *(_QWORD *)(qword_2542CF688 + 8);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    v8 = *(_QWORD *)(v5 + 16);
    if (!v8)
    {
      sub_239131728();
      v8 = *(_QWORD *)(qword_2542CF688 + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_23915B6A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;

  if (!*(_BYTE *)(a1 + 28))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) == 0)
  {
    v2 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
  {
    sub_239131728();
    v3 = *(_QWORD *)(qword_2542CF688 + 8);
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915A8B0(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = (v5 + v6 + 1);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_12:
    v7 = *(_QWORD *)(a1 + 16);
    if (!v7)
    {
      sub_239131728();
      v7 = *(_QWORD *)(qword_2542CF688 + 16);
    }
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915AF5C(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 = (v2 + v9 + v10 + 1);
  }
LABEL_18:
  *(_DWORD *)(a1 + 24) = v2;
  return v2;
}

void sub_23915B778(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71E20, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23915B0B0(a1, (uint64_t)lpsrc);
}

uint64_t sub_23915B7E0()
{
  return 1;
}

_QWORD *sub_23915B7E8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.CellTimeData");
}

void sub_23915B7F8(uint64_t a1, uint64_t a2)
{
  int v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v8[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 6)
        __assert_rtn("set_cell_time_assistance_type", "GnssEmergencyTypes.pb.h", 23025, "::CoreGem::proto::gnss::Emergency::ClsNetworkType_IsValid(value)");
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      v6 = *(_QWORD **)(a1 + 8);
      if (!v6)
      {
        v6 = (_QWORD *)operator new();
        *v6 = &off_250A70D08;
        v6[1] = 0;
        v6[2] = 0;
        v6[3] = 0;
        *(_QWORD *)(a1 + 8) = v6;
      }
      v7 = *(_QWORD *)(a2 + 8);
      if (!v7)
      {
        sub_239131728();
        v7 = *(_QWORD *)(qword_2542CF3B8 + 8);
      }
      sub_23915B0B0((uint64_t)v6, v7);
    }
  }
}

void sub_23915B920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23915B938(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_250A70D80;
  sub_239131728();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF3B8 != a1)
  {
    v2 = *((_QWORD *)a1 + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23915B994(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23915B938(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23915B9B8()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A70D80;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_23915B9F4(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      result = *(_QWORD *)(result + 8);
      if (result)
        result = sub_23915B2E8(result);
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_23915BA30(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  uint64_t result;
  _BYTE *v10;
  _QWORD *v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  unsigned int v18;
  unsigned int v19;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_15;
        v18 = 0;
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
          if (!(_DWORD)result)
            return result;
          v8 = v18;
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)this + 1) = v7 + 1;
        }
        if (v8 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v8;
        }
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 < *((_QWORD *)this + 2) && *v10 == 18)
        {
          *((_QWORD *)this + 1) = v10 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v6 = TagFallback & 7;
        goto LABEL_15;
      }
      v6 = TagFallback & 7;
      if (v6 == 2)
        break;
LABEL_15:
      if (v6 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    v11 = *(_QWORD **)(a1 + 8);
    if (!v11)
    {
      v11 = (_QWORD *)operator new();
      *v11 = &off_250A70D08;
      v11[1] = 0;
      v11[2] = 0;
      v11[3] = 0;
      *(_QWORD *)(a1 + 8) = v11;
    }
    v19 = 0;
    v12 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19))
        return 0;
    }
    else
    {
      v19 = *v12;
      *((_QWORD *)this + 1) = v12 + 1;
    }
    v13 = *((_DWORD *)this + 14);
    v14 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v13 + 1;
    if (v13 >= v14)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
    if (!sub_23915B344((uint64_t)v11, this) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    v15 = *((_DWORD *)this + 14);
    v16 = __OFSUB__(v15, 1);
    v17 = v15 - 1;
    if (v17 < 0 == v16)
      *((_DWORD *)this + 14) = v17;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_23915BC7C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 16), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0)
      return result;
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if (!v7)
  {
    sub_239131728();
    v7 = *(_QWORD *)(qword_2542CF3B8 + 8);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_23915BCEC(uint64_t a1)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;

  v2 = *(_BYTE *)(a1 + 24);
  if (v2)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v3 = 0;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0)
        goto LABEL_19;
    }
    v5 = *(_QWORD *)(a1 + 8);
    if (!v5)
    {
      sub_239131728();
      v5 = *(_QWORD *)(qword_2542CF3B8 + 8);
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915B6A0(v5);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    else
      v8 = 1;
    v3 = (v3 + v7 + v8 + 1);
  }
  else
  {
    v3 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_23915BDB4(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71E38, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23915B7F8(a1, (uint64_t)lpsrc);
}

uint64_t sub_23915BE1C()
{
  return 1;
}

_QWORD *sub_23915BE24@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.CellTimeAssistance");
}

void sub_23915BE34(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  _BYTE v10[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[8] |= 1u;
      a1[2] = v6;
      v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_DWORD *)(a2 + 12);
    a1[8] |= 2u;
    a1[3] = v7;
    v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    v8 = *(_DWORD *)(a2 + 16);
    a1[8] |= 4u;
    a1[4] = v8;
    v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_14:
    v9 = *(_DWORD *)(a2 + 20);
    a1[8] |= 8u;
    a1[5] = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0)
      return;
LABEL_9:
    v5 = *(_DWORD *)(a2 + 24);
    a1[8] |= 0x10u;
    a1[6] = v5;
  }
}

void sub_23915BF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23915BF5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A70DF8;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23915BF94(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23915BF5C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23915BFB8()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A70DF8;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_23915BFF4(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_23915C00C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  unsigned __int8 *v22;
  uint64_t result;

  v4 = a1 + 2;
  v5 = a1 + 3;
  v6 = a1 + 4;
  v7 = a1 + 5;
  v8 = a1 + 6;
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          *v4 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
LABEL_26:
          a1[8] |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            v15 = v14 + 1;
            *((_QWORD *)this + 1) = v15;
            goto LABEL_29;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
        if ((_DWORD)result)
        {
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_29:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v15;
          v19 = v15 + 1;
          *((_QWORD *)this + 1) = v19;
        }
        a1[8] |= 2u;
        if ((unint64_t)v19 >= v12 || *v19 != 24)
          continue;
        v16 = v19 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_37:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v20 = v16 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        a1[8] |= 4u;
        if ((unint64_t)v20 >= v12 || *v20 != 32)
          continue;
        v17 = v20 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_45:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v21 = v17 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        a1[8] |= 8u;
        if ((unint64_t)v21 >= v12 || *v21 != 40)
          continue;
        v18 = v21 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_53:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v22 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v18;
          v22 = (unsigned __int8 *)(v18 + 1);
          *((_QWORD *)this + 1) = v22;
        }
        a1[8] |= 0x10u;
        if (v22 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_37;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v17 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v18 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_53;
      default:
        v11 = TagFallback & 7;
LABEL_20:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *sub_23915C32C(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = result;
  v6 = result[8];
  if ((v6 & 1) != 0)
  {
    result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[8];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  }
LABEL_10:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  if ((v5[8] & 0x10) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  return result;
}

uint64_t sub_23915C3DC(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;

  LOBYTE(v2) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_30;
  }
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 32);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      v8 = 2;
    }
    v3 = (v8 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_30;
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    v2 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    v10 = 2;
  }
  v3 = (v10 + v3);
  if ((v2 & 0x10) != 0)
  {
LABEL_26:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v11 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    else
      v12 = 2;
    v3 = (v12 + v3);
  }
LABEL_30:
  *(_DWORD *)(a1 + 28) = v3;
  return v3;
}

void sub_23915C4EC(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71E50, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23915BE34(a1, (uint64_t)lpsrc);
}

uint64_t sub_23915C554()
{
  return 1;
}

_QWORD *sub_23915C55C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.TowAssist");
}

void sub_23915C56C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  _BYTE v21[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6));
  if (*(int *)(a2 + 32) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8 * v4);
      v6 = a1[9];
      v7 = (int)a1[8];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6));
          v6 = a1[9];
        }
        a1[9] = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_250A70DF8;
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
        *(_QWORD *)(v9 + 24) = 0;
        *(_DWORD *)(v9 + 32) = 0;
        v10 = *((_QWORD *)a1 + 3);
        v11 = (int)a1[8];
        a1[8] = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)a1 + 3);
        a1[8] = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      sub_23915BE34((_DWORD *)v9, v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  v12 = *(_DWORD *)(a2 + 68);
  if (!(_BYTE)v12)
    goto LABEL_19;
  if ((v12 & 1) != 0)
  {
    v14 = *(_DWORD *)(a2 + 8);
    a1[17] |= 1u;
    a1[2] = v14;
    v12 = *(_DWORD *)(a2 + 68);
    if ((v12 & 2) == 0)
    {
LABEL_14:
      if ((v12 & 4) == 0)
        goto LABEL_15;
      goto LABEL_24;
    }
  }
  else if ((v12 & 2) == 0)
  {
    goto LABEL_14;
  }
  v15 = *(_DWORD *)(a2 + 12);
  a1[17] |= 2u;
  a1[3] = v15;
  v12 = *(_DWORD *)(a2 + 68);
  if ((v12 & 4) == 0)
  {
LABEL_15:
    if ((v12 & 8) == 0)
      goto LABEL_16;
    goto LABEL_25;
  }
LABEL_24:
  v16 = *(_DWORD *)(a2 + 16);
  a1[17] |= 4u;
  a1[4] = v16;
  v12 = *(_DWORD *)(a2 + 68);
  if ((v12 & 8) == 0)
  {
LABEL_16:
    if ((v12 & 0x20) == 0)
      goto LABEL_17;
    goto LABEL_26;
  }
LABEL_25:
  v17 = *(_DWORD *)(a2 + 20);
  a1[17] |= 8u;
  a1[5] = v17;
  v12 = *(_DWORD *)(a2 + 68);
  if ((v12 & 0x20) == 0)
  {
LABEL_17:
    if ((v12 & 0x40) == 0)
      goto LABEL_18;
    goto LABEL_27;
  }
LABEL_26:
  v18 = *(_DWORD *)(a2 + 48);
  a1[17] |= 0x20u;
  a1[12] = v18;
  v12 = *(_DWORD *)(a2 + 68);
  if ((v12 & 0x40) != 0)
  {
LABEL_27:
    v19 = *(_DWORD *)(a2 + 52);
    if (v19 >= 6)
      __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 23343, "::CoreGem::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
    a1[17] |= 0x40u;
    a1[13] = v19;
    v12 = *(_DWORD *)(a2 + 68);
    if ((v12 & 0x80) != 0)
      goto LABEL_29;
LABEL_19:
    if ((v12 & 0x100) == 0)
      return;
    goto LABEL_20;
  }
LABEL_18:
  if ((v12 & 0x80) == 0)
    goto LABEL_19;
LABEL_29:
  v20 = *(_DWORD *)(a2 + 56);
  if (v20 >= 7)
    __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 23366, "::CoreGem::proto::gnss::Emergency::PosProtocol_IsValid(value)");
  a1[17] |= 0x80u;
  a1[14] = v20;
  if ((*(_DWORD *)(a2 + 68) & 0x100) != 0)
  {
LABEL_20:
    v13 = *(_DWORD *)(a2 + 60);
    a1[17] |= 0x100u;
    a1[15] = v13;
  }
}

void sub_23915C810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23915C828(uint64_t a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = &off_250A70E70;
  sub_239131728();
  v2 = *(_DWORD *)(a1 + 36);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  v5 = *(_QWORD *)(a1 + 24);
  if (v5)
    MEMORY[0x23B838820](v5, 0x80C80B8603338);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_23915C8B4(uint64_t a1)
{
  sub_23915C828(a1);
  JUMPOUT(0x23B838844);
}

double sub_23915C8D8()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A70E70;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_DWORD *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_23915C924(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = result;
  v2 = *(_DWORD *)(result + 68);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  if ((v2 & 0xFF00) != 0)
    *(_DWORD *)(result + 60) = 0;
  if (*(int *)(result + 32) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v3);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 68) = 0;
  return result;
}

uint64_t sub_23915C9A0(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  unint64_t v18;
  unsigned __int8 *v19;
  char *v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  unsigned __int8 *v24;
  uint64_t result;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int v36;
  int v37;
  int v38;
  BOOL v39;
  int v40;
  int v41;
  _BYTE *v42;
  unsigned int v43;
  _BYTE *v44;
  unsigned int v45;
  _BYTE *v46;
  char *v47;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v48;
  unsigned int *v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;

  v4 = a1 + 3;
  v5 = a1 + 4;
  v6 = a1 + 5;
  v48 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6);
  v49 = a1 + 2;
  v7 = a1 + 12;
  v8 = a1 + 15;
  while (1)
  {
    while (1)
    {
LABEL_2:
      v9 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v9;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v9 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      switch(TagFallback >> 3)
      {
        case 1u:
          v11 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v13 = (char *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          if ((unint64_t)v13 >= v12 || *v13 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49);
            if (!(_DWORD)result)
              return result;
            v14 = (_BYTE *)*((_QWORD *)this + 1);
            v12 = *((_QWORD *)this + 2);
          }
          else
          {
            *v49 = *v13;
            v14 = v13 + 1;
            *((_QWORD *)this + 1) = v14;
          }
          a1[17] |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            v15 = v14 + 1;
            *((_QWORD *)this + 1) = v15;
            goto LABEL_37;
          }
          continue;
        case 2u:
          v11 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v15 = (char *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
LABEL_37:
          if ((unint64_t)v15 >= v12 || *v15 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
            if (!(_DWORD)result)
              return result;
            v26 = (_BYTE *)*((_QWORD *)this + 1);
            v12 = *((_QWORD *)this + 2);
          }
          else
          {
            *v4 = *v15;
            v26 = v15 + 1;
            *((_QWORD *)this + 1) = v26;
          }
          a1[17] |= 2u;
          if ((unint64_t)v26 >= v12 || *v26 != 24)
            continue;
          v16 = v26 + 1;
          *((_QWORD *)this + 1) = v16;
LABEL_45:
          if ((unint64_t)v16 >= v12 || *v16 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!(_DWORD)result)
              return result;
            v27 = (_BYTE *)*((_QWORD *)this + 1);
            v12 = *((_QWORD *)this + 2);
          }
          else
          {
            *v5 = *v16;
            v27 = v16 + 1;
            *((_QWORD *)this + 1) = v27;
          }
          a1[17] |= 4u;
          if ((unint64_t)v27 >= v12 || *v27 != 32)
            continue;
          v17 = v27 + 1;
          *((_QWORD *)this + 1) = v17;
LABEL_53:
          if ((unint64_t)v17 >= v12 || *v17 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
            if (!(_DWORD)result)
              return result;
            v28 = (_BYTE *)*((_QWORD *)this + 1);
            v12 = *((_QWORD *)this + 2);
          }
          else
          {
            *v6 = *v17;
            v28 = v17 + 1;
            *((_QWORD *)this + 1) = v28;
          }
          a1[17] |= 8u;
          if ((unint64_t)v28 >= v12 || *v28 != 42)
            continue;
          break;
        case 3u:
          v11 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v16 = (char *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          goto LABEL_45;
        case 4u:
          v11 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v17 = (char *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          goto LABEL_53;
        case 5u:
          v11 = TagFallback & 7;
          if (v11 == 2)
            goto LABEL_61;
          goto LABEL_28;
        case 6u:
          v11 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v19 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v18 = *((_QWORD *)this + 2);
          goto LABEL_79;
        case 7u:
          v11 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v20 = (char *)*((_QWORD *)this + 1);
          v18 = *((_QWORD *)this + 2);
          goto LABEL_87;
        case 8u:
          v11 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v22 = (char *)*((_QWORD *)this + 1);
          v21 = *((_QWORD *)this + 2);
          goto LABEL_97;
        case 9u:
          v11 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_28;
          v24 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v23 = *((_QWORD *)this + 2);
          goto LABEL_107;
        default:
          v11 = TagFallback & 7;
LABEL_28:
          if (v11 == 4)
            return 1;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
      }
      do
      {
        *((_QWORD *)this + 1) = v28 + 1;
LABEL_61:
        v29 = a1[9];
        v30 = (int)a1[8];
        if ((int)v30 >= v29)
        {
          if (v29 == a1[10])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v48);
            v29 = a1[9];
          }
          a1[9] = v29 + 1;
          v32 = operator new();
          *(_QWORD *)v32 = &off_250A70DF8;
          *(_QWORD *)(v32 + 8) = 0;
          *(_QWORD *)(v32 + 16) = 0;
          *(_QWORD *)(v32 + 24) = 0;
          *(_DWORD *)(v32 + 32) = 0;
          v33 = *((_QWORD *)a1 + 3);
          v34 = (int)a1[8];
          a1[8] = v34 + 1;
          *(_QWORD *)(v33 + 8 * v34) = v32;
        }
        else
        {
          v31 = *((_QWORD *)a1 + 3);
          a1[8] = v30 + 1;
          v32 = *(_QWORD *)(v31 + 8 * v30);
        }
        v52 = 0;
        v35 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v35 >= *((_QWORD *)this + 2) || *v35 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0;
        }
        else
        {
          v52 = *v35;
          *((_QWORD *)this + 1) = v35 + 1;
        }
        v36 = *((_DWORD *)this + 14);
        v37 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v36 + 1;
        if (v36 >= v37)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23915C00C((unsigned int *)v32, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v38 = *((_DWORD *)this + 14);
        v39 = __OFSUB__(v38, 1);
        v40 = v38 - 1;
        if (v40 < 0 == v39)
          *((_DWORD *)this + 14) = v40;
        v28 = (_BYTE *)*((_QWORD *)this + 1);
        v18 = *((_QWORD *)this + 2);
        if ((unint64_t)v28 >= v18)
          goto LABEL_2;
        v41 = *v28;
      }
      while (v41 == 42);
      if (v41 != 48)
        continue;
      v19 = v28 + 1;
      *((_QWORD *)this + 1) = v19;
LABEL_79:
      if ((unint64_t)v19 >= v18 || (char)*v19 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
        if ((_DWORD)result)
        {
          v42 = (_BYTE *)*((_QWORD *)this + 1);
          v18 = *((_QWORD *)this + 2);
          goto LABEL_84;
        }
        return result;
      }
      *v7 = *v19;
      v42 = v19 + 1;
      *((_QWORD *)this + 1) = v42;
LABEL_84:
      a1[17] |= 0x20u;
      if ((unint64_t)v42 < v18 && *v42 == 56)
      {
        v20 = v42 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_87:
        v51 = 0;
        if ((unint64_t)v20 < v18 && (*v20 & 0x80000000) == 0)
        {
          v43 = *v20;
          *((_QWORD *)this + 1) = v20 + 1;
          goto LABEL_92;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51);
        if (!(_DWORD)result)
          return result;
        v43 = v51;
LABEL_92:
        if (v43 <= 5)
        {
          a1[17] |= 0x40u;
          a1[13] = v43;
        }
        v44 = (_BYTE *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        if ((unint64_t)v44 < v21 && *v44 == 64)
        {
          v22 = v44 + 1;
          *((_QWORD *)this + 1) = v22;
LABEL_97:
          v50 = 0;
          if ((unint64_t)v22 < v21 && (*v22 & 0x80000000) == 0)
          {
            v45 = *v22;
            *((_QWORD *)this + 1) = v22 + 1;
            goto LABEL_102;
          }
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!(_DWORD)result)
            return result;
          v45 = v50;
LABEL_102:
          if (v45 <= 6)
          {
            a1[17] |= 0x80u;
            a1[14] = v45;
          }
          v46 = (_BYTE *)*((_QWORD *)this + 1);
          v23 = *((_QWORD *)this + 2);
          if ((unint64_t)v46 < v23 && *v46 == 72)
            break;
        }
      }
    }
    v24 = v46 + 1;
    *((_QWORD *)this + 1) = v24;
LABEL_107:
    if ((unint64_t)v24 >= v23 || (char)*v24 < 0)
      break;
    *v8 = *v24;
    v47 = (char *)(v24 + 1);
    *((_QWORD *)this + 1) = v47;
LABEL_112:
    a1[17] |= 0x100u;
    if (v47 == (char *)v23 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
  if ((_DWORD)result)
  {
    v47 = (char *)*((_QWORD *)this + 1);
    v23 = *((_QWORD *)this + 2);
    goto LABEL_112;
  }
  return result;
}

uint64_t sub_23915CFA8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 68);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 8) != 0)
LABEL_5:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 0x20) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
    v8 = *(_DWORD *)(v5 + 68);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0)
        goto LABEL_12;
      goto LABEL_20;
    }
  }
  else if ((v8 & 0x40) == 0)
  {
    goto LABEL_11;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 0x80) == 0)
  {
LABEL_12:
    if ((v8 & 0x100) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x100) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  return result;
}

uint64_t sub_23915D0EC(uint64_t a1)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  int v25;

  v2 = *(_DWORD *)(a1 + 68);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    if ((v2 & 0x100) == 0)
      goto LABEL_50;
    goto LABEL_46;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_15;
    goto LABEL_11;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v5 = 1;
  }
  v3 = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_11:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      v7 = 1;
    }
    v3 += v7 + 1;
  }
LABEL_15:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      v2 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      v9 = 2;
    }
    v3 += v9;
    if ((v2 & 8) == 0)
    {
LABEL_17:
      if ((v2 & 0x20) == 0)
        goto LABEL_18;
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_17;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v11 = 2;
  }
  v3 += v11;
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_34;
  }
LABEL_30:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0)
      goto LABEL_20;
    goto LABEL_40;
  }
LABEL_34:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x80) == 0)
  {
LABEL_20:
    if ((v2 & 0x100) == 0)
      goto LABEL_50;
    goto LABEL_46;
  }
LABEL_40:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v16 & 0x80000000) != 0)
  {
    v17 = 11;
  }
  else if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x100) != 0)
  {
LABEL_46:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v18 >= 0x80)
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    else
      v19 = 2;
    v3 += v19;
  }
LABEL_50:
  v20 = *(_DWORD *)(a1 + 32);
  v21 = (v20 + v3);
  if (v20 >= 1)
  {
    v22 = 0;
    do
    {
      v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915C3DC(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * v22));
      v24 = (int)v23;
      if (v23 >= 0x80)
        v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
      else
        v25 = 1;
      v21 = (v24 + v21 + v25);
      ++v22;
    }
    while (v22 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 64) = v21;
  return v21;
}

void sub_23915D2F8(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71E68, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23915C56C(a1, (uint64_t)lpsrc);
}

uint64_t sub_23915D360()
{
  return 1;
}

_QWORD *sub_23915D368@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.GpsReferenceTime");
}

void sub_23915D378(_DWORD *a1, _DWORD *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  _BYTE v19[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v4 = a2[17];
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = a2[2];
    a1[17] |= 1u;
    a1[2] = v7;
    v4 = a2[17];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = a2[3];
  a1[17] |= 2u;
  a1[3] = v8;
  v4 = a2[17];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  v9 = a2[4];
  a1[17] |= 4u;
  a1[4] = v9;
  v4 = a2[17];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  v10 = a2[5];
  a1[17] |= 8u;
  a1[5] = v10;
  v4 = a2[17];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_27:
    v12 = a2[7];
    a1[17] |= 0x20u;
    a1[7] = v12;
    v4 = a2[17];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  v11 = a2[6];
  a1[17] |= 0x10u;
  a1[6] = v11;
  v4 = a2[17];
  if ((v4 & 0x20) != 0)
    goto LABEL_27;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_28:
  v13 = a2[8];
  a1[17] |= 0x40u;
  a1[8] = v13;
  v4 = a2[17];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = a2[9];
    a1[17] |= 0x80u;
    a1[9] = v5;
    v4 = a2[17];
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v14 = a2[10];
    a1[17] |= 0x100u;
    a1[10] = v14;
    v4 = a2[17];
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = a2[11];
  a1[17] |= 0x200u;
  a1[11] = v15;
  v4 = a2[17];
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_33;
  }
LABEL_32:
  v16 = a2[12];
  a1[17] |= 0x400u;
  a1[12] = v16;
  v4 = a2[17];
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_35;
  }
LABEL_33:
  v17 = a2[13];
  if (v17 >= 6)
    __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 23657, "::CoreGem::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
  a1[17] |= 0x800u;
  a1[13] = v17;
  v4 = a2[17];
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      return;
    goto LABEL_20;
  }
LABEL_35:
  v18 = a2[14];
  if (v18 >= 7)
    __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 23680, "::CoreGem::proto::gnss::Emergency::PosProtocol_IsValid(value)");
  a1[17] |= 0x1000u;
  a1[14] = v18;
  if ((a2[17] & 0x2000) != 0)
  {
LABEL_20:
    v6 = a2[15];
    a1[17] |= 0x2000u;
    a1[15] = v6;
  }
}

void sub_23915D604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23915D61C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A70EE8;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23915D654(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23915D61C(a1);
  JUMPOUT(0x23B838844);
}

double sub_23915D678()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A70EE8;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return result;
}

uint64_t sub_23915D6C0(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 68);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0;
    *(_QWORD *)(result + 56) = 0;
  }
  *(_DWORD *)(result + 68) = 0;
  return result;
}

uint64_t sub_23915D6F0(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  unint64_t v28;
  char *v29;
  unint64_t v30;
  char *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  unsigned int v43;
  _BYTE *v44;
  unsigned int v45;
  _BYTE *v46;
  unsigned __int8 *v47;
  uint64_t result;
  unsigned int *v49;
  unsigned int *v50;
  unsigned int *v51;
  unsigned int *v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;

  v49 = a1 + 2;
  v50 = a1 + 3;
  v51 = a1 + 4;
  v52 = a1 + 5;
  v4 = a1 + 7;
  v5 = a1 + 8;
  v6 = a1 + 9;
  v7 = a1 + 10;
  v8 = a1 + 11;
  v9 = a1 + 12;
  v10 = a1 + 15;
  while (2)
  {
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v49 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
LABEL_44:
          a1[17] |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)this + 1) = v17;
            goto LABEL_47;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          goto LABEL_44;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v17 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_47:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v50);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v50 = *v17;
          v32 = v17 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        a1[17] |= 2u;
        if ((unint64_t)v32 >= v14 || *v32 != 24)
          continue;
        v18 = v32 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_55:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v51);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v51 = *v18;
          v33 = v18 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        a1[17] |= 4u;
        if ((unint64_t)v33 >= v14 || *v33 != 32)
          continue;
        v19 = v33 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_63:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v52);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v52 = *v19;
          v34 = v19 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        a1[17] |= 8u;
        if ((unint64_t)v34 >= v14 || *v34 != 40)
          continue;
        v20 = v34 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_71:
        v53 = 0;
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
          if (!(_DWORD)result)
            return result;
          v35 = v53;
          v36 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v35 = *v20;
          v36 = v20 + 1;
          *((_QWORD *)this + 1) = v36;
        }
        a1[6] = v35;
        a1[17] |= 0x10u;
        if ((unint64_t)v36 >= v14 || *v36 != 48)
          continue;
        v21 = v36 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_79:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v21;
          v37 = v21 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        a1[17] |= 0x20u;
        if ((unint64_t)v37 >= v14 || *v37 != 56)
          continue;
        v22 = v37 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_87:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v22;
          v38 = v22 + 1;
          *((_QWORD *)this + 1) = v38;
        }
        a1[17] |= 0x40u;
        if ((unint64_t)v38 >= v14 || *v38 != 64)
          continue;
        v23 = v38 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_95:
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v23;
          v39 = v23 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        a1[17] |= 0x80u;
        if ((unint64_t)v39 >= v14 || *v39 != 72)
          continue;
        v24 = v39 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_103:
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v24;
          v40 = v24 + 1;
          *((_QWORD *)this + 1) = v40;
        }
        a1[17] |= 0x100u;
        if ((unint64_t)v40 >= v14 || *v40 != 80)
          continue;
        v25 = v40 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_111:
        if ((unint64_t)v25 >= v14 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v41 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v25;
          v41 = v25 + 1;
          *((_QWORD *)this + 1) = v41;
        }
        a1[17] |= 0x200u;
        if ((unint64_t)v41 >= v14 || *v41 != 88)
          continue;
        v26 = v41 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_119:
        if ((unint64_t)v26 >= v14 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v42 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v26;
          v42 = v26 + 1;
          *((_QWORD *)this + 1) = v42;
        }
        a1[17] |= 0x400u;
        if ((unint64_t)v42 >= v14 || *v42 != 96)
          continue;
        v27 = v42 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_127:
        v55 = 0;
        if ((unint64_t)v27 >= v14 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
          if (!(_DWORD)result)
            return result;
          v43 = v55;
        }
        else
        {
          v43 = *v27;
          *((_QWORD *)this + 1) = v27 + 1;
        }
        if (v43 <= 5)
        {
          a1[17] |= 0x800u;
          a1[13] = v43;
        }
        v44 = (_BYTE *)*((_QWORD *)this + 1);
        v28 = *((_QWORD *)this + 2);
        if ((unint64_t)v44 >= v28 || *v44 != 104)
          continue;
        v29 = v44 + 1;
        *((_QWORD *)this + 1) = v29;
LABEL_137:
        v54 = 0;
        if ((unint64_t)v29 >= v28 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54);
          if (!(_DWORD)result)
            return result;
          v45 = v54;
        }
        else
        {
          v45 = *v29;
          *((_QWORD *)this + 1) = v29 + 1;
        }
        if (v45 <= 6)
        {
          a1[17] |= 0x1000u;
          a1[14] = v45;
        }
        v46 = (_BYTE *)*((_QWORD *)this + 1);
        v30 = *((_QWORD *)this + 2);
        if ((unint64_t)v46 >= v30 || *v46 != 112)
          continue;
        v31 = v46 + 1;
        *((_QWORD *)this + 1) = v31;
LABEL_147:
        if ((unint64_t)v31 >= v30 || *v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v47 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v30 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v31;
          v47 = (unsigned __int8 *)(v31 + 1);
          *((_QWORD *)this + 1) = v47;
        }
        a1[17] |= 0x2000u;
        if (v47 != (unsigned __int8 *)v30 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v18 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_55;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v19 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_63;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v20 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_71;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v21 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_79;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v22 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_87;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v23 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_95;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v24 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_103;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v25 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_111;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v26 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_119;
      case 0xCu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v27 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_127;
      case 0xDu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v29 = (char *)*((_QWORD *)this + 1);
        v28 = *((_QWORD *)this + 2);
        goto LABEL_137;
      case 0xEu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v31 = (char *)*((_QWORD *)this + 1);
        v30 = *((_QWORD *)this + 2);
        goto LABEL_147;
      default:
        v13 = TagFallback & 7;
LABEL_38:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *sub_23915DE68(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = result;
  v6 = result[17];
  if ((v6 & 1) != 0)
  {
    result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[17];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[17];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[17];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_28;
  }
LABEL_27:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  v6 = v5[17];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      return result;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  }
LABEL_28:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  if ((v5[17] & 0x2000) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  return result;
}

uint64_t sub_23915E014(unsigned int *a1)
{
  unsigned int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;

  v2 = a1[17];
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_47;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = a1[17];
  }
  else
  {
    v5 = 1;
  }
  v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_10:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = a1[17];
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = a1[17];
    }
    else
    {
      v9 = 1;
    }
    v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    v2 = a1[17];
  }
  else
  {
    v11 = 1;
  }
  v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_35;
  }
LABEL_29:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = a1[17];
  }
  else
  {
    v13 = 1;
  }
  v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_39;
  }
LABEL_35:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = a1[17];
  }
  else
  {
    v15 = 1;
  }
  v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_39:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = a1[17];
  }
  else
  {
    v17 = 1;
  }
  v3 = (v3 + v17 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_43:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      v2 = a1[17];
    }
    else
    {
      v19 = 2;
    }
    v3 = (v19 + v3);
  }
LABEL_47:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_83;
  if ((v2 & 0x100) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      v2 = a1[17];
    }
    else
    {
      v21 = 2;
    }
    v3 = (v21 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_50:
      if ((v2 & 0x400) == 0)
        goto LABEL_51;
      goto LABEL_63;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    v2 = a1[17];
  }
  else
  {
    v23 = 2;
  }
  v3 = (v23 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_51:
    if ((v2 & 0x800) == 0)
      goto LABEL_52;
    goto LABEL_67;
  }
LABEL_63:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    v2 = a1[17];
  }
  else
  {
    v25 = 2;
  }
  v3 = (v25 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_52:
    if ((v2 & 0x1000) == 0)
      goto LABEL_53;
    goto LABEL_73;
  }
LABEL_67:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if ((v26 & 0x80000000) != 0)
  {
    v27 = 11;
  }
  else if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    v2 = a1[17];
  }
  else
  {
    v27 = 2;
  }
  v3 = (v27 + v3);
  if ((v2 & 0x1000) == 0)
  {
LABEL_53:
    if ((v2 & 0x2000) == 0)
      goto LABEL_83;
    goto LABEL_79;
  }
LABEL_73:
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
  if ((v28 & 0x80000000) != 0)
  {
    v29 = 11;
  }
  else if (v28 >= 0x80)
  {
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    v2 = a1[17];
  }
  else
  {
    v29 = 2;
  }
  v3 = (v29 + v3);
  if ((v2 & 0x2000) != 0)
  {
LABEL_79:
    v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[15];
    if (v30 >= 0x80)
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    else
      v31 = 2;
    v3 = (v31 + v3);
  }
LABEL_83:
  a1[16] = v3;
  return v3;
}

void sub_23915E2DC(_DWORD *a1, _DWORD *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71E80, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23915D378(a1, lpsrc);
}

uint64_t sub_23915E344()
{
  return 1;
}

_QWORD *sub_23915E34C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.ReferenceLocation");
}

void sub_23915E35C(_DWORD *a1, uint64_t a2)
{
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  _BYTE v40[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v40);
  }
  v4 = *(_DWORD *)(a2 + 148);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v11 = *(_DWORD *)(a2 + 8);
    a1[37] |= 1u;
    a1[2] = v11;
    v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_50;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v12 = *(_DWORD *)(a2 + 12);
  a1[37] |= 2u;
  a1[3] = v12;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_51;
  }
LABEL_50:
  v13 = *(_DWORD *)(a2 + 16);
  a1[37] |= 4u;
  a1[4] = v13;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_52;
  }
LABEL_51:
  v14 = *(_DWORD *)(a2 + 20);
  a1[37] |= 8u;
  a1[5] = v14;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_53:
    v16 = *(_DWORD *)(a2 + 28);
    a1[37] |= 0x20u;
    a1[7] = v16;
    v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_54;
  }
LABEL_52:
  v15 = *(_DWORD *)(a2 + 24);
  a1[37] |= 0x10u;
  a1[6] = v15;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x20) != 0)
    goto LABEL_53;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_54:
  v17 = *(_DWORD *)(a2 + 32);
  a1[37] |= 0x40u;
  a1[8] = v17;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *(_DWORD *)(a2 + 36);
    a1[37] |= 0x80u;
    a1[9] = v5;
    v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_23;
  if ((v4 & 0x100) != 0)
  {
    v18 = *(_DWORD *)(a2 + 40);
    a1[37] |= 0x100u;
    a1[10] = v18;
    v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_58;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v19 = *(_DWORD *)(a2 + 44);
  a1[37] |= 0x200u;
  a1[11] = v19;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_59;
  }
LABEL_58:
  v20 = *(_DWORD *)(a2 + 48);
  a1[37] |= 0x400u;
  a1[12] = v20;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_60;
  }
LABEL_59:
  v21 = *(_DWORD *)(a2 + 52);
  a1[37] |= 0x800u;
  a1[13] = v21;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_61;
  }
LABEL_60:
  v22 = *(_DWORD *)(a2 + 56);
  a1[37] |= 0x1000u;
  a1[14] = v22;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_62;
  }
LABEL_61:
  v23 = *(_DWORD *)(a2 + 60);
  a1[37] |= 0x2000u;
  a1[15] = v23;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
LABEL_62:
  v24 = *(_DWORD *)(a2 + 64);
  a1[37] |= 0x4000u;
  a1[16] = v24;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    v6 = *(_DWORD *)(a2 + 68);
    a1[37] |= 0x8000u;
    a1[17] = v6;
    v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_23:
  if ((v4 & 0xFF0000) == 0)
    goto LABEL_33;
  if ((v4 & 0x10000) != 0)
  {
    v25 = *(_DWORD *)(a2 + 72);
    a1[37] |= 0x10000u;
    a1[18] = v25;
    v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x20000) == 0)
    {
LABEL_26:
      if ((v4 & 0x40000) == 0)
        goto LABEL_27;
      goto LABEL_66;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  v26 = *(_DWORD *)(a2 + 76);
  a1[37] |= 0x20000u;
  a1[19] = v26;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x40000) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0)
      goto LABEL_28;
    goto LABEL_67;
  }
LABEL_66:
  v27 = *(_DWORD *)(a2 + 80);
  a1[37] |= 0x40000u;
  a1[20] = v27;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x80000) == 0)
  {
LABEL_28:
    if ((v4 & 0x100000) == 0)
      goto LABEL_29;
    goto LABEL_68;
  }
LABEL_67:
  v28 = *(_DWORD *)(a2 + 84);
  a1[37] |= 0x80000u;
  a1[21] = v28;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x100000) == 0)
  {
LABEL_29:
    if ((v4 & 0x200000) == 0)
      goto LABEL_30;
    goto LABEL_69;
  }
LABEL_68:
  v29 = *(_DWORD *)(a2 + 88);
  a1[37] |= 0x100000u;
  a1[22] = v29;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x200000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000) == 0)
      goto LABEL_31;
    goto LABEL_70;
  }
LABEL_69:
  v30 = *(_DWORD *)(a2 + 92);
  a1[37] |= 0x200000u;
  a1[23] = v30;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x400000) == 0)
  {
LABEL_31:
    if ((v4 & 0x800000) == 0)
      goto LABEL_33;
    goto LABEL_32;
  }
LABEL_70:
  v31 = *(_DWORD *)(a2 + 96);
  a1[37] |= 0x400000u;
  a1[24] = v31;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x800000) != 0)
  {
LABEL_32:
    v7 = *(_DWORD *)(a2 + 100);
    a1[37] |= 0x800000u;
    a1[25] = v7;
    v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_33:
  if (!HIBYTE(v4))
    goto LABEL_42;
  if ((v4 & 0x1000000) != 0)
  {
    v32 = *(_DWORD *)(a2 + 104);
    a1[37] |= 0x1000000u;
    a1[26] = v32;
    v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_36:
      if ((v4 & 0x4000000) == 0)
        goto LABEL_37;
      goto LABEL_74;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_36;
  }
  v33 = *(_DWORD *)(a2 + 108);
  a1[37] |= 0x2000000u;
  a1[27] = v33;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x8000000) == 0)
      goto LABEL_38;
    goto LABEL_75;
  }
LABEL_74:
  v34 = *(_DWORD *)(a2 + 112);
  a1[37] |= 0x4000000u;
  a1[28] = v34;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_38:
    if ((v4 & 0x10000000) == 0)
      goto LABEL_39;
    goto LABEL_76;
  }
LABEL_75:
  v35 = *(_DWORD *)(a2 + 116);
  a1[37] |= 0x8000000u;
  a1[29] = v35;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x20000000) == 0)
      goto LABEL_40;
    goto LABEL_77;
  }
LABEL_76:
  v36 = *(_DWORD *)(a2 + 120);
  a1[37] |= 0x10000000u;
  a1[30] = v36;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x40000000) == 0)
      goto LABEL_41;
LABEL_78:
    v38 = *(_DWORD *)(a2 + 128);
    a1[37] |= 0x40000000u;
    a1[32] = v38;
    if ((*(_DWORD *)(a2 + 148) & 0x80000000) == 0)
      goto LABEL_42;
    goto LABEL_79;
  }
LABEL_77:
  v37 = *(_DWORD *)(a2 + 124);
  a1[37] |= 0x20000000u;
  a1[31] = v37;
  v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x40000000) != 0)
    goto LABEL_78;
LABEL_41:
  if ((v4 & 0x80000000) == 0)
    goto LABEL_42;
LABEL_79:
  v39 = *(_DWORD *)(a2 + 132);
  a1[37] |= 0x80000000;
  a1[33] = v39;
LABEL_42:
  LOBYTE(v8) = *(_BYTE *)(a2 + 152);
  if ((_BYTE)v8)
  {
    if ((*(_BYTE *)(a2 + 152) & 1) != 0)
    {
      v9 = *(_DWORD *)(a2 + 136);
      a1[38] |= 1u;
      a1[34] = v9;
      v8 = *(_DWORD *)(a2 + 152);
    }
    if ((v8 & 2) != 0)
    {
      v10 = *(_DWORD *)(a2 + 140);
      a1[38] |= 2u;
      a1[35] = v10;
    }
  }
}

void sub_23915E824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23915E83C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A70F60;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23915E874(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23915E83C(a1);
  JUMPOUT(0x23B838844);
}

double sub_23915E898()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A70F60;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_DWORD *)(v0 + 152) = 0;
  return result;
}

uint64_t sub_23915E8F8(uint64_t result)
{
  unsigned int v1;

  v1 = *(_DWORD *)(result + 148);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
  }
  if (HIBYTE(v1))
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
  }
  if (*(_BYTE *)(result + 152))
    *(_QWORD *)(result + 136) = 0;
  *(_QWORD *)(result + 148) = 0;
  return result;
}

uint64_t sub_23915E960(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  unsigned int v16;
  _BYTE *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  unsigned __int8 *v38;
  unsigned __int8 *v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  unint64_t v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  unsigned __int8 *v50;
  char *v51;
  unsigned int v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  unsigned int v56;
  _BYTE *v57;
  unsigned int v58;
  _BYTE *v59;
  unsigned int v60;
  _BYTE *v61;
  unsigned int v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  unsigned int v66;
  _BYTE *v67;
  unsigned int v68;
  _BYTE *v69;
  unsigned int v70;
  _BYTE *v71;
  unsigned int v72;
  _BYTE *v73;
  unsigned int v74;
  unsigned __int8 *v75;
  unsigned __int8 *v76;
  unsigned int v77;
  unsigned __int8 *v78;
  unsigned int v79;
  unsigned __int8 *v80;
  unsigned int v81;
  unsigned __int8 *v82;
  unsigned int v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  unsigned __int8 *v86;
  unsigned __int8 *v87;
  unsigned int v88;
  unsigned __int8 *v89;
  unsigned __int8 *v90;
  unsigned __int8 *v91;
  unsigned __int8 *v92;
  unsigned int v93;
  unsigned __int8 *v94;
  unsigned __int8 *v95;
  unsigned __int8 *v96;
  unsigned __int8 *v97;
  unsigned __int8 *v98;
  unsigned __int8 *v99;
  unsigned __int8 *v100;
  uint64_t result;
  unsigned int *v102;
  unsigned int *v103;
  unsigned int *v104;
  unsigned int *v105;
  unsigned int *v106;
  unsigned int *v107;
  unsigned int *v108;
  unsigned int *v109;
  unsigned int *v110;
  unsigned int *v111;
  unsigned int v112;

  v4 = a1 + 4;
  v5 = a1 + 5;
  v6 = a1 + 10;
  v7 = a1 + 11;
  v8 = a1 + 17;
  v110 = a1 + 23;
  v111 = a1 + 22;
  v108 = a1 + 26;
  v109 = a1 + 24;
  v106 = a1 + 28;
  v107 = a1 + 27;
  v104 = a1 + 31;
  v105 = a1 + 30;
  v102 = a1 + 33;
  v103 = a1 + 32;
  v9 = a1 + 34;
  v10 = a1 + 35;
  while (2)
  {
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v112 = 0;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          v16 = *v15;
          v17 = v15 + 1;
          *((_QWORD *)this + 1) = v17;
LABEL_84:
          a1[2] = v16;
          a1[37] |= 1u;
          if ((unint64_t)v17 < v14 && *v17 == 16)
          {
            v18 = v17 + 1;
            *((_QWORD *)this + 1) = v18;
            goto LABEL_87;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
        if ((_DWORD)result)
        {
          v16 = v112;
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          goto LABEL_84;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v18 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_87:
        v112 = 0;
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v52 = v112;
          v53 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v52 = *v18;
          v53 = v18 + 1;
          *((_QWORD *)this + 1) = v53;
        }
        a1[3] = v52;
        a1[37] |= 2u;
        if ((unint64_t)v53 >= v14 || *v53 != 24)
          continue;
        v19 = v53 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_95:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v54 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v19;
          v54 = v19 + 1;
          *((_QWORD *)this + 1) = v54;
        }
        a1[37] |= 4u;
        if ((unint64_t)v54 >= v14 || *v54 != 32)
          continue;
        v20 = v54 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_103:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v55 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v20;
          v55 = v20 + 1;
          *((_QWORD *)this + 1) = v55;
        }
        a1[37] |= 8u;
        if ((unint64_t)v55 >= v14 || *v55 != 40)
          continue;
        v21 = v55 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_111:
        v112 = 0;
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v56 = v112;
          v57 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v56 = *v21;
          v57 = v21 + 1;
          *((_QWORD *)this + 1) = v57;
        }
        a1[6] = v56;
        a1[37] |= 0x10u;
        if ((unint64_t)v57 >= v14 || *v57 != 48)
          continue;
        v22 = v57 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_119:
        v112 = 0;
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v58 = v112;
          v59 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v58 = *v22;
          v59 = v22 + 1;
          *((_QWORD *)this + 1) = v59;
        }
        a1[7] = v58;
        a1[37] |= 0x20u;
        if ((unint64_t)v59 >= v14 || *v59 != 56)
          continue;
        v23 = v59 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_127:
        v112 = 0;
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v60 = v112;
          v61 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v60 = *v23;
          v61 = v23 + 1;
          *((_QWORD *)this + 1) = v61;
        }
        a1[8] = v60;
        a1[37] |= 0x40u;
        if ((unint64_t)v61 >= v14 || *v61 != 64)
          continue;
        v24 = v61 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_135:
        v112 = 0;
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v62 = v112;
          v63 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v62 = *v24;
          v63 = v24 + 1;
          *((_QWORD *)this + 1) = v63;
        }
        a1[9] = v62;
        a1[37] |= 0x80u;
        if ((unint64_t)v63 >= v14 || *v63 != 72)
          continue;
        v25 = v63 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_143:
        if ((unint64_t)v25 >= v14 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v64 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v25;
          v64 = v25 + 1;
          *((_QWORD *)this + 1) = v64;
        }
        a1[37] |= 0x100u;
        if ((unint64_t)v64 >= v14 || *v64 != 80)
          continue;
        v26 = v64 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_151:
        if ((unint64_t)v26 >= v14 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v65 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v26;
          v65 = v26 + 1;
          *((_QWORD *)this + 1) = v65;
        }
        a1[37] |= 0x200u;
        if ((unint64_t)v65 >= v14 || *v65 != 88)
          continue;
        v27 = v65 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_159:
        v112 = 0;
        if ((unint64_t)v27 >= v14 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v66 = v112;
          v67 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v66 = *v27;
          v67 = v27 + 1;
          *((_QWORD *)this + 1) = v67;
        }
        a1[12] = v66;
        a1[37] |= 0x400u;
        if ((unint64_t)v67 >= v14 || *v67 != 96)
          continue;
        v28 = v67 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_167:
        v112 = 0;
        if ((unint64_t)v28 >= v14 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v68 = v112;
          v69 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v68 = *v28;
          v69 = v28 + 1;
          *((_QWORD *)this + 1) = v69;
        }
        a1[13] = v68;
        a1[37] |= 0x800u;
        if ((unint64_t)v69 >= v14 || *v69 != 104)
          continue;
        v29 = v69 + 1;
        *((_QWORD *)this + 1) = v29;
LABEL_175:
        v112 = 0;
        if ((unint64_t)v29 >= v14 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v70 = v112;
          v71 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v70 = *v29;
          v71 = v29 + 1;
          *((_QWORD *)this + 1) = v71;
        }
        a1[14] = v70;
        a1[37] |= 0x1000u;
        if ((unint64_t)v71 >= v14 || *v71 != 112)
          continue;
        v30 = v71 + 1;
        *((_QWORD *)this + 1) = v30;
LABEL_183:
        v112 = 0;
        if ((unint64_t)v30 >= v14 || *v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v72 = v112;
          v73 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v72 = *v30;
          v73 = v30 + 1;
          *((_QWORD *)this + 1) = v73;
        }
        a1[15] = v72;
        a1[37] |= 0x2000u;
        if ((unint64_t)v73 >= v14 || *v73 != 120)
          continue;
        v31 = v73 + 1;
        *((_QWORD *)this + 1) = v31;
LABEL_191:
        v112 = 0;
        if ((unint64_t)v31 >= v14 || (char)*v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v74 = v112;
          v75 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v74 = *v31;
          v75 = v31 + 1;
          *((_QWORD *)this + 1) = v75;
        }
        a1[16] = v74;
        a1[37] |= 0x4000u;
        if ((int)v14 - (int)v75 < 2 || *v75 != 128 || v75[1] != 1)
          continue;
        v32 = v75 + 2;
        *((_QWORD *)this + 1) = v32;
LABEL_200:
        if ((unint64_t)v32 >= v14 || (char)*v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v76 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v32;
          v76 = v32 + 1;
          *((_QWORD *)this + 1) = v76;
        }
        a1[37] |= 0x8000u;
        if ((int)v14 - (int)v76 < 2 || *v76 != 136 || v76[1] != 1)
          continue;
        v33 = v76 + 2;
        *((_QWORD *)this + 1) = v33;
LABEL_209:
        v112 = 0;
        if ((unint64_t)v33 >= v14 || (char)*v33 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v77 = v112;
          v78 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v77 = *v33;
          v78 = v33 + 1;
          *((_QWORD *)this + 1) = v78;
        }
        a1[18] = v77;
        a1[37] |= 0x10000u;
        if ((int)v14 - (int)v78 < 2 || *v78 != 144 || v78[1] != 1)
          continue;
        v34 = v78 + 2;
        *((_QWORD *)this + 1) = v34;
LABEL_218:
        v112 = 0;
        if ((unint64_t)v34 >= v14 || (char)*v34 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v79 = v112;
          v80 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v79 = *v34;
          v80 = v34 + 1;
          *((_QWORD *)this + 1) = v80;
        }
        a1[19] = v79;
        a1[37] |= 0x20000u;
        if ((int)v14 - (int)v80 < 2 || *v80 != 152 || v80[1] != 1)
          continue;
        v35 = v80 + 2;
        *((_QWORD *)this + 1) = v35;
LABEL_227:
        v112 = 0;
        if ((unint64_t)v35 >= v14 || (char)*v35 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v81 = v112;
          v82 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v81 = *v35;
          v82 = v35 + 1;
          *((_QWORD *)this + 1) = v82;
        }
        a1[20] = v81;
        a1[37] |= 0x40000u;
        if ((int)v14 - (int)v82 < 2 || *v82 != 160 || v82[1] != 1)
          continue;
        v36 = v82 + 2;
        *((_QWORD *)this + 1) = v36;
LABEL_236:
        v112 = 0;
        if ((unint64_t)v36 >= v14 || (char)*v36 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v83 = v112;
          v84 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v83 = *v36;
          v84 = v36 + 1;
          *((_QWORD *)this + 1) = v84;
        }
        a1[21] = v83;
        a1[37] |= 0x80000u;
        if ((int)v14 - (int)v84 < 2 || *v84 != 168 || v84[1] != 1)
          continue;
        v37 = v84 + 2;
        *((_QWORD *)this + 1) = v37;
LABEL_245:
        if ((unint64_t)v37 >= v14 || (char)*v37 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v111);
          if (!(_DWORD)result)
            return result;
          v85 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v111 = *v37;
          v85 = v37 + 1;
          *((_QWORD *)this + 1) = v85;
        }
        a1[37] |= 0x100000u;
        if ((int)v14 - (int)v85 < 2 || *v85 != 176 || v85[1] != 1)
          continue;
        v38 = v85 + 2;
        *((_QWORD *)this + 1) = v38;
LABEL_254:
        if ((unint64_t)v38 >= v14 || (char)*v38 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v110);
          if (!(_DWORD)result)
            return result;
          v86 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v110 = *v38;
          v86 = v38 + 1;
          *((_QWORD *)this + 1) = v86;
        }
        a1[37] |= 0x200000u;
        if ((int)v14 - (int)v86 < 2 || *v86 != 184 || v86[1] != 1)
          continue;
        v39 = v86 + 2;
        *((_QWORD *)this + 1) = v39;
LABEL_263:
        if ((unint64_t)v39 >= v14 || (char)*v39 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v109);
          if (!(_DWORD)result)
            return result;
          v87 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v109 = *v39;
          v87 = v39 + 1;
          *((_QWORD *)this + 1) = v87;
        }
        a1[37] |= 0x400000u;
        if ((int)v14 - (int)v87 < 2 || *v87 != 192 || v87[1] != 1)
          continue;
        v40 = v87 + 2;
        *((_QWORD *)this + 1) = v40;
LABEL_272:
        v112 = 0;
        if ((unint64_t)v40 >= v14 || (char)*v40 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v88 = v112;
          v89 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          v88 = *v40;
          v89 = v40 + 1;
          *((_QWORD *)this + 1) = v89;
        }
        a1[25] = v88;
        a1[37] |= 0x800000u;
        if ((int)v14 - (int)v89 < 2 || *v89 != 200 || v89[1] != 1)
          continue;
        v41 = v89 + 2;
        *((_QWORD *)this + 1) = v41;
LABEL_281:
        v42 = *((_QWORD *)this + 2);
        if ((unint64_t)v41 >= v42 || (char)*v41 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!(_DWORD)result)
            return result;
          v90 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v42 = *((_QWORD *)this + 2);
        }
        else
        {
          *v108 = *v41;
          v90 = v41 + 1;
          *((_QWORD *)this + 1) = v90;
        }
        a1[37] |= 0x1000000u;
        if ((int)v42 - (int)v90 < 2 || *v90 != 208 || v90[1] != 1)
          continue;
        v43 = v90 + 2;
        *((_QWORD *)this + 1) = v43;
LABEL_290:
        if ((unint64_t)v43 >= v42 || (char)*v43 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v107);
          if (!(_DWORD)result)
            return result;
          v91 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v42 = *((_QWORD *)this + 2);
        }
        else
        {
          *v107 = *v43;
          v91 = v43 + 1;
          *((_QWORD *)this + 1) = v91;
        }
        a1[37] |= 0x2000000u;
        if ((int)v42 - (int)v91 < 2 || *v91 != 216 || v91[1] != 1)
          continue;
        v44 = v91 + 2;
        *((_QWORD *)this + 1) = v44;
LABEL_299:
        if ((unint64_t)v44 >= v42 || (char)*v44 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106);
          if (!(_DWORD)result)
            return result;
          v92 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v42 = *((_QWORD *)this + 2);
        }
        else
        {
          *v106 = *v44;
          v92 = v44 + 1;
          *((_QWORD *)this + 1) = v92;
        }
        a1[37] |= 0x4000000u;
        if ((int)v42 - (int)v92 < 2 || *v92 != 224 || v92[1] != 1)
          continue;
        v45 = v92 + 2;
        *((_QWORD *)this + 1) = v45;
LABEL_308:
        v112 = 0;
        if ((unint64_t)v45 >= v42 || (char)*v45 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!(_DWORD)result)
            return result;
          v93 = v112;
          v94 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v42 = *((_QWORD *)this + 2);
        }
        else
        {
          v93 = *v45;
          v94 = v45 + 1;
          *((_QWORD *)this + 1) = v94;
        }
        a1[29] = v93;
        a1[37] |= 0x8000000u;
        if ((int)v42 - (int)v94 < 2 || *v94 != 232 || v94[1] != 1)
          continue;
        v46 = v94 + 2;
        *((_QWORD *)this + 1) = v46;
LABEL_317:
        if ((unint64_t)v46 >= v42 || (char)*v46 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v105);
          if (!(_DWORD)result)
            return result;
          v95 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v42 = *((_QWORD *)this + 2);
        }
        else
        {
          *v105 = *v46;
          v95 = v46 + 1;
          *((_QWORD *)this + 1) = v95;
        }
        a1[37] |= 0x10000000u;
        if ((int)v42 - (int)v95 < 2 || *v95 != 240 || v95[1] != 1)
          continue;
        v47 = v95 + 2;
        *((_QWORD *)this + 1) = v47;
LABEL_326:
        if ((unint64_t)v47 >= v42 || (char)*v47 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v104);
          if (!(_DWORD)result)
            return result;
          v96 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v42 = *((_QWORD *)this + 2);
        }
        else
        {
          *v104 = *v47;
          v96 = v47 + 1;
          *((_QWORD *)this + 1) = v96;
        }
        a1[37] |= 0x20000000u;
        if ((int)v42 - (int)v96 < 2 || *v96 != 248 || v96[1] != 1)
          continue;
        v48 = v96 + 2;
        *((_QWORD *)this + 1) = v48;
LABEL_335:
        if ((unint64_t)v48 >= v42 || (char)*v48 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v103);
          if (!(_DWORD)result)
            return result;
          v97 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v42 = *((_QWORD *)this + 2);
        }
        else
        {
          *v103 = *v48;
          v97 = v48 + 1;
          *((_QWORD *)this + 1) = v97;
        }
        a1[37] |= 0x40000000u;
        if ((int)v42 - (int)v97 < 2 || *v97 != 128 || v97[1] != 2)
          continue;
        v49 = v97 + 2;
        *((_QWORD *)this + 1) = v49;
LABEL_344:
        if ((unint64_t)v49 >= v42 || (char)*v49 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v102);
          if (!(_DWORD)result)
            return result;
          v98 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v42 = *((_QWORD *)this + 2);
        }
        else
        {
          *v102 = *v49;
          v98 = v49 + 1;
          *((_QWORD *)this + 1) = v98;
        }
        a1[37] |= 0x80000000;
        if ((int)v42 - (int)v98 < 2 || *v98 != 136 || v98[1] != 2)
          continue;
        v50 = v98 + 2;
        *((_QWORD *)this + 1) = v50;
LABEL_353:
        if ((unint64_t)v50 >= v42 || (char)*v50 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v99 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v42 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v50;
          v99 = v50 + 1;
          *((_QWORD *)this + 1) = v99;
        }
        a1[38] |= 1u;
        if ((int)v42 - (int)v99 < 2 || *v99 != 144 || v99[1] != 2)
          continue;
        v51 = (char *)(v99 + 2);
        *((_QWORD *)this + 1) = v51;
LABEL_362:
        if ((unint64_t)v51 >= v42 || *v51 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v100 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v42 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v51;
          v100 = (unsigned __int8 *)(v51 + 1);
          *((_QWORD *)this + 1) = v100;
        }
        a1[38] |= 2u;
        if (v100 != (unsigned __int8 *)v42
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v19 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_95;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v20 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_103;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v21 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_111;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v22 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_119;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v23 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_127;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v24 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_135;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v25 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_143;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v26 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_151;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v27 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_159;
      case 0xCu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v28 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_167;
      case 0xDu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v29 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_175;
      case 0xEu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v30 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_183;
      case 0xFu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v31 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_191;
      case 0x10u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v32 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_200;
      case 0x11u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v33 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_209;
      case 0x12u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v34 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_218;
      case 0x13u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v35 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_227;
      case 0x14u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v36 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_236;
      case 0x15u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v37 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_245;
      case 0x16u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v38 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_254;
      case 0x17u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v39 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_263;
      case 0x18u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v40 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_272;
      case 0x19u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v41 = (unsigned __int8 *)*((_QWORD *)this + 1);
        goto LABEL_281;
      case 0x1Au:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v43 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v42 = *((_QWORD *)this + 2);
        goto LABEL_290;
      case 0x1Bu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v44 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v42 = *((_QWORD *)this + 2);
        goto LABEL_299;
      case 0x1Cu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v45 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v42 = *((_QWORD *)this + 2);
        goto LABEL_308;
      case 0x1Du:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v46 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v42 = *((_QWORD *)this + 2);
        goto LABEL_317;
      case 0x1Eu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v47 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v42 = *((_QWORD *)this + 2);
        goto LABEL_326;
      case 0x1Fu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v48 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v42 = *((_QWORD *)this + 2);
        goto LABEL_335;
      case 0x20u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v49 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v42 = *((_QWORD *)this + 2);
        goto LABEL_344;
      case 0x21u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v50 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v42 = *((_QWORD *)this + 2);
        goto LABEL_353;
      case 0x22u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_78;
        v51 = (char *)*((_QWORD *)this + 1);
        v42 = *((_QWORD *)this + 2);
        goto LABEL_362;
      default:
        v13 = TagFallback & 7;
LABEL_78:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *sub_23915FB68(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;

  v5 = result;
  v6 = result[37];
  if ((v6 & 1) != 0)
  {
    result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[37];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_39;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[37];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_40;
  }
LABEL_39:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[37];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_41;
  }
LABEL_40:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_42;
  }
LABEL_41:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_43;
  }
LABEL_42:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_44;
  }
LABEL_43:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_45;
  }
LABEL_44:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_46;
  }
LABEL_45:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_47;
  }
LABEL_46:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_48;
  }
LABEL_47:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_49;
  }
LABEL_48:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_50;
  }
LABEL_49:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_51;
  }
LABEL_50:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_52;
  }
LABEL_51:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v5[16], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_53;
  }
LABEL_52:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[17], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_54;
  }
LABEL_53:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[18], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_55;
  }
LABEL_54:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v5[19], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_56;
  }
LABEL_55:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v5[20], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_57;
  }
LABEL_56:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v5[21], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_58;
  }
LABEL_57:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v5[22], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_59;
  }
LABEL_58:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v5[23], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_60;
  }
LABEL_59:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v5[24], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_61;
  }
LABEL_60:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v5[25], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_62;
  }
LABEL_61:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v5[26], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_63;
  }
LABEL_62:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v5[27], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_64;
  }
LABEL_63:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v5[28], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_65;
  }
LABEL_64:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v5[29], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_66;
  }
LABEL_65:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v5[30], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_32;
LABEL_67:
    result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v5[32], a2, a4);
    if ((v5[37] & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_68;
  }
LABEL_66:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v5[31], a2, a4);
  v6 = v5[37];
  if ((v6 & 0x40000000) != 0)
    goto LABEL_67;
LABEL_32:
  if ((v6 & 0x80000000) == 0)
    goto LABEL_33;
LABEL_68:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, v5[33], a2, a4);
LABEL_33:
  v7 = v5[38];
  if ((v7 & 1) != 0)
  {
    result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, v5[34], a2, a4);
    v7 = v5[38];
  }
  if ((v7 & 2) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, v5[35], a2, a4);
  return result;
}

uint64_t sub_23915FF40(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v34;
  int v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  int v37;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v38;
  int v39;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v40;
  int v41;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v42;
  int v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  int v45;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v46;
  int v47;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v48;
  int v49;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v50;
  int v51;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v52;
  int v53;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v54;
  int v55;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v56;
  int v57;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v58;
  int v59;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v60;
  int v61;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v62;
  int v63;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v64;
  int v65;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v66;
  int v67;
  int v68;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v69;
  int v70;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v71;
  int v72;

  v2 = *(_DWORD *)(a1 + 148);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_57;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v9 = 1;
    }
    v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v11 = 1;
  }
  v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_39;
  }
LABEL_33:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v13 = 1;
  }
  v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_45;
  }
LABEL_39:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 10;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v15 = 1;
  }
  v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0)
      goto LABEL_57;
    goto LABEL_51;
  }
LABEL_45:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if ((v16 & 0x80000000) != 0)
  {
    v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v17 = 1;
  }
  v3 = (v3 + v17 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_51:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if ((v18 & 0x80000000) != 0)
    {
      v19 = 10;
    }
    else if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v19 = 1;
    }
    v3 = (v3 + v19 + 1);
  }
LABEL_57:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_109;
  if ((v2 & 0x100) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v21 = 1;
    }
    v3 = (v3 + v21 + 1);
    if ((v2 & 0x200) == 0)
    {
LABEL_60:
      if ((v2 & 0x400) == 0)
        goto LABEL_61;
      goto LABEL_75;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_60;
  }
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v23 = 1;
  }
  v3 = (v3 + v23 + 1);
  if ((v2 & 0x400) == 0)
  {
LABEL_61:
    if ((v2 & 0x800) == 0)
      goto LABEL_62;
    goto LABEL_81;
  }
LABEL_75:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if ((v24 & 0x80000000) != 0)
  {
    v25 = 10;
  }
  else if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v25 = 1;
  }
  v3 = (v3 + v25 + 1);
  if ((v2 & 0x800) == 0)
  {
LABEL_62:
    if ((v2 & 0x1000) == 0)
      goto LABEL_63;
    goto LABEL_87;
  }
LABEL_81:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v26 & 0x80000000) != 0)
  {
    v27 = 10;
  }
  else if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v27 = 1;
  }
  v3 = (v3 + v27 + 1);
  if ((v2 & 0x1000) == 0)
  {
LABEL_63:
    if ((v2 & 0x2000) == 0)
      goto LABEL_64;
    goto LABEL_93;
  }
LABEL_87:
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v28 & 0x80000000) != 0)
  {
    v29 = 10;
  }
  else if (v28 >= 0x80)
  {
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v29 = 1;
  }
  v3 = (v3 + v29 + 1);
  if ((v2 & 0x2000) == 0)
  {
LABEL_64:
    if ((v2 & 0x4000) == 0)
      goto LABEL_65;
    goto LABEL_99;
  }
LABEL_93:
  v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
  if ((v30 & 0x80000000) != 0)
  {
    v31 = 10;
  }
  else if (v30 >= 0x80)
  {
    v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v31 = 1;
  }
  v3 = (v3 + v31 + 1);
  if ((v2 & 0x4000) == 0)
  {
LABEL_65:
    if ((v2 & 0x8000) == 0)
      goto LABEL_109;
    goto LABEL_105;
  }
LABEL_99:
  v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
  if ((v32 & 0x80000000) != 0)
  {
    v33 = 10;
  }
  else if (v32 >= 0x80)
  {
    v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v33 = 1;
  }
  v3 = (v3 + v33 + 1);
  if ((v2 & 0x8000) != 0)
  {
LABEL_105:
    v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
    if (v34 >= 0x80)
    {
      v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34);
      v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v35 = 1;
    }
    v3 = (v3 + v35 + 2);
  }
LABEL_109:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_161;
  if ((v2 & 0x10000) != 0)
  {
    v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v36 & 0x80000000) != 0)
    {
      v37 = 10;
    }
    else if (v36 >= 0x80)
    {
      v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
      v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v37 = 1;
    }
    v3 = (v3 + v37 + 2);
    if ((v2 & 0x20000) == 0)
    {
LABEL_112:
      if ((v2 & 0x40000) == 0)
        goto LABEL_113;
      goto LABEL_131;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_112;
  }
  v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
  if ((v38 & 0x80000000) != 0)
  {
    v39 = 10;
  }
  else if (v38 >= 0x80)
  {
    v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v39 = 1;
  }
  v3 = (v3 + v39 + 2);
  if ((v2 & 0x40000) == 0)
  {
LABEL_113:
    if ((v2 & 0x80000) == 0)
      goto LABEL_114;
    goto LABEL_137;
  }
LABEL_131:
  v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
  if ((v40 & 0x80000000) != 0)
  {
    v41 = 10;
  }
  else if (v40 >= 0x80)
  {
    v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v41 = 1;
  }
  v3 = (v3 + v41 + 2);
  if ((v2 & 0x80000) == 0)
  {
LABEL_114:
    if ((v2 & 0x100000) == 0)
      goto LABEL_115;
    goto LABEL_143;
  }
LABEL_137:
  v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
  if ((v42 & 0x80000000) != 0)
  {
    v43 = 10;
  }
  else if (v42 >= 0x80)
  {
    v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v43 = 1;
  }
  v3 = (v3 + v43 + 2);
  if ((v2 & 0x100000) == 0)
  {
LABEL_115:
    if ((v2 & 0x200000) == 0)
      goto LABEL_116;
    goto LABEL_147;
  }
LABEL_143:
  v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
  if (v44 >= 0x80)
  {
    v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v45 = 1;
  }
  v3 = (v3 + v45 + 2);
  if ((v2 & 0x200000) == 0)
  {
LABEL_116:
    if ((v2 & 0x400000) == 0)
      goto LABEL_117;
    goto LABEL_151;
  }
LABEL_147:
  v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 92);
  if (v46 >= 0x80)
  {
    v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v47 = 1;
  }
  v3 = (v3 + v47 + 2);
  if ((v2 & 0x400000) == 0)
  {
LABEL_117:
    if ((v2 & 0x800000) == 0)
      goto LABEL_161;
    goto LABEL_155;
  }
LABEL_151:
  v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if (v48 >= 0x80)
  {
    v49 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v49 = 1;
  }
  v3 = (v3 + v49 + 2);
  if ((v2 & 0x800000) != 0)
  {
LABEL_155:
    v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
    if ((v50 & 0x80000000) != 0)
    {
      v51 = 10;
    }
    else if (v50 >= 0x80)
    {
      v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50);
      v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v51 = 1;
    }
    v3 = (v3 + v51 + 2);
  }
LABEL_161:
  if (!HIBYTE(v2))
    goto LABEL_205;
  if ((v2 & 0x1000000) != 0)
  {
    v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 104);
    if (v52 >= 0x80)
    {
      v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
      v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      v53 = 1;
    }
    v3 = (v3 + v53 + 2);
    if ((v2 & 0x2000000) == 0)
    {
LABEL_164:
      if ((v2 & 0x4000000) == 0)
        goto LABEL_165;
      goto LABEL_179;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_164;
  }
  v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 108);
  if (v54 >= 0x80)
  {
    v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v54);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v55 = 1;
  }
  v3 = (v3 + v55 + 2);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_165:
    if ((v2 & 0x8000000) == 0)
      goto LABEL_166;
    goto LABEL_183;
  }
LABEL_179:
  v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 112);
  if (v56 >= 0x80)
  {
    v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56);
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v57 = 1;
  }
  v3 = (v3 + v57 + 2);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_166:
    if ((v2 & 0x10000000) == 0)
      goto LABEL_167;
    goto LABEL_189;
  }
LABEL_183:
  v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 116);
  if ((v58 & 0x80000000) != 0)
  {
    v59 = 12;
  }
  else if (v58 >= 0x80)
  {
    v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58) + 2;
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v59 = 3;
  }
  v3 = (v59 + v3);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_167:
    if ((v2 & 0x20000000) == 0)
      goto LABEL_168;
    goto LABEL_193;
  }
LABEL_189:
  v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
  if (v60 >= 0x80)
  {
    v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60) + 2;
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v61 = 3;
  }
  v3 = (v61 + v3);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_168:
    if ((v2 & 0x40000000) == 0)
      goto LABEL_169;
    goto LABEL_197;
  }
LABEL_193:
  v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 124);
  if (v62 >= 0x80)
  {
    v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62) + 2;
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v63 = 3;
  }
  v3 = (v63 + v3);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_169:
    if ((v2 & 0x80000000) == 0)
      goto LABEL_205;
    goto LABEL_201;
  }
LABEL_197:
  v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 128);
  if (v64 >= 0x80)
  {
    v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64) + 2;
    v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    v65 = 3;
  }
  v3 = (v65 + v3);
  if ((v2 & 0x80000000) != 0)
  {
LABEL_201:
    v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 132);
    if (v66 >= 0x80)
      v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66) + 2;
    else
      v67 = 3;
    v3 = (v67 + v3);
  }
LABEL_205:
  LOBYTE(v68) = *(_BYTE *)(a1 + 152);
  if ((_BYTE)v68)
  {
    if ((*(_BYTE *)(a1 + 152) & 1) != 0)
    {
      v69 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 136);
      if (v69 >= 0x80)
      {
        v70 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v69) + 2;
        v68 = *(_DWORD *)(a1 + 152);
      }
      else
      {
        v70 = 3;
      }
      v3 = (v70 + v3);
    }
    if ((v68 & 2) != 0)
    {
      v71 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
      if (v71 >= 0x80)
        v72 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v71) + 2;
      else
        v72 = 3;
      v3 = (v72 + v3);
    }
  }
  *(_DWORD *)(a1 + 144) = v3;
  return v3;
}

void sub_23916062C(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71E98, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23915E35C(a1, (uint64_t)lpsrc);
}

uint64_t sub_239160694()
{
  return 1;
}

_QWORD *sub_23916069C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.GpsEphemeris");
}

void sub_2391606AC(int *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  _BYTE v17[48];

  if ((int *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (*(int *)(a2 + 16) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v4);
      v6 = a1[5];
      v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          v6 = a1[5];
        }
        a1[5] = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_250A70F60;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *(_OWORD *)(v9 + 56) = 0u;
        *(_OWORD *)(v9 + 72) = 0u;
        *(_OWORD *)(v9 + 88) = 0u;
        *(_OWORD *)(v9 + 104) = 0u;
        *(_OWORD *)(v9 + 120) = 0u;
        *(_OWORD *)(v9 + 136) = 0u;
        *(_DWORD *)(v9 + 152) = 0;
        v10 = *((_QWORD *)a1 + 1);
        v11 = a1[4];
        a1[4] = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)a1 + 1);
        a1[4] = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      sub_23915E35C((_DWORD *)v9, v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  LOBYTE(v12) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v12)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      v13 = *(_DWORD *)(a2 + 32);
      a1[13] |= 1u;
      a1[8] = v13;
      v12 = *(_DWORD *)(a2 + 52);
    }
    if ((v12 & 4) != 0)
    {
      v14 = *(_DWORD *)(a2 + 36);
      if (v14 >= 6)
        __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 24528, "::CoreGem::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
      a1[13] |= 4u;
      a1[9] = v14;
      v12 = *(_DWORD *)(a2 + 52);
    }
    if ((v12 & 8) != 0)
    {
      v15 = *(_DWORD *)(a2 + 40);
      if (v15 >= 7)
        __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 24551, "::CoreGem::proto::gnss::Emergency::PosProtocol_IsValid(value)");
      a1[13] |= 8u;
      a1[10] = v15;
      v12 = *(_DWORD *)(a2 + 52);
    }
    if ((v12 & 0x10) != 0)
    {
      v16 = *(_DWORD *)(a2 + 44);
      a1[13] |= 0x10u;
      a1[11] = v16;
    }
  }
}

void sub_2391608E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391608F8(uint64_t a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = &off_250A70FD8;
  sub_239131728();
  v2 = *(_DWORD *)(a1 + 20);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *(_DWORD *)(a1 + 20);
      }
    }
  }
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    MEMORY[0x23B838820](v5, 0x80C80B8603338);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_239160984(uint64_t a1)
{
  sub_2391608F8(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_2391609A8()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A70FD8;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_2391609EC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(_BYTE *)(result + 52))
  {
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 40) = 0;
  }
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_239160A50(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  char *v10;
  unint64_t v11;
  _BYTE *v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  uint64_t result;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int v27;
  int v28;
  int v29;
  BOOL v30;
  int v31;
  int v32;
  unsigned int v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  unsigned __int8 *v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;

  v4 = a1 + 8;
  v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  v6 = a1 + 11;
LABEL_2:
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v10 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v10;
          v12 = v10 + 1;
          *((_QWORD *)this + 1) = v12;
        }
        a1[13] |= 1u;
        if ((unint64_t)v12 >= v11 || *v12 != 18)
          continue;
        goto LABEL_28;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_20;
        while (2)
        {
          v20 = a1[5];
          v21 = (int)a1[4];
          if ((int)v21 >= v20)
          {
            if (v20 == a1[6])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
              v20 = a1[5];
            }
            a1[5] = v20 + 1;
            v23 = operator new();
            *(_QWORD *)v23 = &off_250A70F60;
            *(_OWORD *)(v23 + 8) = 0u;
            *(_OWORD *)(v23 + 24) = 0u;
            *(_OWORD *)(v23 + 40) = 0u;
            *(_OWORD *)(v23 + 56) = 0u;
            *(_OWORD *)(v23 + 72) = 0u;
            *(_OWORD *)(v23 + 88) = 0u;
            *(_OWORD *)(v23 + 104) = 0u;
            *(_OWORD *)(v23 + 120) = 0u;
            *(_OWORD *)(v23 + 136) = 0u;
            *(_DWORD *)(v23 + 152) = 0;
            v24 = *((_QWORD *)a1 + 1);
            v25 = (int)a1[4];
            a1[4] = v25 + 1;
            *(_QWORD *)(v24 + 8 * v25) = v23;
          }
          else
          {
            v22 = *((_QWORD *)a1 + 1);
            a1[4] = v21 + 1;
            v23 = *(_QWORD *)(v22 + 8 * v21);
          }
          v40 = 0;
          v26 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v26 >= *((_QWORD *)this + 2) || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40))return 0;
          }
          else
          {
            v40 = *v26;
            *((_QWORD *)this + 1) = v26 + 1;
          }
          v27 = *((_DWORD *)this + 14);
          v28 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v27 + 1;
          if (v27 < v28)
          {
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
            if (sub_23915E960((unsigned int *)v23, this))
            {
              if (*((_BYTE *)this + 36))
              {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
                v29 = *((_DWORD *)this + 14);
                v30 = __OFSUB__(v29, 1);
                v31 = v29 - 1;
                if (v31 < 0 == v30)
                  *((_DWORD *)this + 14) = v31;
                v12 = (_BYTE *)*((_QWORD *)this + 1);
                v14 = *((_QWORD *)this + 2);
                if ((unint64_t)v12 < v14)
                {
                  v32 = *v12;
                  if (v32 == 18)
                  {
LABEL_28:
                    *((_QWORD *)this + 1) = v12 + 1;
                    continue;
                  }
                  if (v32 == 24)
                  {
                    v13 = v12 + 1;
                    *((_QWORD *)this + 1) = v13;
LABEL_47:
                    v39 = 0;
                    if ((unint64_t)v13 >= v14 || *v13 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
                      if (!(_DWORD)result)
                        return result;
                      v33 = v39;
                    }
                    else
                    {
                      v33 = *v13;
                      *((_QWORD *)this + 1) = v13 + 1;
                    }
                    if (v33 <= 5)
                    {
                      a1[13] |= 4u;
                      a1[9] = v33;
                    }
                    v34 = (_BYTE *)*((_QWORD *)this + 1);
                    v15 = *((_QWORD *)this + 2);
                    if ((unint64_t)v34 < v15 && *v34 == 32)
                    {
                      v16 = v34 + 1;
                      *((_QWORD *)this + 1) = v16;
LABEL_57:
                      v38 = 0;
                      if ((unint64_t)v16 >= v15 || *v16 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38);
                        if (!(_DWORD)result)
                          return result;
                        v35 = v38;
                      }
                      else
                      {
                        v35 = *v16;
                        *((_QWORD *)this + 1) = v16 + 1;
                      }
                      if (v35 <= 6)
                      {
                        a1[13] |= 8u;
                        a1[10] = v35;
                      }
                      v36 = (_BYTE *)*((_QWORD *)this + 1);
                      v17 = *((_QWORD *)this + 2);
                      if ((unint64_t)v36 < v17 && *v36 == 40)
                      {
                        v18 = v36 + 1;
                        *((_QWORD *)this + 1) = v18;
LABEL_67:
                        if ((unint64_t)v18 >= v17 || *v18 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                          if (!(_DWORD)result)
                            return result;
                          v37 = (unsigned __int8 *)*((_QWORD *)this + 1);
                          v17 = *((_QWORD *)this + 2);
                        }
                        else
                        {
                          *v6 = *v18;
                          v37 = (unsigned __int8 *)(v18 + 1);
                          *((_QWORD *)this + 1) = v37;
                        }
                        a1[13] |= 0x10u;
                        if (v37 == (unsigned __int8 *)v17
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + 8) = 0;
                          result = 1;
                          *((_BYTE *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
                goto LABEL_2;
              }
            }
          }
          return 0;
        }
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v13 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_47;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_57;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v18 = (char *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        goto LABEL_67;
      default:
        v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_239160EA4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  v5 = result;
  if ((*(_BYTE *)(result + 52) & 1) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 32), (uint64_t)a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 4) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
    v7 = *(_DWORD *)(v5 + 52);
    if ((v7 & 8) == 0)
    {
LABEL_8:
      if ((v7 & 0x10) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
    }
  }
  else if ((v7 & 8) == 0)
  {
    goto LABEL_8;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  return result;
}

uint64_t sub_239160F74(uint64_t a1)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;

  LOBYTE(v2) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_29;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 52);
      if ((v2 & 4) == 0)
        goto LABEL_16;
    }
    else
    {
      v3 = 2;
      if ((v2 & 4) == 0)
        goto LABEL_16;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      goto LABEL_16;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_16:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 0x10) == 0)
      goto LABEL_29;
    goto LABEL_25;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v8 = 2;
  }
  v3 += v8;
  if ((v2 & 0x10) != 0)
  {
LABEL_25:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v9 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    else
      v10 = 2;
    v3 += v10;
  }
LABEL_29:
  v11 = *(_DWORD *)(a1 + 16);
  v12 = (v11 + v3);
  if (v11 >= 1)
  {
    v13 = 0;
    do
    {
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915FF40(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v13));
      v15 = (int)v14;
      if (v14 >= 0x80)
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      else
        v16 = 1;
      v12 = (v15 + v12 + v16);
      ++v13;
    }
    while (v13 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 48) = v12;
  return v12;
}

void sub_2391610CC(int *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71EB0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391606AC(a1, (uint64_t)lpsrc);
}

uint64_t sub_239161134()
{
  return 1;
}

_QWORD *sub_23916113C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.GpsNavigationModel");
}

void sub_23916114C(uint64_t a1, uint64_t a2)
{
  char v4;
  _BYTE v5[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    v4 = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_BYTE *)(a1 + 8) = v4;
  }
}

void sub_2391611D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391611EC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A71050;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239161224(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_2391611EC(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_239161248()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A71050;
  *(_BYTE *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_239161284(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_BYTE *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_239161298(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  unint64_t v6;
  char *v7;
  unsigned int v8;
  unsigned __int8 *v9;
  uint64_t result;
  unsigned int v11;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v11 = 0;
      v7 = (char *)*((_QWORD *)this + 1);
      v6 = *((_QWORD *)this + 2);
      if ((unint64_t)v7 >= v6 || *v7 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!(_DWORD)result)
          return result;
        v8 = v11;
        v9 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v6 = *((_QWORD *)this + 2);
      }
      else
      {
        v8 = *v7;
        v9 = (unsigned __int8 *)(v7 + 1);
        *((_QWORD *)this + 1) = v9;
      }
      *(_BYTE *)(a1 + 8) = v8 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v9 == (unsigned __int8 *)v6 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_2391613B4(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_2391613D0(uint64_t a1)
{
  uint64_t v1;

  if (*(_DWORD *)(a1 + 16))
    v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  else
    v1 = 0;
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_2391613EC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71EC8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23916114C(a1, (uint64_t)lpsrc);
}

uint64_t sub_239161454()
{
  return 1;
}

_QWORD *sub_23916145C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.CplaneConfig");
}

_QWORD *sub_23916146C(_QWORD *a1, uint64_t a2)
{
  *a1 = &off_250A710C8;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  sub_2391614B4((uint64_t)a1, a2);
  return a1;
}

void sub_2391614A0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void sub_2391614B4(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      v5 = *(_QWORD *)(a1 + 8);
      if (!v5)
      {
        v5 = operator new();
        *(_WORD *)(v5 + 16) = 0;
        *(_QWORD *)v5 = &off_250A6EAD0;
        *(_QWORD *)(v5 + 8) = 0;
        *(_DWORD *)(v5 + 20) = 0;
        *(_DWORD *)(v5 + 24) = 0;
        *(_QWORD *)(a1 + 8) = v5;
      }
      v6 = *(_QWORD *)(a2 + 8);
      if (!v6)
      {
        sub_239131728();
        v6 = *(_QWORD *)(qword_2542CF690 + 8);
      }
      sub_2391317B0(v5, v6);
      v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      v7 = *(_QWORD *)(a1 + 16);
      if (!v7)
      {
        v7 = operator new();
        *(_QWORD *)v7 = &off_250A716E0;
        *(_QWORD *)(v7 + 8) = 0;
        *(_DWORD *)(v7 + 16) = 0;
        *(_QWORD *)(a1 + 16) = v7;
      }
      v8 = *(_BYTE **)(a2 + 16);
      if (!v8)
      {
        sub_239131728();
        v8 = *(_BYTE **)(qword_2542CF690 + 16);
      }
      sub_239161BF8(v7, v8);
    }
  }
}

void sub_239161608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239161620(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A710C8;
  sub_239161654((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239161654(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_239131728();
  if (qword_2542CF690 != a1)
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *(_QWORD *)(a1 + 16);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

void sub_2391616B8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239161620(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_2391616DC()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_250A710C8;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_239161714(uint64_t result)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  LOBYTE(v1) = *(_BYTE *)(result + 28);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(result + 28) & 1) != 0)
    {
      v2 = *(_QWORD *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(_WORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        v1 = *(_DWORD *)(result + 28);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 16))
          *(_DWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 16) = 0;
      }
    }
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_239161764(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_239161778(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t result;
  unsigned int v22;
  unsigned int v23;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_17;
        *(_DWORD *)(a1 + 28) |= 1u;
        v7 = *(_QWORD *)(a1 + 8);
        if (!v7)
        {
          v7 = operator new();
          *(_WORD *)(v7 + 16) = 0;
          *(_QWORD *)v7 = &off_250A6EAD0;
          *(_QWORD *)(v7 + 8) = 0;
          *(_DWORD *)(v7 + 20) = 0;
          *(_DWORD *)(v7 + 24) = 0;
          *(_QWORD *)(a1 + 8) = v7;
        }
        v22 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))return 0;
        }
        else
        {
          v22 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)this + 14);
        v10 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239131948(v7, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v11 = *((_DWORD *)this + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)this + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v14 < *((_QWORD *)this + 2) && *v14 == 18)
        {
          *((_QWORD *)this + 1) = v14 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v6 = TagFallback & 7;
      if (v6 != 2)
        goto LABEL_17;
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      v15 = *(_QWORD *)(a1 + 16);
      if (!v15)
      {
        v15 = operator new();
        *(_QWORD *)v15 = &off_250A716E0;
        *(_QWORD *)(v15 + 8) = 0;
        *(_DWORD *)(v15 + 16) = 0;
        *(_QWORD *)(a1 + 16) = v15;
      }
      v23 = 0;
      v16 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v16 >= *((_QWORD *)this + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))return 0;
      }
      else
      {
        v23 = *v16;
        *((_QWORD *)this + 1) = v16 + 1;
      }
      v17 = *((_DWORD *)this + 14);
      v18 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v17 + 1;
      if (v17 >= v18)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
      if (!sub_2391687D4(v15, this) || !*((_BYTE *)this + 36))
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
      v19 = *((_DWORD *)this + 14);
      v12 = __OFSUB__(v19, 1);
      v20 = v19 - 1;
      if (v20 < 0 == v12)
        *((_DWORD *)this + 14) = v20;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v6 = TagFallback & 7;
LABEL_17:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_239161A50(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      return result;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(result + 8);
  if (!v7)
  {
    sub_239131728();
    v7 = *(_QWORD *)(qword_2542CF690 + 8);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    v8 = *(_QWORD *)(v5 + 16);
    if (!v8)
    {
      sub_239131728();
      v8 = *(_QWORD *)(qword_2542CF690 + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_239161AD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  if (!*(_BYTE *)(a1 + 28))
  {
    v2 = 0;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) == 0)
  {
    v2 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_19;
    goto LABEL_16;
  }
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
  {
    sub_239131728();
    v3 = *(_QWORD *)(qword_2542CF690 + 8);
  }
  v4 = *(_DWORD *)(v3 + 24);
  v5 = 2 * (v4 & 1);
  if ((v4 & 2) != 0)
    v5 += 2;
  if ((v4 & 4) != 0)
    v5 |= 9u;
  if (*(_DWORD *)(v3 + 24))
    v6 = v5;
  else
    v6 = 0;
  *(_DWORD *)(v3 + 20) = v6;
  v2 = (v6 + 2);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_16:
    v7 = *(_QWORD *)(a1 + 16);
    if (!v7)
    {
      sub_239131728();
      v7 = *(_QWORD *)(qword_2542CF690 + 16);
    }
    v2 = v2 + sub_239168B3C(v7) + 2;
  }
LABEL_19:
  *(_DWORD *)(a1 + 24) = v2;
  return v2;
}

void sub_239161B90(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71EE0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391614B4(a1, (uint64_t)lpsrc);
}

void sub_239161BF8(uint64_t a1, _BYTE *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  _BYTE v9[48];

  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if ((a2[16] & 1) != 0)
    {
      v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + 8) = v6;
      v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_BYTE *)(a1 + 9) = v7;
    v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(_BYTE *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0)
      return;
LABEL_8:
    v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(_BYTE *)(a1 + 11) = v5;
  }
}

void sub_239161CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239161D00()
{
  return 1;
}

_QWORD *sub_239161D08@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.CplaneContext");
}

void sub_239161D18(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  const std::string *v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v4)
    return;
  if ((*(_BYTE *)(a2 + 40) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 40) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    v6 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 40) |= 2u;
    v7 = *(std::string **)(a1 + 8);
    if (v7 == (std::string *)MEMORY[0x24BEDD958])
    {
      v7 = (std::string *)operator new();
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      *(_QWORD *)(a1 + 8) = v7;
    }
    std::string::operator=(v7, v6);
    v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  v5 = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(_BYTE *)(a1 + 32) = v5;
  v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v4 & 4) == 0)
    goto LABEL_7;
LABEL_13:
  *(_DWORD *)(a1 + 40) |= 4u;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
    v8 = operator new();
    *(_QWORD *)v8 = &off_250A71050;
    *(_BYTE *)(v8 + 8) = 0;
    *(_DWORD *)(v8 + 12) = 0;
    *(_DWORD *)(v8 + 16) = 0;
    *(_QWORD *)(a1 + 16) = v8;
  }
  v9 = *(_QWORD *)(a2 + 16);
  if (!v9)
  {
    sub_239131728();
    v9 = *(_QWORD *)(qword_2542CF678 + 16);
  }
  sub_23916114C(v8, v9);
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_18:
    *(_DWORD *)(a1 + 40) |= 8u;
    v10 = *(_QWORD **)(a1 + 24);
    if (!v10)
    {
      v10 = (_QWORD *)operator new();
      v11 = MEMORY[0x24BEDD958];
      *v10 = &off_250A6EBC0;
      v10[1] = v11;
      v10[2] = 0;
      v10[3] = 0;
      *(_QWORD *)(a1 + 24) = v10;
    }
    v12 = *(_QWORD *)(a2 + 24);
    if (!v12)
    {
      sub_239131728();
      v12 = *(_QWORD *)(qword_2542CF678 + 24);
    }
    sub_239132F60((uint64_t)v10, v12);
  }
}

void sub_239161EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239161F10(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = &off_250A71140;
  v2 = *((_QWORD *)a1 + 1);
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x23B838844](v2, 0x1012C40EC159624);
  }
  sub_239131728();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF678 != a1)
  {
    v4 = *((_QWORD *)a1 + 2);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)a1 + 3);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239161FC0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239161F10(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_239161FE4()
{
  uint64_t result;
  uint64_t v1;

  result = operator new();
  *(_BYTE *)(result + 32) = 0;
  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)result = &off_250A71140;
  *(_QWORD *)(result + 8) = v1;
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_23916202C(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v1 = result;
  v2 = *(_BYTE *)(result + 40);
  if (v2)
  {
    *(_BYTE *)(result + 32) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(result + 8);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    v4 = *(_DWORD *)(result + 40);
    if ((v4 & 4) != 0)
    {
      v5 = *(_QWORD *)(result + 16);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 16))
          *(_BYTE *)(v5 + 8) = 0;
        *(_DWORD *)(v5 + 16) = 0;
        v4 = *(_DWORD *)(result + 40);
      }
    }
    if ((v4 & 8) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
        result = sub_2391331C8(result);
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_2391620C4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  int v12;
  uint64_t result;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  _BYTE *v23;
  _QWORD *v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;

  v4 = MEMORY[0x24BEDD958];
  while (1)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 < *((_QWORD *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v30 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30);
          if (!(_DWORD)result)
            return result;
          v10 = v30;
          v11 = (_BYTE *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v10 = *v9;
          v11 = v9 + 1;
          *((_QWORD *)this + 1) = v11;
        }
        *(_BYTE *)(a1 + 32) = v10 != 0;
        v12 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 40) = v12;
        if ((unint64_t)v11 < v8 && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        v12 = *(_DWORD *)(a1 + 40);
LABEL_26:
        *(_DWORD *)(a1 + 40) = v12 | 2;
        if (*(_QWORD *)(a1 + 8) == v4)
        {
          v14 = (_QWORD *)operator new();
          v14[1] = 0;
          v14[2] = 0;
          *v14 = 0;
          *(_QWORD *)(a1 + 8) = v14;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v15 >= *((_QWORD *)this + 2) || *v15 != 26)
          continue;
        *((_QWORD *)this + 1) = v15 + 1;
LABEL_32:
        *(_DWORD *)(a1 + 40) |= 4u;
        v16 = *(_QWORD *)(a1 + 16);
        if (!v16)
        {
          v16 = operator new();
          *(_QWORD *)v16 = &off_250A71050;
          *(_BYTE *)(v16 + 8) = 0;
          *(_DWORD *)(v16 + 12) = 0;
          *(_DWORD *)(v16 + 16) = 0;
          *(_QWORD *)(a1 + 16) = v16;
        }
        v31 = 0;
        v17 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0;
        }
        else
        {
          v31 = *v17;
          *((_QWORD *)this + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)this + 14);
        v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239161298(v16, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v20 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v20, 1);
        v22 = v20 - 1;
        if (v22 < 0 == v21)
          *((_DWORD *)this + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v23 >= *((_QWORD *)this + 2) || *v23 != 34)
          continue;
        *((_QWORD *)this + 1) = v23 + 1;
LABEL_46:
        *(_DWORD *)(a1 + 40) |= 8u;
        v24 = *(_QWORD **)(a1 + 24);
        if (!v24)
        {
          v24 = (_QWORD *)operator new();
          *v24 = &off_250A6EBC0;
          v24[1] = v4;
          v24[2] = 0;
          v24[3] = 0;
          *(_QWORD *)(a1 + 24) = v24;
        }
        v32 = 0;
        v25 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v25 >= *((_QWORD *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0;
        }
        else
        {
          v32 = *v25;
          *((_QWORD *)this + 1) = v25 + 1;
        }
        v26 = *((_DWORD *)this + 14);
        v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239133218((uint64_t)v24, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v28 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v28, 1);
        v29 = v28 - 1;
        if (v29 < 0 == v21)
          *((_DWORD *)this + 14) = v29;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_32;
        goto LABEL_18;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        goto LABEL_46;
      default:
        v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_2391624BC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 32), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    goto LABEL_11;
  }
LABEL_8:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
    sub_239131728();
    v7 = *(_QWORD *)(qword_2542CF678 + 16);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
  {
LABEL_11:
    v8 = *(_QWORD *)(v5 + 24);
    if (!v8)
    {
      sub_239131728();
      v8 = *(_QWORD *)(qword_2542CF678 + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  }
  return result;
}

uint64_t sub_239162578(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;

  v2 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  v3 = 2 * (v2 & 1u);
  if ((v2 & 2) != 0)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 8);
    if ((v5 & 0x80u) == 0)
      v8 = *(unsigned __int8 *)(v4 + 23);
    else
      v8 = v7;
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v7 = *(_QWORD *)(v4 + 8);
      v2 = *(_DWORD *)(a1 + 40);
      v6 = *(_BYTE *)(v4 + 23);
    }
    else
    {
      v9 = 1;
    }
    if (v6 < 0)
      v5 = v7;
    v3 = (v3 | 1) + v9 + v5;
    if ((v2 & 4) == 0)
    {
LABEL_4:
      if ((v2 & 8) == 0)
        goto LABEL_28;
      goto LABEL_22;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_4;
  }
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
    sub_239131728();
    v10 = *(_QWORD *)(qword_2542CF678 + 16);
  }
  if (*(_DWORD *)(v10 + 16))
    v11 = 2 * (*(_DWORD *)(v10 + 16) & 1);
  else
    v11 = 0;
  *(_DWORD *)(v10 + 12) = v11;
  v3 = (v3 + v11 + 2);
  if ((*(_DWORD *)(a1 + 40) & 8) != 0)
  {
LABEL_22:
    v12 = *(_QWORD *)(a1 + 24);
    if (!v12)
    {
      sub_239131728();
      v12 = *(_QWORD *)(qword_2542CF678 + 24);
    }
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391336B8(v12);
    v14 = (int)v13;
    if (v13 >= 0x80)
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    else
      v15 = 1;
    v3 = (v3 + v14 + v15 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 36) = v3;
  return v3;
}

void sub_2391626A4(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71EF8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239161D18(a1, (uint64_t)lpsrc);
}

uint64_t sub_23916270C()
{
  return 1;
}

_QWORD *sub_239162714@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.EmergConfig");
}

void sub_239162724(_DWORD *a1, _DWORD *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  _BYTE v18[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  v4 = a2[16];
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v6 = a2[2];
    a1[16] |= 1u;
    a1[2] = v6;
    v4 = a2[16];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v7 = a2[3];
  a1[16] |= 2u;
  a1[3] = v7;
  v4 = a2[16];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  v8 = a2[4];
  a1[16] |= 4u;
  a1[4] = v8;
  v4 = a2[16];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  v9 = a2[5];
  a1[16] |= 8u;
  a1[5] = v9;
  v4 = a2[16];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_25:
    v11 = a2[7];
    a1[16] |= 0x20u;
    a1[7] = v11;
    v4 = a2[16];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  v10 = a2[6];
  a1[16] |= 0x10u;
  a1[6] = v10;
  v4 = a2[16];
  if ((v4 & 0x20) != 0)
    goto LABEL_25;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_26:
  v12 = a2[8];
  a1[16] |= 0x40u;
  a1[8] = v12;
  v4 = a2[16];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = a2[9];
    a1[16] |= 0x80u;
    a1[9] = v5;
    v4 = a2[16];
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v13 = a2[10];
    a1[16] |= 0x100u;
    a1[10] = v13;
    v4 = a2[16];
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v14 = a2[11];
  a1[16] |= 0x200u;
  a1[11] = v14;
  v4 = a2[16];
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
LABEL_31:
    v16 = a2[13];
    a1[16] |= 0x800u;
    a1[13] = v16;
    if ((a2[16] & 0x1000) == 0)
      return;
    goto LABEL_32;
  }
LABEL_30:
  v15 = a2[12];
  a1[16] |= 0x400u;
  a1[12] = v15;
  v4 = a2[16];
  if ((v4 & 0x800) != 0)
    goto LABEL_31;
LABEL_18:
  if ((v4 & 0x1000) == 0)
    return;
LABEL_32:
  v17 = a2[14];
  if (v17 >= 7)
    __assert_rtn("set_doppler_uncer_ext", "GnssEmergencyTypes.pb.h", 25158, "::CoreGem::proto::gnss::Emergency::GpsDopplerUncMpsExt_IsValid(value)");
  a1[16] |= 0x1000u;
  a1[14] = v17;
}

void sub_239162968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239162980(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A711B8;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_2391629B8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239162980(a1);
  JUMPOUT(0x23B838844);
}

double sub_2391629DC()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A711B8;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 52) = 0u;
  return result;
}

uint64_t sub_239162A24(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 64);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0;
    *(_DWORD *)(result + 56) = 0;
  }
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_239162A54(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  unsigned int v40;
  uint64_t result;
  unsigned int *v42;
  unsigned int *v43;
  unsigned int *v44;
  unsigned int *v45;
  unsigned int *v46;
  unsigned int v47;

  v42 = a1 + 2;
  v43 = a1 + 3;
  v44 = a1 + 4;
  v45 = a1 + 5;
  v46 = a1 + 6;
  v4 = a1 + 7;
  v5 = a1 + 8;
  v6 = a1 + 9;
  v7 = a1 + 10;
  v8 = a1 + 11;
  v9 = a1 + 12;
  v10 = a1 + 13;
  while (2)
  {
    v11 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v42 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)this + 1) = v16;
LABEL_42:
          a1[16] |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)this + 1) = v17;
            goto LABEL_45;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
          goto LABEL_42;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v17 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
LABEL_45:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v43 = *v17;
          v29 = v17 + 1;
          *((_QWORD *)this + 1) = v29;
        }
        a1[16] |= 2u;
        if ((unint64_t)v29 >= v14 || *v29 != 24)
          continue;
        v18 = v29 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_53:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v44 = *v18;
          v30 = v18 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        a1[16] |= 4u;
        if ((unint64_t)v30 >= v14 || *v30 != 32)
          continue;
        v19 = v30 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_61:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v45 = *v19;
          v31 = v19 + 1;
          *((_QWORD *)this + 1) = v31;
        }
        a1[16] |= 8u;
        if ((unint64_t)v31 >= v14 || *v31 != 40)
          continue;
        v20 = v31 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_69:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v46 = *v20;
          v32 = v20 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        a1[16] |= 0x10u;
        if ((unint64_t)v32 >= v14 || *v32 != 48)
          continue;
        v21 = v32 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_77:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v21;
          v33 = v21 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        a1[16] |= 0x20u;
        if ((unint64_t)v33 >= v14 || *v33 != 56)
          continue;
        v22 = v33 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_85:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v22;
          v34 = v22 + 1;
          *((_QWORD *)this + 1) = v34;
        }
        a1[16] |= 0x40u;
        if ((unint64_t)v34 >= v14 || *v34 != 64)
          continue;
        v23 = v34 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_93:
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v23;
          v35 = v23 + 1;
          *((_QWORD *)this + 1) = v35;
        }
        a1[16] |= 0x80u;
        if ((unint64_t)v35 >= v14 || *v35 != 72)
          continue;
        v24 = v35 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_101:
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v24;
          v36 = v24 + 1;
          *((_QWORD *)this + 1) = v36;
        }
        a1[16] |= 0x100u;
        if ((unint64_t)v36 >= v14 || *v36 != 80)
          continue;
        v25 = v36 + 1;
        *((_QWORD *)this + 1) = v25;
LABEL_109:
        if ((unint64_t)v25 >= v14 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v25;
          v37 = v25 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        a1[16] |= 0x200u;
        if ((unint64_t)v37 >= v14 || *v37 != 88)
          continue;
        v26 = v37 + 1;
        *((_QWORD *)this + 1) = v26;
LABEL_117:
        if ((unint64_t)v26 >= v14 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v9 = *v26;
          v38 = v26 + 1;
          *((_QWORD *)this + 1) = v38;
        }
        a1[16] |= 0x400u;
        if ((unint64_t)v38 >= v14 || *v38 != 96)
          continue;
        v27 = v38 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_125:
        if ((unint64_t)v27 >= v14 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v14 = *((_QWORD *)this + 2);
        }
        else
        {
          *v10 = *v27;
          v39 = v27 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        a1[16] |= 0x800u;
        if ((unint64_t)v39 >= v14 || *v39 != 104)
          continue;
        v28 = v39 + 1;
        *((_QWORD *)this + 1) = v28;
LABEL_133:
        v47 = 0;
        if ((unint64_t)v28 >= v14 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v47);
          if (!(_DWORD)result)
            return result;
          v40 = v47;
        }
        else
        {
          v40 = *v28;
          *((_QWORD *)this + 1) = v28 + 1;
        }
        if (v40 <= 6)
        {
          a1[16] |= 0x1000u;
          a1[14] = v40;
        }
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v18 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_53;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v19 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_61;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v20 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_69;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v21 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_77;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v22 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_85;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v23 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_93;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v24 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_101;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v25 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_109;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v26 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_117;
      case 0xCu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v27 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_125;
      case 0xDu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v28 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_133;
      default:
        v13 = TagFallback & 7;
LABEL_36:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *sub_239163150(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = result;
  v6 = result[16];
  if ((v6 & 1) != 0)
  {
    result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[16];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  v6 = v5[16];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_18;
  }
LABEL_17:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  v6 = v5[16];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_19;
  }
LABEL_18:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_19:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_21;
  }
LABEL_20:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_22;
  }
LABEL_21:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_23;
  }
LABEL_22:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_24;
  }
LABEL_23:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_25;
  }
LABEL_24:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_26;
  }
LABEL_25:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  v6 = v5[16];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      return result;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  }
LABEL_26:
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  if ((v5[16] & 0x1000) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  return result;
}

uint64_t sub_2391632E0(unsigned int *a1)
{
  unsigned int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;

  v2 = a1[16];
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_45;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = a1[16];
  }
  else
  {
    v5 = 1;
  }
  v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_10:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = a1[16];
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = a1[16];
    }
    else
    {
      v9 = 1;
    }
    v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    v2 = a1[16];
  }
  else
  {
    v11 = 1;
  }
  v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0)
      goto LABEL_18;
    goto LABEL_33;
  }
LABEL_29:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    v2 = a1[16];
  }
  else
  {
    v13 = 1;
  }
  v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0)
      goto LABEL_19;
    goto LABEL_37;
  }
LABEL_33:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = a1[16];
  }
  else
  {
    v15 = 1;
  }
  v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0)
      goto LABEL_45;
    goto LABEL_41;
  }
LABEL_37:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = a1[16];
  }
  else
  {
    v17 = 2;
  }
  v3 = (v17 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_41:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      v2 = a1[16];
    }
    else
    {
      v19 = 2;
    }
    v3 = (v19 + v3);
  }
LABEL_45:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_74;
  if ((v2 & 0x100) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      v2 = a1[16];
    }
    else
    {
      v21 = 2;
    }
    v3 = (v21 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_48:
      if ((v2 & 0x400) == 0)
        goto LABEL_49;
      goto LABEL_60;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    v2 = a1[16];
  }
  else
  {
    v23 = 2;
  }
  v3 = (v23 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0)
      goto LABEL_50;
    goto LABEL_64;
  }
LABEL_60:
  v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v24 >= 0x80)
  {
    v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    v2 = a1[16];
  }
  else
  {
    v25 = 2;
  }
  v3 = (v25 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000) == 0)
      goto LABEL_74;
    goto LABEL_68;
  }
LABEL_64:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if (v26 >= 0x80)
  {
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    v2 = a1[16];
  }
  else
  {
    v27 = 2;
  }
  v3 = (v27 + v3);
  if ((v2 & 0x1000) != 0)
  {
LABEL_68:
    v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
    if ((v28 & 0x80000000) != 0)
    {
      v29 = 11;
    }
    else if (v28 >= 0x80)
    {
      v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    }
    else
    {
      v29 = 2;
    }
    v3 = (v29 + v3);
  }
LABEL_74:
  a1[15] = v3;
  return v3;
}

void sub_239163564(_DWORD *a1, _DWORD *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71F10, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239162724(a1, lpsrc);
}

uint64_t sub_2391635CC()
{
  return 1;
}

_QWORD *sub_2391635D4@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.GpsAcqElement");
}

void sub_2391635E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _DWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  _BYTE v21[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24));
  if (*(int *)(a2 + 32) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_DWORD **)(*(_QWORD *)(a2 + 24) + 8 * v4);
      v6 = *(_DWORD *)(a1 + 36);
      v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24));
          v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_250A711B8;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *(_OWORD *)(v9 + 52) = 0u;
        v10 = *(_QWORD *)(a1 + 24);
        v11 = *(int *)(a1 + 32);
        *(_DWORD *)(a1 + 32) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *(_QWORD *)(a1 + 24);
        *(_DWORD *)(a1 + 32) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      sub_239162724((_DWORD *)v9, v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  LOBYTE(v12) = *(_BYTE *)(a2 + 68);
  if (!(_BYTE)v12)
    return;
  if ((*(_BYTE *)(a2 + 68) & 1) != 0)
  {
    v14 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 68) |= 1u;
    *(_DWORD *)(a1 + 8) = v14;
    v12 = *(_DWORD *)(a2 + 68);
    if ((v12 & 2) == 0)
    {
LABEL_14:
      if ((v12 & 4) == 0)
        goto LABEL_15;
      goto LABEL_23;
    }
  }
  else if ((*(_BYTE *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_14;
  }
  v15 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(_DWORD *)(a1 + 12) = v15;
  v12 = *(_DWORD *)(a2 + 68);
  if ((v12 & 4) == 0)
  {
LABEL_15:
    if ((v12 & 0x10) == 0)
      goto LABEL_16;
    goto LABEL_28;
  }
LABEL_23:
  *(_DWORD *)(a1 + 68) |= 4u;
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    v16 = operator new();
    *(_QWORD *)(v16 + 8) = 0;
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)v16 = &off_250A70D80;
    *(_DWORD *)(v16 + 24) = 0;
    *(_QWORD *)(a1 + 16) = v16;
  }
  v17 = *(_QWORD *)(a2 + 16);
  if (!v17)
  {
    sub_239131728();
    v17 = *(_QWORD *)(qword_2542CF6C0 + 16);
  }
  sub_23915B7F8(v16, v17);
  v12 = *(_DWORD *)(a2 + 68);
  if ((v12 & 0x10) == 0)
  {
LABEL_16:
    if ((v12 & 0x20) == 0)
      goto LABEL_17;
LABEL_29:
    v19 = *(_DWORD *)(a2 + 52);
    if (v19 >= 6)
      __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 25318, "::CoreGem::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(_DWORD *)(a1 + 52) = v19;
    v12 = *(_DWORD *)(a2 + 68);
    if ((v12 & 0x40) == 0)
    {
LABEL_18:
      if ((v12 & 0x80) == 0)
        return;
      goto LABEL_19;
    }
    goto LABEL_31;
  }
LABEL_28:
  v18 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(_DWORD *)(a1 + 48) = v18;
  v12 = *(_DWORD *)(a2 + 68);
  if ((v12 & 0x20) != 0)
    goto LABEL_29;
LABEL_17:
  if ((v12 & 0x40) == 0)
    goto LABEL_18;
LABEL_31:
  v20 = *(_DWORD *)(a2 + 56);
  if (v20 >= 7)
    __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 25341, "::CoreGem::proto::gnss::Emergency::PosProtocol_IsValid(value)");
  *(_DWORD *)(a1 + 68) |= 0x40u;
  *(_DWORD *)(a1 + 56) = v20;
  if ((*(_DWORD *)(a2 + 68) & 0x80) != 0)
  {
LABEL_19:
    v13 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 68) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v13;
  }
}

void sub_2391638C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391638DC(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_250A71230;
  sub_239131728();
  if (qword_2542CF6C0 != a1)
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  v3 = *(_DWORD *)(a1 + 36);
  if (v3 >= 1)
  {
    for (i = 0; i < v3; ++i)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
        v3 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  v6 = *(_QWORD *)(a1 + 24);
  if (v6)
    MEMORY[0x23B838820](v6, 0x80C80B8603338);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_23916398C(uint64_t a1)
{
  sub_2391638DC(a1);
  JUMPOUT(0x23B838844);
}

double sub_2391639B0()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A71230;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_DWORD *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_2391639FC(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v1 = result;
  v2 = *(_BYTE *)(result + 68);
  if (v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      result = *(_QWORD *)(result + 16);
      if (result)
        result = sub_23915B9F4(result);
    }
    *(_QWORD *)(v1 + 48) = 0;
    *(_QWORD *)(v1 + 56) = 0;
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v3);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 68) = 0;
  return result;
}

uint64_t sub_239163A74(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  int v16;
  unint64_t v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  uint64_t result;
  _BYTE *v25;
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  BOOL v31;
  int v32;
  _BYTE *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  _BYTE *v46;
  unsigned int v47;
  _BYTE *v48;
  unsigned int v49;
  _BYTE *v50;
  unsigned __int8 *v51;
  unsigned int v52;

  v4 = (unsigned int *)(a1 + 8);
  v5 = (unsigned int *)(a1 + 12);
  v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  v7 = (unsigned int *)(a1 + 48);
  v8 = (unsigned int *)(a1 + 60);
LABEL_2:
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_35;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_35:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v15;
          v25 = v15 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        v16 = *(_DWORD *)(a1 + 68) | 2;
        *(_DWORD *)(a1 + 68) = v16;
        if ((unint64_t)v25 >= v12 || *v25 != 26)
          continue;
        *((_QWORD *)this + 1) = v25 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 68) = v16 | 4;
        v26 = *(_QWORD *)(a1 + 16);
        if (!v26)
        {
          v26 = operator new();
          *(_QWORD *)(v26 + 8) = 0;
          *(_QWORD *)(v26 + 16) = 0;
          *(_QWORD *)v26 = &off_250A70D80;
          *(_DWORD *)(v26 + 24) = 0;
          *(_QWORD *)(a1 + 16) = v26;
        }
        v52 = 0;
        v27 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v27 >= *((_QWORD *)this + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0;
        }
        else
        {
          v52 = *v27;
          *((_QWORD *)this + 1) = v27 + 1;
        }
        v28 = *((_DWORD *)this + 14);
        v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 < v29)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
          if (sub_23915BA30(v26, this))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
              v30 = *((_DWORD *)this + 14);
              v31 = __OFSUB__(v30, 1);
              v32 = v30 - 1;
              if (v32 < 0 == v31)
                *((_DWORD *)this + 14) = v32;
              v33 = (_BYTE *)*((_QWORD *)this + 1);
              if ((unint64_t)v33 < *((_QWORD *)this + 2) && *v33 == 34)
              {
                do
                {
                  *((_QWORD *)this + 1) = v33 + 1;
LABEL_57:
                  v34 = *(_DWORD *)(a1 + 36);
                  v35 = *(int *)(a1 + 32);
                  if ((int)v35 >= v34)
                  {
                    if (v34 == *(_DWORD *)(a1 + 40))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
                      v34 = *(_DWORD *)(a1 + 36);
                    }
                    *(_DWORD *)(a1 + 36) = v34 + 1;
                    v37 = operator new();
                    *(_QWORD *)v37 = &off_250A711B8;
                    *(_OWORD *)(v37 + 8) = 0u;
                    *(_OWORD *)(v37 + 24) = 0u;
                    *(_OWORD *)(v37 + 40) = 0u;
                    *(_OWORD *)(v37 + 52) = 0u;
                    v38 = *(_QWORD *)(a1 + 24);
                    v39 = *(int *)(a1 + 32);
                    *(_DWORD *)(a1 + 32) = v39 + 1;
                    *(_QWORD *)(v38 + 8 * v39) = v37;
                  }
                  else
                  {
                    v36 = *(_QWORD *)(a1 + 24);
                    *(_DWORD *)(a1 + 32) = v35 + 1;
                    v37 = *(_QWORD *)(v36 + 8 * v35);
                  }
                  v52 = 0;
                  v40 = (char *)*((_QWORD *)this + 1);
                  if ((unint64_t)v40 >= *((_QWORD *)this + 2) || *v40 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0;
                  }
                  else
                  {
                    v52 = *v40;
                    *((_QWORD *)this + 1) = v40 + 1;
                  }
                  v41 = *((_DWORD *)this + 14);
                  v42 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v41 + 1;
                  if (v41 >= v42)
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
                  if (!sub_239162A54((unsigned int *)v37, this) || !*((_BYTE *)this + 36))
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
                  v43 = *((_DWORD *)this + 14);
                  v31 = __OFSUB__(v43, 1);
                  v44 = v43 - 1;
                  if (v44 < 0 == v31)
                    *((_DWORD *)this + 14) = v44;
                  v33 = (_BYTE *)*((_QWORD *)this + 1);
                  v17 = *((_QWORD *)this + 2);
                  if ((unint64_t)v33 >= v17)
                    goto LABEL_2;
                  v45 = *v33;
                }
                while (v45 == 34);
                if (v45 == 40)
                {
                  v18 = v33 + 1;
                  *((_QWORD *)this + 1) = v18;
LABEL_75:
                  if ((unint64_t)v18 >= v17 || *v18 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                    if (!(_DWORD)result)
                      return result;
                    v46 = (_BYTE *)*((_QWORD *)this + 1);
                    v17 = *((_QWORD *)this + 2);
                  }
                  else
                  {
                    *v7 = *v18;
                    v46 = v18 + 1;
                    *((_QWORD *)this + 1) = v46;
                  }
                  *(_DWORD *)(a1 + 68) |= 0x10u;
                  if ((unint64_t)v46 < v17 && *v46 == 48)
                  {
                    v19 = v46 + 1;
                    *((_QWORD *)this + 1) = v19;
LABEL_83:
                    v52 = 0;
                    if ((unint64_t)v19 >= v17 || *v19 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52);
                      if (!(_DWORD)result)
                        return result;
                      v47 = v52;
                    }
                    else
                    {
                      v47 = *v19;
                      *((_QWORD *)this + 1) = v19 + 1;
                    }
                    if (v47 <= 5)
                    {
                      *(_DWORD *)(a1 + 68) |= 0x20u;
                      *(_DWORD *)(a1 + 52) = v47;
                    }
                    v48 = (_BYTE *)*((_QWORD *)this + 1);
                    v20 = *((_QWORD *)this + 2);
                    if ((unint64_t)v48 < v20 && *v48 == 56)
                    {
                      v21 = v48 + 1;
                      *((_QWORD *)this + 1) = v21;
LABEL_93:
                      v52 = 0;
                      if ((unint64_t)v21 >= v20 || *v21 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52);
                        if (!(_DWORD)result)
                          return result;
                        v49 = v52;
                      }
                      else
                      {
                        v49 = *v21;
                        *((_QWORD *)this + 1) = v21 + 1;
                      }
                      if (v49 <= 6)
                      {
                        *(_DWORD *)(a1 + 68) |= 0x40u;
                        *(_DWORD *)(a1 + 56) = v49;
                      }
                      v50 = (_BYTE *)*((_QWORD *)this + 1);
                      v22 = *((_QWORD *)this + 2);
                      if ((unint64_t)v50 < v22 && *v50 == 64)
                      {
                        v23 = v50 + 1;
                        *((_QWORD *)this + 1) = v23;
LABEL_103:
                        if ((unint64_t)v23 >= v22 || *v23 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                          if (!(_DWORD)result)
                            return result;
                          v51 = (unsigned __int8 *)*((_QWORD *)this + 1);
                          v22 = *((_QWORD *)this + 2);
                        }
                        else
                        {
                          *v8 = *v23;
                          v51 = (unsigned __int8 *)(v23 + 1);
                          *((_QWORD *)this + 1) = v51;
                        }
                        *(_DWORD *)(a1 + 68) |= 0x80u;
                        if (v51 == (unsigned __int8 *)v22
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + 8) = 0;
                          result = 1;
                          *((_BYTE *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_26;
        v16 = *(_DWORD *)(a1 + 68);
        goto LABEL_43;
      case 4u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_57;
        goto LABEL_26;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v18 = (char *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        goto LABEL_75;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v19 = (char *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        goto LABEL_83;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v21 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_93;
      case 8u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v23 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_103;
      default:
        v11 = TagFallback & 7;
LABEL_26:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_2391640A4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 68);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_10;
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 4) == 0)
    goto LABEL_10;
LABEL_7:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
    sub_239131728();
    v7 = *(_QWORD *)(qword_2542CF6C0 + 16);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
LABEL_10:
  if (*(int *)(v5 + 32) >= 1)
  {
    v8 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 32));
  }
  v9 = *(_DWORD *)(v5 + 68);
  if ((v9 & 0x10) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
    v9 = *(_DWORD *)(v5 + 68);
    if ((v9 & 0x20) == 0)
    {
LABEL_15:
      if ((v9 & 0x40) == 0)
        goto LABEL_16;
      goto LABEL_20;
    }
  }
  else if ((v9 & 0x20) == 0)
  {
    goto LABEL_15;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 68);
  if ((v9 & 0x40) == 0)
  {
LABEL_16:
    if ((v9 & 0x80) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  return result;
}

uint64_t sub_2391641E0(uint64_t a1)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  int v25;

  LOBYTE(v2) = *(_BYTE *)(a1 + 68);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_46;
  }
  if ((*(_BYTE *)(a1 + 68) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 68) & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v5 = 1;
  }
  v3 = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_10:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      v2 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      v7 = 2;
    }
    v3 += v7;
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (!v8)
    {
      sub_239131728();
      v8 = *(_QWORD *)(qword_2542CF6C0 + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915BCEC(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 += v10 + v11 + 1;
    v2 = *(_DWORD *)(a1 + 68);
    if ((v2 & 0x10) == 0)
    {
LABEL_16:
      if ((v2 & 0x20) == 0)
        goto LABEL_17;
      goto LABEL_30;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0)
      goto LABEL_18;
    goto LABEL_36;
  }
LABEL_30:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0)
      goto LABEL_46;
    goto LABEL_42;
  }
LABEL_36:
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v16 & 0x80000000) != 0)
  {
    v17 = 11;
  }
  else if (v16 >= 0x80)
  {
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x80) != 0)
  {
LABEL_42:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v18 >= 0x80)
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    else
      v19 = 2;
    v3 += v19;
  }
LABEL_46:
  v20 = *(_DWORD *)(a1 + 32);
  v21 = (v20 + v3);
  if (v20 >= 1)
  {
    v22 = 0;
    do
    {
      v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391632E0(*(unsigned int **)(*(_QWORD *)(a1 + 24) + 8 * v22));
      v24 = (int)v23;
      if (v23 >= 0x80)
        v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
      else
        v25 = 1;
      v21 = (v24 + v21 + v25);
      ++v22;
    }
    while (v22 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 64) = v21;
  return v21;
}

void sub_2391643DC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71F28, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391635E4(a1, (uint64_t)lpsrc);
}

uint64_t sub_239164444()
{
  return 1;
}

_QWORD *sub_23916444C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.GpsAcqAssistance");
}

void sub_23916445C(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  _BYTE v5[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 6)
      __assert_rtn("set_network_type", "GnssEmergencyTypes.pb.h", 25390, "::CoreGem::proto::gnss::Emergency::ClsNetworkType_IsValid(value)");
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_23916450C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239164524(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A712A8;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23916455C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239164524(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_239164580()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A712A8;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_2391645B8(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_2391645CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  char *v6;
  unsigned int v7;
  uint64_t result;
  unsigned int v9;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v9 = 0;
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
        if (!(_DWORD)result)
          return result;
        v7 = v9;
      }
      else
      {
        v7 = *v6;
        *((_QWORD *)this + 1) = v6 + 1;
      }
      if (v7 <= 5)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v7;
      }
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_2391646E8(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_239164704(uint64_t a1)
{
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;

  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v3 & 0x80000000) != 0)
    {
      result = 11;
    }
    else if (v3 >= 0x80)
    {
      result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      result = 2;
    }
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_23916475C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71F40, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23916445C(a1, (uint64_t)lpsrc);
}

uint64_t sub_2391647C4()
{
  return 1;
}

_QWORD *sub_2391647CC@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.CellFTAssistanceRequest");
}

void sub_2391647DC(uint64_t a1, uint64_t a2)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 0xA)
        __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 25417, "::CoreGem::proto::gnss::Result_IsValid(value)");
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 6)
        __assert_rtn("set_network_type", "GnssEmergencyTypes.pb.h", 25440, "::CoreGem::proto::gnss::Emergency::ClsNetworkType_IsValid(value)");
      *(_DWORD *)(a1 + 28) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
      v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 4u;
      v7 = *(_QWORD **)(a1 + 16);
      if (!v7)
      {
        v7 = (_QWORD *)operator new();
        *v7 = &off_250A70D08;
        v7[1] = 0;
        v7[2] = 0;
        v7[3] = 0;
        *(_QWORD *)(a1 + 16) = v7;
      }
      v8 = *(_QWORD *)(a2 + 16);
      if (!v8)
      {
        sub_239131728();
        v8 = *(_QWORD *)(qword_2542CF6B8 + 16);
      }
      sub_23915B0B0((uint64_t)v7, v8);
    }
  }
}

void sub_239164948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239164960(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_250A71320;
  sub_239131728();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF6B8 != a1)
  {
    v2 = *((_QWORD *)a1 + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_2391649BC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239164960(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_2391649E0()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_250A71320;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_239164A18(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 28);
  if (v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      result = *(_QWORD *)(result + 16);
      if (result)
        result = sub_23915B2E8(result);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_239164A54(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  char *v8;
  unsigned int v9;
  unint64_t v10;
  char *v11;
  uint64_t result;
  _BYTE *v13;
  unsigned int v14;
  _BYTE *v15;
  _QWORD *v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)this + 8) = TagFallback;
            *((_QWORD *)this + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_18;
          v24 = 0;
          v8 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
            if (!(_DWORD)result)
              return result;
            v9 = v24;
          }
          else
          {
            v9 = *v8;
            *((_QWORD *)this + 1) = v8 + 1;
          }
          if (v9 <= 9)
          {
            *(_DWORD *)(a1 + 28) |= 1u;
            *(_DWORD *)(a1 + 8) = v9;
          }
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
          if ((unint64_t)v13 < v10 && *v13 == 16)
          {
            v11 = v13 + 1;
            *((_QWORD *)this + 1) = v11;
            goto LABEL_28;
          }
        }
        if (v6 != 2)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_28:
        v23 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!(_DWORD)result)
            return result;
          v14 = v23;
        }
        else
        {
          v14 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        if (v14 <= 5)
        {
          *(_DWORD *)(a1 + 28) |= 2u;
          *(_DWORD *)(a1 + 12) = v14;
        }
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v15 < *((_QWORD *)this + 2) && *v15 == 26)
        {
          *((_QWORD *)this + 1) = v15 + 1;
          goto LABEL_38;
        }
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_18;
      }
      v7 = TagFallback & 7;
      if (v7 == 2)
        break;
LABEL_18:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_38:
    *(_DWORD *)(a1 + 28) |= 4u;
    v16 = *(_QWORD **)(a1 + 16);
    if (!v16)
    {
      v16 = (_QWORD *)operator new();
      *v16 = &off_250A70D08;
      v16[1] = 0;
      v16[2] = 0;
      v16[3] = 0;
      *(_QWORD *)(a1 + 16) = v16;
    }
    v25 = 0;
    v17 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25))
        return 0;
    }
    else
    {
      v25 = *v17;
      *((_QWORD *)this + 1) = v17 + 1;
    }
    v18 = *((_DWORD *)this + 14);
    v19 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v18 + 1;
    if (v18 >= v19)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
    if (!sub_23915B344((uint64_t)v16, this) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    v20 = *((_DWORD *)this + 14);
    v21 = __OFSUB__(v20, 1);
    v22 = v20 - 1;
    if (v22 < 0 == v21)
      *((_DWORD *)this + 14) = v22;
    if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_239164D28(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0)
      return result;
    goto LABEL_7;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 4) == 0)
    return result;
LABEL_7:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
    sub_239131728();
    v7 = *(_QWORD *)(qword_2542CF6B8 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_239164DB4(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;

  LOBYTE(v2) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_26;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 28);
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_19;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_19:
  if ((v2 & 4) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    if (!v7)
    {
      sub_239131728();
      v7 = *(_QWORD *)(qword_2542CF6B8 + 16);
    }
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915B6A0(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v3 = (v3 + v9 + v10 + 1);
  }
LABEL_26:
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_239164EB0(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71F58, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391647DC(a1, (uint64_t)lpsrc);
}

uint64_t sub_239164F18()
{
  return 1;
}

_QWORD *sub_239164F20@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.CellFTAssistance");
}

void sub_239164F30(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A71398;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239164F68(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239164F30(a1);
  JUMPOUT(0x23B838844);
}

double sub_239164F8C()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A71398;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_QWORD *)(v0 + 56) = 0;
  return result;
}

uint64_t sub_239164FD4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  unint64_t v13;
  _BYTE *v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  uint64_t result;
  unsigned __int8 *v19;
  unint64_t v20;

  v4 = (unsigned int *)(a1 + 48);
  v5 = (unsigned int *)(a1 + 52);
  while (2)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if (v8 != 1)
          goto LABEL_40;
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 8) = v20;
        *(_DWORD *)(a1 + 60) |= 1u;
        v9 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 != 17)
          continue;
        *((_QWORD *)this + 1) = v9 + 1;
        goto LABEL_15;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 1)
          goto LABEL_40;
LABEL_15:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v20;
        *(_DWORD *)(a1 + 60) |= 2u;
        v10 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 != 25)
          continue;
        *((_QWORD *)this + 1) = v10 + 1;
LABEL_20:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 24) = v20;
        *(_DWORD *)(a1 + 60) |= 4u;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 != 33)
          continue;
        *((_QWORD *)this + 1) = v11 + 1;
LABEL_25:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 32) = v20;
        *(_DWORD *)(a1 + 60) |= 8u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 41)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_30:
        v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) != 0)
        {
          *(_QWORD *)(a1 + 40) = v20;
          *(_DWORD *)(a1 + 60) |= 0x10u;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          if ((unint64_t)v14 < v13 && *v14 == 48)
          {
            v15 = v14 + 1;
            *((_QWORD *)this + 1) = v15;
LABEL_36:
            if ((unint64_t)v15 >= v13 || *v15 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
              if (!(_DWORD)result)
                return result;
              v16 = (_BYTE *)*((_QWORD *)this + 1);
              v13 = *((_QWORD *)this + 2);
            }
            else
            {
              *v4 = *v15;
              v16 = v15 + 1;
              *((_QWORD *)this + 1) = v16;
            }
            *(_DWORD *)(a1 + 60) |= 0x20u;
            if ((unint64_t)v16 < v13 && *v16 == 56)
            {
              v17 = v16 + 1;
              *((_QWORD *)this + 1) = v17;
LABEL_49:
              if ((unint64_t)v17 >= v13 || *v17 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
                if (!(_DWORD)result)
                  return result;
                v19 = (unsigned __int8 *)*((_QWORD *)this + 1);
                v13 = *((_QWORD *)this + 2);
              }
              else
              {
                *v5 = *v17;
                v19 = (unsigned __int8 *)(v17 + 1);
                *((_QWORD *)this + 1) = v19;
              }
              *(_DWORD *)(a1 + 60) |= 0x40u;
              if (v19 == (unsigned __int8 *)v13
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_20;
        goto LABEL_40;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_25;
        goto LABEL_40;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_30;
        goto LABEL_40;
      case 6u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v15 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_36;
      case 7u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v17 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_49;
      default:
        v8 = TagFallback & 7;
LABEL_40:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_239165350(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 60);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 52), a2, a4);
  }
LABEL_14:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 48), a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 52), a2, a4);
  return result;
}

uint64_t sub_239165438(uint64_t a1)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;

  v2 = *(unsigned __int8 *)(a1 + 60);
  if (*(_BYTE *)(a1 + 60))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v4 = v3 + 9;
    else
      v4 = v3;
    if ((v2 & 0x20) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
      if (v5 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *(_DWORD *)(a1 + 60);
      }
      else
      {
        v6 = 2;
      }
      v4 = (v6 + v4);
    }
    if ((v2 & 0x40) != 0)
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v7 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      else
        v8 = 2;
      v4 = (v8 + v4);
    }
  }
  else
  {
    v4 = 0;
  }
  *(_DWORD *)(a1 + 56) = v4;
  return v4;
}

void sub_2391654F4(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71F70, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23913C2EC(a1, (uint64_t)lpsrc);
}

uint64_t sub_23916555C()
{
  return 1;
}

_QWORD *sub_239165564@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.NetworkReferenceLocation");
}

void sub_239165574(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A71410;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_2391655AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239165574(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_2391655D0()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_250A71410;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_239165608(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  unsigned int v8;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  uint64_t result;
  _BYTE *v15;
  unint64_t v16;

  v4 = (unsigned int *)(a1 + 8);
  v5 = (unsigned int *)(a1 + 12);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v6;
            *((_DWORD *)this + 8) = TagFallback;
            *((_QWORD *)this + 1) = v6 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v11 = (char *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
            if (!(_DWORD)result)
              return result;
            v12 = (_BYTE *)*((_QWORD *)this + 1);
            v10 = *((_QWORD *)this + 2);
          }
          else
          {
            *v4 = *v11;
            v12 = v11 + 1;
            *((_QWORD *)this + 1) = v12;
          }
          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            v13 = v12 + 1;
            *((_QWORD *)this + 1) = v13;
            goto LABEL_27;
          }
        }
        if (v8 != 2)
          break;
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v13 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_27:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v13;
          v15 = v13 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v15 < v10 && *v15 == 25)
        {
          *((_QWORD *)this + 1) = v15 + 1;
          goto LABEL_35;
        }
      }
      if (v8 != 3)
        break;
      v9 = TagFallback & 7;
      if (v9 != 1)
        goto LABEL_19;
LABEL_35:
      v16 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0)
        return 0;
      *(_QWORD *)(a1 + 16) = v16;
      *(_DWORD *)(a1 + 28) |= 4u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v9 = TagFallback & 7;
LABEL_19:
    if (v9 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t sub_23916580C(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 16), a3);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 16), a3);
  return result;
}

uint64_t sub_239165884(uint64_t a1)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  LOBYTE(v2) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_17;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_14;
LABEL_10:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      v2 = *(_DWORD *)(a1 + 28);
    }
    else
    {
      v7 = 2;
    }
    v3 += v7;
    goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *(_DWORD *)(a1 + 28);
    if ((v2 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v3 = 2;
  if ((v2 & 2) != 0)
    goto LABEL_10;
LABEL_14:
  if ((v2 & 4) != 0)
    result = v3 + 9;
  else
    result = v3;
LABEL_17:
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

void sub_23916591C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71F88, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23913C454(a1, (uint64_t)lpsrc);
}

uint64_t sub_239165984()
{
  return 1;
}

_QWORD *sub_23916598C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.NetworkReferenceTime");
}

void sub_23916599C(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  _BYTE v8[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0)
      return;
LABEL_7:
    v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_239165A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239165A84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A71488;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239165ABC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239165A84(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_239165AE0()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A71488;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_239165B1C(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_239165B34(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  char *v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  _BYTE *v16;
  unsigned __int8 *v17;
  uint64_t result;

  v4 = a1 + 2;
  v5 = a1 + 3;
  v6 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v13 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        a1[6] |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_27;
        }
      }
      if (v9 != 2)
        break;
      v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v15 = (char *)*((_QWORD *)this + 1);
      v11 = *((_QWORD *)this + 2);
LABEL_27:
      if ((unint64_t)v15 >= v11 || *v15 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v15;
        v16 = v15 + 1;
        *((_QWORD *)this + 1) = v16;
      }
      a1[6] |= 2u;
      if ((unint64_t)v16 < v11 && *v16 == 24)
      {
        v12 = v16 + 1;
        *((_QWORD *)this + 1) = v12;
LABEL_35:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v17 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v12;
          v17 = (unsigned __int8 *)(v12 + 1);
          *((_QWORD *)this + 1) = v17;
        }
        a1[6] |= 4u;
        if (v17 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

unsigned int *sub_239165D54(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = result;
  v6 = result[6];
  if ((v6 & 1) != 0)
  {
    result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[6];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  if ((v5[6] & 4) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  return result;
}

uint64_t sub_239165DCC(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;

  LOBYTE(v2) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 24);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v7 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    else
      v8 = 2;
    v3 = (v8 + v3);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_239165E80(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71FA0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23916599C(a1, (uint64_t)lpsrc);
}

uint64_t sub_239165EE8()
{
  return 1;
}

_QWORD *sub_239165EF0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.Is801VelocityInfo");
}

void sub_239165F00(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  _BYTE v7[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_239165FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239165FC0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A71500;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239165FF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239165FC0(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_23916601C()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_250A71500;
  return result;
}

uint64_t sub_239166054(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_239166068(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;

  v4 = a1 + 2;
  v5 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v11 = (char *)*((_QWORD *)this + 1);
      v9 = *((_QWORD *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
        if (!(_DWORD)result)
          return result;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
      }
      else
      {
        *v4 = *v11;
        v12 = v11 + 1;
        *((_QWORD *)this + 1) = v12;
      }
      a1[5] |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        v10 = v12 + 1;
        *((_QWORD *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v10;
          v13 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)this + 1) = v13;
        }
        a1[5] |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_239166204(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_23916625C(uint64_t a1)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *(_BYTE *)(a1 + 20);
  if (v2)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v3 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_2391662E8(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71FB8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239165F00(a1, (uint64_t)lpsrc);
}

uint64_t sub_239166350()
{
  return 1;
}

_QWORD *sub_239166358@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.Is801ClockInfo");
}

void sub_239166368(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  _BYTE v7[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_239166410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239166428(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A71578;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239166460(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239166428(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_239166484()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_250A71578;
  return result;
}

uint64_t sub_2391664BC(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_2391664D0(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;

  v4 = a1 + 2;
  v5 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v11 = (char *)*((_QWORD *)this + 1);
      v9 = *((_QWORD *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
        if (!(_DWORD)result)
          return result;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
      }
      else
      {
        *v4 = *v11;
        v12 = v11 + 1;
        *((_QWORD *)this + 1) = v12;
      }
      a1[5] |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        v10 = v12 + 1;
        *((_QWORD *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v10;
          v13 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)this + 1) = v13;
        }
        a1[5] |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23916666C(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_2391666C4(uint64_t a1)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *(_BYTE *)(a1 + 20);
  if (v2)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v3 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_239166750(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71FD0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239166368(a1, (uint64_t)lpsrc);
}

uint64_t sub_2391667B8()
{
  return 1;
}

_QWORD *sub_2391667C0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.Is801HeightInfo");
}

void sub_2391667D0(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v4 = *(_DWORD *)(a2 + 64);
  if ((_BYTE)v4)
  {
    if ((v4 & 1) != 0)
    {
      v8 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 64) |= 1u;
      *(_DWORD *)(a1 + 8) = v8;
      v4 = *(_DWORD *)(a2 + 64);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    v9 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 12) = v9;
    v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_27;
    }
LABEL_26:
    v10 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 4u;
    *(_DWORD *)(a1 + 16) = v10;
    v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_28;
    }
LABEL_27:
    v11 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 64) |= 8u;
    *(_DWORD *)(a1 + 20) = v11;
    v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_29;
    }
LABEL_28:
    v12 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 64) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v12;
    v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
LABEL_29:
    v13 = *(_DWORD *)(a2 + 28);
    if (v13 >= 4)
      __assert_rtn("set_fix_type", "GnssEmergencyTypes.pb.h", 26013, "::CoreGem::proto::gnss::Emergency::FixType_IsValid(value)");
    *(_DWORD *)(a1 + 64) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v13;
    v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
      goto LABEL_12;
LABEL_11:
    v5 = *(_BYTE *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x40u;
    *(_BYTE *)(a1 + 56) = v5;
    v4 = *(_DWORD *)(a2 + 64);
LABEL_12:
    if ((v4 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 0x80u;
      v6 = *(_QWORD *)(a1 + 32);
      if (!v6)
      {
        v6 = operator new();
        *(_QWORD *)(v6 + 8) = 0;
        *(_QWORD *)(v6 + 16) = 0;
        *(_QWORD *)v6 = &off_250A71488;
        *(_DWORD *)(v6 + 24) = 0;
        *(_QWORD *)(a1 + 32) = v6;
      }
      v7 = *(_QWORD *)(a2 + 32);
      if (!v7)
      {
        sub_239131728();
        v7 = *(_QWORD *)(qword_2542CF408 + 32);
      }
      sub_23916599C((_DWORD *)v6, v7);
      v4 = *(_DWORD *)(a2 + 64);
    }
  }
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v14 = *(_BYTE *)(a2 + 57);
    *(_DWORD *)(a1 + 64) |= 0x100u;
    *(_BYTE *)(a1 + 57) = v14;
    v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x200) == 0)
    {
LABEL_21:
      if ((v4 & 0x400) == 0)
        goto LABEL_22;
LABEL_38:
      v17 = *(_BYTE *)(a2 + 58);
      *(_DWORD *)(a1 + 64) |= 0x400u;
      *(_BYTE *)(a1 + 58) = v17;
      if ((*(_DWORD *)(a2 + 64) & 0x800) == 0)
        return;
      goto LABEL_39;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  *(_DWORD *)(a1 + 64) |= 0x200u;
  v15 = *(_QWORD *)(a1 + 40);
  if (!v15)
  {
    v15 = operator new();
    *(_QWORD *)(v15 + 8) = 0;
    *(_QWORD *)(v15 + 16) = 0;
    *(_QWORD *)v15 = &off_250A71500;
    *(_QWORD *)(a1 + 40) = v15;
  }
  v16 = *(_QWORD *)(a2 + 40);
  if (!v16)
  {
    sub_239131728();
    v16 = *(_QWORD *)(qword_2542CF408 + 40);
  }
  sub_239165F00((_DWORD *)v15, v16);
  v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x400) != 0)
    goto LABEL_38;
LABEL_22:
  if ((v4 & 0x800) == 0)
    return;
LABEL_39:
  *(_DWORD *)(a1 + 64) |= 0x800u;
  v18 = *(_QWORD *)(a1 + 48);
  if (!v18)
  {
    v18 = operator new();
    *(_QWORD *)(v18 + 8) = 0;
    *(_QWORD *)(v18 + 16) = 0;
    *(_QWORD *)v18 = &off_250A71578;
    *(_QWORD *)(a1 + 48) = v18;
  }
  v19 = *(_QWORD *)(a2 + 48);
  if (!v19)
  {
    sub_239131728();
    v19 = *(_QWORD *)(qword_2542CF408 + 48);
  }
  sub_239166368((_DWORD *)v18, v19);
}

void sub_239166AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239166B04(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = &off_250A715F0;
  sub_239131728();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF408 != a1)
  {
    v2 = *((_QWORD *)a1 + 4);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)a1 + 5);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)a1 + 6);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239166B88(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239166B04(a1);
  JUMPOUT(0x23B838844);
}

double sub_239166BAC()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A715F0;
  *(_DWORD *)(v0 + 60) = 0;
  *(_DWORD *)(v0 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_DWORD *)(v0 + 55) = 0;
  return result;
}

uint64_t sub_239166BF8(uint64_t result)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_DWORD *)(result + 64);
  if ((_BYTE)v1)
  {
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 8) = 0;
    if ((v1 & 0x80) != 0)
    {
      v2 = *(_QWORD *)(result + 32);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        v1 = *(_DWORD *)(result + 64);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_BYTE *)(result + 57) = 0;
    if ((v1 & 0x200) != 0)
    {
      v3 = *(_QWORD *)(result + 40);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
          *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 20) = 0;
        v1 = *(_DWORD *)(result + 64);
      }
    }
    *(_BYTE *)(result + 58) = 0;
    if ((v1 & 0x800) != 0)
    {
      v4 = *(_QWORD *)(result + 48);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 20))
          *(_QWORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_239166C88(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  int v22;
  unint64_t v23;
  char *v24;
  int v25;
  unint64_t v26;
  char *v27;
  int v28;
  uint64_t result;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  uint64_t v38;
  char *v39;
  int v40;
  int v41;
  int v42;
  BOOL v43;
  int v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  uint64_t v48;
  char *v49;
  int v50;
  int v51;
  int v52;
  int v53;
  _BYTE *v54;
  unsigned int v55;
  _BYTE *v56;
  uint64_t v57;
  char *v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;

  v4 = (unsigned int *)(a1 + 8);
  v5 = (unsigned int *)(a1 + 12);
  v6 = (unsigned int *)(a1 + 16);
  v7 = (unsigned int *)(a1 + 20);
  v8 = (unsigned int *)(a1 + 24);
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_43;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_43:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v15;
          v30 = v15 + 1;
          *((_QWORD *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if ((unint64_t)v30 >= v12 || *v30 != 24)
          continue;
        v16 = v30 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_51:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v16;
          v31 = v16 + 1;
          *((_QWORD *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v31 >= v12 || *v31 != 32)
          continue;
        v17 = v31 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_59:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v17;
          v32 = v17 + 1;
          *((_QWORD *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        if ((unint64_t)v32 >= v12 || *v32 != 40)
          continue;
        v18 = v32 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_67:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v8 = *v18;
          v33 = v18 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 64) |= 0x10u;
        if ((unint64_t)v33 >= v12 || *v33 != 48)
          continue;
        v19 = v33 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_75:
        v63 = 0;
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63);
          if (!(_DWORD)result)
            return result;
          v34 = v63;
        }
        else
        {
          v34 = *v19;
          *((_QWORD *)this + 1) = v19 + 1;
        }
        if (v34 <= 3)
        {
          *(_DWORD *)(a1 + 64) |= 0x20u;
          *(_DWORD *)(a1 + 28) = v34;
        }
        v35 = (_BYTE *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        if ((unint64_t)v35 >= v20 || *v35 != 56)
          continue;
        v21 = v35 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_85:
        v63 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63);
          if (!(_DWORD)result)
            return result;
          v36 = v63;
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
        }
        else
        {
          v36 = *v21;
          v37 = v21 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        *(_BYTE *)(a1 + 56) = v36 != 0;
        v22 = *(_DWORD *)(a1 + 64) | 0x40;
        *(_DWORD *)(a1 + 64) = v22;
        if ((unint64_t)v37 >= v20 || *v37 != 66)
          continue;
        *((_QWORD *)this + 1) = v37 + 1;
LABEL_93:
        *(_DWORD *)(a1 + 64) = v22 | 0x80;
        v38 = *(_QWORD *)(a1 + 32);
        if (!v38)
        {
          v38 = operator new();
          *(_QWORD *)(v38 + 8) = 0;
          *(_QWORD *)(v38 + 16) = 0;
          *(_QWORD *)v38 = &off_250A71488;
          *(_DWORD *)(v38 + 24) = 0;
          *(_QWORD *)(a1 + 32) = v38;
        }
        v63 = 0;
        v39 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v39 >= *((_QWORD *)this + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0;
        }
        else
        {
          v63 = *v39;
          *((_QWORD *)this + 1) = v39 + 1;
        }
        v40 = *((_DWORD *)this + 14);
        v41 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v40 + 1;
        if (v40 >= v41)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239165B34((unsigned int *)v38, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v42 = *((_DWORD *)this + 14);
        v43 = __OFSUB__(v42, 1);
        v44 = v42 - 1;
        if (v44 < 0 == v43)
          *((_DWORD *)this + 14) = v44;
        v45 = (_BYTE *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        if ((unint64_t)v45 >= v23 || *v45 != 72)
          continue;
        v24 = v45 + 1;
        *((_QWORD *)this + 1) = v24;
LABEL_107:
        v63 = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63);
          if (!(_DWORD)result)
            return result;
          v46 = v63;
          v47 = (_BYTE *)*((_QWORD *)this + 1);
          v23 = *((_QWORD *)this + 2);
        }
        else
        {
          v46 = *v24;
          v47 = v24 + 1;
          *((_QWORD *)this + 1) = v47;
        }
        *(_BYTE *)(a1 + 57) = v46 != 0;
        v25 = *(_DWORD *)(a1 + 64) | 0x100;
        *(_DWORD *)(a1 + 64) = v25;
        if ((unint64_t)v47 >= v23 || *v47 != 82)
          continue;
        *((_QWORD *)this + 1) = v47 + 1;
LABEL_115:
        *(_DWORD *)(a1 + 64) = v25 | 0x200;
        v48 = *(_QWORD *)(a1 + 40);
        if (!v48)
        {
          v48 = operator new();
          *(_QWORD *)(v48 + 8) = 0;
          *(_QWORD *)(v48 + 16) = 0;
          *(_QWORD *)v48 = &off_250A71500;
          *(_QWORD *)(a1 + 40) = v48;
        }
        v63 = 0;
        v49 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v49 >= *((_QWORD *)this + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0;
        }
        else
        {
          v63 = *v49;
          *((_QWORD *)this + 1) = v49 + 1;
        }
        v50 = *((_DWORD *)this + 14);
        v51 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v50 + 1;
        if (v50 >= v51)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239166068((unsigned int *)v48, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v52 = *((_DWORD *)this + 14);
        v43 = __OFSUB__(v52, 1);
        v53 = v52 - 1;
        if (v53 < 0 == v43)
          *((_DWORD *)this + 14) = v53;
        v54 = (_BYTE *)*((_QWORD *)this + 1);
        v26 = *((_QWORD *)this + 2);
        if ((unint64_t)v54 >= v26 || *v54 != 88)
          continue;
        v27 = v54 + 1;
        *((_QWORD *)this + 1) = v27;
LABEL_129:
        v63 = 0;
        if ((unint64_t)v27 >= v26 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63);
          if (!(_DWORD)result)
            return result;
          v55 = v63;
          v56 = (_BYTE *)*((_QWORD *)this + 1);
          v26 = *((_QWORD *)this + 2);
        }
        else
        {
          v55 = *v27;
          v56 = v27 + 1;
          *((_QWORD *)this + 1) = v56;
        }
        *(_BYTE *)(a1 + 58) = v55 != 0;
        v28 = *(_DWORD *)(a1 + 64) | 0x400;
        *(_DWORD *)(a1 + 64) = v28;
        if ((unint64_t)v56 >= v26 || *v56 != 98)
          continue;
        *((_QWORD *)this + 1) = v56 + 1;
LABEL_137:
        *(_DWORD *)(a1 + 64) = v28 | 0x800;
        v57 = *(_QWORD *)(a1 + 48);
        if (!v57)
        {
          v57 = operator new();
          *(_QWORD *)(v57 + 8) = 0;
          *(_QWORD *)(v57 + 16) = 0;
          *(_QWORD *)v57 = &off_250A71578;
          *(_QWORD *)(a1 + 48) = v57;
        }
        v63 = 0;
        v58 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v58 >= *((_QWORD *)this + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0;
        }
        else
        {
          v63 = *v58;
          *((_QWORD *)this + 1) = v58 + 1;
        }
        v59 = *((_DWORD *)this + 14);
        v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 < v60)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
          if (sub_2391664D0((unsigned int *)v57, this))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
              v61 = *((_DWORD *)this + 14);
              v43 = __OFSUB__(v61, 1);
              v62 = v61 - 1;
              if (v62 < 0 == v43)
                *((_DWORD *)this + 14) = v62;
              if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                result = 1;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_51;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v17 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_59;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v18 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_67;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v19 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_75;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v21 = (char *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        goto LABEL_85;
      case 8u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_35;
        v22 = *(_DWORD *)(a1 + 64);
        goto LABEL_93;
      case 9u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v24 = (char *)*((_QWORD *)this + 1);
        v23 = *((_QWORD *)this + 2);
        goto LABEL_107;
      case 0xAu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_35;
        v25 = *(_DWORD *)(a1 + 64);
        goto LABEL_115;
      case 0xBu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v27 = (char *)*((_QWORD *)this + 1);
        v26 = *((_QWORD *)this + 2);
        goto LABEL_129;
      case 0xCu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_35;
        v28 = *(_DWORD *)(a1 + 64);
        goto LABEL_137;
      default:
        v11 = TagFallback & 7;
LABEL_35:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_2391674D4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 64);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_21:
  v7 = *(_QWORD *)(v5 + 32);
  if (!v7)
  {
    sub_239131728();
    v7 = *(_QWORD *)(qword_2542CF408 + 32);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 57), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
LABEL_28:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 58), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 64) & 0x800) == 0)
      return result;
    goto LABEL_29;
  }
LABEL_25:
  v8 = *(_QWORD *)(v5 + 40);
  if (!v8)
  {
    sub_239131728();
    v8 = *(_QWORD *)(qword_2542CF408 + 40);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x400) != 0)
    goto LABEL_28;
LABEL_12:
  if ((v6 & 0x800) == 0)
    return result;
LABEL_29:
  v9 = *(_QWORD *)(v5 + 48);
  if (!v9)
  {
    sub_239131728();
    v9 = *(_QWORD *)(qword_2542CF408 + 48);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v9, a2, a4);
}

uint64_t sub_239167684(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;
  uint64_t v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;

  v2 = *(_DWORD *)(a1 + 64);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_47;
  }
  if ((v2 & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((v2 & 2) == 0)
      goto LABEL_14;
    goto LABEL_10;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    v5 = 1;
  }
  LODWORD(v3) = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_10:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      v7 = 1;
    }
    LODWORD(v3) = v3 + v7 + 1;
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      v9 = 1;
    }
    LODWORD(v3) = v3 + v9 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    v11 = 2;
  }
  LODWORD(v3) = v11 + v3;
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0)
      goto LABEL_37;
    goto LABEL_31;
  }
LABEL_27:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    v13 = 2;
  }
  LODWORD(v3) = v13 + v3;
  if ((v2 & 0x20) != 0)
  {
LABEL_31:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v14 & 0x80000000) != 0)
    {
      v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
      v2 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      v15 = 2;
    }
    LODWORD(v3) = v15 + v3;
  }
LABEL_37:
  if ((v2 & 0x40) != 0)
    v3 = (v3 + 2);
  else
    v3 = v3;
  if ((v2 & 0x80) != 0)
  {
    v16 = *(_QWORD *)(a1 + 32);
    if (!v16)
    {
      sub_239131728();
      v16 = *(_QWORD *)(qword_2542CF408 + 32);
    }
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239165DCC(v16);
    v18 = (int)v17;
    if (v17 >= 0x80)
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    else
      v19 = 1;
    v3 = (v3 + v18 + v19 + 1);
    v2 = *(_DWORD *)(a1 + 64);
  }
LABEL_47:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
      v20 = v3 + 2;
    else
      v20 = v3;
    if ((v2 & 0x200) != 0)
    {
      v21 = *(_QWORD *)(a1 + 40);
      if (!v21)
      {
        sub_239131728();
        v21 = *(_QWORD *)(qword_2542CF408 + 40);
      }
      v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23916625C(v21);
      v23 = (int)v22;
      if (v22 >= 0x80)
        v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      else
        v24 = 1;
      v20 += v23 + v24 + 1;
      v2 = *(_DWORD *)(a1 + 64);
    }
    if ((v2 & 0x400) != 0)
      v3 = v20 + 2;
    else
      v3 = v20;
    if ((v2 & 0x800) != 0)
    {
      v25 = *(_QWORD *)(a1 + 48);
      if (!v25)
      {
        sub_239131728();
        v25 = *(_QWORD *)(qword_2542CF408 + 48);
      }
      v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391666C4(v25);
      v27 = (int)v26;
      if (v26 >= 0x80)
        v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
      else
        v28 = 1;
      v3 = (v3 + v27 + v28 + 1);
    }
  }
  *(_DWORD *)(a1 + 60) = v3;
  return v3;
}

void sub_2391678E4(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A71FE8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391667D0(a1, (uint64_t)lpsrc);
}

uint64_t sub_23916794C()
{
  return 1;
}

_QWORD *sub_239167954@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.Is801LocationInd");
}

void sub_239167964(uint64_t a1, uint64_t a2)
{
  int v4;
  unsigned int v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  _BYTE v15[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 52);
  if (!(_BYTE)v4)
    return;
  if ((*(_BYTE *)(a2 + 52) & 1) != 0)
  {
    v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 9)
      __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 26232, "::CoreGem::proto::gnss::Emergency::ErrorCodes_IsValid(value)");
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0)
        goto LABEL_10;
      goto LABEL_21;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 52) |= 4u;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
    v8 = operator new();
    *(_QWORD *)(v8 + 8) = 0;
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)v8 = &off_250A6F430;
    *(_DWORD *)(v8 + 24) = 0;
    *(_QWORD *)(a1 + 16) = v8;
  }
  v9 = *(_QWORD *)(a2 + 16);
  if (!v9)
  {
    sub_239131728();
    v9 = *(_QWORD *)(qword_2542CF708 + 16);
  }
  sub_23913D808((_DWORD *)v8, v9);
  v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0)
      goto LABEL_11;
LABEL_26:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    v12 = *(_QWORD *)(a1 + 32);
    if (!v12)
    {
      v12 = operator new();
      *(_QWORD *)v12 = &off_250A715F0;
      *(_DWORD *)(v12 + 60) = 0;
      *(_DWORD *)(v12 + 64) = 0;
      *(_OWORD *)(v12 + 8) = 0u;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_DWORD *)(v12 + 55) = 0;
      *(_QWORD *)(a1 + 32) = v12;
    }
    v13 = *(_QWORD *)(a2 + 32);
    if (!v13)
    {
      sub_239131728();
      v13 = *(_QWORD *)(qword_2542CF708 + 32);
    }
    sub_2391667D0(v12, v13);
    v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_12:
      if ((v4 & 0x40) == 0)
        return;
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_21:
  *(_DWORD *)(a1 + 52) |= 8u;
  v10 = *(_QWORD *)(a1 + 24);
  if (!v10)
  {
    v10 = operator new();
    *(_QWORD *)v10 = &off_250A70588;
    *(_OWORD *)(v10 + 48) = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
    *(_OWORD *)(v10 + 8) = 0u;
    *(_OWORD *)(v10 + 24) = 0u;
    *(_DWORD *)(v10 + 40) = 0;
    *(_QWORD *)(a1 + 24) = v10;
  }
  v11 = *(_QWORD *)(a2 + 24);
  if (!v11)
  {
    sub_239131728();
    v11 = *(_QWORD *)(qword_2542CF708 + 24);
  }
  sub_2391519C8(v10, v11);
  v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x10) != 0)
    goto LABEL_26;
LABEL_11:
  if ((v4 & 0x20) == 0)
    goto LABEL_12;
LABEL_31:
  v14 = *(_DWORD *)(a2 + 40);
  if (v14 >= 4)
    __assert_rtn("set_aflt_action", "GnssEmergencyTypes.pb.h", 26403, "::CoreGem::proto::gnss::Emergency::AfltAction_IsValid(value)");
  *(_DWORD *)(a1 + 52) |= 0x20u;
  *(_DWORD *)(a1 + 40) = v14;
  if ((*(_DWORD *)(a2 + 52) & 0x40) != 0)
  {
LABEL_13:
    v6 = *(_BYTE *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(_BYTE *)(a1 + 44) = v6;
  }
}

void sub_239167C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239167C38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = &off_250A71668;
  sub_239131728();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF708 != a1)
  {
    v2 = *((_QWORD *)a1 + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)a1 + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)a1 + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239167CBC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239167C38(a1);
  JUMPOUT(0x23B838844);
}

double sub_239167CE0()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A71668;
  *(_QWORD *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_QWORD *)(v0 + 37) = 0;
  return result;
}

uint64_t sub_239167D28(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 52);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v2 = *(_DWORD *)(result + 52);
      }
    }
    if ((v2 & 8) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
      {
        result = sub_239151E10(result);
        v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      result = *(_QWORD *)(v1 + 32);
      if (result)
        result = sub_239166BF8(result);
    }
    *(_DWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 44) = 0;
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_239167DA4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  unint64_t v10;
  char *v11;
  int v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  uint64_t result;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  BOOL v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE *v34;
  uint64_t v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  int v40;
  _BYTE *v41;
  unsigned int v42;
  _BYTE *v43;
  unsigned int v44;
  unsigned __int8 *v45;
  unsigned int v46;

  v4 = (unsigned int *)(a1 + 12);
  while (2)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v46 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
          if (!(_DWORD)result)
            return result;
          v9 = v46;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)this + 1) = v8 + 1;
        }
        if (v9 <= 8)
        {
          *(_DWORD *)(a1 + 52) |= 1u;
          *(_DWORD *)(a1 + 8) = v9;
        }
        v18 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v18 < v10 && *v18 == 16)
        {
          v11 = v18 + 1;
          *((_QWORD *)this + 1) = v11;
          goto LABEL_35;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_35:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v11;
          v19 = v11 + 1;
          *((_QWORD *)this + 1) = v19;
        }
        v12 = *(_DWORD *)(a1 + 52) | 2;
        *(_DWORD *)(a1 + 52) = v12;
        if ((unint64_t)v19 >= v10 || *v19 != 26)
          continue;
        *((_QWORD *)this + 1) = v19 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 52) = v12 | 4;
        v20 = *(_QWORD *)(a1 + 16);
        if (!v20)
        {
          v20 = operator new();
          *(_QWORD *)(v20 + 8) = 0;
          *(_QWORD *)(v20 + 16) = 0;
          *(_QWORD *)v20 = &off_250A6F430;
          *(_DWORD *)(v20 + 24) = 0;
          *(_QWORD *)(a1 + 16) = v20;
        }
        v46 = 0;
        v21 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v21 >= *((_QWORD *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0;
        }
        else
        {
          v46 = *v21;
          *((_QWORD *)this + 1) = v21 + 1;
        }
        v22 = *((_DWORD *)this + 14);
        v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23913D9E4((_DWORD *)v20, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v24 = *((_DWORD *)this + 14);
        v25 = __OFSUB__(v24, 1);
        v26 = v24 - 1;
        if (v26 < 0 == v25)
          *((_DWORD *)this + 14) = v26;
        v27 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v27 >= *((_QWORD *)this + 2) || *v27 != 34)
          continue;
        *((_QWORD *)this + 1) = v27 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 52) |= 8u;
        v28 = *(_QWORD *)(a1 + 24);
        if (!v28)
        {
          v28 = operator new();
          *(_QWORD *)v28 = &off_250A70588;
          *(_OWORD *)(v28 + 48) = 0u;
          *(_OWORD *)(v28 + 64) = 0u;
          *(_OWORD *)(v28 + 8) = 0u;
          *(_OWORD *)(v28 + 24) = 0u;
          *(_DWORD *)(v28 + 40) = 0;
          *(_QWORD *)(a1 + 24) = v28;
        }
        v46 = 0;
        v29 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v29 >= *((_QWORD *)this + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0;
        }
        else
        {
          v46 = *v29;
          *((_QWORD *)this + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)this + 14);
        v31 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v30 + 1;
        if (v30 >= v31)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239151EB0(v28, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v32 = *((_DWORD *)this + 14);
        v25 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v25)
          *((_DWORD *)this + 14) = v33;
        v34 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 != 42)
          continue;
        *((_QWORD *)this + 1) = v34 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        v35 = *(_QWORD *)(a1 + 32);
        if (!v35)
        {
          v35 = operator new();
          *(_QWORD *)v35 = &off_250A715F0;
          *(_DWORD *)(v35 + 60) = 0;
          *(_DWORD *)(v35 + 64) = 0;
          *(_OWORD *)(v35 + 8) = 0u;
          *(_OWORD *)(v35 + 24) = 0u;
          *(_OWORD *)(v35 + 40) = 0u;
          *(_DWORD *)(v35 + 55) = 0;
          *(_QWORD *)(a1 + 32) = v35;
        }
        v46 = 0;
        v36 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v36 >= *((_QWORD *)this + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0;
        }
        else
        {
          v46 = *v36;
          *((_QWORD *)this + 1) = v36 + 1;
        }
        v37 = *((_DWORD *)this + 14);
        v38 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v37 + 1;
        if (v37 < v38)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
          if (sub_239166C88(v35, this))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
              v39 = *((_DWORD *)this + 14);
              v25 = __OFSUB__(v39, 1);
              v40 = v39 - 1;
              if (v40 < 0 == v25)
                *((_DWORD *)this + 14) = v40;
              v41 = (_BYTE *)*((_QWORD *)this + 1);
              v13 = *((_QWORD *)this + 2);
              if ((unint64_t)v41 < v13 && *v41 == 48)
              {
                v14 = v41 + 1;
                *((_QWORD *)this + 1) = v14;
LABEL_85:
                v46 = 0;
                if ((unint64_t)v14 >= v13 || *v14 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
                  if (!(_DWORD)result)
                    return result;
                  v42 = v46;
                }
                else
                {
                  v42 = *v14;
                  *((_QWORD *)this + 1) = v14 + 1;
                }
                if (v42 <= 3)
                {
                  *(_DWORD *)(a1 + 52) |= 0x20u;
                  *(_DWORD *)(a1 + 40) = v42;
                }
                v43 = (_BYTE *)*((_QWORD *)this + 1);
                v15 = *((_QWORD *)this + 2);
                if ((unint64_t)v43 < v15 && *v43 == 56)
                {
                  v16 = v43 + 1;
                  *((_QWORD *)this + 1) = v16;
LABEL_95:
                  v46 = 0;
                  if ((unint64_t)v16 >= v15 || *v16 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
                    if (!(_DWORD)result)
                      return result;
                    v44 = v46;
                    v45 = (unsigned __int8 *)*((_QWORD *)this + 1);
                    v15 = *((_QWORD *)this + 2);
                  }
                  else
                  {
                    v44 = *v16;
                    v45 = (unsigned __int8 *)(v16 + 1);
                    *((_QWORD *)this + 1) = v45;
                  }
                  *(_BYTE *)(a1 + 44) = v44 != 0;
                  *(_DWORD *)(a1 + 52) |= 0x40u;
                  if (v45 == (unsigned __int8 *)v15
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    result = 1;
                    *((_BYTE *)this + 36) = 1;
                    return result;
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_24;
        v12 = *(_DWORD *)(a1 + 52);
        goto LABEL_43;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_57;
        goto LABEL_24;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_71;
        goto LABEL_24;
      case 6u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_85;
      case 7u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v16 = (char *)*((_QWORD *)this + 1);
        v15 = *((_QWORD *)this + 2);
        goto LABEL_95;
      default:
        v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_2391683C4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_11:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
    sub_239131728();
    v7 = *(_QWORD *)(qword_2542CF708 + 16);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_14:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
  {
    sub_239131728();
    v8 = *(_QWORD *)(qword_2542CF708 + 24);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_17:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
  {
    sub_239131728();
    v9 = *(_QWORD *)(qword_2542CF708 + 32);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 44), (uint64_t)a2, a4);
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 44), (uint64_t)a2, a4);
  return result;
}

uint64_t sub_2391684E8(uint64_t a1)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;

  LOBYTE(v2) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_49;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
    else if (v5 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      v2 = *(_DWORD *)(a1 + 52);
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      goto LABEL_17;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    v2 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    v7 = 2;
  }
  v3 += v7;
LABEL_17:
  if ((v2 & 4) != 0)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (!v8)
    {
      sub_239131728();
      v8 = *(_QWORD *)(qword_2542CF708 + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23913DC94(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 += v10 + v11 + 1;
    v2 = *(_DWORD *)(a1 + 52);
    if ((v2 & 8) == 0)
    {
LABEL_19:
      if ((v2 & 0x10) == 0)
        goto LABEL_20;
LABEL_34:
      v16 = *(_QWORD *)(a1 + 32);
      if (!v16)
      {
        sub_239131728();
        v16 = *(_QWORD *)(qword_2542CF708 + 32);
      }
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239167684(v16);
      v18 = (int)v17;
      if (v17 >= 0x80)
        v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      else
        v19 = 1;
      v3 += v18 + v19 + 1;
      v2 = *(_DWORD *)(a1 + 52);
      if ((v2 & 0x20) == 0)
        goto LABEL_46;
      goto LABEL_40;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_19;
  }
  v12 = *(_QWORD *)(a1 + 24);
  if (!v12)
  {
    sub_239131728();
    v12 = *(_QWORD *)(qword_2542CF708 + 24);
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239152744(v12);
  v14 = (int)v13;
  if (v13 >= 0x80)
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  else
    v15 = 1;
  v3 += v14 + v15 + 1;
  v2 = *(_DWORD *)(a1 + 52);
  if ((v2 & 0x10) != 0)
    goto LABEL_34;
LABEL_20:
  if ((v2 & 0x20) != 0)
  {
LABEL_40:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 11;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      v2 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      v21 = 2;
    }
    v3 += v21;
  }
LABEL_46:
  if ((v2 & 0x40) != 0)
    result = v3 + 2;
  else
    result = v3;
LABEL_49:
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_2391686C0(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A72000, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239167964(a1, (uint64_t)lpsrc);
}

uint64_t sub_239168728()
{
  return 1;
}

_QWORD *sub_239168730@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.MeasurementReportWithEstimate");
}

void sub_239168740(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A716E0;
  sub_239131728();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239168778(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239168740(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23916879C()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A716E0;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_2391687D4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;

  while (2)
  {
    v4 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v21 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)this + 1) = v10;
LABEL_23:
          *(_BYTE *)(a1 + 8) = v9 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)this + 1) = v11;
            goto LABEL_26;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if ((_DWORD)result)
        {
          v9 = v21;
          v10 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v11 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
LABEL_26:
        v21 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v14 = v21;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v14 = *v11;
          v15 = v11 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        *(_BYTE *)(a1 + 9) = v14 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24)
          continue;
        v12 = v15 + 1;
        *((_QWORD *)this + 1) = v12;
LABEL_34:
        v21 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v16 = v21;
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v16 = *v12;
          v17 = v12 + 1;
          *((_QWORD *)this + 1) = v17;
        }
        *(_BYTE *)(a1 + 10) = v16 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v17 >= v7 || *v17 != 32)
          continue;
        v13 = v17 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_42:
        v21 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v18 = v21;
          v19 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v18 = *v13;
          v19 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)this + 1) = v19;
        }
        *(_BYTE *)(a1 + 11) = v18 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v19 != (unsigned __int8 *)v7 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v12 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v13 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_42;
      default:
        v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_239168AA8(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
  }
LABEL_8:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  if ((*(_DWORD *)(v5 + 16) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
  return result;
}

uint64_t sub_239168B3C(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 16);
  v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0)
    v2 += 2;
  if ((v1 & 4) != 0)
    v2 += 2;
  if ((v1 & 8) != 0)
    v2 += 2;
  if (*(_DWORD *)(a1 + 16))
    v3 = v2;
  else
    v3 = 0;
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_239168B7C(uint64_t a1, _BYTE *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A72018, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239161BF8(a1, lpsrc);
}

uint64_t sub_239168BE4()
{
  return 1;
}

_QWORD *sub_239168BEC@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gnss.Emergency.Cdma1xContext");
}

uint64_t sub_239168BFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168C04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

uint64_t sub_239168C0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239168C14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_239168C1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_239168C24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_239168C2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_239168C34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168C3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_239168C44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_239168C4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_239168C54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_239168C5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239168C64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168C6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_239168C74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_239168C7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 100);
}

uint64_t sub_239168C84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168C8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239168C94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168C9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168CA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_239168CAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239168CB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168CBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168CC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239168CCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168CD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168CDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_239168CE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_239168CEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239168CF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239168CFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_239168D04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239168D0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168D14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239168D1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168D24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168D2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239168D34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_239168D3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_239168D44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168D4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_239168D54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_239168D5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168D64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168D6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239168D74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168D7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239168D84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_239168D8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168D94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_239168D9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_239168DA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_239168DAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168DB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_239168DBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_239168DC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_239168DCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_239168DD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_239168DDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168DE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_239168DEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168DF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_239168DFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239168E04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_239168E0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_239168E14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_239168E1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_239168E24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_239168E2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168E34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168E3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239168E44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239168E4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168E54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_239168E5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_239168E64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_239168E6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

uint64_t sub_239168E74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_239168E7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239168E84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239168E8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_239168E94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_239168E9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_239168EA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239168EAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239168EB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_239168EBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239168EC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239168ECC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168ED4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239168EDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_239168EE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_239168EEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239168EF4()
{
  uint64_t result;

  if (qword_2542CF728)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF728 + 8))(qword_2542CF728);
  if (qword_2542CF418)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF418 + 8))(qword_2542CF418);
  if (qword_2542CF718)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF718 + 8))(qword_2542CF718);
  if (qword_2542CF420)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF420 + 8))(qword_2542CF420);
  if (qword_2542CF428)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF428 + 8))(qword_2542CF428);
  if (qword_2542CF430)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF430 + 8))(qword_2542CF430);
  if (qword_2542CF438)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF438 + 8))(qword_2542CF438);
  if (qword_2542CF440)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF440 + 8))(qword_2542CF440);
  if (qword_2542CF720)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF720 + 8))(qword_2542CF720);
  if (qword_2542CF448)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF448 + 8))(qword_2542CF448);
  if (qword_2542CF450)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF450 + 8))(qword_2542CF450);
  if (qword_2542CF458)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF458 + 8))(qword_2542CF458);
  if (qword_2542CF460)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF460 + 8))(qword_2542CF460);
  if (qword_2542CF468)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF468 + 8))(qword_2542CF468);
  if (qword_2542CF470)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF470 + 8))(qword_2542CF470);
  if (qword_2542CF478)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF478 + 8))(qword_2542CF478);
  if (qword_2542CF480)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF480 + 8))(qword_2542CF480);
  if (qword_2542CF488)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF488 + 8))(qword_2542CF488);
  if (qword_2542CF490)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF490 + 8))(qword_2542CF490);
  if (qword_2542CF498)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF498 + 8))(qword_2542CF498);
  if (qword_2542CF4A0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4A0 + 8))(qword_2542CF4A0);
  if (qword_2542CF4A8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4A8 + 8))(qword_2542CF4A8);
  if (qword_2542CF4B0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4B0 + 8))(qword_2542CF4B0);
  if (qword_2542CF4B8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4B8 + 8))(qword_2542CF4B8);
  if (qword_2542CF4C0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4C0 + 8))(qword_2542CF4C0);
  if (qword_2542CF4C8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4C8 + 8))(qword_2542CF4C8);
  if (qword_2542CF4D0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4D0 + 8))(qword_2542CF4D0);
  if (qword_2542CF4D8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4D8 + 8))(qword_2542CF4D8);
  if (qword_2542CF4E0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4E0 + 8))(qword_2542CF4E0);
  if (qword_2542CF4E8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4E8 + 8))(qword_2542CF4E8);
  if (qword_2542CF4F0)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4F0 + 8))(qword_2542CF4F0);
  if (qword_2542CF4F8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF4F8 + 8))(qword_2542CF4F8);
  if (qword_2542CF500)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF500 + 8))(qword_2542CF500);
  if (qword_2542CF508)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF508 + 8))(qword_2542CF508);
  if (qword_2542CF510)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF510 + 8))(qword_2542CF510);
  if (qword_2542CF518)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF518 + 8))(qword_2542CF518);
  if (qword_2542CF520)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF520 + 8))(qword_2542CF520);
  if (qword_2542CF528)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF528 + 8))(qword_2542CF528);
  if (qword_2542CF530)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF530 + 8))(qword_2542CF530);
  if (qword_2542CF538)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF538 + 8))(qword_2542CF538);
  if (qword_2542CF540)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF540 + 8))(qword_2542CF540);
  if (qword_2542CF548)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF548 + 8))(qword_2542CF548);
  if (qword_2542CF550)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_2542CF550 + 8))(qword_2542CF550);
  result = qword_2542CF558;
  if (qword_2542CF558)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_2542CF558 + 8))(qword_2542CF558);
  return result;
}

uint64_t sub_239169328(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(void);

  wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreGEM/Sources/Protobuf/Generated/GpsdProtocol.pb.cc", a4);
  sub_23910C3C8();
  sub_239131728();
  sub_23911339C();
  v4 = operator new();
  *(_QWORD *)v4 = &off_250A72040;
  *(_OWORD *)(v4 + 364) = 0u;
  *(_OWORD *)(v4 + 380) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 120) = 0u;
  *(_OWORD *)(v4 + 136) = 0u;
  *(_OWORD *)(v4 + 152) = 0u;
  *(_OWORD *)(v4 + 168) = 0u;
  *(_OWORD *)(v4 + 184) = 0u;
  *(_OWORD *)(v4 + 200) = 0u;
  *(_OWORD *)(v4 + 216) = 0u;
  *(_OWORD *)(v4 + 232) = 0u;
  *(_OWORD *)(v4 + 248) = 0u;
  *(_BYTE *)(v4 + 360) = 0;
  qword_2542CF728 = v4;
  *(_OWORD *)(v4 + 8) = 0u;
  v4 += 8;
  *(_OWORD *)(v4 + 256) = 0u;
  *(_OWORD *)(v4 + 272) = 0u;
  *(_OWORD *)(v4 + 288) = 0u;
  *(_OWORD *)(v4 + 304) = 0u;
  *(_OWORD *)(v4 + 320) = 0u;
  *(_OWORD *)(v4 + 336) = 0u;
  v5 = (_QWORD *)operator new();
  *v5 = &off_250A720B8;
  v5[1] = 0;
  v5[2] = 0;
  v5[3] = 0;
  qword_2542CF418 = (uint64_t)v5;
  v6 = operator new();
  *(_QWORD *)v6 = &off_250A72130;
  *(_OWORD *)(v6 + 8) = 0u;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_OWORD *)(v6 + 120) = 0u;
  *(_OWORD *)(v6 + 136) = 0u;
  *(_OWORD *)(v6 + 152) = 0u;
  *(_OWORD *)(v6 + 168) = 0u;
  *(_OWORD *)(v6 + 184) = 0u;
  *(_OWORD *)(v6 + 200) = 0u;
  *(_DWORD *)(v6 + 216) = 0;
  qword_2542CF718 = v6;
  v7 = operator new();
  *(_QWORD *)(v7 + 28) = 0;
  *(_QWORD *)(v7 + 8) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)v7 = &off_250A721A8;
  *(_DWORD *)(v7 + 23) = 0;
  qword_2542CF420 = v7;
  v8 = operator new();
  *(_QWORD *)v8 = &off_250A72220;
  *(_BYTE *)(v8 + 8) = 1;
  *(_QWORD *)(v8 + 16) = 0;
  *(_DWORD *)(v8 + 9) = 0;
  *(_BYTE *)(v8 + 13) = 0;
  qword_2542CF428 = v8;
  v9 = operator new();
  v10 = MEMORY[0x24BEDD958];
  *(_QWORD *)v9 = &off_250A72298;
  *(_QWORD *)(v9 + 8) = v10;
  *(_QWORD *)(v9 + 16) = 0;
  *(_DWORD *)(v9 + 24) = 0;
  qword_2542CF430 = v9;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250A72310;
  v11[1] = v10;
  v11[2] = 0;
  qword_2542CF438 = (uint64_t)v11;
  v12 = operator new();
  *(_QWORD *)(v12 + 8) = 0;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)v12 = &off_250A72388;
  *(_DWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  qword_2542CF440 = v12;
  v13 = operator new();
  *(_QWORD *)v13 = &off_250A72400;
  *(_QWORD *)(v13 + 8) = 0;
  *(_DWORD *)(v13 + 16) = 0;
  *(_BYTE *)(v13 + 20) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = 0;
  qword_2542CF720 = v13;
  v14 = operator new();
  *(_QWORD *)v14 = &off_250A72478;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  qword_2542CF448 = v14;
  v15 = (_QWORD *)operator new();
  v15[1] = 0;
  v15[2] = 0;
  *v15 = &off_250A724F0;
  qword_2542CF450 = (uint64_t)v15;
  v16 = (_QWORD *)operator new();
  v16[1] = 0;
  v16[2] = 0;
  *v16 = &off_250A72568;
  qword_2542CF458 = (uint64_t)v16;
  v17 = operator new();
  *(_QWORD *)(v17 + 8) = 0;
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)v17 = &off_250A725E0;
  *(_DWORD *)(v17 + 24) = 0;
  *(_QWORD *)(v17 + 32) = 0;
  qword_2542CF460 = v17;
  v18 = operator new();
  *(_QWORD *)(v18 + 8) = 0;
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)v18 = &off_250A72658;
  *(_DWORD *)(v18 + 24) = 0;
  *(_QWORD *)(v18 + 32) = 0;
  qword_2542CF468 = v18;
  v19 = operator new();
  *(_QWORD *)(v19 + 8) = 0;
  *(_QWORD *)(v19 + 16) = 0;
  *(_QWORD *)v19 = &off_250A726D0;
  *(_DWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 32) = 0;
  qword_2542CF470 = v19;
  v20 = operator new();
  *(_QWORD *)v20 = &off_250A72748;
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  qword_2542CF478 = v20;
  v21 = operator new();
  *(_QWORD *)v21 = &off_250A727C0;
  *(_QWORD *)(v21 + 72) = 0;
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 40) = 0u;
  *(_OWORD *)(v21 + 54) = 0u;
  qword_2542CF480 = v21;
  v22 = operator new();
  *(_QWORD *)v22 = &off_250A72838;
  *(_QWORD *)(v22 + 8) = 0;
  *(_OWORD *)(v22 + 16) = xmmword_2391CAF50;
  *(_DWORD *)(v22 + 32) = 0;
  qword_2542CF488 = v22;
  v23 = operator new();
  *(_QWORD *)v23 = &off_250A728B0;
  *(_QWORD *)(v23 + 8) = 0;
  *(_QWORD *)(v23 + 16) = 4;
  *(_DWORD *)(v23 + 24) = 0;
  qword_2542CF490 = v23;
  v24 = operator new();
  *(_QWORD *)v24 = &off_250A72928;
  *(_QWORD *)(v24 + 8) = 15;
  *(_DWORD *)(v24 + 16) = 0;
  qword_2542CF498 = v24;
  v25 = operator new();
  *(_QWORD *)v25 = &off_250A729A0;
  *(_OWORD *)(v25 + 8) = 0u;
  *(_OWORD *)(v25 + 24) = 0u;
  *(_QWORD *)(v25 + 40) = 0;
  qword_2542CF4A0 = v25;
  v26 = operator new();
  *(_QWORD *)v26 = &off_250A72A18;
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  qword_2542CF4A8 = v26;
  v27 = operator new();
  *(_QWORD *)(v27 + 8) = 0;
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)v27 = &off_250A72A90;
  *(_DWORD *)(v27 + 24) = 0;
  qword_2542CF4B0 = v27;
  v28 = operator new();
  *(_QWORD *)v28 = &off_250A72B08;
  *(_BYTE *)(v28 + 8) = 0;
  *(_QWORD *)(v28 + 12) = 0;
  *(_DWORD *)(v28 + 20) = 0;
  qword_2542CF4B8 = v28;
  v29 = (_QWORD *)operator new();
  v29[1] = 0;
  v29[2] = 0;
  *v29 = &off_250A72B80;
  qword_2542CF4C0 = (uint64_t)v29;
  v30 = operator new();
  *(_QWORD *)v30 = &off_250A72BF8;
  *(_WORD *)(v30 + 8) = 0;
  *(_QWORD *)(v30 + 12) = 0;
  qword_2542CF4C8 = v30;
  v31 = operator new();
  *(_QWORD *)v31 = &off_250A72C70;
  *(_BYTE *)(v31 + 8) = 0;
  *(_QWORD *)(v31 + 12) = 0;
  qword_2542CF4D0 = v31;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250A72CE8;
  v32[1] = v10;
  v32[2] = 0;
  qword_2542CF4D8 = (uint64_t)v32;
  v33 = (_QWORD *)operator new();
  *v33 = &off_250A72D60;
  v33[1] = v10;
  v33[2] = 0;
  qword_2542CF4E0 = (uint64_t)v33;
  v34 = operator new();
  *(_QWORD *)(v34 + 8) = 0;
  *(_QWORD *)(v34 + 16) = 0;
  *(_QWORD *)v34 = &off_250A72EC8;
  *(_DWORD *)(v34 + 24) = 0;
  *(_QWORD *)(v34 + 32) = 0;
  *(_QWORD *)(v34 + 40) = 0;
  qword_2542CF4E8 = v34;
  v35 = operator new();
  *(_QWORD *)v35 = &off_250A72DD8;
  *(_QWORD *)(v35 + 16) = 0;
  *(_DWORD *)(v35 + 8) = 0;
  *(_DWORD *)(v35 + 11) = 0;
  qword_2542CF4F0 = v35;
  v36 = operator new();
  *(_QWORD *)v36 = &off_250A72E50;
  *(_QWORD *)(v36 + 8) = v10;
  *(_QWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = v10;
  *(_DWORD *)(v36 + 32) = 0;
  qword_2542CF4F8 = v36;
  v37 = operator new();
  *(_QWORD *)v37 = &off_250A72F40;
  *(_QWORD *)(v37 + 8) = 0;
  *(_DWORD *)(v37 + 16) = 0;
  qword_2542CF500 = v37;
  v38 = operator new();
  *(_QWORD *)v38 = &off_250A73198;
  *(_BYTE *)(v38 + 8) = 0;
  *(_OWORD *)(v38 + 12) = 0u;
  *(_OWORD *)(v38 + 28) = 0u;
  *(_OWORD *)(v38 + 44) = 0u;
  qword_2542CF508 = v38;
  v39 = operator new();
  *(_QWORD *)v39 = &off_250A72FB8;
  *(_OWORD *)(v39 + 8) = 0u;
  *(_OWORD *)(v39 + 24) = 0u;
  *(_OWORD *)(v39 + 40) = 0u;
  qword_2542CF510 = v39;
  v40 = operator new();
  *(_QWORD *)v40 = &off_250A73030;
  *(_OWORD *)(v40 + 8) = 0u;
  *(_OWORD *)(v40 + 24) = 0u;
  qword_2542CF518 = v40;
  v41 = (_QWORD *)operator new();
  v41[1] = 0;
  v41[2] = 0;
  *v41 = &off_250A730A8;
  qword_2542CF520 = (uint64_t)v41;
  v42 = operator new();
  *(_QWORD *)v42 = &off_250A73120;
  *(_QWORD *)(v42 + 8) = 0;
  *(_QWORD *)(v42 + 16) = 0;
  *(_QWORD *)(v42 + 24) = 0;
  *(_BYTE *)(v42 + 32) = 0;
  *(_QWORD *)(v42 + 36) = 0;
  *(_QWORD *)(v42 + 52) = 0;
  *(_QWORD *)(v42 + 44) = 0;
  qword_2542CF528 = v42;
  v43 = operator new();
  *(_QWORD *)v43 = &off_250A73210;
  *(_QWORD *)(v43 + 8) = 0;
  *(_DWORD *)(v43 + 16) = 0;
  qword_2542CF530 = v43;
  v44 = operator new();
  *(_QWORD *)v44 = &off_250A73288;
  *(_BYTE *)(v44 + 8) = 0;
  *(_QWORD *)(v44 + 12) = 0;
  qword_2542CF538 = v44;
  v45 = operator new();
  *(_QWORD *)(v45 + 8) = 0;
  *(_QWORD *)(v45 + 16) = 0;
  *(_QWORD *)v45 = &off_250A73300;
  *(_DWORD *)(v45 + 24) = 0;
  qword_2542CF540 = v45;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250A73378;
  v46[1] = 0;
  v46[2] = 0;
  v46[3] = v10;
  v46[4] = 0;
  qword_2542CF548 = (uint64_t)v46;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250A733F0;
  v47[1] = 0;
  v47[6] = 0;
  v47[2] = v10;
  v47[3] = 0;
  v47[4] = 0;
  v47[5] = 0;
  qword_2542CF550 = (uint64_t)v47;
  v48 = operator new();
  *(_QWORD *)v48 = &off_250A73468;
  *(_WORD *)(v48 + 8) = 0;
  *(_BYTE *)(v48 + 10) = 0;
  *(_QWORD *)(v48 + 12) = 0;
  qword_2542CF558 = v48;
  v49 = (_QWORD *)qword_2542CF728;
  v50 = qword_2542CF720;
  *(_QWORD *)(qword_2542CF728 + 24) = qword_2542CF720;
  v49[4] = qword_2542CF448;
  v49[5] = qword_2542CF460;
  v49[6] = qword_2542CF468;
  v49[7] = qword_2542CF470;
  v49[8] = qword_2542CF478;
  v49[9] = qword_2542CF480;
  v49[10] = qword_2542CF488;
  v49[11] = qword_2542CF490;
  v49[12] = qword_2542CF498;
  v49[13] = qword_2542CF4A0;
  v52 = qword_2542CF428;
  v51 = qword_2542CF430;
  v49[14] = qword_2542CF4A8;
  v49[15] = v51;
  v53 = qword_2542CF440;
  v49[16] = qword_2542CF438;
  v49[17] = v53;
  v54 = qword_2542CF458;
  v49[18] = qword_2542CF450;
  v49[19] = v52;
  v49[20] = v54;
  v55 = qword_2542CF4B0;
  v49[21] = qword_2542CF4B8;
  v49[22] = qword_2542CF4C0;
  v56 = qword_2542CF4C8;
  v49[23] = qword_2542CF4D0;
  v49[24] = qword_2542CF4D8;
  v49[25] = qword_2542CF4E0;
  v57 = (_QWORD *)qword_2542CF508;
  v49[26] = qword_2542CF508;
  v49[27] = v48;
  v49[28] = qword_2542CF530;
  v49[29] = v55;
  v58 = qword_2542CF678;
  v49[30] = v56;
  v49[31] = v58;
  v59 = qword_2542CF6C8;
  v49[32] = qword_2542CF6B0;
  v49[33] = v59;
  v60 = qword_2542CF6E0;
  v49[34] = qword_2542CF6D8;
  v49[35] = v60;
  v49[36] = qword_2542CF6C0;
  v61 = qword_2542CF690;
  v49[38] = qword_2542CF6B8;
  v49[39] = v61;
  v49[42] = qword_2542CF670;
  v62 = qword_2542CF6E8;
  v49[46] = qword_2542CF680;
  v49[47] = v62;
  v63 = (_QWORD *)qword_2542CF718;
  v64 = qword_2542CF638;
  *(_QWORD *)(qword_2542CF718 + 24) = qword_2542CF660;
  v63[4] = v64;
  v66 = qword_2542CF418;
  v65 = qword_2542CF420;
  v63[5] = qword_2542CF648;
  v63[6] = v65;
  v63[7] = qword_2542CF650;
  v67 = qword_2542CF4E8;
  v63[8] = qword_2542CF4E8;
  v68 = qword_2542CF658;
  v63[9] = qword_2542CF500;
  v63[10] = v68;
  v63[11] = qword_2542CF640;
  v63[13] = qword_2542CF538;
  v63[14] = qword_2542CF540;
  v69 = qword_2542CF6A0;
  v63[15] = qword_2542CF548;
  v63[16] = v69;
  v70 = qword_2542CF6D0;
  v63[17] = qword_2542CF6A8;
  v63[18] = v70;
  v71 = qword_2542CF700;
  v63[19] = qword_2542CF6F0;
  v63[20] = v71;
  *(_QWORD *)(v50 + 8) = qword_2542CF668;
  v72 = qword_2542CF698;
  v63[21] = qword_2542CF708;
  v63[22] = v72;
  v63[23] = qword_2542CF710;
  v63[25] = qword_2542CF6F8;
  *(_QWORD *)(v67 + 32) = qword_2542CF4F0;
  v57[2] = qword_2542CF528;
  v57[3] = qword_2542CF510;
  v57[4] = qword_2542CF518;
  v57[5] = qword_2542CF520;
  v73 = qword_2542CF550;
  *(_QWORD *)(qword_2542CF550 + 24) = v49;
  *(_QWORD *)(v73 + 32) = v66;
  *(_QWORD *)(v73 + 40) = v63;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)sub_239168EF4, v74);
}

void sub_239169F68()
{
  uint64_t v0;
  _QWORD v1[2];
  char v2;

  v0 = qword_2542CF600;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v1[0] = MEMORY[0x24BEDDBA8] + 16;
    v1[1] = sub_239169328;
    v2 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v1);
  }
}

void sub_239169FD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239169FE4(int a1)
{
  uint64_t result;

  result = 1;
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
      return result;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_23916A01C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = &off_250A72040;
  *(_OWORD *)(a1 + 364) = 0u;
  *(_OWORD *)(a1 + 380) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_BYTE *)(a1 + 360) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  sub_23916A0F8(a1, a2);
  return a1;
}

void sub_23916A0AC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *((_QWORD *)v1 + 43);
  if (v3)
    MEMORY[0x23B838820](v3, 0x1000C8052888210);
  v4 = *((_QWORD *)v1 + 40);
  if (v4)
    MEMORY[0x23B838820](v4, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void sub_23916A0F8(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  _DWORD *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _DWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  char v92;
  int v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE v99[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v99);
  }
  v4 = *(_DWORD *)(a2 + 328);
  if (v4)
  {
    sub_2391087A4((_DWORD *)(a1 + 320), *(_DWORD *)(a1 + 328) + v4);
    memcpy((void *)(*(_QWORD *)(a1 + 320) + 4 * *(int *)(a1 + 328)), *(const void **)(a2 + 320), 4 * *(int *)(a2 + 328));
    *(_DWORD *)(a1 + 328) += *(_DWORD *)(a2 + 328);
  }
  v5 = *(_DWORD *)(a2 + 352);
  if (v5)
  {
    sub_2391087A4((_DWORD *)(a1 + 344), *(_DWORD *)(a1 + 352) + v5);
    memcpy((void *)(*(_QWORD *)(a1 + 344) + 4 * *(int *)(a1 + 352)), *(const void **)(a2 + 344), 4 * *(int *)(a2 + 352));
    *(_DWORD *)(a1 + 352) += *(_DWORD *)(a2 + 352);
  }
  v6 = *(_DWORD *)(a2 + 388);
  if (!(_BYTE)v6)
    goto LABEL_46;
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 388) |= 1u;
    *(_QWORD *)(a1 + 8) = v7;
    v6 = *(_DWORD *)(a2 + 388);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0)
        goto LABEL_11;
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  v8 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 388) |= 2u;
  *(_DWORD *)(a1 + 16) = v8;
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0)
      goto LABEL_12;
    goto LABEL_21;
  }
LABEL_19:
  v9 = *(_DWORD *)(a2 + 20);
  if ((sub_239169FE4(v9) & 1) == 0)
    __assert_rtn("set_type", "GpsdProtocol.pb.h", 5845, "::CoreGem::proto::gpsd::Request_Type_IsValid(value)");
  *(_DWORD *)(a1 + 388) |= 4u;
  *(_DWORD *)(a1 + 20) = v9;
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0)
      goto LABEL_13;
    goto LABEL_26;
  }
LABEL_21:
  *(_DWORD *)(a1 + 388) |= 8u;
  v10 = *(_QWORD *)(a1 + 24);
  if (!v10)
  {
    v10 = operator new();
    *(_QWORD *)v10 = &off_250A72400;
    *(_QWORD *)(v10 + 8) = 0;
    *(_DWORD *)(v10 + 16) = 0;
    *(_BYTE *)(v10 + 20) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_QWORD *)(v10 + 32) = 0;
    *(_QWORD *)(a1 + 24) = v10;
  }
  v11 = *(_QWORD *)(a2 + 24);
  if (!v11)
  {
    sub_239169F68();
    v11 = *(_QWORD *)(qword_2542CF728 + 24);
  }
  sub_2391711C8(v10, v11);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0)
      goto LABEL_14;
LABEL_31:
    *(_DWORD *)(a1 + 388) |= 0x20u;
    v14 = *(_QWORD *)(a1 + 40);
    if (!v14)
    {
      v14 = operator new();
      *(_QWORD *)(v14 + 8) = 0;
      *(_QWORD *)(v14 + 16) = 0;
      *(_QWORD *)v14 = &off_250A725E0;
      *(_DWORD *)(v14 + 24) = 0;
      *(_QWORD *)(v14 + 32) = 0;
      *(_QWORD *)(a1 + 40) = v14;
    }
    v15 = *(_QWORD *)(a2 + 40);
    if (!v15)
    {
      sub_239169F68();
      v15 = *(_QWORD *)(qword_2542CF728 + 40);
    }
    sub_239171440((int *)v14, v15);
    v6 = *(_DWORD *)(a2 + 388);
    if ((v6 & 0x40) == 0)
    {
LABEL_15:
      if ((v6 & 0x80) == 0)
        goto LABEL_46;
      goto LABEL_41;
    }
    goto LABEL_36;
  }
LABEL_26:
  *(_DWORD *)(a1 + 388) |= 0x10u;
  v12 = *(_QWORD *)(a1 + 32);
  if (!v12)
  {
    v12 = operator new();
    *(_QWORD *)v12 = &off_250A72478;
    *(_OWORD *)(v12 + 8) = 0u;
    *(_OWORD *)(v12 + 24) = 0u;
    *(_QWORD *)(a1 + 32) = v12;
  }
  v13 = *(_QWORD *)(a2 + 32);
  if (!v13)
  {
    sub_239169F68();
    v13 = *(_QWORD *)(qword_2542CF728 + 32);
  }
  sub_239171358(v12, v13);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x20) != 0)
    goto LABEL_31;
LABEL_14:
  if ((v6 & 0x40) == 0)
    goto LABEL_15;
LABEL_36:
  *(_DWORD *)(a1 + 388) |= 0x40u;
  v16 = *(_QWORD *)(a1 + 48);
  if (!v16)
  {
    v16 = operator new();
    *(_QWORD *)(v16 + 8) = 0;
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)v16 = &off_250A72658;
    *(_DWORD *)(v16 + 24) = 0;
    *(_QWORD *)(v16 + 32) = 0;
    *(_QWORD *)(a1 + 48) = v16;
  }
  v17 = *(_QWORD *)(a2 + 48);
  if (!v17)
  {
    sub_239169F68();
    v17 = *(_QWORD *)(qword_2542CF728 + 48);
  }
  sub_2391715A4((int *)v16, v17);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x80) != 0)
  {
LABEL_41:
    *(_DWORD *)(a1 + 388) |= 0x80u;
    v18 = *(_QWORD *)(a1 + 56);
    if (!v18)
    {
      v18 = operator new();
      *(_QWORD *)(v18 + 8) = 0;
      *(_QWORD *)(v18 + 16) = 0;
      *(_QWORD *)v18 = &off_250A726D0;
      *(_DWORD *)(v18 + 24) = 0;
      *(_QWORD *)(v18 + 32) = 0;
      *(_QWORD *)(a1 + 56) = v18;
    }
    v19 = *(_QWORD *)(a2 + 56);
    if (!v19)
    {
      sub_239169F68();
      v19 = *(_QWORD *)(qword_2542CF728 + 56);
    }
    sub_239171708((int *)v18, v19);
    v6 = *(_DWORD *)(a2 + 388);
  }
LABEL_46:
  if ((v6 & 0xFF00) == 0)
    goto LABEL_96;
  if ((v6 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 388) |= 0x100u;
    v20 = *(_QWORD *)(a1 + 64);
    if (!v20)
    {
      v20 = operator new();
      *(_QWORD *)v20 = &off_250A72748;
      *(_OWORD *)(v20 + 8) = 0u;
      *(_OWORD *)(v20 + 24) = 0u;
      *(_QWORD *)(a1 + 64) = v20;
    }
    v21 = *(_QWORD *)(a2 + 64);
    if (!v21)
    {
      sub_239169F68();
      v21 = *(_QWORD *)(qword_2542CF728 + 64);
    }
    sub_23917186C(v20, v21);
    v6 = *(_DWORD *)(a2 + 388);
    if ((v6 & 0x200) == 0)
    {
LABEL_49:
      if ((v6 & 0x400) == 0)
        goto LABEL_50;
      goto LABEL_66;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_49;
  }
  *(_DWORD *)(a1 + 388) |= 0x200u;
  v22 = *(_QWORD *)(a1 + 72);
  if (!v22)
  {
    v22 = operator new();
    *(_QWORD *)v22 = &off_250A727C0;
    *(_QWORD *)(v22 + 72) = 0;
    *(_OWORD *)(v22 + 8) = 0u;
    *(_OWORD *)(v22 + 24) = 0u;
    *(_OWORD *)(v22 + 40) = 0u;
    *(_OWORD *)(v22 + 54) = 0u;
    *(_QWORD *)(a1 + 72) = v22;
  }
  v23 = *(_QWORD *)(a2 + 72);
  if (!v23)
  {
    sub_239169F68();
    v23 = *(_QWORD *)(qword_2542CF728 + 72);
  }
  sub_239171954(v22, v23);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x400) == 0)
  {
LABEL_50:
    if ((v6 & 0x800) == 0)
      goto LABEL_51;
    goto LABEL_71;
  }
LABEL_66:
  *(_DWORD *)(a1 + 388) |= 0x400u;
  v24 = *(_QWORD *)(a1 + 80);
  if (!v24)
  {
    v24 = operator new();
    *(_QWORD *)v24 = &off_250A72838;
    *(_QWORD *)(v24 + 8) = 0;
    *(_OWORD *)(v24 + 16) = xmmword_2391CAF50;
    *(_DWORD *)(v24 + 32) = 0;
    *(_QWORD *)(a1 + 80) = v24;
  }
  v25 = *(_QWORD *)(a2 + 80);
  if (!v25)
  {
    sub_239169F68();
    v25 = *(_QWORD *)(qword_2542CF728 + 80);
  }
  sub_239171B88(v24, v25);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x800) == 0)
  {
LABEL_51:
    if ((v6 & 0x1000) == 0)
      goto LABEL_52;
    goto LABEL_76;
  }
LABEL_71:
  *(_DWORD *)(a1 + 388) |= 0x800u;
  v26 = *(_QWORD *)(a1 + 88);
  if (!v26)
  {
    v26 = operator new();
    *(_QWORD *)v26 = &off_250A728B0;
    *(_QWORD *)(v26 + 8) = 0;
    *(_QWORD *)(v26 + 16) = 4;
    *(_DWORD *)(v26 + 24) = 0;
    *(_QWORD *)(a1 + 88) = v26;
  }
  v27 = *(_QWORD *)(a2 + 88);
  if (!v27)
  {
    sub_239169F68();
    v27 = *(_QWORD *)(qword_2542CF728 + 88);
  }
  sub_239171CFC(v26, v27);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x1000) == 0)
  {
LABEL_52:
    if ((v6 & 0x2000) == 0)
      goto LABEL_53;
    goto LABEL_81;
  }
LABEL_76:
  *(_DWORD *)(a1 + 388) |= 0x1000u;
  v28 = *(_QWORD *)(a1 + 96);
  if (!v28)
  {
    v28 = operator new();
    *(_QWORD *)v28 = &off_250A72928;
    *(_QWORD *)(v28 + 8) = 15;
    *(_DWORD *)(v28 + 16) = 0;
    *(_QWORD *)(a1 + 96) = v28;
  }
  v29 = *(_QWORD *)(a2 + 96);
  if (!v29)
  {
    sub_239169F68();
    v29 = *(_QWORD *)(qword_2542CF728 + 96);
  }
  sub_239171DE8(v28, v29);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x2000) == 0)
  {
LABEL_53:
    if ((v6 & 0x4000) == 0)
      goto LABEL_54;
    goto LABEL_86;
  }
LABEL_81:
  *(_DWORD *)(a1 + 388) |= 0x2000u;
  v30 = *(_QWORD *)(a1 + 104);
  if (!v30)
  {
    v30 = operator new();
    *(_QWORD *)v30 = &off_250A729A0;
    *(_OWORD *)(v30 + 8) = 0u;
    *(_OWORD *)(v30 + 24) = 0u;
    *(_QWORD *)(v30 + 40) = 0;
    *(_QWORD *)(a1 + 104) = v30;
  }
  v31 = *(_QWORD *)(a2 + 104);
  if (!v31)
  {
    sub_239169F68();
    v31 = *(_QWORD *)(qword_2542CF728 + 104);
  }
  sub_239171EB8(v30, v31);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x4000) == 0)
  {
LABEL_54:
    if ((v6 & 0x8000) == 0)
      goto LABEL_96;
    goto LABEL_91;
  }
LABEL_86:
  *(_DWORD *)(a1 + 388) |= 0x4000u;
  v32 = *(_QWORD *)(a1 + 112);
  if (!v32)
  {
    v32 = operator new();
    *(_QWORD *)v32 = &off_250A72A18;
    *(_OWORD *)(v32 + 8) = 0u;
    *(_OWORD *)(v32 + 24) = 0u;
    *(_QWORD *)(a1 + 112) = v32;
  }
  v33 = *(_QWORD *)(a2 + 112);
  if (!v33)
  {
    sub_239169F68();
    v33 = *(_QWORD *)(qword_2542CF728 + 112);
  }
  sub_239171FC0(v32, v33);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x8000) != 0)
  {
LABEL_91:
    *(_DWORD *)(a1 + 388) |= 0x8000u;
    v34 = *(_QWORD *)(a1 + 120);
    if (!v34)
    {
      v34 = operator new();
      v35 = MEMORY[0x24BEDD958];
      *(_QWORD *)v34 = &off_250A72298;
      *(_QWORD *)(v34 + 8) = v35;
      *(_QWORD *)(v34 + 16) = 0;
      *(_DWORD *)(v34 + 24) = 0;
      *(_QWORD *)(a1 + 120) = v34;
    }
    v36 = *(_QWORD *)(a2 + 120);
    if (!v36)
    {
      sub_239169F68();
      v36 = *(_QWORD *)(qword_2542CF728 + 120);
    }
    sub_2391720A8(v34, v36);
    v6 = *(_DWORD *)(a2 + 388);
  }
LABEL_96:
  if ((v6 & 0xFF0000) == 0)
    goto LABEL_146;
  if ((v6 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 388) |= 0x10000u;
    v37 = *(_QWORD **)(a1 + 128);
    if (!v37)
    {
      v37 = (_QWORD *)operator new();
      v38 = MEMORY[0x24BEDD958];
      *v37 = &off_250A72310;
      v37[1] = v38;
      v37[2] = 0;
      *(_QWORD *)(a1 + 128) = v37;
    }
    v39 = *(_QWORD *)(a2 + 128);
    if (!v39)
    {
      sub_239169F68();
      v39 = *(_QWORD *)(qword_2542CF728 + 128);
    }
    sub_2391721D4((uint64_t)v37, v39);
    v6 = *(_DWORD *)(a2 + 388);
    if ((v6 & 0x20000) == 0)
    {
LABEL_99:
      if ((v6 & 0x40000) == 0)
        goto LABEL_100;
      goto LABEL_116;
    }
  }
  else if ((v6 & 0x20000) == 0)
  {
    goto LABEL_99;
  }
  *(_DWORD *)(a1 + 388) |= 0x20000u;
  v40 = *(_QWORD *)(a1 + 136);
  if (!v40)
  {
    v40 = operator new();
    *(_QWORD *)(v40 + 8) = 0;
    *(_QWORD *)(v40 + 16) = 0;
    *(_QWORD *)v40 = &off_250A72388;
    *(_DWORD *)(v40 + 24) = 0;
    *(_QWORD *)(v40 + 32) = 0;
    *(_QWORD *)(a1 + 136) = v40;
  }
  v41 = *(_QWORD *)(a2 + 136);
  if (!v41)
  {
    sub_239169F68();
    v41 = *(_QWORD *)(qword_2542CF728 + 136);
  }
  sub_2391722B0((int *)v40, v41);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x40000) == 0)
  {
LABEL_100:
    if ((v6 & 0x80000) == 0)
      goto LABEL_101;
    goto LABEL_121;
  }
LABEL_116:
  *(_DWORD *)(a1 + 388) |= 0x40000u;
  v42 = *(_QWORD **)(a1 + 144);
  if (!v42)
  {
    v42 = (_QWORD *)operator new();
    v42[1] = 0;
    v42[2] = 0;
    *v42 = &off_250A724F0;
    *(_QWORD *)(a1 + 144) = v42;
  }
  v43 = *(_QWORD *)(a2 + 144);
  if (!v43)
  {
    sub_239169F68();
    v43 = *(_QWORD *)(qword_2542CF728 + 144);
  }
  sub_239172414((uint64_t)v42, v43);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x80000) == 0)
  {
LABEL_101:
    if ((v6 & 0x100000) == 0)
      goto LABEL_102;
    goto LABEL_126;
  }
LABEL_121:
  *(_DWORD *)(a1 + 388) |= 0x80000u;
  v44 = *(_QWORD *)(a1 + 152);
  if (!v44)
  {
    v44 = operator new();
    *(_QWORD *)v44 = &off_250A72220;
    *(_BYTE *)(v44 + 8) = 1;
    *(_QWORD *)(v44 + 16) = 0;
    *(_DWORD *)(v44 + 9) = 0;
    *(_BYTE *)(v44 + 13) = 0;
    *(_QWORD *)(a1 + 152) = v44;
  }
  v45 = *(_BYTE **)(a2 + 152);
  if (!v45)
  {
    sub_239169F68();
    v45 = *(_BYTE **)(qword_2542CF728 + 152);
  }
  sub_2391724B4(v44, v45);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x100000) == 0)
  {
LABEL_102:
    if ((v6 & 0x200000) == 0)
      goto LABEL_103;
    goto LABEL_131;
  }
LABEL_126:
  *(_DWORD *)(a1 + 388) |= 0x100000u;
  v46 = *(_QWORD **)(a1 + 160);
  if (!v46)
  {
    v46 = (_QWORD *)operator new();
    v46[1] = 0;
    v46[2] = 0;
    *v46 = &off_250A72568;
    *(_QWORD *)(a1 + 160) = v46;
  }
  v47 = *(_QWORD *)(a2 + 160);
  if (!v47)
  {
    sub_239169F68();
    v47 = *(_QWORD *)(qword_2542CF728 + 160);
  }
  sub_2391725FC((uint64_t)v46, v47);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x200000) == 0)
  {
LABEL_103:
    if ((v6 & 0x400000) == 0)
      goto LABEL_104;
    goto LABEL_136;
  }
LABEL_131:
  *(_DWORD *)(a1 + 388) |= 0x200000u;
  v48 = *(_QWORD *)(a1 + 168);
  if (!v48)
  {
    v48 = operator new();
    *(_QWORD *)v48 = &off_250A72B08;
    *(_BYTE *)(v48 + 8) = 0;
    *(_QWORD *)(v48 + 16) = 0;
    *(_DWORD *)(v48 + 12) = 0;
    *(_QWORD *)(a1 + 168) = v48;
  }
  v49 = *(_QWORD *)(a2 + 168);
  if (!v49)
  {
    sub_239169F68();
    v49 = *(_QWORD *)(qword_2542CF728 + 168);
  }
  sub_23917269C(v48, v49);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x400000) == 0)
  {
LABEL_104:
    if ((v6 & 0x800000) == 0)
      goto LABEL_146;
    goto LABEL_141;
  }
LABEL_136:
  *(_DWORD *)(a1 + 388) |= 0x400000u;
  v50 = *(_QWORD *)(a1 + 176);
  if (!v50)
  {
    v50 = operator new();
    *(_QWORD *)(v50 + 8) = 0;
    *(_QWORD *)(v50 + 16) = 0;
    *(_QWORD *)v50 = &off_250A72B80;
    *(_QWORD *)(a1 + 176) = v50;
  }
  v51 = *(_QWORD *)(a2 + 176);
  if (!v51)
  {
    sub_239169F68();
    v51 = *(_QWORD *)(qword_2542CF728 + 176);
  }
  sub_23917275C((_DWORD *)v50, v51);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x800000) != 0)
  {
LABEL_141:
    *(_DWORD *)(a1 + 388) |= 0x800000u;
    v52 = *(_QWORD *)(a1 + 184);
    if (!v52)
    {
      v52 = operator new();
      *(_QWORD *)v52 = &off_250A72C70;
      *(_BYTE *)(v52 + 8) = 0;
      *(_DWORD *)(v52 + 12) = 0;
      *(_DWORD *)(v52 + 16) = 0;
      *(_QWORD *)(a1 + 184) = v52;
    }
    v53 = *(_QWORD *)(a2 + 184);
    if (!v53)
    {
      sub_239169F68();
      v53 = *(_QWORD *)(qword_2542CF728 + 184);
    }
    sub_23917281C(v52, v53);
    v6 = *(_DWORD *)(a2 + 388);
  }
LABEL_146:
  if (!HIBYTE(v6))
    goto LABEL_196;
  if ((v6 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 388) |= 0x1000000u;
    v54 = *(_QWORD **)(a1 + 192);
    if (!v54)
    {
      v54 = (_QWORD *)operator new();
      v55 = MEMORY[0x24BEDD958];
      *v54 = &off_250A72CE8;
      v54[1] = v55;
      v54[2] = 0;
      *(_QWORD *)(a1 + 192) = v54;
    }
    v56 = *(_QWORD *)(a2 + 192);
    if (!v56)
    {
      sub_239169F68();
      v56 = *(_QWORD *)(qword_2542CF728 + 192);
    }
    sub_2391728BC((uint64_t)v54, v56);
    v6 = *(_DWORD *)(a2 + 388);
    if ((v6 & 0x2000000) == 0)
    {
LABEL_149:
      if ((v6 & 0x4000000) == 0)
        goto LABEL_150;
      goto LABEL_166;
    }
  }
  else if ((v6 & 0x2000000) == 0)
  {
    goto LABEL_149;
  }
  *(_DWORD *)(a1 + 388) |= 0x2000000u;
  v57 = *(_QWORD **)(a1 + 200);
  if (!v57)
  {
    v57 = (_QWORD *)operator new();
    v58 = MEMORY[0x24BEDD958];
    *v57 = &off_250A72D60;
    v57[1] = v58;
    v57[2] = 0;
    *(_QWORD *)(a1 + 200) = v57;
  }
  v59 = *(_QWORD *)(a2 + 200);
  if (!v59)
  {
    sub_239169F68();
    v59 = *(_QWORD *)(qword_2542CF728 + 200);
  }
  sub_239172998((uint64_t)v57, v59);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_150:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_151;
    goto LABEL_171;
  }
LABEL_166:
  *(_DWORD *)(a1 + 388) |= 0x4000000u;
  v60 = *(_QWORD *)(a1 + 208);
  if (!v60)
  {
    v60 = operator new();
    *(_QWORD *)v60 = &off_250A73198;
    *(_BYTE *)(v60 + 8) = 0;
    *(_OWORD *)(v60 + 12) = 0u;
    *(_OWORD *)(v60 + 28) = 0u;
    *(_OWORD *)(v60 + 44) = 0u;
    *(_QWORD *)(a1 + 208) = v60;
  }
  v61 = *(_QWORD *)(a2 + 208);
  if (!v61)
  {
    sub_239169F68();
    v61 = *(_QWORD *)(qword_2542CF728 + 208);
  }
  sub_239172A74(v60, v61);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_151:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_152;
    goto LABEL_176;
  }
LABEL_171:
  *(_DWORD *)(a1 + 388) |= 0x8000000u;
  v62 = *(_QWORD *)(a1 + 216);
  if (!v62)
  {
    v62 = operator new();
    *(_QWORD *)v62 = &off_250A73468;
    *(_WORD *)(v62 + 8) = 0;
    *(_BYTE *)(v62 + 10) = 0;
    *(_DWORD *)(v62 + 12) = 0;
    *(_DWORD *)(v62 + 16) = 0;
    *(_QWORD *)(a1 + 216) = v62;
  }
  v63 = *(_BYTE **)(a2 + 216);
  if (!v63)
  {
    sub_239169F68();
    v63 = *(_BYTE **)(qword_2542CF728 + 216);
  }
  sub_239172D70(v62, v63);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_152:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_153;
    goto LABEL_181;
  }
LABEL_176:
  *(_DWORD *)(a1 + 388) |= 0x10000000u;
  v64 = *(_QWORD *)(a1 + 224);
  if (!v64)
  {
    v64 = operator new();
    *(_QWORD *)v64 = &off_250A73210;
    *(_QWORD *)(v64 + 8) = 0;
    *(_DWORD *)(v64 + 16) = 0;
    *(_QWORD *)(a1 + 224) = v64;
  }
  v65 = *(_QWORD *)(a2 + 224);
  if (!v65)
  {
    sub_239169F68();
    v65 = *(_QWORD *)(qword_2542CF728 + 224);
  }
  sub_239172E58(v64, v65);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_153:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_154;
    goto LABEL_186;
  }
LABEL_181:
  *(_DWORD *)(a1 + 388) |= 0x20000000u;
  v66 = *(_QWORD *)(a1 + 232);
  if (!v66)
  {
    v66 = operator new();
    *(_QWORD *)(v66 + 8) = 0;
    *(_QWORD *)(v66 + 16) = 0;
    *(_QWORD *)v66 = &off_250A72A90;
    *(_DWORD *)(v66 + 24) = 0;
    *(_QWORD *)(a1 + 232) = v66;
  }
  v67 = *(_QWORD *)(a2 + 232);
  if (!v67)
  {
    sub_239169F68();
    v67 = *(_QWORD *)(qword_2542CF728 + 232);
  }
  sub_239172F20(v66, v67);
  v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_154:
    if ((v6 & 0x80000000) == 0)
      goto LABEL_196;
    goto LABEL_191;
  }
LABEL_186:
  *(_DWORD *)(a1 + 388) |= 0x40000000u;
  v68 = *(_QWORD *)(a1 + 240);
  if (!v68)
  {
    v68 = operator new();
    *(_QWORD *)v68 = &off_250A72BF8;
    *(_WORD *)(v68 + 8) = 0;
    *(_DWORD *)(v68 + 12) = 0;
    *(_DWORD *)(v68 + 16) = 0;
    *(_QWORD *)(a1 + 240) = v68;
  }
  v69 = *(_BYTE **)(a2 + 240);
  if (!v69)
  {
    sub_239169F68();
    v69 = *(_BYTE **)(qword_2542CF728 + 240);
  }
  sub_239172FE0(v68, v69);
  if ((*(_DWORD *)(a2 + 388) & 0x80000000) != 0)
  {
LABEL_191:
    *(_DWORD *)(a1 + 388) |= 0x80000000;
    v70 = *(_QWORD *)(a1 + 248);
    if (!v70)
    {
      v70 = operator new();
      *(_BYTE *)(v70 + 32) = 0;
      v71 = MEMORY[0x24BEDD958];
      *(_QWORD *)v70 = &off_250A71140;
      *(_QWORD *)(v70 + 8) = v71;
      *(_DWORD *)(v70 + 36) = 0;
      *(_DWORD *)(v70 + 40) = 0;
      *(_QWORD *)(v70 + 16) = 0;
      *(_QWORD *)(v70 + 24) = 0;
      *(_QWORD *)(a1 + 248) = v70;
    }
    v72 = *(_QWORD *)(a2 + 248);
    if (!v72)
    {
      sub_239169F68();
      v72 = *(_QWORD *)(qword_2542CF728 + 248);
    }
    sub_239161D18(v70, v72);
  }
LABEL_196:
  v73 = *(_DWORD *)(a2 + 392);
  if (!(_BYTE)v73)
    goto LABEL_242;
  if ((v73 & 1) != 0)
  {
    *(_DWORD *)(a1 + 392) |= 1u;
    v74 = *(_QWORD *)(a1 + 256);
    if (!v74)
    {
      v74 = operator new();
      *(_QWORD *)v74 = &off_250A6F4A8;
      *(_OWORD *)(v74 + 8) = 0u;
      *(_OWORD *)(v74 + 24) = 0u;
      *(_OWORD *)(v74 + 40) = 0u;
      *(_OWORD *)(v74 + 56) = 0u;
      *(_OWORD *)(v74 + 68) = 0u;
      *(_QWORD *)(a1 + 256) = v74;
    }
    v75 = *(_DWORD **)(a2 + 256);
    if (!v75)
    {
      sub_239169F68();
      v75 = *(_DWORD **)(qword_2542CF728 + 256);
    }
    sub_23913DDE4((_DWORD *)v74, v75);
    v73 = *(_DWORD *)(a2 + 392);
    if ((v73 & 2) == 0)
    {
LABEL_199:
      if ((v73 & 4) == 0)
        goto LABEL_200;
      goto LABEL_212;
    }
  }
  else if ((v73 & 2) == 0)
  {
    goto LABEL_199;
  }
  v76 = *(_DWORD *)(a2 + 296);
  *(_DWORD *)(a1 + 392) |= 2u;
  *(_DWORD *)(a1 + 296) = v76;
  v73 = *(_DWORD *)(a2 + 392);
  if ((v73 & 4) == 0)
  {
LABEL_200:
    if ((v73 & 8) == 0)
      goto LABEL_201;
    goto LABEL_217;
  }
LABEL_212:
  *(_DWORD *)(a1 + 392) |= 4u;
  v77 = *(_QWORD *)(a1 + 264);
  if (!v77)
  {
    v77 = operator new();
    *(_QWORD *)v77 = &off_250A70E70;
    *(_QWORD *)(v77 + 56) = 0;
    *(_QWORD *)(v77 + 64) = 0;
    *(_QWORD *)(v77 + 48) = 0;
    *(_OWORD *)(v77 + 8) = 0u;
    *(_OWORD *)(v77 + 24) = 0u;
    *(_DWORD *)(v77 + 40) = 0;
    *(_QWORD *)(a1 + 264) = v77;
  }
  v78 = *(_QWORD *)(a2 + 264);
  if (!v78)
  {
    sub_239169F68();
    v78 = *(_QWORD *)(qword_2542CF728 + 264);
  }
  sub_23915C56C((_DWORD *)v77, v78);
  v73 = *(_DWORD *)(a2 + 392);
  if ((v73 & 8) == 0)
  {
LABEL_201:
    if ((v73 & 0x10) == 0)
      goto LABEL_202;
    goto LABEL_222;
  }
LABEL_217:
  *(_DWORD *)(a1 + 392) |= 8u;
  v79 = *(_QWORD *)(a1 + 272);
  if (!v79)
  {
    v79 = operator new();
    *(_QWORD *)v79 = &off_250A70EE8;
    *(_OWORD *)(v79 + 8) = 0u;
    *(_OWORD *)(v79 + 24) = 0u;
    *(_OWORD *)(v79 + 40) = 0u;
    *(_OWORD *)(v79 + 56) = 0u;
    *(_QWORD *)(a1 + 272) = v79;
  }
  v80 = *(_DWORD **)(a2 + 272);
  if (!v80)
  {
    sub_239169F68();
    v80 = *(_DWORD **)(qword_2542CF728 + 272);
  }
  sub_23915D378((_DWORD *)v79, v80);
  v73 = *(_DWORD *)(a2 + 392);
  if ((v73 & 0x10) == 0)
  {
LABEL_202:
    if ((v73 & 0x20) == 0)
      goto LABEL_203;
    goto LABEL_227;
  }
LABEL_222:
  *(_DWORD *)(a1 + 392) |= 0x10u;
  v81 = *(_QWORD *)(a1 + 280);
  if (!v81)
  {
    v81 = operator new();
    *(_QWORD *)(v81 + 8) = 0;
    *(_QWORD *)(v81 + 16) = 0;
    *(_QWORD *)v81 = &off_250A70FD8;
    *(_DWORD *)(v81 + 24) = 0;
    *(_QWORD *)(v81 + 40) = 0;
    *(_QWORD *)(v81 + 48) = 0;
    *(_QWORD *)(v81 + 32) = 0;
    *(_QWORD *)(a1 + 280) = v81;
  }
  v82 = *(_QWORD *)(a2 + 280);
  if (!v82)
  {
    sub_239169F68();
    v82 = *(_QWORD *)(qword_2542CF728 + 280);
  }
  sub_2391606AC((int *)v81, v82);
  v73 = *(_DWORD *)(a2 + 392);
  if ((v73 & 0x20) == 0)
  {
LABEL_203:
    if ((v73 & 0x40) == 0)
      goto LABEL_204;
    goto LABEL_232;
  }
LABEL_227:
  *(_DWORD *)(a1 + 392) |= 0x20u;
  v83 = *(_QWORD *)(a1 + 288);
  if (!v83)
  {
    v83 = operator new();
    *(_QWORD *)v83 = &off_250A71230;
    *(_QWORD *)(v83 + 56) = 0;
    *(_QWORD *)(v83 + 64) = 0;
    *(_QWORD *)(v83 + 48) = 0;
    *(_OWORD *)(v83 + 8) = 0u;
    *(_OWORD *)(v83 + 24) = 0u;
    *(_DWORD *)(v83 + 40) = 0;
    *(_QWORD *)(a1 + 288) = v83;
  }
  v84 = *(_QWORD *)(a2 + 288);
  if (!v84)
  {
    sub_239169F68();
    v84 = *(_QWORD *)(qword_2542CF728 + 288);
  }
  sub_2391635E4(v83, v84);
  v73 = *(_DWORD *)(a2 + 392);
  if ((v73 & 0x40) == 0)
  {
LABEL_204:
    if ((v73 & 0x80) == 0)
      goto LABEL_242;
    goto LABEL_237;
  }
LABEL_232:
  *(_DWORD *)(a1 + 392) |= 0x40u;
  v85 = *(_QWORD **)(a1 + 304);
  if (!v85)
  {
    v85 = (_QWORD *)operator new();
    *v85 = &off_250A71320;
    v85[1] = 0;
    v85[2] = 0;
    v85[3] = 0;
    *(_QWORD *)(a1 + 304) = v85;
  }
  v86 = *(_QWORD *)(a2 + 304);
  if (!v86)
  {
    sub_239169F68();
    v86 = *(_QWORD *)(qword_2542CF728 + 304);
  }
  sub_2391647DC((uint64_t)v85, v86);
  v73 = *(_DWORD *)(a2 + 392);
  if ((v73 & 0x80) != 0)
  {
LABEL_237:
    *(_DWORD *)(a1 + 392) |= 0x80u;
    v87 = *(_QWORD **)(a1 + 312);
    if (!v87)
    {
      v87 = (_QWORD *)operator new();
      *v87 = &off_250A710C8;
      v87[1] = 0;
      v87[2] = 0;
      v87[3] = 0;
      *(_QWORD *)(a1 + 312) = v87;
    }
    v88 = *(_QWORD *)(a2 + 312);
    if (!v88)
    {
      sub_239169F68();
      v88 = *(_QWORD *)(qword_2542CF728 + 312);
    }
    sub_2391614B4((uint64_t)v87, v88);
    v73 = *(_DWORD *)(a2 + 392);
  }
LABEL_242:
  if ((v73 & 0x1FE00) == 0)
    return;
  if ((v73 & 0x200) != 0)
  {
    *(_DWORD *)(a1 + 392) |= 0x200u;
    v89 = *(_QWORD *)(a1 + 336);
    if (!v89)
    {
      v89 = operator new();
      *(_QWORD *)(v89 + 8) = 0;
      *(_QWORD *)(v89 + 16) = 0;
      *(_QWORD *)v89 = &off_250A6EDA0;
      *(_DWORD *)(v89 + 24) = 0;
      *(_QWORD *)(v89 + 32) = 0;
      *(_QWORD *)(v89 + 40) = 0;
      *(_DWORD *)(v89 + 48) = 0;
      *(_QWORD *)(v89 + 56) = 0;
      *(_QWORD *)(v89 + 64) = 0;
      *(_DWORD *)(v89 + 72) = 0;
      *(_QWORD *)(v89 + 80) = 0;
      *(_DWORD *)(v89 + 88) = 0;
      *(_QWORD *)(a1 + 336) = v89;
    }
    v90 = *(_QWORD *)(a2 + 336);
    if (!v90)
    {
      sub_239169F68();
      v90 = *(_QWORD *)(qword_2542CF728 + 336);
    }
    sub_239135530((int *)v89, v90);
    v73 = *(_DWORD *)(a2 + 392);
    if ((v73 & 0x400) == 0)
    {
LABEL_245:
      if ((v73 & 0x1000) == 0)
        goto LABEL_246;
      goto LABEL_256;
    }
  }
  else if ((v73 & 0x400) == 0)
  {
    goto LABEL_245;
  }
  v91 = *(_DWORD *)(a2 + 300);
  *(_DWORD *)(a1 + 392) |= 0x400u;
  *(_DWORD *)(a1 + 300) = v91;
  v73 = *(_DWORD *)(a2 + 392);
  if ((v73 & 0x1000) == 0)
  {
LABEL_246:
    if ((v73 & 0x2000) == 0)
      goto LABEL_247;
    goto LABEL_257;
  }
LABEL_256:
  v92 = *(_BYTE *)(a2 + 360);
  *(_DWORD *)(a1 + 392) |= 0x1000u;
  *(_BYTE *)(a1 + 360) = v92;
  v73 = *(_DWORD *)(a2 + 392);
  if ((v73 & 0x2000) == 0)
  {
LABEL_247:
    if ((v73 & 0x4000) == 0)
      goto LABEL_248;
    goto LABEL_258;
  }
LABEL_257:
  v93 = *(_DWORD *)(a2 + 364);
  *(_DWORD *)(a1 + 392) |= 0x2000u;
  *(_DWORD *)(a1 + 364) = v93;
  v73 = *(_DWORD *)(a2 + 392);
  if ((v73 & 0x4000) == 0)
  {
LABEL_248:
    if ((v73 & 0x8000) == 0)
      return;
    goto LABEL_263;
  }
LABEL_258:
  *(_DWORD *)(a1 + 392) |= 0x4000u;
  v94 = *(_QWORD **)(a1 + 368);
  if (!v94)
  {
    v94 = (_QWORD *)operator new();
    v95 = MEMORY[0x24BEDD958];
    *v94 = &off_250A6F1D8;
    v94[1] = v95;
    v94[2] = v95;
    v94[3] = 0;
    v94[4] = 0;
    v94[5] = v95;
    v94[6] = 0;
    *(_QWORD *)(a1 + 368) = v94;
  }
  v96 = *(_QWORD *)(a2 + 368);
  if (!v96)
  {
    sub_239169F68();
    v96 = *(_QWORD *)(qword_2542CF728 + 368);
  }
  sub_23913A124((uint64_t)v94, v96);
  if ((*(_DWORD *)(a2 + 392) & 0x8000) != 0)
  {
LABEL_263:
    *(_DWORD *)(a1 + 392) |= 0x8000u;
    v97 = *(_QWORD *)(a1 + 376);
    if (!v97)
    {
      v97 = operator new();
      *(_QWORD *)(v97 + 8) = 0;
      *(_QWORD *)(v97 + 16) = 0;
      *(_QWORD *)v97 = &off_250A6EF08;
      *(_DWORD *)(v97 + 24) = 0;
      *(_QWORD *)(v97 + 32) = 0;
      *(_DWORD *)(v97 + 40) = 0;
      *(_QWORD *)(a1 + 376) = v97;
    }
    v98 = *(_QWORD *)(a2 + 376);
    if (!v98)
    {
      sub_239169F68();
      v98 = *(_QWORD *)(qword_2542CF728 + 376);
    }
    sub_239137000((int *)v97, v98);
  }
}

void sub_23916B5C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23916B5DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a1 = &off_250A72040;
  sub_23916B648(a1);
  v2 = *((_QWORD *)a1 + 43);
  if (v2)
    MEMORY[0x23B838820](v2, 0x1000C8052888210);
  v3 = *((_QWORD *)a1 + 40);
  if (v3)
    MEMORY[0x23B838820](v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23916B648(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_239169F68();
  if ((_QWORD *)qword_2542CF728 != a1)
  {
    v2 = a1[3];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[4];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = a1[5];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = a1[6];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = a1[7];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = a1[8];
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = a1[9];
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = a1[10];
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = a1[11];
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = a1[12];
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = a1[13];
    if (v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
    v13 = a1[14];
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = a1[15];
    if (v14)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
    v15 = a1[16];
    if (v15)
      (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
    v16 = a1[17];
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = a1[18];
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = a1[19];
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = a1[20];
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
    v20 = a1[21];
    if (v20)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
    v21 = a1[22];
    if (v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
    v22 = a1[23];
    if (v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
    v23 = a1[24];
    if (v23)
      (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
    v24 = a1[25];
    if (v24)
      (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
    v25 = a1[26];
    if (v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
    v26 = a1[27];
    if (v26)
      (*(void (**)(uint64_t))(*(_QWORD *)v26 + 8))(v26);
    v27 = a1[28];
    if (v27)
      (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
    v28 = a1[29];
    if (v28)
      (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
    v29 = a1[30];
    if (v29)
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
    v30 = a1[31];
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = a1[32];
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = a1[33];
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = a1[34];
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = a1[35];
    if (v34)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
    v35 = a1[36];
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
    v36 = a1[38];
    if (v36)
      (*(void (**)(uint64_t))(*(_QWORD *)v36 + 8))(v36);
    v37 = a1[39];
    if (v37)
      (*(void (**)(uint64_t))(*(_QWORD *)v37 + 8))(v37);
    v38 = a1[42];
    if (v38)
      (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
    v39 = a1[46];
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
    v40 = a1[47];
    if (v40)
      (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
  }
}

void sub_23916B990(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23916B5DC(a1);
  JUMPOUT(0x23B838844);
}

double sub_23916B9B4()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A72040;
  result = 0.0;
  *(_OWORD *)(v0 + 364) = 0u;
  *(_OWORD *)(v0 + 380) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  *(_OWORD *)(v0 + 248) = 0u;
  *(_BYTE *)(v0 + 360) = 0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 264) = 0u;
  *(_OWORD *)(v0 + 280) = 0u;
  *(_OWORD *)(v0 + 296) = 0u;
  *(_OWORD *)(v0 + 312) = 0u;
  *(_OWORD *)(v0 + 328) = 0u;
  *(_OWORD *)(v0 + 344) = 0u;
  return result;
}

uint64_t sub_23916BA48(uint64_t result)
{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;

  v1 = result;
  v2 = (unsigned int *)(result + 388);
  v3 = *(_DWORD *)(result + 388);
  if ((_BYTE)v3)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    if ((v3 & 8) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
      {
        result = sub_23916C104(result);
        v3 = *v2;
      }
    }
    if ((v3 & 0x10) != 0)
    {
      v4 = *(_QWORD *)(v1 + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x20) != 0)
    {
      v5 = *(_QWORD *)(v1 + 40);
      if (v5)
      {
        if (*(int *)(v5 + 16) >= 1)
        {
          v6 = 0;
          do
          {
            v7 = *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6);
            result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
            ++v6;
          }
          while (v6 < *(int *)(v5 + 16));
        }
        *(_DWORD *)(v5 + 16) = 0;
        *(_DWORD *)(v5 + 36) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x40) != 0)
    {
      v8 = *(_QWORD *)(v1 + 48);
      if (v8)
      {
        if (*(int *)(v8 + 16) >= 1)
        {
          v9 = 0;
          do
          {
            v10 = *(_QWORD *)(*(_QWORD *)(v8 + 8) + 8 * v9);
            result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 32))(v10);
            ++v9;
          }
          while (v9 < *(int *)(v8 + 16));
        }
        *(_DWORD *)(v8 + 16) = 0;
        *(_DWORD *)(v8 + 36) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x80) != 0)
    {
      v11 = *(_QWORD *)(v1 + 56);
      if (v11)
      {
        if (*(int *)(v11 + 16) >= 1)
        {
          v12 = 0;
          do
          {
            v13 = *(_QWORD *)(*(_QWORD *)(v11 + 8) + 8 * v12);
            result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 32))(v13);
            ++v12;
          }
          while (v12 < *(int *)(v11 + 16));
        }
        *(_DWORD *)(v11 + 16) = 0;
        *(_DWORD *)(v11 + 36) = 0;
        v3 = *v2;
      }
    }
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      v14 = *(_QWORD *)(v1 + 64);
      if (v14)
      {
        if (*(_BYTE *)(v14 + 36))
        {
          *(_QWORD *)(v14 + 8) = 0;
          *(_QWORD *)(v14 + 16) = 0;
          *(_QWORD *)(v14 + 24) = 0;
        }
        *(_DWORD *)(v14 + 36) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x200) != 0)
    {
      v15 = *(_QWORD *)(v1 + 72);
      if (v15)
      {
        v16 = *(_DWORD *)(v15 + 76);
        if ((_BYTE)v16)
        {
          *(_OWORD *)(v15 + 49) = 0u;
          *(_OWORD *)(v15 + 40) = 0u;
          *(_OWORD *)(v15 + 24) = 0u;
          *(_OWORD *)(v15 + 8) = 0u;
        }
        if ((v16 & 0xFF00) != 0)
        {
          *(_BYTE *)(v15 + 69) = 0;
          *(_DWORD *)(v15 + 65) = 0;
        }
        *(_DWORD *)(v15 + 76) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x400) != 0)
    {
      v17 = *(_QWORD *)(v1 + 80);
      if (v17)
      {
        if (*(_BYTE *)(v17 + 32))
        {
          *(_QWORD *)(v17 + 8) = 0;
          *(_QWORD *)(v17 + 16) = 0x400000000;
          *(_DWORD *)(v17 + 24) = 0;
        }
        *(_DWORD *)(v17 + 32) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x800) != 0)
    {
      v18 = *(_QWORD *)(v1 + 88);
      if (v18)
      {
        if (*(_BYTE *)(v18 + 24))
        {
          *(_QWORD *)(v18 + 8) = 0;
          *(_DWORD *)(v18 + 16) = 4;
        }
        *(_DWORD *)(v18 + 24) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x1000) != 0)
    {
      v19 = *(_QWORD *)(v1 + 96);
      if (v19)
      {
        if (*(_BYTE *)(v19 + 16))
          *(_DWORD *)(v19 + 8) = 15;
        *(_DWORD *)(v19 + 16) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x2000) != 0)
    {
      v20 = *(_QWORD *)(v1 + 104);
      if (v20)
      {
        if (*(_BYTE *)(v20 + 44))
        {
          *(_OWORD *)(v20 + 24) = 0u;
          *(_OWORD *)(v20 + 8) = 0u;
        }
        *(_DWORD *)(v20 + 44) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x4000) != 0)
    {
      v21 = *(_QWORD *)(v1 + 112);
      if (v21)
      {
        if (*(_BYTE *)(v21 + 36))
        {
          *(_QWORD *)(v21 + 8) = 0;
          *(_QWORD *)(v21 + 16) = 0;
          *(_QWORD *)(v21 + 24) = 0;
        }
        *(_DWORD *)(v21 + 36) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x8000) != 0)
    {
      result = *(_QWORD *)(v1 + 120);
      if (result)
      {
        result = sub_23916C35C(result);
        v3 = *v2;
      }
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      v22 = *(_QWORD *)(v1 + 128);
      if (v22)
      {
        if ((*(_BYTE *)(v22 + 20) & 1) != 0)
        {
          v23 = *(_QWORD *)(v22 + 8);
          if (v23 != MEMORY[0x24BEDD958])
          {
            if (*(char *)(v23 + 23) < 0)
            {
              **(_BYTE **)v23 = 0;
              *(_QWORD *)(v23 + 8) = 0;
            }
            else
            {
              *(_BYTE *)v23 = 0;
              *(_BYTE *)(v23 + 23) = 0;
            }
          }
        }
        *(_DWORD *)(v22 + 20) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x20000) != 0)
    {
      v24 = *(_QWORD *)(v1 + 136);
      if (v24)
      {
        if (*(int *)(v24 + 16) >= 1)
        {
          v25 = 0;
          do
          {
            v26 = *(_QWORD *)(*(_QWORD *)(v24 + 8) + 8 * v25);
            result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v26 + 32))(v26);
            ++v25;
          }
          while (v25 < *(int *)(v24 + 16));
        }
        *(_DWORD *)(v24 + 16) = 0;
        *(_DWORD *)(v24 + 36) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x40000) != 0)
    {
      v27 = *(_QWORD *)(v1 + 144);
      if (v27)
      {
        if (*(_BYTE *)(v27 + 20))
          *(_QWORD *)(v27 + 8) = 0;
        *(_DWORD *)(v27 + 20) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x80000) != 0)
    {
      v28 = *(_QWORD *)(v1 + 152);
      if (v28)
      {
        if (*(_BYTE *)(v28 + 20))
        {
          *(_BYTE *)(v28 + 8) = 1;
          *(_DWORD *)(v28 + 9) = 0;
          *(_BYTE *)(v28 + 13) = 0;
        }
        *(_DWORD *)(v28 + 20) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x100000) != 0)
    {
      v29 = *(_QWORD *)(v1 + 160);
      if (v29)
      {
        if (*(_BYTE *)(v29 + 20))
          *(_QWORD *)(v29 + 8) = 0;
        *(_DWORD *)(v29 + 20) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x200000) != 0)
    {
      v30 = *(_QWORD *)(v1 + 168);
      if (v30)
      {
        if (*(_BYTE *)(v30 + 20))
        {
          *(_BYTE *)(v30 + 8) = 0;
          *(_DWORD *)(v30 + 12) = 0;
        }
        *(_DWORD *)(v30 + 20) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x400000) != 0)
    {
      v31 = *(_QWORD *)(v1 + 176);
      if (v31)
      {
        if (*(_BYTE *)(v31 + 20))
          *(_QWORD *)(v31 + 8) = 0;
        *(_DWORD *)(v31 + 20) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x800000) != 0)
    {
      v32 = *(_QWORD *)(v1 + 184);
      if (v32)
      {
        if (*(_BYTE *)(v32 + 16))
          *(_BYTE *)(v32 + 8) = 0;
        *(_DWORD *)(v32 + 16) = 0;
        v3 = *v2;
      }
    }
  }
  if (HIBYTE(v3))
  {
    if ((v3 & 0x1000000) != 0)
    {
      v33 = *(_QWORD *)(v1 + 192);
      if (v33)
      {
        if ((*(_BYTE *)(v33 + 20) & 1) != 0)
        {
          v34 = *(_QWORD *)(v33 + 8);
          if (v34 != MEMORY[0x24BEDD958])
          {
            if (*(char *)(v34 + 23) < 0)
            {
              **(_BYTE **)v34 = 0;
              *(_QWORD *)(v34 + 8) = 0;
            }
            else
            {
              *(_BYTE *)v34 = 0;
              *(_BYTE *)(v34 + 23) = 0;
            }
          }
        }
        *(_DWORD *)(v33 + 20) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x2000000) != 0)
    {
      v35 = *(_QWORD *)(v1 + 200);
      if (v35)
      {
        if ((*(_BYTE *)(v35 + 20) & 1) != 0)
        {
          v36 = *(_QWORD *)(v35 + 8);
          if (v36 != MEMORY[0x24BEDD958])
          {
            if (*(char *)(v36 + 23) < 0)
            {
              **(_BYTE **)v36 = 0;
              *(_QWORD *)(v36 + 8) = 0;
            }
            else
            {
              *(_BYTE *)v36 = 0;
              *(_BYTE *)(v36 + 23) = 0;
            }
          }
        }
        *(_DWORD *)(v35 + 20) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x4000000) != 0)
    {
      result = *(_QWORD *)(v1 + 208);
      if (result)
      {
        result = sub_23916C554(result);
        v3 = *v2;
      }
    }
    if ((v3 & 0x8000000) != 0)
    {
      v37 = *(_QWORD *)(v1 + 216);
      if (v37)
      {
        if (*(_BYTE *)(v37 + 16))
        {
          *(_WORD *)(v37 + 8) = 0;
          *(_BYTE *)(v37 + 10) = 0;
        }
        *(_DWORD *)(v37 + 16) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x10000000) != 0)
    {
      v38 = *(_QWORD *)(v1 + 224);
      if (v38)
      {
        if (*(_BYTE *)(v38 + 16))
          *(_DWORD *)(v38 + 8) = 0;
        *(_DWORD *)(v38 + 16) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x20000000) != 0)
    {
      v39 = *(_QWORD *)(v1 + 232);
      if (v39)
      {
        if (*(_BYTE *)(v39 + 24))
        {
          *(_QWORD *)(v39 + 8) = 0;
          *(_DWORD *)(v39 + 16) = 0;
        }
        *(_DWORD *)(v39 + 24) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x40000000) != 0)
    {
      v40 = *(_QWORD *)(v1 + 240);
      if (v40)
      {
        if (*(_BYTE *)(v40 + 16))
          *(_WORD *)(v40 + 8) = 0;
        *(_DWORD *)(v40 + 16) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x80000000) != 0)
    {
      result = *(_QWORD *)(v1 + 248);
      if (result)
        result = sub_23916202C(result);
    }
  }
  v41 = *(_DWORD *)(v1 + 392);
  if ((_BYTE)v41)
  {
    if ((v41 & 1) != 0)
    {
      v42 = *(_QWORD *)(v1 + 256);
      if (v42)
      {
        v43 = *(_DWORD *)(v42 + 80);
        if ((_BYTE)v43)
        {
          *(_OWORD *)(v42 + 24) = 0u;
          *(_OWORD *)(v42 + 8) = 0u;
        }
        if ((v43 & 0xFF00) != 0)
        {
          *(_OWORD *)(v42 + 56) = 0u;
          *(_OWORD *)(v42 + 40) = 0u;
        }
        if ((v43 & 0xFF0000) != 0)
          *(_DWORD *)(v42 + 72) = 0;
        *(_DWORD *)(v42 + 80) = 0;
        v41 = *(_DWORD *)(v1 + 392);
      }
    }
    *(_DWORD *)(v1 + 296) = 0;
    if ((v41 & 4) != 0)
    {
      result = *(_QWORD *)(v1 + 264);
      if (result)
      {
        result = sub_23915C924(result);
        v41 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v41 & 8) != 0)
    {
      v44 = *(_QWORD *)(v1 + 272);
      if (v44)
      {
        v45 = *(_DWORD *)(v44 + 68);
        if ((_BYTE)v45)
        {
          *(_OWORD *)(v44 + 24) = 0u;
          *(_OWORD *)(v44 + 8) = 0u;
        }
        if ((v45 & 0xFF00) != 0)
        {
          *(_QWORD *)(v44 + 40) = 0;
          *(_QWORD *)(v44 + 48) = 0;
          *(_QWORD *)(v44 + 56) = 0;
        }
        *(_DWORD *)(v44 + 68) = 0;
        v41 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v41 & 0x10) != 0)
    {
      result = *(_QWORD *)(v1 + 280);
      if (result)
      {
        result = sub_2391609EC(result);
        v41 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v41 & 0x20) != 0)
    {
      result = *(_QWORD *)(v1 + 288);
      if (result)
      {
        result = sub_2391639FC(result);
        v41 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v41 & 0x40) != 0)
    {
      result = *(_QWORD *)(v1 + 304);
      if (result)
      {
        result = sub_239164A18(result);
        v41 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v41 & 0x80) != 0)
    {
      result = *(_QWORD *)(v1 + 312);
      if (result)
      {
        result = sub_239161714(result);
        v41 = *(_DWORD *)(v1 + 392);
      }
    }
  }
  if ((v41 & 0x1FE00) != 0)
  {
    if ((v41 & 0x200) != 0)
    {
      result = *(_QWORD *)(v1 + 336);
      if (result)
      {
        result = sub_239135A44(result);
        v41 = *(_DWORD *)(v1 + 392);
      }
    }
    *(_DWORD *)(v1 + 300) = 0;
    *(_BYTE *)(v1 + 360) = 0;
    *(_DWORD *)(v1 + 364) = 0;
    if ((v41 & 0x4000) != 0)
    {
      result = *(_QWORD *)(v1 + 368);
      if (result)
      {
        result = sub_23913A574(result);
        v41 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v41 & 0x8000) != 0)
    {
      result = *(_QWORD *)(v1 + 376);
      if (result)
        result = sub_2391372B4(result);
    }
  }
  *(_DWORD *)(v1 + 328) = 0;
  *(_DWORD *)(v1 + 352) = 0;
  *(_QWORD *)v2 = 0;
  return result;
}

uint64_t sub_23916C104(uint64_t result)
{
  uint64_t v1;
  int v2;

  if (*(_BYTE *)(result + 36))
  {
    if ((*(_BYTE *)(result + 36) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if (v1)
      {
        v2 = *(_DWORD *)(v1 + 96);
        if ((_BYTE)v2)
        {
          *(_OWORD *)(v1 + 56) = 0u;
          *(_OWORD *)(v1 + 40) = 0u;
          *(_OWORD *)(v1 + 24) = 0u;
          *(_OWORD *)(v1 + 8) = 0u;
        }
        if ((v2 & 0xFF00) != 0)
        {
          *(_QWORD *)(v1 + 72) = 0;
          *(_QWORD *)(v1 + 80) = 0;
          *(_DWORD *)(v1 + 88) = 0;
        }
        *(_DWORD *)(v1 + 96) = 0;
      }
    }
    *(_DWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 20) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_23916C160(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_23916C178(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_23916C1D0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_23916C228(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_23916C280(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_23916C298(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 76);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 49) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_BYTE *)(result + 69) = 0;
    *(_DWORD *)(result + 65) = 0;
  }
  *(_DWORD *)(result + 76) = 0;
  return result;
}

uint64_t sub_23916C2D0(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0x400000000;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_23916C2F4(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 4;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_23916C310(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_DWORD *)(result + 8) = 15;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_23916C328(uint64_t result)
{
  if (*(_BYTE *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_23916C344(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_23916C35C(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 24))
  {
    if ((*(_BYTE *)(result + 24) & 1) != 0)
    {
      v1 = *(_QWORD *)(result + 8);
      if (v1 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(_BYTE **)v1 = 0;
          *(_QWORD *)(v1 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v1 = 0;
          *(_BYTE *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_23916C3A8(uint64_t result)
{
  uint64_t v1;

  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    v1 = *(_QWORD *)(result + 8);
    if (v1 != MEMORY[0x24BEDD958])
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(_BYTE **)v1 = 0;
        *(_QWORD *)(v1 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v1 = 0;
        *(_BYTE *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23916C3EC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (*(int *)(result + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_23916C444(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23916C458(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
  {
    *(_BYTE *)(result + 8) = 1;
    *(_DWORD *)(result + 9) = 0;
    *(_BYTE *)(result + 13) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23916C478(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23916C48C(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
  {
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23916C4A4(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23916C4B8(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_BYTE *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_23916C4CC(uint64_t result)
{
  uint64_t v1;

  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    v1 = *(_QWORD *)(result + 8);
    if (v1 != MEMORY[0x24BEDD958])
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(_BYTE **)v1 = 0;
        *(_QWORD *)(v1 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v1 = 0;
        *(_BYTE *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23916C510(uint64_t result)
{
  uint64_t v1;

  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    v1 = *(_QWORD *)(result + 8);
    if (v1 != MEMORY[0x24BEDD958])
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(_BYTE **)v1 = 0;
        *(_QWORD *)(v1 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v1 = 0;
        *(_BYTE *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23916C554(uint64_t result)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  LOBYTE(v1) = *(_BYTE *)(result + 56);
  if ((_BYTE)v1)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)(result + 12) = 0;
    *(_DWORD *)(result + 48) = 0;
    if ((v1 & 8) != 0)
    {
      v2 = *(_QWORD *)(result + 16);
      if (v2)
      {
        v3 = *(_DWORD *)(v2 + 56);
        if ((_BYTE)v3)
        {
          *(_DWORD *)(v2 + 36) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
          *(_QWORD *)(v2 + 8) = 0;
          *(_BYTE *)(v2 + 32) = 0;
        }
        if ((v3 & 0xFF00) != 0)
        {
          *(_QWORD *)(v2 + 40) = 0;
          *(_DWORD *)(v2 + 48) = 0;
        }
        *(_DWORD *)(v2 + 56) = 0;
        v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      v4 = *(_QWORD *)(result + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 52))
          *(_QWORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 24) = 0;
        *(_DWORD *)(v4 + 40) = 0;
        *(_DWORD *)(v4 + 52) = 0;
        v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 0x20) != 0)
    {
      v5 = *(_QWORD *)(result + 32);
      if (v5)
      {
        if ((*(_WORD *)(v5 + 36) & 0x1FE) != 0)
          *(_QWORD *)(v5 + 24) = 0;
        *(_DWORD *)(v5 + 16) = 0;
        *(_DWORD *)(v5 + 36) = 0;
        v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 0x40) != 0)
    {
      v6 = *(_QWORD *)(result + 40);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 20))
          *(_QWORD *)(v6 + 8) = 0;
        *(_DWORD *)(v6 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_23916C61C(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
  {
    *(_WORD *)(result + 8) = 0;
    *(_BYTE *)(result + 10) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_23916C634(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_23916C648(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_23916C660(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_WORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_23916C674(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  char **v4;
  _DWORD *v5;
  _DWORD *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  unint64_t v17;
  char *v18;
  int v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  int v27;
  uint64_t result;
  char *v29;
  int v30;
  _BYTE *v31;
  uint64_t v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  BOOL v37;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  int v45;
  _BYTE *v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  int v51;
  int v52;
  _BYTE *v53;
  uint64_t v54;
  char *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  _BYTE *v60;
  uint64_t v61;
  char *v62;
  int v63;
  int v64;
  int v65;
  int v66;
  _BYTE *v67;
  uint64_t v68;
  char *v69;
  int v70;
  int v71;
  int v72;
  int v73;
  _BYTE *v74;
  uint64_t v75;
  char *v76;
  int v77;
  int v78;
  int v79;
  int v80;
  _BYTE *v81;
  uint64_t v82;
  char *v83;
  int v84;
  int v85;
  int v86;
  int v87;
  _BYTE *v88;
  uint64_t v89;
  char *v90;
  int v91;
  int v92;
  int v93;
  int v94;
  _BYTE *v95;
  uint64_t v96;
  char *v97;
  int v98;
  int v99;
  int v100;
  int v101;
  _BYTE *v102;
  uint64_t v103;
  char *v104;
  int v105;
  int v106;
  int v107;
  int v108;
  _BYTE *v109;
  uint64_t v110;
  char *v111;
  int v112;
  int v113;
  int v114;
  int v115;
  unsigned __int8 *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  int v120;
  int v121;
  int v122;
  int v123;
  unsigned __int8 *v124;
  _QWORD *v125;
  uint64_t v126;
  char *v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unsigned __int8 *v132;
  uint64_t v133;
  char *v134;
  int v135;
  int v136;
  int v137;
  int v138;
  unsigned __int8 *v139;
  _QWORD *v140;
  char *v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned __int8 *v146;
  uint64_t v147;
  char *v148;
  int v149;
  int v150;
  int v151;
  int v152;
  unsigned __int8 *v153;
  _QWORD *v154;
  char *v155;
  int v156;
  int v157;
  int v158;
  int v159;
  unsigned __int8 *v160;
  uint64_t v161;
  char *v162;
  int v163;
  int v164;
  int v165;
  int v166;
  unsigned __int8 *v167;
  uint64_t v168;
  char *v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned __int8 *v174;
  uint64_t v175;
  char *v176;
  int v177;
  int v178;
  int v179;
  int v180;
  unsigned __int8 *v181;
  _QWORD *v182;
  uint64_t v183;
  char *v184;
  int v185;
  int v186;
  int v187;
  int v188;
  unsigned __int8 *v189;
  _QWORD *v190;
  uint64_t v191;
  char *v192;
  int v193;
  int v194;
  int v195;
  int v196;
  unsigned __int8 *v197;
  uint64_t v198;
  char *v199;
  int v200;
  int v201;
  int v202;
  int v203;
  unsigned __int8 *v204;
  uint64_t v205;
  char *v206;
  int v207;
  int v208;
  int v209;
  int v210;
  unsigned __int8 *v211;
  uint64_t v212;
  char *v213;
  int v214;
  int v215;
  int v216;
  int v217;
  unsigned __int8 *v218;
  uint64_t v219;
  char *v220;
  int v221;
  int v222;
  int v223;
  int v224;
  unsigned __int8 *v225;
  uint64_t v226;
  char *v227;
  int v228;
  int v229;
  int v230;
  int v231;
  unsigned __int8 *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  int v236;
  int v237;
  int v238;
  int v239;
  unsigned __int8 *v240;
  uint64_t v241;
  char *v242;
  int v243;
  int v244;
  int v245;
  int v246;
  unsigned __int8 *v247;
  char *v248;
  uint64_t v249;
  char *v250;
  int v251;
  int v252;
  int v253;
  int v254;
  unsigned __int8 *v255;
  uint64_t v256;
  char *v257;
  int v258;
  int v259;
  int v260;
  int v261;
  unsigned __int8 *v262;
  uint64_t v263;
  char *v264;
  int v265;
  int v266;
  int v267;
  int v268;
  unsigned __int8 *v269;
  uint64_t v270;
  char *v271;
  int v272;
  int v273;
  int v274;
  int v275;
  unsigned __int8 *v276;
  _QWORD *v277;
  char *v278;
  int v279;
  int v280;
  int v281;
  int v282;
  unsigned __int8 *v283;
  _QWORD *v284;
  char *v285;
  int v286;
  int v287;
  int v288;
  int v289;
  unsigned __int8 *v290;
  int v291;
  int v292;
  unsigned int v293;
  uint64_t v294;
  int v295;
  int v296;
  unsigned __int8 *v297;
  unint64_t v298;
  int v299;
  unsigned int v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  int v304;
  int v305;
  int v306;
  int v307;
  unsigned __int8 *v308;
  char *v309;
  int v310;
  int v311;
  unsigned int v312;
  uint64_t v313;
  int v314;
  int v315;
  unsigned __int8 *v316;
  unint64_t v317;
  int v318;
  unsigned int v319;
  uint64_t v320;
  unsigned int v321;
  char *v322;
  char *v323;
  _QWORD *v324;
  uint64_t v325;
  char *v326;
  int v327;
  int v328;
  int v329;
  int v330;
  unsigned __int8 *v331;
  uint64_t v332;
  char *v333;
  int v334;
  int v335;
  int v336;
  int v337;
  unint64_t *v338;
  unsigned int *v339;
  unsigned int *v340;
  unsigned int v341;
  unsigned int v342[12];

  v4 = (char **)((char *)this + 8);
  v5 = (_DWORD *)(a1 + 344);
  v6 = (_DWORD *)(a1 + 320);
  v7 = (unsigned int *)(a1 + 16);
  v340 = (unsigned int *)(a1 + 296);
  v8 = (unsigned int *)(a1 + 300);
  v338 = (unint64_t *)(a1 + 8);
  v339 = (unsigned int *)(a1 + 364);
LABEL_2:
  while (2)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_108;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v338);
          if (!(_DWORD)result)
            return result;
          v14 = (char *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v338 = *v13;
          v14 = v13 + 1;
          *v4 = v14;
        }
        *(_DWORD *)(a1 + 388) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          v15 = v14 + 1;
          *v4 = v15;
          goto LABEL_120;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_108;
        v15 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_120:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result)
            return result;
          v29 = (char *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v7 = *v15;
          v29 = v15 + 1;
          *v4 = v29;
        }
        *(_DWORD *)(a1 + 388) |= 2u;
        if ((unint64_t)v29 >= v12 || *v29 != 24)
          continue;
        v16 = v29 + 1;
        *v4 = v16;
LABEL_128:
        v342[0] = 0;
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342);
          if (!(_DWORD)result)
            return result;
          v30 = v342[0];
        }
        else
        {
          v30 = *v16;
          *v4 = v16 + 1;
        }
        if (sub_239169FE4(v30))
        {
          *(_DWORD *)(a1 + 388) |= 4u;
          *(_DWORD *)(a1 + 20) = v30;
        }
        v31 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v31 >= *((_QWORD *)this + 2) || *v31 != 34)
          continue;
        *v4 = v31 + 1;
LABEL_138:
        *(_DWORD *)(a1 + 388) |= 8u;
        v32 = *(_QWORD *)(a1 + 24);
        if (!v32)
        {
          v32 = operator new();
          *(_QWORD *)v32 = &off_250A72400;
          *(_QWORD *)(v32 + 8) = 0;
          *(_DWORD *)(v32 + 16) = 0;
          *(_BYTE *)(v32 + 20) = 0;
          *(_QWORD *)(v32 + 24) = 0;
          *(_QWORD *)(v32 + 32) = 0;
          *(_QWORD *)(a1 + 24) = v32;
        }
        v342[0] = 0;
        v33 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v33 >= *((_QWORD *)this + 2) || *v33 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v33;
          *v4 = v33 + 1;
        }
        v34 = *((_DWORD *)this + 14);
        v35 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v34 + 1;
        if (v34 >= v35)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917942C(v32, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v36 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v36, 1);
        v38 = v36 - 1;
        if (v38 < 0 == v37)
          *((_DWORD *)this + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v39 >= *((_QWORD *)this + 2) || *v39 != 42)
          continue;
        *v4 = v39 + 1;
LABEL_152:
        *(_DWORD *)(a1 + 388) |= 0x10u;
        v40 = *(_QWORD *)(a1 + 32);
        if (!v40)
        {
          v40 = operator new();
          *(_QWORD *)v40 = &off_250A72478;
          *(_OWORD *)(v40 + 8) = 0u;
          *(_OWORD *)(v40 + 24) = 0u;
          *(_QWORD *)(a1 + 32) = v40;
        }
        v342[0] = 0;
        v41 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v41;
          *v4 = v41 + 1;
        }
        v42 = *((_DWORD *)this + 14);
        v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239179A44(v40, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v44 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v44, 1);
        v45 = v44 - 1;
        if (v45 < 0 == v37)
          *((_DWORD *)this + 14) = v45;
        v46 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v46 >= *((_QWORD *)this + 2) || *v46 != 50)
          continue;
        *v4 = v46 + 1;
LABEL_166:
        *(_DWORD *)(a1 + 388) |= 0x20u;
        v47 = *(_QWORD *)(a1 + 40);
        if (!v47)
        {
          v47 = operator new();
          *(_QWORD *)(v47 + 8) = 0;
          *(_QWORD *)(v47 + 16) = 0;
          *(_QWORD *)v47 = &off_250A725E0;
          *(_DWORD *)(v47 + 24) = 0;
          *(_QWORD *)(v47 + 32) = 0;
          *(_QWORD *)(a1 + 40) = v47;
        }
        v342[0] = 0;
        v48 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v48 >= *((_QWORD *)this + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v48;
          *v4 = v48 + 1;
        }
        v49 = *((_DWORD *)this + 14);
        v50 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v49 + 1;
        if (v49 >= v50)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917A3C4((int *)v47, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v51 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v51, 1);
        v52 = v51 - 1;
        if (v52 < 0 == v37)
          *((_DWORD *)this + 14) = v52;
        v53 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v53 >= *((_QWORD *)this + 2) || *v53 != 58)
          continue;
        *v4 = v53 + 1;
LABEL_180:
        *(_DWORD *)(a1 + 388) |= 0x40u;
        v54 = *(_QWORD *)(a1 + 48);
        if (!v54)
        {
          v54 = operator new();
          *(_QWORD *)(v54 + 8) = 0;
          *(_QWORD *)(v54 + 16) = 0;
          *(_QWORD *)v54 = &off_250A72658;
          *(_DWORD *)(v54 + 24) = 0;
          *(_QWORD *)(v54 + 32) = 0;
          *(_QWORD *)(a1 + 48) = v54;
        }
        v342[0] = 0;
        v55 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v55 >= *((_QWORD *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v55;
          *v4 = v55 + 1;
        }
        v56 = *((_DWORD *)this + 14);
        v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917A7DC((int *)v54, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v58 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v58, 1);
        v59 = v58 - 1;
        if (v59 < 0 == v37)
          *((_DWORD *)this + 14) = v59;
        v60 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v60 >= *((_QWORD *)this + 2) || *v60 != 66)
          continue;
        *v4 = v60 + 1;
LABEL_194:
        *(_DWORD *)(a1 + 388) |= 0x80u;
        v61 = *(_QWORD *)(a1 + 56);
        if (!v61)
        {
          v61 = operator new();
          *(_QWORD *)(v61 + 8) = 0;
          *(_QWORD *)(v61 + 16) = 0;
          *(_QWORD *)v61 = &off_250A726D0;
          *(_DWORD *)(v61 + 24) = 0;
          *(_QWORD *)(v61 + 32) = 0;
          *(_QWORD *)(a1 + 56) = v61;
        }
        v342[0] = 0;
        v62 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v62 >= *((_QWORD *)this + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v62;
          *v4 = v62 + 1;
        }
        v63 = *((_DWORD *)this + 14);
        v64 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v63 + 1;
        if (v63 >= v64)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917ABF4((int *)v61, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v65 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v65, 1);
        v66 = v65 - 1;
        if (v66 < 0 == v37)
          *((_DWORD *)this + 14) = v66;
        v67 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v67 >= *((_QWORD *)this + 2) || *v67 != 74)
          continue;
        *v4 = v67 + 1;
LABEL_208:
        *(_DWORD *)(a1 + 388) |= 0x100u;
        v68 = *(_QWORD *)(a1 + 64);
        if (!v68)
        {
          v68 = operator new();
          *(_QWORD *)v68 = &off_250A72748;
          *(_OWORD *)(v68 + 8) = 0u;
          *(_OWORD *)(v68 + 24) = 0u;
          *(_QWORD *)(a1 + 64) = v68;
        }
        v342[0] = 0;
        v69 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v69 >= *((_QWORD *)this + 2) || *v69 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v69;
          *v4 = v69 + 1;
        }
        v70 = *((_DWORD *)this + 14);
        v71 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v70 + 1;
        if (v70 >= v71)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917B000(v68, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v72 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v72, 1);
        v73 = v72 - 1;
        if (v73 < 0 == v37)
          *((_DWORD *)this + 14) = v73;
        v74 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v74 >= *((_QWORD *)this + 2) || *v74 != 82)
          continue;
        *v4 = v74 + 1;
LABEL_222:
        *(_DWORD *)(a1 + 388) |= 0x200u;
        v75 = *(_QWORD *)(a1 + 72);
        if (!v75)
        {
          v75 = operator new();
          *(_QWORD *)v75 = &off_250A727C0;
          *(_QWORD *)(v75 + 72) = 0;
          *(_OWORD *)(v75 + 8) = 0u;
          *(_OWORD *)(v75 + 24) = 0u;
          *(_OWORD *)(v75 + 40) = 0u;
          *(_OWORD *)(v75 + 54) = 0u;
          *(_QWORD *)(a1 + 72) = v75;
        }
        v342[0] = 0;
        v76 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v76 >= *((_QWORD *)this + 2) || *v76 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v76;
          *v4 = v76 + 1;
        }
        v77 = *((_DWORD *)this + 14);
        v78 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v77 + 1;
        if (v77 >= v78)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917B3EC(v75, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v79 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v79, 1);
        v80 = v79 - 1;
        if (v80 < 0 == v37)
          *((_DWORD *)this + 14) = v80;
        v81 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v81 >= *((_QWORD *)this + 2) || *v81 != 90)
          continue;
        *v4 = v81 + 1;
LABEL_236:
        *(_DWORD *)(a1 + 388) |= 0x400u;
        v82 = *(_QWORD *)(a1 + 80);
        if (!v82)
        {
          v82 = operator new();
          *(_QWORD *)v82 = &off_250A72838;
          *(_QWORD *)(v82 + 8) = 0;
          *(_OWORD *)(v82 + 16) = xmmword_2391CAF50;
          *(_DWORD *)(v82 + 32) = 0;
          *(_QWORD *)(a1 + 80) = v82;
        }
        v342[0] = 0;
        v83 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v83 >= *((_QWORD *)this + 2) || *v83 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v83;
          *v4 = v83 + 1;
        }
        v84 = *((_DWORD *)this + 14);
        v85 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v84 + 1;
        if (v84 >= v85)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917BDDC((_DWORD *)v82, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v86 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v86, 1);
        v87 = v86 - 1;
        if (v87 < 0 == v37)
          *((_DWORD *)this + 14) = v87;
        v88 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v88 >= *((_QWORD *)this + 2) || *v88 != 98)
          continue;
        *v4 = v88 + 1;
LABEL_250:
        *(_DWORD *)(a1 + 388) |= 0x800u;
        v89 = *(_QWORD *)(a1 + 88);
        if (!v89)
        {
          v89 = operator new();
          *(_QWORD *)v89 = &off_250A728B0;
          *(_QWORD *)(v89 + 8) = 0;
          *(_QWORD *)(v89 + 16) = 4;
          *(_DWORD *)(v89 + 24) = 0;
          *(_QWORD *)(a1 + 88) = v89;
        }
        v342[0] = 0;
        v90 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v90 >= *((_QWORD *)this + 2) || *v90 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v90;
          *v4 = v90 + 1;
        }
        v91 = *((_DWORD *)this + 14);
        v92 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v91 + 1;
        if (v91 >= v92)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917C358(v89, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v93 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v93, 1);
        v94 = v93 - 1;
        if (v94 < 0 == v37)
          *((_DWORD *)this + 14) = v94;
        v95 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v95 >= *((_QWORD *)this + 2) || *v95 != 106)
          continue;
        *v4 = v95 + 1;
LABEL_264:
        *(_DWORD *)(a1 + 388) |= 0x1000u;
        v96 = *(_QWORD *)(a1 + 96);
        if (!v96)
        {
          v96 = operator new();
          *(_QWORD *)v96 = &off_250A72928;
          *(_QWORD *)(v96 + 8) = 15;
          *(_DWORD *)(v96 + 16) = 0;
          *(_QWORD *)(a1 + 96) = v96;
        }
        v342[0] = 0;
        v97 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v97 >= *((_QWORD *)this + 2) || *v97 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v97;
          *v4 = v97 + 1;
        }
        v98 = *((_DWORD *)this + 14);
        v99 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v98 + 1;
        if (v98 >= v99)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917C708(v96, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v100 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v100, 1);
        v101 = v100 - 1;
        if (v101 < 0 == v37)
          *((_DWORD *)this + 14) = v101;
        v102 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v102 >= *((_QWORD *)this + 2) || *v102 != 114)
          continue;
        *v4 = v102 + 1;
LABEL_278:
        *(_DWORD *)(a1 + 388) |= 0x2000u;
        v103 = *(_QWORD *)(a1 + 104);
        if (!v103)
        {
          v103 = operator new();
          *(_QWORD *)v103 = &off_250A729A0;
          *(_OWORD *)(v103 + 8) = 0u;
          *(_OWORD *)(v103 + 24) = 0u;
          *(_QWORD *)(v103 + 40) = 0;
          *(_QWORD *)(a1 + 104) = v103;
        }
        v342[0] = 0;
        v104 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v104 >= *((_QWORD *)this + 2) || *v104 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v104;
          *v4 = v104 + 1;
        }
        v105 = *((_DWORD *)this + 14);
        v106 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v105 + 1;
        if (v105 >= v106)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917C9BC(v103, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v107 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v107, 1);
        v108 = v107 - 1;
        if (v108 < 0 == v37)
          *((_DWORD *)this + 14) = v108;
        v109 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v109 >= *((_QWORD *)this + 2) || *v109 != 122)
          continue;
        *v4 = v109 + 1;
LABEL_292:
        *(_DWORD *)(a1 + 388) |= 0x4000u;
        v110 = *(_QWORD *)(a1 + 112);
        if (!v110)
        {
          v110 = operator new();
          *(_QWORD *)v110 = &off_250A72A18;
          *(_OWORD *)(v110 + 8) = 0u;
          *(_OWORD *)(v110 + 24) = 0u;
          *(_QWORD *)(a1 + 112) = v110;
        }
        v342[0] = 0;
        v111 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v111 >= *((_QWORD *)this + 2) || *v111 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v111;
          *v4 = v111 + 1;
        }
        v112 = *((_DWORD *)this + 14);
        v113 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v112 + 1;
        if (v112 >= v113)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917CE28(v110, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v114 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v114, 1);
        v115 = v114 - 1;
        if (v115 < 0 == v37)
          *((_DWORD *)this + 14) = v115;
        v116 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v116 <= 1 || *v116 != 130 || v116[1] != 1)
          continue;
        *v4 = (char *)(v116 + 2);
LABEL_307:
        *(_DWORD *)(a1 + 388) |= 0x8000u;
        v117 = *(_QWORD *)(a1 + 120);
        if (!v117)
        {
          v117 = operator new();
          v118 = MEMORY[0x24BEDD958];
          *(_QWORD *)v117 = &off_250A72298;
          *(_QWORD *)(v117 + 8) = v118;
          *(_QWORD *)(v117 + 16) = 0;
          *(_DWORD *)(v117 + 24) = 0;
          *(_QWORD *)(a1 + 120) = v117;
        }
        v342[0] = 0;
        v119 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v119 >= *((_QWORD *)this + 2) || *v119 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v119;
          *v4 = v119 + 1;
        }
        v120 = *((_DWORD *)this + 14);
        v121 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v120 + 1;
        if (v120 >= v121)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391788A0(v117, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v122 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v122, 1);
        v123 = v122 - 1;
        if (v123 < 0 == v37)
          *((_DWORD *)this + 14) = v123;
        v124 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v124 <= 1 || *v124 != 138 || v124[1] != 1)
          continue;
        *v4 = (char *)(v124 + 2);
LABEL_322:
        *(_DWORD *)(a1 + 388) |= 0x10000u;
        v125 = *(_QWORD **)(a1 + 128);
        if (!v125)
        {
          v125 = (_QWORD *)operator new();
          v126 = MEMORY[0x24BEDD958];
          *v125 = &off_250A72310;
          v125[1] = v126;
          v125[2] = 0;
          *(_QWORD *)(a1 + 128) = v125;
        }
        v342[0] = 0;
        v127 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v127 >= *((_QWORD *)this + 2) || *v127 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v127;
          *v4 = v127 + 1;
        }
        v128 = *((_DWORD *)this + 14);
        v129 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v128 + 1;
        if (v128 >= v129)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239178CD8((uint64_t)v125, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v130 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v130, 1);
        v131 = v130 - 1;
        if (v131 < 0 == v37)
          *((_DWORD *)this + 14) = v131;
        v132 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v132 <= 1 || *v132 != 146 || v132[1] != 1)
          continue;
        *v4 = (char *)(v132 + 2);
LABEL_337:
        *(_DWORD *)(a1 + 388) |= 0x20000u;
        v133 = *(_QWORD *)(a1 + 136);
        if (!v133)
        {
          v133 = operator new();
          *(_QWORD *)(v133 + 8) = 0;
          *(_QWORD *)(v133 + 16) = 0;
          *(_QWORD *)v133 = &off_250A72388;
          *(_DWORD *)(v133 + 24) = 0;
          *(_QWORD *)(v133 + 32) = 0;
          *(_QWORD *)(a1 + 136) = v133;
        }
        v342[0] = 0;
        v134 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v134 >= *((_QWORD *)this + 2) || *v134 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v134;
          *v4 = v134 + 1;
        }
        v135 = *((_DWORD *)this + 14);
        v136 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v135 + 1;
        if (v135 >= v136)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239178FFC((int *)v133, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v137 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v137, 1);
        v138 = v137 - 1;
        if (v138 < 0 == v37)
          *((_DWORD *)this + 14) = v138;
        v139 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v139 <= 1 || *v139 != 154 || v139[1] != 1)
          continue;
        *v4 = (char *)(v139 + 2);
LABEL_352:
        *(_DWORD *)(a1 + 388) |= 0x40000u;
        v140 = *(_QWORD **)(a1 + 144);
        if (!v140)
        {
          v140 = (_QWORD *)operator new();
          v140[1] = 0;
          v140[2] = 0;
          *v140 = &off_250A724F0;
          *(_QWORD *)(a1 + 144) = v140;
        }
        v342[0] = 0;
        v141 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v141 >= *((_QWORD *)this + 2) || *v141 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v141;
          *v4 = v141 + 1;
        }
        v142 = *((_DWORD *)this + 14);
        v143 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v142 + 1;
        if (v142 >= v143)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239179E70((uint64_t)v140, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v144 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v144, 1);
        v145 = v144 - 1;
        if (v145 < 0 == v37)
          *((_DWORD *)this + 14) = v145;
        v146 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v146 <= 1 || *v146 != 162 || v146[1] != 1)
          continue;
        *v4 = (char *)(v146 + 2);
LABEL_367:
        *(_DWORD *)(a1 + 388) |= 0x80000u;
        v147 = *(_QWORD *)(a1 + 152);
        if (!v147)
        {
          v147 = operator new();
          *(_QWORD *)v147 = &off_250A72220;
          *(_BYTE *)(v147 + 8) = 1;
          *(_QWORD *)(v147 + 16) = 0;
          *(_DWORD *)(v147 + 9) = 0;
          *(_BYTE *)(v147 + 13) = 0;
          *(_QWORD *)(a1 + 152) = v147;
        }
        v342[0] = 0;
        v148 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v148 >= *((_QWORD *)this + 2) || *v148 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v148;
          *v4 = v148 + 1;
        }
        v149 = *((_DWORD *)this + 14);
        v150 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v149 + 1;
        if (v149 >= v150)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239178240(v147, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v151 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v151, 1);
        v152 = v151 - 1;
        if (v152 < 0 == v37)
          *((_DWORD *)this + 14) = v152;
        v153 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v153 <= 1 || *v153 != 170 || v153[1] != 1)
          continue;
        *v4 = (char *)(v153 + 2);
LABEL_382:
        *(_DWORD *)(a1 + 388) |= 0x100000u;
        v154 = *(_QWORD **)(a1 + 160);
        if (!v154)
        {
          v154 = (_QWORD *)operator new();
          v154[1] = 0;
          v154[2] = 0;
          *v154 = &off_250A72568;
          *(_QWORD *)(a1 + 160) = v154;
        }
        v342[0] = 0;
        v155 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v155 >= *((_QWORD *)this + 2) || *v155 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v155;
          *v4 = v155 + 1;
        }
        v156 = *((_DWORD *)this + 14);
        v157 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v156 + 1;
        if (v156 >= v157)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917A0EC((uint64_t)v154, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v158 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v158, 1);
        v159 = v158 - 1;
        if (v159 < 0 == v37)
          *((_DWORD *)this + 14) = v159;
        v160 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v160 <= 1 || *v160 != 178 || v160[1] != 1)
          continue;
        *v4 = (char *)(v160 + 2);
LABEL_397:
        *(_DWORD *)(a1 + 388) |= 0x200000u;
        v161 = *(_QWORD *)(a1 + 168);
        if (!v161)
        {
          v161 = operator new();
          *(_QWORD *)v161 = &off_250A72B08;
          *(_BYTE *)(v161 + 8) = 0;
          *(_QWORD *)(v161 + 16) = 0;
          *(_DWORD *)(v161 + 12) = 0;
          *(_QWORD *)(a1 + 168) = v161;
        }
        v342[0] = 0;
        v162 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v162 >= *((_QWORD *)this + 2) || *v162 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v162;
          *v4 = v162 + 1;
        }
        v163 = *((_DWORD *)this + 14);
        v164 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v163 + 1;
        if (v163 >= v164)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917D58C(v161, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v165 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v165, 1);
        v166 = v165 - 1;
        if (v166 < 0 == v37)
          *((_DWORD *)this + 14) = v166;
        v167 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v167 <= 1 || *v167 != 186 || v167[1] != 1)
          continue;
        *v4 = (char *)(v167 + 2);
LABEL_412:
        *(_DWORD *)(a1 + 388) |= 0x400000u;
        v168 = *(_QWORD *)(a1 + 176);
        if (!v168)
        {
          v168 = operator new();
          *(_QWORD *)(v168 + 8) = 0;
          *(_QWORD *)(v168 + 16) = 0;
          *(_QWORD *)v168 = &off_250A72B80;
          *(_QWORD *)(a1 + 176) = v168;
        }
        v342[0] = 0;
        v169 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v169 >= *((_QWORD *)this + 2) || *v169 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v169;
          *v4 = v169 + 1;
        }
        v170 = *((_DWORD *)this + 14);
        v171 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v170 + 1;
        if (v170 >= v171)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917D910((unsigned int *)v168, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v172 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v172, 1);
        v173 = v172 - 1;
        if (v173 < 0 == v37)
          *((_DWORD *)this + 14) = v173;
        v174 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v174 <= 1 || *v174 != 194 || v174[1] != 1)
          continue;
        *v4 = (char *)(v174 + 2);
LABEL_427:
        *(_DWORD *)(a1 + 388) |= 0x800000u;
        v175 = *(_QWORD *)(a1 + 184);
        if (!v175)
        {
          v175 = operator new();
          *(_QWORD *)v175 = &off_250A72C70;
          *(_BYTE *)(v175 + 8) = 0;
          *(_DWORD *)(v175 + 12) = 0;
          *(_DWORD *)(v175 + 16) = 0;
          *(_QWORD *)(a1 + 184) = v175;
        }
        v342[0] = 0;
        v176 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v176 >= *((_QWORD *)this + 2) || *v176 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v176;
          *v4 = v176 + 1;
        }
        v177 = *((_DWORD *)this + 14);
        v178 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v177 + 1;
        if (v177 >= v178)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917DFF4(v175, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v179 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v179, 1);
        v180 = v179 - 1;
        if (v180 < 0 == v37)
          *((_DWORD *)this + 14) = v180;
        v181 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v181 <= 1 || *v181 != 202 || v181[1] != 1)
          continue;
        *v4 = (char *)(v181 + 2);
LABEL_442:
        *(_DWORD *)(a1 + 388) |= 0x1000000u;
        v182 = *(_QWORD **)(a1 + 192);
        if (!v182)
        {
          v182 = (_QWORD *)operator new();
          v183 = MEMORY[0x24BEDD958];
          *v182 = &off_250A72CE8;
          v182[1] = v183;
          v182[2] = 0;
          *(_QWORD *)(a1 + 192) = v182;
        }
        v342[0] = 0;
        v184 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v184 >= *((_QWORD *)this + 2) || *v184 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v184;
          *v4 = v184 + 1;
        }
        v185 = *((_DWORD *)this + 14);
        v186 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v185 + 1;
        if (v185 >= v186)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917E2A4((uint64_t)v182, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v187 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v187, 1);
        v188 = v187 - 1;
        if (v188 < 0 == v37)
          *((_DWORD *)this + 14) = v188;
        v189 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v189 <= 1 || *v189 != 210 || v189[1] != 1)
          continue;
        *v4 = (char *)(v189 + 2);
LABEL_457:
        *(_DWORD *)(a1 + 388) |= 0x2000000u;
        v190 = *(_QWORD **)(a1 + 200);
        if (!v190)
        {
          v190 = (_QWORD *)operator new();
          v191 = MEMORY[0x24BEDD958];
          *v190 = &off_250A72D60;
          v190[1] = v191;
          v190[2] = 0;
          *(_QWORD *)(a1 + 200) = v190;
        }
        v342[0] = 0;
        v192 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v192 >= *((_QWORD *)this + 2) || *v192 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v192;
          *v4 = v192 + 1;
        }
        v193 = *((_DWORD *)this + 14);
        v194 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v193 + 1;
        if (v193 >= v194)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917E5B4((uint64_t)v190, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v195 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v195, 1);
        v196 = v195 - 1;
        if (v196 < 0 == v37)
          *((_DWORD *)this + 14) = v196;
        v197 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v197 <= 1 || *v197 != 218 || v197[1] != 1)
          continue;
        *v4 = (char *)(v197 + 2);
LABEL_472:
        *(_DWORD *)(a1 + 388) |= 0x4000000u;
        v198 = *(_QWORD *)(a1 + 208);
        if (!v198)
        {
          v198 = operator new();
          *(_QWORD *)v198 = &off_250A73198;
          *(_BYTE *)(v198 + 8) = 0;
          *(_OWORD *)(v198 + 12) = 0u;
          *(_OWORD *)(v198 + 28) = 0u;
          *(_OWORD *)(v198 + 44) = 0u;
          *(_QWORD *)(a1 + 208) = v198;
        }
        v342[0] = 0;
        v199 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v199 >= *((_QWORD *)this + 2) || *v199 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v199;
          *v4 = v199 + 1;
        }
        v200 = *((_DWORD *)this + 14);
        v201 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v200 + 1;
        if (v200 >= v201)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239182340(v198, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v202 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v202, 1);
        v203 = v202 - 1;
        if (v203 < 0 == v37)
          *((_DWORD *)this + 14) = v203;
        v204 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v204 <= 1 || *v204 != 226 || v204[1] != 1)
          continue;
        *v4 = (char *)(v204 + 2);
LABEL_487:
        *(_DWORD *)(a1 + 388) |= 0x8000000u;
        v205 = *(_QWORD *)(a1 + 216);
        if (!v205)
        {
          v205 = operator new();
          *(_QWORD *)v205 = &off_250A73468;
          *(_WORD *)(v205 + 8) = 0;
          *(_BYTE *)(v205 + 10) = 0;
          *(_DWORD *)(v205 + 12) = 0;
          *(_DWORD *)(v205 + 16) = 0;
          *(_QWORD *)(a1 + 216) = v205;
        }
        v342[0] = 0;
        v206 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v206 >= *((_QWORD *)this + 2) || *v206 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v206;
          *v4 = v206 + 1;
        }
        v207 = *((_DWORD *)this + 14);
        v208 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v207 + 1;
        if (v207 >= v208)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391849A8(v205, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v209 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v209, 1);
        v210 = v209 - 1;
        if (v210 < 0 == v37)
          *((_DWORD *)this + 14) = v210;
        v211 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v211 <= 1 || *v211 != 234 || v211[1] != 1)
          continue;
        *v4 = (char *)(v211 + 2);
LABEL_502:
        *(_DWORD *)(a1 + 388) |= 0x10000000u;
        v212 = *(_QWORD *)(a1 + 224);
        if (!v212)
        {
          v212 = operator new();
          *(_QWORD *)v212 = &off_250A73210;
          *(_QWORD *)(v212 + 8) = 0;
          *(_DWORD *)(v212 + 16) = 0;
          *(_QWORD *)(a1 + 224) = v212;
        }
        v342[0] = 0;
        v213 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v213 >= *((_QWORD *)this + 2) || *v213 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v213;
          *v4 = v213 + 1;
        }
        v214 = *((_DWORD *)this + 14);
        v215 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v214 + 1;
        if (v214 >= v215)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239182E20(v212, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v216 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v216, 1);
        v217 = v216 - 1;
        if (v217 < 0 == v37)
          *((_DWORD *)this + 14) = v217;
        v218 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v218 <= 1 || *v218 != 242 || v218[1] != 1)
          continue;
        *v4 = (char *)(v218 + 2);
LABEL_517:
        *(_DWORD *)(a1 + 388) |= 0x20000000u;
        v219 = *(_QWORD *)(a1 + 232);
        if (!v219)
        {
          v219 = operator new();
          *(_QWORD *)(v219 + 8) = 0;
          *(_QWORD *)(v219 + 16) = 0;
          *(_QWORD *)v219 = &off_250A72A90;
          *(_DWORD *)(v219 + 24) = 0;
          *(_QWORD *)(a1 + 232) = v219;
        }
        v342[0] = 0;
        v220 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v220 >= *((_QWORD *)this + 2) || *v220 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v220;
          *v4 = v220 + 1;
        }
        v221 = *((_DWORD *)this + 14);
        v222 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v221 + 1;
        if (v221 >= v222)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917D204(v219, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v223 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v223, 1);
        v224 = v223 - 1;
        if (v224 < 0 == v37)
          *((_DWORD *)this + 14) = v224;
        v225 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v225 <= 1 || *v225 != 250 || v225[1] != 1)
          continue;
        *v4 = (char *)(v225 + 2);
LABEL_532:
        *(_DWORD *)(a1 + 388) |= 0x40000000u;
        v226 = *(_QWORD *)(a1 + 240);
        if (!v226)
        {
          v226 = operator new();
          *(_QWORD *)v226 = &off_250A72BF8;
          *(_WORD *)(v226 + 8) = 0;
          *(_DWORD *)(v226 + 12) = 0;
          *(_DWORD *)(v226 + 16) = 0;
          *(_QWORD *)(a1 + 240) = v226;
        }
        v342[0] = 0;
        v227 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v227 >= *((_QWORD *)this + 2) || *v227 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v227;
          *v4 = v227 + 1;
        }
        v228 = *((_DWORD *)this + 14);
        v229 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v228 + 1;
        if (v228 >= v229)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917DCA8(v226, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v230 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v230, 1);
        v231 = v230 - 1;
        if (v231 < 0 == v37)
          *((_DWORD *)this + 14) = v231;
        v232 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v232 <= 1 || *v232 != 146 || v232[1] != 3)
          continue;
        *v4 = (char *)(v232 + 2);
LABEL_547:
        *(_DWORD *)(a1 + 388) |= 0x80000000;
        v233 = *(_QWORD *)(a1 + 248);
        if (!v233)
        {
          v233 = operator new();
          *(_BYTE *)(v233 + 32) = 0;
          v234 = MEMORY[0x24BEDD958];
          *(_QWORD *)v233 = &off_250A71140;
          *(_QWORD *)(v233 + 8) = v234;
          *(_DWORD *)(v233 + 36) = 0;
          *(_DWORD *)(v233 + 40) = 0;
          *(_QWORD *)(v233 + 16) = 0;
          *(_QWORD *)(v233 + 24) = 0;
          *(_QWORD *)(a1 + 248) = v233;
        }
        v342[0] = 0;
        v235 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v235 >= *((_QWORD *)this + 2) || *v235 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v235;
          *v4 = v235 + 1;
        }
        v236 = *((_DWORD *)this + 14);
        v237 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v236 + 1;
        if (v236 >= v237)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391620C4(v233, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v238 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v238, 1);
        v239 = v238 - 1;
        if (v239 < 0 == v37)
          *((_DWORD *)this + 14) = v239;
        v240 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v240 <= 1 || *v240 != 226 || v240[1] != 3)
          continue;
        *v4 = (char *)(v240 + 2);
LABEL_562:
        *(_DWORD *)(a1 + 392) |= 1u;
        v241 = *(_QWORD *)(a1 + 256);
        if (!v241)
        {
          v241 = operator new();
          *(_QWORD *)v241 = &off_250A6F4A8;
          *(_OWORD *)(v241 + 8) = 0u;
          *(_OWORD *)(v241 + 24) = 0u;
          *(_OWORD *)(v241 + 40) = 0u;
          *(_OWORD *)(v241 + 56) = 0u;
          *(_OWORD *)(v241 + 68) = 0u;
          *(_QWORD *)(a1 + 256) = v241;
        }
        v342[0] = 0;
        v242 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v242 >= *((_QWORD *)this + 2) || *v242 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v242;
          *v4 = v242 + 1;
        }
        v243 = *((_DWORD *)this + 14);
        v244 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v243 + 1;
        if (v243 >= v244)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23913E1C4((unsigned int *)v241, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v245 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v245, 1);
        v246 = v245 - 1;
        if (v246 < 0 == v37)
          *((_DWORD *)this + 14) = v246;
        v247 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        if ((int)v17 - (int)v247 <= 1 || *v247 != 232 || v247[1] != 3)
          continue;
        v18 = (char *)(v247 + 2);
        *v4 = v18;
LABEL_577:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v340);
          if (!(_DWORD)result)
            return result;
          v248 = (char *)*((_QWORD *)this + 1);
          v17 = *((_QWORD *)this + 2);
        }
        else
        {
          *v340 = *v18;
          v248 = v18 + 1;
          *v4 = v248;
        }
        v19 = *(_DWORD *)(a1 + 392) | 2;
        *(_DWORD *)(a1 + 392) = v19;
        if ((int)v17 - (int)v248 < 2 || *v248 != 242 || v248[1] != 3)
          continue;
        *v4 = v248 + 2;
LABEL_586:
        *(_DWORD *)(a1 + 392) = v19 | 4;
        v249 = *(_QWORD *)(a1 + 264);
        if (!v249)
        {
          v249 = operator new();
          *(_QWORD *)v249 = &off_250A70E70;
          *(_QWORD *)(v249 + 56) = 0;
          *(_QWORD *)(v249 + 64) = 0;
          *(_QWORD *)(v249 + 48) = 0;
          *(_OWORD *)(v249 + 8) = 0u;
          *(_OWORD *)(v249 + 24) = 0u;
          *(_DWORD *)(v249 + 40) = 0;
          *(_QWORD *)(a1 + 264) = v249;
        }
        v342[0] = 0;
        v250 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v250 >= *((_QWORD *)this + 2) || *v250 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v250;
          *v4 = v250 + 1;
        }
        v251 = *((_DWORD *)this + 14);
        v252 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v251 + 1;
        if (v251 >= v252)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23915C9A0((_DWORD *)v249, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v253 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v253, 1);
        v254 = v253 - 1;
        if (v254 < 0 == v37)
          *((_DWORD *)this + 14) = v254;
        v255 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v255 <= 1 || *v255 != 250 || v255[1] != 3)
          continue;
        *v4 = (char *)(v255 + 2);
LABEL_601:
        *(_DWORD *)(a1 + 392) |= 8u;
        v256 = *(_QWORD *)(a1 + 272);
        if (!v256)
        {
          v256 = operator new();
          *(_QWORD *)v256 = &off_250A70EE8;
          *(_OWORD *)(v256 + 8) = 0u;
          *(_OWORD *)(v256 + 24) = 0u;
          *(_OWORD *)(v256 + 40) = 0u;
          *(_OWORD *)(v256 + 56) = 0u;
          *(_QWORD *)(a1 + 272) = v256;
        }
        v342[0] = 0;
        v257 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v257 >= *((_QWORD *)this + 2) || *v257 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v257;
          *v4 = v257 + 1;
        }
        v258 = *((_DWORD *)this + 14);
        v259 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v258 + 1;
        if (v258 >= v259)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23915D6F0((unsigned int *)v256, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v260 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v260, 1);
        v261 = v260 - 1;
        if (v261 < 0 == v37)
          *((_DWORD *)this + 14) = v261;
        v262 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v262 <= 1 || *v262 != 130 || v262[1] != 4)
          continue;
        *v4 = (char *)(v262 + 2);
LABEL_616:
        *(_DWORD *)(a1 + 392) |= 0x10u;
        v263 = *(_QWORD *)(a1 + 280);
        if (!v263)
        {
          v263 = operator new();
          *(_QWORD *)(v263 + 8) = 0;
          *(_QWORD *)(v263 + 16) = 0;
          *(_QWORD *)v263 = &off_250A70FD8;
          *(_DWORD *)(v263 + 24) = 0;
          *(_QWORD *)(v263 + 40) = 0;
          *(_QWORD *)(v263 + 48) = 0;
          *(_QWORD *)(v263 + 32) = 0;
          *(_QWORD *)(a1 + 280) = v263;
        }
        v342[0] = 0;
        v264 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v264 >= *((_QWORD *)this + 2) || *v264 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v264;
          *v4 = v264 + 1;
        }
        v265 = *((_DWORD *)this + 14);
        v266 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v265 + 1;
        if (v265 >= v266)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239160A50((_DWORD *)v263, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v267 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v267, 1);
        v268 = v267 - 1;
        if (v268 < 0 == v37)
          *((_DWORD *)this + 14) = v268;
        v269 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v269 <= 1 || *v269 != 138 || v269[1] != 4)
          continue;
        *v4 = (char *)(v269 + 2);
LABEL_631:
        *(_DWORD *)(a1 + 392) |= 0x20u;
        v270 = *(_QWORD *)(a1 + 288);
        if (!v270)
        {
          v270 = operator new();
          *(_QWORD *)v270 = &off_250A71230;
          *(_QWORD *)(v270 + 56) = 0;
          *(_QWORD *)(v270 + 64) = 0;
          *(_QWORD *)(v270 + 48) = 0;
          *(_OWORD *)(v270 + 8) = 0u;
          *(_OWORD *)(v270 + 24) = 0u;
          *(_DWORD *)(v270 + 40) = 0;
          *(_QWORD *)(a1 + 288) = v270;
        }
        v342[0] = 0;
        v271 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v271 >= *((_QWORD *)this + 2) || *v271 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v271;
          *v4 = v271 + 1;
        }
        v272 = *((_DWORD *)this + 14);
        v273 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v272 + 1;
        if (v272 >= v273)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239163A74(v270, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v274 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v274, 1);
        v275 = v274 - 1;
        if (v275 < 0 == v37)
          *((_DWORD *)this + 14) = v275;
        v276 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v276 <= 1 || *v276 != 146 || v276[1] != 4)
          continue;
        *v4 = (char *)(v276 + 2);
LABEL_646:
        *(_DWORD *)(a1 + 392) |= 0x40u;
        v277 = *(_QWORD **)(a1 + 304);
        if (!v277)
        {
          v277 = (_QWORD *)operator new();
          *v277 = &off_250A71320;
          v277[1] = 0;
          v277[2] = 0;
          v277[3] = 0;
          *(_QWORD *)(a1 + 304) = v277;
        }
        v342[0] = 0;
        v278 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v278 >= *((_QWORD *)this + 2) || *v278 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v278;
          *v4 = v278 + 1;
        }
        v279 = *((_DWORD *)this + 14);
        v280 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v279 + 1;
        if (v279 >= v280)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239164A54((uint64_t)v277, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v281 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v281, 1);
        v282 = v281 - 1;
        if (v282 < 0 == v37)
          *((_DWORD *)this + 14) = v282;
        v283 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v283 <= 1 || *v283 != 154 || v283[1] != 4)
          continue;
        *v4 = (char *)(v283 + 2);
LABEL_661:
        *(_DWORD *)(a1 + 392) |= 0x80u;
        v284 = *(_QWORD **)(a1 + 312);
        if (!v284)
        {
          v284 = (_QWORD *)operator new();
          *v284 = &off_250A710C8;
          v284[1] = 0;
          v284[2] = 0;
          v284[3] = 0;
          *(_QWORD *)(a1 + 312) = v284;
        }
        v342[0] = 0;
        v285 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v285 >= *((_QWORD *)this + 2) || *v285 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
        }
        else
        {
          v342[0] = *v285;
          *v4 = v285 + 1;
        }
        v286 = *((_DWORD *)this + 14);
        v287 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v286 + 1;
        if (v286 >= v287)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239161778((uint64_t)v284, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v288 = *((_DWORD *)this + 14);
        v37 = __OFSUB__(v288, 1);
        v289 = v288 - 1;
        if (v289 < 0 == v37)
          *((_DWORD *)this + 14) = v289;
        v290 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v20 = *((_QWORD *)this + 2);
        if ((int)v20 - (int)v290 > 1)
        {
          v291 = *v290;
          goto LABEL_696;
        }
        continue;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_108;
        v16 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_128;
      case 4u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_138;
        goto LABEL_108;
      case 5u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_152;
        goto LABEL_108;
      case 6u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_166;
        goto LABEL_108;
      case 7u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_180;
        goto LABEL_108;
      case 8u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_194;
        goto LABEL_108;
      case 9u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_208;
        goto LABEL_108;
      case 0xAu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_222;
        goto LABEL_108;
      case 0xBu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_236;
        goto LABEL_108;
      case 0xCu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_250;
        goto LABEL_108;
      case 0xDu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_264;
        goto LABEL_108;
      case 0xEu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_278;
        goto LABEL_108;
      case 0xFu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_292;
        goto LABEL_108;
      case 0x10u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_307;
        goto LABEL_108;
      case 0x11u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_322;
        goto LABEL_108;
      case 0x12u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_337;
        goto LABEL_108;
      case 0x13u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_352;
        goto LABEL_108;
      case 0x14u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_367;
        goto LABEL_108;
      case 0x15u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_382;
        goto LABEL_108;
      case 0x16u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_397;
        goto LABEL_108;
      case 0x17u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_412;
        goto LABEL_108;
      case 0x18u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_427;
        goto LABEL_108;
      case 0x19u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_442;
        goto LABEL_108;
      case 0x1Au:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_457;
        goto LABEL_108;
      case 0x1Bu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_472;
        goto LABEL_108;
      case 0x1Cu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_487;
        goto LABEL_108;
      case 0x1Du:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_502;
        goto LABEL_108;
      case 0x1Eu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_517;
        goto LABEL_108;
      case 0x1Fu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_532;
        goto LABEL_108;
      case 0x32u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_547;
        goto LABEL_108;
      case 0x3Cu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_562;
        goto LABEL_108;
      case 0x3Du:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_108;
        v18 = (char *)*((_QWORD *)this + 1);
        v17 = *((_QWORD *)this + 2);
        goto LABEL_577;
      case 0x3Eu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_108;
        v19 = *(_DWORD *)(a1 + 392);
        goto LABEL_586;
      case 0x3Fu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_601;
        goto LABEL_108;
      case 0x40u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_616;
        goto LABEL_108;
      case 0x41u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_631;
        goto LABEL_108;
      case 0x42u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_646;
        goto LABEL_108;
      case 0x43u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_661;
        goto LABEL_108;
      case 0x46u:
        v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v21 = (char *)*((_QWORD *)this + 1);
            v20 = *((_QWORD *)this + 2);
            goto LABEL_676;
          }
          goto LABEL_108;
        }
        result = sub_2391385BC(this, v6);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v290 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v20 = *((_QWORD *)this + 2);
          if ((int)v20 - (int)v290 < 2)
            goto LABEL_2;
          v291 = *v290;
          if (v291 == 186)
            break;
LABEL_696:
          if (v291 != 176 || v290[1] != 4)
            goto LABEL_2;
          v21 = (char *)(v290 + 2);
          *v4 = v21;
LABEL_676:
          v341 = 0;
          if ((unint64_t)v21 >= v20 || *v21 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v341))return 0;
          }
          else
          {
            v341 = *v21;
            *v4 = v21 + 1;
          }
          v292 = *(_DWORD *)(a1 + 328);
          if (v292 == *(_DWORD *)(a1 + 332))
          {
            sub_2391087A4(v6, v292 + 1);
            v292 = *(_DWORD *)(a1 + 328);
          }
          v293 = v341;
          v294 = *(_QWORD *)(a1 + 320);
          *(_DWORD *)(a1 + 328) = v292 + 1;
          *(_DWORD *)(v294 + 4 * v292) = v293;
          v295 = *(_DWORD *)(a1 + 332) - *(_DWORD *)(a1 + 328);
          if (v295 >= 1)
          {
            v296 = v295 + 1;
            do
            {
              v297 = (unsigned __int8 *)*((_QWORD *)this + 1);
              v298 = *((_QWORD *)this + 2);
              if ((int)v298 - (int)v297 < 2 || *v297 != 176 || v297[1] != 4)
                break;
              *v4 = (char *)(v297 + 2);
              if ((unint64_t)(v297 + 2) >= v298 || (char)v297[2] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v341))return 0;
              }
              else
              {
                v341 = v297[2];
                *v4 = (char *)(v297 + 3);
              }
              v299 = *(_DWORD *)(a1 + 328);
              if (v299 >= *(_DWORD *)(a1 + 332))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v342);
                v299 = *(_DWORD *)(a1 + 328);
              }
              v300 = v341;
              v301 = *(_QWORD *)(a1 + 320);
              *(_DWORD *)(a1 + 328) = v299 + 1;
              *(_DWORD *)(v301 + 4 * v299) = v300;
              --v296;
            }
            while (v296 > 1);
          }
        }
        if (v290[1] == 4)
        {
          *v4 = (char *)(v290 + 2);
LABEL_700:
          *(_DWORD *)(a1 + 392) |= 0x200u;
          v302 = *(_QWORD *)(a1 + 336);
          if (!v302)
          {
            v302 = operator new();
            *(_QWORD *)(v302 + 8) = 0;
            *(_QWORD *)(v302 + 16) = 0;
            *(_QWORD *)v302 = &off_250A6EDA0;
            *(_DWORD *)(v302 + 24) = 0;
            *(_QWORD *)(v302 + 32) = 0;
            *(_QWORD *)(v302 + 40) = 0;
            *(_DWORD *)(v302 + 48) = 0;
            *(_QWORD *)(v302 + 56) = 0;
            *(_QWORD *)(v302 + 64) = 0;
            *(_DWORD *)(v302 + 72) = 0;
            *(_QWORD *)(v302 + 80) = 0;
            *(_DWORD *)(v302 + 88) = 0;
            *(_QWORD *)(a1 + 336) = v302;
          }
          v342[0] = 0;
          v303 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v303 >= *((_QWORD *)this + 2) || *v303 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
          }
          else
          {
            v342[0] = *v303;
            *v4 = v303 + 1;
          }
          v304 = *((_DWORD *)this + 14);
          v305 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v304 + 1;
          if (v304 >= v305)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
          if (!sub_239135B18((int *)v302, this) || !*((_BYTE *)this + 36))
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
          v306 = *((_DWORD *)this + 14);
          v37 = __OFSUB__(v306, 1);
          v307 = v306 - 1;
          if (v307 < 0 == v37)
            *((_DWORD *)this + 14) = v307;
          v308 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v22 = *((_QWORD *)this + 2);
          if ((int)v22 - (int)v308 > 1 && *v308 == 192 && v308[1] == 4)
          {
            v23 = (char *)(v308 + 2);
            *v4 = v23;
LABEL_715:
            if ((unint64_t)v23 >= v22 || *v23 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
              if (!(_DWORD)result)
                return result;
              v309 = (char *)*((_QWORD *)this + 1);
              v22 = *((_QWORD *)this + 2);
            }
            else
            {
              *v8 = *v23;
              v309 = v23 + 1;
              *v4 = v309;
            }
            *(_DWORD *)(a1 + 392) |= 0x400u;
            if ((int)v22 - (int)v309 >= 2)
            {
              v310 = *v309;
              goto LABEL_744;
            }
          }
        }
        continue;
      case 0x47u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_700;
        goto LABEL_108;
      case 0x48u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_108;
        v23 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_715;
      case 0x49u:
        v11 = TagFallback & 7;
        if (v11 == 2)
        {
          result = sub_2391385BC(this, v5);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v309 = (char *)*((_QWORD *)this + 1);
            v22 = *((_QWORD *)this + 2);
            if ((int)v22 - (int)v309 < 2)
              goto LABEL_2;
            v310 = *v309;
            if (v310 == 208)
              break;
LABEL_744:
            if (v310 != 200 || v309[1] != 4)
              goto LABEL_2;
            v24 = v309 + 2;
            *v4 = v24;
LABEL_724:
            v341 = 0;
            if ((unint64_t)v24 >= v22 || *v24 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v341))return 0;
            }
            else
            {
              v341 = *v24;
              *v4 = v24 + 1;
            }
            v311 = *(_DWORD *)(a1 + 352);
            if (v311 == *(_DWORD *)(a1 + 356))
            {
              sub_2391087A4(v5, v311 + 1);
              v311 = *(_DWORD *)(a1 + 352);
            }
            v312 = v341;
            v313 = *(_QWORD *)(a1 + 344);
            *(_DWORD *)(a1 + 352) = v311 + 1;
            *(_DWORD *)(v313 + 4 * v311) = v312;
            v314 = *(_DWORD *)(a1 + 356) - *(_DWORD *)(a1 + 352);
            if (v314 >= 1)
            {
              v315 = v314 + 1;
              do
              {
                v316 = (unsigned __int8 *)*((_QWORD *)this + 1);
                v317 = *((_QWORD *)this + 2);
                if ((int)v317 - (int)v316 < 2 || *v316 != 200 || v316[1] != 4)
                  break;
                *v4 = (char *)(v316 + 2);
                if ((unint64_t)(v316 + 2) >= v317 || (char)v316[2] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v341))return 0;
                }
                else
                {
                  v341 = v316[2];
                  *v4 = (char *)(v316 + 3);
                }
                v318 = *(_DWORD *)(a1 + 352);
                if (v318 >= *(_DWORD *)(a1 + 356))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v342);
                  v318 = *(_DWORD *)(a1 + 352);
                }
                v319 = v341;
                v320 = *(_QWORD *)(a1 + 344);
                *(_DWORD *)(a1 + 352) = v318 + 1;
                *(_DWORD *)(v320 + 4 * v318) = v319;
                --v315;
              }
              while (v315 > 1);
            }
          }
          if (v309[1] == 4)
          {
            v25 = v309 + 2;
            *v4 = v25;
LABEL_748:
            v342[0] = 0;
            if ((unint64_t)v25 >= v22 || *v25 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342);
              if (!(_DWORD)result)
                return result;
              v321 = v342[0];
              v322 = (char *)*((_QWORD *)this + 1);
              v22 = *((_QWORD *)this + 2);
            }
            else
            {
              v321 = *v25;
              v322 = v25 + 1;
              *v4 = v322;
            }
            *(_BYTE *)(a1 + 360) = v321 != 0;
            *(_DWORD *)(a1 + 392) |= 0x1000u;
            if ((int)v22 - (int)v322 >= 2 && *v322 == 216 && v322[1] == 4)
            {
              v26 = v322 + 2;
              *v4 = v26;
LABEL_757:
              if ((unint64_t)v26 >= v22 || *v26 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v339);
                if (!(_DWORD)result)
                  return result;
                v323 = (char *)*((_QWORD *)this + 1);
                v22 = *((_QWORD *)this + 2);
              }
              else
              {
                *v339 = *v26;
                v323 = v26 + 1;
                *v4 = v323;
              }
              v27 = *(_DWORD *)(a1 + 392) | 0x2000;
              *(_DWORD *)(a1 + 392) = v27;
              if ((int)v22 - (int)v323 >= 2 && *v323 == 226 && v323[1] == 4)
              {
                *v4 = v323 + 2;
LABEL_766:
                *(_DWORD *)(a1 + 392) = v27 | 0x4000;
                v324 = *(_QWORD **)(a1 + 368);
                if (!v324)
                {
                  v324 = (_QWORD *)operator new();
                  v325 = MEMORY[0x24BEDD958];
                  *v324 = &off_250A6F1D8;
                  v324[1] = v325;
                  v324[2] = v325;
                  v324[3] = 0;
                  v324[4] = 0;
                  v324[5] = v325;
                  v324[6] = 0;
                  *(_QWORD *)(a1 + 368) = v324;
                }
                v342[0] = 0;
                v326 = (char *)*((_QWORD *)this + 1);
                if ((unint64_t)v326 >= *((_QWORD *)this + 2) || *v326 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
                }
                else
                {
                  v342[0] = *v326;
                  *v4 = v326 + 1;
                }
                v327 = *((_DWORD *)this + 14);
                v328 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v327 + 1;
                if (v327 >= v328)
                  return 0;
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
                if (!sub_23913A668((uint64_t)v324, this) || !*((_BYTE *)this + 36))
                  return 0;
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
                v329 = *((_DWORD *)this + 14);
                v37 = __OFSUB__(v329, 1);
                v330 = v329 - 1;
                if (v330 < 0 == v37)
                  *((_DWORD *)this + 14) = v330;
                v331 = (unsigned __int8 *)*((_QWORD *)this + 1);
                if (*((_DWORD *)this + 4) - (int)v331 > 1 && *v331 == 234 && v331[1] == 4)
                {
                  *v4 = (char *)(v331 + 2);
LABEL_781:
                  *(_DWORD *)(a1 + 392) |= 0x8000u;
                  v332 = *(_QWORD *)(a1 + 376);
                  if (!v332)
                  {
                    v332 = operator new();
                    *(_QWORD *)(v332 + 8) = 0;
                    *(_QWORD *)(v332 + 16) = 0;
                    *(_QWORD *)v332 = &off_250A6EF08;
                    *(_DWORD *)(v332 + 24) = 0;
                    *(_QWORD *)(v332 + 32) = 0;
                    *(_DWORD *)(v332 + 40) = 0;
                    *(_QWORD *)(a1 + 376) = v332;
                  }
                  v342[0] = 0;
                  v333 = (char *)*((_QWORD *)this + 1);
                  if ((unint64_t)v333 >= *((_QWORD *)this + 2) || *v333 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v342))return 0;
                  }
                  else
                  {
                    v342[0] = *v333;
                    *v4 = v333 + 1;
                  }
                  v334 = *((_DWORD *)this + 14);
                  v335 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v334 + 1;
                  if (v334 >= v335)
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
                  if (!sub_239137318((int *)v332, this) || !*((_BYTE *)this + 36))
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
                  v336 = *((_DWORD *)this + 14);
                  v37 = __OFSUB__(v336, 1);
                  v337 = v336 - 1;
                  if (v337 < 0 == v37)
                    *((_DWORD *)this + 14) = v337;
                  if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    result = 1;
                    *((_BYTE *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v24 = (char *)*((_QWORD *)this + 1);
          v22 = *((_QWORD *)this + 2);
          goto LABEL_724;
        }
LABEL_108:
        if (v11 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      case 0x4Au:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_108;
        v25 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_748;
      case 0x4Bu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_108;
        v26 = (char *)*((_QWORD *)this + 1);
        v22 = *((_QWORD *)this + 2);
        goto LABEL_757;
      case 0x4Cu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_108;
        v27 = *(_DWORD *)(a1 + 392);
        goto LABEL_766;
      case 0x4Du:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_108;
        goto LABEL_781;
      default:
        v11 = TagFallback & 7;
        goto LABEL_108;
    }
  }
}

void sub_23916FA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23916FA68(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;

  v5 = result;
  v6 = *(_DWORD *)(result + 388);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 388);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_36;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_37;
  }
LABEL_36:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_40;
  }
LABEL_37:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
  {
    sub_239169F68();
    v7 = *(_QWORD *)(qword_2542CF728 + 24);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_43;
  }
LABEL_40:
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
  {
    sub_239169F68();
    v8 = *(_QWORD *)(qword_2542CF728 + 32);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_46;
  }
LABEL_43:
  v9 = *(_QWORD *)(v5 + 40);
  if (!v9)
  {
    sub_239169F68();
    v9 = *(_QWORD *)(qword_2542CF728 + 40);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_49;
  }
LABEL_46:
  v10 = *(_QWORD *)(v5 + 48);
  if (!v10)
  {
    sub_239169F68();
    v10 = *(_QWORD *)(qword_2542CF728 + 48);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_52;
  }
LABEL_49:
  v11 = *(_QWORD *)(v5 + 56);
  if (!v11)
  {
    sub_239169F68();
    v11 = *(_QWORD *)(qword_2542CF728 + 56);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_55;
  }
LABEL_52:
  v12 = *(_QWORD *)(v5 + 64);
  if (!v12)
  {
    sub_239169F68();
    v12 = *(_QWORD *)(qword_2542CF728 + 64);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_58;
  }
LABEL_55:
  v13 = *(_QWORD *)(v5 + 72);
  if (!v13)
  {
    sub_239169F68();
    v13 = *(_QWORD *)(qword_2542CF728 + 72);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_61;
  }
LABEL_58:
  v14 = *(_QWORD *)(v5 + 80);
  if (!v14)
  {
    sub_239169F68();
    v14 = *(_QWORD *)(qword_2542CF728 + 80);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v14, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_64;
  }
LABEL_61:
  v15 = *(_QWORD *)(v5 + 88);
  if (!v15)
  {
    sub_239169F68();
    v15 = *(_QWORD *)(qword_2542CF728 + 88);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v15, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_67;
  }
LABEL_64:
  v16 = *(_QWORD *)(v5 + 96);
  if (!v16)
  {
    sub_239169F68();
    v16 = *(_QWORD *)(qword_2542CF728 + 96);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v16, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_70;
  }
LABEL_67:
  v17 = *(_QWORD *)(v5 + 104);
  if (!v17)
  {
    sub_239169F68();
    v17 = *(_QWORD *)(qword_2542CF728 + 104);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v17, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_73;
  }
LABEL_70:
  v18 = *(_QWORD *)(v5 + 112);
  if (!v18)
  {
    sub_239169F68();
    v18 = *(_QWORD *)(qword_2542CF728 + 112);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v18, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_76;
  }
LABEL_73:
  v19 = *(_QWORD *)(v5 + 120);
  if (!v19)
  {
    sub_239169F68();
    v19 = *(_QWORD *)(qword_2542CF728 + 120);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v19, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_79;
  }
LABEL_76:
  v20 = *(_QWORD *)(v5 + 128);
  if (!v20)
  {
    sub_239169F68();
    v20 = *(_QWORD *)(qword_2542CF728 + 128);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v20, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_82;
  }
LABEL_79:
  v21 = *(_QWORD *)(v5 + 136);
  if (!v21)
  {
    sub_239169F68();
    v21 = *(_QWORD *)(qword_2542CF728 + 136);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v21, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_85;
  }
LABEL_82:
  v22 = *(_QWORD *)(v5 + 144);
  if (!v22)
  {
    sub_239169F68();
    v22 = *(_QWORD *)(qword_2542CF728 + 144);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v22, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_88;
  }
LABEL_85:
  v23 = *(_QWORD *)(v5 + 152);
  if (!v23)
  {
    sub_239169F68();
    v23 = *(_QWORD *)(qword_2542CF728 + 152);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v23, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_91;
  }
LABEL_88:
  v24 = *(_QWORD *)(v5 + 160);
  if (!v24)
  {
    sub_239169F68();
    v24 = *(_QWORD *)(qword_2542CF728 + 160);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v24, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_94;
  }
LABEL_91:
  v25 = *(_QWORD *)(v5 + 168);
  if (!v25)
  {
    sub_239169F68();
    v25 = *(_QWORD *)(qword_2542CF728 + 168);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v25, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_97;
  }
LABEL_94:
  v26 = *(_QWORD *)(v5 + 176);
  if (!v26)
  {
    sub_239169F68();
    v26 = *(_QWORD *)(qword_2542CF728 + 176);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v26, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_100;
  }
LABEL_97:
  v27 = *(_QWORD *)(v5 + 184);
  if (!v27)
  {
    sub_239169F68();
    v27 = *(_QWORD *)(qword_2542CF728 + 184);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v27, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_103;
  }
LABEL_100:
  v28 = *(_QWORD *)(v5 + 192);
  if (!v28)
  {
    sub_239169F68();
    v28 = *(_QWORD *)(qword_2542CF728 + 192);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v28, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_106;
  }
LABEL_103:
  v29 = *(_QWORD *)(v5 + 200);
  if (!v29)
  {
    sub_239169F68();
    v29 = *(_QWORD *)(qword_2542CF728 + 200);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v29, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_109;
  }
LABEL_106:
  v30 = *(_QWORD *)(v5 + 208);
  if (!v30)
  {
    sub_239169F68();
    v30 = *(_QWORD *)(qword_2542CF728 + 208);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v30, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_112;
  }
LABEL_109:
  v31 = *(_QWORD *)(v5 + 216);
  if (!v31)
  {
    sub_239169F68();
    v31 = *(_QWORD *)(qword_2542CF728 + 216);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v31, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_115;
  }
LABEL_112:
  v32 = *(_QWORD *)(v5 + 224);
  if (!v32)
  {
    sub_239169F68();
    v32 = *(_QWORD *)(qword_2542CF728 + 224);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v32, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_32;
    goto LABEL_118;
  }
LABEL_115:
  v33 = *(_QWORD *)(v5 + 232);
  if (!v33)
  {
    sub_239169F68();
    v33 = *(_QWORD *)(qword_2542CF728 + 232);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v33, a2, a4);
  v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0)
      goto LABEL_124;
    goto LABEL_121;
  }
LABEL_118:
  v34 = *(_QWORD *)(v5 + 240);
  if (!v34)
  {
    sub_239169F68();
    v34 = *(_QWORD *)(qword_2542CF728 + 240);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v34, a2, a4);
  if ((*(_DWORD *)(v5 + 388) & 0x80000000) != 0)
  {
LABEL_121:
    v35 = *(_QWORD *)(v5 + 248);
    if (!v35)
    {
      sub_239169F68();
      v35 = *(_QWORD *)(qword_2542CF728 + 248);
    }
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, v35, a2, a4);
  }
LABEL_124:
  v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 1) != 0)
  {
    v37 = *(_QWORD *)(v5 + 256);
    if (!v37)
    {
      sub_239169F68();
      v37 = *(_QWORD *)(qword_2542CF728 + 256);
    }
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, v37, a2, a4);
    v36 = *(_DWORD *)(v5 + 392);
    if ((v36 & 2) == 0)
    {
LABEL_126:
      if ((v36 & 4) == 0)
        goto LABEL_127;
      goto LABEL_137;
    }
  }
  else if ((v36 & 2) == 0)
  {
    goto LABEL_126;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(unsigned int *)(v5 + 296), (uint64_t)a2, a4);
  v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 4) == 0)
  {
LABEL_127:
    if ((v36 & 8) == 0)
      goto LABEL_128;
    goto LABEL_140;
  }
LABEL_137:
  v38 = *(_QWORD *)(v5 + 264);
  if (!v38)
  {
    sub_239169F68();
    v38 = *(_QWORD *)(qword_2542CF728 + 264);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, v38, a2, a4);
  v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 8) == 0)
  {
LABEL_128:
    if ((v36 & 0x10) == 0)
      goto LABEL_129;
    goto LABEL_143;
  }
LABEL_140:
  v39 = *(_QWORD *)(v5 + 272);
  if (!v39)
  {
    sub_239169F68();
    v39 = *(_QWORD *)(qword_2542CF728 + 272);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, v39, a2, a4);
  v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 0x10) == 0)
  {
LABEL_129:
    if ((v36 & 0x20) == 0)
      goto LABEL_130;
    goto LABEL_146;
  }
LABEL_143:
  v40 = *(_QWORD *)(v5 + 280);
  if (!v40)
  {
    sub_239169F68();
    v40 = *(_QWORD *)(qword_2542CF728 + 280);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x40, v40, a2, a4);
  v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 0x20) == 0)
  {
LABEL_130:
    if ((v36 & 0x40) == 0)
      goto LABEL_131;
    goto LABEL_149;
  }
LABEL_146:
  v41 = *(_QWORD *)(v5 + 288);
  if (!v41)
  {
    sub_239169F68();
    v41 = *(_QWORD *)(qword_2542CF728 + 288);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x41, v41, a2, a4);
  v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 0x40) == 0)
  {
LABEL_131:
    if ((v36 & 0x80) == 0)
      goto LABEL_155;
    goto LABEL_152;
  }
LABEL_149:
  v42 = *(_QWORD *)(v5 + 304);
  if (!v42)
  {
    sub_239169F68();
    v42 = *(_QWORD *)(qword_2542CF728 + 304);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, v42, a2, a4);
  if ((*(_DWORD *)(v5 + 392) & 0x80) != 0)
  {
LABEL_152:
    v43 = *(_QWORD *)(v5 + 312);
    if (!v43)
    {
      sub_239169F68();
      v43 = *(_QWORD *)(qword_2542CF728 + 312);
    }
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, v43, a2, a4);
  }
LABEL_155:
  if (*(int *)(v5 + 328) >= 1)
  {
    v44 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(unsigned int *)(*(_QWORD *)(v5 + 320) + 4 * v44++), (uint64_t)a2, a4);
    while (v44 < *(int *)(v5 + 328));
  }
  v45 = *(_DWORD *)(v5 + 392);
  if ((v45 & 0x200) != 0)
  {
    v46 = *(_QWORD *)(v5 + 336);
    if (!v46)
    {
      sub_239169F68();
      v46 = *(_QWORD *)(qword_2542CF728 + 336);
    }
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, v46, a2, a4);
    v45 = *(_DWORD *)(v5 + 392);
  }
  if ((v45 & 0x400) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(unsigned int *)(v5 + 300), (uint64_t)a2, a4);
  if (*(int *)(v5 + 352) >= 1)
  {
    v47 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(unsigned int *)(*(_QWORD *)(v5 + 344) + 4 * v47++), (uint64_t)a2, a4);
    while (v47 < *(int *)(v5 + 352));
  }
  v48 = *(_DWORD *)(v5 + 392);
  if ((v48 & 0x1000) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(unsigned __int8 *)(v5 + 360), (uint64_t)a2, a4);
    v48 = *(_DWORD *)(v5 + 392);
    if ((v48 & 0x2000) == 0)
    {
LABEL_169:
      if ((v48 & 0x4000) == 0)
        goto LABEL_170;
      goto LABEL_174;
    }
  }
  else if ((v48 & 0x2000) == 0)
  {
    goto LABEL_169;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(unsigned int *)(v5 + 364), (uint64_t)a2, a4);
  v48 = *(_DWORD *)(v5 + 392);
  if ((v48 & 0x4000) == 0)
  {
LABEL_170:
    if ((v48 & 0x8000) == 0)
      return result;
    goto LABEL_177;
  }
LABEL_174:
  v49 = *(_QWORD *)(v5 + 368);
  if (!v49)
  {
    sub_239169F68();
    v49 = *(_QWORD *)(qword_2542CF728 + 368);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, v49, a2, a4);
  if ((*(_DWORD *)(v5 + 392) & 0x8000) != 0)
  {
LABEL_177:
    v50 = *(_QWORD *)(v5 + 376);
    if (!v50)
    {
      sub_239169F68();
      v50 = *(_QWORD *)(qword_2542CF728 + 376);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, v50, a2, a4);
  }
  return result;
}

uint64_t sub_23917030C(uint64_t a1)
{
  unsigned int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  uint64_t v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  int v31;
  uint64_t v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  int v35;
  uint64_t v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;
  uint64_t v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  int v43;
  uint64_t v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  int v47;
  uint64_t v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  int v51;
  uint64_t v52;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v53;
  int v54;
  int v55;
  uint64_t v56;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v57;
  int v58;
  int v59;
  uint64_t v60;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v61;
  int v62;
  int v63;
  uint64_t v64;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v65;
  int v66;
  int v67;
  uint64_t v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  unsigned int *v77;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v78;
  int v79;
  int v80;
  uint64_t v81;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v82;
  int v83;
  int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v88;
  int v89;
  int v90;
  uint64_t v91;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v92;
  int v93;
  int v94;
  uint64_t v95;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v96;
  int v97;
  int v98;
  uint64_t v99;
  int v100;
  int v101;
  int v102;
  uint64_t v103;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v104;
  int v105;
  int v106;
  uint64_t v107;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v108;
  int v109;
  int v110;
  uint64_t v111;
  int v112;
  int v113;
  uint64_t v114;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v115;
  int v116;
  int v117;
  int v118;
  unsigned int *v119;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v120;
  int v121;
  int v122;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v123;
  int v124;
  uint64_t v125;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v126;
  int v127;
  int v128;
  unsigned int *v129;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v130;
  int v131;
  int v132;
  uint64_t v133;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v134;
  int v135;
  int v136;
  uint64_t v137;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v138;
  int v139;
  int v140;
  uint64_t v141;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v142;
  int v143;
  int v144;
  uint64_t v145;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v146;
  int v147;
  int v148;
  uint64_t v149;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v150;
  int v151;
  int v152;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v153;
  int v154;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v155;
  int v156;
  uint64_t v157;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v158;
  int v159;
  int v160;
  uint64_t v161;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v162;
  int v163;
  int v164;
  int v165;
  uint64_t v166;
  int v167;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v168;
  int v169;
  int v170;
  uint64_t v171;
  int v172;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v173;
  int v174;
  uint64_t result;

  v2 = *(_DWORD *)(a1 + 388);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_54;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
       + 1;
    v2 = *(_DWORD *)(a1 + 388);
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *(_DWORD *)(a1 + 388);
  }
  else
  {
    v5 = 1;
  }
  v3 += v5 + 1;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *(_DWORD *)(a1 + 388);
    }
    else
    {
      v7 = 1;
    }
    v3 += v7 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  v8 = *(_QWORD *)(a1 + 24);
  if (!v8)
  {
    sub_239169F68();
    v8 = *(_QWORD *)(qword_2542CF728 + 24);
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917984C(v8);
  v10 = (int)v9;
  if (v9 >= 0x80)
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
  else
    v11 = 1;
  v3 += v10 + v11 + 1;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0)
      goto LABEL_15;
    goto LABEL_36;
  }
LABEL_30:
  v12 = *(_QWORD *)(a1 + 32);
  if (!v12)
  {
    sub_239169F68();
    v12 = *(_QWORD *)(qword_2542CF728 + 32);
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239179CDC(v12);
  v14 = (int)v13;
  if (v13 >= 0x80)
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  else
    v15 = 1;
  v3 += v14 + v15 + 1;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_42;
  }
LABEL_36:
  v16 = *(_QWORD *)(a1 + 40);
  if (!v16)
  {
    sub_239169F68();
    v16 = *(_QWORD *)(qword_2542CF728 + 40);
  }
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917A638(v16);
  v18 = (int)v17;
  if (v17 >= 0x80)
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  else
    v19 = 1;
  v3 += v18 + v19 + 1;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0)
      goto LABEL_54;
    goto LABEL_48;
  }
LABEL_42:
  v20 = *(_QWORD *)(a1 + 48);
  if (!v20)
  {
    sub_239169F68();
    v20 = *(_QWORD *)(qword_2542CF728 + 48);
  }
  v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917AA50(v20);
  v22 = (int)v21;
  if (v21 >= 0x80)
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  else
    v23 = 1;
  v3 += v22 + v23 + 1;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x80) != 0)
  {
LABEL_48:
    v24 = *(_QWORD *)(a1 + 56);
    if (!v24)
    {
      sub_239169F68();
      v24 = *(_QWORD *)(qword_2542CF728 + 56);
    }
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917AE68(v24);
    v26 = (int)v25;
    if (v25 >= 0x80)
      v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
    else
      v27 = 1;
    v3 += v26 + v27 + 1;
    v2 = *(_DWORD *)(a1 + 388);
  }
LABEL_54:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_112;
  if ((v2 & 0x100) != 0)
  {
    v28 = *(_QWORD *)(a1 + 64);
    if (!v28)
    {
      sub_239169F68();
      v28 = *(_QWORD *)(qword_2542CF728 + 64);
    }
    v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917B260(v28);
    v30 = (int)v29;
    if (v29 >= 0x80)
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    else
      v31 = 1;
    v3 += v30 + v31 + 1;
    v2 = *(_DWORD *)(a1 + 388);
    if ((v2 & 0x200) == 0)
    {
LABEL_57:
      if ((v2 & 0x400) == 0)
        goto LABEL_58;
      goto LABEL_76;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_57;
  }
  v32 = *(_QWORD *)(a1 + 72);
  if (!v32)
  {
    sub_239169F68();
    v32 = *(_QWORD *)(qword_2542CF728 + 72);
  }
  v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917BBD4(v32);
  v34 = (int)v33;
  if (v33 >= 0x80)
    v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
  else
    v35 = 1;
  v3 += v34 + v35 + 1;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x400) == 0)
  {
LABEL_58:
    if ((v2 & 0x800) == 0)
      goto LABEL_59;
    goto LABEL_82;
  }
LABEL_76:
  v36 = *(_QWORD *)(a1 + 80);
  if (!v36)
  {
    sub_239169F68();
    v36 = *(_QWORD *)(qword_2542CF728 + 80);
  }
  v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917C144(v36);
  v38 = (int)v37;
  if (v37 >= 0x80)
    v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
  else
    v39 = 1;
  v3 += v38 + v39 + 1;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x800) == 0)
  {
LABEL_59:
    if ((v2 & 0x1000) == 0)
      goto LABEL_60;
    goto LABEL_88;
  }
LABEL_82:
  v40 = *(_QWORD *)(a1 + 88);
  if (!v40)
  {
    sub_239169F68();
    v40 = *(_QWORD *)(qword_2542CF728 + 88);
  }
  v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917C564(v40);
  v42 = (int)v41;
  if (v41 >= 0x80)
    v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
  else
    v43 = 1;
  v3 += v42 + v43 + 1;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x1000) == 0)
  {
LABEL_60:
    if ((v2 & 0x2000) == 0)
      goto LABEL_61;
    goto LABEL_94;
  }
LABEL_88:
  v44 = *(_QWORD *)(a1 + 96);
  if (!v44)
  {
    sub_239169F68();
    v44 = *(_QWORD *)(qword_2542CF728 + 96);
  }
  v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917C844(v44);
  v46 = (int)v45;
  if (v45 >= 0x80)
    v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
  else
    v47 = 1;
  v3 += v46 + v47 + 1;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x2000) == 0)
  {
LABEL_61:
    if ((v2 & 0x4000) == 0)
      goto LABEL_62;
    goto LABEL_100;
  }
LABEL_94:
  v48 = *(_QWORD *)(a1 + 104);
  if (!v48)
  {
    sub_239169F68();
    v48 = *(_QWORD *)(qword_2542CF728 + 104);
  }
  v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917CC9C(v48);
  v50 = (int)v49;
  if (v49 >= 0x80)
    v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
  else
    v51 = 1;
  v3 += v50 + v51 + 1;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x4000) == 0)
  {
LABEL_62:
    if ((v2 & 0x8000) == 0)
      goto LABEL_112;
    goto LABEL_106;
  }
LABEL_100:
  v52 = *(_QWORD *)(a1 + 112);
  if (!v52)
  {
    sub_239169F68();
    v52 = *(_QWORD *)(qword_2542CF728 + 112);
  }
  v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917D088(v52);
  v54 = (int)v53;
  if (v53 >= 0x80)
    v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53);
  else
    v55 = 1;
  v3 += v54 + v55 + 1;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x8000) != 0)
  {
LABEL_106:
    v56 = *(_QWORD *)(a1 + 120);
    if (!v56)
    {
      sub_239169F68();
      v56 = *(_QWORD *)(qword_2542CF728 + 120);
    }
    v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239178AB8(v56);
    v58 = (int)v57;
    if (v57 >= 0x80)
      v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57);
    else
      v59 = 1;
    v3 += v58 + v59 + 2;
    v2 = *(_DWORD *)(a1 + 388);
  }
LABEL_112:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_171;
  if ((v2 & 0x10000) != 0)
  {
    v60 = *(_QWORD *)(a1 + 128);
    if (!v60)
    {
      sub_239169F68();
      v60 = *(_QWORD *)(qword_2542CF728 + 128);
    }
    v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239178E10(v60);
    v62 = (int)v61;
    if (v61 >= 0x80)
      v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v61);
    else
      v63 = 1;
    v3 += v62 + v63 + 2;
    v2 = *(_DWORD *)(a1 + 388);
    if ((v2 & 0x20000) == 0)
    {
LABEL_115:
      if ((v2 & 0x40000) == 0)
        goto LABEL_116;
      goto LABEL_134;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_115;
  }
  v64 = *(_QWORD *)(a1 + 136);
  if (!v64)
  {
    sub_239169F68();
    v64 = *(_QWORD *)(qword_2542CF728 + 136);
  }
  v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239179270(v64);
  v66 = (int)v65;
  if (v65 >= 0x80)
    v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v65);
  else
    v67 = 1;
  v3 += v66 + v67 + 2;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x40000) == 0)
  {
LABEL_116:
    if ((v2 & 0x80000) == 0)
      goto LABEL_117;
    goto LABEL_142;
  }
LABEL_134:
  v68 = *(_QWORD *)(a1 + 144);
  if (!v68)
  {
    sub_239169F68();
    v68 = *(_QWORD *)(qword_2542CF728 + 144);
  }
  if ((*(_BYTE *)(v68 + 20) & 1) == 0)
  {
    v69 = 0;
    *(_DWORD *)(v68 + 16) = 0;
LABEL_139:
    v71 = 1;
    goto LABEL_141;
  }
  v70 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v68 + 8));
  v69 = v70 + 1;
  *(_DWORD *)(v68 + 16) = v70 + 1;
  if ((v70 + 1) < 0x80)
    goto LABEL_139;
  v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v70 + 1));
LABEL_141:
  v3 += v69 + v71 + 2;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x80000) == 0)
  {
LABEL_117:
    if ((v2 & 0x100000) == 0)
      goto LABEL_118;
    goto LABEL_145;
  }
LABEL_142:
  v72 = *(_QWORD *)(a1 + 152);
  if (!v72)
  {
    sub_239169F68();
    v72 = *(_QWORD *)(qword_2542CF728 + 152);
  }
  v3 += sub_2391786E0(v72) + 3;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x100000) == 0)
  {
LABEL_118:
    if ((v2 & 0x200000) == 0)
      goto LABEL_119;
    goto LABEL_153;
  }
LABEL_145:
  v73 = *(_QWORD *)(a1 + 160);
  if (!v73)
  {
    sub_239169F68();
    v73 = *(_QWORD *)(qword_2542CF728 + 160);
  }
  if ((*(_BYTE *)(v73 + 20) & 1) == 0)
  {
    v74 = 0;
    *(_DWORD *)(v73 + 16) = 0;
LABEL_150:
    v76 = 1;
    goto LABEL_152;
  }
  v75 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v73 + 8));
  v74 = v75 + 1;
  *(_DWORD *)(v73 + 16) = v75 + 1;
  if ((v75 + 1) < 0x80)
    goto LABEL_150;
  v76 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v75 + 1));
LABEL_152:
  v3 += v74 + v76 + 2;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x200000) == 0)
  {
LABEL_119:
    if ((v2 & 0x400000) == 0)
      goto LABEL_120;
    goto LABEL_159;
  }
LABEL_153:
  v77 = *(unsigned int **)(a1 + 168);
  if (!v77)
  {
    sub_239169F68();
    v77 = *(unsigned int **)(qword_2542CF728 + 168);
  }
  v78 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917D790(v77);
  v79 = (int)v78;
  if (v78 >= 0x80)
    v80 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v78);
  else
    v80 = 1;
  v3 += v79 + v80 + 2;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x400000) == 0)
  {
LABEL_120:
    if ((v2 & 0x800000) == 0)
      goto LABEL_171;
    goto LABEL_165;
  }
LABEL_159:
  v81 = *(_QWORD *)(a1 + 176);
  if (!v81)
  {
    sub_239169F68();
    v81 = *(_QWORD *)(qword_2542CF728 + 176);
  }
  v82 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917DB04(v81);
  v83 = (int)v82;
  if (v82 >= 0x80)
    v84 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v82);
  else
    v84 = 1;
  v3 += v83 + v84 + 2;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x800000) != 0)
  {
LABEL_165:
    v85 = *(_QWORD *)(a1 + 184);
    if (!v85)
    {
      sub_239169F68();
      v85 = *(_QWORD *)(qword_2542CF728 + 184);
    }
    if (*(_DWORD *)(v85 + 16))
      v86 = 2 * (*(_DWORD *)(v85 + 16) & 1);
    else
      v86 = 0;
    *(_DWORD *)(v85 + 12) = v86;
    v3 += v86 + 3;
    v2 = *(_DWORD *)(a1 + 388);
  }
LABEL_171:
  if (!HIBYTE(v2))
    goto LABEL_235;
  if ((v2 & 0x1000000) != 0)
  {
    v87 = *(_QWORD *)(a1 + 192);
    if (!v87)
    {
      sub_239169F68();
      v87 = *(_QWORD *)(qword_2542CF728 + 192);
    }
    v88 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917E3DC(v87);
    v89 = (int)v88;
    if (v88 >= 0x80)
      v90 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v88);
    else
      v90 = 1;
    v3 += v89 + v90 + 2;
    v2 = *(_DWORD *)(a1 + 388);
    if ((v2 & 0x2000000) == 0)
    {
LABEL_174:
      if ((v2 & 0x4000000) == 0)
        goto LABEL_175;
      goto LABEL_193;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_174;
  }
  v91 = *(_QWORD *)(a1 + 200);
  if (!v91)
  {
    sub_239169F68();
    v91 = *(_QWORD *)(qword_2542CF728 + 200);
  }
  v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917E6EC(v91);
  v93 = (int)v92;
  if (v92 >= 0x80)
    v94 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92);
  else
    v94 = 1;
  v3 += v93 + v94 + 2;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_175:
    if ((v2 & 0x8000000) == 0)
      goto LABEL_176;
    goto LABEL_199;
  }
LABEL_193:
  v95 = *(_QWORD *)(a1 + 208);
  if (!v95)
  {
    sub_239169F68();
    v95 = *(_QWORD *)(qword_2542CF728 + 208);
  }
  v96 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239182B1C(v95);
  v97 = (int)v96;
  if (v96 >= 0x80)
    v98 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v96);
  else
    v98 = 1;
  v3 += v97 + v98 + 2;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_176:
    if ((v2 & 0x10000000) == 0)
      goto LABEL_177;
    goto LABEL_209;
  }
LABEL_199:
  v99 = *(_QWORD *)(a1 + 216);
  if (!v99)
  {
    sub_239169F68();
    v99 = *(_QWORD *)(qword_2542CF728 + 216);
  }
  v100 = *(_DWORD *)(v99 + 16);
  v101 = 2 * (v100 & 1);
  if ((v100 & 2) != 0)
    v101 += 2;
  if ((v100 & 4) != 0)
    v101 += 2;
  if (*(_DWORD *)(v99 + 16))
    v102 = v101;
  else
    v102 = 0;
  *(_DWORD *)(v99 + 12) = v102;
  v3 += v102 + 3;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_177:
    if ((v2 & 0x20000000) == 0)
      goto LABEL_178;
    goto LABEL_215;
  }
LABEL_209:
  v103 = *(_QWORD *)(a1 + 224);
  if (!v103)
  {
    sub_239169F68();
    v103 = *(_QWORD *)(qword_2542CF728 + 224);
  }
  v104 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239182F58(v103);
  v105 = (int)v104;
  if (v104 >= 0x80)
    v106 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v104);
  else
    v106 = 1;
  v3 += v105 + v106 + 2;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_178:
    if ((v2 & 0x40000000) == 0)
      goto LABEL_179;
    goto LABEL_221;
  }
LABEL_215:
  v107 = *(_QWORD *)(a1 + 232);
  if (!v107)
  {
    sub_239169F68();
    v107 = *(_QWORD *)(qword_2542CF728 + 232);
  }
  v108 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917D3F8(v107);
  v109 = (int)v108;
  if (v108 >= 0x80)
    v110 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v108);
  else
    v110 = 1;
  v3 += v109 + v110 + 2;
  v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_179:
    if ((v2 & 0x80000000) == 0)
      goto LABEL_235;
    goto LABEL_229;
  }
LABEL_221:
  v111 = *(_QWORD *)(a1 + 240);
  if (!v111)
  {
    sub_239169F68();
    v111 = *(_QWORD *)(qword_2542CF728 + 240);
  }
  v112 = 2 * (*(_DWORD *)(v111 + 16) & 1);
  if ((*(_DWORD *)(v111 + 16) & 2) != 0)
    v112 += 2;
  if (*(_DWORD *)(v111 + 16))
    v113 = v112;
  else
    v113 = 0;
  *(_DWORD *)(v111 + 12) = v113;
  v3 += v113 + 3;
  if ((*(_DWORD *)(a1 + 388) & 0x80000000) != 0)
  {
LABEL_229:
    v114 = *(_QWORD *)(a1 + 248);
    if (!v114)
    {
      sub_239169F68();
      v114 = *(_QWORD *)(qword_2542CF728 + 248);
    }
    v115 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239162578(v114);
    v116 = (int)v115;
    if (v115 >= 0x80)
      v117 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v115);
    else
      v117 = 1;
    v3 += v116 + v117 + 2;
  }
LABEL_235:
  v118 = *(_DWORD *)(a1 + 392);
  if (!(_BYTE)v118)
    goto LABEL_291;
  if ((v118 & 1) != 0)
  {
    v119 = *(unsigned int **)(a1 + 256);
    if (!v119)
    {
      sub_239169F68();
      v119 = *(unsigned int **)(qword_2542CF728 + 256);
    }
    v120 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23913ECD0(v119);
    v121 = (int)v120;
    if (v120 >= 0x80)
      v122 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v120);
    else
      v122 = 1;
    v3 += v121 + v122 + 2;
    v118 = *(_DWORD *)(a1 + 392);
    if ((v118 & 2) == 0)
    {
LABEL_238:
      if ((v118 & 4) == 0)
        goto LABEL_239;
      goto LABEL_255;
    }
  }
  else if ((v118 & 2) == 0)
  {
    goto LABEL_238;
  }
  v123 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 296);
  if (v123 >= 0x80)
  {
    v124 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v123);
    v118 = *(_DWORD *)(a1 + 392);
  }
  else
  {
    v124 = 1;
  }
  v3 += v124 + 2;
  if ((v118 & 4) == 0)
  {
LABEL_239:
    if ((v118 & 8) == 0)
      goto LABEL_240;
    goto LABEL_261;
  }
LABEL_255:
  v125 = *(_QWORD *)(a1 + 264);
  if (!v125)
  {
    sub_239169F68();
    v125 = *(_QWORD *)(qword_2542CF728 + 264);
  }
  v126 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915D0EC(v125);
  v127 = (int)v126;
  if (v126 >= 0x80)
    v128 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v126);
  else
    v128 = 1;
  v3 += v127 + v128 + 2;
  v118 = *(_DWORD *)(a1 + 392);
  if ((v118 & 8) == 0)
  {
LABEL_240:
    if ((v118 & 0x10) == 0)
      goto LABEL_241;
    goto LABEL_267;
  }
LABEL_261:
  v129 = *(unsigned int **)(a1 + 272);
  if (!v129)
  {
    sub_239169F68();
    v129 = *(unsigned int **)(qword_2542CF728 + 272);
  }
  v130 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23915E014(v129);
  v131 = (int)v130;
  if (v130 >= 0x80)
    v132 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v130);
  else
    v132 = 1;
  v3 += v131 + v132 + 2;
  v118 = *(_DWORD *)(a1 + 392);
  if ((v118 & 0x10) == 0)
  {
LABEL_241:
    if ((v118 & 0x20) == 0)
      goto LABEL_242;
    goto LABEL_273;
  }
LABEL_267:
  v133 = *(_QWORD *)(a1 + 280);
  if (!v133)
  {
    sub_239169F68();
    v133 = *(_QWORD *)(qword_2542CF728 + 280);
  }
  v134 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239160F74(v133);
  v135 = (int)v134;
  if (v134 >= 0x80)
    v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v134);
  else
    v136 = 1;
  v3 += v135 + v136 + 2;
  v118 = *(_DWORD *)(a1 + 392);
  if ((v118 & 0x20) == 0)
  {
LABEL_242:
    if ((v118 & 0x40) == 0)
      goto LABEL_243;
    goto LABEL_279;
  }
LABEL_273:
  v137 = *(_QWORD *)(a1 + 288);
  if (!v137)
  {
    sub_239169F68();
    v137 = *(_QWORD *)(qword_2542CF728 + 288);
  }
  v138 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391641E0(v137);
  v139 = (int)v138;
  if (v138 >= 0x80)
    v140 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v138);
  else
    v140 = 1;
  v3 += v139 + v140 + 2;
  v118 = *(_DWORD *)(a1 + 392);
  if ((v118 & 0x40) == 0)
  {
LABEL_243:
    if ((v118 & 0x80) == 0)
      goto LABEL_291;
    goto LABEL_285;
  }
LABEL_279:
  v141 = *(_QWORD *)(a1 + 304);
  if (!v141)
  {
    sub_239169F68();
    v141 = *(_QWORD *)(qword_2542CF728 + 304);
  }
  v142 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239164DB4(v141);
  v143 = (int)v142;
  if (v142 >= 0x80)
    v144 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v142);
  else
    v144 = 1;
  v3 += v143 + v144 + 2;
  v118 = *(_DWORD *)(a1 + 392);
  if ((v118 & 0x80) != 0)
  {
LABEL_285:
    v145 = *(_QWORD *)(a1 + 312);
    if (!v145)
    {
      sub_239169F68();
      v145 = *(_QWORD *)(qword_2542CF728 + 312);
    }
    v146 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239161AD4(v145);
    v147 = (int)v146;
    if (v146 >= 0x80)
      v148 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v146);
    else
      v148 = 1;
    v3 += v147 + v148 + 2;
    v118 = *(_DWORD *)(a1 + 392);
  }
LABEL_291:
  if ((v118 & 0x1FE00) == 0)
    goto LABEL_326;
  if ((v118 & 0x200) != 0)
  {
    v149 = *(_QWORD *)(a1 + 336);
    if (!v149)
    {
      sub_239169F68();
      v149 = *(_QWORD *)(qword_2542CF728 + 336);
    }
    v150 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23913619C(v149);
    v151 = (int)v150;
    if (v150 >= 0x80)
      v152 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v150);
    else
      v152 = 1;
    v3 += v151 + v152 + 2;
    v118 = *(_DWORD *)(a1 + 392);
  }
  if ((v118 & 0x400) != 0)
  {
    v153 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 300);
    if (v153 >= 0x80)
    {
      v154 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v153) + 2;
      v118 = *(_DWORD *)(a1 + 392);
    }
    else
    {
      v154 = 3;
    }
    v3 += v154;
  }
  if ((v118 & 0x1000) != 0)
    v3 += 3;
  if ((v118 & 0x2000) != 0)
  {
    v155 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 364);
    if (v155 >= 0x80)
    {
      v156 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v155) + 2;
      v118 = *(_DWORD *)(a1 + 392);
    }
    else
    {
      v156 = 3;
    }
    v3 += v156;
    if ((v118 & 0x4000) == 0)
    {
LABEL_308:
      if ((v118 & 0x8000) == 0)
        goto LABEL_326;
      goto LABEL_320;
    }
  }
  else if ((v118 & 0x4000) == 0)
  {
    goto LABEL_308;
  }
  v157 = *(_QWORD *)(a1 + 368);
  if (!v157)
  {
    sub_239169F68();
    v157 = *(_QWORD *)(qword_2542CF728 + 368);
  }
  v158 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23913AD7C(v157);
  v159 = (int)v158;
  if (v158 >= 0x80)
    v160 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v158);
  else
    v160 = 1;
  v3 += v159 + v160 + 2;
  if ((*(_DWORD *)(a1 + 392) & 0x8000) != 0)
  {
LABEL_320:
    v161 = *(_QWORD *)(a1 + 376);
    if (!v161)
    {
      sub_239169F68();
      v161 = *(_QWORD *)(qword_2542CF728 + 376);
    }
    v162 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239137650(v161);
    v163 = (int)v162;
    if (v162 >= 0x80)
      v164 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v162);
    else
      v164 = 1;
    v3 += v163 + v164 + 2;
  }
LABEL_326:
  v165 = *(_DWORD *)(a1 + 328);
  if (v165 < 1)
  {
    v167 = 0;
  }
  else
  {
    v166 = 0;
    v167 = 0;
    do
    {
      v168 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 320)
                                                                                              + 4 * v166);
      if (v168 >= 0x80)
      {
        v169 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v168);
        v165 = *(_DWORD *)(a1 + 328);
      }
      else
      {
        v169 = 1;
      }
      v167 += v169;
      ++v166;
    }
    while (v166 < v165);
  }
  v170 = *(_DWORD *)(a1 + 352);
  if (v170 < 1)
  {
    v172 = 0;
  }
  else
  {
    v171 = 0;
    v172 = 0;
    do
    {
      v173 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 344)
                                                                                              + 4 * v171);
      if (v173 >= 0x80)
      {
        v174 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v173);
        v170 = *(_DWORD *)(a1 + 352);
      }
      else
      {
        v174 = 1;
      }
      v172 += v174;
      ++v171;
    }
    while (v171 < v170);
  }
  result = (v167 + v3 + v172 + 2 * (v170 + v165));
  *(_DWORD *)(a1 + 384) = result;
  return result;
}

void sub_239171160(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A734D0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23916A0F8(a1, (uint64_t)lpsrc);
}

void sub_2391711C8(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  char v8;
  uint64_t v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      v5 = *(_QWORD *)(a1 + 8);
      if (!v5)
      {
        v5 = operator new();
        *(_QWORD *)v5 = &off_250A6C7F0;
        *(_OWORD *)(v5 + 8) = 0u;
        *(_OWORD *)(v5 + 24) = 0u;
        *(_OWORD *)(v5 + 40) = 0u;
        *(_OWORD *)(v5 + 56) = 0u;
        *(_OWORD *)(v5 + 72) = 0u;
        *(_OWORD *)(v5 + 84) = 0u;
        *(_QWORD *)(a1 + 8) = v5;
      }
      v6 = *(_QWORD *)(a2 + 8);
      if (!v6)
      {
        sub_239169F68();
        v6 = *(_QWORD *)(qword_2542CF720 + 8);
      }
      sub_23910C484(v5, v6);
      v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 16);
      if (v7 >= 4)
        __assert_rtn("set_position_assist_type", "GpsdProtocol.pb.h", 9279, "::CoreGem::proto::gnss::PositionAssistType_IsValid(value)");
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
      v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 4) != 0)
    {
      v8 = *(_BYTE *)(a2 + 20);
      *(_DWORD *)(a1 + 36) |= 4u;
      *(_BYTE *)(a1 + 20) = v8;
      v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 8) != 0)
    {
      v9 = *(_QWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 8u;
      *(_QWORD *)(a1 + 24) = v9;
    }
  }
}

void sub_239171340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239171358(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_QWORD *)(a1 + 8) = v6;
      v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_QWORD *)(a1 + 16) = v7;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0)
      return;
LABEL_7:
    v5 = *(_QWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_QWORD *)(a1 + 24) = v5;
  }
}

void sub_239171428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239171440(int *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[48];

  if ((int *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (*(int *)(a2 + 16) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v4);
      v6 = a1[5];
      v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          v6 = a1[5];
        }
        a1[5] = v6 + 1;
        v9 = operator new();
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
        *(_QWORD *)v9 = &off_250A6CAC0;
        *(_DWORD *)(v9 + 24) = 0;
        v10 = *((_QWORD *)a1 + 1);
        v11 = a1[4];
        a1[4] = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)a1 + 1);
        a1[4] = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      sub_23910FFE0(v9, v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_23917158C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391715A4(int *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[48];

  if ((int *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (*(int *)(a2 + 16) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v4);
      v6 = a1[5];
      v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          v6 = a1[5];
        }
        a1[5] = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_250A6CB38;
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
        *(_QWORD *)(v9 + 24) = 0;
        *(_DWORD *)(v9 + 32) = 0;
        v10 = *((_QWORD *)a1 + 1);
        v11 = a1[4];
        a1[4] = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)a1 + 1);
        a1[4] = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      sub_239110408(v9, v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_2391716F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239171708(int *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[48];

  if ((int *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (*(int *)(a2 + 16) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v4);
      v6 = a1[5];
      v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          v6 = a1[5];
        }
        a1[5] = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_250A6CB38;
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
        *(_QWORD *)(v9 + 24) = 0;
        *(_DWORD *)(v9 + 32) = 0;
        v10 = *((_QWORD *)a1 + 1);
        v11 = a1[4];
        a1[4] = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)a1 + 1);
        a1[4] = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      sub_239110408(v9, v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_239171854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_23917186C(uint64_t a1, uint64_t a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_QWORD *)(a1 + 8) = v6;
      v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0)
      return result;
LABEL_7:
    result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_23917193C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239171954(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  _BYTE v18[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  v4 = *(_DWORD *)(a2 + 76);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *(_QWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 76) |= 1u;
    *(_QWORD *)(a1 + 8) = v7;
    v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 76) |= 2u;
  *(_QWORD *)(a1 + 16) = v8;
  v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  v9 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(_QWORD *)(a1 + 24) = v9;
  v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  v10 = *(_BYTE *)(a2 + 64);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(_BYTE *)(a1 + 64) = v10;
  v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_26:
    v12 = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 76) |= 0x20u;
    *(_QWORD *)(a1 + 40) = v12;
    v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  v11 = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 76) |= 0x10u;
  *(_QWORD *)(a1 + 32) = v11;
  v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x20) != 0)
    goto LABEL_26;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_27:
  v13 = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 76) |= 0x40u;
  *(_QWORD *)(a1 + 48) = v13;
  v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 76) |= 0x80u;
    *(_QWORD *)(a1 + 56) = v5;
    v4 = *(_DWORD *)(a2 + 76);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v14 = *(_BYTE *)(a2 + 65);
    *(_DWORD *)(a1 + 76) |= 0x100u;
    *(_BYTE *)(a1 + 65) = v14;
    v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_31;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = *(_BYTE *)(a2 + 66);
  *(_DWORD *)(a1 + 76) |= 0x200u;
  *(_BYTE *)(a1 + 66) = v15;
  v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_32;
  }
LABEL_31:
  v16 = *(_BYTE *)(a2 + 67);
  *(_DWORD *)(a1 + 76) |= 0x400u;
  *(_BYTE *)(a1 + 67) = v16;
  v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      return;
    goto LABEL_19;
  }
LABEL_32:
  v17 = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 76) |= 0x800u;
  *(_BYTE *)(a1 + 68) = v17;
  if ((*(_DWORD *)(a2 + 76) & 0x1000) == 0)
    return;
LABEL_19:
  v6 = *(_BYTE *)(a2 + 69);
  *(_DWORD *)(a1 + 76) |= 0x1000u;
  *(_BYTE *)(a1 + 69) = v6;
}

void sub_239171B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239171B88(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v5 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_QWORD *)(a1 + 8) = v5;
      v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if (v6 >= 0xA)
        __assert_rtn("set_context", "GpsdProtocol.pb.h", 9941, "::CoreGem::proto::gnss::MotionActivityContext_IsValid(value)");
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
      v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 4) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      if (v7 >= 5)
        __assert_rtn("set_moving_state", "GpsdProtocol.pb.h", 9964, "::CoreGem::proto::gnss::MovingState_IsValid(value)");
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = v7;
      v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 8) != 0)
    {
      v8 = *(_DWORD *)(a2 + 24);
      if (!sub_23910C444(v8))
        __assert_rtn("set_motion_reliability", "GpsdProtocol.pb.h", 9987, "::CoreGem::proto::gnss::Reliability_IsValid(value)");
      *(_DWORD *)(a1 + 32) |= 8u;
      *(_DWORD *)(a1 + 24) = v8;
    }
  }
}

void sub_239171CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239171CFC(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  _BYTE v7[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v5 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_QWORD *)(a1 + 8) = v5;
      v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      if ((v6 - 1) >= 4)
        __assert_rtn("set_mount_state", "GpsdProtocol.pb.h", 10036, "::CoreGem::proto::gnss::DeviceMountState_IsValid(value)");
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
    }
  }
}

void sub_239171DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239171DE8(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  _BYTE v6[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 7 && v4 != 15)
      __assert_rtn("set_signal_environment_type", "GpsdProtocol.pb.h", 10063, "::CoreGem::proto::gnss::SignalEnvironmentType_IsValid(value)");
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_239171EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_239171EB8(uint64_t a1, uint64_t a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(_QWORD *)(a1 + 8) = v6;
      v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*(_BYTE *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_8;
    }
LABEL_12:
    result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0)
      return result;
LABEL_8:
    result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(double *)(a1 + 32) = result;
  }
  return result;
}

void sub_239171FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_239171FC0(uint64_t a1, uint64_t a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_QWORD *)(a1 + 8) = v6;
      v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0)
      return result;
LABEL_7:
    result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_239172090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391720A8(uint64_t a1, uint64_t a2)
{
  int v4;
  const std::string *v5;
  std::string *v6;
  unsigned int v7;
  _BYTE v8[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v5 = *(const std::string **)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      v6 = *(std::string **)(a1 + 8);
      if (v6 == (std::string *)MEMORY[0x24BEDD958])
      {
        v6 = (std::string *)operator new();
        v6->__r_.__value_.__l.__size_ = 0;
        v6->__r_.__value_.__r.__words[2] = 0;
        v6->__r_.__value_.__r.__words[0] = 0;
        *(_QWORD *)(a1 + 8) = v6;
      }
      std::string::operator=(v6, v5);
      v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      v7 = *(_DWORD *)(a2 + 16);
      if (v7 >= 3)
        __assert_rtn("set_compression_type", "GpsdProtocol.pb.h", 9107, "::CoreGem::proto::gpsd::CompressionType_IsValid(value)");
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_2391721BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391721D4(uint64_t a1, uint64_t a2)
{
  const std::string *v4;
  std::string *v5;
  _BYTE v6[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if ((*(_BYTE *)(a2 + 20) & 1) != 0)
  {
    v4 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    v5 = *(std::string **)(a1 + 8);
    if (v5 == (std::string *)MEMORY[0x24BEDD958])
    {
      v5 = (std::string *)operator new();
      v5->__r_.__value_.__l.__size_ = 0;
      v5->__r_.__value_.__r.__words[2] = 0;
      v5->__r_.__value_.__r.__words[0] = 0;
      *(_QWORD *)(a1 + 8) = v5;
    }
    std::string::operator=(v5, v4);
  }
}

void sub_239172298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391722B0(int *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[48];

  if ((int *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (*(int *)(a2 + 16) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v4);
      v6 = a1[5];
      v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          v6 = a1[5];
        }
        a1[5] = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_250A6CBB0;
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
        *(_QWORD *)(v9 + 24) = 0;
        *(_DWORD *)(v9 + 32) = 0;
        v10 = *((_QWORD *)a1 + 1);
        v11 = a1[4];
        a1[4] = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)a1 + 1);
        a1[4] = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      sub_239110990((_DWORD *)v9, v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_2391723FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239172414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v5[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*(_BYTE *)(a2 + 20) & 1) != 0)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    *(_QWORD *)(a1 + 8) = v4;
  }
}

void sub_23917249C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391724B4(uint64_t a1, _BYTE *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  _BYTE v11[48];

  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = a2[20];
  if ((_BYTE)v4)
  {
    if ((a2[20] & 1) != 0)
    {
      v6 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(_BYTE *)(a1 + 8) = v6;
      v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_14;
      }
    }
    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(_BYTE *)(a1 + 9) = v7;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_15;
    }
LABEL_14:
    v8 = a2[10];
    *(_DWORD *)(a1 + 20) |= 4u;
    *(_BYTE *)(a1 + 10) = v8;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_16;
    }
LABEL_15:
    v9 = a2[11];
    *(_DWORD *)(a1 + 20) |= 8u;
    *(_BYTE *)(a1 + 11) = v9;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        return;
      goto LABEL_10;
    }
LABEL_16:
    v10 = a2[12];
    *(_DWORD *)(a1 + 20) |= 0x10u;
    *(_BYTE *)(a1 + 12) = v10;
    if ((*((_DWORD *)a2 + 5) & 0x20) == 0)
      return;
LABEL_10:
    v5 = a2[13];
    *(_DWORD *)(a1 + 20) |= 0x20u;
    *(_BYTE *)(a1 + 13) = v5;
  }
}

void sub_2391725E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391725FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v5[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*(_BYTE *)(a2 + 20) & 1) != 0)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    *(_QWORD *)(a1 + 8) = v4;
  }
}

void sub_239172684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23917269C(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  int v6;
  _BYTE v7[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v5 = *(_BYTE *)(a2 + 8);
      *(_DWORD *)(a1 + 20) |= 1u;
      *(_BYTE *)(a1 + 8) = v5;
      v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 12);
      *(_DWORD *)(a1 + 20) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
    }
  }
}

void sub_239172744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23917275C(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  _BYTE v7[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_239172804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23917281C(uint64_t a1, uint64_t a2)
{
  char v4;
  _BYTE v5[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    v4 = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_BYTE *)(a1 + 8) = v4;
  }
}

void sub_2391728A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391728BC(uint64_t a1, uint64_t a2)
{
  const std::string *v4;
  std::string *v5;
  _BYTE v6[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if ((*(_BYTE *)(a2 + 20) & 1) != 0)
  {
    v4 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    v5 = *(std::string **)(a1 + 8);
    if (v5 == (std::string *)MEMORY[0x24BEDD958])
    {
      v5 = (std::string *)operator new();
      v5->__r_.__value_.__l.__size_ = 0;
      v5->__r_.__value_.__r.__words[2] = 0;
      v5->__r_.__value_.__r.__words[0] = 0;
      *(_QWORD *)(a1 + 8) = v5;
    }
    std::string::operator=(v5, v4);
  }
}

void sub_239172980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239172998(uint64_t a1, uint64_t a2)
{
  const std::string *v4;
  std::string *v5;
  _BYTE v6[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if ((*(_BYTE *)(a2 + 20) & 1) != 0)
  {
    v4 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    v5 = *(std::string **)(a1 + 8);
    if (v5 == (std::string *)MEMORY[0x24BEDD958])
    {
      v5 = (std::string *)operator new();
      v5->__r_.__value_.__l.__size_ = 0;
      v5->__r_.__value_.__r.__words[2] = 0;
      v5->__r_.__value_.__r.__words[0] = 0;
      *(_QWORD *)(a1 + 8) = v5;
    }
    std::string::operator=(v5, v4);
  }
}

void sub_239172A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239172A74(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 56);
  if (!(_BYTE)v4)
    return;
  if ((*(_BYTE *)(a2 + 56) & 1) != 0)
  {
    v5 = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_BYTE *)(a1 + 8) = v5;
    v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_14;
    }
  }
  else if ((*(_BYTE *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  v6 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(_DWORD *)(a1 + 12) = v6;
  v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_14:
  v7 = *(_DWORD *)(a2 + 48);
  if (v7 >= 5)
    __assert_rtn("set_info_type", "GpsdProtocol.pb.h", 11483, "::CoreGem::proto::gpsd::LtlInfoType_IsValid(value)");
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_DWORD *)(a1 + 48) = v7;
  v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
LABEL_21:
    *(_DWORD *)(a1 + 56) |= 0x10u;
    v10 = *(_QWORD *)(a1 + 24);
    if (!v10)
    {
      v10 = operator new();
      *(_QWORD *)v10 = &off_250A72FB8;
      *(_OWORD *)(v10 + 8) = 0u;
      *(_OWORD *)(v10 + 24) = 0u;
      *(_OWORD *)(v10 + 40) = 0u;
      *(_QWORD *)(a1 + 24) = v10;
    }
    v11 = *(_QWORD *)(a2 + 24);
    if (!v11)
    {
      sub_239169F68();
      v11 = *(_QWORD *)(qword_2542CF508 + 24);
    }
    sub_23917FE4C((_DWORD *)v10, v11);
    v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        return;
      goto LABEL_31;
    }
    goto LABEL_26;
  }
LABEL_16:
  *(_DWORD *)(a1 + 56) |= 8u;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
    v8 = operator new();
    *(_QWORD *)v8 = &off_250A73120;
    *(_QWORD *)(v8 + 8) = 0;
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    *(_BYTE *)(v8 + 32) = 0;
    *(_QWORD *)(v8 + 36) = 0;
    *(_QWORD *)(v8 + 52) = 0;
    *(_QWORD *)(v8 + 44) = 0;
    *(_QWORD *)(a1 + 16) = v8;
  }
  v9 = *(_QWORD *)(a2 + 16);
  if (!v9)
  {
    sub_239169F68();
    v9 = *(_QWORD *)(qword_2542CF508 + 16);
  }
  sub_239181548(v8, v9);
  v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) != 0)
    goto LABEL_21;
LABEL_9:
  if ((v4 & 0x20) == 0)
    goto LABEL_10;
LABEL_26:
  *(_DWORD *)(a1 + 56) |= 0x20u;
  v12 = *(_QWORD *)(a1 + 32);
  if (!v12)
  {
    v12 = operator new();
    *(_QWORD *)v12 = &off_250A73030;
    *(_OWORD *)(v12 + 8) = 0u;
    *(_OWORD *)(v12 + 24) = 0u;
    *(_QWORD *)(a1 + 32) = v12;
  }
  v13 = *(_QWORD *)(a2 + 32);
  if (!v13)
  {
    sub_239169F68();
    v13 = *(_QWORD *)(qword_2542CF508 + 32);
  }
  sub_239180958((_DWORD *)v12, v13);
  if ((*(_DWORD *)(a2 + 56) & 0x40) != 0)
  {
LABEL_31:
    *(_DWORD *)(a1 + 56) |= 0x40u;
    v14 = *(_QWORD *)(a1 + 40);
    if (!v14)
    {
      v14 = operator new();
      *(_QWORD *)(v14 + 8) = 0;
      *(_QWORD *)(v14 + 16) = 0;
      *(_QWORD *)v14 = &off_250A730A8;
      *(_QWORD *)(a1 + 40) = v14;
    }
    v15 = *(_QWORD *)(a2 + 40);
    if (!v15)
    {
      sub_239169F68();
      v15 = *(_QWORD *)(qword_2542CF508 + 40);
    }
    sub_2391810C4((_DWORD *)v14, v15);
  }
}

void sub_239172D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239172D70(uint64_t a1, _BYTE *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  _BYTE v8[48];

  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if ((a2[16] & 1) != 0)
    {
      v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + 8) = v6;
      v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_BYTE *)(a1 + 9) = v7;
    if ((*((_DWORD *)a2 + 4) & 4) == 0)
      return;
LABEL_7:
    v5 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(_BYTE *)(a1 + 10) = v5;
  }
}

void sub_239172E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239172E58(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  _BYTE v5[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 7)
      __assert_rtn("set_status", "GpsdProtocol.pb.h", 11678, "::CoreGem::proto::gpsd::CntinStatus_IsValid(value)");
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_239172F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239172F20(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  _BYTE v7[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v5 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_QWORD *)(a1 + 8) = v5;
      v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
    }
  }
}

void sub_239172FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239172FE0(uint64_t a1, _BYTE *a2)
{
  int v4;
  char v5;
  char v6;
  _BYTE v7[48];

  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if ((a2[16] & 1) != 0)
    {
      v5 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + 8) = v5;
      v4 = *((_DWORD *)a2 + 4);
    }
    if ((v4 & 2) != 0)
    {
      v6 = a2[9];
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_BYTE *)(a1 + 9) = v6;
    }
  }
}

void sub_239173088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2391730A0()
{
  return 1;
}

_QWORD *sub_2391730A8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.Request");
}

void sub_2391730B8(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  _BYTE v8[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      v5 = *(_DWORD *)(a2 + 16);
      if ((sub_239169FE4(v5) & 1) == 0)
        __assert_rtn("set_request_type", "GpsdProtocol.pb.h", 7648, "::CoreGem::proto::gpsd::Request_Type_IsValid(value)");
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(_QWORD *)(a1 + 8) = v6;
      v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 4) != 0)
    {
      v7 = *(_DWORD *)(a2 + 20);
      if (v7 >= 0xA)
        __assert_rtn("set_result_code", "GpsdProtocol.pb.h", 7693, "::CoreGem::proto::gnss::Result_IsValid(value)");
      *(_DWORD *)(a1 + 28) |= 4u;
      *(_DWORD *)(a1 + 20) = v7;
    }
  }
}

void sub_2391731D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391731F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A720B8;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239173228(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_2391731F0(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_23917324C()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_250A720B8;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_239173284(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_239173298(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  unsigned int v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  unsigned int v16;
  uint64_t result;
  unsigned int v18;
  unsigned int v19;

  v4 = (unint64_t *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v19 = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
          if (!(_DWORD)result)
            return result;
          v12 = v19;
        }
        else
        {
          v12 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        if (sub_239169FE4(v12))
        {
          a1[7] |= 1u;
          a1[4] = v12;
        }
        v14 = (_BYTE *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        if ((unint64_t)v14 < v9 && *v14 == 16)
        {
          v13 = v14 + 1;
          *((_QWORD *)this + 1) = v13;
          goto LABEL_29;
        }
      }
      if (v7 != 2)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v13 = (char *)*((_QWORD *)this + 1);
      v9 = *((_QWORD *)this + 2);
LABEL_29:
      if ((unint64_t)v13 >= v9 || *v13 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (!(_DWORD)result)
          return result;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
      }
      else
      {
        *v4 = *v13;
        v15 = v13 + 1;
        *((_QWORD *)this + 1) = v15;
      }
      a1[7] |= 2u;
      if ((unint64_t)v15 < v9 && *v15 == 24)
      {
        v10 = v15 + 1;
        *((_QWORD *)this + 1) = v10;
LABEL_37:
        v18 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
          if (!(_DWORD)result)
            return result;
          v16 = v18;
        }
        else
        {
          v16 = *v10;
          *((_QWORD *)this + 1) = v10 + 1;
        }
        if (v16 <= 9)
        {
          a1[7] |= 4u;
          a1[5] = v16;
        }
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        goto LABEL_37;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_19:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_2391734D4(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 8), a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), a2, a4);
  return result;
}

uint64_t sub_23917354C(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  LOBYTE(v2) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_21;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v4 & 0x80000000) != 0)
  {
    v3 = 11;
    if ((v2 & 2) != 0)
      goto LABEL_13;
  }
  else
  {
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 28);
      if ((v2 & 2) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    v3 = 2;
    if ((v2 & 2) != 0)
    {
LABEL_13:
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      v2 = *(_DWORD *)(a1 + 28);
    }
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v5 & 0x80000000) != 0)
    {
      v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      v6 = 2;
    }
    v3 = (v6 + v3);
  }
LABEL_21:
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_23917360C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A734E8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391730B8(a1, (uint64_t)lpsrc);
}

uint64_t sub_239173674()
{
  return 1;
}

_QWORD *sub_23917367C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.Response");
}

uint64_t sub_23917368C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = &off_250A72130;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_DWORD *)(a1 + 216) = 0;
  sub_23917370C(a1, a2);
  return a1;
}

void sub_2391736F8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void sub_23917370C(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unsigned int v56;
  _BYTE v57[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v57);
  }
  v4 = *(_DWORD *)(a2 + 216);
  if (!(_BYTE)v4)
    goto LABEL_46;
  if ((v4 & 1) != 0)
  {
    v5 = *(_DWORD *)(a2 + 8);
    if (v5 - 9 >= 0x12 && v5 >= 6)
      __assert_rtn("set_type", "GpsdProtocol.pb.h", 7720, "::CoreGem::proto::gpsd::Indication_Type_IsValid(value)");
    *(_DWORD *)(a1 + 216) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    v4 = *(_DWORD *)(a2 + 216);
  }
  if ((v4 & 2) != 0)
  {
    v7 = *(_DWORD *)(a2 + 12);
    if ((sub_239169FE4(v7) & 1) == 0)
      __assert_rtn("set_request_type", "GpsdProtocol.pb.h", 7743, "::CoreGem::proto::gpsd::Request_Type_IsValid(value)");
    *(_DWORD *)(a1 + 216) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    v4 = *(_DWORD *)(a2 + 216);
  }
  if ((v4 & 4) != 0)
  {
    v8 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 216) |= 4u;
    *(_QWORD *)(a1 + 16) = v8;
    v4 = *(_DWORD *)(a2 + 216);
    if ((v4 & 8) == 0)
    {
LABEL_15:
      if ((v4 & 0x10) == 0)
        goto LABEL_16;
      goto LABEL_26;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_15;
  }
  *(_DWORD *)(a1 + 216) |= 8u;
  v9 = *(_QWORD *)(a1 + 24);
  if (!v9)
  {
    v9 = operator new();
    *(_QWORD *)v9 = &off_250A6C958;
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *(_OWORD *)(v9 + 36) = 0u;
    *(_QWORD *)(a1 + 24) = v9;
  }
  v10 = *(_QWORD *)(a2 + 24);
  if (!v10)
  {
    sub_239169F68();
    v10 = *(_QWORD *)(qword_2542CF718 + 24);
  }
  sub_23910E110(v9, v10);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x10) == 0)
  {
LABEL_16:
    if ((v4 & 0x20) == 0)
      goto LABEL_17;
LABEL_31:
    *(_DWORD *)(a1 + 216) |= 0x20u;
    v13 = *(_QWORD *)(a1 + 40);
    if (!v13)
    {
      v13 = operator new();
      *(_QWORD *)v13 = &off_250A6CC28;
      *(_OWORD *)(v13 + 8) = 0u;
      *(_OWORD *)(v13 + 24) = 0u;
      *(_OWORD *)(v13 + 36) = 0u;
      *(_QWORD *)(a1 + 40) = v13;
    }
    v14 = *(_QWORD *)(a2 + 40);
    if (!v14)
    {
      sub_239169F68();
      v14 = *(_QWORD *)(qword_2542CF718 + 40);
    }
    sub_2391110F0(v13, v14);
    v4 = *(_DWORD *)(a2 + 216);
    if ((v4 & 0x40) == 0)
    {
LABEL_18:
      if ((v4 & 0x80) == 0)
        goto LABEL_46;
      goto LABEL_41;
    }
    goto LABEL_36;
  }
LABEL_26:
  *(_DWORD *)(a1 + 216) |= 0x10u;
  v11 = *(_QWORD *)(a1 + 32);
  if (!v11)
  {
    v11 = operator new();
    *(_QWORD *)v11 = &off_250A6E5A8;
    *(_QWORD *)(v11 + 48) = 0;
    *(_QWORD *)(v11 + 56) = 0;
    *(_DWORD *)(v11 + 64) = 0;
    *(_QWORD *)(v11 + 128) = 0;
    *(_OWORD *)(v11 + 8) = 0u;
    *(_OWORD *)(v11 + 24) = 0u;
    *(_DWORD *)(v11 + 40) = 0;
    *(_OWORD *)(v11 + 72) = 0u;
    *(_OWORD *)(v11 + 88) = 0u;
    *(_OWORD *)(v11 + 104) = 0u;
    *(_DWORD *)(v11 + 120) = 0;
    *(_QWORD *)(a1 + 32) = v11;
  }
  v12 = *(_QWORD *)(a2 + 32);
  if (!v12)
  {
    sub_239169F68();
    v12 = *(_QWORD *)(qword_2542CF718 + 32);
  }
  sub_23912DD94(v11, v12);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x20) != 0)
    goto LABEL_31;
LABEL_17:
  if ((v4 & 0x40) == 0)
    goto LABEL_18;
LABEL_36:
  *(_DWORD *)(a1 + 216) |= 0x40u;
  v15 = *(_QWORD *)(a1 + 48);
  if (!v15)
  {
    v15 = operator new();
    *(_DWORD *)(v15 + 28) = 0;
    *(_DWORD *)(v15 + 32) = 0;
    *(_QWORD *)(v15 + 8) = 0;
    *(_QWORD *)(v15 + 16) = 0;
    *(_QWORD *)v15 = &off_250A721A8;
    *(_DWORD *)(v15 + 23) = 0;
    *(_QWORD *)(a1 + 48) = v15;
  }
  v16 = *(_QWORD *)(a2 + 48);
  if (!v16)
  {
    sub_239169F68();
    v16 = *(_QWORD *)(qword_2542CF718 + 48);
  }
  sub_239177564(v15, v16);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x80) != 0)
  {
LABEL_41:
    *(_DWORD *)(a1 + 216) |= 0x80u;
    v17 = *(_QWORD *)(a1 + 56);
    if (!v17)
    {
      v17 = operator new();
      *(_QWORD *)v17 = &off_250A6CA48;
      *(_OWORD *)(v17 + 8) = 0u;
      *(_OWORD *)(v17 + 24) = 0u;
      *(_OWORD *)(v17 + 40) = 0u;
      *(_QWORD *)(a1 + 56) = v17;
    }
    v18 = *(_QWORD *)(a2 + 56);
    if (!v18)
    {
      sub_239169F68();
      v18 = *(_QWORD *)(qword_2542CF718 + 56);
    }
    sub_23910F74C(v17, v18);
    v4 = *(_DWORD *)(a2 + 216);
  }
LABEL_46:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_90;
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 216) |= 0x100u;
    v19 = *(_QWORD *)(a1 + 64);
    if (!v19)
    {
      v19 = operator new();
      *(_QWORD *)(v19 + 8) = 0;
      *(_QWORD *)(v19 + 16) = 0;
      *(_QWORD *)v19 = &off_250A72EC8;
      *(_DWORD *)(v19 + 24) = 0;
      *(_QWORD *)(v19 + 32) = 0;
      *(_QWORD *)(v19 + 40) = 0;
      *(_QWORD *)(a1 + 64) = v19;
    }
    v20 = *(_QWORD *)(a2 + 64);
    if (!v20)
    {
      sub_239169F68();
      v20 = *(_QWORD *)(qword_2542CF718 + 64);
    }
    sub_23917768C(v19, v20);
    v4 = *(_DWORD *)(a2 + 216);
    if ((v4 & 0x200) == 0)
    {
LABEL_49:
      if ((v4 & 0x400) == 0)
        goto LABEL_50;
      goto LABEL_66;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_49;
  }
  *(_DWORD *)(a1 + 216) |= 0x200u;
  v21 = *(_QWORD *)(a1 + 72);
  if (!v21)
  {
    v21 = operator new();
    *(_QWORD *)v21 = &off_250A72F40;
    *(_QWORD *)(v21 + 8) = 0;
    *(_DWORD *)(v21 + 16) = 0;
    *(_QWORD *)(a1 + 72) = v21;
  }
  v22 = *(_QWORD *)(a2 + 72);
  if (!v22)
  {
    sub_239169F68();
    v22 = *(_QWORD *)(qword_2542CF718 + 72);
  }
  sub_239177874(v21, v22);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x400) == 0)
  {
LABEL_50:
    if ((v4 & 0x800) == 0)
      goto LABEL_51;
    goto LABEL_71;
  }
LABEL_66:
  *(_DWORD *)(a1 + 216) |= 0x400u;
  v23 = *(_QWORD *)(a1 + 80);
  if (!v23)
  {
    v23 = operator new();
    *(_QWORD *)(v23 + 32) = 0;
    *(_DWORD *)(v23 + 28) = 0;
    *(_QWORD *)(v23 + 8) = 0;
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)v23 = &off_250A6CD18;
    *(_BYTE *)(v23 + 24) = 0;
    *(_QWORD *)(a1 + 80) = v23;
  }
  v24 = *(_QWORD *)(a2 + 80);
  if (!v24)
  {
    sub_239169F68();
    v24 = *(_QWORD *)(qword_2542CF718 + 80);
  }
  sub_239111BC8(v23, v24);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x800) == 0)
  {
LABEL_51:
    if ((v4 & 0x1000) == 0)
      goto LABEL_52;
    goto LABEL_76;
  }
LABEL_71:
  *(_DWORD *)(a1 + 216) |= 0x800u;
  v25 = *(_QWORD *)(a1 + 88);
  if (!v25)
  {
    v25 = operator new();
    *(_QWORD *)v25 = &off_250A6CCA0;
    *(_QWORD *)(v25 + 8) = 0;
    *(_BYTE *)(v25 + 16) = 0;
    *(_DWORD *)(v25 + 20) = 0;
    *(_DWORD *)(v25 + 24) = 0;
    *(_QWORD *)(a1 + 88) = v25;
  }
  v26 = *(_QWORD *)(a2 + 88);
  if (!v26)
  {
    sub_239169F68();
    v26 = *(_QWORD *)(qword_2542CF718 + 88);
  }
  sub_239111778(v25, v26);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x1000) == 0)
  {
LABEL_52:
    if ((v4 & 0x2000) == 0)
      goto LABEL_53;
    goto LABEL_78;
  }
LABEL_76:
  v27 = *(_DWORD *)(a2 + 96);
  if (v27 >= 0xA)
    __assert_rtn("set_start_status", "GpsdProtocol.pb.h", 8166, "::CoreGem::proto::gnss::Result_IsValid(value)");
  *(_DWORD *)(a1 + 216) |= 0x1000u;
  *(_DWORD *)(a1 + 96) = v27;
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x2000) == 0)
  {
LABEL_53:
    if ((v4 & 0x4000) == 0)
      goto LABEL_54;
    goto LABEL_80;
  }
LABEL_78:
  v28 = *(_DWORD *)(a2 + 100);
  if (v28 >= 0xA)
    __assert_rtn("set_stop_status", "GpsdProtocol.pb.h", 8189, "::CoreGem::proto::gnss::Result_IsValid(value)");
  *(_DWORD *)(a1 + 216) |= 0x2000u;
  *(_DWORD *)(a1 + 100) = v28;
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x4000) == 0)
  {
LABEL_54:
    if ((v4 & 0x8000) == 0)
      goto LABEL_90;
    goto LABEL_85;
  }
LABEL_80:
  *(_DWORD *)(a1 + 216) |= 0x4000u;
  v29 = *(_QWORD *)(a1 + 104);
  if (!v29)
  {
    v29 = operator new();
    *(_QWORD *)v29 = &off_250A73288;
    *(_BYTE *)(v29 + 8) = 0;
    *(_DWORD *)(v29 + 12) = 0;
    *(_DWORD *)(v29 + 16) = 0;
    *(_QWORD *)(a1 + 104) = v29;
  }
  v30 = *(_QWORD *)(a2 + 104);
  if (!v30)
  {
    sub_239169F68();
    v30 = *(_QWORD *)(qword_2542CF718 + 104);
  }
  sub_23917793C(v29, v30);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x8000) != 0)
  {
LABEL_85:
    *(_DWORD *)(a1 + 216) |= 0x8000u;
    v31 = *(_QWORD *)(a1 + 112);
    if (!v31)
    {
      v31 = operator new();
      *(_QWORD *)(v31 + 8) = 0;
      *(_QWORD *)(v31 + 16) = 0;
      *(_QWORD *)v31 = &off_250A73300;
      *(_DWORD *)(v31 + 24) = 0;
      *(_QWORD *)(a1 + 112) = v31;
    }
    v32 = *(_QWORD *)(a2 + 112);
    if (!v32)
    {
      sub_239169F68();
      v32 = *(_QWORD *)(qword_2542CF718 + 112);
    }
    sub_2391779DC((_DWORD *)v31, v32);
    v4 = *(_DWORD *)(a2 + 216);
  }
LABEL_90:
  if ((v4 & 0xFF0000) == 0)
    goto LABEL_140;
  if ((v4 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 216) |= 0x10000u;
    v33 = *(_QWORD **)(a1 + 120);
    if (!v33)
    {
      v33 = (_QWORD *)operator new();
      v34 = MEMORY[0x24BEDD958];
      *v33 = &off_250A73378;
      v33[1] = 0;
      v33[2] = 0;
      v33[3] = v34;
      v33[4] = 0;
      *(_QWORD *)(a1 + 120) = v33;
    }
    v35 = *(_QWORD *)(a2 + 120);
    if (!v35)
    {
      sub_239169F68();
      v35 = *(_QWORD *)(qword_2542CF718 + 120);
    }
    sub_239177AC4((uint64_t)v33, v35);
    v4 = *(_DWORD *)(a2 + 216);
    if ((v4 & 0x20000) == 0)
    {
LABEL_93:
      if ((v4 & 0x40000) == 0)
        goto LABEL_94;
      goto LABEL_110;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_93;
  }
  *(_DWORD *)(a1 + 216) |= 0x20000u;
  v36 = *(_QWORD *)(a1 + 128);
  if (!v36)
  {
    v36 = operator new();
    *(_QWORD *)v36 = &off_250A6EB48;
    *(_OWORD *)(v36 + 8) = 0u;
    *(_OWORD *)(v36 + 24) = 0u;
    *(_OWORD *)(v36 + 40) = 0u;
    *(_OWORD *)(v36 + 56) = 0u;
    *(_OWORD *)(v36 + 72) = 0u;
    *(_OWORD *)(v36 + 88) = 0u;
    *(_WORD *)(v36 + 104) = 0;
    *(_QWORD *)(v36 + 116) = 0;
    *(_QWORD *)(v36 + 108) = 0;
    *(_DWORD *)(v36 + 124) = 0;
    *(_QWORD *)(a1 + 128) = v36;
  }
  v37 = *(_QWORD *)(a2 + 128);
  if (!v37)
  {
    sub_239169F68();
    v37 = *(_QWORD *)(qword_2542CF718 + 128);
  }
  sub_239131C8C(v36, v37);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x40000) == 0)
  {
LABEL_94:
    if ((v4 & 0x80000) == 0)
      goto LABEL_95;
    goto LABEL_115;
  }
LABEL_110:
  *(_DWORD *)(a1 + 216) |= 0x40000u;
  v38 = *(_QWORD *)(a1 + 136);
  if (!v38)
  {
    v38 = operator new();
    *(_QWORD *)v38 = &off_250A702B8;
    *(_OWORD *)(v38 + 8) = 0u;
    *(_OWORD *)(v38 + 24) = 0u;
    *(_OWORD *)(v38 + 40) = 0u;
    *(_OWORD *)(v38 + 52) = 0u;
    *(_QWORD *)(a1 + 136) = v38;
  }
  v39 = *(_QWORD *)(a2 + 136);
  if (!v39)
  {
    sub_239169F68();
    v39 = *(_QWORD *)(qword_2542CF718 + 136);
  }
  sub_23914D5F0(v38, v39);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x80000) == 0)
  {
LABEL_95:
    if ((v4 & 0x100000) == 0)
      goto LABEL_96;
    goto LABEL_120;
  }
LABEL_115:
  *(_DWORD *)(a1 + 216) |= 0x80000u;
  v40 = *(_QWORD *)(a1 + 144);
  if (!v40)
  {
    v40 = operator new();
    *(_QWORD *)v40 = &off_250A70600;
    *(_QWORD *)(v40 + 48) = 0;
    *(_OWORD *)(v40 + 8) = 0u;
    *(_OWORD *)(v40 + 24) = 0u;
    *(_QWORD *)(v40 + 37) = 0;
    *(_QWORD *)(a1 + 144) = v40;
  }
  v41 = *(_QWORD *)(a2 + 144);
  if (!v41)
  {
    sub_239169F68();
    v41 = *(_QWORD *)(qword_2542CF718 + 144);
  }
  sub_239152A00(v40, v41);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x100000) == 0)
  {
LABEL_96:
    if ((v4 & 0x200000) == 0)
      goto LABEL_97;
    goto LABEL_125;
  }
LABEL_120:
  *(_DWORD *)(a1 + 216) |= 0x100000u;
  v42 = *(_QWORD *)(a1 + 152);
  if (!v42)
  {
    v42 = operator new();
    *(_QWORD *)v42 = &off_250A70A38;
    *(_OWORD *)(v42 + 8) = 0u;
    *(_OWORD *)(v42 + 24) = 0u;
    *(_QWORD *)(v42 + 40) = 0;
    *(_QWORD *)(a1 + 152) = v42;
  }
  v43 = *(_QWORD *)(a2 + 152);
  if (!v43)
  {
    sub_239169F68();
    v43 = *(_QWORD *)(qword_2542CF718 + 152);
  }
  sub_239158424(v42, v43);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x200000) == 0)
  {
LABEL_97:
    if ((v4 & 0x400000) == 0)
      goto LABEL_98;
    goto LABEL_130;
  }
LABEL_125:
  *(_DWORD *)(a1 + 216) |= 0x200000u;
  v44 = *(_QWORD *)(a1 + 160);
  if (!v44)
  {
    v44 = operator new();
    *(_QWORD *)v44 = &off_250A712A8;
    *(_QWORD *)(v44 + 8) = 0;
    *(_DWORD *)(v44 + 16) = 0;
    *(_QWORD *)(a1 + 160) = v44;
  }
  v45 = *(_QWORD *)(a2 + 160);
  if (!v45)
  {
    sub_239169F68();
    v45 = *(_QWORD *)(qword_2542CF718 + 160);
  }
  sub_23916445C(v44, v45);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x400000) == 0)
  {
LABEL_98:
    if ((v4 & 0x800000) == 0)
      goto LABEL_140;
    goto LABEL_135;
  }
LABEL_130:
  *(_DWORD *)(a1 + 216) |= 0x400000u;
  v46 = *(_QWORD *)(a1 + 168);
  if (!v46)
  {
    v46 = operator new();
    *(_QWORD *)v46 = &off_250A71668;
    *(_QWORD *)(v46 + 48) = 0;
    *(_OWORD *)(v46 + 8) = 0u;
    *(_OWORD *)(v46 + 24) = 0u;
    *(_QWORD *)(v46 + 37) = 0;
    *(_QWORD *)(a1 + 168) = v46;
  }
  v47 = *(_QWORD *)(a2 + 168);
  if (!v47)
  {
    sub_239169F68();
    v47 = *(_QWORD *)(qword_2542CF718 + 168);
  }
  sub_239167964(v46, v47);
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x800000) != 0)
  {
LABEL_135:
    *(_DWORD *)(a1 + 216) |= 0x800000u;
    v48 = *(_QWORD *)(a1 + 176);
    if (!v48)
    {
      v48 = operator new();
      *(_QWORD *)v48 = &off_250A6F250;
      *(_DWORD *)(v48 + 100) = 0;
      *(_DWORD *)(v48 + 104) = 0;
      *(_OWORD *)(v48 + 8) = 0u;
      *(_OWORD *)(v48 + 24) = 0u;
      *(_OWORD *)(v48 + 40) = 0u;
      *(_OWORD *)(v48 + 56) = 0u;
      *(_OWORD *)(v48 + 72) = 0u;
      *(_OWORD *)(v48 + 83) = 0u;
      *(_QWORD *)(a1 + 176) = v48;
    }
    v49 = *(_QWORD *)(a2 + 176);
    if (!v49)
    {
      sub_239169F68();
      v49 = *(_QWORD *)(qword_2542CF718 + 176);
    }
    sub_23913B008(v48, v49);
    v4 = *(_DWORD *)(a2 + 216);
  }
LABEL_140:
  if (!HIBYTE(v4))
    return;
  if ((v4 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 216) |= 0x1000000u;
    v53 = *(_QWORD *)(a1 + 184);
    if (!v53)
    {
      v53 = operator new();
      *(_QWORD *)v53 = &off_250A6F160;
      *(_OWORD *)(v53 + 8) = 0u;
      *(_OWORD *)(v53 + 24) = 0u;
      *(_OWORD *)(v53 + 36) = 0u;
      *(_QWORD *)(a1 + 184) = v53;
    }
    v54 = *(_QWORD *)(a2 + 184);
    if (!v54)
    {
      sub_239169F68();
      v54 = *(_QWORD *)(qword_2542CF718 + 184);
    }
    sub_239139394(v53, v54);
    v4 = *(_DWORD *)(a2 + 216);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_143:
      if ((v4 & 0x4000000) == 0)
        goto LABEL_144;
      goto LABEL_159;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_143;
  }
  v55 = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 216) |= 0x2000000u;
  *(_DWORD *)(a1 + 192) = v55;
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_144:
    if ((v4 & 0x8000000) == 0)
      goto LABEL_146;
    goto LABEL_145;
  }
LABEL_159:
  v56 = *(_DWORD *)(a2 + 196);
  if (v56 >= 3 && v56 != 4)
    __assert_rtn("set_supl_init_decode_result", "GpsdProtocol.pb.h", 8696, "::CoreGem::proto::gpsd::SuplInitDecodeResult_IsValid(value)");
  *(_DWORD *)(a1 + 216) |= 0x4000000u;
  *(_DWORD *)(a1 + 196) = v56;
  v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x8000000) == 0)
    goto LABEL_146;
LABEL_145:
  v50 = *(_DWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 216) |= 0x8000000u;
  *(_DWORD *)(a1 + 208) = v50;
  v4 = *(_DWORD *)(a2 + 216);
LABEL_146:
  if ((v4 & 0x10000000) != 0)
  {
    *(_DWORD *)(a1 + 216) |= 0x10000000u;
    v51 = *(_QWORD *)(a1 + 200);
    if (!v51)
    {
      v51 = operator new();
      *(_QWORD *)v51 = &off_250A6EE18;
      *(_DWORD *)(v51 + 8) = 0;
      *(_BYTE *)(v51 + 12) = 0;
      *(_QWORD *)(v51 + 16) = 0;
      *(_QWORD *)(a1 + 200) = v51;
    }
    v52 = *(_QWORD *)(a2 + 200);
    if (!v52)
    {
      sub_239169F68();
      v52 = *(_QWORD *)(qword_2542CF718 + 200);
    }
    sub_23913637C(v51, v52);
  }
}

void sub_2391743B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391743CC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72130;
  sub_239174400(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239174400(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_239169F68();
  if ((_QWORD *)qword_2542CF718 != a1)
  {
    v2 = a1[3];
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[4];
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = a1[5];
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = a1[6];
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = a1[7];
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = a1[8];
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = a1[9];
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = a1[10];
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = a1[11];
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = a1[13];
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = a1[14];
    if (v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
    v13 = a1[15];
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = a1[16];
    if (v14)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
    v15 = a1[17];
    if (v15)
      (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
    v16 = a1[18];
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = a1[19];
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = a1[20];
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = a1[21];
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
    v20 = a1[22];
    if (v20)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
    v21 = a1[23];
    if (v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
    v22 = a1[25];
    if (v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  }
}

void sub_2391745E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_2391743CC(a1);
  JUMPOUT(0x23B838844);
}

double sub_239174604()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A72130;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_DWORD *)(v0 + 216) = 0;
  return result;
}

uint64_t sub_239174674(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v1 = result;
  v2 = *(_DWORD *)(result + 216);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    if ((v2 & 8) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
      {
        result = sub_23910E484(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      result = *(_QWORD *)(v1 + 32);
      if (result)
      {
        result = sub_23912E4FC(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      v3 = *(_QWORD *)(v1 + 40);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 48))
        {
          *(_DWORD *)(v3 + 40) = 0;
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 48) = 0;
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      v4 = *(_QWORD *)(v1 + 48);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 32))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_DWORD *)(v4 + 23) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      result = *(_QWORD *)(v1 + 56);
      if (result)
      {
        result = sub_23910F99C(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      result = *(_QWORD *)(v1 + 64);
      if (result)
      {
        result = sub_239174958(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      v5 = *(_QWORD *)(v1 + 72);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 16))
          *(_DWORD *)(v5 + 8) = 0;
        *(_DWORD *)(v5 + 16) = 0;
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      v6 = *(_QWORD *)(v1 + 80);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 36))
        {
          *(_DWORD *)(v6 + 28) = 0;
          *(_QWORD *)(v6 + 8) = 0;
          *(_QWORD *)(v6 + 16) = 0;
          *(_BYTE *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x800) != 0)
    {
      v7 = *(_QWORD *)(v1 + 88);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 24))
        {
          *(_QWORD *)(v7 + 8) = 0;
          *(_BYTE *)(v7 + 16) = 0;
        }
        *(_DWORD *)(v7 + 24) = 0;
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    *(_QWORD *)(v1 + 96) = 0;
    if ((v2 & 0x4000) != 0)
    {
      v8 = *(_QWORD *)(v1 + 104);
      if (v8)
      {
        if (*(_BYTE *)(v8 + 16))
          *(_BYTE *)(v8 + 8) = 0;
        *(_DWORD *)(v8 + 16) = 0;
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x8000) != 0)
    {
      v9 = *(_QWORD *)(v1 + 112);
      if (v9)
      {
        if (*(_BYTE *)(v9 + 24))
        {
          *(_QWORD *)(v9 + 8) = 0;
          *(_DWORD *)(v9 + 16) = 0;
        }
        *(_DWORD *)(v9 + 24) = 0;
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      result = *(_QWORD *)(v1 + 120);
      if (result)
      {
        result = sub_239174A14(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x20000) != 0)
    {
      v10 = *(_QWORD *)(v1 + 128);
      if (v10)
      {
        v11 = *(_DWORD *)(v10 + 124);
        if ((_BYTE)v11)
        {
          *(_QWORD *)(v10 + 56) = 0;
          *(_OWORD *)(v10 + 40) = 0u;
          *(_OWORD *)(v10 + 24) = 0u;
          *(_OWORD *)(v10 + 8) = 0u;
        }
        if ((v11 & 0xFF00) != 0)
        {
          *(_OWORD *)(v10 + 89) = 0u;
          *(_OWORD *)(v10 + 64) = 0u;
          *(_OWORD *)(v10 + 80) = 0u;
        }
        if ((v11 & 0xFF0000) != 0)
        {
          *(_BYTE *)(v10 + 105) = 0;
          *(_QWORD *)(v10 + 112) = 0;
          *(_DWORD *)(v10 + 108) = 0;
        }
        *(_DWORD *)(v10 + 124) = 0;
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x40000) != 0)
    {
      result = *(_QWORD *)(v1 + 136);
      if (result)
      {
        result = sub_23914DA6C(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x80000) != 0)
    {
      result = *(_QWORD *)(v1 + 144);
      if (result)
      {
        result = sub_239152D94(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x100000) != 0)
    {
      result = *(_QWORD *)(v1 + 152);
      if (result)
      {
        result = sub_239158780(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x200000) != 0)
    {
      v12 = *(_QWORD *)(v1 + 160);
      if (v12)
      {
        if (*(_BYTE *)(v12 + 16))
          *(_DWORD *)(v12 + 8) = 0;
        *(_DWORD *)(v12 + 16) = 0;
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x400000) != 0)
    {
      result = *(_QWORD *)(v1 + 168);
      if (result)
      {
        result = sub_239167D28(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x800000) != 0)
    {
      result = *(_QWORD *)(v1 + 176);
      if (result)
      {
        result = sub_23913B4A4(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      result = *(_QWORD *)(v1 + 184);
      if (result)
      {
        result = sub_239139750(result);
        v2 = *(_DWORD *)(v1 + 216);
      }
    }
    *(_QWORD *)(v1 + 192) = 0;
    *(_DWORD *)(v1 + 208) = 0;
    if ((v2 & 0x10000000) != 0)
    {
      v13 = *(_QWORD *)(v1 + 200);
      if (v13)
      {
        if (*(_BYTE *)(v13 + 20))
        {
          *(_DWORD *)(v13 + 8) = 0;
          *(_BYTE *)(v13 + 12) = 0;
        }
        *(_DWORD *)(v13 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 216) = 0;
  return result;
}

uint64_t sub_239174940(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 23) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_239174958(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = result;
  if ((*(_BYTE *)(result + 44) & 2) != 0)
  {
    v2 = *(_QWORD *)(result + 32);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 20))
      {
        *(_DWORD *)(v2 + 11) = 0;
        *(_DWORD *)(v2 + 8) = 0;
      }
      *(_DWORD *)(v2 + 20) = 0;
    }
  }
  if (*(int *)(result + 16) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v3);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_2391749D4(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_2391749E8(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
    *(_BYTE *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_2391749FC(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_239174A14(uint64_t result)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(result + 36);
  if (v1)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    if ((v1 & 4) != 0)
    {
      v2 = *(_QWORD *)(result + 24);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_239174A60(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  char *v10;
  unsigned int v11;
  unint64_t v12;
  unsigned __int8 *v13;
  unint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  char *v22;
  int v23;
  unint64_t v24;
  char *v25;
  char *v26;
  unint64_t v27;
  unsigned __int8 *v28;
  int v29;
  int v30;
  int v31;
  BOOL v32;
  int v33;
  uint64_t result;
  _BYTE *v37;
  unsigned int v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  int v45;
  int v46;
  _BYTE *v47;
  uint64_t v48;
  char *v49;
  int v50;
  int v51;
  int v52;
  int v53;
  _BYTE *v54;
  uint64_t v55;
  char *v56;
  int v57;
  int v58;
  int v59;
  int v60;
  _BYTE *v61;
  uint64_t v62;
  char *v63;
  int v64;
  int v65;
  int v66;
  int v67;
  _BYTE *v68;
  uint64_t v69;
  char *v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned __int8 *v75;
  uint64_t v76;
  char *v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned __int8 *v82;
  uint64_t v83;
  char *v84;
  int v85;
  int v86;
  int v87;
  int v88;
  unsigned __int8 *v89;
  uint64_t v90;
  char *v91;
  int v92;
  int v93;
  int v94;
  int v95;
  unsigned __int8 *v96;
  uint64_t v97;
  char *v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned __int8 *v103;
  unsigned int v104;
  unsigned __int8 *v105;
  uint64_t v106;
  char *v107;
  int v108;
  int v109;
  int v110;
  int v111;
  unsigned __int8 *v112;
  unsigned int v113;
  unsigned __int8 *v114;
  uint64_t v115;
  char *v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned __int8 *v121;
  _QWORD *v122;
  uint64_t v123;
  char *v124;
  int v125;
  int v126;
  int v127;
  int v128;
  unsigned __int8 *v129;
  uint64_t v130;
  char *v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned __int8 *v136;
  uint64_t v137;
  char *v138;
  int v139;
  int v140;
  int v141;
  int v142;
  unsigned __int8 *v143;
  uint64_t v144;
  char *v145;
  int v146;
  int v147;
  int v148;
  int v149;
  unsigned __int8 *v150;
  uint64_t v151;
  char *v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned __int8 *v157;
  uint64_t v158;
  char *v159;
  int v160;
  int v161;
  int v162;
  int v163;
  unsigned __int8 *v164;
  uint64_t v165;
  char *v166;
  int v167;
  int v168;
  int v169;
  int v170;
  unsigned __int8 *v171;
  uint64_t v172;
  char *v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned __int8 *v178;
  uint64_t v179;
  char *v180;
  int v181;
  int v182;
  int v183;
  int v184;
  unsigned __int8 *v185;
  unsigned __int8 *v186;
  unsigned int v187;
  unsigned __int8 *v189;
  unsigned __int8 *v190;
  unsigned int v191;

  v4 = (unint64_t *)(a1 + 16);
  v5 = (unsigned int *)(a1 + 192);
  v6 = (unsigned int *)(a1 + 208);
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v191 = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v10 < *((_QWORD *)this + 2) && (*v10 & 0x80000000) == 0)
        {
          v11 = *v10;
          *((_QWORD *)this + 1) = v10 + 1;
          goto LABEL_89;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191);
        if ((_DWORD)result)
        {
          v11 = v191;
LABEL_89:
          if (v11 - 9 < 0x12 || v11 <= 5)
          {
            if (v11 - 9 >= 0x12 && v11 >= 6)
              __assert_rtn("set_type", "GpsdProtocol.pb.h", 7720, "::CoreGem::proto::gpsd::Indication_Type_IsValid(value)");
            *(_DWORD *)(a1 + 216) |= 1u;
            *(_DWORD *)(a1 + 8) = v11;
          }
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v19 = *((_QWORD *)this + 2);
          if ((unint64_t)v37 < v19 && *v37 == 16)
          {
            v20 = v37 + 1;
            *((_QWORD *)this + 1) = v20;
            goto LABEL_101;
          }
          continue;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v20 = (char *)*((_QWORD *)this + 1);
        v19 = *((_QWORD *)this + 2);
LABEL_101:
        v191 = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191);
          if (!(_DWORD)result)
            return result;
          v38 = v191;
        }
        else
        {
          v38 = *v20;
          *((_QWORD *)this + 1) = v20 + 1;
        }
        if (sub_239169FE4(v38))
        {
          *(_DWORD *)(a1 + 216) |= 2u;
          *(_DWORD *)(a1 + 12) = v38;
        }
        v39 = (_BYTE *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        if ((unint64_t)v39 >= v21 || *v39 != 24)
          continue;
        v22 = v39 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_111:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v40 = (_BYTE *)*((_QWORD *)this + 1);
          v21 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v22;
          v40 = v22 + 1;
          *((_QWORD *)this + 1) = v40;
        }
        v23 = *(_DWORD *)(a1 + 216) | 4;
        *(_DWORD *)(a1 + 216) = v23;
        if ((unint64_t)v40 >= v21 || *v40 != 34)
          continue;
        *((_QWORD *)this + 1) = v40 + 1;
LABEL_119:
        *(_DWORD *)(a1 + 216) = v23 | 8;
        v41 = *(_QWORD *)(a1 + 24);
        if (!v41)
        {
          v41 = operator new();
          *(_QWORD *)v41 = &off_250A6C958;
          *(_OWORD *)(v41 + 8) = 0u;
          *(_OWORD *)(v41 + 24) = 0u;
          *(_OWORD *)(v41 + 36) = 0u;
          *(_QWORD *)(a1 + 24) = v41;
        }
        v191 = 0;
        v42 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v42 >= *((_QWORD *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v42;
          *((_QWORD *)this + 1) = v42 + 1;
        }
        v43 = *((_DWORD *)this + 14);
        v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23910E550(v41, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v45 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v45, 1);
        v46 = v45 - 1;
        if (v46 < 0 == v32)
          *((_DWORD *)this + 14) = v46;
        v47 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v47 >= *((_QWORD *)this + 2) || *v47 != 42)
          continue;
        *((_QWORD *)this + 1) = v47 + 1;
LABEL_133:
        *(_DWORD *)(a1 + 216) |= 0x10u;
        v48 = *(_QWORD *)(a1 + 32);
        if (!v48)
        {
          v48 = operator new();
          *(_QWORD *)v48 = &off_250A6E5A8;
          *(_QWORD *)(v48 + 48) = 0;
          *(_QWORD *)(v48 + 56) = 0;
          *(_DWORD *)(v48 + 64) = 0;
          *(_QWORD *)(v48 + 128) = 0;
          *(_OWORD *)(v48 + 8) = 0u;
          *(_OWORD *)(v48 + 24) = 0u;
          *(_DWORD *)(v48 + 40) = 0;
          *(_OWORD *)(v48 + 72) = 0u;
          *(_OWORD *)(v48 + 88) = 0u;
          *(_OWORD *)(v48 + 104) = 0u;
          *(_DWORD *)(v48 + 120) = 0;
          *(_QWORD *)(a1 + 32) = v48;
        }
        v191 = 0;
        v49 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v49 >= *((_QWORD *)this + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v49;
          *((_QWORD *)this + 1) = v49 + 1;
        }
        v50 = *((_DWORD *)this + 14);
        v51 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v50 + 1;
        if (v50 >= v51)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23912E654(v48, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v52 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v52, 1);
        v53 = v52 - 1;
        if (v53 < 0 == v32)
          *((_DWORD *)this + 14) = v53;
        v54 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v54 >= *((_QWORD *)this + 2) || *v54 != 50)
          continue;
        *((_QWORD *)this + 1) = v54 + 1;
LABEL_147:
        *(_DWORD *)(a1 + 216) |= 0x20u;
        v55 = *(_QWORD *)(a1 + 40);
        if (!v55)
        {
          v55 = operator new();
          *(_QWORD *)v55 = &off_250A6CC28;
          *(_OWORD *)(v55 + 8) = 0u;
          *(_OWORD *)(v55 + 24) = 0u;
          *(_OWORD *)(v55 + 36) = 0u;
          *(_QWORD *)(a1 + 40) = v55;
        }
        v191 = 0;
        v56 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v56 >= *((_QWORD *)this + 2) || *v56 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v56;
          *((_QWORD *)this + 1) = v56 + 1;
        }
        v57 = *((_DWORD *)this + 14);
        v58 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v57 + 1;
        if (v57 >= v58)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239111300(v55, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v59 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v59, 1);
        v60 = v59 - 1;
        if (v60 < 0 == v32)
          *((_DWORD *)this + 14) = v60;
        v61 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v61 >= *((_QWORD *)this + 2) || *v61 != 74)
          continue;
        *((_QWORD *)this + 1) = v61 + 1;
LABEL_161:
        *(_DWORD *)(a1 + 216) |= 0x40u;
        v62 = *(_QWORD *)(a1 + 48);
        if (!v62)
        {
          v62 = operator new();
          *(_DWORD *)(v62 + 28) = 0;
          *(_DWORD *)(v62 + 32) = 0;
          *(_QWORD *)(v62 + 8) = 0;
          *(_QWORD *)(v62 + 16) = 0;
          *(_QWORD *)v62 = &off_250A721A8;
          *(_DWORD *)(v62 + 23) = 0;
          *(_QWORD *)(a1 + 48) = v62;
        }
        v191 = 0;
        v63 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v63 >= *((_QWORD *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v63;
          *((_QWORD *)this + 1) = v63 + 1;
        }
        v64 = *((_DWORD *)this + 14);
        v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 >= v65)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239177C9C(v62, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v66 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v66, 1);
        v67 = v66 - 1;
        if (v67 < 0 == v32)
          *((_DWORD *)this + 14) = v67;
        v68 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v68 >= *((_QWORD *)this + 2) || *v68 != 82)
          continue;
        *((_QWORD *)this + 1) = v68 + 1;
LABEL_175:
        *(_DWORD *)(a1 + 216) |= 0x80u;
        v69 = *(_QWORD *)(a1 + 56);
        if (!v69)
        {
          v69 = operator new();
          *(_QWORD *)v69 = &off_250A6CA48;
          *(_OWORD *)(v69 + 8) = 0u;
          *(_OWORD *)(v69 + 24) = 0u;
          *(_OWORD *)(v69 + 40) = 0u;
          *(_QWORD *)(a1 + 56) = v69;
        }
        v191 = 0;
        v70 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v70 >= *((_QWORD *)this + 2) || *v70 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v70;
          *((_QWORD *)this + 1) = v70 + 1;
        }
        v71 = *((_DWORD *)this + 14);
        v72 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v71 + 1;
        if (v71 >= v72)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23910F9DC(v69, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v73 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v73, 1);
        v74 = v73 - 1;
        if (v74 < 0 == v32)
          *((_DWORD *)this + 14) = v74;
        v75 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v75 <= 1 || *v75 != 130 || v75[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v75 + 2;
LABEL_190:
        *(_DWORD *)(a1 + 216) |= 0x100u;
        v76 = *(_QWORD *)(a1 + 64);
        if (!v76)
        {
          v76 = operator new();
          *(_QWORD *)(v76 + 8) = 0;
          *(_QWORD *)(v76 + 16) = 0;
          *(_QWORD *)v76 = &off_250A72EC8;
          *(_DWORD *)(v76 + 24) = 0;
          *(_QWORD *)(v76 + 32) = 0;
          *(_QWORD *)(v76 + 40) = 0;
          *(_QWORD *)(a1 + 64) = v76;
        }
        v191 = 0;
        v77 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v77 >= *((_QWORD *)this + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v77;
          *((_QWORD *)this + 1) = v77 + 1;
        }
        v78 = *((_DWORD *)this + 14);
        v79 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v78 + 1;
        if (v78 >= v79)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917F674(v76, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v80 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v80, 1);
        v81 = v80 - 1;
        if (v81 < 0 == v32)
          *((_DWORD *)this + 14) = v81;
        v82 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v82 <= 1 || *v82 != 138 || v82[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v82 + 2;
LABEL_205:
        *(_DWORD *)(a1 + 216) |= 0x200u;
        v83 = *(_QWORD *)(a1 + 72);
        if (!v83)
        {
          v83 = operator new();
          *(_QWORD *)v83 = &off_250A72F40;
          *(_QWORD *)(v83 + 8) = 0;
          *(_DWORD *)(v83 + 16) = 0;
          *(_QWORD *)(a1 + 72) = v83;
        }
        v191 = 0;
        v84 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v84 >= *((_QWORD *)this + 2) || *v84 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v84;
          *((_QWORD *)this + 1) = v84 + 1;
        }
        v85 = *((_DWORD *)this + 14);
        v86 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v85 + 1;
        if (v85 >= v86)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23917FC3C(v83, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v87 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v87, 1);
        v88 = v87 - 1;
        if (v88 < 0 == v32)
          *((_DWORD *)this + 14) = v88;
        v89 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v89 <= 1 || *v89 != 146 || v89[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v89 + 2;
LABEL_220:
        *(_DWORD *)(a1 + 216) |= 0x400u;
        v90 = *(_QWORD *)(a1 + 80);
        if (!v90)
        {
          v90 = operator new();
          *(_QWORD *)(v90 + 32) = 0;
          *(_DWORD *)(v90 + 28) = 0;
          *(_QWORD *)(v90 + 8) = 0;
          *(_QWORD *)(v90 + 16) = 0;
          *(_QWORD *)v90 = &off_250A6CD18;
          *(_BYTE *)(v90 + 24) = 0;
          *(_QWORD *)(a1 + 80) = v90;
        }
        v191 = 0;
        v91 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v91 >= *((_QWORD *)this + 2) || *v91 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v91;
          *((_QWORD *)this + 1) = v91 + 1;
        }
        v92 = *((_DWORD *)this + 14);
        v93 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v92 + 1;
        if (v92 >= v93)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239111DB4(v90, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v94 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v94, 1);
        v95 = v94 - 1;
        if (v95 < 0 == v32)
          *((_DWORD *)this + 14) = v95;
        v96 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v96 <= 1 || *v96 != 154 || v96[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v96 + 2;
LABEL_235:
        *(_DWORD *)(a1 + 216) |= 0x800u;
        v97 = *(_QWORD *)(a1 + 88);
        if (!v97)
        {
          v97 = operator new();
          *(_QWORD *)v97 = &off_250A6CCA0;
          *(_QWORD *)(v97 + 8) = 0;
          *(_BYTE *)(v97 + 16) = 0;
          *(_DWORD *)(v97 + 20) = 0;
          *(_DWORD *)(v97 + 24) = 0;
          *(_QWORD *)(a1 + 88) = v97;
        }
        v191 = 0;
        v98 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v98 >= *((_QWORD *)this + 2) || *v98 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v98;
          *((_QWORD *)this + 1) = v98 + 1;
        }
        v99 = *((_DWORD *)this + 14);
        v100 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v99 + 1;
        if (v99 >= v100)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391118E8(v97, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v101 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v101, 1);
        v102 = v101 - 1;
        if (v102 < 0 == v32)
          *((_DWORD *)this + 14) = v102;
        v103 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((int)v14 - (int)v103 <= 1 || *v103 != 160 || v103[1] != 1)
          continue;
        v15 = (char *)(v103 + 2);
        *((_QWORD *)this + 1) = v15;
LABEL_250:
        v191 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191);
          if (!(_DWORD)result)
            return result;
          v104 = v191;
        }
        else
        {
          v104 = *v15;
          *((_QWORD *)this + 1) = v15 + 1;
        }
        if (v104 <= 9)
        {
          *(_DWORD *)(a1 + 216) |= 0x2000u;
          *(_DWORD *)(a1 + 100) = v104;
        }
        v105 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v105 < 2 || *v105 != 170 || v105[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v105 + 2;
LABEL_261:
        *(_DWORD *)(a1 + 216) |= 0x4000u;
        v106 = *(_QWORD *)(a1 + 104);
        if (!v106)
        {
          v106 = operator new();
          *(_QWORD *)v106 = &off_250A73288;
          *(_BYTE *)(v106 + 8) = 0;
          *(_DWORD *)(v106 + 12) = 0;
          *(_DWORD *)(v106 + 16) = 0;
          *(_QWORD *)(a1 + 104) = v106;
        }
        v191 = 0;
        v107 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v107 >= *((_QWORD *)this + 2) || *v107 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v107;
          *((_QWORD *)this + 1) = v107 + 1;
        }
        v108 = *((_DWORD *)this + 14);
        v109 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v108 + 1;
        if (v108 >= v109)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391830C8(v106, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v110 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v110, 1);
        v111 = v110 - 1;
        if (v111 < 0 == v32)
          *((_DWORD *)this + 14) = v111;
        v112 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        if ((int)v24 - (int)v112 <= 1 || *v112 != 176 || v112[1] != 1)
          continue;
        v25 = (char *)(v112 + 2);
        *((_QWORD *)this + 1) = v25;
LABEL_276:
        v191 = 0;
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191);
          if (!(_DWORD)result)
            return result;
          v113 = v191;
        }
        else
        {
          v113 = *v25;
          *((_QWORD *)this + 1) = v25 + 1;
        }
        if (v113 <= 9)
        {
          *(_DWORD *)(a1 + 216) |= 0x1000u;
          *(_DWORD *)(a1 + 96) = v113;
        }
        v114 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v114 < 2 || *v114 != 186 || v114[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v114 + 2;
LABEL_287:
        *(_DWORD *)(a1 + 216) |= 0x8000u;
        v115 = *(_QWORD *)(a1 + 112);
        if (!v115)
        {
          v115 = operator new();
          *(_QWORD *)(v115 + 8) = 0;
          *(_QWORD *)(v115 + 16) = 0;
          *(_QWORD *)v115 = &off_250A73300;
          *(_DWORD *)(v115 + 24) = 0;
          *(_QWORD *)(a1 + 112) = v115;
        }
        v191 = 0;
        v116 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v116 >= *((_QWORD *)this + 2) || *v116 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v116;
          *((_QWORD *)this + 1) = v116 + 1;
        }
        v117 = *((_DWORD *)this + 14);
        v118 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v117 + 1;
        if (v117 >= v118)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239183334((_DWORD *)v115, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v119 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v119, 1);
        v120 = v119 - 1;
        if (v120 < 0 == v32)
          *((_DWORD *)this + 14) = v120;
        v121 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v121 <= 1 || *v121 != 202 || v121[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v121 + 2;
LABEL_302:
        *(_DWORD *)(a1 + 216) |= 0x10000u;
        v122 = *(_QWORD **)(a1 + 120);
        if (!v122)
        {
          v122 = (_QWORD *)operator new();
          v123 = MEMORY[0x24BEDD958];
          *v122 = &off_250A73378;
          v122[1] = 0;
          v122[2] = 0;
          v122[3] = v123;
          v122[4] = 0;
          *(_QWORD *)(a1 + 120) = v122;
        }
        v191 = 0;
        v124 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v124 >= *((_QWORD *)this + 2) || *v124 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v124;
          *((_QWORD *)this + 1) = v124 + 1;
        }
        v125 = *((_DWORD *)this + 14);
        v126 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v125 + 1;
        if (v125 >= v126)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23918380C((uint64_t)v122, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v127 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v127, 1);
        v128 = v127 - 1;
        if (v128 < 0 == v32)
          *((_DWORD *)this + 14) = v128;
        v129 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v129 <= 1 || *v129 != 242 || v129[1] != 1)
          continue;
        *((_QWORD *)this + 1) = v129 + 2;
LABEL_317:
        *(_DWORD *)(a1 + 216) |= 0x20000u;
        v130 = *(_QWORD *)(a1 + 128);
        if (!v130)
        {
          v130 = operator new();
          *(_QWORD *)v130 = &off_250A6EB48;
          *(_OWORD *)(v130 + 8) = 0u;
          *(_OWORD *)(v130 + 24) = 0u;
          *(_OWORD *)(v130 + 40) = 0u;
          *(_OWORD *)(v130 + 56) = 0u;
          *(_OWORD *)(v130 + 72) = 0u;
          *(_OWORD *)(v130 + 88) = 0u;
          *(_WORD *)(v130 + 104) = 0;
          *(_QWORD *)(v130 + 116) = 0;
          *(_QWORD *)(v130 + 108) = 0;
          *(_DWORD *)(v130 + 124) = 0;
          *(_QWORD *)(a1 + 128) = v130;
        }
        v191 = 0;
        v131 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v131 >= *((_QWORD *)this + 2) || *v131 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v131;
          *((_QWORD *)this + 1) = v131 + 1;
        }
        v132 = *((_DWORD *)this + 14);
        v133 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v132 + 1;
        if (v132 >= v133)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239132154(v130, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v134 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v134, 1);
        v135 = v134 - 1;
        if (v135 < 0 == v32)
          *((_DWORD *)this + 14) = v135;
        v136 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v136 <= 1 || *v136 != 194 || v136[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v136 + 2;
LABEL_332:
        *(_DWORD *)(a1 + 216) |= 0x40000u;
        v137 = *(_QWORD *)(a1 + 136);
        if (!v137)
        {
          v137 = operator new();
          *(_QWORD *)v137 = &off_250A702B8;
          *(_OWORD *)(v137 + 8) = 0u;
          *(_OWORD *)(v137 + 24) = 0u;
          *(_OWORD *)(v137 + 40) = 0u;
          *(_OWORD *)(v137 + 52) = 0u;
          *(_QWORD *)(a1 + 136) = v137;
        }
        v191 = 0;
        v138 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v138 >= *((_QWORD *)this + 2) || *v138 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v138;
          *((_QWORD *)this + 1) = v138 + 1;
        }
        v139 = *((_DWORD *)this + 14);
        v140 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v139 + 1;
        if (v139 >= v140)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23914DB1C(v137, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v141 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v141, 1);
        v142 = v141 - 1;
        if (v142 < 0 == v32)
          *((_DWORD *)this + 14) = v142;
        v143 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v143 <= 1 || *v143 != 202 || v143[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v143 + 2;
LABEL_347:
        *(_DWORD *)(a1 + 216) |= 0x80000u;
        v144 = *(_QWORD *)(a1 + 144);
        if (!v144)
        {
          v144 = operator new();
          *(_QWORD *)v144 = &off_250A70600;
          *(_QWORD *)(v144 + 48) = 0;
          *(_OWORD *)(v144 + 8) = 0u;
          *(_OWORD *)(v144 + 24) = 0u;
          *(_QWORD *)(v144 + 37) = 0;
          *(_QWORD *)(a1 + 144) = v144;
        }
        v191 = 0;
        v145 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v145 >= *((_QWORD *)this + 2) || *v145 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v145;
          *((_QWORD *)this + 1) = v145 + 1;
        }
        v146 = *((_DWORD *)this + 14);
        v147 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v146 + 1;
        if (v146 >= v147)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239152E10(v144, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v148 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v148, 1);
        v149 = v148 - 1;
        if (v149 < 0 == v32)
          *((_DWORD *)this + 14) = v149;
        v150 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v150 <= 1 || *v150 != 210 || v150[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v150 + 2;
LABEL_362:
        *(_DWORD *)(a1 + 216) |= 0x100000u;
        v151 = *(_QWORD *)(a1 + 152);
        if (!v151)
        {
          v151 = operator new();
          *(_QWORD *)v151 = &off_250A70A38;
          *(_OWORD *)(v151 + 8) = 0u;
          *(_OWORD *)(v151 + 24) = 0u;
          *(_QWORD *)(v151 + 40) = 0;
          *(_QWORD *)(a1 + 152) = v151;
        }
        v191 = 0;
        v152 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v152 >= *((_QWORD *)this + 2) || *v152 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v152;
          *((_QWORD *)this + 1) = v152 + 1;
        }
        v153 = *((_DWORD *)this + 14);
        v154 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v153 + 1;
        if (v153 >= v154)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23915880C(v151, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v155 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v155, 1);
        v156 = v155 - 1;
        if (v156 < 0 == v32)
          *((_DWORD *)this + 14) = v156;
        v157 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v157 <= 1 || *v157 != 218 || v157[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v157 + 2;
LABEL_377:
        *(_DWORD *)(a1 + 216) |= 0x200000u;
        v158 = *(_QWORD *)(a1 + 160);
        if (!v158)
        {
          v158 = operator new();
          *(_QWORD *)v158 = &off_250A712A8;
          *(_QWORD *)(v158 + 8) = 0;
          *(_DWORD *)(v158 + 16) = 0;
          *(_QWORD *)(a1 + 160) = v158;
        }
        v191 = 0;
        v159 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v159 >= *((_QWORD *)this + 2) || *v159 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v159;
          *((_QWORD *)this + 1) = v159 + 1;
        }
        v160 = *((_DWORD *)this + 14);
        v161 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v160 + 1;
        if (v160 >= v161)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391645CC(v158, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v162 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v162, 1);
        v163 = v162 - 1;
        if (v163 < 0 == v32)
          *((_DWORD *)this + 14) = v163;
        v164 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v164 <= 1 || *v164 != 226 || v164[1] != 2)
          continue;
        *((_QWORD *)this + 1) = v164 + 2;
LABEL_392:
        *(_DWORD *)(a1 + 216) |= 0x400000u;
        v165 = *(_QWORD *)(a1 + 168);
        if (!v165)
        {
          v165 = operator new();
          *(_QWORD *)v165 = &off_250A71668;
          *(_QWORD *)(v165 + 48) = 0;
          *(_OWORD *)(v165 + 8) = 0u;
          *(_OWORD *)(v165 + 24) = 0u;
          *(_QWORD *)(v165 + 37) = 0;
          *(_QWORD *)(a1 + 168) = v165;
        }
        v191 = 0;
        v166 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v166 >= *((_QWORD *)this + 2) || *v166 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v166;
          *((_QWORD *)this + 1) = v166 + 1;
        }
        v167 = *((_DWORD *)this + 14);
        v168 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v167 + 1;
        if (v167 >= v168)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239167DA4(v165, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v169 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v169, 1);
        v170 = v169 - 1;
        if (v170 < 0 == v32)
          *((_DWORD *)this + 14) = v170;
        v171 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v171 <= 1 || *v171 != 146 || v171[1] != 3)
          continue;
        *((_QWORD *)this + 1) = v171 + 2;
LABEL_407:
        *(_DWORD *)(a1 + 216) |= 0x800000u;
        v172 = *(_QWORD *)(a1 + 176);
        if (!v172)
        {
          v172 = operator new();
          *(_QWORD *)v172 = &off_250A6F250;
          *(_DWORD *)(v172 + 100) = 0;
          *(_DWORD *)(v172 + 104) = 0;
          *(_OWORD *)(v172 + 8) = 0u;
          *(_OWORD *)(v172 + 24) = 0u;
          *(_OWORD *)(v172 + 40) = 0u;
          *(_OWORD *)(v172 + 56) = 0u;
          *(_OWORD *)(v172 + 72) = 0u;
          *(_OWORD *)(v172 + 83) = 0u;
          *(_QWORD *)(a1 + 176) = v172;
        }
        v191 = 0;
        v173 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v173 >= *((_QWORD *)this + 2) || *v173 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v173;
          *((_QWORD *)this + 1) = v173 + 1;
        }
        v174 = *((_DWORD *)this + 14);
        v175 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v174 + 1;
        if (v174 >= v175)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23913B55C(v172, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v176 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v176, 1);
        v177 = v176 - 1;
        if (v177 < 0 == v32)
          *((_DWORD *)this + 14) = v177;
        v178 = (unsigned __int8 *)*((_QWORD *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v178 <= 1 || *v178 != 154 || v178[1] != 3)
          continue;
        *((_QWORD *)this + 1) = v178 + 2;
LABEL_422:
        *(_DWORD *)(a1 + 216) |= 0x1000000u;
        v179 = *(_QWORD *)(a1 + 184);
        if (!v179)
        {
          v179 = operator new();
          *(_QWORD *)v179 = &off_250A6F160;
          *(_OWORD *)(v179 + 8) = 0u;
          *(_OWORD *)(v179 + 24) = 0u;
          *(_OWORD *)(v179 + 36) = 0u;
          *(_QWORD *)(a1 + 184) = v179;
        }
        v191 = 0;
        v180 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v180 >= *((_QWORD *)this + 2) || *v180 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v180;
          *((_QWORD *)this + 1) = v180 + 1;
        }
        v181 = *((_DWORD *)this + 14);
        v182 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v181 + 1;
        if (v181 >= v182)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391397E8(v179, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v183 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v183, 1);
        v184 = v183 - 1;
        if (v184 < 0 == v32)
          *((_DWORD *)this + 14) = v184;
        v185 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((int)v12 - (int)v185 <= 1 || *v185 != 160 || v185[1] != 3)
          continue;
        v13 = v185 + 2;
        *((_QWORD *)this + 1) = v13;
LABEL_437:
        if ((unint64_t)v13 >= v12 || (char)*v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v186 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v13;
          v186 = v13 + 1;
          *((_QWORD *)this + 1) = v186;
        }
        *(_DWORD *)(a1 + 216) |= 0x2000000u;
        if ((int)v12 - (int)v186 < 2 || *v186 != 168 || v186[1] != 3)
          continue;
        v26 = (char *)(v186 + 2);
        *((_QWORD *)this + 1) = v26;
LABEL_446:
        v191 = 0;
        if ((unint64_t)v26 >= v12 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191);
          if (!(_DWORD)result)
            return result;
          v187 = v191;
        }
        else
        {
          v187 = *v26;
          *((_QWORD *)this + 1) = v26 + 1;
        }
        if (v187 <= 4 && v187 != 3)
        {
          *(_DWORD *)(a1 + 216) |= 0x4000000u;
          *(_DWORD *)(a1 + 196) = v187;
        }
        v189 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        if ((int)v27 - (int)v189 < 2 || *v189 != 176 || v189[1] != 3)
          continue;
        v28 = v189 + 2;
        *((_QWORD *)this + 1) = v28;
LABEL_460:
        if ((unint64_t)v28 >= v27 || (char)*v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v190 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v27 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v28;
          v190 = v28 + 1;
          *((_QWORD *)this + 1) = v190;
        }
        v16 = *(_DWORD *)(a1 + 216) | 0x8000000;
        *(_DWORD *)(a1 + 216) = v16;
        if ((int)v27 - (int)v190 < 2 || *v190 != 186 || v190[1] != 3)
          continue;
        *((_QWORD *)this + 1) = v190 + 2;
LABEL_30:
        *(_DWORD *)(a1 + 216) = v16 | 0x10000000;
        v17 = *(_QWORD *)(a1 + 200);
        if (!v17)
        {
          v17 = operator new();
          *(_QWORD *)v17 = &off_250A6EE18;
          *(_DWORD *)(v17 + 8) = 0;
          *(_BYTE *)(v17 + 12) = 0;
          *(_QWORD *)(v17 + 16) = 0;
          *(_QWORD *)(a1 + 200) = v17;
        }
        v191 = 0;
        v18 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v18 >= *((_QWORD *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v191))return 0;
        }
        else
        {
          v191 = *v18;
          *((_QWORD *)this + 1) = v18 + 1;
        }
        v29 = *((_DWORD *)this + 14);
        v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391364F0(v17, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v31 = *((_DWORD *)this + 14);
        v32 = __OFSUB__(v31, 1);
        v33 = v31 - 1;
        if (v33 < 0 == v32)
          *((_DWORD *)this + 14) = v33;
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v22 = (char *)*((_QWORD *)this + 1);
        v21 = *((_QWORD *)this + 2);
        goto LABEL_111;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_73;
        v23 = *(_DWORD *)(a1 + 216);
        goto LABEL_119;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_133;
        goto LABEL_73;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_147;
        goto LABEL_73;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_161;
        goto LABEL_73;
      case 0xAu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_175;
        goto LABEL_73;
      case 0x10u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_190;
        goto LABEL_73;
      case 0x11u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_205;
        goto LABEL_73;
      case 0x12u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_220;
        goto LABEL_73;
      case 0x13u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_235;
        goto LABEL_73;
      case 0x14u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_250;
      case 0x15u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_261;
        goto LABEL_73;
      case 0x16u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v25 = (char *)*((_QWORD *)this + 1);
        v24 = *((_QWORD *)this + 2);
        goto LABEL_276;
      case 0x17u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_287;
        goto LABEL_73;
      case 0x19u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_302;
        goto LABEL_73;
      case 0x1Eu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_317;
        goto LABEL_73;
      case 0x28u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_332;
        goto LABEL_73;
      case 0x29u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_347;
        goto LABEL_73;
      case 0x2Au:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_362;
        goto LABEL_73;
      case 0x2Bu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_377;
        goto LABEL_73;
      case 0x2Cu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_392;
        goto LABEL_73;
      case 0x32u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_407;
        goto LABEL_73;
      case 0x33u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_422;
        goto LABEL_73;
      case 0x34u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v13 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_437;
      case 0x35u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v26 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_446;
      case 0x36u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_73;
        v28 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v27 = *((_QWORD *)this + 2);
        goto LABEL_460;
      case 0x37u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_73;
        v16 = *(_DWORD *)(a1 + 216);
        goto LABEL_30;
      default:
        v9 = TagFallback & 7;
LABEL_73:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    return result;
  }
}

uint64_t sub_2391767A8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = result;
  v6 = *(_DWORD *)(result + 216);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 216);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_33;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_34;
  }
LABEL_33:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_37;
  }
LABEL_34:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
  {
    sub_239169F68();
    v7 = *(_QWORD *)(qword_2542CF718 + 24);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_40;
  }
LABEL_37:
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
  {
    sub_239169F68();
    v8 = *(_QWORD *)(qword_2542CF718 + 32);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_43;
  }
LABEL_40:
  v9 = *(_QWORD *)(v5 + 40);
  if (!v9)
  {
    sub_239169F68();
    v9 = *(_QWORD *)(qword_2542CF718 + 40);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_46;
  }
LABEL_43:
  v10 = *(_QWORD *)(v5 + 48);
  if (!v10)
  {
    sub_239169F68();
    v10 = *(_QWORD *)(qword_2542CF718 + 48);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_49;
  }
LABEL_46:
  v11 = *(_QWORD *)(v5 + 56);
  if (!v11)
  {
    sub_239169F68();
    v11 = *(_QWORD *)(qword_2542CF718 + 56);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_52;
  }
LABEL_49:
  v12 = *(_QWORD *)(v5 + 64);
  if (!v12)
  {
    sub_239169F68();
    v12 = *(_QWORD *)(qword_2542CF718 + 64);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_55;
  }
LABEL_52:
  v13 = *(_QWORD *)(v5 + 72);
  if (!v13)
  {
    sub_239169F68();
    v13 = *(_QWORD *)(qword_2542CF718 + 72);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_58;
  }
LABEL_55:
  v14 = *(_QWORD *)(v5 + 80);
  if (!v14)
  {
    sub_239169F68();
    v14 = *(_QWORD *)(qword_2542CF718 + 80);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v14, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x2000) == 0)
      goto LABEL_14;
    goto LABEL_61;
  }
LABEL_58:
  v15 = *(_QWORD *)(v5 + 88);
  if (!v15)
  {
    sub_239169F68();
    v15 = *(_QWORD *)(qword_2542CF718 + 88);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v15, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x2000) == 0)
  {
LABEL_14:
    if ((v6 & 0x4000) == 0)
      goto LABEL_15;
    goto LABEL_62;
  }
LABEL_61:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 100), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x4000) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0)
      goto LABEL_16;
    goto LABEL_65;
  }
LABEL_62:
  v16 = *(_QWORD *)(v5 + 104);
  if (!v16)
  {
    sub_239169F68();
    v16 = *(_QWORD *)(qword_2542CF718 + 104);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v16, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_66;
  }
LABEL_65:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_69;
  }
LABEL_66:
  v17 = *(_QWORD *)(v5 + 112);
  if (!v17)
  {
    sub_239169F68();
    v17 = *(_QWORD *)(qword_2542CF718 + 112);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v17, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_72;
  }
LABEL_69:
  v18 = *(_QWORD *)(v5 + 120);
  if (!v18)
  {
    sub_239169F68();
    v18 = *(_QWORD *)(qword_2542CF718 + 120);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v18, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_75;
  }
LABEL_72:
  v19 = *(_QWORD *)(v5 + 128);
  if (!v19)
  {
    sub_239169F68();
    v19 = *(_QWORD *)(qword_2542CF718 + 128);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v19, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_78;
  }
LABEL_75:
  v20 = *(_QWORD *)(v5 + 136);
  if (!v20)
  {
    sub_239169F68();
    v20 = *(_QWORD *)(qword_2542CF718 + 136);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, v20, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_81;
  }
LABEL_78:
  v21 = *(_QWORD *)(v5 + 144);
  if (!v21)
  {
    sub_239169F68();
    v21 = *(_QWORD *)(qword_2542CF718 + 144);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, v21, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_84;
  }
LABEL_81:
  v22 = *(_QWORD *)(v5 + 152);
  if (!v22)
  {
    sub_239169F68();
    v22 = *(_QWORD *)(qword_2542CF718 + 152);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, v22, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_87;
  }
LABEL_84:
  v23 = *(_QWORD *)(v5 + 160);
  if (!v23)
  {
    sub_239169F68();
    v23 = *(_QWORD *)(qword_2542CF718 + 160);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, v23, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_90;
  }
LABEL_87:
  v24 = *(_QWORD *)(v5 + 168);
  if (!v24)
  {
    sub_239169F68();
    v24 = *(_QWORD *)(qword_2542CF718 + 168);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, v24, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_93;
  }
LABEL_90:
  v25 = *(_QWORD *)(v5 + 176);
  if (!v25)
  {
    sub_239169F68();
    v25 = *(_QWORD *)(qword_2542CF718 + 176);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, v25, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_96;
  }
LABEL_93:
  v26 = *(_QWORD *)(v5 + 184);
  if (!v26)
  {
    sub_239169F68();
    v26 = *(_QWORD *)(qword_2542CF718 + 184);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, v26, a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_97;
  }
LABEL_96:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, *(unsigned int *)(v5 + 192), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
LABEL_98:
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, *(unsigned int *)(v5 + 208), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 216) & 0x10000000) == 0)
      return result;
    goto LABEL_99;
  }
LABEL_97:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, *(unsigned int *)(v5 + 196), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x8000000) != 0)
    goto LABEL_98;
LABEL_29:
  if ((v6 & 0x10000000) == 0)
    return result;
LABEL_99:
  v27 = *(_QWORD *)(v5 + 200);
  if (!v27)
  {
    sub_239169F68();
    v27 = *(_QWORD *)(qword_2542CF718 + 200);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, v27, a2, a4);
}

uint64_t sub_239176C9C(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  uint64_t v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  int v31;
  uint64_t v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  int v35;
  uint64_t v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;
  uint64_t v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  int v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  int v45;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v51;
  int v52;
  int v53;
  uint64_t v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  int v56;
  int v57;
  uint64_t v58;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v59;
  int v60;
  int v61;
  uint64_t v62;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v63;
  int v64;
  int v65;
  uint64_t v66;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v67;
  int v68;
  int v69;
  uint64_t v70;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v71;
  int v72;
  int v73;
  uint64_t v74;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v75;
  int v76;
  int v77;
  uint64_t v78;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v79;
  int v80;
  int v81;
  uint64_t v82;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v83;
  int v84;
  int v85;
  uint64_t v86;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v87;
  int v88;
  int v89;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v90;
  int v91;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v92;
  int v93;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v94;
  int v95;
  uint64_t v96;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v97;
  int v98;
  int v99;

  v2 = *(_DWORD *)(a1 + 216);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_56;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *(_DWORD *)(a1 + 216);
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16))
       + 1;
    v2 = *(_DWORD *)(a1 + 216);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_32;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  v8 = *(_QWORD *)(a1 + 24);
  if (!v8)
  {
    sub_239169F68();
    v8 = *(_QWORD *)(qword_2542CF718 + 24);
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23910EB74(v8);
  v10 = (int)v9;
  if (v9 >= 0x80)
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
  else
    v11 = 1;
  v3 = (v3 + v10 + v11 + 1);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_38;
  }
LABEL_32:
  v12 = *(_QWORD *)(a1 + 32);
  if (!v12)
  {
    sub_239169F68();
    v12 = *(_QWORD *)(qword_2542CF718 + 32);
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23912F228(v12);
  v14 = (int)v13;
  if (v13 >= 0x80)
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  else
    v15 = 1;
  v3 = (v3 + v14 + v15 + 1);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_44;
  }
LABEL_38:
  v16 = *(_QWORD *)(a1 + 40);
  if (!v16)
  {
    sub_239169F68();
    v16 = *(_QWORD *)(qword_2542CF718 + 40);
  }
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239111664(v16);
  v18 = (int)v17;
  if (v17 >= 0x80)
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  else
    v19 = 1;
  v3 = (v3 + v18 + v19 + 1);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0)
      goto LABEL_56;
    goto LABEL_50;
  }
LABEL_44:
  v20 = *(_QWORD *)(a1 + 48);
  if (!v20)
  {
    sub_239169F68();
    v20 = *(_QWORD *)(qword_2542CF718 + 48);
  }
  v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239178090(v20);
  v22 = (int)v21;
  if (v21 >= 0x80)
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  else
    v23 = 1;
  v3 = (v3 + v22 + v23 + 1);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x80) != 0)
  {
LABEL_50:
    v24 = *(_QWORD *)(a1 + 56);
    if (!v24)
    {
      sub_239169F68();
      v24 = *(_QWORD *)(qword_2542CF718 + 56);
    }
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23910FE70(v24);
    v26 = (int)v25;
    if (v25 >= 0x80)
      v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
    else
      v27 = 1;
    v3 = (v3 + v26 + v27 + 1);
    v2 = *(_DWORD *)(a1 + 216);
  }
LABEL_56:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_114;
  if ((v2 & 0x100) != 0)
  {
    v28 = *(_QWORD *)(a1 + 64);
    if (!v28)
    {
      sub_239169F68();
      v28 = *(_QWORD *)(qword_2542CF718 + 64);
    }
    v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917FA58(v28);
    v30 = (int)v29;
    if (v29 >= 0x80)
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    else
      v31 = 1;
    v3 = (v3 + v30 + v31 + 2);
    v2 = *(_DWORD *)(a1 + 216);
    if ((v2 & 0x200) == 0)
    {
LABEL_59:
      if ((v2 & 0x400) == 0)
        goto LABEL_60;
      goto LABEL_78;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  v32 = *(_QWORD *)(a1 + 72);
  if (!v32)
  {
    sub_239169F68();
    v32 = *(_QWORD *)(qword_2542CF718 + 72);
  }
  v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917FD74(v32);
  v34 = (int)v33;
  if (v33 >= 0x80)
    v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
  else
    v35 = 1;
  v3 = (v3 + v34 + v35 + 2);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x400) == 0)
  {
LABEL_60:
    if ((v2 & 0x800) == 0)
      goto LABEL_61;
    goto LABEL_84;
  }
LABEL_78:
  v36 = *(_QWORD *)(a1 + 80);
  if (!v36)
  {
    sub_239169F68();
    v36 = *(_QWORD *)(qword_2542CF718 + 80);
  }
  v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23911210C(v36);
  v38 = (int)v37;
  if (v37 >= 0x80)
    v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
  else
    v39 = 1;
  v3 = (v3 + v38 + v39 + 2);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x800) == 0)
  {
LABEL_61:
    if ((v2 & 0x1000) == 0)
      goto LABEL_62;
    goto LABEL_90;
  }
LABEL_84:
  v40 = *(_QWORD *)(a1 + 88);
  if (!v40)
  {
    sub_239169F68();
    v40 = *(_QWORD *)(qword_2542CF718 + 88);
  }
  v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239111AF0(v40);
  v42 = (int)v41;
  if (v41 >= 0x80)
    v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
  else
    v43 = 1;
  v3 = (v3 + v42 + v43 + 2);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x1000) == 0)
  {
LABEL_62:
    if ((v2 & 0x2000) == 0)
      goto LABEL_63;
    goto LABEL_96;
  }
LABEL_90:
  v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if ((v44 & 0x80000000) != 0)
  {
    v45 = 10;
  }
  else if (v44 >= 0x80)
  {
    v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44);
    v2 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    v45 = 1;
  }
  v3 = (v3 + v45 + 2);
  if ((v2 & 0x2000) == 0)
  {
LABEL_63:
    if ((v2 & 0x4000) == 0)
      goto LABEL_64;
    goto LABEL_102;
  }
LABEL_96:
  v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
  if ((v46 & 0x80000000) != 0)
  {
    v47 = 10;
  }
  else if (v46 >= 0x80)
  {
    v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46);
    v2 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    v47 = 1;
  }
  v3 = (v3 + v47 + 2);
  if ((v2 & 0x4000) == 0)
  {
LABEL_64:
    if ((v2 & 0x8000) == 0)
      goto LABEL_114;
    goto LABEL_108;
  }
LABEL_102:
  v48 = *(_QWORD *)(a1 + 104);
  if (!v48)
  {
    sub_239169F68();
    v48 = *(_QWORD *)(qword_2542CF718 + 104);
  }
  if (*(_DWORD *)(v48 + 16))
    v49 = 2 * (*(_DWORD *)(v48 + 16) & 1);
  else
    v49 = 0;
  *(_DWORD *)(v48 + 12) = v49;
  v3 = (v3 + v49 + 3);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x8000) != 0)
  {
LABEL_108:
    v50 = *(_QWORD *)(a1 + 112);
    if (!v50)
    {
      sub_239169F68();
      v50 = *(_QWORD *)(qword_2542CF718 + 112);
    }
    v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391835D0(v50);
    v52 = (int)v51;
    if (v51 >= 0x80)
      v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
    else
      v53 = 1;
    v3 = (v3 + v52 + v53 + 2);
    v2 = *(_DWORD *)(a1 + 216);
  }
LABEL_114:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_172;
  if ((v2 & 0x10000) != 0)
  {
    v54 = *(_QWORD *)(a1 + 120);
    if (!v54)
    {
      sub_239169F68();
      v54 = *(_QWORD *)(qword_2542CF718 + 120);
    }
    v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239183A9C(v54);
    v56 = (int)v55;
    if (v55 >= 0x80)
      v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
    else
      v57 = 1;
    v3 = (v3 + v56 + v57 + 2);
    v2 = *(_DWORD *)(a1 + 216);
    if ((v2 & 0x20000) == 0)
    {
LABEL_117:
      if ((v2 & 0x40000) == 0)
        goto LABEL_118;
      goto LABEL_136;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_117;
  }
  v58 = *(_QWORD *)(a1 + 128);
  if (!v58)
  {
    sub_239169F68();
    v58 = *(_QWORD *)(qword_2542CF718 + 128);
  }
  v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239132CA0(v58);
  v60 = (int)v59;
  if (v59 >= 0x80)
    v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v59);
  else
    v61 = 1;
  v3 = (v3 + v60 + v61 + 2);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x40000) == 0)
  {
LABEL_118:
    if ((v2 & 0x80000) == 0)
      goto LABEL_119;
    goto LABEL_142;
  }
LABEL_136:
  v62 = *(_QWORD *)(a1 + 136);
  if (!v62)
  {
    sub_239169F68();
    v62 = *(_QWORD *)(qword_2542CF718 + 136);
  }
  v63 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23914E428(v62);
  v64 = (int)v63;
  if (v63 >= 0x80)
    v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v63);
  else
    v65 = 1;
  v3 = (v3 + v64 + v65 + 2);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x80000) == 0)
  {
LABEL_119:
    if ((v2 & 0x100000) == 0)
      goto LABEL_120;
    goto LABEL_148;
  }
LABEL_142:
  v66 = *(_QWORD *)(a1 + 144);
  if (!v66)
  {
    sub_239169F68();
    v66 = *(_QWORD *)(qword_2542CF718 + 144);
  }
  v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239153540(v66);
  v68 = (int)v67;
  if (v67 >= 0x80)
    v69 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v67);
  else
    v69 = 1;
  v3 = (v3 + v68 + v69 + 2);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x100000) == 0)
  {
LABEL_120:
    if ((v2 & 0x200000) == 0)
      goto LABEL_121;
    goto LABEL_154;
  }
LABEL_148:
  v70 = *(_QWORD *)(a1 + 152);
  if (!v70)
  {
    sub_239169F68();
    v70 = *(_QWORD *)(qword_2542CF718 + 152);
  }
  v71 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239158E18(v70);
  v72 = (int)v71;
  if (v71 >= 0x80)
    v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v71);
  else
    v73 = 1;
  v3 = (v3 + v72 + v73 + 2);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x200000) == 0)
  {
LABEL_121:
    if ((v2 & 0x400000) == 0)
      goto LABEL_122;
    goto LABEL_160;
  }
LABEL_154:
  v74 = *(_QWORD *)(a1 + 160);
  if (!v74)
  {
    sub_239169F68();
    v74 = *(_QWORD *)(qword_2542CF718 + 160);
  }
  v75 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239164704(v74);
  v76 = (int)v75;
  if (v75 >= 0x80)
    v77 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v75);
  else
    v77 = 1;
  v3 = (v3 + v76 + v77 + 2);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x400000) == 0)
  {
LABEL_122:
    if ((v2 & 0x800000) == 0)
      goto LABEL_172;
    goto LABEL_166;
  }
LABEL_160:
  v78 = *(_QWORD *)(a1 + 168);
  if (!v78)
  {
    sub_239169F68();
    v78 = *(_QWORD *)(qword_2542CF718 + 168);
  }
  v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391684E8(v78);
  v80 = (int)v79;
  if (v79 >= 0x80)
    v81 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v79);
  else
    v81 = 1;
  v3 = (v3 + v80 + v81 + 2);
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x800000) != 0)
  {
LABEL_166:
    v82 = *(_QWORD *)(a1 + 176);
    if (!v82)
    {
      sub_239169F68();
      v82 = *(_QWORD *)(qword_2542CF718 + 176);
    }
    v83 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23913C058(v82);
    v84 = (int)v83;
    if (v83 >= 0x80)
      v85 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v83);
    else
      v85 = 1;
    v3 = (v3 + v84 + v85 + 2);
    v2 = *(_DWORD *)(a1 + 216);
  }
LABEL_172:
  if (!HIBYTE(v2))
    goto LABEL_205;
  if ((v2 & 0x1000000) != 0)
  {
    v86 = *(_QWORD *)(a1 + 184);
    if (!v86)
    {
      sub_239169F68();
      v86 = *(_QWORD *)(qword_2542CF718 + 184);
    }
    v87 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239139E98(v86);
    v88 = (int)v87;
    if (v87 >= 0x80)
      v89 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v87);
    else
      v89 = 1;
    v3 = (v3 + v88 + v89 + 2);
    v2 = *(_DWORD *)(a1 + 216);
    if ((v2 & 0x2000000) == 0)
    {
LABEL_175:
      if ((v2 & 0x4000000) == 0)
        goto LABEL_176;
      goto LABEL_189;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_175;
  }
  v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 192);
  if (v90 >= 0x80)
  {
    v91 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v90) + 2;
    v2 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    v91 = 3;
  }
  v3 = (v91 + v3);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_176:
    if ((v2 & 0x8000000) == 0)
      goto LABEL_177;
LABEL_195:
    v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 208);
    if (v94 >= 0x80)
    {
      v95 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v94) + 2;
      v2 = *(_DWORD *)(a1 + 216);
    }
    else
    {
      v95 = 3;
    }
    v3 = (v95 + v3);
    if ((v2 & 0x10000000) == 0)
      goto LABEL_205;
    goto LABEL_199;
  }
LABEL_189:
  v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 196);
  if ((v92 & 0x80000000) != 0)
  {
    v93 = 12;
  }
  else if (v92 >= 0x80)
  {
    v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92) + 2;
    v2 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    v93 = 3;
  }
  v3 = (v93 + v3);
  if ((v2 & 0x8000000) != 0)
    goto LABEL_195;
LABEL_177:
  if ((v2 & 0x10000000) == 0)
    goto LABEL_205;
LABEL_199:
  v96 = *(_QWORD *)(a1 + 200);
  if (!v96)
  {
    sub_239169F68();
    v96 = *(_QWORD *)(qword_2542CF718 + 200);
  }
  v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391366F8(v96);
  v98 = (int)v97;
  if (v97 >= 0x80)
    v99 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v97);
  else
    v99 = 1;
  v3 = (v3 + v98 + v99 + 2);
LABEL_205:
  *(_DWORD *)(a1 + 212) = v3;
  return v3;
}

void sub_2391774FC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73500, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23917370C(a1, (uint64_t)lpsrc);
}

void sub_239177564(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _BYTE v10[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_QWORD *)(a1 + 8) = v6;
      v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_QWORD *)(a1 + 16) = v7;
    v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    v8 = *(_BYTE *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_BYTE *)(a1 + 24) = v8;
    v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_14:
    v9 = *(_BYTE *)(a2 + 25);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_BYTE *)(a1 + 25) = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0)
      return;
LABEL_9:
    v5 = *(_BYTE *)(a2 + 26);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(_BYTE *)(a1 + 26) = v5;
  }
}

void sub_239177674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23917768C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8));
  if (*(int *)(a2 + 16) >= 1)
  {
    v4 = 0;
    v5 = MEMORY[0x24BEDD958];
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v4);
      v7 = *(_DWORD *)(a1 + 20);
      v8 = *(int *)(a1 + 16);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 24))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8));
          v7 = *(_DWORD *)(a1 + 20);
        }
        *(_DWORD *)(a1 + 20) = v7 + 1;
        v10 = operator new();
        *(_QWORD *)v10 = &off_250A72E50;
        *(_QWORD *)(v10 + 8) = v5;
        *(_QWORD *)(v10 + 16) = v5;
        *(_QWORD *)(v10 + 24) = 0;
        *(_DWORD *)(v10 + 32) = 0;
        v11 = *(_QWORD *)(a1 + 8);
        v12 = *(int *)(a1 + 16);
        *(_DWORD *)(a1 + 16) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *(_QWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 16) = v8 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v8);
      }
      sub_23917EE08(v10, v6);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  if ((*(_BYTE *)(a2 + 44) & 2) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 2u;
    v13 = *(_QWORD *)(a1 + 32);
    if (!v13)
    {
      v13 = operator new();
      *(_QWORD *)v13 = &off_250A72DD8;
      *(_QWORD *)(v13 + 16) = 0;
      *(_DWORD *)(v13 + 8) = 0;
      *(_DWORD *)(v13 + 11) = 0;
      *(_QWORD *)(a1 + 32) = v13;
    }
    v14 = *(_QWORD *)(a2 + 32);
    if (!v14)
    {
      sub_239169F68();
      v14 = *(_QWORD *)(qword_2542CF4E8 + 32);
    }
    sub_23917E7E8(v13, v14);
  }
}

void sub_23917785C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239177874(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  _BYTE v5[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 5)
      __assert_rtn("set_info_type", "GpsdProtocol.pb.h", 10947, "::CoreGem::proto::gpsd::LtlInfoType_IsValid(value)");
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_239177924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23917793C(uint64_t a1, uint64_t a2)
{
  char v4;
  _BYTE v5[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    v4 = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_BYTE *)(a1 + 8) = v4;
  }
}

void sub_2391779C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_2391779DC(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  _BYTE v8[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0)
      return;
LABEL_7:
    v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_239177AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239177AC4(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  const std::string *v7;
  std::string *v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      v5 = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_QWORD *)(a1 + 8) = v5;
      v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_10;
      }
    }
    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    v6 = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_QWORD *)(a1 + 16) = v6;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0)
      return;
LABEL_10:
    v7 = *(const std::string **)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    v8 = *(std::string **)(a1 + 24);
    if (v8 == (std::string *)MEMORY[0x24BEDD958])
    {
      v8 = (std::string *)operator new();
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      *(_QWORD *)(a1 + 24) = v8;
    }
    std::string::operator=(v8, v7);
  }
}

void sub_239177BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239177BE8()
{
  return 1;
}

_QWORD *sub_239177BF0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.Indication");
}

void sub_239177C00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A721A8;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239177C38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239177C00(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_239177C5C()
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A721A8;
  *(_DWORD *)(result + 23) = 0;
  return result;
}

uint64_t sub_239177C9C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  unint64_t *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  _BYTE *v16;
  unsigned int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  unsigned int v21;
  unsigned __int8 *v22;
  uint64_t result;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;

  v4 = (unint64_t *)(a1 + 8);
  v5 = (unint64_t *)(a1 + 16);
  while (2)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)this + 1) = v11;
LABEL_26:
          *(_DWORD *)(a1 + 32) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 16)
          {
            v12 = v11 + 1;
            *((_QWORD *)this + 1) = v12;
            goto LABEL_29;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if ((_DWORD)result)
        {
          v11 = (_BYTE *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v12 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
LABEL_29:
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v12;
          v16 = v12 + 1;
          *((_QWORD *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v16 >= v9 || *v16 != 24)
          continue;
        v13 = v16 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_37:
        v26 = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!(_DWORD)result)
            return result;
          v17 = v26;
          v18 = (_BYTE *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          v17 = *v13;
          v18 = v13 + 1;
          *((_QWORD *)this + 1) = v18;
        }
        *(_BYTE *)(a1 + 24) = v17 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v18 >= v9 || *v18 != 32)
          continue;
        v14 = v18 + 1;
        *((_QWORD *)this + 1) = v14;
LABEL_45:
        v25 = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result)
            return result;
          v19 = v25;
          v20 = (_BYTE *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          v19 = *v14;
          v20 = v14 + 1;
          *((_QWORD *)this + 1) = v20;
        }
        *(_BYTE *)(a1 + 25) = v19 != 0;
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v20 >= v9 || *v20 != 40)
          continue;
        v15 = v20 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_53:
        v24 = 0;
        if ((unint64_t)v15 >= v9 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!(_DWORD)result)
            return result;
          v21 = v24;
          v22 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          v21 = *v15;
          v22 = (unsigned __int8 *)(v15 + 1);
          *((_QWORD *)this + 1) = v22;
        }
        *(_BYTE *)(a1 + 26) = v21 != 0;
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v22 != (unsigned __int8 *)v9 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v13 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        goto LABEL_37;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v14 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        goto LABEL_45;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v15 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        goto LABEL_53;
      default:
        v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_239177FE0(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 26), a2, a4);
  }
LABEL_10:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 25), a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 26), a2, a4);
  return result;
}

uint64_t sub_239178090(uint64_t a1)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  unsigned int v5;

  LOBYTE(v2) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_15;
  }
  if ((*(_BYTE *)(a1 + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
     + 1;
  v2 = *(_DWORD *)(a1 + 32);
  if ((v2 & 2) != 0)
  {
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16))
        + 1;
    v2 = *(_DWORD *)(a1 + 32);
  }
LABEL_8:
  v5 = v3 + 2;
  if ((v2 & 4) == 0)
    v5 = v3;
  if ((v2 & 8) != 0)
    v5 += 2;
  if ((v2 & 0x10) != 0)
    result = v5 + 2;
  else
    result = v5;
LABEL_15:
  *(_DWORD *)(a1 + 28) = result;
  return result;
}

void sub_23917811C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73518, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239177564(a1, (uint64_t)lpsrc);
}

uint64_t sub_239178184()
{
  return 1;
}

_QWORD *sub_23917818C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.Status");
}

void sub_23917819C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72220;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_2391781D4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917819C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_2391781F8()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A72220;
  *(_BYTE *)(result + 8) = 1;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 9) = 0;
  *(_BYTE *)(result + 13) = 0;
  return result;
}

uint64_t sub_239178240(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  _BYTE *v19;
  unsigned int v20;
  _BYTE *v21;
  unsigned int v22;
  _BYTE *v23;
  unsigned int v24;
  unsigned __int8 *v25;
  uint64_t result;
  unsigned int v27;

  while (2)
  {
    v4 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v27 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)this + 1) = v10;
LABEL_27:
          *(_BYTE *)(a1 + 8) = v9 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)this + 1) = v11;
            goto LABEL_30;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
        if ((_DWORD)result)
        {
          v9 = v27;
          v10 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
          goto LABEL_27;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v11 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
LABEL_30:
        v27 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!(_DWORD)result)
            return result;
          v16 = v27;
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v16 = *v11;
          v17 = v11 + 1;
          *((_QWORD *)this + 1) = v17;
        }
        *(_BYTE *)(a1 + 9) = v16 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v17 >= v7 || *v17 != 24)
          continue;
        v12 = v17 + 1;
        *((_QWORD *)this + 1) = v12;
LABEL_38:
        v27 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!(_DWORD)result)
            return result;
          v18 = v27;
          v19 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v18 = *v12;
          v19 = v12 + 1;
          *((_QWORD *)this + 1) = v19;
        }
        *(_BYTE *)(a1 + 10) = v18 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v19 >= v7 || *v19 != 32)
          continue;
        v13 = v19 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_46:
        v27 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!(_DWORD)result)
            return result;
          v20 = v27;
          v21 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v20 = *v13;
          v21 = v13 + 1;
          *((_QWORD *)this + 1) = v21;
        }
        *(_BYTE *)(a1 + 11) = v20 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if ((unint64_t)v21 >= v7 || *v21 != 40)
          continue;
        v14 = v21 + 1;
        *((_QWORD *)this + 1) = v14;
LABEL_54:
        v27 = 0;
        if ((unint64_t)v14 >= v7 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!(_DWORD)result)
            return result;
          v22 = v27;
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v22 = *v14;
          v23 = v14 + 1;
          *((_QWORD *)this + 1) = v23;
        }
        *(_BYTE *)(a1 + 12) = v22 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        if ((unint64_t)v23 >= v7 || *v23 != 48)
          continue;
        v15 = v23 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_62:
        v27 = 0;
        if ((unint64_t)v15 >= v7 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!(_DWORD)result)
            return result;
          v24 = v27;
          v25 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v24 = *v15;
          v25 = (unsigned __int8 *)(v15 + 1);
          *((_QWORD *)this + 1) = v25;
        }
        *(_BYTE *)(a1 + 13) = v24 != 0;
        *(_DWORD *)(a1 + 20) |= 0x20u;
        if (v25 != (unsigned __int8 *)v7 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v12 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_38;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v13 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_46;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v14 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_54;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v15 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_62;
      default:
        v6 = TagFallback & 7;
LABEL_21:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_239178614(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 13), a2, a4);
  }
LABEL_12:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 20) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 13), a2, a4);
  return result;
}

uint64_t sub_2391786E0(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
      v2 += 2;
    if ((v1 & 4) != 0)
      v2 += 2;
    if ((v1 & 8) != 0)
      v2 += 2;
    if ((v1 & 0x10) != 0)
      v2 += 2;
    if ((v1 & 0x20) != 0)
      v3 = v2 + 2;
    else
      v3 = v2;
  }
  else
  {
    v3 = 0;
  }
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_239178740(uint64_t a1, _BYTE *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73530, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391724B4(a1, lpsrc);
}

uint64_t sub_2391787A8()
{
  return 1;
}

_QWORD *sub_2391787B0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetPvtmReport");
}

void sub_2391787C0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_250A72298;
  v2 = *((_QWORD *)a1 + 1);
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x23B838844](v2, 0x1012C40EC159624);
  }
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239178838(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_2391787C0(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917885C()
{
  uint64_t result;
  uint64_t v1;

  result = operator new();
  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)result = &off_250A72298;
  *(_QWORD *)(result + 8) = v1;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_2391788A0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t result;
  _BYTE *v12;
  unsigned int v13;
  unsigned int v14;

  v4 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_22;
      *(_DWORD *)(a1 + 24) |= 1u;
      if (*(_QWORD *)(a1 + 8) == v4)
      {
        v10 = (_QWORD *)operator new();
        v10[1] = 0;
        v10[2] = 0;
        *v10 = 0;
        *(_QWORD *)(a1 + 8) = v10;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!(_DWORD)result)
        return result;
      v12 = (_BYTE *)*((_QWORD *)this + 1);
      v8 = *((_QWORD *)this + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)this + 1) = v9;
LABEL_18:
        v14 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
          if (!(_DWORD)result)
            return result;
          v13 = v14;
        }
        else
        {
          v13 = *v9;
          *((_QWORD *)this + 1) = v9 + 1;
        }
        if (v13 <= 2)
        {
          *(_DWORD *)(a1 + 24) |= 2u;
          *(_DWORD *)(a1 + 16) = v13;
        }
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        goto LABEL_18;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_22:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_239178A60(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), a2, a4);
  return result;
}

uint64_t sub_239178AB8(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;

  LOBYTE(v2) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_21;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *(_DWORD *)(a1 + 24);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v9 + v5);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v11 & 0x80000000) != 0)
    {
      v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    }
    else
    {
      v12 = 2;
    }
    v3 = (v12 + v3);
  }
LABEL_21:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_239178B7C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73548, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391720A8(a1, (uint64_t)lpsrc);
}

uint64_t sub_239178BE4()
{
  return 1;
}

_QWORD *sub_239178BEC@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.InjectAssistanceFile");
}

void sub_239178BFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_250A72310;
  v2 = *((_QWORD *)a1 + 1);
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x23B838844](v2, 0x1012C40EC159624);
  }
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239178C74(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239178BFC(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_239178C98()
{
  _QWORD *result;
  uint64_t v1;

  result = (_QWORD *)operator new();
  v1 = MEMORY[0x24BEDD958];
  *result = &off_250A72310;
  result[1] = v1;
  result[2] = 0;
  return result;
}

uint64_t sub_239178CD8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  _QWORD *v7;
  uint64_t result;

  v4 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 10)
        break;
      *(_DWORD *)(a1 + 20) |= 1u;
      if (*(_QWORD *)(a1 + 8) == v4)
      {
        v7 = (_QWORD *)operator new();
        v7[1] = 0;
        v7[2] = 0;
        *v7 = 0;
        *(_QWORD *)(a1 + 8) = v7;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_239178DF4(uint64_t result)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  return result;
}

uint64_t sub_239178E10(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;

  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    v3 = *(_QWORD *)(a1 + 8);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = v4;
    v6 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v7 = *(unsigned __int8 *)(v3 + 23);
    else
      v7 = v6;
    if (v7 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7);
      v4 = *(unsigned __int8 *)(v3 + 23);
      v6 = *(_QWORD *)(v3 + 8);
      v8 = v9 + 1;
      v5 = *(_BYTE *)(v3 + 23);
    }
    else
    {
      v8 = 2;
    }
    if (v5 < 0)
      v4 = v6;
    result = (v8 + v4);
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_239178E8C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73560, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391721D4(a1, (uint64_t)lpsrc);
}

uint64_t sub_239178EF4()
{
  return 1;
}

_QWORD *sub_239178EFC@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.InjectRtiFile");
}

void sub_239178F0C(uint64_t a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = &off_250A72388;
  sub_239169F68();
  v2 = *(_DWORD *)(a1 + 20);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *(_DWORD *)(a1 + 20);
      }
    }
  }
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    MEMORY[0x23B838820](v5, 0x80C80B8603338);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_239178F98(uint64_t a1)
{
  sub_239178F0C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_239178FBC()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A72388;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_239178FFC(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t result;
  unsigned int v22;

  v4 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v7 = a1[5];
        v8 = a1[4];
        if ((int)v8 >= v7)
        {
          if (v7 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v7 = a1[5];
          }
          a1[5] = v7 + 1;
          v10 = operator new();
          *(_QWORD *)v10 = &off_250A6CBB0;
          *(_QWORD *)(v10 + 8) = 0;
          *(_QWORD *)(v10 + 16) = 0;
          *(_QWORD *)(v10 + 24) = 0;
          *(_DWORD *)(v10 + 32) = 0;
          v11 = *((_QWORD *)a1 + 1);
          v12 = a1[4];
          a1[4] = v12 + 1;
          *(_QWORD *)(v11 + 8 * v12) = v10;
        }
        else
        {
          v9 = *((_QWORD *)a1 + 1);
          a1[4] = v8 + 1;
          v10 = *(_QWORD *)(v9 + 8 * v8);
        }
        v22 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))return 0;
        }
        else
        {
          v22 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)this + 14);
        v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239110B68((unsigned int *)v10, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v16 = *((_DWORD *)this + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)this + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        v20 = (_BYTE *)*((_QWORD *)this + 2);
        if (v19 >= v20 || *v19 != 10)
        {
          if (v19 == v20 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)this + 1) = v19 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_239179214(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  if (*(int *)(result + 16) >= 1)
  {
    v5 = result;
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_239179270(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;

  v2 = *(unsigned int *)(a1 + 16);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    do
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239110F4C(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v3));
      v5 = (int)v4;
      if (v4 >= 0x80)
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      else
        v6 = 1;
      v2 = (v5 + v2 + v6);
      ++v3;
    }
    while (v3 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v2;
  return v2;
}

void sub_2391792EC(int *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73578, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391722B0(a1, (uint64_t)lpsrc);
}

uint64_t sub_239179354()
{
  return 1;
}

_QWORD *sub_23917935C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.InjectSvidBlocklist");
}

void sub_23917936C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_250A72400;
  sub_239169F68();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF720 != a1)
  {
    v2 = *((_QWORD *)a1 + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_2391793C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917936C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_2391793EC()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A72400;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 20) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_23917942C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  unsigned int v21;
  uint64_t result;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned __int8 *v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;

  v4 = (unint64_t *)(a1 + 24);
  while (2)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_20;
        *(_DWORD *)(a1 + 36) |= 1u;
        v8 = *(_QWORD *)(a1 + 8);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_250A6C7F0;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(_OWORD *)(v8 + 56) = 0u;
          *(_OWORD *)(v8 + 72) = 0u;
          *(_OWORD *)(v8 + 84) = 0u;
          *(_QWORD *)(a1 + 8) = v8;
        }
        v29 = 0;
        v9 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0;
        }
        else
        {
          v29 = *v9;
          *((_QWORD *)this + 1) = v9 + 1;
        }
        v15 = *((_DWORD *)this + 14);
        v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23910C7C8(v8, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v17 = *((_DWORD *)this + 14);
        v18 = __OFSUB__(v17, 1);
        v19 = v17 - 1;
        if (v19 < 0 == v18)
          *((_DWORD *)this + 14) = v19;
        v20 = (_BYTE *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v20 >= v10 || *v20 != 16)
          continue;
        v11 = v20 + 1;
        *((_QWORD *)this + 1) = v11;
        goto LABEL_33;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_33:
        v27 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!(_DWORD)result)
            return result;
          v21 = v27;
        }
        else
        {
          v21 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        if (v21 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 16) = v21;
        }
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v23 >= v12 || *v23 != 24)
          continue;
        v13 = v23 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_43:
        v28 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!(_DWORD)result)
            return result;
          v24 = v28;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          v24 = *v13;
          v25 = v13 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        *(_BYTE *)(a1 + 20) = v24 != 0;
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v25 >= v12 || *v25 != 80)
          continue;
        v14 = v25 + 1;
        *((_QWORD *)this + 1) = v14;
LABEL_51:
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v26 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v14;
          v26 = (unsigned __int8 *)(v14 + 1);
          *((_QWORD *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 36) |= 8u;
        if (v26 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_43;
      case 0xAu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v14 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_51;
      default:
        v7 = TagFallback & 7;
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_2391797A4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = result;
  v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
    {
      sub_239169F68();
      v7 = *(_QWORD *)(qword_2542CF720 + 8);
    }
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  }
LABEL_10:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 20), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  return result;
}

uint64_t sub_23917984C(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v2) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_23;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (!v4)
    {
      sub_239169F68();
      v4 = *(_QWORD *)(qword_2542CF720 + 8);
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23910CEC4(v4);
    v6 = (int)v5;
    if (v5 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    else
      v7 = 1;
    LODWORD(v3) = v6 + v7 + 1;
    v2 = *(_DWORD *)(a1 + 36);
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  LODWORD(v3) = 0;
  if ((*(_BYTE *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      v2 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v9 = 2;
    }
    LODWORD(v3) = v9 + v3;
  }
LABEL_18:
  if ((v2 & 4) != 0)
    v3 = (v3 + 2);
  else
    v3 = v3;
  if ((v2 & 8) != 0)
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24))
       + 1;
LABEL_23:
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

void sub_239179928(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73590, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391711C8(a1, (uint64_t)lpsrc);
}

uint64_t sub_239179990()
{
  return 1;
}

_QWORD *sub_239179998@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.InjectAssistancePosition");
}

void sub_2391799A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72478;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_2391799E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_2391799A8(a1);
  JUMPOUT(0x23B838844);
}

double sub_239179A04()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A72478;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_239179A44(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  char *v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  _BYTE *v16;
  unsigned __int8 *v17;
  uint64_t result;

  v4 = (unint64_t *)(a1 + 8);
  v5 = (unint64_t *)(a1 + 16);
  v6 = (unint64_t *)(a1 + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v13 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)this + 1) = v15;
          goto LABEL_27;
        }
      }
      if (v9 != 2)
        break;
      v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v15 = (char *)*((_QWORD *)this + 1);
      v11 = *((_QWORD *)this + 2);
LABEL_27:
      if ((unint64_t)v15 >= v11 || *v15 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v16 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v15;
        v16 = v15 + 1;
        *((_QWORD *)this + 1) = v16;
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      if ((unint64_t)v16 < v11 && *v16 == 24)
      {
        v12 = v16 + 1;
        *((_QWORD *)this + 1) = v12;
LABEL_35:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v17 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v12;
          v17 = (unsigned __int8 *)(v12 + 1);
          *((_QWORD *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if (v17 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_239179C64(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), a2, a4);
  return result;
}

uint64_t sub_239179CDC(uint64_t a1)
{
  int v2;
  uint64_t v3;

  LOBYTE(v2) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_10;
  }
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
       + 1;
    v2 = *(_DWORD *)(a1 + 36);
    if ((v2 & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = 0;
  if ((*(_BYTE *)(a1 + 36) & 2) != 0)
  {
LABEL_7:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16))
       + 1;
    v2 = *(_DWORD *)(a1 + 36);
  }
LABEL_8:
  if ((v2 & 4) != 0)
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24))
       + 1;
LABEL_10:
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

void sub_239179D5C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A735A8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239171358(a1, (uint64_t)lpsrc);
}

uint64_t sub_239179DC4()
{
  return 1;
}

_QWORD *sub_239179DCC@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.InjectAssistanceTime");
}

void sub_239179DDC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A724F0;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239179E14(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239179DDC(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_239179E38()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_250A724F0;
  return result;
}

uint64_t sub_239179E70(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  unint64_t v7;
  char *v8;
  unsigned __int8 *v9;
  uint64_t result;

  v4 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v8 = (char *)*((_QWORD *)this + 1);
      v7 = *((_QWORD *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (!(_DWORD)result)
          return result;
        v9 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
      }
      else
      {
        *v4 = *v8;
        v9 = (unsigned __int8 *)(v8 + 1);
        *((_QWORD *)this + 1) = v9;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (v9 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_239179F80(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_239179F9C(uint64_t a1)
{
  uint64_t result;

  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
           + 1;
  else
    result = 0;
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_239179FD8(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A735C0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239172414(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917A040()
{
  return 1;
}

_QWORD *sub_23917A048@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.DeleteGnssData");
}

void sub_23917A058(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72568;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917A090(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917A058(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_23917A0B4()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_250A72568;
  return result;
}

uint64_t sub_23917A0EC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  unint64_t v7;
  char *v8;
  unsigned __int8 *v9;
  uint64_t result;

  v4 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v8 = (char *)*((_QWORD *)this + 1);
      v7 = *((_QWORD *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (!(_DWORD)result)
          return result;
        v9 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
      }
      else
      {
        *v4 = *v8;
        v9 = (unsigned __int8 *)(v8 + 1);
        *((_QWORD *)this + 1) = v9;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (v9 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_23917A1FC(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_23917A218(uint64_t a1)
{
  uint64_t result;

  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
           + 1;
  else
    result = 0;
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_23917A254(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A735D8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391725FC(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917A2BC()
{
  return 1;
}

_QWORD *sub_23917A2C4@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetNmeaHandler");
}

void sub_23917A2D4(uint64_t a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = &off_250A725E0;
  sub_239169F68();
  v2 = *(_DWORD *)(a1 + 20);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *(_DWORD *)(a1 + 20);
      }
    }
  }
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    MEMORY[0x23B838820](v5, 0x80C80B8603338);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_23917A360(uint64_t a1)
{
  sub_23917A2D4(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917A384()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A725E0;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_23917A3C4(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t result;
  unsigned int v22;

  v4 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v7 = a1[5];
        v8 = a1[4];
        if ((int)v8 >= v7)
        {
          if (v7 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v7 = a1[5];
          }
          a1[5] = v7 + 1;
          v10 = operator new();
          *(_QWORD *)(v10 + 8) = 0;
          *(_QWORD *)(v10 + 16) = 0;
          *(_QWORD *)v10 = &off_250A6CAC0;
          *(_DWORD *)(v10 + 24) = 0;
          v11 = *((_QWORD *)a1 + 1);
          v12 = a1[4];
          a1[4] = v12 + 1;
          *(_QWORD *)(v11 + 8 * v12) = v10;
        }
        else
        {
          v9 = *((_QWORD *)a1 + 1);
          a1[4] = v8 + 1;
          v10 = *(_QWORD *)(v9 + 8 * v8);
        }
        v22 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))return 0;
        }
        else
        {
          v22 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)this + 14);
        v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239110150(v10, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v16 = *((_DWORD *)this + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)this + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        v20 = (_BYTE *)*((_QWORD *)this + 2);
        if (v19 >= v20 || *v19 != 10)
        {
          if (v19 == v20 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)this + 1) = v19 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23917A5DC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  if (*(int *)(result + 16) >= 1)
  {
    v5 = result;
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_23917A638(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;

  v2 = *(unsigned int *)(a1 + 16);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    do
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239110330(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v3));
      v5 = (int)v4;
      if (v4 >= 0x80)
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      else
        v6 = 1;
      v2 = (v5 + v2 + v6);
      ++v3;
    }
    while (v3 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v2;
  return v2;
}

void sub_23917A6B4(int *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A735F0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239171440(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917A71C()
{
  return 1;
}

_QWORD *sub_23917A724@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetAssistancePressure");
}

void sub_23917A734(uint64_t *a1)
{
  *a1 = (uint64_t)&off_250A72658;
  sub_239169F68();
  sub_239184E70(a1 + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_23917A778(uint64_t *a1)
{
  sub_23917A734(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917A79C()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A72658;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_23917A7DC(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t result;
  unsigned int v22;

  v4 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v7 = a1[5];
        v8 = a1[4];
        if ((int)v8 >= v7)
        {
          if (v7 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v7 = a1[5];
          }
          a1[5] = v7 + 1;
          v10 = operator new();
          *(_QWORD *)v10 = &off_250A6CB38;
          *(_QWORD *)(v10 + 8) = 0;
          *(_QWORD *)(v10 + 16) = 0;
          *(_QWORD *)(v10 + 24) = 0;
          *(_DWORD *)(v10 + 32) = 0;
          v11 = *((_QWORD *)a1 + 1);
          v12 = a1[4];
          a1[4] = v12 + 1;
          *(_QWORD *)(v11 + 8 * v12) = v10;
        }
        else
        {
          v9 = *((_QWORD *)a1 + 1);
          a1[4] = v8 + 1;
          v10 = *(_QWORD *)(v9 + 8 * v8);
        }
        v22 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))return 0;
        }
        else
        {
          v22 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)this + 14);
        v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391105C0((_DWORD *)v10, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v16 = *((_DWORD *)this + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)this + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        v20 = (_BYTE *)*((_QWORD *)this + 2);
        if (v19 >= v20 || *v19 != 10)
        {
          if (v19 == v20 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)this + 1) = v19 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23917A9F4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  if (*(int *)(result + 16) >= 1)
  {
    v5 = result;
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_23917AA50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;

  v2 = *(unsigned int *)(a1 + 16);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    do
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391108A0(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v3));
      v5 = (int)v4;
      if (v4 >= 0x80)
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      else
        v6 = 1;
      v2 = (v5 + v2 + v6);
      ++v3;
    }
    while (v3 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v2;
  return v2;
}

void sub_23917AACC(int *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73608, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391715A4(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917AB34()
{
  return 1;
}

_QWORD *sub_23917AB3C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetAssistanceAccel");
}

void sub_23917AB4C(uint64_t *a1)
{
  *a1 = (uint64_t)&off_250A726D0;
  sub_239169F68();
  sub_239184E70(a1 + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_23917AB90(uint64_t *a1)
{
  sub_23917AB4C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917ABB4()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A726D0;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_23917ABF4(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t result;
  unsigned int v22;

  v4 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v7 = a1[5];
        v8 = a1[4];
        if ((int)v8 >= v7)
        {
          if (v7 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v7 = a1[5];
          }
          a1[5] = v7 + 1;
          v10 = operator new();
          *(_QWORD *)v10 = &off_250A6CB38;
          *(_QWORD *)(v10 + 8) = 0;
          *(_QWORD *)(v10 + 16) = 0;
          *(_QWORD *)(v10 + 24) = 0;
          *(_DWORD *)(v10 + 32) = 0;
          v11 = *((_QWORD *)a1 + 1);
          v12 = a1[4];
          a1[4] = v12 + 1;
          *(_QWORD *)(v11 + 8 * v12) = v10;
        }
        else
        {
          v9 = *((_QWORD *)a1 + 1);
          a1[4] = v8 + 1;
          v10 = *(_QWORD *)(v9 + 8 * v8);
        }
        v22 = 0;
        v13 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))return 0;
        }
        else
        {
          v22 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)this + 14);
        v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_2391105C0((_DWORD *)v10, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v16 = *((_DWORD *)this + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)this + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        v20 = (_BYTE *)*((_QWORD *)this + 2);
        if (v19 >= v20 || *v19 != 10)
        {
          if (v19 == v20 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)this + 1) = v19 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23917AE0C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  if (*(int *)(result + 16) >= 1)
  {
    v5 = result;
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_23917AE68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;

  v2 = *(unsigned int *)(a1 + 16);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    do
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_2391108A0(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v3));
      v5 = (int)v4;
      if (v4 >= 0x80)
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      else
        v6 = 1;
      v2 = (v5 + v2 + v6);
      ++v3;
    }
    while (v3 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v2;
  return v2;
}

void sub_23917AEE4(int *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73620, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239171708(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917AF4C()
{
  return 1;
}

_QWORD *sub_23917AF54@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetAssistanceGyro");
}

void sub_23917AF64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72748;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917AF9C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917AF64(a1);
  JUMPOUT(0x23B838844);
}

double sub_23917AFC0()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A72748;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_23917B000(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t result;
  _BYTE *v13;
  unint64_t v14;

  v4 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((_QWORD *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v10 = (char *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
            if (!(_DWORD)result)
              return result;
            v11 = (_BYTE *)*((_QWORD *)this + 1);
            v9 = *((_QWORD *)this + 2);
          }
          else
          {
            *v4 = *v10;
            v11 = v10 + 1;
            *((_QWORD *)this + 1) = v11;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 17)
          {
            *((_QWORD *)this + 1) = v11 + 1;
            goto LABEL_27;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if (v8 != 1)
          goto LABEL_19;
LABEL_27:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 36) |= 2u;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 < *((_QWORD *)this + 2) && *v13 == 25)
        {
          *((_QWORD *)this + 1) = v13 + 1;
          goto LABEL_31;
        }
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 1)
        goto LABEL_19;
LABEL_31:
      v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
        return 0;
      *(_QWORD *)(a1 + 24) = v14;
      *(_DWORD *)(a1 + 36) |= 4u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_19:
    if (v8 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t sub_23917B1E8(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  return result;
}

uint64_t sub_23917B260(uint64_t a1)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *(_BYTE *)(a1 + 36);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      v2 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

double sub_23917B2C4(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73638, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  return sub_23917186C(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917B32C()
{
  return 1;
}

_QWORD *sub_23917B334@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetAssistanceDem");
}

void sub_23917B344(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A727C0;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917B37C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917B344(a1);
  JUMPOUT(0x23B838844);
}

double sub_23917B3A0()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A727C0;
  *(_QWORD *)(v0 + 72) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 54) = 0u;
  return result;
}

uint64_t sub_23917B3EC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t result;
  _BYTE *v20;
  _BYTE *v21;
  unsigned int v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  unsigned __int8 *v37;
  unsigned int v38[2];

  v4 = (unint64_t *)(a1 + 8);
  while (2)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)this + 1) = v10;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 17)
        {
          *((_QWORD *)this + 1) = v10 + 1;
          goto LABEL_45;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_36;
LABEL_45:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)v38;
        *(_DWORD *)(a1 + 76) |= 2u;
        v20 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v20 >= *((_QWORD *)this + 2) || *v20 != 25)
          continue;
        *((_QWORD *)this + 1) = v20 + 1;
LABEL_49:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v38;
        *(_DWORD *)(a1 + 76) |= 4u;
        v21 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        if ((unint64_t)v21 >= v11 || *v21 != 32)
          continue;
        v12 = v21 + 1;
        *((_QWORD *)this + 1) = v12;
LABEL_53:
        v38[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
          if (!(_DWORD)result)
            return result;
          v22 = v38[0];
          v23 = (_BYTE *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          v22 = *v12;
          v23 = v12 + 1;
          *((_QWORD *)this + 1) = v23;
        }
        *(_BYTE *)(a1 + 64) = v22 != 0;
        *(_DWORD *)(a1 + 76) |= 8u;
        if ((unint64_t)v23 >= v11 || *v23 != 41)
          continue;
        *((_QWORD *)this + 1) = v23 + 1;
LABEL_61:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)v38;
        *(_DWORD *)(a1 + 76) |= 0x10u;
        v24 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v24 >= *((_QWORD *)this + 2) || *v24 != 49)
          continue;
        *((_QWORD *)this + 1) = v24 + 1;
LABEL_65:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v38;
        *(_DWORD *)(a1 + 76) |= 0x20u;
        v25 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v25 >= *((_QWORD *)this + 2) || *v25 != 57)
          continue;
        *((_QWORD *)this + 1) = v25 + 1;
LABEL_69:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)v38;
        *(_DWORD *)(a1 + 76) |= 0x40u;
        v26 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v26 >= *((_QWORD *)this + 2) || *v26 != 65)
          continue;
        *((_QWORD *)this + 1) = v26 + 1;
LABEL_73:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) != 0)
        {
          *(_QWORD *)(a1 + 56) = *(_QWORD *)v38;
          *(_DWORD *)(a1 + 76) |= 0x80u;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v13 = *((_QWORD *)this + 2);
          if ((unint64_t)v27 < v13 && *v27 == 72)
          {
            v14 = v27 + 1;
            *((_QWORD *)this + 1) = v14;
LABEL_77:
            v38[0] = 0;
            if ((unint64_t)v14 >= v13 || *v14 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
              if (!(_DWORD)result)
                return result;
              v28 = v38[0];
              v29 = (_BYTE *)*((_QWORD *)this + 1);
              v13 = *((_QWORD *)this + 2);
            }
            else
            {
              v28 = *v14;
              v29 = v14 + 1;
              *((_QWORD *)this + 1) = v29;
            }
            *(_BYTE *)(a1 + 65) = v28 != 0;
            *(_DWORD *)(a1 + 76) |= 0x100u;
            if ((unint64_t)v29 < v13 && *v29 == 80)
            {
              v15 = v29 + 1;
              *((_QWORD *)this + 1) = v15;
LABEL_85:
              v38[0] = 0;
              if ((unint64_t)v15 >= v13 || *v15 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                if (!(_DWORD)result)
                  return result;
                v30 = v38[0];
                v31 = (_BYTE *)*((_QWORD *)this + 1);
                v13 = *((_QWORD *)this + 2);
              }
              else
              {
                v30 = *v15;
                v31 = v15 + 1;
                *((_QWORD *)this + 1) = v31;
              }
              *(_BYTE *)(a1 + 66) = v30 != 0;
              *(_DWORD *)(a1 + 76) |= 0x200u;
              if ((unint64_t)v31 < v13 && *v31 == 88)
              {
                v16 = v31 + 1;
                *((_QWORD *)this + 1) = v16;
LABEL_93:
                v38[0] = 0;
                if ((unint64_t)v16 >= v13 || *v16 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                  if (!(_DWORD)result)
                    return result;
                  v32 = v38[0];
                  v33 = (_BYTE *)*((_QWORD *)this + 1);
                  v13 = *((_QWORD *)this + 2);
                }
                else
                {
                  v32 = *v16;
                  v33 = v16 + 1;
                  *((_QWORD *)this + 1) = v33;
                }
                *(_BYTE *)(a1 + 67) = v32 != 0;
                *(_DWORD *)(a1 + 76) |= 0x400u;
                if ((unint64_t)v33 < v13 && *v33 == 96)
                {
                  v17 = v33 + 1;
                  *((_QWORD *)this + 1) = v17;
LABEL_101:
                  v38[0] = 0;
                  if ((unint64_t)v17 >= v13 || *v17 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                    if (!(_DWORD)result)
                      return result;
                    v34 = v38[0];
                    v35 = (_BYTE *)*((_QWORD *)this + 1);
                    v13 = *((_QWORD *)this + 2);
                  }
                  else
                  {
                    v34 = *v17;
                    v35 = v17 + 1;
                    *((_QWORD *)this + 1) = v35;
                  }
                  *(_BYTE *)(a1 + 68) = v34 != 0;
                  *(_DWORD *)(a1 + 76) |= 0x800u;
                  if ((unint64_t)v35 < v13 && *v35 == 104)
                  {
                    v18 = v35 + 1;
                    *((_QWORD *)this + 1) = v18;
LABEL_109:
                    v38[0] = 0;
                    if ((unint64_t)v18 >= v13 || *v18 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                      if (!(_DWORD)result)
                        return result;
                      v36 = v38[0];
                      v37 = (unsigned __int8 *)*((_QWORD *)this + 1);
                      v13 = *((_QWORD *)this + 2);
                    }
                    else
                    {
                      v36 = *v18;
                      v37 = (unsigned __int8 *)(v18 + 1);
                      *((_QWORD *)this + 1) = v37;
                    }
                    *(_BYTE *)(a1 + 69) = v36 != 0;
                    *(_DWORD *)(a1 + 76) |= 0x1000u;
                    if (v37 == (unsigned __int8 *)v13
                      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                    {
                      *((_DWORD *)this + 8) = 0;
                      result = 1;
                      *((_BYTE *)this + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_49;
        goto LABEL_36;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_53;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_61;
        goto LABEL_36;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_65;
        goto LABEL_36;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_69;
        goto LABEL_36;
      case 8u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_73;
        goto LABEL_36;
      case 9u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v14 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_77;
      case 0xAu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v15 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_85;
      case 0xBu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v16 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_93;
      case 0xCu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v17 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_101;
      case 0xDu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_36;
        v18 = (char *)*((_QWORD *)this + 1);
        v13 = *((_QWORD *)this + 2);
        goto LABEL_109;
      default:
        v7 = TagFallback & 7;
LABEL_36:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_23917BA44(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 76);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_18;
  }
LABEL_17:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_19;
  }
LABEL_18:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 64), a2, a4);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_19:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_21;
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_22;
  }
LABEL_21:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_23;
  }
LABEL_22:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_24;
  }
LABEL_23:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 65), a2, a4);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_25;
  }
LABEL_24:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 66), a2, a4);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_26;
  }
LABEL_25:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 67), a2, a4);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 69), a2, a4);
  }
LABEL_26:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned __int8 *)(v5 + 68), a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 0x1000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 69), a2, a4);
  return result;
}

uint64_t sub_23917BBD4(uint64_t a1)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  unsigned int v5;

  v2 = *(_DWORD *)(a1 + 76);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      v2 = *(_DWORD *)(a1 + 76);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 2;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    v5 = result + 2;
    if ((v2 & 0x100) == 0)
      v5 = result;
    if ((v2 & 0x200) != 0)
      v5 += 2;
    if ((v2 & 0x400) != 0)
      v5 += 2;
    if ((v2 & 0x800) != 0)
      v5 += 2;
    if ((v2 & 0x1000) != 0)
      result = v5 + 2;
    else
      result = v5;
  }
  *(_DWORD *)(a1 + 72) = result;
  return result;
}

void sub_23917BCBC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73650, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239171954(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917BD24()
{
  return 1;
}

_QWORD *sub_23917BD2C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetAssistanceMapVector");
}

void sub_23917BD3C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72838;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917BD74(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917BD3C(a1);
  JUMPOUT(0x23B838844);
}

double sub_23917BD98()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A72838;
  *(_QWORD *)(v0 + 8) = 0;
  *(_QWORD *)&result = 0x400000000;
  *(_OWORD *)(v0 + 16) = xmmword_2391CAF50;
  *(_DWORD *)(v0 + 32) = 0;
  return result;
}

uint64_t sub_23917BDDC(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  unint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  _BYTE *v19;
  unsigned int v20;
  uint64_t result;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;

  v4 = (unint64_t *)(a1 + 2);
  while (2)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)this + 1) = v10;
LABEL_24:
          a1[8] |= 1u;
          if ((unint64_t)v10 < v8 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)this + 1) = v11;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if ((_DWORD)result)
        {
          v10 = (_BYTE *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v11 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
LABEL_27:
        v24 = 0;
        if ((unint64_t)v11 >= v8 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!(_DWORD)result)
            return result;
          v16 = v24;
        }
        else
        {
          v16 = *v11;
          *((_QWORD *)this + 1) = v11 + 1;
        }
        if (v16 <= 9)
        {
          a1[8] |= 2u;
          a1[4] = v16;
        }
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        if ((unint64_t)v17 >= v12 || *v17 != 24)
          continue;
        v13 = v17 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_37:
        v23 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!(_DWORD)result)
            return result;
          v18 = v23;
        }
        else
        {
          v18 = *v13;
          *((_QWORD *)this + 1) = v13 + 1;
        }
        if (v18 <= 4)
        {
          a1[8] |= 4u;
          a1[5] = v18;
        }
        v19 = (_BYTE *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v19 >= v14 || *v19 != 32)
          continue;
        v15 = v19 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_47:
        v22 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result)
            return result;
          v20 = v22;
        }
        else
        {
          v20 = *v15;
          *((_QWORD *)this + 1) = v15 + 1;
        }
        if (sub_23910C444(v20))
        {
          a1[8] |= 8u;
          a1[6] = v20;
        }
        if (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
        goto LABEL_37;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v15 = (char *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        goto LABEL_47;
      default:
        v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_23917C0B0(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)result;
  v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
    v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
  }
LABEL_8:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  if ((v5[8] & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
  return result;
}

uint64_t sub_23917C144(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v2) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
       + 1;
    v2 = *(_DWORD *)(a1 + 32);
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0)
      goto LABEL_13;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    v5 = 2;
  }
  v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_28;
    goto LABEL_22;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if ((v6 & 0x80000000) != 0)
  {
    v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    v2 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    v7 = 2;
  }
  v3 = (v7 + v3);
  if ((v2 & 8) != 0)
  {
LABEL_22:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    }
    else
    {
      v9 = 2;
    }
    v3 = (v9 + v3);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v3;
  return v3;
}

void sub_23917C238(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73668, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239171B88(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917C2A0()
{
  return 1;
}

_QWORD *sub_23917C2A8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetAssistanceMotionActivityContext");
}

void sub_23917C2B8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A728B0;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917C2F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917C2B8(a1);
  JUMPOUT(0x23B838844);
}

double sub_23917C314()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A728B0;
  *(_QWORD *)(v0 + 8) = 0;
  *(_QWORD *)&result = 4;
  *(_QWORD *)(v0 + 16) = 4;
  *(_DWORD *)(v0 + 24) = 0;
  return result;
}

uint64_t sub_23917C358(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  _BYTE *v11;
  unsigned int v12;
  uint64_t result;
  unsigned int v14;

  v4 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v10 = (char *)*((_QWORD *)this + 1);
      v8 = *((_QWORD *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (!(_DWORD)result)
          return result;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
      }
      else
      {
        *v4 = *v10;
        v11 = v10 + 1;
        *((_QWORD *)this + 1) = v11;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if ((unint64_t)v11 < v8 && *v11 == 16)
      {
        v9 = v11 + 1;
        *((_QWORD *)this + 1) = v9;
LABEL_24:
        v14 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
          if (!(_DWORD)result)
            return result;
          v12 = v14;
        }
        else
        {
          v12 = *v9;
          *((_QWORD *)this + 1) = v9 + 1;
        }
        if (v12 - 1 <= 3)
        {
          *(_DWORD *)(a1 + 24) |= 2u;
          *(_DWORD *)(a1 + 16) = v12;
        }
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23917C50C(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), a2, a4);
  return result;
}

uint64_t sub_23917C564(uint64_t a1)
{
  uint64_t v2;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;
  int v4;

  if (*(_BYTE *)(a1 + 24))
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      if ((*(_DWORD *)(a1 + 24) & 2) == 0)
        goto LABEL_13;
    }
    else
    {
      v2 = 0;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0)
        goto LABEL_13;
    }
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v3 & 0x80000000) != 0)
    {
      v4 = 11;
    }
    else if (v3 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      v4 = 2;
    }
    v2 = (v4 + v2);
  }
  else
  {
    v2 = 0;
  }
LABEL_13:
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_23917C5E8(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73680, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239171CFC(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917C650()
{
  return 1;
}

_QWORD *sub_23917C658@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetAssistanceMountState");
}

void sub_23917C668(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72928;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917C6A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917C668(a1);
  JUMPOUT(0x23B838844);
}

double sub_23917C6C4()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A72928;
  *(_QWORD *)&result = 15;
  *(_QWORD *)(v0 + 8) = 15;
  *(_DWORD *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_23917C708(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  char *v6;
  unsigned int v7;
  uint64_t result;
  unsigned int v10;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v10 = 0;
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
        if (!(_DWORD)result)
          return result;
        v7 = v10;
      }
      else
      {
        v7 = *v6;
        *((_QWORD *)this + 1) = v6 + 1;
      }
      if (v7 < 7 || v7 == 15)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v7;
      }
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_23917C828(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_23917C844(uint64_t a1)
{
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;

  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v3 & 0x80000000) != 0)
    {
      result = 11;
    }
    else if (v3 >= 0x80)
    {
      result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      result = 2;
    }
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_23917C89C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73698, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239171DE8(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917C904()
{
  return 1;
}

_QWORD *sub_23917C90C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetAssistanceSignalEnvironment");
}

void sub_23917C91C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A729A0;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917C954(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917C91C(a1);
  JUMPOUT(0x23B838844);
}

double sub_23917C978()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A729A0;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_QWORD *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_23917C9BC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  uint64_t result;
  _BYTE *v12;
  _BYTE *v13;
  unint64_t v14;

  v4 = (unint64_t *)(a1 + 8);
  while (2)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)this + 1) = v10;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 17)
        {
          *((_QWORD *)this + 1) = v10 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_18;
LABEL_26:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 2u;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 != 25)
          continue;
        *((_QWORD *)this + 1) = v12 + 1;
LABEL_30:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 24) = v14;
        *(_DWORD *)(a1 + 44) |= 4u;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 >= *((_QWORD *)this + 2) || *v13 != 33)
          continue;
        *((_QWORD *)this + 1) = v13 + 1;
LABEL_34:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) != 0)
        {
          *(_QWORD *)(a1 + 32) = v14;
          *(_DWORD *)(a1 + 44) |= 8u;
          if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_30;
        goto LABEL_18;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_18;
        goto LABEL_34;
      default:
        v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_23917CC08(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  }
LABEL_8:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  return result;
}

uint64_t sub_23917CC9C(uint64_t a1)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *(_BYTE *)(a1 + 44);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(a1 + 44) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      v2 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

double sub_23917CD0C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A736B0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  return sub_239171EB8(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917CD74()
{
  return 1;
}

_QWORD *sub_23917CD7C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetAssistanceSpeedConstraint");
}

void sub_23917CD8C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72A18;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917CDC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917CD8C(a1);
  JUMPOUT(0x23B838844);
}

double sub_23917CDE8()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A72A18;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_23917CE28(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t result;
  _BYTE *v13;
  unint64_t v14;

  v4 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((_QWORD *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v10 = (char *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
            if (!(_DWORD)result)
              return result;
            v11 = (_BYTE *)*((_QWORD *)this + 1);
            v9 = *((_QWORD *)this + 2);
          }
          else
          {
            *v4 = *v10;
            v11 = v10 + 1;
            *((_QWORD *)this + 1) = v11;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 17)
          {
            *((_QWORD *)this + 1) = v11 + 1;
            goto LABEL_27;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if (v8 != 1)
          goto LABEL_19;
LABEL_27:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
          return 0;
        *(_QWORD *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 36) |= 2u;
        v13 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v13 < *((_QWORD *)this + 2) && *v13 == 25)
        {
          *((_QWORD *)this + 1) = v13 + 1;
          goto LABEL_31;
        }
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 1)
        goto LABEL_19;
LABEL_31:
      v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0)
        return 0;
      *(_QWORD *)(a1 + 24) = v14;
      *(_DWORD *)(a1 + 36) |= 4u;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_19:
    if (v8 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t sub_23917D010(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  return result;
}

uint64_t sub_23917D088(uint64_t a1)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *(_BYTE *)(a1 + 36);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      v2 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

double sub_23917D0EC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A736C8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  return sub_239171FC0(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917D154()
{
  return 1;
}

_QWORD *sub_23917D15C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetAssistanceAlongTrackVelocity");
}

void sub_23917D16C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72A90;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917D1A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917D16C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917D1C8()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A72A90;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_23917D204(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unint64_t *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;

  v4 = (unint64_t *)(a1 + 8);
  v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v11 = (char *)*((_QWORD *)this + 1);
      v9 = *((_QWORD *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (!(_DWORD)result)
          return result;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
      }
      else
      {
        *v4 = *v11;
        v12 = v11 + 1;
        *((_QWORD *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        v10 = v12 + 1;
        *((_QWORD *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v10;
          v13 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 24) |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23917D3A0(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), a2, a4);
  return result;
}

uint64_t sub_23917D3F8(uint64_t a1)
{
  uint64_t v2;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;
  int v4;

  if (*(_BYTE *)(a1 + 24))
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      if ((*(_DWORD *)(a1 + 24) & 2) == 0)
        goto LABEL_11;
    }
    else
    {
      v2 = 0;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0)
        goto LABEL_11;
    }
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v3 >= 0x80)
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    else
      v4 = 2;
    v2 = (v4 + v2);
  }
  else
  {
    v2 = 0;
  }
LABEL_11:
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_23917D470(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A736E0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239172F20(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917D4D8()
{
  return 1;
}

_QWORD *sub_23917D4E0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetThermalRiskState");
}

void sub_23917D4F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72B08;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917D528(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917D4F0(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917D54C()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A72B08;
  *(_BYTE *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

uint64_t sub_23917D58C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;
  unsigned int v16;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v15 = 0;
      v9 = (char *)*((_QWORD *)this + 1);
      v7 = *((_QWORD *)this + 2);
      if ((unint64_t)v9 >= v7 || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
        if (!(_DWORD)result)
          return result;
        v10 = v15;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
      }
      else
      {
        v10 = *v9;
        v11 = v9 + 1;
        *((_QWORD *)this + 1) = v11;
      }
      *(_BYTE *)(a1 + 8) = v10 != 0;
      *(_DWORD *)(a1 + 20) |= 1u;
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        v8 = v11 + 1;
        *((_QWORD *)this + 1) = v8;
LABEL_23:
        v16 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!(_DWORD)result)
            return result;
          v12 = v16;
          v13 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v12 = *v8;
          v13 = (unsigned __int8 *)(v8 + 1);
          *((_QWORD *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 12) = v12;
        *(_DWORD *)(a1 + 20) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v8 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23917D738(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_23917D790(unsigned int *a1)
{
  unsigned int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;

  v2 = a1[5];
  if ((_BYTE)v2)
  {
    v3 = 2 * (v2 & 1);
    if ((v2 & 2) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
      if ((v4 & 0x80000000) != 0)
      {
        v5 = 11;
      }
      else if (v4 >= 0x80)
      {
        v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      }
      else
      {
        v5 = 2;
      }
      v3 = (v5 + v3);
    }
  }
  else
  {
    v3 = 0;
  }
  a1[4] = v3;
  return v3;
}

void sub_23917D7FC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A736F8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23917269C(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917D864()
{
  return 1;
}

_QWORD *sub_23917D86C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetConfigSimulatorMode");
}

void sub_23917D87C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72B80;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917D8B4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917D87C(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_23917D8D8()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_250A72B80;
  return result;
}

uint64_t sub_23917D910(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;

  v4 = a1 + 2;
  v5 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v11 = (char *)*((_QWORD *)this + 1);
      v9 = *((_QWORD *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
        if (!(_DWORD)result)
          return result;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
      }
      else
      {
        *v4 = *v11;
        v12 = v11 + 1;
        *((_QWORD *)this + 1) = v12;
      }
      a1[5] |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        v10 = v12 + 1;
        *((_QWORD *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v10;
          v13 = (unsigned __int8 *)(v10 + 1);
          *((_QWORD *)this + 1) = v13;
        }
        a1[5] |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23917DAAC(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_23917DB04(uint64_t a1)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *(_BYTE *)(a1 + 20);
  if (v2)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_14;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      v3 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_14;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_23917DB90(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73710, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23917275C(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917DBF8()
{
  return 1;
}

_QWORD *sub_23917DC00@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetConfigEnableGnssConstellations");
}

void sub_23917DC10(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72BF8;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917DC48(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917DC10(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917DC6C()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A72BF8;
  *(_WORD *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_23917DCA8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;
  unsigned int v16;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v16 = 0;
      v9 = (char *)*((_QWORD *)this + 1);
      v7 = *((_QWORD *)this + 2);
      if ((unint64_t)v9 >= v7 || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!(_DWORD)result)
          return result;
        v10 = v16;
        v11 = (_BYTE *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
      }
      else
      {
        v10 = *v9;
        v11 = v9 + 1;
        *((_QWORD *)this + 1) = v11;
      }
      *(_BYTE *)(a1 + 8) = v10 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        v8 = v11 + 1;
        *((_QWORD *)this + 1) = v8;
LABEL_23:
        v15 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!(_DWORD)result)
            return result;
          v12 = v15;
          v13 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v12 = *v8;
          v13 = (unsigned __int8 *)(v8 + 1);
          *((_QWORD *)this + 1) = v13;
        }
        *(_BYTE *)(a1 + 9) = v12 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v8 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23917DE5C(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  return result;
}

uint64_t sub_23917DEB4(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;

  v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  if ((*(_DWORD *)(a1 + 16) & 2) != 0)
    v1 += 2;
  if (*(_DWORD *)(a1 + 16))
    v2 = v1;
  else
    v2 = 0;
  *(_DWORD *)(a1 + 12) = v2;
  return v2;
}

void sub_23917DEDC(uint64_t a1, _BYTE *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73728, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239172FE0(a1, lpsrc);
}

uint64_t sub_23917DF44()
{
  return 1;
}

_QWORD *sub_23917DF4C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetConfigRfBandEnable");
}

void sub_23917DF5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72C70;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917DF94(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917DF5C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917DFB8()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A72C70;
  *(_BYTE *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_23917DFF4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  unint64_t v6;
  char *v7;
  unsigned int v8;
  unsigned __int8 *v9;
  uint64_t result;
  unsigned int v11;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v11 = 0;
      v7 = (char *)*((_QWORD *)this + 1);
      v6 = *((_QWORD *)this + 2);
      if ((unint64_t)v7 >= v6 || *v7 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!(_DWORD)result)
          return result;
        v8 = v11;
        v9 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v6 = *((_QWORD *)this + 2);
      }
      else
      {
        v8 = *v7;
        v9 = (unsigned __int8 *)(v7 + 1);
        *((_QWORD *)this + 1) = v9;
      }
      *(_BYTE *)(a1 + 8) = v8 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v9 == (unsigned __int8 *)v6 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_23917E110(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_23917E12C(uint64_t a1)
{
  uint64_t v1;

  if (*(_DWORD *)(a1 + 16))
    v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  else
    v1 = 0;
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_23917E148(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73740, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23917281C(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917E1B0()
{
  return 1;
}

_QWORD *sub_23917E1B8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.SetConfigDutyCycling");
}

void sub_23917E1C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_250A72CE8;
  v2 = *((_QWORD *)a1 + 1);
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x23B838844](v2, 0x1012C40EC159624);
  }
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917E240(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917E1C8(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_23917E264()
{
  _QWORD *result;
  uint64_t v1;

  result = (_QWORD *)operator new();
  v1 = MEMORY[0x24BEDD958];
  *result = &off_250A72CE8;
  result[1] = v1;
  result[2] = 0;
  return result;
}

uint64_t sub_23917E2A4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  _QWORD *v7;
  uint64_t result;

  v4 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 10)
        break;
      *(_DWORD *)(a1 + 20) |= 1u;
      if (*(_QWORD *)(a1 + 8) == v4)
      {
        v7 = (_QWORD *)operator new();
        v7[1] = 0;
        v7[2] = 0;
        *v7 = 0;
        *(_QWORD *)(a1 + 8) = v7;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_23917E3C0(uint64_t result)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  return result;
}

uint64_t sub_23917E3DC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;

  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    v3 = *(_QWORD *)(a1 + 8);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = v4;
    v6 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v7 = *(unsigned __int8 *)(v3 + 23);
    else
      v7 = v6;
    if (v7 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7);
      v4 = *(unsigned __int8 *)(v3 + 23);
      v6 = *(_QWORD *)(v3 + 8);
      v8 = v9 + 1;
      v5 = *(_BYTE *)(v3 + 23);
    }
    else
    {
      v8 = 2;
    }
    if (v5 < 0)
      v4 = v6;
    result = (v8 + v4);
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_23917E458(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73758, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391728BC(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917E4C0()
{
  return 1;
}

_QWORD *sub_23917E4C8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.TerminationImminent");
}

void sub_23917E4D8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_250A72D60;
  v2 = *((_QWORD *)a1 + 1);
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x23B838844](v2, 0x1012C40EC159624);
  }
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917E550(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917E4D8(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_23917E574()
{
  _QWORD *result;
  uint64_t v1;

  result = (_QWORD *)operator new();
  v1 = MEMORY[0x24BEDD958];
  *result = &off_250A72D60;
  result[1] = v1;
  result[2] = 0;
  return result;
}

uint64_t sub_23917E5B4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  _QWORD *v7;
  uint64_t result;

  v4 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 10)
        break;
      *(_DWORD *)(a1 + 20) |= 1u;
      if (*(_QWORD *)(a1 + 8) == v4)
      {
        v7 = (_QWORD *)operator new();
        v7[1] = 0;
        v7[2] = 0;
        *v7 = 0;
        *(_QWORD *)(a1 + 8) = v7;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_23917E6D0(uint64_t result)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  return result;
}

uint64_t sub_23917E6EC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;

  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    v3 = *(_QWORD *)(a1 + 8);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = v4;
    v6 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v7 = *(unsigned __int8 *)(v3 + 23);
    else
      v7 = v6;
    if (v7 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7);
      v4 = *(unsigned __int8 *)(v3 + 23);
      v6 = *(_QWORD *)(v3 + 8);
      v8 = v9 + 1;
      v5 = *(_BYTE *)(v3 + 23);
    }
    else
    {
      v8 = 2;
    }
    if (v5 < 0)
      v4 = v6;
    result = (v8 + v4);
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_23917E768(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73770, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239172998(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917E7D0()
{
  return 1;
}

_QWORD *sub_23917E7D8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.ExitMessage");
}

void sub_23917E7E8(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  char v6;
  int v7;
  char v8;
  _BYTE v9[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v6 = *(_BYTE *)(a2 + 12);
      *(_DWORD *)(a1 + 20) |= 1u;
      *(_BYTE *)(a1 + 12) = v6;
      v4 = *(_DWORD *)(a2 + 20);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*(_BYTE *)(a2 + 20) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 2u;
    *(_DWORD *)(a1 + 8) = v7;
    v4 = *(_DWORD *)(a2 + 20);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *(_BYTE *)(a2 + 13);
    *(_DWORD *)(a1 + 20) |= 4u;
    *(_BYTE *)(a1 + 13) = v8;
    if ((*(_DWORD *)(a2 + 20) & 8) == 0)
      return;
LABEL_8:
    v5 = *(_BYTE *)(a2 + 14);
    *(_DWORD *)(a1 + 20) |= 8u;
    *(_BYTE *)(a1 + 14) = v5;
  }
}

void sub_23917E8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23917E8F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72DD8;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917E928(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917E8F0(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917E94C()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A72DD8;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 11) = 0;
  return result;
}

uint64_t sub_23917E98C(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
  {
    *(_DWORD *)(result + 11) = 0;
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23917E9A4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;

  while (2)
  {
    v4 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v21 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)this + 1) = v10;
LABEL_23:
          *(_BYTE *)(a1 + 12) = v9 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)this + 1) = v11;
            goto LABEL_26;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if ((_DWORD)result)
        {
          v9 = v21;
          v10 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v11 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
LABEL_26:
        v21 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v14 = v21;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v14 = *v11;
          v15 = v11 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 8) = v14;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24)
          continue;
        v12 = v15 + 1;
        *((_QWORD *)this + 1) = v12;
LABEL_34:
        v21 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v16 = v21;
          v17 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v16 = *v12;
          v17 = v12 + 1;
          *((_QWORD *)this + 1) = v17;
        }
        *(_BYTE *)(a1 + 13) = v16 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v17 >= v7 || *v17 != 32)
          continue;
        v13 = v17 + 1;
        *((_QWORD *)this + 1) = v13;
LABEL_42:
        v21 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v18 = v21;
          v19 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v18 = *v13;
          v19 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)this + 1) = v19;
        }
        *(_BYTE *)(a1 + 14) = v18 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if (v19 != (unsigned __int8 *)v7 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v12 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v13 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_42;
      default:
        v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_23917EC70(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 12), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 8), a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 14), a2, a4);
  }
LABEL_8:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 13), a2, a4);
  if ((*(_DWORD *)(v5 + 20) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 14), a2, a4);
  return result;
}

uint64_t sub_23917ED04(unsigned int *a1)
{
  unsigned int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  uint64_t result;
  unsigned int v7;

  v2 = a1[5];
  if ((_BYTE)v2)
  {
    v3 = 2 * (v2 & 1);
    if ((v2 & 2) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
      if ((v4 & 0x80000000) != 0)
      {
        v5 = 11;
      }
      else if (v4 >= 0x80)
      {
        v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        v2 = a1[5];
      }
      else
      {
        v5 = 2;
      }
      v3 += v5;
    }
    v7 = v3 + 2;
    if ((v2 & 4) == 0)
      v7 = v3;
    if ((v2 & 8) != 0)
      result = v7 + 2;
    else
      result = v7;
  }
  else
  {
    result = 0;
  }
  a1[4] = result;
  return result;
}

void sub_23917ED88(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73788, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23917E7E8(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917EDF0()
{
  return 1;
}

_QWORD *sub_23917EDF8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.RecoveryStatistics.RecoveryStatus");
}

void sub_23917EE08(uint64_t a1, uint64_t a2)
{
  int v4;
  std::string *v5;
  const std::string *v6;
  std::string *v7;
  int v8;
  const std::string *v9;
  std::string *v10;
  _BYTE v11[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v4)
  {
    v5 = (std::string *)MEMORY[0x24BEDD958];
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v6 = *(const std::string **)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      v7 = *(std::string **)(a1 + 8);
      if (v7 == v5)
      {
        v7 = (std::string *)operator new();
        v7->__r_.__value_.__l.__size_ = 0;
        v7->__r_.__value_.__r.__words[2] = 0;
        v7->__r_.__value_.__r.__words[0] = 0;
        *(_QWORD *)(a1 + 8) = v7;
      }
      std::string::operator=(v7, v6);
      v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_12;
      }
    }
    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0)
      return;
LABEL_12:
    v9 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    v10 = *(std::string **)(a1 + 16);
    if (v10 == v5)
    {
      v10 = (std::string *)operator new();
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      *(_QWORD *)(a1 + 16) = v10;
    }
    std::string::operator=(v10, v9);
  }
}

void sub_23917EF50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23917EF68(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)a1 = &off_250A72E50;
  v2 = *((_QWORD *)a1 + 1);
  v3 = MEMORY[0x24BEDD958];
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x23B838844](v2, 0x1012C40EC159624);
  }
  v5 = *((_QWORD *)a1 + 2);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    MEMORY[0x23B838844](v5, 0x1012C40EC159624);
  }
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917F020(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917EF68(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917F044()
{
  uint64_t result;
  uint64_t v1;

  result = operator new();
  v1 = MEMORY[0x24BEDD958];
  *(_QWORD *)result = &off_250A72E50;
  *(_QWORD *)(result + 8) = v1;
  *(_QWORD *)(result + 16) = v1;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_23917F088(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(result + 32))
  {
    v1 = MEMORY[0x24BEDD958];
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      v2 = *(_QWORD *)(result + 8);
      if (v2 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((*(_BYTE *)(result + 32) & 4) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3 != v1)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_23917F108(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  int v9;
  _QWORD *v10;
  uint64_t result;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  unsigned int v15;
  _BYTE *v16;
  _QWORD *v17;
  unsigned int v18;

  v4 = MEMORY[0x24BEDD958];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((_QWORD *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if (v8 != 2)
            goto LABEL_25;
          *(_DWORD *)(a1 + 32) |= 1u;
          if (*(_QWORD *)(a1 + 8) == v4)
          {
            v10 = (_QWORD *)operator new();
            v10[1] = 0;
            v10[2] = 0;
            *v10 = 0;
            *(_QWORD *)(a1 + 8) = v10;
          }
          result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!(_DWORD)result)
            return result;
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
          if ((unint64_t)v13 < v12 && *v13 == 16)
          {
            v14 = v13 + 1;
            *((_QWORD *)this + 1) = v14;
            goto LABEL_21;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v14 = (char *)*((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2);
LABEL_21:
        v18 = 0;
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
          if (!(_DWORD)result)
            return result;
          v15 = v18;
          v16 = (_BYTE *)*((_QWORD *)this + 1);
          v12 = *((_QWORD *)this + 2);
        }
        else
        {
          v15 = *v14;
          v16 = v14 + 1;
          *((_QWORD *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 24) = v15;
        v9 = *(_DWORD *)(a1 + 32) | 2;
        *(_DWORD *)(a1 + 32) = v9;
        if ((unint64_t)v16 < v12 && *v16 == 26)
        {
          *((_QWORD *)this + 1) = v16 + 1;
          goto LABEL_33;
        }
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_25;
      v9 = *(_DWORD *)(a1 + 32);
LABEL_33:
      *(_DWORD *)(a1 + 32) = v9 | 4;
      if (*(_QWORD *)(a1 + 16) == v4)
      {
        v17 = (_QWORD *)operator new();
        v17[1] = 0;
        v17[2] = 0;
        *v17 = 0;
        *(_QWORD *)(a1 + 16) = v17;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_25:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_23917F344(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  return result;
}

uint64_t sub_23917F3BC(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  int v18;

  LOBYTE(v2) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_31;
  }
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 8);
    if ((v5 & 0x80u) == 0)
      v8 = *(unsigned __int8 *)(v4 + 23);
    else
      v8 = v7;
    if (v8 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v7 = *(_QWORD *)(v4 + 8);
      v9 = v10 + 1;
      v2 = *(_DWORD *)(a1 + 32);
      v6 = *(_BYTE *)(v4 + 23);
    }
    else
    {
      v9 = 2;
    }
    if (v6 < 0)
      v5 = v7;
    v3 = (v9 + v5);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0)
      goto LABEL_21;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v11 & 0x80000000) != 0)
  {
    v12 = 11;
  }
  else if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    v2 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    v12 = 2;
  }
  v3 = (v12 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v13 = *(_QWORD *)(a1 + 16);
    v14 = *(unsigned __int8 *)(v13 + 23);
    v15 = v14;
    v16 = *(_QWORD *)(v13 + 8);
    if ((v14 & 0x80u) == 0)
      v17 = *(unsigned __int8 *)(v13 + 23);
    else
      v17 = v16;
    if (v17 >= 0x80)
    {
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17);
      v14 = *(unsigned __int8 *)(v13 + 23);
      v16 = *(_QWORD *)(v13 + 8);
      v15 = *(_BYTE *)(v13 + 23);
    }
    else
    {
      v18 = 1;
    }
    if (v15 < 0)
      v14 = v16;
    v3 = (v3 + v18 + v14 + 1);
  }
LABEL_31:
  *(_DWORD *)(a1 + 28) = v3;
  return v3;
}

void sub_23917F4E0(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A737A0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23917EE08(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917F548()
{
  return 1;
}

_QWORD *sub_23917F550@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.RecoveryStatistics.RecoveryPoint");
}

void sub_23917F560(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_250A72EC8;
  sub_239169F68();
  if (qword_2542CF4E8 != a1)
  {
    v2 = *(_QWORD *)(a1 + 32);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  v3 = *(_DWORD *)(a1 + 20);
  if (v3 >= 1)
  {
    for (i = 0; i < v3; ++i)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
        v3 = *(_DWORD *)(a1 + 20);
      }
    }
  }
  v6 = *(_QWORD *)(a1 + 8);
  if (v6)
    MEMORY[0x23B838820](v6, 0x80C80B8603338);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_23917F610(uint64_t a1)
{
  sub_23917F560(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917F634()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A72EC8;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_23917F674(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  unsigned __int8 *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t result;
  unsigned int v30;
  unsigned int v31;

  v4 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
  v5 = MEMORY[0x24BEDD958];
  do
  {
    while (1)
    {
LABEL_2:
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if (v8 == 2)
      {
        while (1)
        {
          v11 = *(_DWORD *)(a1 + 20);
          v12 = *(int *)(a1 + 16);
          if ((int)v12 >= v11)
          {
            if (v11 == *(_DWORD *)(a1 + 24))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v11 = *(_DWORD *)(a1 + 20);
            }
            *(_DWORD *)(a1 + 20) = v11 + 1;
            v14 = operator new();
            *(_QWORD *)v14 = &off_250A72E50;
            *(_QWORD *)(v14 + 8) = v5;
            *(_QWORD *)(v14 + 16) = v5;
            *(_QWORD *)(v14 + 24) = 0;
            *(_DWORD *)(v14 + 32) = 0;
            v15 = *(_QWORD *)(a1 + 8);
            v16 = *(int *)(a1 + 16);
            *(_DWORD *)(a1 + 16) = v16 + 1;
            *(_QWORD *)(v15 + 8 * v16) = v14;
          }
          else
          {
            v13 = *(_QWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 16) = v12 + 1;
            v14 = *(_QWORD *)(v13 + 8 * v12);
          }
          v30 = 0;
          v17 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30))return 0;
          }
          else
          {
            v30 = *v17;
            *((_QWORD *)this + 1) = v17 + 1;
          }
          v18 = *((_DWORD *)this + 14);
          v19 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v18 + 1;
          if (v18 >= v19)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
          if (!sub_23917F108(v14, this) || !*((_BYTE *)this + 36))
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
          v20 = *((_DWORD *)this + 14);
          v21 = __OFSUB__(v20, 1);
          v22 = v20 - 1;
          if (v22 < 0 == v21)
            *((_DWORD *)this + 14) = v22;
          v23 = (unsigned __int8 *)*((_QWORD *)this + 1);
          if ((unint64_t)v23 >= *((_QWORD *)this + 2))
            goto LABEL_2;
          v24 = *v23;
          if (v24 != 10)
          {
            if (v24 != 18)
              goto LABEL_2;
            *((_QWORD *)this + 1) = v23 + 1;
            goto LABEL_10;
          }
          *((_QWORD *)this + 1) = v23 + 1;
        }
      }
LABEL_34:
      if (v8 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
    if (TagFallback >> 3 != 2)
    {
      v8 = TagFallback & 7;
      goto LABEL_34;
    }
    v8 = TagFallback & 7;
    if (v8 != 2)
      goto LABEL_34;
LABEL_10:
    *(_DWORD *)(a1 + 44) |= 2u;
    v9 = *(_QWORD *)(a1 + 32);
    if (!v9)
    {
      v9 = operator new();
      *(_QWORD *)v9 = &off_250A72DD8;
      *(_QWORD *)(v9 + 16) = 0;
      *(_DWORD *)(v9 + 8) = 0;
      *(_DWORD *)(v9 + 11) = 0;
      *(_QWORD *)(a1 + 32) = v9;
    }
    v31 = 0;
    v10 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))
        return 0;
    }
    else
    {
      v31 = *v10;
      *((_QWORD *)this + 1) = v10 + 1;
    }
    v25 = *((_DWORD *)this + 14);
    v26 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v25 + 1;
    if (v25 >= v26)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
    if (!sub_23917E9A4(v9, this) || !*((_BYTE *)this + 36))
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    v27 = *((_DWORD *)this + 14);
    v21 = __OFSUB__(v27, 1);
    v28 = v27 - 1;
    if (v28 < 0 == v21)
      *((_DWORD *)this + 14) = v28;
  }
  while (*((_QWORD *)this + 1) != *((_QWORD *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  result = 1;
  *((_BYTE *)this + 36) = 1;
  return result;
}

uint64_t sub_23917F9C4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(_BYTE *)(v5 + 44) & 2) != 0)
  {
    v7 = *(_QWORD *)(v5 + 32);
    if (!v7)
    {
      sub_239169F68();
      v7 = *(_QWORD *)(qword_2542CF4E8 + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_23917FA58(uint64_t a1)
{
  int v2;
  unsigned int *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  if ((*(_BYTE *)(a1 + 44) & 2) != 0)
  {
    v3 = *(unsigned int **)(a1 + 32);
    if (!v3)
    {
      sub_239169F68();
      v3 = *(unsigned int **)(qword_2542CF4E8 + 32);
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917ED04(v3);
    v5 = (int)v4;
    if (v4 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    else
      v6 = 1;
    v2 = v5 + v6 + 1;
  }
  else
  {
    v2 = 0;
  }
  v7 = *(_DWORD *)(a1 + 16);
  v8 = (v7 + v2);
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917F3BC(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v9));
      v11 = (int)v10;
      if (v10 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v12 = 1;
      v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 40) = v8;
  return v8;
}

void sub_23917FB28(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A737B8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23917768C(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917FB90()
{
  return 1;
}

_QWORD *sub_23917FB98@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.RecoveryStatistics");
}

void sub_23917FBA8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A72F40;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_23917FBE0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917FBA8(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23917FC04()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A72F40;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_23917FC3C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  char *v6;
  unsigned int v7;
  uint64_t result;
  unsigned int v9;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v9 = 0;
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
        if (!(_DWORD)result)
          return result;
        v7 = v9;
      }
      else
      {
        v7 = *v6;
        *((_QWORD *)this + 1) = v6 + 1;
      }
      if (v7 <= 4)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v7;
      }
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_23917FD58(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_23917FD74(uint64_t a1)
{
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;

  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v3 & 0x80000000) != 0)
    {
      result = 11;
    }
    else if (v3 >= 0x80)
    {
      result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      result = 2;
    }
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_23917FDCC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A737D0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239177874(a1, (uint64_t)lpsrc);
}

uint64_t sub_23917FE34()
{
  return 1;
}

_QWORD *sub_23917FE3C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.LtlInfoRequest");
}

void sub_23917FE4C(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  _BYTE v9[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_2391087A4(a1 + 4, a1[6] + v4);
    memcpy((void *)(*((_QWORD *)a1 + 2) + 4 * (int)a1[6]), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    a1[6] += *(_DWORD *)(a2 + 24);
  }
  v5 = *(_DWORD *)(a2 + 40);
  if (v5)
  {
    sub_2391087A4(a1 + 8, a1[10] + v5);
    memcpy((void *)(*((_QWORD *)a1 + 4) + 4 * (int)a1[10]), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 40));
    a1[10] += *(_DWORD *)(a2 + 40);
  }
  LOBYTE(v6) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      v7 = *(_DWORD *)(a2 + 8);
      a1[13] |= 1u;
      a1[2] = v7;
      v6 = *(_DWORD *)(a2 + 52);
    }
    if ((v6 & 2) != 0)
    {
      v8 = *(_DWORD *)(a2 + 12);
      a1[13] |= 2u;
      a1[3] = v8;
    }
  }
}

void sub_23917FF7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23917FF94(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a1 = &off_250A72FB8;
  sub_239169F68();
  v2 = *((_QWORD *)a1 + 4);
  if (v2)
    MEMORY[0x23B838820](v2, 0x1000C8052888210);
  v3 = *((_QWORD *)a1 + 2);
  if (v3)
    MEMORY[0x23B838820](v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239180004(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23917FF94(a1);
  JUMPOUT(0x23B838844);
}

double sub_239180028()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A72FB8;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  return result;
}

uint64_t sub_23918006C(uint64_t result)
{
  if (*(_BYTE *)(result + 52))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_239180088(unsigned int *a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  _DWORD *v4;
  _DWORD *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t result;
  char *v17;
  int v18;
  unsigned int v19;
  signed int v20;
  uint64_t v21;
  int v22;
  int v23;
  _BYTE *v24;
  unint64_t v25;
  unsigned int v26;
  signed int v27;
  uint64_t v28;
  signed int v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  int v33;
  _BYTE *v34;
  unint64_t v35;
  signed int v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  unsigned int v41[12];

  v4 = a1 + 8;
  v5 = a1 + 4;
  v39 = a1 + 2;
  v6 = a1 + 3;
LABEL_2:
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = (char *)*((_QWORD *)this + 2);
        if (v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v39);
          if (!(_DWORD)result)
            return result;
          v12 = (char *)*((_QWORD *)this + 1);
          v10 = (char *)*((_QWORD *)this + 2);
        }
        else
        {
          *v39 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)this + 1) = v12;
        }
        a1[13] |= 1u;
        if (v12 < v10 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)this + 1) = v13;
          goto LABEL_33;
        }
        continue;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v13 = (char *)*((_QWORD *)this + 1);
        v10 = (char *)*((_QWORD *)this + 2);
LABEL_33:
        if (v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v17 = (char *)*((_QWORD *)this + 1);
          v10 = (char *)*((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v13;
          v17 = v13 + 1;
          *((_QWORD *)this + 1) = v17;
        }
        a1[13] |= 2u;
        if (v17 >= v10)
          continue;
        v18 = *v17;
        goto LABEL_61;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v14 = (char *)*((_QWORD *)this + 1);
            v10 = (char *)*((_QWORD *)this + 2);
            goto LABEL_40;
          }
          goto LABEL_21;
        }
        result = sub_2391805B8(this, v5);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v17 = (char *)*((_QWORD *)this + 1);
          v10 = (char *)*((_QWORD *)this + 2);
          if (v17 >= v10)
            goto LABEL_2;
          v18 = *v17;
          if (v18 == 32)
            goto LABEL_82;
LABEL_61:
          if (v18 != 24)
            goto LABEL_2;
          v14 = v17 + 1;
          *((_QWORD *)this + 1) = v14;
LABEL_40:
          v41[0] = 0;
          if (v14 >= v10 || *v14 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
            if (!(_DWORD)result)
              return result;
            v19 = v41[0];
          }
          else
          {
            v19 = *v14;
            *((_QWORD *)this + 1) = v14 + 1;
          }
          v20 = a1[6];
          if (v20 == a1[7])
          {
            sub_2391087A4(v5, v20 + 1);
            v20 = a1[6];
          }
          v21 = *((_QWORD *)a1 + 2);
          a1[6] = v20 + 1;
          *(_DWORD *)(v21 + 4 * v20) = v19;
          v22 = a1[7] - a1[6];
          if (v22 >= 1)
          {
            v23 = v22 + 1;
            do
            {
              v24 = (_BYTE *)*((_QWORD *)this + 1);
              v25 = *((_QWORD *)this + 2);
              if ((unint64_t)v24 >= v25 || *v24 != 24)
                break;
              *((_QWORD *)this + 1) = v24 + 1;
              v41[0] = 0;
              if ((unint64_t)(v24 + 1) >= v25 || (char)v24[1] < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
                if (!(_DWORD)result)
                  return result;
                v26 = v41[0];
              }
              else
              {
                v26 = v24[1];
                *((_QWORD *)this + 1) = v24 + 2;
              }
              v27 = a1[6];
              if (v27 >= (int)a1[7])
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v41);
                v27 = a1[6];
              }
              v28 = *((_QWORD *)a1 + 2);
              a1[6] = v27 + 1;
              *(_DWORD *)(v28 + 4 * v27) = v26;
              --v23;
            }
            while (v23 > 1);
          }
        }
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
        {
          result = sub_2391385BC(this, v4);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v17 = (char *)*((_QWORD *)this + 1);
            v10 = (char *)*((_QWORD *)this + 2);
            if (v17 >= v10 || *v17 != 32)
              break;
LABEL_82:
            v15 = v17 + 1;
            *((_QWORD *)this + 1) = v15;
LABEL_63:
            v40 = 0;
            if (v15 >= v10 || *v15 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40))return 0;
            }
            else
            {
              v40 = *v15;
              *((_QWORD *)this + 1) = v15 + 1;
            }
            v29 = a1[10];
            if (v29 == a1[11])
            {
              sub_2391087A4(v4, v29 + 1);
              v29 = a1[10];
            }
            v30 = v40;
            v31 = *((_QWORD *)a1 + 4);
            a1[10] = v29 + 1;
            *(_DWORD *)(v31 + 4 * v29) = v30;
            v32 = a1[11] - a1[10];
            if (v32 >= 1)
            {
              v33 = v32 + 1;
              do
              {
                v34 = (_BYTE *)*((_QWORD *)this + 1);
                v35 = *((_QWORD *)this + 2);
                if ((unint64_t)v34 >= v35 || *v34 != 32)
                  break;
                *((_QWORD *)this + 1) = v34 + 1;
                if ((unint64_t)(v34 + 1) >= v35 || (char)v34[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40))return 0;
                }
                else
                {
                  v40 = v34[1];
                  *((_QWORD *)this + 1) = v34 + 2;
                }
                v36 = a1[10];
                if (v36 >= (int)a1[11])
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v41);
                  v36 = a1[10];
                }
                v37 = v40;
                v38 = *((_QWORD *)a1 + 4);
                a1[10] = v36 + 1;
                *(_DWORD *)(v38 + 4 * v36) = v37;
                --v33;
              }
              while (v33 > 1);
            }
          }
          if (v17 == v10 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            result = 1;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v15 = (char *)*((_QWORD *)this + 1);
          v10 = (char *)*((_QWORD *)this + 2);
          goto LABEL_63;
        }
LABEL_21:
        if (v9 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      default:
        v9 = TagFallback & 7;
        goto LABEL_21;
    }
  }
}

void sub_239180598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2391805B8(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  uint64_t result;
  char *v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;

  v10 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v10 = *v4;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v11 = 0;
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!(_DWORD)result)
          return result;
        v7 = v11;
      }
      else
      {
        v7 = *v6;
        *((_QWORD *)this + 1) = v6 + 1;
      }
      v8 = a2[2];
      if (v8 == a2[3])
      {
        sub_2391087A4(a2, v8 + 1);
        v8 = a2[2];
      }
      v9 = *(_QWORD *)a2;
      a2[2] = v8 + 1;
      *(_DWORD *)(v9 + 4 * v8) = v7;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t sub_2391806CC(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = result;
  v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
  }
  if ((v6 & 2) != 0)
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(*(_QWORD *)(v5 + 16) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v8 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(*(_QWORD *)(v5 + 32) + 4 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 40));
  }
  return result;
}

uint64_t sub_23918078C(uint64_t a1)
{
  char v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  uint64_t result;

  v2 = *(_BYTE *)(a1 + 52);
  if (!v2)
  {
    v3 = 0;
    goto LABEL_14;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*(_DWORD *)(a1 + 52) & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v5 >= 0x80)
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  else
    v6 = 2;
  v3 += v6;
LABEL_14:
  v7 = *(_DWORD *)(a1 + 24);
  if (v7 < 1)
  {
    v9 = 0;
  }
  else
  {
    v8 = 0;
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 16)
                                                                                             + 4 * v8);
      if ((v10 & 0x80000000) != 0)
      {
        v11 = 10;
      }
      else if (v10 >= 0x80)
      {
        v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        v7 = *(_DWORD *)(a1 + 24);
      }
      else
      {
        v11 = 1;
      }
      v9 += v11;
      ++v8;
    }
    while (v8 < v7);
  }
  v12 = *(_DWORD *)(a1 + 40);
  if (v12 < 1)
  {
    v14 = 0;
  }
  else
  {
    v13 = 0;
    v14 = 0;
    do
    {
      v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 32)
                                                                                             + 4 * v13);
      if (v15 >= 0x80)
      {
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
        v12 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        v16 = 1;
      }
      v14 += v16;
      ++v13;
    }
    while (v13 < v12);
  }
  result = (v9 + v3 + v12 + v7 + v14);
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_2391808D8(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A737E8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23917FE4C(a1, (uint64_t)lpsrc);
}

uint64_t sub_239180940()
{
  return 1;
}

_QWORD *sub_239180948@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.LtlInfo.LtlLutParams");
}

void sub_239180958(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  _BYTE v8[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    sub_2391087A4(a1 + 2, a1[4] + v4);
    memcpy((void *)(*((_QWORD *)a1 + 1) + 4 * (int)a1[4]), *(const void **)(a2 + 8), 4 * *(int *)(a2 + 16));
    a1[4] += *(_DWORD *)(a2 + 16);
  }
  v5 = *(_DWORD *)(a2 + 36);
  if ((v5 & 0x1FE) != 0)
  {
    if ((v5 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 24);
      a1[9] |= 2u;
      a1[6] = v6;
      v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 4) != 0)
    {
      v7 = *(_DWORD *)(a2 + 28);
      a1[9] |= 4u;
      a1[7] = v7;
    }
  }
}

void sub_239180A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239180A60(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_250A73030;
  sub_239169F68();
  v2 = *((_QWORD *)a1 + 1);
  if (v2)
    MEMORY[0x23B838820](v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239180AB4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239180A60(a1);
  JUMPOUT(0x23B838844);
}

double sub_239180AD8()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A73030;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_239180B18(uint64_t result)
{
  if ((*(_WORD *)(result + 36) & 0x1FE) != 0)
    *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_239180B34(_DWORD *a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  _DWORD *v4;
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  _BYTE *v20;
  unint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  int v26;
  _BYTE *v27;
  unsigned __int8 *v28;
  uint64_t result;
  unsigned int v30[12];

  v4 = a1 + 2;
  v5 = a1 + 6;
  v6 = a1 + 7;
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        v7 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            v13 = (char *)*((_QWORD *)this + 1);
            v11 = *((_QWORD *)this + 2);
            goto LABEL_23;
          }
          goto LABEL_18;
        }
        result = sub_2391805B8(this, v4);
        if (!(_DWORD)result)
          return result;
        while (1)
        {
          v25 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
          if ((unint64_t)v25 >= v11)
            break;
          v26 = *v25;
          if (v26 == 16)
          {
            v14 = (char *)(v25 + 1);
            *((_QWORD *)this + 1) = v14;
            goto LABEL_47;
          }
          if (v26 != 8)
            goto LABEL_2;
          v13 = (char *)(v25 + 1);
          *((_QWORD *)this + 1) = v13;
LABEL_23:
          v30[0] = 0;
          if ((unint64_t)v13 >= v11 || *v13 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v30);
            if (!(_DWORD)result)
              return result;
            v15 = v30[0];
          }
          else
          {
            v15 = *v13;
            *((_QWORD *)this + 1) = v13 + 1;
          }
          v16 = a1[4];
          if (v16 == a1[5])
          {
            sub_2391087A4(v4, v16 + 1);
            v16 = a1[4];
          }
          v17 = *((_QWORD *)a1 + 1);
          a1[4] = v16 + 1;
          *(_DWORD *)(v17 + 4 * v16) = v15;
          v18 = a1[5] - a1[4];
          if (v18 >= 1)
          {
            v19 = v18 + 1;
            do
            {
              v20 = (_BYTE *)*((_QWORD *)this + 1);
              v21 = *((_QWORD *)this + 2);
              if ((unint64_t)v20 >= v21 || *v20 != 8)
                break;
              *((_QWORD *)this + 1) = v20 + 1;
              v30[0] = 0;
              if ((unint64_t)(v20 + 1) >= v21 || (char)v20[1] < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v30);
                if (!(_DWORD)result)
                  return result;
                v22 = v30[0];
              }
              else
              {
                v22 = v20[1];
                *((_QWORD *)this + 1) = v20 + 2;
              }
              v23 = a1[4];
              if (v23 >= a1[5])
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v30);
                v23 = a1[4];
              }
              v24 = *((_QWORD *)a1 + 1);
              a1[4] = v23 + 1;
              *(_DWORD *)(v24 + 4 * v23) = v22;
              --v19;
            }
            while (v19 > 1);
          }
        }
      }
      if (v9 != 2)
        break;
      v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_18;
      v14 = (char *)*((_QWORD *)this + 1);
      v11 = *((_QWORD *)this + 2);
LABEL_47:
      if ((unint64_t)v14 >= v11 || *v14 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result)
          return result;
        v27 = (_BYTE *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
      }
      else
      {
        *v5 = *v14;
        v27 = v14 + 1;
        *((_QWORD *)this + 1) = v27;
      }
      a1[9] |= 2u;
      if ((unint64_t)v27 < v11 && *v27 == 24)
      {
        v12 = v27 + 1;
        *((_QWORD *)this + 1) = v12;
LABEL_55:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v28 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v11 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v12;
          v28 = (unsigned __int8 *)(v12 + 1);
          *((_QWORD *)this + 1) = v28;
        }
        a1[9] |= 4u;
        if (v28 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v12 = (char *)*((_QWORD *)this + 1);
        v11 = *((_QWORD *)this + 2);
        goto LABEL_55;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_18:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

void sub_239180EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239180EB8(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    v6 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(*(_QWORD *)(v5 + 8) + 4 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  v7 = *(_DWORD *)(v5 + 36);
  if ((v7 & 2) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), a2, a4);
    v7 = *(_DWORD *)(v5 + 36);
  }
  if ((v7 & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 28), a2, a4);
  return result;
}

uint64_t sub_239180F50(uint64_t a1)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  uint64_t result;

  v2 = *(_DWORD *)(a1 + 36);
  if ((v2 & 0x1FE) == 0)
  {
    v3 = 0;
    goto LABEL_14;
  }
  if ((v2 & 2) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*(_DWORD *)(a1 + 36) & 4) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 4) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((v2 & 4) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v5 >= 0x80)
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  else
    v6 = 2;
  v3 += v6;
LABEL_14:
  v7 = *(_DWORD *)(a1 + 16);
  if (v7 < 1)
  {
    v9 = 0;
  }
  else
  {
    v8 = 0;
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(_QWORD *)(a1 + 8)
                                                                                             + 4 * v8);
      if ((v10 & 0x80000000) != 0)
      {
        v11 = 10;
      }
      else if (v10 >= 0x80)
      {
        v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        v7 = *(_DWORD *)(a1 + 16);
      }
      else
      {
        v11 = 1;
      }
      v9 += v11;
      ++v8;
    }
    while (v8 < v7);
  }
  result = (v9 + v3 + v7);
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

void sub_239181044(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73800, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239180958(a1, (uint64_t)lpsrc);
}

uint64_t sub_2391810AC()
{
  return 1;
}

_QWORD *sub_2391810B4@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.LtlInfo.LtlCurrentSrcCalibData");
}

void sub_2391810C4(_DWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  _BYTE v7[48];

  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_23918116C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_239181184(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A730A8;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_2391811BC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239181184(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_2391811E0()
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_250A730A8;
  return result;
}

uint64_t sub_239181218(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
    *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_23918122C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = a1 + 3;
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)this + 1);
      v8 = *((_QWORD *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
        v12 = (_BYTE *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
      }
      else
      {
        v11 = *v10;
        v12 = v10 + 1;
        *((_QWORD *)this + 1) = v12;
      }
      a1[2] = v11;
      a1[5] |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)this + 1) = v9;
LABEL_24:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)this + 1) = v13;
        }
        a1[5] |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_2391813D4(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  return result;
}

uint64_t sub_23918142C(uint64_t a1)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *(_BYTE *)(a1 + 20);
  if (v2)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0)
          goto LABEL_17;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      v3 = 0;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0)
        goto LABEL_17;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_17:
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_2391814C8(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73818, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391810C4(a1, (uint64_t)lpsrc);
}

uint64_t sub_239181530()
{
  return 1;
}

_QWORD *sub_239181538@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.LtlInfo.LtlRacPmicAdcPreCalData");
}

void sub_239181548(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v13;
  int v14;
  int v15;
  _BYTE v16[48];

  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 8) = v7;
    v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(_DWORD *)(a1 + 12) = v8;
  v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  v9 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_DWORD *)(a1 + 16) = v9;
  v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  v10 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(_DWORD *)(a1 + 20) = v10;
  v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_24:
    v12 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v12;
    v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  v11 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(_DWORD *)(a1 + 24) = v11;
  v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x20) != 0)
    goto LABEL_24;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_25:
  v13 = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 0x40u;
  *(_BYTE *)(a1 + 32) = v13;
  v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 56) |= 0x80u;
    *(_DWORD *)(a1 + 36) = v5;
    v4 = *(_DWORD *)(a2 + 56);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v14 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 56) |= 0x100u;
    *(_DWORD *)(a1 + 40) = v14;
    v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        return;
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 56) |= 0x200u;
  *(_DWORD *)(a1 + 44) = v15;
  if ((*(_DWORD *)(a2 + 56) & 0x400) == 0)
    return;
LABEL_17:
  v6 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) |= 0x400u;
  *(_DWORD *)(a1 + 48) = v6;
}

void sub_239181724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_23918173C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A73120;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239181774(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23918173C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_239181798()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A73120;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = 0;
  *(_QWORD *)(result + 36) = 0;
  *(_QWORD *)(result + 52) = 0;
  *(_QWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_2391817E0(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 56);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 36) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_DWORD *)(result + 48) = 0;
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_239181814(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  unsigned int v12;
  _BYTE *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  unsigned __int8 *v40;
  uint64_t result;
  unsigned int v42;

  v4 = (unsigned int *)(a1 + 40);
  v5 = (unsigned int *)(a1 + 44);
  v6 = (unsigned int *)(a1 + 48);
  while (2)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v42 = 0;
        v11 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          v12 = *v11;
          v13 = v11 + 1;
          *((_QWORD *)this + 1) = v13;
LABEL_38:
          *(_DWORD *)(a1 + 8) = v12;
          *(_DWORD *)(a1 + 56) |= 1u;
          if ((unint64_t)v13 < v10 && *v13 == 16)
          {
            v14 = v13 + 1;
            *((_QWORD *)this + 1) = v14;
            goto LABEL_41;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
        if ((_DWORD)result)
        {
          v12 = v42;
          v13 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v14 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_41:
        v42 = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!(_DWORD)result)
            return result;
          v24 = v42;
          v25 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v24 = *v14;
          v25 = v14 + 1;
          *((_QWORD *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 12) = v24;
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v25 >= v10 || *v25 != 24)
          continue;
        v15 = v25 + 1;
        *((_QWORD *)this + 1) = v15;
LABEL_49:
        v42 = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!(_DWORD)result)
            return result;
          v26 = v42;
          v27 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v26 = *v15;
          v27 = v15 + 1;
          *((_QWORD *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 16) = v26;
        *(_DWORD *)(a1 + 56) |= 4u;
        if ((unint64_t)v27 >= v10 || *v27 != 32)
          continue;
        v16 = v27 + 1;
        *((_QWORD *)this + 1) = v16;
LABEL_57:
        v42 = 0;
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!(_DWORD)result)
            return result;
          v28 = v42;
          v29 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v28 = *v16;
          v29 = v16 + 1;
          *((_QWORD *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 20) = v28;
        *(_DWORD *)(a1 + 56) |= 8u;
        if ((unint64_t)v29 >= v10 || *v29 != 40)
          continue;
        v17 = v29 + 1;
        *((_QWORD *)this + 1) = v17;
LABEL_65:
        v42 = 0;
        if ((unint64_t)v17 >= v10 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!(_DWORD)result)
            return result;
          v30 = v42;
          v31 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v30 = *v17;
          v31 = v17 + 1;
          *((_QWORD *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 24) = v30;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        if ((unint64_t)v31 >= v10 || *v31 != 48)
          continue;
        v18 = v31 + 1;
        *((_QWORD *)this + 1) = v18;
LABEL_73:
        v42 = 0;
        if ((unint64_t)v18 >= v10 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!(_DWORD)result)
            return result;
          v32 = v42;
          v33 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v32 = *v18;
          v33 = v18 + 1;
          *((_QWORD *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 28) = v32;
        *(_DWORD *)(a1 + 56) |= 0x20u;
        if ((unint64_t)v33 >= v10 || *v33 != 56)
          continue;
        v19 = v33 + 1;
        *((_QWORD *)this + 1) = v19;
LABEL_81:
        v42 = 0;
        if ((unint64_t)v19 >= v10 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!(_DWORD)result)
            return result;
          v34 = v42;
          v35 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v34 = *v19;
          v35 = v19 + 1;
          *((_QWORD *)this + 1) = v35;
        }
        *(_BYTE *)(a1 + 32) = v34 != 0;
        *(_DWORD *)(a1 + 56) |= 0x40u;
        if ((unint64_t)v35 >= v10 || *v35 != 64)
          continue;
        v20 = v35 + 1;
        *((_QWORD *)this + 1) = v20;
LABEL_89:
        v42 = 0;
        if ((unint64_t)v20 >= v10 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!(_DWORD)result)
            return result;
          v36 = v42;
          v37 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v36 = *v20;
          v37 = v20 + 1;
          *((_QWORD *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 36) = v36;
        *(_DWORD *)(a1 + 56) |= 0x80u;
        if ((unint64_t)v37 >= v10 || *v37 != 72)
          continue;
        v21 = v37 + 1;
        *((_QWORD *)this + 1) = v21;
LABEL_97:
        if ((unint64_t)v21 >= v10 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v4 = *v21;
          v38 = v21 + 1;
          *((_QWORD *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 56) |= 0x100u;
        if ((unint64_t)v38 >= v10 || *v38 != 80)
          continue;
        v22 = v38 + 1;
        *((_QWORD *)this + 1) = v22;
LABEL_105:
        if ((unint64_t)v22 >= v10 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v22;
          v39 = v22 + 1;
          *((_QWORD *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 56) |= 0x200u;
        if ((unint64_t)v39 >= v10 || *v39 != 88)
          continue;
        v23 = v39 + 1;
        *((_QWORD *)this + 1) = v23;
LABEL_113:
        if ((unint64_t)v23 >= v10 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result)
            return result;
          v40 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          *v6 = *v23;
          v40 = (unsigned __int8 *)(v23 + 1);
          *((_QWORD *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 56) |= 0x400u;
        if (v40 != (unsigned __int8 *)v10 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
          continue;
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v15 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_49;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v16 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_57;
      case 5u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v17 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_65;
      case 6u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v18 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_73;
      case 7u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v19 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_81;
      case 8u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v20 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_89;
      case 9u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_97;
      case 0xAu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v22 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_105;
      case 0xBu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v23 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
        goto LABEL_113;
      default:
        v9 = TagFallback & 7;
LABEL_32:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t sub_239181E14(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 56);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 24), a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 32), a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 36), a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 40), a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return result;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 48), a2, a4);
  }
LABEL_22:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 44), a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 48), a2, a4);
  return result;
}

uint64_t sub_239181F6C(unsigned int *a1)
{
  unsigned int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;

  v2 = a1[14];
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_57;
  }
  if ((v2 & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = a1[14];
  }
  else
  {
    v5 = 1;
  }
  LODWORD(v3) = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = a1[14];
    }
    else
    {
      v7 = 1;
    }
    LODWORD(v3) = v3 + v7 + 1;
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 10;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = a1[14];
    }
    else
    {
      v9 = 1;
    }
    LODWORD(v3) = v3 + v9 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if ((v10 & 0x80000000) != 0)
  {
    v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = a1[14];
  }
  else
  {
    v11 = 2;
  }
  LODWORD(v3) = v11 + v3;
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0)
      goto LABEL_47;
    goto LABEL_41;
  }
LABEL_35:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = a1[14];
  }
  else
  {
    v13 = 2;
  }
  LODWORD(v3) = v13 + v3;
  if ((v2 & 0x20) != 0)
  {
LABEL_41:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
    if ((v14 & 0x80000000) != 0)
    {
      v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
      v2 = a1[14];
    }
    else
    {
      v15 = 2;
    }
    LODWORD(v3) = v15 + v3;
  }
LABEL_47:
  if ((v2 & 0x40) != 0)
    v3 = (v3 + 2);
  else
    v3 = v3;
  if ((v2 & 0x80) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if ((v16 & 0x80000000) != 0)
    {
      v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      v2 = a1[14];
    }
    else
    {
      v17 = 2;
    }
    v3 = (v17 + v3);
  }
LABEL_57:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_74;
  if ((v2 & 0x100) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      v2 = a1[14];
    }
    else
    {
      v19 = 2;
    }
    v3 = (v19 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_60:
      if ((v2 & 0x400) == 0)
        goto LABEL_74;
      goto LABEL_70;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_60;
  }
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v20 >= 0x80)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    v2 = a1[14];
  }
  else
  {
    v21 = 2;
  }
  v3 = (v21 + v3);
  if ((v2 & 0x400) != 0)
  {
LABEL_70:
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
    if (v22 >= 0x80)
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    else
      v23 = 2;
    v3 = (v23 + v3);
  }
LABEL_74:
  a1[13] = v3;
  return v3;
}

void sub_2391821BC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73830, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239181548(a1, (uint64_t)lpsrc);
}

uint64_t sub_239182224()
{
  return 1;
}

_QWORD *sub_23918222C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.LtlInfo.LtlInitialParams");
}

void sub_23918223C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = &off_250A73198;
  sub_239169F68();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF508 != a1)
  {
    v2 = *((_QWORD *)a1 + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)a1 + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)a1 + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)a1 + 5);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_2391822D4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23918223C(a1);
  JUMPOUT(0x23B838844);
}

double sub_2391822F8()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  *(_QWORD *)v0 = &off_250A73198;
  *(_BYTE *)(v0 + 8) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 12) = 0u;
  *(_OWORD *)(v0 + 28) = 0u;
  *(_OWORD *)(v0 + 44) = 0u;
  return result;
}

uint64_t sub_239182340(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  uint64_t result;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  char *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;

  while (1)
  {
    v4 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v4 < *((_QWORD *)this + 2) && (*v4 & 0x80000000) == 0)
    {
      TagFallback = *v4;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v46 = 0;
        v8 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
          if (!(_DWORD)result)
            return result;
          v9 = v46;
          v10 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)this + 1) = v10;
        }
        *(_BYTE *)(a1 + 8) = v9 != 0;
        *(_DWORD *)(a1 + 56) |= 1u;
        if ((unint64_t)v10 < v7 && *v10 == 16)
        {
          v11 = v10 + 1;
          *((_QWORD *)this + 1) = v11;
          goto LABEL_31;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v11 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
LABEL_31:
        v46 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
          if (!(_DWORD)result)
            return result;
          v14 = v46;
          v15 = (_BYTE *)*((_QWORD *)this + 1);
          v7 = *((_QWORD *)this + 2);
        }
        else
        {
          v14 = *v11;
          v15 = v11 + 1;
          *((_QWORD *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 12) = v14;
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24)
          continue;
        v12 = v15 + 1;
        *((_QWORD *)this + 1) = v12;
LABEL_39:
        v46 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
          if (!(_DWORD)result)
            return result;
          v16 = v46;
        }
        else
        {
          v16 = *v12;
          *((_QWORD *)this + 1) = v12 + 1;
        }
        if (v16 <= 4)
        {
          *(_DWORD *)(a1 + 56) |= 4u;
          *(_DWORD *)(a1 + 48) = v16;
        }
        v17 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 != 34)
          continue;
        *((_QWORD *)this + 1) = v17 + 1;
LABEL_49:
        *(_DWORD *)(a1 + 56) |= 8u;
        v18 = *(_QWORD *)(a1 + 16);
        if (!v18)
        {
          v18 = operator new();
          *(_QWORD *)v18 = &off_250A73120;
          *(_QWORD *)(v18 + 8) = 0;
          *(_QWORD *)(v18 + 16) = 0;
          *(_QWORD *)(v18 + 24) = 0;
          *(_BYTE *)(v18 + 32) = 0;
          *(_QWORD *)(v18 + 36) = 0;
          *(_QWORD *)(v18 + 52) = 0;
          *(_QWORD *)(v18 + 44) = 0;
          *(_QWORD *)(a1 + 16) = v18;
        }
        v46 = 0;
        v19 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v19 >= *((_QWORD *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0;
        }
        else
        {
          v46 = *v19;
          *((_QWORD *)this + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)this + 14);
        v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239181814(v18, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v22 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)this + 14) = v24;
        v25 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v25 >= *((_QWORD *)this + 2) || *v25 != 42)
          continue;
        *((_QWORD *)this + 1) = v25 + 1;
LABEL_63:
        *(_DWORD *)(a1 + 56) |= 0x10u;
        v26 = *(_QWORD *)(a1 + 24);
        if (!v26)
        {
          v26 = operator new();
          *(_QWORD *)v26 = &off_250A72FB8;
          *(_OWORD *)(v26 + 8) = 0u;
          *(_OWORD *)(v26 + 24) = 0u;
          *(_OWORD *)(v26 + 40) = 0u;
          *(_QWORD *)(a1 + 24) = v26;
        }
        v46 = 0;
        v27 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v27 >= *((_QWORD *)this + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0;
        }
        else
        {
          v46 = *v27;
          *((_QWORD *)this + 1) = v27 + 1;
        }
        v28 = *((_DWORD *)this + 14);
        v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 >= v29)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239180088((unsigned int *)v26, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v30 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v30, 1);
        v31 = v30 - 1;
        if (v31 < 0 == v23)
          *((_DWORD *)this + 14) = v31;
        v32 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 != 50)
          continue;
        *((_QWORD *)this + 1) = v32 + 1;
LABEL_77:
        *(_DWORD *)(a1 + 56) |= 0x20u;
        v33 = *(_QWORD *)(a1 + 32);
        if (!v33)
        {
          v33 = operator new();
          *(_QWORD *)v33 = &off_250A73030;
          *(_OWORD *)(v33 + 8) = 0u;
          *(_OWORD *)(v33 + 24) = 0u;
          *(_QWORD *)(a1 + 32) = v33;
        }
        v46 = 0;
        v34 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v34 >= *((_QWORD *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0;
        }
        else
        {
          v46 = *v34;
          *((_QWORD *)this + 1) = v34 + 1;
        }
        v35 = *((_DWORD *)this + 14);
        v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239180B34((_DWORD *)v33, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v37 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v37, 1);
        v38 = v37 - 1;
        if (v38 < 0 == v23)
          *((_DWORD *)this + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v39 >= *((_QWORD *)this + 2) || *v39 != 58)
          continue;
        *((_QWORD *)this + 1) = v39 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 56) |= 0x40u;
        v40 = *(_QWORD *)(a1 + 40);
        if (!v40)
        {
          v40 = operator new();
          *(_QWORD *)(v40 + 8) = 0;
          *(_QWORD *)(v40 + 16) = 0;
          *(_QWORD *)v40 = &off_250A730A8;
          *(_QWORD *)(a1 + 40) = v40;
        }
        v46 = 0;
        v41 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v41 >= *((_QWORD *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0;
        }
        else
        {
          v46 = *v41;
          *((_QWORD *)this + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)this + 14);
        v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23918122C((_DWORD *)v40, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v44 = *((_DWORD *)this + 14);
        v23 = __OFSUB__(v44, 1);
        v45 = v44 - 1;
        if (v45 < 0 == v23)
          *((_DWORD *)this + 14) = v45;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v12 = (char *)*((_QWORD *)this + 1);
        v7 = *((_QWORD *)this + 2);
        goto LABEL_39;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_49;
        goto LABEL_23;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_63;
        goto LABEL_23;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_77;
        goto LABEL_23;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_23;
        goto LABEL_91;
      default:
        v6 = TagFallback & 7;
LABEL_23:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_2391829E4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  v6 = *(_DWORD *)(result + 56);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_12:
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
    sub_239169F68();
    v7 = *(_QWORD *)(qword_2542CF508 + 16);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_15:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
  {
    sub_239169F68();
    v8 = *(_QWORD *)(qword_2542CF508 + 24);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return result;
    goto LABEL_21;
  }
LABEL_18:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
  {
    sub_239169F68();
    v9 = *(_QWORD *)(qword_2542CF508 + 32);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x40) != 0)
  {
LABEL_21:
    v10 = *(_QWORD *)(v5 + 40);
    if (!v10)
    {
      sub_239169F68();
      v10 = *(_QWORD *)(qword_2542CF508 + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  }
  return result;
}

uint64_t sub_239182B1C(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  unsigned int *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  uint64_t v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;

  v2 = *(_DWORD *)(a1 + 56);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_46;
  }
  v3 = 2 * (v2 & 1u);
  if ((v2 & 2) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v4 & 0x80000000) != 0)
    {
      v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      v5 = 2;
    }
    v3 = (v5 + v3);
    if ((v2 & 4) == 0)
    {
LABEL_4:
      if ((v2 & 8) == 0)
        goto LABEL_5;
      goto LABEL_22;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_4;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if ((v6 & 0x80000000) != 0)
  {
    v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    v2 = *(_DWORD *)(a1 + 56);
  }
  else
  {
    v7 = 2;
  }
  v3 = (v7 + v3);
  if ((v2 & 8) == 0)
  {
LABEL_5:
    if ((v2 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_28;
  }
LABEL_22:
  v8 = *(unsigned int **)(a1 + 16);
  if (!v8)
  {
    sub_239169F68();
    v8 = *(unsigned int **)(qword_2542CF508 + 16);
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239181F6C(v8);
  v10 = (int)v9;
  if (v9 >= 0x80)
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
  else
    v11 = 1;
  v3 = (v3 + v10 + v11 + 1);
  v2 = *(_DWORD *)(a1 + 56);
  if ((v2 & 0x10) == 0)
  {
LABEL_6:
    if ((v2 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_34;
  }
LABEL_28:
  v12 = *(_QWORD *)(a1 + 24);
  if (!v12)
  {
    sub_239169F68();
    v12 = *(_QWORD *)(qword_2542CF508 + 24);
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23918078C(v12);
  v14 = (int)v13;
  if (v13 >= 0x80)
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  else
    v15 = 1;
  v3 = (v3 + v14 + v15 + 1);
  v2 = *(_DWORD *)(a1 + 56);
  if ((v2 & 0x20) == 0)
  {
LABEL_7:
    if ((v2 & 0x40) == 0)
      goto LABEL_46;
    goto LABEL_40;
  }
LABEL_34:
  v16 = *(_QWORD *)(a1 + 32);
  if (!v16)
  {
    sub_239169F68();
    v16 = *(_QWORD *)(qword_2542CF508 + 32);
  }
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239180F50(v16);
  v18 = (int)v17;
  if (v17 >= 0x80)
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  else
    v19 = 1;
  v3 = (v3 + v18 + v19 + 1);
  if ((*(_DWORD *)(a1 + 56) & 0x40) != 0)
  {
LABEL_40:
    v20 = *(_QWORD *)(a1 + 40);
    if (!v20)
    {
      sub_239169F68();
      v20 = *(_QWORD *)(qword_2542CF508 + 40);
    }
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23918142C(v20);
    v22 = (int)v21;
    if (v21 >= 0x80)
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
    else
      v23 = 1;
    v3 = (v3 + v22 + v23 + 1);
  }
LABEL_46:
  *(_DWORD *)(a1 + 52) = v3;
  return v3;
}

void sub_239182D0C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73848, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239172A74(a1, (uint64_t)lpsrc);
}

uint64_t sub_239182D74()
{
  return 1;
}

_QWORD *sub_239182D7C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.LtlInfo");
}

void sub_239182D8C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A73210;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239182DC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239182D8C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_239182DE8()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A73210;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_239182E20(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  char *v6;
  unsigned int v7;
  uint64_t result;
  unsigned int v9;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v9 = 0;
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
        if (!(_DWORD)result)
          return result;
        v7 = v9;
      }
      else
      {
        v7 = *v6;
        *((_QWORD *)this + 1) = v6 + 1;
      }
      if (v7 <= 6)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v7;
      }
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_239182F3C(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_239182F58(uint64_t a1)
{
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;

  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v3 & 0x80000000) != 0)
    {
      result = 11;
    }
    else if (v3 >= 0x80)
    {
      result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      result = 2;
    }
  }
  else
  {
    result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_239182FB0(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73860, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239172E58(a1, (uint64_t)lpsrc);
}

uint64_t sub_239183018()
{
  return 1;
}

_QWORD *sub_239183020@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.CntinStatusMessage");
}

void sub_239183030(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A73288;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239183068(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239183030(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_23918308C()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A73288;
  *(_BYTE *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_2391830C8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  unint64_t v6;
  char *v7;
  unsigned int v8;
  unsigned __int8 *v9;
  uint64_t result;
  unsigned int v11;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((_QWORD *)this + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v11 = 0;
      v7 = (char *)*((_QWORD *)this + 1);
      v6 = *((_QWORD *)this + 2);
      if ((unint64_t)v7 >= v6 || *v7 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!(_DWORD)result)
          return result;
        v8 = v11;
        v9 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v6 = *((_QWORD *)this + 2);
      }
      else
      {
        v8 = *v7;
        v9 = (unsigned __int8 *)(v7 + 1);
        *((_QWORD *)this + 1) = v9;
      }
      *(_BYTE *)(a1 + 8) = v8 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v9 == (unsigned __int8 *)v6 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t sub_2391831E4(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  return result;
}

uint64_t sub_239183200(uint64_t a1)
{
  uint64_t v1;

  if (*(_DWORD *)(a1 + 16))
    v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  else
    v1 = 0;
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_23918321C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73878, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_23917793C(a1, (uint64_t)lpsrc);
}

uint64_t sub_239183284()
{
  return 1;
}

_QWORD *sub_23918328C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.CntinClockControl");
}

void sub_23918329C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A73300;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_2391832D4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23918329C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_2391832F8()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_250A73300;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_239183334(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  uint64_t result;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v21 = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v11 = v21;
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v11 = *v10;
          v12 = v10 + 1;
          *((_QWORD *)this + 1) = v12;
        }
        a1[2] = v11;
        a1[6] |= 1u;
        if ((unint64_t)v12 < v8 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)this + 1) = v13;
          goto LABEL_26;
        }
      }
      if (v6 != 2)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_18;
      v13 = (char *)*((_QWORD *)this + 1);
      v8 = *((_QWORD *)this + 2);
LABEL_26:
      v20 = 0;
      if ((unint64_t)v13 >= v8 || *v13 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
        if (!(_DWORD)result)
          return result;
        v14 = v20;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
      }
      else
      {
        v14 = *v13;
        v15 = v13 + 1;
        *((_QWORD *)this + 1) = v15;
      }
      a1[3] = v14;
      a1[6] |= 2u;
      if ((unint64_t)v15 < v8 && *v15 == 24)
      {
        v9 = v15 + 1;
        *((_QWORD *)this + 1) = v9;
LABEL_34:
        v19 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
          if (!(_DWORD)result)
            return result;
          v16 = v19;
          v17 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v16 = *v9;
          v17 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)this + 1) = v17;
        }
        a1[4] = v16;
        a1[6] |= 4u;
        if (v17 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v6 == 3)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        goto LABEL_34;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

unsigned int *sub_239183558(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = result;
  v6 = result[6];
  if ((v6 & 1) != 0)
  {
    result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    v6 = v5[6];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  if ((v5[6] & 4) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  return result;
}

uint64_t sub_2391835D0(uint64_t a1)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;

  LOBYTE(v2) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_26;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *(_DWORD *)(a1 + 24);
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0)
      goto LABEL_19;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_19:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    }
    else
    {
      v8 = 2;
    }
    v3 = (v8 + v3);
  }
LABEL_26:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_2391836AC(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A73890, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_2391779DC(a1, (uint64_t)lpsrc);
}

uint64_t sub_239183714()
{
  return 1;
}

_QWORD *sub_23918371C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.Exception");
}

void sub_23918372C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_250A73378;
  v2 = *((_QWORD *)a1 + 3);
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x23B838844](v2, 0x1012C40EC159624);
  }
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_2391837A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23918372C(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_2391837C8()
{
  _QWORD *result;
  uint64_t v1;

  result = (_QWORD *)operator new();
  v1 = MEMORY[0x24BEDD958];
  *result = &off_250A73378;
  result[1] = 0;
  result[2] = 0;
  result[3] = v1;
  result[4] = 0;
  return result;
}

uint64_t sub_23918380C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  int v9;
  unint64_t v10;
  _BYTE *v11;
  char *v12;
  unint64_t v13;
  _BYTE *v14;
  uint64_t result;
  _QWORD *v16;
  unint64_t v17;

  v4 = MEMORY[0x24BEDD958];
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v5 >= *((_QWORD *)this + 2) || *v5 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((_QWORD *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if (v8 != 1)
            goto LABEL_23;
          v17 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0)
            return 0;
          *(_QWORD *)(a1 + 8) = v17;
          *(_DWORD *)(a1 + 36) |= 1u;
          v11 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
          if ((unint64_t)v11 < v10 && *v11 == 16)
          {
            v12 = v11 + 1;
            *((_QWORD *)this + 1) = v12;
            goto LABEL_19;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v12 = (char *)*((_QWORD *)this + 1);
        v10 = *((_QWORD *)this + 2);
LABEL_19:
        v17 = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v17);
          if (!(_DWORD)result)
            return result;
          v13 = v17;
          v14 = (_BYTE *)*((_QWORD *)this + 1);
          v10 = *((_QWORD *)this + 2);
        }
        else
        {
          v13 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)this + 1) = v14;
        }
        *(_QWORD *)(a1 + 16) = v13;
        v9 = *(_DWORD *)(a1 + 36) | 2;
        *(_DWORD *)(a1 + 36) = v9;
        if ((unint64_t)v14 < v10 && *v14 == 26)
        {
          *((_QWORD *)this + 1) = v14 + 1;
          goto LABEL_31;
        }
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_23;
      v9 = *(_DWORD *)(a1 + 36);
LABEL_31:
      *(_DWORD *)(a1 + 36) = v9 | 4;
      if (*(_QWORD *)(a1 + 24) == v4)
      {
        v16 = (_QWORD *)operator new();
        v16[1] = 0;
        v16[2] = 0;
        *v16 = 0;
        *(_QWORD *)(a1 + 24) = v16;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_23:
    if (v8 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t sub_239183A24(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  return result;
}

uint64_t sub_239183A9C(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;

  v2 = *(unsigned __int8 *)(a1 + 36);
  if (*(_BYTE *)(a1 + 36))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16))
         + 1;
      v2 = *(_DWORD *)(a1 + 36);
    }
    if ((v2 & 4) != 0)
    {
      v4 = *(_QWORD *)(a1 + 24);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v6 = v5;
      v7 = *(_QWORD *)(v4 + 8);
      if ((v5 & 0x80u) == 0)
        v8 = *(unsigned __int8 *)(v4 + 23);
      else
        v8 = v7;
      if (v8 >= 0x80)
      {
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
        v5 = *(unsigned __int8 *)(v4 + 23);
        v7 = *(_QWORD *)(v4 + 8);
        v6 = *(_BYTE *)(v4 + 23);
      }
      else
      {
        v9 = 1;
      }
      if (v6 < 0)
        v5 = v7;
      v3 = (v3 + v9 + v5 + 1);
    }
  }
  else
  {
    v3 = 0;
  }
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

void sub_239183B50(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A738A8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239177AC4(a1, (uint64_t)lpsrc);
}

uint64_t sub_239183BB8()
{
  return 1;
}

_QWORD *sub_239183BC0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.AskBasebandReset");
}

void sub_239183BD0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_250A733F0;
  v2 = *((_QWORD *)a1 + 2);
  if (v2 != MEMORY[0x24BEDD958] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x23B838844](v2, 0x1012C40EC159624);
  }
  sub_239169F68();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_2542CF550 != a1)
  {
    v4 = *((_QWORD *)a1 + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)a1 + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)a1 + 5);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239183C94(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_239183BD0(a1);
  JUMPOUT(0x23B838844);
}

_QWORD *sub_239183CB8()
{
  _QWORD *result;
  uint64_t v1;

  result = (_QWORD *)operator new();
  *result = &off_250A733F0;
  result[1] = 0;
  v1 = MEMORY[0x24BEDD958];
  result[5] = 0;
  result[6] = 0;
  result[2] = v1;
  result[3] = 0;
  result[4] = 0;
  return result;
}

uint64_t sub_239183D00(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v1 = result;
  v2 = *(_BYTE *)(result + 52);
  if (v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(result + 16);
      if (v3 != MEMORY[0x24BEDD958])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    v4 = *(_DWORD *)(result + 52);
    if ((v4 & 4) != 0)
    {
      result = *(_QWORD *)(result + 24);
      if (result)
      {
        result = sub_23916BA48(result);
        v4 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v4 & 8) != 0)
    {
      v5 = *(_QWORD *)(v1 + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 28))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
        v4 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v4 & 0x10) != 0)
    {
      result = *(_QWORD *)(v1 + 40);
      if (result)
        result = sub_239174674(result);
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_239183DAC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4;
  unint64_t *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  int v12;
  uint64_t result;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  _BYTE *v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;

  v4 = MEMORY[0x24BEDD958];
  v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 < *((_QWORD *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v10 = (char *)*((_QWORD *)this + 1);
        v9 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)this + 1);
          v9 = *((_QWORD *)this + 2);
        }
        else
        {
          *v5 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)this + 1) = v11;
        }
        v12 = *(_DWORD *)(a1 + 52) | 1;
        *(_DWORD *)(a1 + 52) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((_QWORD *)this + 1) = v11 + 1;
          goto LABEL_28;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
        v12 = *(_DWORD *)(a1 + 52);
LABEL_28:
        *(_DWORD *)(a1 + 52) = v12 | 2;
        if (*(_QWORD *)(a1 + 16) == v4)
        {
          v14 = (_QWORD *)operator new();
          v14[1] = 0;
          v14[2] = 0;
          *v14 = 0;
          *(_QWORD *)(a1 + 16) = v14;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v15 >= *((_QWORD *)this + 2) || *v15 != 42)
          continue;
        *((_QWORD *)this + 1) = v15 + 1;
LABEL_34:
        *(_DWORD *)(a1 + 52) |= 4u;
        v16 = *(_QWORD *)(a1 + 24);
        if (!v16)
        {
          v16 = operator new();
          *(_QWORD *)v16 = &off_250A72040;
          *(_OWORD *)(v16 + 364) = 0u;
          *(_OWORD *)(v16 + 380) = 0u;
          *(_OWORD *)(v16 + 24) = 0u;
          *(_OWORD *)(v16 + 40) = 0u;
          *(_OWORD *)(v16 + 56) = 0u;
          *(_OWORD *)(v16 + 72) = 0u;
          *(_OWORD *)(v16 + 88) = 0u;
          *(_OWORD *)(v16 + 104) = 0u;
          *(_OWORD *)(v16 + 120) = 0u;
          *(_OWORD *)(v16 + 136) = 0u;
          *(_OWORD *)(v16 + 152) = 0u;
          *(_OWORD *)(v16 + 168) = 0u;
          *(_OWORD *)(v16 + 184) = 0u;
          *(_OWORD *)(v16 + 200) = 0u;
          *(_OWORD *)(v16 + 216) = 0u;
          *(_OWORD *)(v16 + 232) = 0u;
          *(_OWORD *)(v16 + 248) = 0u;
          *(_BYTE *)(v16 + 360) = 0;
          *(_OWORD *)(v16 + 8) = 0u;
          *(_OWORD *)(v16 + 264) = 0u;
          *(_OWORD *)(v16 + 280) = 0u;
          *(_OWORD *)(v16 + 296) = 0u;
          *(_OWORD *)(v16 + 312) = 0u;
          *(_OWORD *)(v16 + 328) = 0u;
          *(_OWORD *)(v16 + 344) = 0u;
          *(_QWORD *)(a1 + 24) = v16;
        }
        v37 = 0;
        v17 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v17 >= *((_QWORD *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0;
        }
        else
        {
          v37 = *v17;
          *((_QWORD *)this + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)this + 14);
        v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_23916C674(v16, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v20 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v20, 1);
        v22 = v20 - 1;
        if (v22 < 0 == v21)
          *((_DWORD *)this + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v23 >= *((_QWORD *)this + 2) || *v23 != 50)
          continue;
        *((_QWORD *)this + 1) = v23 + 1;
LABEL_48:
        *(_DWORD *)(a1 + 52) |= 8u;
        v24 = *(_QWORD *)(a1 + 32);
        if (!v24)
        {
          v24 = operator new();
          *(_QWORD *)v24 = &off_250A720B8;
          *(_QWORD *)(v24 + 8) = 0;
          *(_QWORD *)(v24 + 16) = 0;
          *(_QWORD *)(v24 + 24) = 0;
          *(_QWORD *)(a1 + 32) = v24;
        }
        v38 = 0;
        v25 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v25 >= *((_QWORD *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0;
        }
        else
        {
          v38 = *v25;
          *((_QWORD *)this + 1) = v25 + 1;
        }
        v26 = *((_DWORD *)this + 14);
        v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239173298((_DWORD *)v24, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v28 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v28, 1);
        v29 = v28 - 1;
        if (v29 < 0 == v21)
          *((_DWORD *)this + 14) = v29;
        v30 = (_BYTE *)*((_QWORD *)this + 1);
        if ((unint64_t)v30 >= *((_QWORD *)this + 2) || *v30 != 58)
          continue;
        *((_QWORD *)this + 1) = v30 + 1;
LABEL_62:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        v31 = *(_QWORD *)(a1 + 40);
        if (!v31)
        {
          v31 = operator new();
          *(_QWORD *)v31 = &off_250A72130;
          *(_OWORD *)(v31 + 8) = 0u;
          *(_OWORD *)(v31 + 24) = 0u;
          *(_OWORD *)(v31 + 40) = 0u;
          *(_OWORD *)(v31 + 56) = 0u;
          *(_OWORD *)(v31 + 72) = 0u;
          *(_OWORD *)(v31 + 88) = 0u;
          *(_OWORD *)(v31 + 104) = 0u;
          *(_OWORD *)(v31 + 120) = 0u;
          *(_OWORD *)(v31 + 136) = 0u;
          *(_OWORD *)(v31 + 152) = 0u;
          *(_OWORD *)(v31 + 168) = 0u;
          *(_OWORD *)(v31 + 184) = 0u;
          *(_OWORD *)(v31 + 200) = 0u;
          *(_DWORD *)(v31 + 216) = 0;
          *(_QWORD *)(a1 + 40) = v31;
        }
        v39 = 0;
        v32 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v32 >= *((_QWORD *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0;
        }
        else
        {
          v39 = *v32;
          *((_QWORD *)this + 1) = v32 + 1;
        }
        v33 = *((_DWORD *)this + 14);
        v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_239174A60(v31, this) || !*((_BYTE *)this + 36))
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        v35 = *((_DWORD *)this + 14);
        v21 = __OFSUB__(v35, 1);
        v36 = v35 - 1;
        if (v36 < 0 == v21)
          *((_DWORD *)this + 14) = v36;
        if (*((_QWORD *)this + 1) == *((_QWORD *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
        break;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_34;
        goto LABEL_20;
      case 6u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_48;
        goto LABEL_20;
      case 7u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
        goto LABEL_62;
      default:
        v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t sub_239184338(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = result;
  v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(result + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_9:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
  {
    sub_239169F68();
    v7 = *(_QWORD *)(qword_2542CF550 + 24);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return result;
    goto LABEL_15;
  }
LABEL_12:
  v8 = *(_QWORD *)(v5 + 32);
  if (!v8)
  {
    sub_239169F68();
    v8 = *(_QWORD *)(qword_2542CF550 + 32);
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
  {
LABEL_15:
    v9 = *(_QWORD *)(v5 + 40);
    if (!v9)
    {
      sub_239169F68();
      v9 = *(_QWORD *)(qword_2542CF550 + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v9, a2, a4);
  }
  return result;
}

uint64_t sub_239184424(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  uint64_t v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;

  LOBYTE(v2) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_38;
  }
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
       + 1;
    v2 = *(_DWORD *)(a1 + 52);
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      goto LABEL_16;
  }
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *(_DWORD *)(a1 + 52);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = *(_QWORD *)(a1 + 24);
    if (!v10)
    {
      sub_239169F68();
      v10 = *(_QWORD *)(qword_2542CF550 + 24);
    }
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917030C(v10);
    v12 = (int)v11;
    if (v11 >= 0x80)
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    else
      v13 = 1;
    v3 = (v3 + v12 + v13 + 1);
    v2 = *(_DWORD *)(a1 + 52);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_38;
      goto LABEL_32;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v14 = *(_QWORD *)(a1 + 32);
  if (!v14)
  {
    sub_239169F68();
    v14 = *(_QWORD *)(qword_2542CF550 + 32);
  }
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_23917354C(v14);
  v16 = (int)v15;
  if (v15 >= 0x80)
    v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
  else
    v17 = 1;
  v3 = (v3 + v16 + v17 + 1);
  if ((*(_DWORD *)(a1 + 52) & 0x10) != 0)
  {
LABEL_32:
    v18 = *(_QWORD *)(a1 + 40);
    if (!v18)
    {
      sub_239169F68();
      v18 = *(_QWORD *)(qword_2542CF550 + 40);
    }
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_239176C9C(v18);
    v20 = (int)v19;
    if (v19 >= 0x80)
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
    else
      v21 = 1;
    v3 = (v3 + v20 + v21 + 1);
  }
LABEL_38:
  *(_DWORD *)(a1 + 48) = v3;
  return v3;
}

void sub_2391845C4(uint64_t a1, void *lpsrc)
{
  int v4;
  uint64_t v5;
  const std::string *v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[48];

  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A738C0, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  if (lpsrc == (void *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *((_BYTE *)lpsrc + 52);
  if (!(_BYTE)v4)
    return;
  if ((*((_BYTE *)lpsrc + 52) & 1) != 0)
  {
    v5 = *((_QWORD *)lpsrc + 1);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_QWORD *)(a1 + 8) = v5;
    v4 = *((_DWORD *)lpsrc + 13);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0)
        goto LABEL_8;
LABEL_15:
      *(_DWORD *)(a1 + 52) |= 4u;
      v8 = *(_QWORD *)(a1 + 24);
      if (!v8)
      {
        v8 = operator new();
        *(_QWORD *)v8 = &off_250A72040;
        *(_OWORD *)(v8 + 364) = 0u;
        *(_OWORD *)(v8 + 380) = 0u;
        *(_OWORD *)(v8 + 24) = 0u;
        *(_OWORD *)(v8 + 40) = 0u;
        *(_OWORD *)(v8 + 56) = 0u;
        *(_OWORD *)(v8 + 72) = 0u;
        *(_OWORD *)(v8 + 88) = 0u;
        *(_OWORD *)(v8 + 104) = 0u;
        *(_OWORD *)(v8 + 120) = 0u;
        *(_OWORD *)(v8 + 136) = 0u;
        *(_OWORD *)(v8 + 152) = 0u;
        *(_OWORD *)(v8 + 168) = 0u;
        *(_OWORD *)(v8 + 184) = 0u;
        *(_OWORD *)(v8 + 200) = 0u;
        *(_OWORD *)(v8 + 216) = 0u;
        *(_OWORD *)(v8 + 232) = 0u;
        *(_OWORD *)(v8 + 248) = 0u;
        *(_BYTE *)(v8 + 360) = 0;
        *(_OWORD *)(v8 + 8) = 0u;
        *(_OWORD *)(v8 + 264) = 0u;
        *(_OWORD *)(v8 + 280) = 0u;
        *(_OWORD *)(v8 + 296) = 0u;
        *(_OWORD *)(v8 + 312) = 0u;
        *(_OWORD *)(v8 + 328) = 0u;
        *(_OWORD *)(v8 + 344) = 0u;
        *(_QWORD *)(a1 + 24) = v8;
      }
      v9 = *((_QWORD *)lpsrc + 3);
      if (!v9)
      {
        sub_239169F68();
        v9 = *(_QWORD *)(qword_2542CF550 + 24);
      }
      sub_23916A0F8(v8, v9);
      v4 = *((_DWORD *)lpsrc + 13);
      if ((v4 & 8) == 0)
      {
LABEL_9:
        if ((v4 & 0x10) == 0)
          return;
        goto LABEL_25;
      }
      goto LABEL_20;
    }
  }
  else if ((*((_BYTE *)lpsrc + 52) & 2) == 0)
  {
    goto LABEL_7;
  }
  v6 = (const std::string *)*((_QWORD *)lpsrc + 2);
  *(_DWORD *)(a1 + 52) |= 2u;
  v7 = *(std::string **)(a1 + 16);
  if (v7 == (std::string *)MEMORY[0x24BEDD958])
  {
    v7 = (std::string *)operator new();
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    *(_QWORD *)(a1 + 16) = v7;
  }
  std::string::operator=(v7, v6);
  v4 = *((_DWORD *)lpsrc + 13);
  if ((v4 & 4) != 0)
    goto LABEL_15;
LABEL_8:
  if ((v4 & 8) == 0)
    goto LABEL_9;
LABEL_20:
  *(_DWORD *)(a1 + 52) |= 8u;
  v10 = *(_QWORD **)(a1 + 32);
  if (!v10)
  {
    v10 = (_QWORD *)operator new();
    *v10 = &off_250A720B8;
    v10[1] = 0;
    v10[2] = 0;
    v10[3] = 0;
    *(_QWORD *)(a1 + 32) = v10;
  }
  v11 = *((_QWORD *)lpsrc + 4);
  if (!v11)
  {
    sub_239169F68();
    v11 = *(_QWORD *)(qword_2542CF550 + 32);
  }
  sub_2391730B8((uint64_t)v10, v11);
  if ((*((_DWORD *)lpsrc + 13) & 0x10) != 0)
  {
LABEL_25:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    v12 = *(_QWORD *)(a1 + 40);
    if (!v12)
    {
      v12 = operator new();
      *(_QWORD *)v12 = &off_250A72130;
      *(_OWORD *)(v12 + 8) = 0u;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + 56) = 0u;
      *(_OWORD *)(v12 + 72) = 0u;
      *(_OWORD *)(v12 + 88) = 0u;
      *(_OWORD *)(v12 + 104) = 0u;
      *(_OWORD *)(v12 + 120) = 0u;
      *(_OWORD *)(v12 + 136) = 0u;
      *(_OWORD *)(v12 + 152) = 0u;
      *(_OWORD *)(v12 + 168) = 0u;
      *(_OWORD *)(v12 + 184) = 0u;
      *(_OWORD *)(v12 + 200) = 0u;
      *(_DWORD *)(v12 + 216) = 0;
      *(_QWORD *)(a1 + 40) = v12;
    }
    v13 = *((_QWORD *)lpsrc + 5);
    if (!v13)
    {
      sub_239169F68();
      v13 = *(_QWORD *)(qword_2542CF550 + 40);
    }
    sub_23917370C(v12, v13);
  }
}

void sub_2391848DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2391848F4()
{
  return 1;
}

_QWORD *sub_2391848FC@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.LogEntry");
}

void sub_23918490C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(_QWORD *)a1 = &off_250A73468;
  sub_239169F68();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_239184944(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_23918490C(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_239184968()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_250A73468;
  *(_WORD *)(result + 8) = 0;
  *(_BYTE *)(result + 10) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_2391849A8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  uint64_t result;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)this + 8) = TagFallback;
          *((_QWORD *)this + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v21 = 0;
        v10 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result)
            return result;
          v11 = v21;
          v12 = (_BYTE *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v11 = *v10;
          v12 = v10 + 1;
          *((_QWORD *)this + 1) = v12;
        }
        *(_BYTE *)(a1 + 8) = v11 != 0;
        *(_DWORD *)(a1 + 16) |= 1u;
        if ((unint64_t)v12 < v8 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)this + 1) = v13;
          goto LABEL_26;
        }
      }
      if (v6 != 2)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_18;
      v13 = (char *)*((_QWORD *)this + 1);
      v8 = *((_QWORD *)this + 2);
LABEL_26:
      v20 = 0;
      if ((unint64_t)v13 >= v8 || *v13 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
        if (!(_DWORD)result)
          return result;
        v14 = v20;
        v15 = (_BYTE *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
      }
      else
      {
        v14 = *v13;
        v15 = v13 + 1;
        *((_QWORD *)this + 1) = v15;
      }
      *(_BYTE *)(a1 + 9) = v14 != 0;
      *(_DWORD *)(a1 + 16) |= 2u;
      if ((unint64_t)v15 < v8 && *v15 == 24)
      {
        v9 = v15 + 1;
        *((_QWORD *)this + 1) = v9;
LABEL_34:
        v19 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
          if (!(_DWORD)result)
            return result;
          v16 = v19;
          v17 = (unsigned __int8 *)*((_QWORD *)this + 1);
          v8 = *((_QWORD *)this + 2);
        }
        else
        {
          v16 = *v9;
          v17 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)this + 1) = v17;
        }
        *(_BYTE *)(a1 + 10) = v16 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if (v17 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          result = 1;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v6 == 3)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)this + 1);
        v8 = *((_QWORD *)this + 2);
        goto LABEL_34;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t sub_239184BE4(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = result;
  v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return result;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  if ((*(_DWORD *)(v5 + 16) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  return result;
}

uint64_t sub_239184C5C(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 16);
  v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0)
    v2 += 2;
  if ((v1 & 4) != 0)
    v2 += 2;
  if (*(_DWORD *)(a1 + 16))
    v3 = v2;
  else
    v3 = 0;
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_239184C90(uint64_t a1, _BYTE *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x24BEDDB98], (const struct __class_type_info *)&unk_250A738D8, 0))
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  sub_239172D70(a1, lpsrc);
}

uint64_t sub_239184CF8()
{
  return 1;
}

_QWORD *sub_239184D00@<X0>(_QWORD *a1@<X8>)
{
  return sub_2391011A4(a1, "CoreGem.proto.gpsd.StartContext");
}

uint64_t sub_239184D10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 384);
}

uint64_t sub_239184D18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_239184D20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 212);
}

uint64_t sub_239184D28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_239184D30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239184D38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239184D40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239184D48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239184D50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239184D58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239184D60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239184D68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239184D70(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239184D78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239184D80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239184D88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239184D90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_239184D98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_239184DA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239184DA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239184DB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_239184DB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239184DC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239184DC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239184DD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239184DD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239184DE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239184DE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239184DF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239184DF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239184E00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_239184E08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_239184E10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239184E18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_239184E20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239184E28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_239184E30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_239184E38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_239184E40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239184E48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239184E50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_239184E58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_239184E60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_239184E68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_239184E70(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x23B838820);
  return result;
}

unint64_t sub_239184EE8()
{
  unsigned __int8 v0;
  uint64_t v1;
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_2542CF630);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2542CF630))
  {
    sub_239184F84();
    __cxa_guard_release(&qword_2542CF630);
  }
  v1 = mach_continuous_time();
  v2 = 8;
  if (!byte_25691E338)
    v2 = 0;
  return ((v1 >> v2) * qword_2542CF730 / qword_2542CF738) << v2;
}

void sub_239184F6C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2542CF630);
  _Unwind_Resume(a1);
}

void sub_239184F84()
{
  uint32_t denom;
  uint32_t numer;
  uint32_t v2;
  unint64_t v3;
  NSObject *v4;
  NSObject *v5;
  int v6;
  NSObject *v7;
  NSObject *v8;
  NSObject *v9;
  mach_timebase_info info;
  uint8_t buf[4];
  const char *v12;
  __int16 v13;
  _BYTE v14[14];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  if (!qword_2542CF730)
  {
    mach_timebase_info(&info);
    if (info.denom)
    {
      denom = info.denom;
      numer = info.numer;
      do
      {
        v2 = denom;
        denom = numer % denom;
        numer = v2;
      }
      while (denom);
    }
    else
    {
      v2 = info.numer;
      if (!info.numer)
      {
        v8 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_error_impl(&dword_2390FD000, v8, OS_LOG_TYPE_ERROR, "gcd result is zero", buf, 2u);
          v8 = qword_2542CF618;
        }
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 136446722;
          v12 = "/Library/Caches/com.apple.xbs/Sources/CoreGEM/Sources/Util/GpsdUtil.mm";
          v13 = 1026;
          *(_DWORD *)v14 = 68;
          *(_WORD *)&v14[4] = 2082;
          *(_QWORD *)&v14[6] = "getTickToNsInfo";
          _os_log_error_impl(&dword_2390FD000, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        __assert_rtn("getTickToNsInfo", "GpsdUtil.mm", 68, "false && \"gcd result is zero\"");
      }
    }
    qword_2542CF738 = info.denom / v2;
    qword_2542CF730 = info.numer / v2;
    if (v2 > info.denom)
    {
      v7 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_2390FD000, v7, OS_LOG_TYPE_ERROR, "info.denominator is zero", buf, 2u);
        v7 = qword_2542CF618;
      }
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446722;
        v12 = "/Library/Caches/com.apple.xbs/Sources/CoreGEM/Sources/Util/GpsdUtil.mm";
        v13 = 1026;
        *(_DWORD *)v14 = 71;
        *(_WORD *)&v14[4] = 2082;
        *(_QWORD *)&v14[6] = "getTickToNsInfo";
        _os_log_error_impl(&dword_2390FD000, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      __assert_rtn("getTickToNsInfo", "GpsdUtil.mm", 71, "false && \"info.denominator is zero\"");
    }
    if (v2 > info.numer)
    {
      v9 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_2390FD000, v9, OS_LOG_TYPE_ERROR, "info.numerator is zero", buf, 2u);
        v9 = qword_2542CF618;
      }
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446722;
        v12 = "/Library/Caches/com.apple.xbs/Sources/CoreGEM/Sources/Util/GpsdUtil.mm";
        v13 = 1026;
        *(_DWORD *)v14 = 72;
        *(_WORD *)&v14[4] = 2082;
        *(_QWORD *)&v14[6] = "getTickToNsInfo";
        _os_log_error_impl(&dword_2390FD000, v9, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      __assert_rtn("getTickToNsInfo", "GpsdUtil.mm", 72, "false && \"info.numerator is zero\"");
    }
    v3 = info.numer / v2 * (unint64_t)(info.denom / v2);
    if (v3 >= 0x17D)
    {
      byte_25691E338 = 1;
      v4 = qword_2542CF618;
      if (v3 >> 10 > 0x5E)
      {
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsdUtil,Cannot protect against overflow in tick to ns", buf, 2u);
        }
      }
      else if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_2390FD000, v4, OS_LOG_TYPE_INFO, "#gpsdUtil,Reducing tick to ns precision to avoid overflow risk", buf, 2u);
      }
    }
    v5 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      if (byte_25691E338)
        v6 = 8;
      else
        v6 = 0;
      *(_DWORD *)buf = 134218496;
      v12 = (const char *)qword_2542CF730;
      v13 = 2048;
      *(_QWORD *)v14 = qword_2542CF738;
      *(_WORD *)&v14[8] = 1024;
      *(_DWORD *)&v14[10] = v6;
      _os_log_debug_impl(&dword_2390FD000, v5, OS_LOG_TYPE_DEBUG, "#gpsdUtil,Tick to ns info,Numerator,%llu,Denominator,%llu,PrecisionReductionBits,%d", buf, 0x1Cu);
    }
  }
}

double sub_2391853DC()
{
  if (!qword_2542CF740)
    qword_2542CF740 = sub_239184EE8();
  return (double)(sub_239184EE8() - qword_2542CF740) * 0.000000001;
}

void sub_239185424(unsigned int __val@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::string *v5;
  std::string::size_type v6;
  char v7;
  std::string __p;
  _QWORD v9[3];

  v9[2] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (__val >= 0x1B || ((0x7FFFE3Fu >> __val) & 1) == 0)
    goto LABEL_6;
  MEMORY[0x23B8386D0](a2, off_250A738F0[__val]);
  v4 = *(unsigned __int8 *)(a2 + 23);
  if (*(char *)(a2 + 23) < 0)
    v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
LABEL_6:
    std::to_string(&__p, __val);
    v5 = std::string::insert(&__p, 0, "unknown_");
    v6 = v5->__r_.__value_.__r.__words[0];
    v9[0] = v5->__r_.__value_.__l.__size_;
    *(_QWORD *)((char *)v9 + 7) = *(std::string::size_type *)((char *)&v5->__r_.__value_.__r.__words[1] + 7);
    v7 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    if (*(char *)(a2 + 23) < 0)
      operator delete(*(void **)a2);
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v9[0];
    *(_QWORD *)(a2 + 15) = *(_QWORD *)((char *)v9 + 7);
    *(_BYTE *)(a2 + 23) = v7;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_239185548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (*(char *)(v14 + 23) < 0)
    operator delete(*(void **)v14);
  _Unwind_Resume(exception_object);
}

void sub_239185580(int __val@<W0>, uint64_t a2@<X8>)
{
  const char *v4;
  uint64_t v5;
  std::string *v6;
  std::string::size_type v7;
  char v8;
  std::string __p;
  _QWORD v10[3];

  v10[2] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v4 = "START";
  switch(__val)
  {
    case 0:
      v4 = "PROTO_DEFAULT";
      goto LABEL_62;
    case 1:
      goto LABEL_62;
    case 2:
      v4 = "STOP";
      goto LABEL_62;
    case 3:
      v4 = "RESET";
      goto LABEL_62;
    case 4:
      v4 = "CLEAR";
      goto LABEL_62;
    case 5:
      v4 = "DELETE_GNSS_DATA";
      goto LABEL_62;
    case 6:
      v4 = "SET_PVTM_REPORT";
      goto LABEL_62;
    case 7:
      v4 = "SET_NMEA_HANDLER";
      goto LABEL_62;
    case 8:
      v4 = "INJECT_ASSISTANCE_POSITION";
      goto LABEL_62;
    case 9:
      v4 = "INJECT_ASSISTANCE_TIME";
      goto LABEL_62;
    case 10:
      v4 = "INJECT_ASSISTANCE_FILE";
      goto LABEL_62;
    case 11:
      v4 = "INJECT_RTI_FILE";
      goto LABEL_62;
    case 12:
      v4 = "INJECT_SVID_BLOCKLIST";
      goto LABEL_62;
    case 13:
      v4 = "SET_ASSISTANCE_PRESSURE";
      goto LABEL_62;
    case 14:
      v4 = "SET_ASSISTANCE_ACCEL";
      goto LABEL_62;
    case 15:
      v4 = "SET_ASSISTANCE_GYRO";
      goto LABEL_62;
    case 16:
      v4 = "SET_ASSISTANCE_DEM";
      goto LABEL_62;
    case 17:
      v4 = "SET_ASSISTANCE_MAP_VECTOR";
      goto LABEL_62;
    case 18:
      v4 = "SET_ASSISTANCE_MOTION_ACTIVITY_CONTEXT";
      goto LABEL_62;
    case 19:
      v4 = "SET_ASSISTANCE_MOUNT_STATE";
      goto LABEL_62;
    case 20:
      v4 = "SET_ASSISTANCE_SIGNAL_ENVIRONMENT";
      goto LABEL_62;
    case 21:
      v4 = "SET_ASSISTANCE_SPEED_CONSTRAINT";
      goto LABEL_62;
    case 22:
      v4 = "SET_ASSISTANCE_ALONG_TRACK_VELOCITY";
      goto LABEL_62;
    case 23:
      v4 = "SET_POWER_REPORT";
      goto LABEL_62;
    case 24:
      v4 = "SET_CONFIG_SIMULATOR_MODE";
      goto LABEL_62;
    case 25:
      v4 = "SET_CONFIG_ENABLE_GNSS_CONSTELLATIONS";
      goto LABEL_62;
    case 26:
      v4 = "SET_CONFIG_DUTY_CYCLING";
      goto LABEL_62;
    case 27:
      v4 = "SET_TIME_TRANSFER_PULSE";
      goto LABEL_62;
    case 28:
      v4 = "CLEAN_TIME_TRANSFER_PULSE";
      goto LABEL_62;
    case 29:
      v4 = "INJECT_LTL_INFO";
      goto LABEL_62;
    case 30:
      v4 = "CNTIN_STATUS_UPDATE";
      goto LABEL_62;
    case 31:
      v4 = "SET_THERMAL_RISK_STATE";
      goto LABEL_62;
    case 32:
      v4 = "PING";
      goto LABEL_62;
    case 34:
      v4 = "BUILD_DEVICE";
      goto LABEL_62;
    case 35:
      v4 = "TERMINATION_IMMINENT";
      goto LABEL_62;
    case 36:
      v4 = "EXIT";
      goto LABEL_62;
    case 37:
      v4 = "FORCE_CLEAR_ALL_NV";
      goto LABEL_62;
    case 38:
      v4 = "SET_CONFIG_RF_BAND_ENABLE";
      goto LABEL_62;
    case 51:
      v4 = "START_EMERGENCY_PREEMPTIVE_SESSION";
      goto LABEL_62;
    case 52:
      v4 = "STOP_EMERGENCY_PREEMPTIVE_SESSION";
      goto LABEL_62;
    case 53:
      v4 = "SET_EMERGENCY_CONFIG";
      goto LABEL_62;
    case 54:
      v4 = "SET_EMERGENCY_SESSION_SUMMARY_REPORT";
      goto LABEL_62;
    case 55:
      v4 = "ENTER_EMERGENCY_MODE";
      goto LABEL_62;
    case 56:
      v4 = "EXIT_EMERGENCY_MODE";
      goto LABEL_62;
    case 60:
      v4 = "START_EMERGENCY_POSITION";
      goto LABEL_62;
    case 61:
      v4 = "STOP_EMERGENCY_POSITION";
      goto LABEL_62;
    case 62:
      v4 = "SET_EMERGENCY_POSITION_REPORT";
      goto LABEL_62;
    case 63:
      v4 = "SET_EMERGENCY_MEASUREMENT_REPORT";
      goto LABEL_62;
    case 64:
      v4 = "SET_NW_ASSISTANCE_NEEDED_REPORT";
      goto LABEL_62;
    case 65:
      v4 = "SET_NW_ASSISTANCE_GPS_REF_TIME";
      goto LABEL_62;
    case 66:
      v4 = "SET_NW_ASSISTANCE_REF_POSITION";
      goto LABEL_62;
    case 67:
      v4 = "SET_NW_ASSISTANCE_GPS_EPHEMERIS";
      goto LABEL_62;
    case 68:
      v4 = "SET_NW_ASSISTANCE_GPS_ACQUISITION";
      goto LABEL_62;
    case 69:
      v4 = "INJECT_FT_ASSISTANCE";
      goto LABEL_62;
    case 70:
      v4 = "DECODE_SUPL_INIT";
      goto LABEL_62;
    case 71:
      v4 = "SET_SUPL_INIT";
      goto LABEL_62;
    case 72:
      v4 = "SET_SUPL_LOCATIONID_NEEDED_REPORT";
      goto LABEL_62;
    case 73:
      v4 = "SET_SUPL_LOCATIONID";
      goto LABEL_62;
    case 74:
      v4 = "ABORT_SUPL_SESSION";
      goto LABEL_62;
    case 75:
      v4 = "SET_SUPL_SESSION_STATUS_REPORT";
      goto LABEL_62;
    case 76:
      v4 = "SET_SUPL_WLAN_MEAS";
LABEL_62:
      MEMORY[0x23B8386D0](a2, v4);
      v5 = *(unsigned __int8 *)(a2 + 23);
      if (*(char *)(a2 + 23) < 0)
        v5 = *(_QWORD *)(a2 + 8);
      if (!v5)
        goto LABEL_65;
      return;
    default:
LABEL_65:
      std::to_string(&__p, __val);
      v6 = std::string::insert(&__p, 0, "unknown_");
      v7 = v6->__r_.__value_.__r.__words[0];
      v10[0] = v6->__r_.__value_.__l.__size_;
      *(_QWORD *)((char *)v10 + 7) = *(std::string::size_type *)((char *)&v6->__r_.__value_.__r.__words[1] + 7);
      v8 = HIBYTE(v6->__r_.__value_.__r.__words[2]);
      v6->__r_.__value_.__l.__size_ = 0;
      v6->__r_.__value_.__r.__words[2] = 0;
      v6->__r_.__value_.__r.__words[0] = 0;
      if (*(char *)(a2 + 23) < 0)
        operator delete(*(void **)a2);
      *(_QWORD *)a2 = v7;
      *(_QWORD *)(a2 + 8) = v10[0];
      *(_QWORD *)(a2 + 15) = *(_QWORD *)((char *)v10 + 7);
      *(_BYTE *)(a2 + 23) = v8;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      return;
  }
}

void sub_239185978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  if (*(char *)(v14 + 23) < 0)
    operator delete(*(void **)v14);
  _Unwind_Resume(exception_object);
}

void sub_2391859B0(dispatch_queue_t *a1, dispatch_qos_class_t a2, const std::string::value_type *a3)
{
  std::string *v6;
  __int128 v7;
  NSObject *v8;
  NSObject *v9;
  void **v10;
  void **v11;
  dispatch_queue_t v12;
  NSObject *v13;
  void **v14;
  void *__p[2];
  int64_t v16;
  _BYTE v17[28];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  sub_2391011A4(v17, "com.apple.gpsd.");
  v6 = std::string::append((std::string *)v17, a3);
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v16 = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if ((v17[23] & 0x80000000) != 0)
    operator delete(*(void **)v17);
  v8 = dispatch_queue_attr_make_with_qos_class(0, a2, 0);
  if (!v8)
  {
    v9 = qword_2542CF628;
    if (os_log_type_enabled((os_log_t)qword_2542CF628, OS_LOG_TYPE_DEFAULT))
    {
      v10 = __p;
      if (v16 < 0)
        v10 = (void **)__p[0];
      *(_DWORD *)v17 = 136446210;
      *(_QWORD *)&v17[4] = v10;
      _os_log_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEFAULT, "dispatchQueueInit,nullattr,%{public}s", v17, 0xCu);
    }
  }
  if (v16 >= 0)
    v11 = __p;
  else
    v11 = (void **)__p[0];
  v12 = dispatch_queue_create((const char *)v11, v8);
  *a1 = v12;
  if (!v12)
  {
    v13 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v14 = __p;
      if (v16 < 0)
        v14 = (void **)__p[0];
      *(_DWORD *)v17 = 136446210;
      *(_QWORD *)&v17[4] = v14;
      _os_log_error_impl(&dword_2390FD000, v13, OS_LOG_TYPE_ERROR, "dispatchQueueInit,queue,null,%{public}s", v17, 0xCu);
      v13 = qword_2542CF618;
    }
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v17 = 136446722;
      *(_QWORD *)&v17[4] = "/Library/Caches/com.apple.xbs/Sources/CoreGEM/Sources/Util/GpsdUtil.mm";
      *(_WORD *)&v17[12] = 1026;
      *(_DWORD *)&v17[14] = 539;
      *(_WORD *)&v17[18] = 2082;
      *(_QWORD *)&v17[20] = "dispatchQueueInit";
      _os_log_error_impl(&dword_2390FD000, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", v17, 0x1Cu);
    }
    __assert_rtn("dispatchQueueInit", "GpsdUtil.mm", 539, "false && \"dispatchQueueInit,queue,null,%{public}s\"");
  }
  if (SHIBYTE(v16) < 0)
    operator delete(__p[0]);
}

void sub_239185BF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__n128 sub_239185C30(uint64_t a1)
{
  __n128 result;

  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(__n128 *)(a1 + 24) = result;
  *(__n128 *)(a1 + 40) = result;
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_DWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  *(__n128 *)(a1 + 160) = result;
  *(__n128 *)(a1 + 176) = result;
  *(_QWORD *)(a1 + 192) = 0;
  *(_DWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 232) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 240) = 0;
  *(_QWORD *)(a1 + 248) = 0;
  *(_DWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  *(_DWORD *)(a1 + 272) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  *(_QWORD *)(a1 + 296) = 0xBFF0000000000000;
  *(__n128 *)(a1 + 304) = result;
  *(_QWORD *)(a1 + 320) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 328) = 0;
  *(_DWORD *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 344) = 0;
  *(_QWORD *)(a1 + 352) = 0;
  *(_QWORD *)(a1 + 360) = 0;
  *(_QWORD *)(a1 + 368) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 376) = 0;
  *(_QWORD *)(a1 + 384) = 0;
  *(_DWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 400) = 0;
  *(_BYTE *)(a1 + 408) = 0;
  *(_BYTE *)(a1 + 448) = 0;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  return result;
}

double sub_239185CDC(uint64_t a1, int *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _OWORD v30[8];
  uint64_t v31;

  v4 = *((_OWORD *)a2 + 7);
  v30[6] = *((_OWORD *)a2 + 6);
  v30[7] = v4;
  v31 = *((_QWORD *)a2 + 16);
  v5 = *((_OWORD *)a2 + 3);
  v30[2] = *((_OWORD *)a2 + 2);
  v30[3] = v5;
  v6 = *((_OWORD *)a2 + 5);
  v30[4] = *((_OWORD *)a2 + 4);
  v30[5] = v6;
  v7 = *((_OWORD *)a2 + 1);
  v30[0] = *(_OWORD *)a2;
  v30[1] = v7;
  sub_23910B5A0((int *)v30, "GemHeloEstimator::injectFix");
  v9 = *a2;
  if (*a2 == 3)
  {
    sub_23910BAD0((_DWORD *)(a1 + 272), (double *)a2, (uint64_t)&v21);
    v13 = v28;
    *(_OWORD *)(a1 + 368) = v27;
    *(_OWORD *)(a1 + 384) = v13;
    *(_QWORD *)(a1 + 400) = v29;
    v14 = v24;
    *(_OWORD *)(a1 + 304) = v23;
    *(_OWORD *)(a1 + 320) = v14;
    v15 = v26;
    *(_OWORD *)(a1 + 336) = v25;
    *(_OWORD *)(a1 + 352) = v15;
    v8 = v22;
    *(_OWORD *)(a1 + 272) = v21;
    *(_OWORD *)(a1 + 288) = v8;
  }
  else if (v9 == 2)
  {
    sub_23910BAD0((_DWORD *)(a1 + 136), (double *)a2, (uint64_t)&v21);
    v16 = v25;
    *(_OWORD *)(a1 + 216) = v26;
    v17 = v28;
    *(_OWORD *)(a1 + 232) = v27;
    *(_OWORD *)(a1 + 248) = v17;
    v18 = v21;
    *(_OWORD *)(a1 + 152) = v22;
    *(_QWORD *)&v8 = v23;
    v19 = v24;
    *(_OWORD *)(a1 + 168) = v23;
    *(_OWORD *)(a1 + 184) = v19;
    *(_OWORD *)(a1 + 200) = v16;
    *(_QWORD *)(a1 + 264) = v29;
    *(_OWORD *)(a1 + 136) = v18;
  }
  else if (v9 == 1)
  {
    sub_23910BAD0((_DWORD *)a1, (double *)a2, (uint64_t)&v21);
    v10 = v28;
    *(_OWORD *)(a1 + 96) = v27;
    *(_OWORD *)(a1 + 112) = v10;
    *(_QWORD *)(a1 + 128) = v29;
    v11 = v24;
    *(_OWORD *)(a1 + 32) = v23;
    *(_OWORD *)(a1 + 48) = v11;
    v12 = v26;
    *(_OWORD *)(a1 + 64) = v25;
    *(_OWORD *)(a1 + 80) = v12;
    v8 = v22;
    *(_OWORD *)a1 = v21;
    *(_OWORD *)(a1 + 16) = v8;
  }
  return *(double *)&v8;
}

double sub_239185E54(uint64_t a1, uint64_t a2, unint64_t a3, double a4, double a5, double a6)
{
  unint64_t v10;
  NSObject *v11;
  int v13;
  double v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v10 = a2 - a1;
  v11 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    v13 = 134217984;
    v14 = *(double *)&v10;
    _os_log_debug_impl(&dword_2390FD000, v11, OS_LOG_TYPE_DEBUG, "HeloEstimator,getScaledUncertainty,age,%llu", (uint8_t *)&v13, 0xCu);
    v11 = qword_2542CF610;
  }
  if (v10 < a3)
    a6 = a5;
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    v13 = 134217984;
    v14 = a6;
    _os_log_debug_impl(&dword_2390FD000, v11, OS_LOG_TYPE_DEBUG, "HeloEstimator,getScaledUncertainty,scaleFactor,%f", (uint8_t *)&v13, 0xCu);
  }
  return a4 + (double)v10 * a6;
}

double sub_239185F78@<D0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  double result;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  *(_DWORD *)a3 = 0;
  *(_DWORD *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = 0;
  sub_239186008((uint64_t)a1, a2, (uint64_t)&v11);
  v6 = v11;
  *(_OWORD *)(a3 + 24) = v12;
  v7 = v14;
  *(_OWORD *)(a3 + 40) = v13;
  *(_OWORD *)(a3 + 56) = v7;
  v8 = v16;
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 8) = v6;
  *(_OWORD *)(a3 + 136) = v8;
  sub_239186798(a1, a2, (uint64_t)&v11);
  v9 = v12;
  *(_OWORD *)(a3 + 88) = v11;
  *(_OWORD *)(a3 + 104) = v9;
  result = *(double *)&v13;
  *(_OWORD *)(a3 + 152) = v13;
  return result;
}

void sub_239186008(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  double v7;
  double v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  int v14;
  double v15;
  uint64_t v16;
  double v17;
  int v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  int v24;
  int v25;
  unsigned __int16 v26;
  NSObject *v27;
  int v28;
  int v29;
  unsigned __int16 v30;
  NSObject *v31;
  double v32;
  unsigned __int16 v33;
  NSObject *v34;
  double v35;
  NSObject *v36;
  __int128 *v37;
  int v38;
  int32x2_t v39;
  double v40;
  double v41;
  _BOOL4 v42;
  NSObject *v43;
  NSObject *v44;
  int8x8_t v45;
  NSObject *v46;
  NSObject *v47;
  unint64_t v48;
  const char *v49;
  int v50;
  int v51;
  double v52;
  int v53;
  int v54;
  double v55;
  int8x8_t v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  double v64;
  int8x8_t v65;
  int8x8_t v66;
  int8x8_t v67;
  uint8_t v68[16];
  unsigned int buf[8];
  __int128 v70;
  unsigned int v71;
  __int128 v72;
  unsigned int v73;
  __int128 v74;
  unsigned int v75;
  uint64_t v76;

  v76 = *MEMORY[0x24BDAC8D0];
  v6 = *(_DWORD *)a1;
  v74 = *(_OWORD *)(a1 + 4);
  v75 = *(_DWORD *)(a1 + 20);
  v7 = *(double *)(a1 + 24);
  v61 = *(double *)(a1 + 40);
  v62 = *(double *)(a1 + 32);
  v8 = *(double *)(a1 + 48);
  v10 = *(_DWORD *)(a1 + 64);
  v9 = *(_DWORD *)(a1 + 68);
  v12 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 80);
  v13 = *(double *)(a1 + 96);
  v14 = *(_DWORD *)(a1 + 136);
  v72 = *(_OWORD *)(a1 + 140);
  v73 = *(_DWORD *)(a1 + 156);
  v15 = *(double *)(a1 + 160);
  v63 = *(double *)(a1 + 176);
  v64 = *(double *)(a1 + 168);
  v57 = v8;
  v58 = *(double *)(a1 + 184);
  LODWORD(v60) = *(_DWORD *)(a1 + 200);
  HIDWORD(v60) = v14;
  v53 = v9;
  v54 = *(_DWORD *)(a1 + 204);
  v16 = *(_QWORD *)(a1 + 216);
  v59 = *(_QWORD *)(a1 + 208);
  v17 = *(double *)(a1 + 232);
  v18 = *(_DWORD *)(a1 + 272);
  v70 = *(_OWORD *)(a1 + 276);
  v71 = *(_DWORD *)(a1 + 292);
  v19 = *(double *)(a1 + 296);
  v55 = *(double *)(a1 + 304);
  v20 = *(double *)(a1 + 312);
  v52 = *(double *)(a1 + 320);
  v56 = *(int8x8_t *)(a1 + 56);
  v67 = *(int8x8_t *)(a1 + 192);
  v65 = *(int8x8_t *)(a1 + 328);
  v50 = *(_DWORD *)(a1 + 340);
  v51 = *(_DWORD *)(a1 + 336);
  v22 = *(_QWORD *)(a1 + 344);
  v21 = *(_QWORD *)(a1 + 352);
  v23 = *(double *)(a1 + 368);
  if (v7 != -1.0 && v13 != -1.0)
  {
    v24 = v10;
    v25 = v6;
    v26 = a2 - v11;
    if ((unsigned __int16)(a2 - v11) < 0x12Du)
    {
      v7 = fmax(sub_239185E54(v11, a2, 0x78uLL, v7, 3.0, 15.0), 25.0);
      v61 = v7;
      v62 = v7;
      v6 = v25;
      v10 = v24;
    }
    else
    {
      v27 = qword_2542CF610;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        buf[0] = 67109120;
        buf[1] = v26;
        _os_log_debug_impl(&dword_2390FD000, v27, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, GNSS fix age exceeds max fix age, %d", (uint8_t *)buf, 8u);
      }
      v12 = 0;
      v6 = 0;
      v10 = 0;
      *(_QWORD *)&buf[3] = 0;
      v75 = 0;
      *(_QWORD *)&buf[1] = 0;
      v74 = buf[0];
      v56 = 0;
      v57 = -1.0;
      v13 = -1.0;
      v7 = -1.0;
      v61 = -1.0;
      v62 = -1.0;
    }
  }
  if (v15 != -1.0 && v17 != -1.0)
  {
    v28 = v10;
    v29 = v6;
    v30 = a2 - v16;
    if ((unsigned __int16)(a2 - v16) < 0x12Du)
    {
      v32 = sub_239185E54(v16, a2, 0x78uLL, v15, 3.0, 15.0);
      v15 = v32;
    }
    else
    {
      v31 = qword_2542CF610;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        buf[0] = 67109120;
        buf[1] = v30;
        _os_log_debug_impl(&dword_2390FD000, v31, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, WiF fix age exceeds max fix age, %d", (uint8_t *)buf, 8u);
      }
      v59 = 0;
      v60 = 0;
      *(_QWORD *)&buf[3] = 0;
      v73 = 0;
      *(_QWORD *)&buf[1] = 0;
      v72 = buf[0];
      v67 = 0;
      v32 = -1.0;
      v58 = -1.0;
      v17 = -1.0;
      v15 = -1.0;
    }
    v63 = v32;
    v64 = v32;
    v6 = v29;
    v10 = v28;
  }
  if (v19 != -1.0 && v23 != -1.0)
  {
    v33 = a2 - v21;
    if ((unsigned __int16)(a2 - v21) < 0x12Du)
    {
      v19 = sub_239185E54(v21, a2, 0x78uLL, v19, 3.0, 15.0);
      v55 = v19;
      v20 = v19;
    }
    else
    {
      v34 = qword_2542CF610;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        buf[0] = 67109120;
        buf[1] = v33;
        _os_log_debug_impl(&dword_2390FD000, v34, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, Cell fix age exceeds max fix age, %d", (uint8_t *)buf, 8u);
      }
      v22 = 0;
      v18 = 0;
      v51 = 0;
      *(_QWORD *)&buf[3] = 0;
      *(_QWORD *)&buf[1] = 0;
      v70 = buf[0];
      v71 = 0;
      v65 = 0;
      v52 = -1.0;
      v19 = -1.0;
      v55 = -1.0;
      v20 = -1.0;
    }
  }
  if (v7 == -1.0 || (v35 = -1.0, v13 == -1.0))
  {
    v43 = qword_2542CF610;
    if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf[0]) = 0;
      _os_log_debug_impl(&dword_2390FD000, v43, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, GNSS fix not available", (uint8_t *)buf, 2u);
    }
    if (v15 != -1.0 && v17 != -1.0 && v67.i32[0] > 0x19u)
      goto LABEL_61;
    if (v19 != -1.0 && v65.i32[0] >= 0x1Au)
    {
      *(_OWORD *)buf = v70;
      buf[4] = v71;
      v47 = qword_2542CF610;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)v68 = 0;
        _os_log_debug_impl(&dword_2390FD000, v47, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, returning high reliability Cell xy", v68, 2u);
      }
      v40 = v52;
      v45 = v65;
      v41 = v55;
      v38 = v50;
      v10 = v51;
      goto LABEL_74;
    }
    v35 = -1.0;
    if (v15 != -1.0 && v67.i32[0] >= 0x1Au)
    {
LABEL_61:
      *(_OWORD *)buf = v72;
      buf[4] = v73;
      v44 = qword_2542CF610;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)v68 = 0;
        _os_log_debug_impl(&dword_2390FD000, v44, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, returning med/high reliability WiFi xy", v68, 2u);
      }
      v19 = v15;
      v20 = v63;
      v41 = v64;
      v40 = v58;
      v10 = v60;
      v18 = HIDWORD(v60);
      v38 = v54;
      v22 = v59;
      v45 = v67;
      goto LABEL_74;
    }
  }
  if (v15 != v35 && v17 != v35 && v67.i32[0] >= 0x1Au)
  {
    v36 = qword_2542CF610;
    if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf[0]) = 0;
      _os_log_debug_impl(&dword_2390FD000, v36, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, both GNSS and WiFi xy available", (uint8_t *)buf, 2u);
      v36 = qword_2542CF610;
    }
    v37 = &v72;
    if (v7 >= v15)
    {
      v22 = v59;
    }
    else
    {
      v37 = &v74;
      v22 = v12;
    }
    if (v7 >= v15)
      v38 = v54;
    else
      v38 = v53;
    if (v7 >= v15)
      v18 = HIDWORD(v60);
    else
      v18 = v6;
    v39 = vdup_n_s32(v7 < v15);
    if (v7 >= v15)
      v10 = v60;
    v66 = vbsl_s8((int8x8_t)vcltz_s32(vshl_n_s32(v39, 0x1FuLL)), v56, v67);
    if (v7 >= v15)
      v40 = v58;
    else
      v40 = v57;
    if (v7 >= v15)
      v20 = v63;
    else
      v20 = v61;
    if (v7 >= v15)
      v41 = v64;
    else
      v41 = v62;
    if (v7 >= v15)
      v19 = v15;
    else
      v19 = v7;
    *(_OWORD *)buf = *v37;
    buf[4] = *((_DWORD *)v37 + 4);
    v42 = os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG);
    if (v18 == 2)
    {
      if (!v42)
      {
        v18 = 2;
LABEL_73:
        v45 = v66;
        goto LABEL_74;
      }
      *(_WORD *)v68 = 0;
      v49 = "HeloEstimator,GemHeloEstimator::getBestHorizontal, returing WiFi xy fix, WiFi unc < gnss unc";
      v18 = 2;
    }
    else
    {
      if (!v42)
        goto LABEL_73;
      *(_WORD *)v68 = 0;
      v49 = "HeloEstimator,GemHeloEstimator::getBestHorizontal, returing GNSS xy fix, gnss unc < WiFi unc";
    }
    _os_log_debug_impl(&dword_2390FD000, v36, OS_LOG_TYPE_DEBUG, v49, v68, 2u);
    goto LABEL_73;
  }
  *(_OWORD *)buf = v74;
  buf[4] = v75;
  v46 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v68 = 0;
    _os_log_debug_impl(&dword_2390FD000, v46, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, returing GNSS xy fix", v68, 2u);
  }
  v19 = v7;
  v20 = v61;
  v41 = v62;
  v40 = v57;
  v38 = v53;
  v22 = v12;
  v18 = v6;
  v45 = v56;
LABEL_74:
  v48 = (unint64_t)(double)(unint64_t)a2;
  *(_OWORD *)a3 = *(_OWORD *)&buf[1];
  *(double *)(a3 + 16) = v19;
  *(double *)(a3 + 24) = v41;
  *(double *)(a3 + 32) = v20;
  *(double *)(a3 + 40) = v40;
  *(int8x8_t *)(a3 + 48) = v45;
  *(_DWORD *)(a3 + 56) = v10;
  *(_DWORD *)(a3 + 60) = v38;
  *(_QWORD *)(a3 + 64) = v22;
  *(_QWORD *)(a3 + 72) = v48;
  *(_DWORD *)(a3 + 80) = v18;
  *(_QWORD *)(a3 + 88) = v48;
}

void sub_239186798(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double v6;
  double v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  double v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  NSObject *v27;
  unsigned __int16 v28;
  __int16 v29;
  NSObject *v30;
  unsigned __int16 v31;
  NSObject *v32;
  NSObject *v33;
  NSObject *v34;
  const char *v35;
  NSObject *v36;
  NSObject *v37;
  const char *v38;
  unint64_t v39;
  NSObject *v40;
  int v41;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  unsigned int v50;
  uint8_t buf[4];
  int v52;
  uint64_t v53;

  v3 = a2;
  v53 = *MEMORY[0x24BDAC8D0];
  v6 = *((double *)a1 + 3);
  v8 = *((_QWORD *)a1 + 11);
  v7 = *((double *)a1 + 12);
  v9 = a1[26];
  v10 = a1[27];
  v48 = *a1;
  v49 = a1[34];
  v11 = *((double *)a1 + 20);
  v12 = *((_QWORD *)a1 + 27);
  v14 = *((_QWORD *)a1 + 28);
  v13 = *((double *)a1 + 29);
  v15 = a1[60];
  v16 = a1[61];
  v17 = *((_QWORD *)a1 + 31);
  v46 = a1[68];
  v18 = *((double *)a1 + 37);
  v19 = *((_QWORD *)a1 + 44);
  v20 = *((double *)a1 + 46);
  v47 = *((_QWORD *)a1 + 45);
  v50 = a1[94];
  v21 = a1[95];
  v45 = *((_QWORD *)a1 + 48);
  if (v6 != -1.0 && v7 != -1.0)
  {
    v43 = v17;
    v44 = v15;
    v22 = *((_QWORD *)a1 + 44);
    v23 = v16;
    v24 = v10;
    v25 = a1[95];
    v26 = a2 - *((_QWORD *)a1 + 10);
    if ((unsigned __int16)(a2 - *((_WORD *)a1 + 40)) < 0x12Du)
    {
      v7 = sub_239185E54(*((_QWORD *)a1 + 14), a2, 0x12CuLL, v7, 0.5, 0.5);
      v21 = v25;
      v10 = v24;
      v16 = v23;
    }
    else
    {
      v27 = qword_2542CF610;
      v7 = -1.0;
      v8 = 0;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67109120;
        v52 = (unsigned __int16)v26;
        _os_log_debug_impl(&dword_2390FD000, v27, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestVertical, GNSS fix age exceeds max fix age, %d", buf, 8u);
      }
      v48 = 0;
      v9 = 0;
      v21 = v25;
      v10 = v24;
      v16 = v23;
      v3 = a2;
    }
    LOWORD(v19) = v22;
    v15 = v44;
    v17 = v43;
  }
  if (v11 != -1.0 && v13 != -1.0)
  {
    v28 = v3 - v12;
    if (v28 < 0x12Du)
    {
      v13 = sub_239185E54(v17, v3, 0x12CuLL, v13, 0.5, 0.5);
    }
    else
    {
      v29 = v19;
      v30 = qword_2542CF610;
      v13 = -1.0;
      v14 = 0;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67109120;
        v52 = v28;
        _os_log_debug_impl(&dword_2390FD000, v30, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestVertical, WiFi fix age exceeds max fix age, %d", buf, 8u);
      }
      v49 = 0;
      LOWORD(v19) = v29;
      v15 = 0;
    }
  }
  if (v18 != -1.0 && v20 != -1.0)
  {
    v31 = v3 - v19;
    if (v31 < 0x12Du)
    {
      v20 = sub_239185E54(v45, v3, 0x12CuLL, v20, 0.5, 0.5);
    }
    else
    {
      v32 = qword_2542CF610;
      v20 = -1.0;
      v47 = 0;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67109120;
        v52 = v31;
        _os_log_debug_impl(&dword_2390FD000, v32, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestVertical, Cell fix age exceeds max fix age, %d", buf, 8u);
      }
      v50 = 0;
      v46 = 0;
    }
  }
  if (v13 != -1.0 && v15 >= 0x1A)
  {
    v33 = qword_2542CF610;
    if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v33, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestVertical,WiFi fix available", buf, 2u);
    }
    if (v13 < 20.0 || v7 == -1.0)
    {
      v34 = qword_2542CF610;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        v35 = "HeloEstimator, getBestVertical returning wifi Z,wifi z unc <20 meters,no gnss cross check";
        goto LABEL_52;
      }
LABEL_46:
      v39 = (unint64_t)(double)(unint64_t)v3;
      v41 = v49;
      goto LABEL_50;
    }
    if (v13 < v7)
    {
      v34 = qword_2542CF610;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        v35 = "HeloEstimator, getBestVertical returning wifi Z,wifi Z unc >20 meters";
LABEL_52:
        _os_log_debug_impl(&dword_2390FD000, v34, OS_LOG_TYPE_DEBUG, v35, buf, 2u);
        goto LABEL_46;
      }
      goto LABEL_46;
    }
  }
  v13 = -1.0;
  v15 = v50;
  if (v20 != -1.0 && v50 >= 0x1A)
  {
    v36 = qword_2542CF610;
    if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v36, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestVertical,Cell fix available", buf, 2u);
    }
    if (v20 < 20.0 || v7 == -1.0)
    {
      v37 = qword_2542CF610;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        v38 = "HeloEstimator, getBestVertical returning cell Z,z unc < altitude threshold and no gnss";
        goto LABEL_54;
      }
LABEL_48:
      v14 = v47;
      v39 = (unint64_t)(double)(unint64_t)v3;
      v13 = v20;
      v16 = v21;
      v41 = v46;
      goto LABEL_50;
    }
    if (v20 < v7)
    {
      v37 = qword_2542CF610;
      if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        v38 = "HeloEstimator, getBestVertical returning cell Z,z unc < gnss unc";
LABEL_54:
        _os_log_debug_impl(&dword_2390FD000, v37, OS_LOG_TYPE_DEBUG, v38, buf, 2u);
        goto LABEL_48;
      }
      goto LABEL_48;
    }
  }
  if (*((double *)a1 + 12) == -1.0)
  {
    v15 = 0;
    v39 = 0;
    v41 = 0;
    v14 = 0;
    v16 = v10;
  }
  else
  {
    v39 = (unint64_t)(double)(unint64_t)v3;
    v40 = qword_2542CF610;
    if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v40, OS_LOG_TYPE_DEBUG, "HeloEstimator, getBestVertical returning gnss Z", buf, 2u);
    }
    v14 = v8;
    v13 = v7;
    v15 = v9;
    v16 = v10;
    v41 = v48;
  }
LABEL_50:
  *(_QWORD *)a3 = v14;
  *(double *)(a3 + 8) = v13;
  *(_DWORD *)(a3 + 16) = v15;
  *(_DWORD *)(a3 + 20) = v16;
  *(_QWORD *)(a3 + 24) = v39;
  *(_DWORD *)(a3 + 32) = v41;
  *(_QWORD *)(a3 + 40) = v39;
}

BOOL sub_239186D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  NSObject *v6;
  _BOOL8 result;
  const char *v8;
  uint64_t v11;
  double v12;
  double v13;
  NSObject *v14;
  uint32_t v15;
  unsigned int v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  NSObject *v24;
  double v25;
  double v26;
  double v27;
  NSObject *v28;
  double v29;
  double v30;
  int v31;
  _BYTE v32[10];
  double v33;
  __int16 v34;
  double v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)a2)
  {
    v6 = qword_2542CF610;
    result = os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG);
    if (!result)
      return result;
    LOWORD(v31) = 0;
    v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn early return not enabled, returning";
LABEL_14:
    v14 = v6;
    v15 = 2;
LABEL_15:
    _os_log_debug_impl(&dword_2390FD000, v14, OS_LOG_TYPE_DEBUG, v8, (uint8_t *)&v31, v15);
    return 0;
  }
  v3 = *(double *)(a1 + 24);
  v4 = *(double *)(a1 + 96);
  if (v3 == -1.0 || v4 == -1.0)
  {
    v6 = qword_2542CF610;
    result = os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG);
    if (!result)
      return result;
    LOWORD(v31) = 0;
    v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn no GNSS fix available, returning";
    goto LABEL_14;
  }
  v11 = *(_QWORD *)(a1 + 112);
  v12 = sub_239185E54(*(_QWORD *)(a1 + 80), a3, 0x78uLL, v3, 3.0, 15.0);
  v13 = sub_239185E54(v11, a3, 0x12CuLL, v4, 0.5, 0.5);
  if ((unint64_t)(a3 - *(_QWORD *)(a2 + 32)) > 6)
  {
    v16 = *(unsigned __int8 *)(a2 + 40);
    if (v16 > 3)
    {
      v18 = v13;
      v19 = fmax(v12, 5.0);
      if (3 * (int)v19 >= (int)v19)
      {
        v21 = *(double *)(a2 + 8);
        if (v21 <= 0.0)
        {
          v23 = 33.0;
        }
        else
        {
          v22 = (v21 + 0.5) * 0.671591672;
          v23 = 33.0;
          if (v22 <= 33.0)
          {
            v23 = (v21 + 0.5) * 0.671591672;
            if (v22 < 4.0)
              v23 = 4.0;
          }
          v24 = qword_2542CF610;
          if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
          {
            v31 = 134218240;
            *(double *)v32 = v21;
            *(_WORD *)&v32[8] = 2048;
            v33 = v23;
            _os_log_debug_impl(&dword_2390FD000, v24, OS_LOG_TYPE_DEBUG, "HeloEstimator, isGnssFixReadyForEarlyReturn,requested,%f,hUnc1Sigma,%f", (uint8_t *)&v31, 0x16u);
          }
        }
        v25 = *(double *)(a2 + 16);
        if (v25 == 0.0)
        {
          v27 = 100.0;
        }
        else
        {
          v26 = (v25 + 0.5) * 1.02669405;
          v27 = 100.0;
          if (v26 <= 100.0)
          {
            v27 = (v25 + 0.5) * 1.02669405;
            if (v26 < *(double *)(a2 + 24))
              v27 = *(double *)(a2 + 24);
          }
          v28 = qword_2542CF610;
          if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
          {
            v31 = 134218240;
            *(double *)v32 = v25;
            *(_WORD *)&v32[8] = 2048;
            v33 = v27;
            _os_log_debug_impl(&dword_2390FD000, v28, OS_LOG_TYPE_DEBUG, "HeloEstimator, isGnssFixReadyForEarlyReturn,requested,%f,vUnc1Sigma,%f", (uint8_t *)&v31, 0x16u);
          }
        }
        v29 = v23 * 3.0;
        if (v27 <= v23 * 3.0)
          v29 = v27;
        if (v18 >= v29)
        {
          v30 = sqrt(v19 * v19 + v19 * v19) / 1.41421356;
          v6 = qword_2542CF610;
          if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
          {
            v31 = 134284033;
            *(double *)v32 = v30;
            *(_WORD *)&v32[8] = 2049;
            v33 = v19;
            v34 = 2049;
            v35 = v19;
            _os_log_debug_impl(&dword_2390FD000, v6, OS_LOG_TYPE_DEBUG, "HeloEstimator, isGnssFixReadyForEarlyReturn,drms,%{private}f,smj,%{private}f,smn,%{private}f", (uint8_t *)&v31, 0x20u);
            v6 = qword_2542CF610;
          }
          result = os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG);
          if (v30 > v23)
          {
            if (result)
            {
              LOWORD(v31) = 0;
              v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn, horizontal criteria not met";
              goto LABEL_14;
            }
          }
          else
          {
            if (result)
            {
              LOWORD(v31) = 0;
              _os_log_debug_impl(&dword_2390FD000, v6, OS_LOG_TYPE_DEBUG, "HeloEstimator, isGnssFixReadyForEarlyReturn, returning true", (uint8_t *)&v31, 2u);
            }
            return 1;
          }
        }
        else
        {
          v6 = qword_2542CF610;
          result = os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG);
          if (result)
          {
            LOWORD(v31) = 0;
            v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn, vertical criteria not met";
            goto LABEL_14;
          }
        }
      }
      else
      {
        v20 = qword_2542CF610;
        result = os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG);
        if (result)
        {
          v31 = 67109376;
          *(_DWORD *)v32 = (int)v19;
          *(_WORD *)&v32[4] = 1024;
          *(_DWORD *)&v32[6] = (int)v19;
          v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn,semiMajor,%hhu,semiMinor,%hhu,POS Error ellipse is too elongated";
          v14 = v20;
          v15 = 14;
          goto LABEL_15;
        }
      }
    }
    else
    {
      v17 = qword_2542CF618;
      result = os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG);
      if (result)
      {
        v31 = 67109120;
        *(_DWORD *)v32 = v16;
        v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn number of GNSS fixes received < 2, returning %d";
        v14 = v17;
        v15 = 8;
        goto LABEL_15;
      }
    }
  }
  else
  {
    v6 = qword_2542CF618;
    result = os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG);
    if (result)
    {
      LOWORD(v31) = 0;
      v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn too early to return in session, returning";
      goto LABEL_14;
    }
  }
  return result;
}

void sub_239187230(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _OWORD *v4;
  double v10;
  double v11;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  NSObject *v23;
  __int128 v24;
  _BYTE buf[20];
  __int128 v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  *(_DWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  v4 = (_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 16) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a3 + 24) = _Q0;
  *(_OWORD *)(a3 + 40) = _Q0;
  *(_QWORD *)(a3 + 56) = 0;
  *(_DWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_QWORD *)(a3 + 80) = 0;
  *(_QWORD *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 96) = 0xBFF0000000000000;
  *(_DWORD *)(a3 + 104) = 0;
  *(_QWORD *)(a3 + 112) = 0;
  *(_DWORD *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = 0;
  *(_DWORD *)(a3 + 136) = 0;
  *(_QWORD *)(a3 + 144) = 0;
  *(_DWORD *)(a3 + 152) = 0;
  *(_QWORD *)(a3 + 160) = 0;
  v26 = *(_OWORD *)(a1 + 4);
  v10 = *(double *)(a1 + 24);
  v27 = *(_DWORD *)(a1 + 20);
  if (v10 == -1.0 || (v11 = *(double *)(a1 + 96), v11 == -1.0))
  {
    v23 = qword_2542CF610;
    if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v23, OS_LOG_TYPE_DEBUG, "HeloEstimator, isGnssFixReadyForEarlyReturn no GNSS fix available, returning", buf, 2u);
    }
  }
  else
  {
    v13 = *(_QWORD *)(a1 + 48);
    v14 = *(_QWORD *)(a1 + 128);
    v15 = *(_DWORD *)(a1 + 124);
    v16 = *(_QWORD *)(a1 + 112);
    v17 = *(_QWORD *)(a1 + 88);
    v19 = *(_QWORD *)(a1 + 72);
    v18 = *(_QWORD *)(a1 + 80);
    v24 = *(_OWORD *)(a1 + 56);
    v20 = *(_QWORD *)(a1 + 104);
    v21 = fmax(sub_239185E54(v18, a2, 0x78uLL, v10, 3.0, 15.0), 25.0);
    v22 = sub_239185E54(v16, a2, 0x12CuLL, v11, 0.5, 0.5);
    *(_OWORD *)buf = v26;
    *(_DWORD *)&buf[16] = v27;
    *v4 = *(_OWORD *)&buf[4];
    *(double *)(a3 + 24) = v21;
    *(double *)(a3 + 32) = v21;
    *(double *)(a3 + 40) = v21;
    *(_QWORD *)(a3 + 48) = v13;
    *(_OWORD *)(a3 + 56) = v24;
    *(_QWORD *)(a3 + 72) = v19;
    *(_QWORD *)(a3 + 80) = v18;
    *(_QWORD *)(a3 + 144) = v14;
    *(_QWORD *)(a3 + 88) = v17;
    *(double *)(a3 + 96) = v22;
    *(_QWORD *)(a3 + 104) = v20;
    *(_QWORD *)(a3 + 112) = v16;
    *(_QWORD *)(a3 + 160) = v14;
    *(_DWORD *)(a3 + 136) = 1;
    *(_DWORD *)(a3 + 140) = v15;
    *(_DWORD *)(a3 + 152) = 1;
    *(_DWORD *)(a3 + 156) = v15;
  }
}

uint64_t sub_239187420(uint64_t a1, _DWORD *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_5:
    sub_23918C1A0(v8, v6, v7, "asn1PD_SupportedWcdmaInfo");
    return v5;
  }
  v9 = v4;
  *a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_5;
  }
  if (!v9)
    return 0;
  v8 = sub_23918D648(a1);
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return v5;
}

uint64_t sub_2391874D4(uint64_t a1, _DWORD *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;

  *a2 = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_33:
    sub_23918C1A0(v7, v5, v6, "asn1PD_SupportedWLANApsChannel11a");
    return v4;
  }
  a2[1] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[2] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[3] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[4] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[5] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[6] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[7] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[8] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[9] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[10] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[11] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[12] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[13] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[14] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[15] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  return v4;
}

uint64_t sub_2391877BC(uint64_t a1, _DWORD *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;

  *a2 = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_29:
    sub_23918C1A0(v7, v5, v6, "asn1PD_SupportedWLANApsChannel11bg");
    return v4;
  }
  a2[1] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[2] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[3] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[4] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[5] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[6] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[7] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[8] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[9] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[10] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[11] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[12] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[13] = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  return v4;
}

uint64_t sub_239187A4C(uint64_t a1, uint64_t a2)
{
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _BYTE *v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64x2_t v33;
  char *v34;
  int64x2_t *v35;
  int v36;
  void *__p;
  _BYTE *v38;
  uint64_t v39;
  char v40;
  unsigned __int8 v41;
  _BYTE *v42;
  int64x2_t v43;
  char *v44;
  uint64_t v45;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  v41 = 0;
  if (v5)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    v8 = v5;
LABEL_7:
    sub_23918C1A0(v8, v6, v7, "asn1PD_SupportedWLANApsList");
    return v5;
  }
  v9 = v4;
  *(_DWORD *)a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    v8 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  *(_DWORD *)(a2 + 4) = sub_23918C3B4((uint64_t **)a1);
  LOBYTE(v5) = *(_BYTE *)(a1 + 16);
  if ((_BYTE)v5)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    v8 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  v5 = sub_23918C4D0(a1, 1, 0x80u, &v41);
  v35 = (int64x2_t *)(a2 + 8);
  sub_239189244((uint64_t *)(a2 + 8));
  if (!v5 && v41)
  {
    v11 = 0;
    while (1)
    {
      v36 = 0;
      v38 = 0;
      v39 = 0;
      __p = 0;
      v40 = -1;
      v12 = sub_23918C3B4((uint64_t **)a1);
      v13 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16)
        || (v14 = v12,
            v36 = 48,
            sub_23918C9B4(a1, 0x30u, (unint64_t *)&__p, 0),
            v13 = *(unsigned __int8 *)(a1 + 16),
            *(_BYTE *)(a1 + 16)))
      {
        sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SupportedWLANApData");
        goto LABEL_28;
      }
      LOBYTE(v42) = 0;
      v15 = sub_23918C3B4((uint64_t **)a1);
      v13 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
        break;
      if (v15)
        v16 = sub_23918DA84(a1, &v42);
      else
        v16 = sub_23918C4D0(a1, 0, 2u, &v42);
      v13 = v16;
      if (v16)
      {
        sub_23918C1A0(v16, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_apDevType");
        goto LABEL_27;
      }
      if (v42 >= 3u)
      {
        v13 = 4;
        *(_BYTE *)(a1 + 16) = 4;
        sub_23918C1A0(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_apDevType");
        goto LABEL_27;
      }
      v40 = (char)v42;
      if (v14)
      {
        v17 = sub_23918D648(a1);
        v13 = v17;
        if (v17)
          sub_23918C1A0(v17, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SupportedWLANApData");
      }
      else
      {
        v13 = 0;
      }
LABEL_28:
      v19 = *(_QWORD *)(a2 + 16);
      v18 = *(_QWORD *)(a2 + 24);
      if (v19 >= v18)
      {
        v21 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v19 - v35->i64[0]) >> 3);
        v22 = v21 + 1;
        if (v21 + 1 > 0x666666666666666)
          sub_23910165C();
        v23 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v18 - v35->i64[0]) >> 3);
        if (2 * v23 > v22)
          v22 = 2 * v23;
        if (v23 >= 0x333333333333333)
          v24 = 0x666666666666666;
        else
          v24 = v22;
        v45 = a2 + 24;
        if (v24)
        {
          if (v24 > 0x666666666666666)
            sub_239105DBC();
          v25 = operator new(40 * v24);
        }
        else
        {
          v25 = 0;
        }
        v26 = &v25[40 * v21];
        v42 = v25;
        v43.i64[0] = (uint64_t)v26;
        v43.i64[1] = (uint64_t)v26;
        v44 = &v25[40 * v24];
        *(_DWORD *)v26 = v36;
        *((_QWORD *)v26 + 2) = 0;
        *((_QWORD *)v26 + 3) = 0;
        *((_QWORD *)v26 + 1) = 0;
        sub_239189290((_QWORD *)v26 + 1, __p, (uint64_t)v38, v38 - (_BYTE *)__p);
        v25[40 * v21 + 32] = v40;
        v27 = v43.i64[0];
        v20 = v43.i64[1] + 40;
        v43.i64[1] += 40;
        v29 = *(_QWORD *)(a2 + 8);
        v28 = *(_QWORD *)(a2 + 16);
        if (v28 == v29)
        {
          v33 = vdupq_n_s64(v28);
        }
        else
        {
          v30 = 0;
          do
          {
            v31 = v27 + v30;
            v32 = v28 + v30;
            *(_DWORD *)(v31 - 40) = *(_DWORD *)(v28 + v30 - 40);
            *(_QWORD *)(v31 - 24) = 0;
            *(_QWORD *)(v31 - 16) = 0;
            *(_QWORD *)(v31 - 32) = 0;
            *(_OWORD *)(v31 - 32) = *(_OWORD *)(v28 + v30 - 32);
            *(_QWORD *)(v31 - 16) = *(_QWORD *)(v28 + v30 - 16);
            *(_QWORD *)(v32 - 32) = 0;
            *(_QWORD *)(v32 - 24) = 0;
            *(_QWORD *)(v32 - 16) = 0;
            *(_BYTE *)(v31 - 8) = *(_BYTE *)(v28 + v30 - 8);
            v30 -= 40;
          }
          while (v28 + v30 != v29);
          v33 = *v35;
          v20 = v43.i64[1];
          v27 += v30;
        }
        *(_QWORD *)(a2 + 8) = v27;
        *(_QWORD *)(a2 + 16) = v20;
        v43 = v33;
        v34 = *(char **)(a2 + 24);
        *(_QWORD *)(a2 + 24) = v44;
        v44 = v34;
        v42 = (_BYTE *)v33.i64[0];
        sub_239189308((uint64_t)&v42);
      }
      else
      {
        *(_DWORD *)v19 = v36;
        *(_QWORD *)(v19 + 16) = 0;
        *(_QWORD *)(v19 + 24) = 0;
        *(_QWORD *)(v19 + 8) = 0;
        sub_239189290((_QWORD *)(v19 + 8), __p, (uint64_t)v38, v38 - (_BYTE *)__p);
        *(_BYTE *)(v19 + 32) = v40;
        v20 = v19 + 40;
        *(_QWORD *)(a2 + 16) = v20;
      }
      *(_QWORD *)(a2 + 16) = v20;
      if (v13)
      {
        sub_23918C1A0(v13, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SupportedWLANApsList");
        LOBYTE(v5) = v13;
      }
      if (__p)
      {
        v38 = __p;
        operator delete(__p);
      }
      if (v13)
        return v5;
      if (++v11 >= (unint64_t)v41)
        goto LABEL_56;
    }
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_apDevType");
LABEL_27:
    sub_23918C1A0(v13, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SupportedWLANApData");
    goto LABEL_28;
  }
  if (v5)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    v8 = v5;
    goto LABEL_7;
  }
LABEL_56:
  if (*(_DWORD *)a2)
  {
    v8 = sub_2391874D4(a1, (_DWORD *)(a2 + 32));
    if (v8)
    {
      LOBYTE(v5) = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_7;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    v8 = sub_2391877BC(a1, (_DWORD *)(a2 + 96));
    if (v8)
    {
      LOBYTE(v5) = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_7;
    }
  }
  if (!v9)
  {
    LOBYTE(v5) = 0;
    return v5;
  }
  v8 = sub_23918D648(a1);
  LOBYTE(v5) = v8;
  if (v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  return v5;
}

void sub_239187F98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v18 + 16) = v19;
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239187FD4(uint64_t a1, _DWORD *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_27:
    sub_23918C1A0(v8, v6, v7, "asn1PD_SupportedWLANInfo");
    return v5;
  }
  v9 = v4;
  *a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[1] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[2] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[3] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[4] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[5] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[6] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[7] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[8] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[9] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[10] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[11] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  if (!v9)
    return 0;
  v8 = sub_23918D648(a1);
  v5 = v8;
  if (!(_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_27;
  }
  return v5;
}

uint64_t sub_239188268(uint64_t a1, _DWORD *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_11:
    sub_23918C1A0(v8, v6, v7, "asn1PD_SupportedNetworkInformation");
    return v5;
  }
  v9 = v4;
  *a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[1] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[2] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[3] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  if (*a2)
  {
    v8 = sub_239187FD4(a1, a2 + 4);
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  if (a2[1])
  {
    v8 = sub_239187A4C(a1, (uint64_t)(a2 + 16));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  a2[54] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[55] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  if (a2[2])
  {
    v8 = sub_239187420(a1, a2 + 56);
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  a2[57] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[58] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[59] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[60] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[61] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[62] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[63] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[64] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[65] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  if (v9)
    sub_23918D648(a1);
  return 0;
}

uint64_t sub_2391885F4(uint64_t a1, _DWORD *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_23918C1A0(v8, v6, v7, "asn1PD_GNSSPosTechnology");
    return v5;
  }
  v9 = v4;
  *a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  a2[1] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  a2[2] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  a2[3] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  a2[4] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_GNSSPosTechnology");
LABEL_14:
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_15;
  }
  a2[5] = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    goto LABEL_14;
  if (!v9)
    return 0;
  v8 = sub_23918D648(a1);
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  return v5;
}

uint64_t sub_239188788(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23918C42C(a1, 0, 9, a2);
  v4 = v3;
  if ((_DWORD)v3)
    sub_23918C1A0(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MCC_MNC_Digit");
  return v4;
}

uint64_t sub_2391887D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_25:
    sub_23918C1A0(v7, v5, v6, "asn1PE_CellGlobalIdEUTRA");
    return v4;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v8 = *(_DWORD *)(a1 + 8);
    v9 = *(_DWORD *)(a1 + 12);
    v10 = *(unsigned __int8 *)(a1 + 16);
LABEL_24:
    sub_23918C1A0(v10, v8, v9, "asn1PE_PLMN_Identity");
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = v4;
    goto LABEL_25;
  }
  if (*(_DWORD *)a2)
  {
    v11 = *(_QWORD *)(a2 + 8);
    v12 = *(_QWORD *)(a2 + 16);
    if ((_DWORD)v12 - (_DWORD)v11 != 3)
    {
      *(_BYTE *)(a1 + 16) = 4;
      sub_23918C1A0(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeInteger");
      v4 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        v13 = *(_DWORD *)(a1 + 8);
        v14 = *(_DWORD *)(a1 + 12);
        v15 = "asn1PE_MCC";
        LODWORD(v16) = *(unsigned __int8 *)(a1 + 16);
LABEL_23:
        sub_23918C1A0(v16, v13, v14, v15);
        v8 = *(_DWORD *)(a1 + 8);
        v9 = *(_DWORD *)(a1 + 12);
        v10 = v4;
        goto LABEL_24;
      }
      v11 = *(_QWORD *)(a2 + 8);
      v12 = *(_QWORD *)(a2 + 16);
    }
    if (v12 != v11)
    {
      v17 = 0;
      while (1)
      {
        v16 = sub_239188788(a1, *(_BYTE *)(v11 + v17));
        if ((_DWORD)v16)
          break;
        ++v17;
        v11 = *(_QWORD *)(a2 + 8);
        if (v17 >= *(_QWORD *)(a2 + 16) - v11)
          goto LABEL_14;
      }
      v4 = v16;
      v13 = *(_DWORD *)(a1 + 8);
      v14 = *(_DWORD *)(a1 + 12);
      v15 = "asn1PE_MCC";
      goto LABEL_23;
    }
  }
LABEL_14:
  v16 = sub_23918C42C(a1, 2, 3, *(_DWORD *)(a2 + 40) - *(_DWORD *)(a2 + 32));
  if ((_DWORD)v16)
  {
    v4 = v16;
    v13 = *(_DWORD *)(a1 + 8);
    v14 = *(_DWORD *)(a1 + 12);
    v15 = "asn1PE_MNC";
    goto LABEL_23;
  }
  v18 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a2 + 40) != v18)
  {
    v19 = 0;
    while (1)
    {
      v16 = sub_239188788(a1, *(_BYTE *)(v18 + v19));
      if ((_DWORD)v16)
        break;
      ++v19;
      v18 = *(_QWORD *)(a2 + 32);
      if (v19 >= *(_QWORD *)(a2 + 40) - v18)
        goto LABEL_20;
    }
    v4 = v16;
    v13 = *(_DWORD *)(a1 + 8);
    v14 = *(_DWORD *)(a1 + 12);
    v15 = "asn1PE_MNC";
    goto LABEL_23;
  }
LABEL_20:
  v20 = sub_23918C814(a1, 0, 0, 0x1Cu, (_QWORD *)(a2 + 56), 1);
  v4 = v20;
  if ((_DWORD)v20)
  {
    sub_23918C1A0(v20, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellIdentity");
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = v4;
    goto LABEL_25;
  }
  return v4;
}

uint64_t sub_239188A18(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23918C814(a1, 0, 0, 0x10u, a2, 1);
  v4 = v3;
  if ((_DWORD)v3)
    sub_23918C1A0(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_TrackingAreaCode");
  return v4;
}

uint64_t sub_239188A70(uint64_t a1, unsigned __int16 a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23918C42C(a1, 0, 503, a2);
  v4 = v3;
  if ((_DWORD)v3)
    sub_23918C1A0(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PhysCellId");
  return v4;
}

uint64_t sub_239188AC0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23918C42C(a1, 0, 97, a2);
  v4 = v3;
  if ((_DWORD)v3)
    sub_23918C1A0(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_RSRP_Range");
  return v4;
}

uint64_t sub_239188B10(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23918C42C(a1, 0, 34, a2);
  v4 = v3;
  if ((_DWORD)v3)
    sub_23918C1A0(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_RSRQ_Range");
  return v4;
}

uint64_t sub_239188B60(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;

  v4 = sub_23918C42C(a1, 1, 8, (unint64_t)(a2[1] - *a2) >> 7);
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_31;
  }
  v8 = *a2;
  if (a2[1] == *a2)
    return 0;
  v9 = 0;
  v10 = 0;
  while (1)
  {
    sub_23918C32C((uint64_t **)a1, *(_DWORD *)(v8 + v9));
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      v18 = *(_DWORD *)(a1 + 8);
      v19 = *(_DWORD *)(a1 + 12);
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_30;
    }
    v11 = sub_239188A70(a1, *(_WORD *)(v8 + v9 + 4));
    if ((_DWORD)v11)
    {
      v5 = v11;
      v18 = *(_DWORD *)(a1 + 8);
      v19 = *(_DWORD *)(a1 + 12);
      goto LABEL_30;
    }
    if (*(_DWORD *)(v8 + v9))
    {
      v12 = sub_2391887D8(a1, v8 + v9 + 8);
      if ((_DWORD)v12)
      {
        v5 = v12;
        v22 = *(_DWORD *)(a1 + 8);
        v23 = *(_DWORD *)(a1 + 12);
      }
      else
      {
        v12 = sub_239188A18(a1, (_QWORD *)(v8 + v9 + 88));
        if (!(_DWORD)v12)
          goto LABEL_10;
        v5 = v12;
        v22 = *(_DWORD *)(a1 + 8);
        v23 = *(_DWORD *)(a1 + 12);
      }
      sub_23918C1A0(v12, v22, v23, "asn1PE_cgi_Info");
      v18 = *(_DWORD *)(a1 + 8);
      v19 = *(_DWORD *)(a1 + 12);
      LODWORD(v11) = v5;
      goto LABEL_30;
    }
LABEL_10:
    sub_23918C32C((uint64_t **)a1, 0);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      v20 = *(_DWORD *)(a1 + 8);
      v21 = *(_DWORD *)(a1 + 12);
      LODWORD(v15) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_28;
    }
    v13 = v8 + v9;
    sub_23918C32C((uint64_t **)a1, *(unsigned __int8 *)(v13 + 120) < 0x62u);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      v20 = *(_DWORD *)(a1 + 8);
      v21 = *(_DWORD *)(a1 + 12);
      LODWORD(v15) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_28;
    }
    sub_23918C32C((uint64_t **)a1, *(unsigned __int8 *)(v13 + 121) < 0x23u);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      v20 = *(_DWORD *)(a1 + 8);
      v21 = *(_DWORD *)(a1 + 12);
      LODWORD(v15) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_28;
    }
    v14 = *(unsigned __int8 *)(v13 + 120);
    if (v14 <= 0x61)
    {
      v15 = sub_239188AC0(a1, v14);
      if ((_DWORD)v15)
        break;
    }
    v16 = *(unsigned __int8 *)(v13 + 121);
    if (v16 < 0x23)
    {
      v17 = sub_239188B10(a1, v16);
      if ((_DWORD)v17)
      {
        v5 = v17;
        goto LABEL_29;
      }
    }
    ++v10;
    v8 = *a2;
    v9 += 128;
    if (v10 >= (a2[1] - *a2) >> 7)
      return 0;
  }
  v5 = v15;
  v20 = *(_DWORD *)(a1 + 8);
  v21 = *(_DWORD *)(a1 + 12);
LABEL_28:
  sub_23918C1A0(v15, v20, v21, "asn1PE_measResult");
LABEL_29:
  v18 = *(_DWORD *)(a1 + 8);
  v19 = *(_DWORD *)(a1 + 12);
  LODWORD(v11) = v5;
LABEL_30:
  sub_23918C1A0(v11, v18, v19, "asn1PE_MeasResultEUTRA");
  v6 = *(_DWORD *)(a1 + 8);
  v7 = *(_DWORD *)(a1 + 12);
  LODWORD(v4) = v5;
LABEL_31:
  sub_23918C1A0(v4, v6, v7, "asn1PE_MeasResultListEUTRA");
  return v5;
}

uint64_t sub_239188DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_17:
    sub_23918C1A0(v7, v5, v6, "asn1PE_LteCellInformation");
    return v4;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_17;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_17;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 8));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_17;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 12));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_17;
  }
  v7 = sub_2391887D8(a1, a2 + 16);
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_17;
  }
  v7 = sub_239188A70(a1, *(_WORD *)(a2 + 96));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_17;
  }
  v7 = sub_239188A18(a1, (_QWORD *)(a2 + 104));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_17;
  }
  if (*(_DWORD *)a2)
  {
    v7 = sub_239188AC0(a1, *(_BYTE *)(a2 + 128));
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_17;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    v7 = sub_239188B10(a1, *(_BYTE *)(a2 + 129));
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_17;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    v7 = sub_23918C42C(a1, 0, 1282, *(unsigned __int16 *)(a2 + 130));
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_17;
    }
  }
  if (!*(_DWORD *)(a2 + 12))
    return 0;
  v7 = sub_239188B60(a1, (uint64_t *)(a2 + 136));
  v4 = v7;
  if ((_DWORD)v7)
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_17;
  }
  return v4;
}

uint64_t sub_239189038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  _WORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  int32x2_t v13;

  v4 = sub_23918DA38(a1, 0);
  v13 = 0;
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v4 = sub_23918D7B0(a1, &v13);
    if ((_DWORD)v4)
    {
      v5 = v4;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      sub_23918C32C((uint64_t **)a1, 0);
      v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        v6 = *(_DWORD *)(a1 + 8);
        v7 = *(_DWORD *)(a1 + 12);
        LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
      }
      else
      {
        v4 = sub_23918C42C(a1, 0, 5, **(unsigned __int16 **)(a2 + 144) - 1);
        if ((_DWORD)v4)
        {
          v5 = v4;
          v6 = *(_DWORD *)(a1 + 8);
          v7 = *(_DWORD *)(a1 + 12);
        }
        else
        {
          v8 = *(_WORD **)(a2 + 144);
          switch(*v8)
          {
            case 1:
            case 2:
            case 4:
            case 5:
              v5 = 1;
              *(_BYTE *)(a1 + 16) = 1;
              v9 = *(_DWORD *)(a1 + 8);
              v10 = *(_DWORD *)(a1 + 12);
              v11 = 1;
              goto LABEL_15;
            case 3:
              v5 = sub_239188DE8(a1, (uint64_t)(v8 + 4));
              if ((_DWORD)v5)
                goto LABEL_16;
              v4 = sub_23918D80C(a1, &v13);
              v5 = v4;
              if (!(_DWORD)v4)
                return v5;
              v6 = *(_DWORD *)(a1 + 8);
              v7 = *(_DWORD *)(a1 + 12);
              break;
            default:
              v5 = 4;
              *(_BYTE *)(a1 + 16) = 4;
              v9 = *(_DWORD *)(a1 + 8);
              v10 = *(_DWORD *)(a1 + 12);
              v11 = 4;
LABEL_15:
              sub_23918C1A0(v11, v9, v10, "asn1PE_CellInfo_VER2");
LABEL_16:
              v6 = *(_DWORD *)(a1 + 8);
              v7 = *(_DWORD *)(a1 + 12);
              LODWORD(v4) = v5;
              break;
          }
        }
      }
    }
  }
  sub_23918C1A0(v4, v6, v7, "asn1PE_CellInfo_VER2");
  return v5;
}

void sub_239189244(uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;
  void *v4;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 40)
  {
    v4 = *(void **)(i - 32);
    if (v4)
    {
      *(_QWORD *)(i - 24) = v4;
      operator delete(v4);
    }
  }
  a1[1] = v2;
}

_QWORD *sub_239189290(_QWORD *result, const void *a2, uint64_t a3, size_t __sz)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (__sz)
  {
    v6 = result;
    result = sub_23910161C(result, __sz);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_2391892EC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239189308(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  while (v2 != v3)
  {
    *(_QWORD *)(a1 + 16) = v2 - 40;
    v4 = *(void **)(v2 - 32);
    if (v4)
    {
      *(_QWORD *)(v2 - 24) = v4;
      operator delete(v4);
      v2 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v2 -= 40;
    }
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_239189368(uint64_t a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 v10;
  unsigned __int8 v11;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  v11 = 0;
  if ((_DWORD)v5)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
  }
  else
  {
    if (v4)
    {
      v8 = sub_23918DA84(a1, &v11);
      if ((_DWORD)v8)
      {
        v5 = v8;
        v6 = *(_DWORD *)(a1 + 8);
        v7 = *(_DWORD *)(a1 + 12);
        goto LABEL_3;
      }
      v10 = v11;
    }
    else
    {
      v8 = sub_23918C4D0(a1, 0, 1u, &v11);
      if ((_DWORD)v8)
      {
        v5 = v8;
        v6 = *(_DWORD *)(a1 + 8);
        v7 = *(_DWORD *)(a1 + 12);
        goto LABEL_3;
      }
      v10 = v11 + 1;
    }
    if (v10 <= 1u)
    {
      v5 = 0;
      *a2 = v10;
      return v5;
    }
    v5 = 4;
    *(_BYTE *)(a1 + 16) = 4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = 4;
  }
LABEL_3:
  sub_23918C1A0(v8, v6, v7, "asn1PD_NotificationMode");
  return v5;
}

uint64_t sub_239189468(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  char *v14;
  int v15;
  int v17;
  unsigned __int8 v18;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_18:
    sub_23918C1A0(v8, v6, v7, "asn1PD_HistoricReporting");
    return v5;
  }
  v9 = v4;
  *(_DWORD *)(a2 + 32) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_18;
  }
  v10 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  v18 = 0;
  if ((_DWORD)v5)
  {
LABEL_17:
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_18;
  }
  if (v10)
  {
    v11 = sub_23918DA84(a1, &v18);
    if ((_DWORD)v11)
    {
      v5 = v11;
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_AllowedReportingType";
LABEL_16:
      sub_23918C1A0(v11, v12, v13, v14);
      goto LABEL_17;
    }
  }
  else
  {
    v11 = sub_23918C4D0(a1, 0, 2u, &v18);
    if ((_DWORD)v11)
    {
      v5 = v11;
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_AllowedReportingType";
      goto LABEL_16;
    }
  }
  if (v18 >= 3u)
  {
    v5 = 4;
    *(_BYTE *)(a1 + 16) = 4;
    v12 = *(_DWORD *)(a1 + 8);
    v13 = *(_DWORD *)(a1 + 12);
    v14 = "asn1PD_AllowedReportingType";
    LODWORD(v11) = 4;
    goto LABEL_16;
  }
  *(_BYTE *)a2 = v18;
  if (*(_DWORD *)(a2 + 32))
  {
    v15 = sub_23918C3B4((uint64_t **)a1);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_ReportingCriteria";
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_16;
    }
    v17 = v15;
    *(_DWORD *)(a2 + 20) = sub_23918C3B4((uint64_t **)a1);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_ReportingCriteria";
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_16;
    }
    *(_DWORD *)(a2 + 24) = sub_23918C3B4((uint64_t **)a1);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_ReportingCriteria";
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_16;
    }
    *(_DWORD *)(a2 + 28) = sub_23918C3B4((uint64_t **)a1);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16) || *(_DWORD *)(a2 + 20) && (v5 = sub_239189754(a1, (_DWORD *)(a2 + 4)), (_DWORD)v5))
    {
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_ReportingCriteria";
      LODWORD(v11) = v5;
      goto LABEL_16;
    }
    if (*(_DWORD *)(a2 + 24))
    {
      v11 = sub_23918C740(a1, 1, 0x10000u, (_DWORD *)(a2 + 12));
      if ((_DWORD)v11)
      {
        v5 = v11;
        v12 = *(_DWORD *)(a1 + 8);
        v13 = *(_DWORD *)(a1 + 12);
        v14 = "asn1PD_ReportingCriteria";
        goto LABEL_16;
      }
    }
    if (*(_DWORD *)(a2 + 28))
    {
      v11 = sub_23918C740(a1, 0, 0x15180u, (_DWORD *)(a2 + 16));
      if ((_DWORD)v11)
      {
        v5 = v11;
        v12 = *(_DWORD *)(a1 + 8);
        v13 = *(_DWORD *)(a1 + 12);
        v14 = "asn1PD_ReportingCriteria";
        goto LABEL_16;
      }
    }
    if (v17)
    {
      v11 = sub_23918D648(a1);
      if ((_DWORD)v11)
      {
        v5 = v11;
        v12 = *(_DWORD *)(a1 + 8);
        v13 = *(_DWORD *)(a1 + 12);
        v14 = "asn1PD_ReportingCriteria";
        goto LABEL_16;
      }
    }
  }
  if (!v9)
    return 0;
  v8 = sub_23918D648(a1);
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_18;
  }
  return v5;
}

uint64_t sub_239189754(uint64_t a1, _DWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  v4 = sub_23918C670(a1, -525600, -1, a2);
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
LABEL_5:
    sub_23918C1A0(v4, v6, v7, "asn1PD_TimeWindow");
    return v5;
  }
  v4 = sub_23918C670(a1, -525599, 0, a2 + 1);
  v5 = v4;
  if ((_DWORD)v4)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return v5;
}

uint64_t sub_2391897EC(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  char *v14;
  int v15;
  int v17;
  unsigned __int8 v18;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_18:
    sub_23918C1A0(v8, v6, v7, "asn1PD_ProtectionLevel");
    return v5;
  }
  v9 = v4;
  *(_DWORD *)(a2 + 64) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_18;
  }
  v10 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  v18 = 0;
  if ((_DWORD)v5)
  {
LABEL_17:
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_18;
  }
  if (v10)
  {
    v11 = sub_23918DA84(a1, &v18);
    if ((_DWORD)v11)
    {
      v5 = v11;
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_ProtLevel";
LABEL_16:
      sub_23918C1A0(v11, v12, v13, v14);
      goto LABEL_17;
    }
  }
  else
  {
    v11 = sub_23918C4D0(a1, 0, 1u, &v18);
    if ((_DWORD)v11)
    {
      v5 = v11;
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_ProtLevel";
      goto LABEL_16;
    }
  }
  if (v18 >= 2u)
  {
    v5 = 4;
    *(_BYTE *)(a1 + 16) = 4;
    v12 = *(_DWORD *)(a1 + 8);
    v13 = *(_DWORD *)(a1 + 12);
    v14 = "asn1PD_ProtLevel";
    LODWORD(v11) = 4;
    goto LABEL_16;
  }
  *(_BYTE *)a2 = v18;
  if (*(_DWORD *)(a2 + 64))
  {
    v15 = sub_23918C3B4((uint64_t **)a1);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_BasicProtectionParams";
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_16;
    }
    v17 = v15;
    sub_23918C9B4(a1, 0x40u, (unint64_t *)(a2 + 8), 0);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_BasicProtectionParams_KeyIdentifier");
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_BasicProtectionParams";
      LODWORD(v11) = v5;
      goto LABEL_16;
    }
    v11 = sub_23918C740(a1, 0, 0xFFFFu, (_DWORD *)(a2 + 32));
    if ((_DWORD)v11)
    {
      v5 = v11;
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_BasicProtectionParams";
      goto LABEL_16;
    }
    sub_23918C9B4(a1, 0x20u, (unint64_t *)(a2 + 40), 0);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_BasicProtectionParams_BasicMAC");
      v12 = *(_DWORD *)(a1 + 8);
      v13 = *(_DWORD *)(a1 + 12);
      v14 = "asn1PD_BasicProtectionParams";
      LODWORD(v11) = v5;
      goto LABEL_16;
    }
    if (v17)
    {
      v11 = sub_23918D648(a1);
      if ((_DWORD)v11)
      {
        v5 = v11;
        v12 = *(_DWORD *)(a1 + 8);
        v13 = *(_DWORD *)(a1 + 12);
        v14 = "asn1PD_BasicProtectionParams";
        goto LABEL_16;
      }
    }
  }
  if (!v9)
    return 0;
  v8 = sub_23918D648(a1);
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_18;
  }
  return v5;
}

uint64_t sub_239189A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  __int32 v11;
  int32x2_t v12;
  int v13;
  unsigned __int8 v14[4];
  int v15;

  v14[0] = 0;
  v15 = 0;
  v4 = sub_23918D690(a1, (uint64_t)v14);
  v12 = 0;
  v13 = 0;
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    sub_23918D52C(a1, &v12);
    if ((_DWORD)v4)
    {
      v5 = v4;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      v8 = sub_23918C3B4((uint64_t **)a1);
      v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        v6 = *(_DWORD *)(a1 + 8);
        v7 = *(_DWORD *)(a1 + 12);
        LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
      }
      else
      {
        v9 = v8;
        *(_DWORD *)(a2 + 280) = sub_23918C3B4((uint64_t **)a1);
        v5 = *(unsigned __int8 *)(a1 + 16);
        if (*(_BYTE *)(a1 + 16))
        {
          v6 = *(_DWORD *)(a1 + 8);
          v7 = *(_DWORD *)(a1 + 12);
          LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
        }
        else
        {
          *(_DWORD *)(a2 + 284) = sub_23918C3B4((uint64_t **)a1);
          v5 = *(unsigned __int8 *)(a1 + 16);
          if (*(_BYTE *)(a1 + 16))
          {
            v6 = *(_DWORD *)(a1 + 8);
            v7 = *(_DWORD *)(a1 + 12);
            LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
          }
          else
          {
            *(_DWORD *)(a2 + 288) = sub_23918C3B4((uint64_t **)a1);
            v5 = *(unsigned __int8 *)(a1 + 16);
            if (*(_BYTE *)(a1 + 16))
            {
              v6 = *(_DWORD *)(a1 + 8);
              v7 = *(_DWORD *)(a1 + 12);
              LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
            }
            else
            {
              *(_DWORD *)(a2 + 292) = sub_23918C3B4((uint64_t **)a1);
              v5 = *(unsigned __int8 *)(a1 + 16);
              if (*(_BYTE *)(a1 + 16))
              {
                v6 = *(_DWORD *)(a1 + 8);
                v7 = *(_DWORD *)(a1 + 12);
                LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
              }
              else
              {
                *(_DWORD *)(a2 + 296) = sub_23918C3B4((uint64_t **)a1);
                v5 = *(unsigned __int8 *)(a1 + 16);
                if (*(_BYTE *)(a1 + 16))
                {
                  v6 = *(_DWORD *)(a1 + 8);
                  v7 = *(_DWORD *)(a1 + 12);
                  LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
                }
                else
                {
                  *(_DWORD *)(a2 + 300) = sub_23918C3B4((uint64_t **)a1);
                  v5 = *(unsigned __int8 *)(a1 + 16);
                  if (*(_BYTE *)(a1 + 16))
                  {
                    v6 = *(_DWORD *)(a1 + 8);
                    v7 = *(_DWORD *)(a1 + 12);
                    LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
                  }
                  else
                  {
                    *(_DWORD *)(a2 + 304) = sub_23918C3B4((uint64_t **)a1);
                    v5 = *(unsigned __int8 *)(a1 + 16);
                    if (*(_BYTE *)(a1 + 16))
                    {
                      v6 = *(_DWORD *)(a1 + 8);
                      v7 = *(_DWORD *)(a1 + 12);
                      LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
                    }
                    else
                    {
                      *(_DWORD *)(a2 + 308) = sub_23918C3B4((uint64_t **)a1);
                      v5 = *(unsigned __int8 *)(a1 + 16);
                      if (*(_BYTE *)(a1 + 16)
                        || *(_DWORD *)(a2 + 280) && (v5 = sub_239189368(a1, (unsigned __int8 *)(a2 + 312)), (_DWORD)v5))
                      {
                        v6 = *(_DWORD *)(a1 + 8);
                        v7 = *(_DWORD *)(a1 + 12);
                        LODWORD(v4) = v5;
                      }
                      else if (*(_DWORD *)(a2 + 284) && (v4 = sub_239188268(a1, (_DWORD *)(a2 + 320)), (_DWORD)v4))
                      {
                        v5 = v4;
                        v6 = *(_DWORD *)(a1 + 8);
                        v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 288) && (v4 = sub_23918BDF4(a1, (_BYTE *)(a2 + 584)), (_DWORD)v4))
                      {
                        v5 = v4;
                        v6 = *(_DWORD *)(a1 + 8);
                        v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 292) && (v4 = sub_2391B637C(a1, a2 + 592), (_DWORD)v4))
                      {
                        v5 = v4;
                        v6 = *(_DWORD *)(a1 + 8);
                        v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 296) && (v4 = sub_239189468(a1, a2 + 680), (_DWORD)v4))
                      {
                        v5 = v4;
                        v6 = *(_DWORD *)(a1 + 8);
                        v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 300) && (v4 = sub_2391897EC(a1, a2 + 720), (_DWORD)v4))
                      {
                        v5 = v4;
                        v6 = *(_DWORD *)(a1 + 8);
                        v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 304) && (v4 = sub_2391885F4(a1, (_DWORD *)(a2 + 792)), (_DWORD)v4))
                      {
                        v5 = v4;
                        v6 = *(_DWORD *)(a1 + 8);
                        v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 308)
                             && (v4 = sub_23918C670(a1, 0, 255, (_DWORD *)(a2 + 816)), (_DWORD)v4))
                      {
                        v5 = v4;
                        v6 = *(_DWORD *)(a1 + 8);
                        v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (v9)
                      {
                        v5 = 1;
                        *(_BYTE *)(a1 + 16) = 1;
                        sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SUPLINIT_VER2");
                        v6 = *(_DWORD *)(a1 + 8);
                        v7 = *(_DWORD *)(a1 + 12);
                        LODWORD(v4) = 1;
                      }
                      else
                      {
                        v11 = v12.i32[0];
                        *(_DWORD *)(a1 + 8) = v13 + v12.i32[1];
                        *(_DWORD *)(a1 + 12) = v11;
                        v4 = sub_23918D5B4(a1, v14, 1u);
                        v5 = v4;
                        if (!(_DWORD)v4)
                          return v5;
                        v6 = *(_DWORD *)(a1 + 8);
                        v7 = *(_DWORD *)(a1 + 12);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  sub_23918C1A0(v4, v6, v7, "asn1PD_SUPLINIT_VER2");
  return v5;
}

uint64_t sub_239189E98()
{
  uint64_t result;
  NSObject *v1;
  int v2;
  const char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  if (qword_2542CF568 != -1)
    dispatch_once(&qword_2542CF568, &unk_250A739E8);
  result = qword_2542CF560;
  if (!qword_2542CF560)
  {
    v1 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v2 = 136315138;
      v3 = "GetInstance";
      _os_log_error_impl(&dword_2390FD000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SuplLppProvider.cpp", 43, "false && \"Memory allocation failure\"");
  }
  return result;
}

_QWORD *sub_239189F8C()
{
  _QWORD *result;

  result = operator new(0x18uLL, MEMORY[0x24BEDB6B8]);
  if (result)
  {
    *result = 0;
    result[1] = 0;
    result[2] = 0;
  }
  qword_2542CF560 = (uint64_t)result;
  return result;
}

void sub_239189FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (!a2)
  {
    v4 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    v7 = 67109120;
    v8 = 513;
    goto LABEL_9;
  }
  v3 = *(_QWORD *)(sub_2391B1EF8() + 24);
  if (!v3)
  {
LABEL_5:
    v4 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    v7 = 67109120;
    v8 = 513;
LABEL_9:
    _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v7, 8u);
    return;
  }
  while (*(_DWORD *)v3 != *(_DWORD *)a2)
  {
    v3 = *(_QWORD *)(v3 + 8);
    if (!v3)
      goto LABEL_5;
  }
  if (*(_BYTE *)(a2 + 32) || *(_QWORD *)(a2 + 8) == *(_QWORD *)(a2 + 16))
  {
    v5 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v7 = 67109120;
      v8 = 515;
      _os_log_error_impl(&dword_2390FD000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v7, 8u);
    }
  }
  sub_23918BC5C(v3 + 16, a2);
  v6 = *(_DWORD *)(v3 + 584);
  if (v6)
    sub_2391B5444(v3 - 8, v6);
}

void sub_23918A158(_QWORD *a1, uint64_t a2)
{
  NSObject *v3;
  char *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  if (!a2)
  {
    v3 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    v6 = 67109120;
    v7 = 515;
LABEL_12:
    _os_log_error_impl(&dword_2390FD000, v3, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v6, 8u);
    return;
  }
  if (*(_BYTE *)(a2 + 4) || (v5 = *(_QWORD *)(a2 + 8), v4 = *(char **)(a2 + 16), (char *)v5 == v4))
  {
    v3 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    v6 = 67109120;
    v7 = 515;
    goto LABEL_12;
  }
  if ((_QWORD *)(a2 + 8) != a1)
  {
    sub_239107FF0(a1, *(char **)(a2 + 8), v4, (unint64_t)&v4[-v5]);
    v5 = *(_QWORD *)(a2 + 8);
    v4 = *(char **)(a2 + 16);
  }
  sub_23918B630(v5, (uint64_t)&v4[-v5]);
}

uint64_t sub_23918A2A0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_23918C1A0(v7, v5, v6, "asn1PE_PosProtocolVersion3GPP");
    return v4;
  }
  v7 = sub_23918C42C(a1, 0, 255, *a2);
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  v7 = sub_23918C42C(a1, 0, 255, a2[1]);
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  v7 = sub_23918C42C(a1, 0, 255, a2[2]);
  v4 = v7;
  if ((_DWORD)v7)
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  return v4;
}

uint64_t sub_23918A388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t v7;
  int v8;
  int v9;
  int32x2_t v11;

  v4 = sub_23918D97C(a1, 1, 1);
  if (*(_DWORD *)(a2 + 4))
    v5 = *(_DWORD *)(a2 + 12) == 0;
  else
    v5 = 0;
  if (v5
    || (*(_DWORD *)(a2 + 8) ? (v6 = *(_DWORD *)(a2 + 16) == 0) : (v6 = 0),
        v6 || (v7 = v4, *(_DWORD *)a2) && !*(_DWORD *)(a2 + 20) || *(_DWORD *)(a2 + 28) && !*(_DWORD *)(a2 + 24)))
  {
    v8 = *(_DWORD *)(a1 + 8);
    v9 = *(_DWORD *)(a1 + 12);
    v7 = 1;
    LODWORD(v4) = 1;
  }
  else
  {
    v11 = 0;
    if ((_DWORD)v4)
    {
      v8 = *(_DWORD *)(a1 + 8);
      v9 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      v4 = sub_23918D7B0(a1, &v11);
      if ((_DWORD)v4)
      {
        v7 = v4;
        v8 = *(_DWORD *)(a1 + 8);
        v9 = *(_DWORD *)(a1 + 12);
      }
      else
      {
        sub_23918C32C((uint64_t **)a1, 0);
        v7 = *(unsigned __int8 *)(a1 + 16);
        if (*(_BYTE *)(a1 + 16))
        {
          v8 = *(_DWORD *)(a1 + 8);
          v9 = *(_DWORD *)(a1 + 12);
          LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
        }
        else
        {
          sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 12));
          v7 = *(unsigned __int8 *)(a1 + 16);
          if (*(_BYTE *)(a1 + 16))
          {
            v8 = *(_DWORD *)(a1 + 8);
            v9 = *(_DWORD *)(a1 + 12);
            LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
          }
          else
          {
            sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 16));
            v7 = *(unsigned __int8 *)(a1 + 16);
            if (*(_BYTE *)(a1 + 16))
            {
              v8 = *(_DWORD *)(a1 + 8);
              v9 = *(_DWORD *)(a1 + 12);
              LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
            }
            else
            {
              sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 20));
              v7 = *(unsigned __int8 *)(a1 + 16);
              if (*(_BYTE *)(a1 + 16))
              {
                v8 = *(_DWORD *)(a1 + 8);
                v9 = *(_DWORD *)(a1 + 12);
                LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
              }
              else
              {
                sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 24));
                v7 = *(unsigned __int8 *)(a1 + 16);
                if (*(_BYTE *)(a1 + 16))
                {
                  v8 = *(_DWORD *)(a1 + 8);
                  v9 = *(_DWORD *)(a1 + 12);
                  LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
                }
                else
                {
                  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 28));
                  v7 = *(unsigned __int8 *)(a1 + 16);
                  if (*(_BYTE *)(a1 + 16))
                  {
                    v8 = *(_DWORD *)(a1 + 8);
                    v9 = *(_DWORD *)(a1 + 12);
                    LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
                  }
                  else if (*(_DWORD *)(a2 + 12) && (v4 = sub_23918A2A0(a1, (unsigned __int8 *)(a2 + 32)), (_DWORD)v4))
                  {
                    v7 = v4;
                    v8 = *(_DWORD *)(a1 + 8);
                    v9 = *(_DWORD *)(a1 + 12);
                  }
                  else if (*(_DWORD *)(a2 + 16) || *(_DWORD *)(a2 + 20))
                  {
                    v7 = 1;
                    *(_BYTE *)(a1 + 16) = 1;
                    sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PosProtocol_VER2");
                    v8 = *(_DWORD *)(a1 + 8);
                    v9 = *(_DWORD *)(a1 + 12);
                    LODWORD(v4) = 1;
                  }
                  else if (*(_DWORD *)(a2 + 24) && (v4 = sub_23918A2A0(a1, (unsigned __int8 *)(a2 + 35)), (_DWORD)v4))
                  {
                    v7 = v4;
                    v8 = *(_DWORD *)(a1 + 8);
                    v9 = *(_DWORD *)(a1 + 12);
                  }
                  else
                  {
                    v4 = sub_23918D80C(a1, &v11);
                    v7 = v4;
                    if (!(_DWORD)v4)
                      return v7;
                    v8 = *(_DWORD *)(a1 + 8);
                    v9 = *(_DWORD *)(a1 + 12);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  sub_23918C1A0(v4, v8, v9, "asn1PE_PosProtocol_VER2");
  return v7;
}

uint64_t sub_23918A68C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  __int32 v11;
  int32x2_t v12;
  int v13;
  unsigned __int8 v14[4];
  int v15;

  v14[0] = 0;
  v15 = 0;
  v4 = sub_23918D690(a1, (uint64_t)v14);
  v12 = 0;
  v13 = 0;
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    sub_23918D52C(a1, &v12);
    if ((_DWORD)v4)
    {
      v5 = v4;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      v8 = sub_23918C3B4((uint64_t **)a1);
      v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        v6 = *(_DWORD *)(a1 + 8);
        v7 = *(_DWORD *)(a1 + 12);
        LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
      }
      else
      {
        v9 = v8;
        *(_DWORD *)(a2 + 84) = sub_23918C3B4((uint64_t **)a1);
        v5 = *(unsigned __int8 *)(a1 + 16);
        if (*(_BYTE *)(a1 + 16))
        {
          v6 = *(_DWORD *)(a1 + 8);
          v7 = *(_DWORD *)(a1 + 12);
          LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
        }
        else if (v9 && (v4 = sub_23918D648(a1), (_DWORD)v4))
        {
          v5 = v4;
          v6 = *(_DWORD *)(a1 + 8);
          v7 = *(_DWORD *)(a1 + 12);
        }
        else
        {
          v11 = v12.i32[0];
          *(_DWORD *)(a1 + 8) = v13 + v12.i32[1];
          *(_DWORD *)(a1 + 12) = v11;
          v4 = sub_23918D5B4(a1, v14, 1u);
          v5 = v4;
          if (!(_DWORD)v4)
            return v5;
          v6 = *(_DWORD *)(a1 + 8);
          v7 = *(_DWORD *)(a1 + 12);
        }
      }
    }
  }
  sub_23918C1A0(v4, v6, v7, "asn1PD_Notification_VER2");
  return v5;
}

uint64_t sub_23918A7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  __int32 v9;
  int32x2_t v10;
  int v11;
  unsigned __int8 v12;

  v12 = 0;
  v4 = sub_23918D758(a1, &v12);
  v10 = 0;
  v11 = 0;
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
LABEL_7:
    sub_23918C1A0(v4, v6, v7, "asn1PD_PosPayLoadVer2");
    return v5;
  }
  *(_WORD *)a2 = v12 + 4;
  sub_23918D52C(a1, &v10);
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  v4 = sub_23918A8D8(a1, a2 + 80);
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  if (*(_DWORD *)(a2 + 80))
    *(_WORD *)a2 = 4;
  if (*(_DWORD *)(a2 + 84))
    *(_WORD *)a2 = 5;
  v5 = 0;
  v9 = v10.i32[0];
  *(_DWORD *)(a1 + 8) = v11 + v10.i32[1];
  *(_DWORD *)(a1 + 12) = v9;
  return v5;
}

uint64_t sub_23918A8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;

  sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  *(_DWORD *)a2 = sub_23918C3B4((uint64_t **)a1);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  v8 = sub_23918C3B4((uint64_t **)a1);
  *(_DWORD *)(a2 + 4) = v8;
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_6:
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = v4;
    goto LABEL_7;
  }
  if (*(_DWORD *)a2)
  {
    v4 = sub_23918A9E4(a1, (uint64_t *)(a2 + 8));
    if ((_DWORD)v4)
      goto LABEL_6;
    v8 = *(_DWORD *)(a2 + 4);
  }
  if (!v8)
    return 0;
  v4 = 1;
  *(_BYTE *)(a1 + 16) = 1;
  sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoadVer2Extension");
  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 12);
  v7 = 1;
LABEL_7:
  sub_23918C1A0(v7, v5, v6, "asn1PD_PosPayLoadVer2Extension");
  return v4;
}

uint64_t sub_23918A9E4(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  int v5;
  unsigned int v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  void *__p;
  _BYTE *v13;
  uint64_t v14;
  int v15;
  int v16;

  v16 = 3;
  v4 = sub_23918C670(a1, 1, 3, &v16);
  sub_23918AE9C(a2);
  if (v4)
  {
    sub_23918C1A0(v4, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoad_lppPayload");
  }
  else
  {
    v5 = v16;
    if (v16 < 1)
    {
LABEL_15:
      LOBYTE(v4) = 0;
    }
    else
    {
      while (1)
      {
        v15 = 0;
        v6 = sub_23918C740(a1, 1, 0xEA60u, &v15);
        if (v6)
          break;
        __p = 0;
        v13 = 0;
        v14 = 0;
        sub_23918C9B4(a1, 8 * v15, (unint64_t *)&__p, 0);
        v7 = *(unsigned __int8 *)(a1 + 16);
        if (*(_BYTE *)(a1 + 16))
        {
          sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoad_lppPayload");
          LOBYTE(v4) = v7;
        }
        else
        {
          v8 = (_QWORD *)a2[1];
          if ((unint64_t)v8 >= a2[2])
          {
            v9 = sub_23918AEF0(a2, (uint64_t)&__p);
          }
          else
          {
            *v8 = 0;
            v8[1] = 0;
            v8[2] = 0;
            sub_239189290(v8, __p, (uint64_t)v13, v13 - (_BYTE *)__p);
            v9 = (uint64_t)(v8 + 3);
            a2[1] = (uint64_t)(v8 + 3);
          }
          a2[1] = v9;
        }
        if (__p)
        {
          v13 = __p;
          operator delete(__p);
        }
        if (v7)
          return v4;
        if (!--v5)
          goto LABEL_15;
      }
      v10 = v6;
      sub_23918C1A0(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoad_lppPayload");
      LOBYTE(v4) = v10;
    }
  }
  return v4;
}

void sub_23918AB60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 8) = v11;
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23918AB88(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int32x2_t v9;
  unsigned __int8 v10;

  v10 = *a2 - 4;
  v4 = sub_23918D9EC(a1, &v10);
  v9 = 0;
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v4 = sub_23918D7B0(a1, &v9);
    if ((_DWORD)v4)
    {
      v5 = v4;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      v4 = sub_23918AC54(a1, (uint64_t)(a2 + 80));
      if (!(_DWORD)v4)
        return sub_23918D80C(a1, &v9);
      v5 = v4;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
    }
  }
  sub_23918C1A0(v4, v6, v7, "asn1PE_PosPayLoadVer2");
  return v5;
}

uint64_t sub_23918AC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
  }
  else
  {
    sub_23918C32C((uint64_t **)a1, *(_DWORD *)a2);
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      v7 = *(unsigned __int8 *)(a1 + 16);
    }
    else
    {
      sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 4));
      v4 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16) || *(_DWORD *)a2 && (v4 = sub_23918AD64(a1, (_QWORD *)(a2 + 8)), (_DWORD)v4))
      {
        v5 = *(_DWORD *)(a1 + 8);
        v6 = *(_DWORD *)(a1 + 12);
        v7 = v4;
      }
      else
      {
        if (!*(_DWORD *)(a2 + 4))
          return 0;
        v4 = 1;
        *(_BYTE *)(a1 + 16) = 1;
        sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PosPayLoadVer2Extension");
        v5 = *(_DWORD *)(a1 + 8);
        v6 = *(_DWORD *)(a1 + 12);
        v7 = 1;
      }
    }
  }
  sub_23918C1A0(v7, v5, v6, "asn1PE_PosPayLoadVer2Extension");
  return v4;
}

uint64_t sub_23918AD64(uint64_t a1, _QWORD *a2)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = 0;
  v5 = a2[1] - *a2;
  if (v5)
  {
    v6 = v5 / 24;
    if (v6 <= 1)
      v6 = 1;
    v7 = (_QWORD *)(*a2 + 8);
    do
    {
      if (*(v7 - 1) != *v7)
        ++v4;
      v7 += 3;
      --v6;
    }
    while (v6);
  }
  v8 = sub_23918C42C(a1, 1, 3, v4);
  if ((_DWORD)v8)
  {
    v9 = v8;
    v10 = *(_DWORD *)(a1 + 8);
    v11 = *(_DWORD *)(a1 + 12);
    goto LABEL_10;
  }
  v13 = *a2;
  v12 = a2[1];
  if (v12 == *a2)
    return 0;
  v14 = 0;
  v15 = 0;
  while (1)
  {
    v16 = *(_QWORD *)(v13 + v14);
    v17 = *(_QWORD *)(v13 + v14 + 8);
    if (v16 != v17)
      break;
LABEL_16:
    ++v15;
    v14 += 24;
    if (v15 >= 0xAAAAAAAAAAAAAAABLL * ((v12 - v13) >> 3))
      return 0;
  }
  v8 = sub_23918CC8C(a1, 1, 60000, (int)v17 - (int)v16, (_QWORD *)(v13 + v14), 0, 0);
  if (!(_DWORD)v8)
  {
    v13 = *a2;
    v12 = a2[1];
    goto LABEL_16;
  }
  v9 = v8;
  v10 = *(_DWORD *)(a1 + 8);
  v11 = *(_DWORD *)(a1 + 12);
LABEL_10:
  sub_23918C1A0(v8, v10, v11, "asn1PE_PosPayLoad_lppPayload");
  return v9;
}

void sub_23918AE9C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *a1;
  v2 = a1[1];
  if (v2 != *a1)
  {
    v4 = a1[1];
    do
    {
      v6 = *(void **)(v4 - 24);
      v4 -= 24;
      v5 = v6;
      if (v6)
      {
        *(_QWORD *)(v2 - 16) = v5;
        operator delete(v5);
      }
      v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

uint64_t sub_23918AEF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_23910165C();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x555555555555555)
    v9 = 0xAAAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_23918B074(v7, v9);
  else
    v10 = 0;
  v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v15 = v11;
  v16 = &v10[24 * v9];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *((_QWORD *)v11 + 2) = 0;
  sub_239189290(v11, *(const void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 8) - *(_QWORD *)a2);
  v15 += 24;
  sub_23918B000(a1, v14);
  v12 = a1[1];
  sub_23918B1D0((uint64_t)v14);
  return v12;
}

void sub_23918AFEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23918B1D0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23918B000(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_23918B0B8((uint64_t)(a1 + 2), a1[1], (_QWORD *)a1[1], *a1, (_QWORD *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_23918B074(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    sub_239105DBC();
  return operator new(24 * a2);
}

uint64_t sub_23918B0B8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  __int128 v13;
  __int128 v14;

  v7 = a7;
  *(_QWORD *)&v14 = a6;
  *((_QWORD *)&v14 + 1) = a7;
  v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    v9 = a6;
  }
  else
  {
    do
    {
      *(_QWORD *)(v7 - 24) = 0;
      *(_QWORD *)(v7 - 16) = 0;
      *(_QWORD *)(v7 - 8) = 0;
      v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(_QWORD *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      v7 = *((_QWORD *)&v14 + 1) - 24;
      *((_QWORD *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    v9 = v14;
  }
  v12 = 1;
  sub_23918B158((uint64_t)v11);
  return v9;
}

uint64_t sub_23918B158(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_23918B18C(a1);
  return a1;
}

void sub_23918B18C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    v3 = *(void **)v1;
    if (*(_QWORD *)v1)
    {
      *(_QWORD *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t sub_23918B1D0(uint64_t a1)
{
  sub_23918B204(a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_23918B204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;

  v2 = *(_QWORD *)(a1 + 16);
  while (v2 != a2)
  {
    v5 = *(void **)(v2 - 24);
    *(_QWORD *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(_QWORD *)(v2 - 16) = v5;
      operator delete(v5);
      v2 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

void sub_23918B25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  void *__p;
  char *v17;
  uint64_t v18;
  uint8_t buf[8];
  const void *v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  sub_2391B7D4C();
  __p = 0;
  v17 = 0;
  v18 = 0;
  if (a3)
  {
    v7 = *(char **)(a3 + 32);
    v6 = a3 + 32;
    v5 = v7;
    if ((void **)v6 != &__p)
    {
      v8 = *(char **)(v6 + 8);
      if (v5 != v8)
      {
        sub_239107FF0(&__p, v5, v8, v8 - v5);
        v9 = (char *)__p;
        v10 = v17;
        if (__p != v17)
        {
          v11 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)buf = 0;
          v20 = 0;
          v21 = 0;
          *(_WORD *)(v11 + 776) = 4;
          sub_239107FF0(buf, v9, v10, v10 - v9);
          v12 = *(_QWORD **)(v11 + 872);
          if ((unint64_t)v12 >= *(_QWORD *)(v11 + 880))
          {
            v13 = sub_23918AEF0((uint64_t *)(v11 + 864), (uint64_t)buf);
          }
          else
          {
            *v12 = 0;
            v12[1] = 0;
            v12[2] = 0;
            sub_239189290(v12, *(const void **)buf, (uint64_t)v20, (size_t)v20 - *(_QWORD *)buf);
            v13 = (uint64_t)(v12 + 3);
            *(_QWORD *)(v11 + 872) = v12 + 3;
          }
          *(_QWORD *)(v11 + 872) = v13;
          *(_DWORD *)(v11 + 856) = 1;
          *(_DWORD *)(v11 + 8) = 1;
          if (*(_QWORD *)buf)
          {
            v20 = *(const void **)buf;
            operator delete(*(void **)buf);
          }
          goto LABEL_11;
        }
      }
    }
  }
  else
  {
    v14 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = 513;
      _os_log_error_impl(&dword_2390FD000, v14, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    }
  }
  v15 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = 513;
    _os_log_error_impl(&dword_2390FD000, v15, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
LABEL_11:
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_23918B434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = v14;
  *(_QWORD *)(v15 + 872) = v16;
  if (__p)
    operator delete(__p);
  if (a10)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void sub_23918B478(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  NSObject *v10;
  void *__p;
  char *v12;
  uint64_t v13;
  uint8_t buf[8];
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  sub_2391B7D4C();
  __p = 0;
  v12 = 0;
  v13 = 0;
  v3 = sub_239189E98();
  if (&__p == (void **)v3
    || (v4 = *(char **)(v3 + 8), *(char **)v3 == v4)
    || (sub_239107FF0(&__p, *(char **)v3, v4, (unint64_t)&v4[-*(_QWORD *)v3]),
        v5 = (char *)__p,
        v6 = v12,
        __p == v12))
  {
    v10 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = 513;
      _os_log_error_impl(&dword_2390FD000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    }
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)buf = 0;
    v15 = 0;
    v16 = 0;
    *(_WORD *)(v7 + 776) = 4;
    sub_239107FF0(buf, v5, v6, v6 - v5);
    v8 = *(_QWORD **)(v7 + 872);
    if ((unint64_t)v8 >= *(_QWORD *)(v7 + 880))
    {
      v9 = sub_23918AEF0((uint64_t *)(v7 + 864), (uint64_t)buf);
    }
    else
    {
      *v8 = 0;
      v8[1] = 0;
      v8[2] = 0;
      sub_239189290(v8, *(const void **)buf, (uint64_t)v15, (size_t)v15 - *(_QWORD *)buf);
      v9 = (uint64_t)(v8 + 3);
      *(_QWORD *)(v7 + 872) = v8 + 3;
    }
    *(_QWORD *)(v7 + 872) = v9;
    *(_DWORD *)(v7 + 856) = 1;
    *(_DWORD *)(v7 + 8) = 1;
    if (*(_QWORD *)buf)
    {
      v15 = *(const void **)buf;
      operator delete(*(void **)buf);
    }
  }
  if (__p)
  {
    v12 = (char *)__p;
    operator delete(__p);
  }
}

void sub_23918B5EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = v14;
  *(_QWORD *)(v15 + 872) = v16;
  if (__p)
    operator delete(__p);
  if (a10)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void sub_23918B630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::string *p_p;
  std::string::size_type size;
  std::string::size_type v11;
  std::string::size_type v12;
  std::string::size_type v13;
  NSObject *v14;
  std::string::size_type v15;
  std::string::size_type v16;
  uint64_t v17;
  NSObject *v18;
  std::string *v19;
  std::string __p;
  std::string __str;
  uint8_t buf[12];
  __int16 v23;
  _BYTE v24[10];
  _QWORD v25[10];
  char v26;
  _QWORD v27[22];

  v27[20] = *MEMORY[0x24BDAC8D0];
  if (a1 && (v2 = a2) != 0)
  {
    v3 = a1;
    memset(&__str, 0, sizeof(__str));
    v4 = *MEMORY[0x24BEDB7F0];
    v6 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
    v5 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    v7 = MEMORY[0x24BEDB848] + 16;
    do
    {
      sub_2390FE8EC((uint64_t)buf);
      v8 = *(_QWORD *)&v24[2];
      *(_DWORD *)((char *)v25 + *(_QWORD *)(*(_QWORD *)&v24[2] - 24)) = *(_DWORD *)((_BYTE *)v25
                                                                                    + *(_QWORD *)(*(_QWORD *)&v24[2]
                                                                                                - 24)) & 0xFFFFFFB5 | 8;
      *(_QWORD *)((char *)&v25[2] + *(_QWORD *)(v8 - 24)) = 2;
      __p.__r_.__value_.__s.__data_[0] = 48;
      sub_2390FEA18(&v24[2], (char *)&__p);
      std::ostream::operator<<();
      std::stringbuf::str();
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        size = __p.__r_.__value_.__l.__size_;
      std::string::append(&__str, (const std::string::value_type *)p_p, size);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      *(_QWORD *)buf = v4;
      *(_QWORD *)&buf[*(_QWORD *)(v4 - 24)] = v6;
      *(_QWORD *)&v24[2] = v5;
      v25[0] = v7;
      if (v26 < 0)
        operator delete((void *)v25[8]);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x23B8387F0](v27);
      ++v3;
      --v2;
    }
    while (v2);
    v11 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      v12 = __str.__r_.__value_.__l.__size_ / 0x1F4;
      v13 = __str.__r_.__value_.__l.__size_ % 0x1F4;
    }
    else
    {
      v12 = 0;
      v13 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    v15 = 0;
    if (v13)
      v16 = v12 + 1;
    else
      v16 = v12;
    v17 = 1;
    if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) != 0)
      goto LABEL_26;
    while (v15 < v11)
    {
      while (1)
      {
        std::string::basic_string(&__p, &__str, v15, 0x1F4uLL, (std::allocator<char> *)buf);
        v18 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
        {
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v19 = &__p;
          else
            v19 = (std::string *)__p.__r_.__value_.__r.__words[0];
          *(_DWORD *)buf = 134284035;
          *(_QWORD *)&buf[4] = v17;
          v23 = 2049;
          *(_QWORD *)v24 = v16;
          *(_WORD *)&v24[8] = 2081;
          v25[0] = v19;
          _os_log_impl(&dword_2390FD000, v18, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp,#pdu,%{private}zu,of,%{private}zu,%{private}s", buf, 0x20u);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        v11 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        v15 += 500;
        ++v17;
        if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) == 0)
          break;
LABEL_26:
        if (v15 >= __str.__r_.__value_.__l.__size_)
        {
          operator delete(__str.__r_.__value_.__l.__data_);
          return;
        }
      }
    }
  }
  else
  {
    v14 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_2390FD000, v14, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp,PDU is empty", buf, 2u);
    }
  }
}

void sub_23918B940(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23918B98C(uint64_t *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  NSObject *v12;
  int v13;
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v7 = sub_2391B7D4C();
  if (!v7)
  {
    v12 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    v13 = 67109120;
    v14 = 513;
    goto LABEL_17;
  }
  if (!*a1)
  {
    v12 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    v13 = 67109120;
    v14 = 513;
    goto LABEL_17;
  }
  if (*a2 != 2)
  {
    v12 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    v13 = 67109120;
    v14 = 514;
    goto LABEL_17;
  }
  v8 = (_DWORD *)v7;
  v9 = sub_2391B8A50(v7, *(_DWORD *)(*a1 + 376));
  if (v9)
  {
    if (!*(_DWORD *)(v9 + 20))
      sub_2391B94F0(v8, a4, *(unsigned __int8 *)(*(_QWORD *)(v9 + 48) + 20), *(_DWORD *)(*a1 + 596));
  }
  v10 = operator new(0x168uLL, MEMORY[0x24BEDB6B8]);
  if (v10)
  {
    v11 = v10;
    sub_2391B7394((uint64_t)v10);
    *v11 = &off_250A73BD8;
    sub_2391B597C(*a1, (uint64_t)v11);
    sub_2391B74F4((uint64_t)v11, 0, *a1);
    return;
  }
  v12 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    v13 = 67109120;
    v14 = 513;
LABEL_17:
    _os_log_error_impl(&dword_2390FD000, v12, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v13, 8u);
  }
}

void sub_23918BBB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B838838](v1, MEMORY[0x24BEDB6B8]);
  _Unwind_Resume(a1);
}

uint64_t sub_23918BBD4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result;
  int v6;
  BOOL v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  result = sub_23918BED4();
  v6 = atomic_load((unsigned __int8 *)(result + 1));
  v7 = v6 == 255;
  v8 = 1;
  if (v7)
    v8 = 2;
  v9 = atomic_load((unsigned __int8 *)(result + v8));
  if (v9 == 2)
  {
    *(_DWORD *)(a2 + 44) = 0;
    sub_2391B7D4C();
    v10 = sub_2391BC46C();
    result = sub_2391BC974(v10, a3);
    *(_DWORD *)(a2 + 60) = result != 0;
    if ((_DWORD)result)
    {
      *(_DWORD *)(a2 + 56) = 1;
      *(_WORD *)(a2 + 67) = 2832;
      *(_BYTE *)(a2 + 69) = 0;
    }
    else
    {
      *(_DWORD *)(a2 + 56) = 0;
    }
  }
  return result;
}

void sub_23918BC5C(uint64_t a1, uint64_t a2)
{
  if (a2 && !*(_BYTE *)(a2 + 32))
  {
    if (a1 != a2)
      sub_239107FF0((_QWORD *)(a1 + 8), *(char **)(a2 + 8), *(char **)(a2 + 16), *(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8));
    sub_23918B630(*(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8));
  }
  *(_DWORD *)(a1 + 32) = 0;
}

uint64_t sub_23918BCB0(_DWORD *a1)
{
  uint64_t result;
  int v3;
  BOOL v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  sub_2391B7D4C();
  result = sub_23918BED4();
  v3 = atomic_load((unsigned __int8 *)(result + 1));
  v4 = v3 == 255;
  v5 = 1;
  if (v4)
    v5 = 2;
  v6 = atomic_load((unsigned __int8 *)(result + v5));
  if (v6 >= 2)
  {
    v7 = sub_2391BC46C();
    result = sub_2391BC974(v7, *(_DWORD *)(*(_QWORD *)a1 + 596));
    if ((_DWORD)result)
    {
      v8 = *(unsigned __int8 *)(*(_QWORD *)a1 + 380);
      v9 = sub_2391B7D4C();
      sub_2391B8A50(v9, *(_DWORD *)(*(_QWORD *)a1 + 376));
      v10 = sub_2391AE584();
      result = sub_2391AF244(v10, *(_DWORD *)(*(_QWORD *)a1 + 376), v8 == 2);
      a1[8] = result == 0;
    }
  }
  return result;
}

void sub_23918BD6C(uint64_t a1, int a2)
{
  uint64_t v4;
  int v5;
  BOOL v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;

  sub_2391B7D4C();
  v4 = sub_23918BED4();
  v5 = atomic_load((unsigned __int8 *)(v4 + 1));
  v6 = v5 == 255;
  v7 = 1;
  if (v6)
    v7 = 2;
  v8 = atomic_load((unsigned __int8 *)(v4 + v7));
  if (v8 >= 2)
  {
    v9 = sub_2391BC46C();
    if (sub_2391BC974(v9, a2))
    {
      v10 = *(_BYTE *)(*(_QWORD *)a1 + 380) == 2;
      sub_2391AE584();
      sub_2391BD548(*(_DWORD *)(*(_QWORD *)a1 + 8), v10);
    }
  }
}

uint64_t sub_23918BDF4(uint64_t a1, _BYTE *a2)
{
  int v4;
  int v5;
  BOOL v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  char v12;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  v12 = 0;
  if (v5)
    v6 = 1;
  else
    v6 = v4 == 0;
  if (v6)
  {
    v10 = sub_23918C4D0(a1, 0, 1u, &v12);
    if ((_DWORD)v10)
    {
      v7 = v10;
      v8 = *(_DWORD *)(a1 + 8);
      v9 = *(_DWORD *)(a1 + 12);
LABEL_13:
      sub_23918C1A0(v10, v8, v9, "asn1PD_TriggerType");
      return v7;
    }
  }
  else
  {
    v10 = sub_23918DA84(a1, &v12);
    if ((_DWORD)v10)
    {
      v7 = v10;
      v8 = *(_DWORD *)(a1 + 8);
      v9 = *(_DWORD *)(a1 + 12);
      goto LABEL_13;
    }
  }
  if (*a2 > 1u)
  {
    v7 = 4;
    *(_BYTE *)(a1 + 16) = 4;
    v8 = *(_DWORD *)(a1 + 8);
    v9 = *(_DWORD *)(a1 + 12);
    LODWORD(v10) = 4;
    goto LABEL_13;
  }
  v7 = 0;
  *a2 = v12;
  return v7;
}

uint64_t sub_23918BED4()
{
  uint64_t result;
  NSObject *v1;
  int v2;
  const char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  if (qword_2542CF578 != -1)
    dispatch_once(&qword_2542CF578, &unk_250A73A28);
  result = qword_2542CF570;
  if (!qword_2542CF570)
  {
    v1 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v2 = 136315138;
      v3 = "GetInstance";
      _os_log_error_impl(&dword_2390FD000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SuplVersionNegotiation.cpp", 44, "false && \"Memory allocation failure\"");
  }
  return result;
}

_DWORD *sub_23918BFC8()
{
  _DWORD *result;

  result = operator new(4uLL, MEMORY[0x24BEDB6B8]);
  if (result)
    *result = 196352;
  qword_2542CF570 = (uint64_t)result;
  return result;
}

BOOL sub_23918C000(unsigned int a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  BOOL v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;

  v4 = sub_23918BED4();
  v5 = 0;
  v6 = atomic_load((unsigned __int8 *)(v4 + 1));
  v7 = v6 == 255;
  v8 = 1;
  if (v7)
    v8 = 2;
  v9 = atomic_load((unsigned __int8 *)(v4 + v8));
  if (a2 <= 2 && v9 <= 2)
  {
    if (a1 <= 1 && a1 < a2)
      return 0;
    v10 = atomic_load((unsigned __int8 *)(v4 + 3));
    if ((v10 & 1) == 0)
      return v9 == a1;
    if (a1 > 2)
    {
      if (v9 < a2)
        return 0;
      atomic_store(v9, (unsigned __int8 *)(v4 + 1));
    }
    else
    {
      atomic_store(a1, (unsigned __int8 *)(v4 + 1));
    }
    return 1;
  }
  return v5;
}

void sub_23918C0B0()
{
  unsigned __int8 *v0;
  int v1;
  BOOL v2;
  uint64_t v3;
  unsigned int v4;
  unsigned __int8 v5;
  NSObject *v6;
  _DWORD v7[2];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v0 = (unsigned __int8 *)sub_23918BED4();
  v1 = atomic_load(v0 + 1);
  v2 = v1 == 255;
  v3 = 1;
  if (v2)
    v3 = 2;
  v4 = atomic_load(&v0[v3]);
  if (v4 > 2)
  {
    v6 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v7[0] = 67109120;
      v7[1] = 770;
      _os_log_error_impl(&dword_2390FD000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v7, 8u);
    }
  }
  else
  {
    v5 = atomic_load(v0 + 3);
    if ((v5 & 1) != 0)
      atomic_store(2u, v0 + 2);
    atomic_store(0xFFu, v0 + 1);
  }
}

void sub_23918C1A0(unsigned int a1, int a2, int a3, char *__s)
{
  const char *v7;
  NSObject *v8;
  void **v9;
  void **v10;
  void *__p[2];
  char v12;
  void *v13[2];
  uint64_t v14;
  uint8_t buf[4];
  void **v16;
  __int16 v17;
  void **v18;
  __int16 v19;
  int v20;
  __int16 v21;
  int v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v13[0] = 0;
  v13[1] = 0;
  v14 = 0;
  sub_2391011A4(__p, __s);
  if (a1 >= 7)
    v7 = "UNDEFINED_STATUS";
  else
    v7 = off_250A73A48[(char)a1];
  MEMORY[0x23B8386D0](v13, v7);
  v8 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    v9 = __p;
    if (v12 < 0)
      v9 = (void **)__p[0];
    v10 = v13;
    if (v14 < 0)
      v10 = (void **)v13[0];
    *(_DWORD *)buf = 136315906;
    v16 = v9;
    v17 = 2080;
    v18 = v10;
    v19 = 1024;
    v20 = a2;
    v21 = 1024;
    v22 = a3;
    _os_log_error_impl(&dword_2390FD000, v8, OS_LOG_TYPE_ERROR, "Func,%s,Status,%s,CurByte,%u,NextBit,%u", buf, 0x22u);
  }
  if (v12 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v14) < 0)
    operator delete(v13[0]);
}

void sub_23918C2F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_23918C32C(uint64_t **a1, int a2)
{
  unint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  int v7;
  unsigned int v8;
  char v9;
  unsigned int v10;

  v3 = *((unsigned int *)a1 + 2);
  v4 = **a1;
  if ((*a1)[1] - v4 <= v3)
  {
    *((_BYTE *)a1 + 16) = 2;
    sub_23918C1A0(2u, v3, *((_DWORD *)a1 + 3), "AddBitToBuffer");
  }
  else
  {
    v5 = *((_DWORD *)a1 + 3);
    v6 = *(unsigned __int8 *)(v4 + v3);
    v7 = v6 & (-129 >> v5);
    v8 = v6 | (0x80u >> v5);
    if (a2)
      v9 = v8;
    else
      v9 = v7;
    *(_BYTE *)(v4 + v3) = v9;
    v10 = *((_DWORD *)a1 + 3) + 1;
    *((_DWORD *)a1 + 3) = v10;
    if (v10 >= 8)
      a1[1] = (uint64_t *)(*((_DWORD *)a1 + 2) + 1);
  }
}

uint64_t sub_23918C3B4(uint64_t **a1)
{
  unint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  v1 = *((unsigned int *)a1 + 2);
  v2 = **a1;
  if ((*a1)[1] - v2 <= v1)
  {
    *((_BYTE *)a1 + 16) = 2;
    sub_23918C1A0(2u, v1, *((_DWORD *)a1 + 3), "GetBitFromBuffer");
    return 0;
  }
  else
  {
    v3 = *((_DWORD *)a1 + 3);
    v4 = ((*(unsigned __int8 *)(v2 + v1) << v3++) >> 7) & 1;
    *((_DWORD *)a1 + 3) = v3;
    if (v3 >= 8)
      a1[1] = (uint64_t *)(v1 + 1);
  }
  return v4;
}

uint64_t sub_23918C42C(uint64_t a1, int a2, int a3, int a4)
{
  unsigned int v5;
  int v7;
  unsigned int v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  BOOL v12;

  if (a3 < a2)
  {
    v5 = 1;
LABEL_3:
    *(_BYTE *)(a1 + 16) = v5;
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeInteger");
    return *(unsigned __int8 *)(a1 + 16);
  }
  v5 = 4;
  v7 = a4 - a2;
  if (a4 < a2 || a4 > a3)
    goto LABEL_3;
  v8 = a3 - a2;
  if (a3 != a2)
  {
    v9 = -1;
    do
    {
      ++v9;
      v10 = v8 > 1;
      v8 >>= 1;
    }
    while (v10);
    v11 = 1 << v9;
    do
    {
      sub_23918C32C((uint64_t **)a1, v11 & v7);
      v12 = v11 >= 2;
      v11 >>= 1;
    }
    while (v12);
  }
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23918C4D0(uint64_t a1, int a2, unsigned int a3, _BYTE *a4)
{
  unsigned int v5;
  __int16 v8;
  char v9;
  BOOL v10;
  unsigned __int8 v11;
  unsigned int v12;
  char v13;
  uint64_t v14;

  v5 = a3 - a2;
  if ((int)(a3 - a2) < 1)
  {
    v14 = 5;
LABEL_14:
    sub_23918C1A0(v14, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "DecodeInteger");
    return v14;
  }
  v8 = a2;
  v9 = -1;
  do
  {
    ++v9;
    v10 = v5 > 1;
    v5 >>= 1;
  }
  while (v10);
  v11 = 0;
  v12 = 1 << v9;
  do
  {
    if (sub_23918C3B4((uint64_t **)a1))
      v13 = v12;
    else
      v13 = 0;
    v11 |= v13;
    v10 = v12 > 1;
    v12 >>= 1;
  }
  while (v10);
  v14 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    goto LABEL_14;
  *a4 = v8 + v11;
  v14 = 4;
  if (((v8 + v11) & 0x100) != 0 || a3 < (v8 + v11))
    goto LABEL_14;
  return 0;
}

uint64_t sub_23918C5A0(uint64_t a1, int a2, unsigned int a3, _WORD *a4)
{
  unsigned int v5;
  char v9;
  BOOL v10;
  unsigned __int16 v11;
  unsigned int v12;
  __int16 v13;
  uint64_t result;
  uint64_t v15;
  int v16;

  v5 = a3 - a2;
  if ((int)(a3 - a2) < 1)
  {
    LODWORD(result) = 5;
    v15 = 5;
LABEL_14:
    sub_23918C1A0(result, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "DecodeInteger");
    return v15;
  }
  v9 = -1;
  do
  {
    ++v9;
    v10 = v5 > 1;
    v5 >>= 1;
  }
  while (v10);
  v11 = 0;
  v12 = 1 << v9;
  do
  {
    if (sub_23918C3B4((uint64_t **)a1))
      v13 = v12;
    else
      v13 = 0;
    v11 |= v13;
    v10 = v12 > 1;
    v12 >>= 1;
  }
  while (v10);
  result = *(unsigned __int8 *)(a1 + 16);
  v15 = result;
  if (*(_BYTE *)(a1 + 16))
    goto LABEL_14;
  v16 = a2 + v11;
  *a4 = a2 + v11;
  v15 = 4;
  if ((v16 & 0x10000) != 0 || a3 < (unsigned __int16)v16)
    goto LABEL_14;
  return result;
}

uint64_t sub_23918C670(uint64_t a1, int a2, int a3, _DWORD *a4)
{
  unsigned int v5;
  char v9;
  BOOL v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;

  v5 = a3 - a2;
  if (a3 - a2 < 1)
  {
    v14 = 5;
LABEL_14:
    sub_23918C1A0(v14, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "DecodeInteger");
    return v14;
  }
  v9 = -1;
  do
  {
    ++v9;
    v10 = v5 > 1;
    v5 >>= 1;
  }
  while (v10);
  v11 = 0;
  v12 = 1 << v9;
  do
  {
    if (sub_23918C3B4((uint64_t **)a1))
      v13 = v12;
    else
      v13 = 0;
    v11 |= v13;
    v10 = v12 > 1;
    v12 >>= 1;
  }
  while (v10);
  v14 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    goto LABEL_14;
  *a4 = v11 + a2;
  v14 = 4;
  if (v11 < 0 || v11 + a2 > a3)
    goto LABEL_14;
  return 0;
}

uint64_t sub_23918C740(uint64_t a1, int a2, unsigned int a3, _DWORD *a4)
{
  unsigned int v8;
  char v9;
  BOOL v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;

  v8 = a3 - a2;
  if ((int)(a3 - a2) < 1)
  {
    v11 = 0;
  }
  else
  {
    v9 = -1;
    do
    {
      ++v9;
      v10 = v8 > 1;
      v8 >>= 1;
    }
    while (v10);
    v11 = 0;
    v12 = 1 << v9;
    do
    {
      if (sub_23918C3B4((uint64_t **)a1))
        v13 = v12;
      else
        v13 = 0;
      v11 |= v13;
      v10 = v12 > 1;
      v12 >>= 1;
    }
    while (v10);
    v14 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
      goto LABEL_15;
  }
  v14 = 4;
  *a4 = v11 + a2;
  if (__CFADD__(v11, a2) || v11 + a2 > a3)
  {
LABEL_15:
    sub_23918C1A0(v14, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "DecodeInteger");
    return v14;
  }
  return 0;
}

uint64_t sub_23918C814(uint64_t a1, int a2, int a3, unsigned int a4, _QWORD *a5, int a6)
{
  unsigned __int8 *v9;
  unsigned __int8 *v10;

  if (*a5 == a5[1])
  {
    *(_BYTE *)(a1 + 16) = 1;
    v10 = (unsigned __int8 *)(a1 + 16);
    sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeBitString");
    v9 = v10;
  }
  else
  {
    if (!a6)
      sub_23918C42C(a1, a2, a3, a4);
    v9 = (unsigned __int8 *)(a1 + 16);
    if (!*(_BYTE *)(a1 + 16))
      sub_23918C8A4((uint64_t **)a1, a4, a5, 0);
  }
  return *v9;
}

void sub_23918C8A4(uint64_t **a1, unsigned int a2, _QWORD *a3, int a4)
{
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  int v13;
  unsigned __int8 v14;
  int v15;
  int v16;

  v7 = (unint64_t)a2 >> 3;
  v8 = a2 & 7;
  if (a2 >= 8)
  {
    v9 = 0;
    if (v7 <= 1)
      v10 = 1;
    else
      v10 = (unint64_t)a2 >> 3;
    do
    {
      if (v9 >= a3[1] - *a3)
        break;
      v11 = 0;
      v12 = *(_BYTE *)(*a3 + v9);
      if (a4)
        v12 = (*(_BYTE *)(*a3 + v9) >> 4) | (16 * *(_BYTE *)(*a3 + v9));
      v13 = v12;
      do
        sub_23918C32C(a1, (0x80u >> v11++) & v13);
      while (v11 != 8);
      ++v9;
    }
    while (v9 != v10);
  }
  if ((_DWORD)v8 && a3[1] - *a3 > v7)
  {
    v14 = *(_BYTE *)(*a3 + v7);
    if (a4)
      v14 = (*(_BYTE *)(*a3 + v7) >> 4) | (16 * *(_BYTE *)(*a3 + v7));
    v15 = v14;
    v16 = 8 - v8;
    do
    {
      sub_23918C32C(a1, (0x80u >> v16++) & v15);
      --v8;
    }
    while (v8);
  }
}

uint64_t sub_23918C9B4(uint64_t result, unsigned int a2, unint64_t *a3, uint64_t a4)
{
  uint64_t **v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE *v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  char *v18;
  char *v19;
  _BYTE *v20;
  _BYTE *v21;
  char v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  unint64_t v31;
  _BYTE *v32;
  unint64_t v33;
  unint64_t v34;
  size_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  _BYTE *v39;
  _BYTE *v40;
  char v41;
  uint64_t v42;
  char v43;
  int v44;
  unsigned int v45;
  int v46;
  char v47;
  unint64_t v48;
  unint64_t v49;

  v6 = (uint64_t **)result;
  v48 = (unint64_t)a2 >> 3;
  a3[1] = *a3;
  v47 = a2;
  if (a2 >= 8)
  {
    v7 = 0;
    if (v48 <= 1)
      v8 = 1;
    else
      v8 = (unint64_t)a2 >> 3;
    v49 = v8;
    do
    {
      v10 = (_BYTE *)a3[1];
      v9 = a3[2];
      if ((unint64_t)v10 >= v9)
      {
        v12 = a4;
        v13 = *a3;
        v14 = &v10[-*a3];
        v15 = (unint64_t)(v14 + 1);
        if ((uint64_t)(v14 + 1) < 0)
          goto LABEL_60;
        v16 = v9 - v13;
        if (2 * v16 > v15)
          v15 = 2 * v16;
        if (v16 >= 0x3FFFFFFFFFFFFFFFLL)
          v17 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v17 = v15;
        if (v17)
          v18 = (char *)operator new(v17);
        else
          v18 = 0;
        v19 = &v14[(_QWORD)v18];
        v20 = &v14[(_QWORD)v18];
        *v20 = 0;
        v11 = v20 + 1;
        if (v10 != (_BYTE *)v13)
        {
          v21 = &v10[~v13];
          do
          {
            v22 = *--v10;
            (v21--)[(_QWORD)v18] = v22;
          }
          while (v10 != (_BYTE *)v13);
          v10 = (_BYTE *)*a3;
          v19 = v18;
        }
        *a3 = (unint64_t)v19;
        a3[1] = (unint64_t)v11;
        a3[2] = (unint64_t)&v18[v17];
        a4 = v12;
        if (v10)
          operator delete(v10);
        v8 = v49;
      }
      else
      {
        *v10 = 0;
        v11 = v10 + 1;
      }
      v23 = 0;
      a3[1] = (unint64_t)v11;
      do
      {
        result = sub_23918C3B4(v6);
        v24 = *(unsigned __int8 *)(*a3 + v7);
        v25 = v24 | (0x80u >> v23);
        v26 = v24 & (-129 >> v23);
        if ((_DWORD)result)
          LOBYTE(v26) = v25;
        *(_BYTE *)(*a3 + v7) = v26;
        ++v23;
      }
      while (v23 != 8);
      if ((_DWORD)a4)
        *(_BYTE *)(*a3 + v7) = (*(_BYTE *)(*a3 + v7) >> 4) | (16 * *(_BYTE *)(*a3 + v7));
      ++v7;
    }
    while (v7 != v8);
  }
  v27 = v47 & 7;
  if ((v47 & 7) != 0)
  {
    v29 = (_BYTE *)a3[1];
    v28 = a3[2];
    if ((unint64_t)v29 >= v28)
    {
      v31 = *a3;
      v32 = &v29[-*a3];
      v33 = (unint64_t)(v32 + 1);
      if ((uint64_t)(v32 + 1) < 0)
LABEL_60:
        sub_23910165C();
      v34 = v28 - v31;
      if (2 * v34 > v33)
        v33 = 2 * v34;
      if (v34 >= 0x3FFFFFFFFFFFFFFFLL)
        v35 = 0x7FFFFFFFFFFFFFFFLL;
      else
        v35 = v33;
      if (v35)
        v36 = (unint64_t)operator new(v35);
      else
        v36 = 0;
      v37 = &v32[v36];
      v38 = (char *)(v36 + v35);
      v39 = &v32[v36];
      *v39 = 0;
      v30 = v39 + 1;
      if (v29 == (_BYTE *)v31)
      {
        v36 = (unint64_t)v37;
      }
      else
      {
        v40 = &v29[~v31];
        do
        {
          v41 = *--v29;
          (v40--)[v36] = v41;
        }
        while (v29 != (_BYTE *)v31);
        v29 = (_BYTE *)*a3;
      }
      *a3 = v36;
      a3[1] = (unint64_t)v30;
      a3[2] = (unint64_t)v38;
      if (v29)
        operator delete(v29);
    }
    else
    {
      *v29 = 0;
      v30 = v29 + 1;
    }
    a3[1] = (unint64_t)v30;
    if (v27 <= 1)
      v42 = 1;
    else
      v42 = v47 & 7;
    v43 = 8 - v27;
    do
    {
      result = sub_23918C3B4(v6);
      v44 = *(unsigned __int8 *)(*a3 + v48);
      v45 = v44 | (0x80u >> v43);
      v46 = v44 & (-129 >> v43);
      if ((_DWORD)result)
        LOBYTE(v46) = v45;
      *(_BYTE *)(*a3 + v48) = v46;
      ++v43;
      --v42;
    }
    while (v42);
    if ((_DWORD)a4)
      *(_BYTE *)(*a3 + v48) = (*(_BYTE *)(*a3 + v48) >> 4) | (16 * *(_BYTE *)(*a3 + v48));
  }
  return result;
}

uint64_t sub_23918CC8C(uint64_t a1, int a2, int a3, int a4, _QWORD *a5, int a6, int a7)
{
  unsigned __int8 *v11;

  if (*a5 == a5[1])
  {
    *(_BYTE *)(a1 + 16) = 1;
    v11 = (unsigned __int8 *)(a1 + 16);
    sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeOctetString");
  }
  else
  {
    if (!a6)
      sub_23918C42C(a1, a2, a3, a4);
    sub_23918C8A4((uint64_t **)a1, 8 * a4, a5, a7);
    v11 = (unsigned __int8 *)(a1 + 16);
  }
  return *v11;
}

uint64_t sub_23918CD14(uint64_t a1, int a2, unsigned int a3, unsigned int a4, _QWORD *a5, int a6, uint64_t a7, int a8)
{
  uint64_t v12;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  size_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char v28;
  unsigned __int8 v29;
  unsigned int v30;
  BOOL v31;
  size_t v32;
  int64_t v33;
  uint64_t v34;
  void *__p;
  char *v36;
  char *v37;

  if (a3 > 0xFF || !a7 || !a6 || *a5 == a5[1])
  {
    v12 = 1;
    *(_BYTE *)(a1 + 16) = 1;
    sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeVisibleStringSubType");
    return v12;
  }
  if (a8)
    return 5;
  v15 = sub_23918C42C(a1, a2, a3, a4);
  v12 = v15;
  __p = 0;
  v36 = 0;
  v37 = 0;
  if (a4 && !(_DWORD)v15)
  {
    v16 = 0;
    v17 = 0;
    v18 = a4;
    do
    {
      if (v17 >= a5[1] - *a5)
        break;
      v19 = 0;
      while (*(char *)(*a5 + v17) != *(unsigned __int8 *)(a7 + v19))
      {
        if (a6 == ++v19)
        {
          v12 = 4;
          sub_23918C1A0(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeVisibleStringSubType");
          goto LABEL_41;
        }
      }
      if (v16 >= v37)
      {
        v20 = (unint64_t)__p;
        v33 = v16 - (_BYTE *)__p;
        v34 = v18;
        v21 = v16 - (_BYTE *)__p + 1;
        if (v21 < 0)
          sub_23910165C();
        v22 = v37 - (_BYTE *)__p;
        if (2 * (v37 - (_BYTE *)__p) > (unint64_t)v21)
          v21 = 2 * v22;
        if (v22 >= 0x3FFFFFFFFFFFFFFFLL)
          v23 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v23 = v21;
        if (v23)
        {
          v32 = v23;
          v24 = (char *)operator new(v23);
          v23 = v32;
        }
        else
        {
          v24 = 0;
        }
        v25 = &v24[v33];
        v24[v33] = v19;
        v26 = &v24[v33];
        if (v16 != (char *)v20)
        {
          v27 = &v16[~v20];
          do
          {
            v28 = *--v16;
            (v27--)[(_QWORD)v24] = v28;
          }
          while (v16 != (char *)v20);
          v16 = (char *)__p;
          v25 = v24;
        }
        __p = v25;
        v37 = &v24[v23];
        if (v16)
          operator delete(v16);
        v16 = v26;
        v18 = v34;
      }
      else
      {
        *v16 = v19;
      }
      v36 = ++v16;
      ++v17;
    }
    while (v17 != v18);
    goto LABEL_38;
  }
  if (!(_DWORD)v15)
  {
LABEL_38:
    v29 = 0;
    v30 = a6 - 1;
    if (a6 != 1)
    {
      do
      {
        ++v29;
        v31 = v30 > 1;
        v30 >>= 1;
      }
      while (v31);
    }
    sub_23918CF8C((uint64_t **)a1, v29 * a4, v29, &__p);
    v12 = *(unsigned __int8 *)(a1 + 16);
  }
LABEL_41:
  if (__p)
    operator delete(__p);
  return v12;
}

void sub_23918CF64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23918CF8C(uint64_t **a1, unsigned int a2, char a3, _QWORD *a4)
{
  unsigned int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned int v10;
  BOOL v11;

  if (a2)
  {
    v6 = 0;
    v7 = 1 << (a3 - 1);
    v8 = a2;
    v9 = v7;
    do
    {
      if (a4[1] - *a4 <= (unint64_t)v6)
        break;
      v10 = v6;
      sub_23918C32C(a1, v9 & *(_BYTE *)(*a4 + v6));
      v11 = v9 >> 1 == 0;
      if (v9 >> 1)
        v9 >>= 1;
      else
        v9 = v7;
      v6 = v11 ? v10 + 1 : v10;
      --v8;
    }
    while (v8);
  }
}

uint64_t sub_23918D01C(uint64_t a1, int a2, unsigned int a3, _DWORD *a4, unint64_t *a5, unsigned int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  unsigned int v13;
  unsigned __int8 v14;
  BOOL v15;
  _BYTE *v16;
  unint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  _BYTE *v22;
  unint64_t v23;
  _BYTE *v24;
  unint64_t v25;
  unint64_t v26;
  size_t v27;
  char *v28;
  char *v29;
  _BYTE *v30;
  _BYTE *v31;
  char v32;
  uint64_t v34;
  void *__p;
  _BYTE *v36;
  uint64_t v37;

  v8 = a1;
  if (a3 <= 0xFF && a6 && a7)
  {
    if (!a8)
      sub_23918C740(a1, a2, a3, a4);
    v13 = a6 - 1;
    if (a6 != 1)
    {
      v14 = 0;
      do
      {
        ++v14;
        v15 = v13 > 1;
        v13 >>= 1;
      }
      while (v15);
      __p = 0;
      v36 = 0;
      v37 = 0;
      v34 = v8;
      sub_23918D258(v8, *a4 * v14, v14, (unint64_t *)&__p);
      v16 = (_BYTE *)*a5;
      a5[1] = *a5;
      if (*a4)
      {
        v17 = 0;
        while (1)
        {
          v18 = __p;
          if (v17 >= v36 - (_BYTE *)__p)
            break;
          v19 = *((unsigned __int8 *)__p + v17);
          if (v19 > a6)
          {
            *(_BYTE *)(v34 + 16) = 4;
            sub_23918C1A0(4u, *(_DWORD *)(v34 + 8), *(_DWORD *)(v34 + 12), "DecodeVisibleStringSubType");
            goto LABEL_34;
          }
          v20 = *(_BYTE *)(a7 + v19);
          v21 = a5[2];
          if ((unint64_t)v16 >= v21)
          {
            v23 = *a5;
            v24 = &v16[-*a5];
            v25 = (unint64_t)(v24 + 1);
            if ((uint64_t)(v24 + 1) < 0)
              sub_23910165C();
            v26 = v21 - v23;
            if (2 * v26 > v25)
              v25 = 2 * v26;
            if (v26 >= 0x3FFFFFFFFFFFFFFFLL)
              v27 = 0x7FFFFFFFFFFFFFFFLL;
            else
              v27 = v25;
            if (v27)
              v28 = (char *)operator new(v27);
            else
              v28 = 0;
            v29 = &v24[(_QWORD)v28];
            v30 = &v24[(_QWORD)v28];
            *v30 = v20;
            v22 = v30 + 1;
            if (v16 != (_BYTE *)v23)
            {
              v31 = &v16[~v23];
              do
              {
                v32 = *--v16;
                (v31--)[(_QWORD)v28] = v32;
              }
              while (v16 != (_BYTE *)v23);
              v16 = (_BYTE *)*a5;
              v29 = v28;
            }
            *a5 = (unint64_t)v29;
            a5[1] = (unint64_t)v22;
            a5[2] = (unint64_t)&v28[v27];
            if (v16)
              operator delete(v16);
          }
          else
          {
            *v16 = v20;
            v22 = v16 + 1;
          }
          a5[1] = (unint64_t)v22;
          ++v17;
          v16 = v22;
          if (v17 >= *a4)
            goto LABEL_34;
        }
      }
      else
      {
LABEL_34:
        v18 = __p;
      }
      if (v18)
      {
        v36 = v18;
        operator delete(v18);
      }
      v8 = v34;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 16) = 1;
    sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "DecodeVisibleStringSubType");
  }
  return *(unsigned __int8 *)(v8 + 16);
}

void sub_23918D234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23918D258(uint64_t result, unsigned int a2, int a3, unint64_t *a4)
{
  uint64_t **v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  unint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  char *v19;
  char *v20;
  _BYTE *v21;
  _BYTE *v22;
  char v23;
  char v24;
  BOOL v25;
  unsigned int v26;

  if (a3)
  {
    a4[1] = *a4;
    if (a2)
    {
      v5 = (uint64_t **)result;
      v6 = 0;
      v7 = 0;
      v8 = (1 << (a3 - 1));
      v9 = a2;
      v10 = v8;
      v26 = v8;
      do
      {
        v12 = (_BYTE *)a4[1];
        v11 = a4[2];
        if ((unint64_t)v12 >= v11)
        {
          v14 = *a4;
          v15 = &v12[-*a4];
          v16 = (unint64_t)(v15 + 1);
          if ((uint64_t)(v15 + 1) < 0)
            sub_23910165C();
          v17 = v11 - v14;
          if (2 * v17 > v16)
            v16 = 2 * v17;
          if (v17 >= 0x3FFFFFFFFFFFFFFFLL)
            v18 = 0x7FFFFFFFFFFFFFFFLL;
          else
            v18 = v16;
          if (v18)
            v19 = (char *)operator new(v18);
          else
            v19 = 0;
          v20 = &v15[(_QWORD)v19];
          v21 = &v15[(_QWORD)v19];
          *v21 = 0;
          v13 = v21 + 1;
          if (v12 != (_BYTE *)v14)
          {
            v22 = &v12[~v14];
            do
            {
              v23 = *--v12;
              (v22--)[(_QWORD)v19] = v23;
            }
            while (v12 != (_BYTE *)v14);
            v12 = (_BYTE *)*a4;
            v20 = v19;
          }
          *a4 = (unint64_t)v20;
          a4[1] = (unint64_t)v13;
          a4[2] = (unint64_t)&v19[v18];
          if (v12)
            operator delete(v12);
          v8 = v26;
        }
        else
        {
          *v12 = 0;
          v13 = v12 + 1;
        }
        a4[1] = (unint64_t)v13;
        result = sub_23918C3B4(v5);
        if ((_DWORD)result)
          v24 = *(_BYTE *)(*a4 + v7) | v10;
        else
          v24 = *(_BYTE *)(*a4 + v7) & ~(_BYTE)v10;
        *(_BYTE *)(*a4 + v7) = v24;
        v25 = v10 >= 2;
        if (v10 >= 2)
          v10 >>= 1;
        else
          v10 = v8;
        if (!v25)
          ++v7;
        ++v6;
      }
      while (v6 != v9);
    }
  }
  return result;
}

uint64_t sub_23918D3D8(uint64_t a1, int a2, int a3, int a4, _QWORD *a5, int a6)
{
  unsigned __int8 *v9;

  if (*a5 == a5[1])
  {
    *(_BYTE *)(a1 + 16) = 1;
    v9 = (unsigned __int8 *)(a1 + 16);
    sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeVisibleString7");
  }
  else
  {
    if (!a6)
      sub_23918C42C(a1, a2, a3, a4);
    sub_23918CF8C((uint64_t **)a1, 7 * a4, 7, a5);
    v9 = (unsigned __int8 *)(a1 + 16);
  }
  return *v9;
}

uint64_t sub_23918D460(uint64_t a1, int a2, unsigned int a3, _DWORD *a4, unint64_t *a5, int a6)
{
  if (!a6)
    sub_23918C740(a1, a2, a3, a4);
  sub_23918D258(a1, 7 * *a4, 7, a5);
  return *(unsigned __int8 *)(a1 + 16);
}

void sub_23918D4BC(uint64_t a1)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  char v6;
  int32x2_t v7;
  unsigned int v8;

  v8 = 0;
  sub_23918D52C(a1, &v7);
  if (!v2)
  {
    v3 = v8;
    if (v8)
    {
      v4 = 1;
      do
      {
        if (sub_23918C4D0(a1, 0, 0xFFu, &v6))
          break;
      }
      while (v4++ < v3);
    }
  }
}

int32x2_t sub_23918D52C(uint64_t a1, int32x2_t *a2)
{
  int v4;
  int32x2_t result;
  int v6;
  unsigned int v7;
  __int32 v8;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v6 = *(unsigned __int8 *)(a1 + 16);
  v8 = 0;
  if (!v6)
  {
    if (v4)
    {
      sub_23918C3B4((uint64_t **)a1);
      if (*(_BYTE *)(a1 + 16))
        return result;
      v7 = 0x3FFF;
    }
    else
    {
      v7 = 127;
    }
    if (!sub_23918C740(a1, 0, v7, &v8))
    {
      a2[1].i32[0] = v8;
      result = vrev64_s32(*(int32x2_t *)(a1 + 8));
      *a2 = result;
    }
  }
  return result;
}

uint64_t sub_23918D5B4(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  unint64_t v3;
  unint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a3;
  v4 = *a2;
  if (a3 < v4)
  {
    v7 = ~(_BYTE)a3;
    do
    {
      if (((*((_DWORD *)a2 + 1) >> (v7 + v4)) & 1) != 0)
      {
        sub_23918D4BC(a1);
        if ((_DWORD)v8)
        {
          v9 = v8;
          sub_23918C1A0(v8, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "SkipSequenceExtensionAddition");
          return v9;
        }
        v4 = *a2;
      }
      ++v3;
      --v7;
    }
    while (v3 < v4);
  }
  return 0;
}

uint64_t sub_23918D648(uint64_t a1)
{
  uint64_t result;
  unsigned __int8 v3[4];
  int v4;

  v3[0] = 0;
  v4 = 0;
  result = sub_23918D690(a1, (uint64_t)v3);
  if (!(_DWORD)result)
    return sub_23918D5B4(a1, v3, 0);
  return result;
}

uint64_t sub_23918D690(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v5;
  int v6;
  char v7;

  sub_23918C3B4((uint64_t **)a1);
  result = *(unsigned __int8 *)(a1 + 16);
  v7 = 0;
  if (!(_DWORD)result)
  {
    result = sub_23918C4D0(a1, 1, 0x40u, &v7);
    v6 = 0;
    if (!(_DWORD)result)
    {
      v5 = v7;
      *(_BYTE *)a2 = v7;
      result = sub_23918C740(a1, 0, ~(-1 << v5), &v6);
      if (!(_DWORD)result)
        *(_DWORD *)(a2 + 4) = v6;
    }
  }
  return result;
}

void sub_23918D714(uint64_t a1)
{
  char v2;

  if (!sub_23918D758(a1, &v2))
    sub_23918D4BC(a1);
}

uint64_t sub_23918D758(uint64_t a1, _BYTE *a2)
{
  uint64_t result;
  char v5;

  sub_23918C3B4((uint64_t **)a1);
  result = *(unsigned __int8 *)(a1 + 16);
  v5 = 0;
  if (!(_DWORD)result)
  {
    result = sub_23918C4D0(a1, 0, 0x3Fu, &v5);
    if (!(_DWORD)result)
      *a2 = v5;
  }
  return result;
}

uint64_t sub_23918D7B0(uint64_t a1, int32x2_t *a2)
{
  uint64_t result;
  unsigned int v4;
  BOOL v5;

  *a2 = vrev64_s32(*(int32x2_t *)(a1 + 8));
  sub_23918C32C((uint64_t **)a1, 0);
  result = *(unsigned __int8 *)(a1 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    v4 = 64;
    do
    {
      sub_23918C32C((uint64_t **)a1, 0);
      v5 = v4 > 1;
      v4 >>= 1;
    }
    while (v5);
    return *(unsigned __int8 *)(a1 + 16);
  }
  return result;
}

uint64_t sub_23918D80C(uint64_t a1, int32x2_t *a2)
{
  unsigned int v4;
  unsigned __int32 v5;
  int v6;
  int v7;
  uint64_t result;
  int v9;
  int v10;
  unsigned int v11;
  BOOL v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  int v19;

  v4 = *(_DWORD *)(a1 + 12);
  v5 = a2->i32[0] - v4;
  if (a2->i32[0] <= v4)
    v6 = 7;
  else
    v6 = 255;
  v7 = v6 & v5;
  if (!v7 || (result = sub_23918C42C(a1, 0, ~(-1 << v7), 0), !(_DWORD)result))
  {
    v9 = *(_DWORD *)(a1 + 8) - a2->i32[1];
    if ((v9 - 1) >= 0x80)
    {
      v10 = *(_DWORD *)(a1 + 12);
      v11 = 128;
      do
      {
        sub_23918C32C((uint64_t **)a1, 0);
        v12 = v11 > 1;
        v11 >>= 1;
      }
      while (v12);
      result = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
        return result;
      if (v10)
        v13 = v9 - 1;
      else
        v13 = v9;
      v14 = (v13 + 1);
      if (v13 != -1)
      {
        v15 = 0;
        v16 = -v14;
        do
        {
          v17 = (_BYTE *)(**(_QWORD **)a1 + *(unsigned int *)(a1 + 8) + v15);
          *v17 = *(v17 - 1);
          --v15;
        }
        while (v16 != v15);
      }
    }
    v18 = *(_QWORD *)(a1 + 8);
    *(int32x2_t *)(a1 + 8) = vrev64_s32(*a2);
    if ((v9 - 1) <= 0x7F)
    {
      sub_23918C32C((uint64_t **)a1, 0);
      result = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
        return result;
      v19 = 127;
      goto LABEL_22;
    }
    sub_23918C32C((uint64_t **)a1, 1);
    result = *(unsigned __int8 *)(a1 + 16);
    if (!*(_BYTE *)(a1 + 16))
    {
      sub_23918C32C((uint64_t **)a1, 0);
      result = *(unsigned __int8 *)(a1 + 16);
      if (!*(_BYTE *)(a1 + 16))
      {
        v19 = 0x3FFF;
LABEL_22:
        sub_23918C42C(a1, 0, v19, v9 - 1);
        result = 0;
        *(_QWORD *)(a1 + 8) = v18;
      }
    }
  }
  return result;
}

uint64_t sub_23918D97C(uint64_t a1, int a2, int a3)
{
  uint64_t result;

  sub_23918C32C((uint64_t **)a1, 0);
  result = *(unsigned __int8 *)(a1 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    result = sub_23918C42C(a1, 1, 64, a2);
    if (!(_DWORD)result)
      return sub_23918C42C(a1, 0, ~(-1 << a2), a3);
  }
  return result;
}

uint64_t sub_23918D9EC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t result;

  sub_23918C32C((uint64_t **)a1, 0);
  result = *(unsigned __int8 *)(a1 + 16);
  if (!*(_BYTE *)(a1 + 16))
    return sub_23918C42C(a1, 0, 63, *a2);
  return result;
}

uint64_t sub_23918DA38(uint64_t a1, int a2)
{
  uint64_t result;

  sub_23918C32C((uint64_t **)a1, 0);
  result = *(unsigned __int8 *)(a1 + 16);
  if (!*(_BYTE *)(a1 + 16))
    return sub_23918C42C(a1, 0, 63, a2);
  return result;
}

uint64_t sub_23918DA84(uint64_t a1, _BYTE *a2)
{
  uint64_t result;

  sub_23918C3B4((uint64_t **)a1);
  result = *(unsigned __int8 *)(a1 + 16);
  if (!*(_BYTE *)(a1 + 16))
    return sub_23918C4D0(a1, 0, 0x3Fu, a2);
  return result;
}

uint64_t sub_23918DACC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23918C814(a1, 0, 0, 0x40u, a2, 1);
  v4 = v3;
  if ((_DWORD)v3)
    sub_23918C1A0(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_Ver");
  return v4;
}

uint64_t sub_23918DB24(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 0x40u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Ver");
  return v3;
}

uint64_t sub_23918DB74(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = *a2 - 20;
  sub_23918C32C((uint64_t **)a1, v4 < 5);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_8:
    sub_23918C1A0(v8, v6, v7, "asn1PE_StatusCode");
    return v5;
  }
  v9 = *a2;
  if (v4 > 4)
    v8 = sub_23918C42C(a1, 0, 19, v9);
  else
    v8 = sub_23918DA38(a1, (v9 - 20));
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_8;
  }
  return v5;
}

uint64_t sub_23918DC24(uint64_t a1, _BYTE *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  char v9;
  char v11;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    v8 = *(unsigned __int8 *)(a1 + 16);
LABEL_8:
    sub_23918C1A0(v8, v6, v7, "asn1PD_StatusCode");
    return v5;
  }
  v11 = 0;
  if (v4)
  {
    v5 = sub_23918DA84(a1, &v11);
    v9 = v11 + 20;
  }
  else
  {
    v5 = sub_23918C4D0(a1, 0, 0x13u, &v11);
    v9 = v11;
  }
  *a2 = v9;
  if ((_DWORD)v5)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    v8 = v5;
    goto LABEL_8;
  }
  return v5;
}

uint64_t sub_23918DCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_23918C1A0(v7, v5, v6, "asn1PE_SUPLEND");
    return v4;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 8));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  if (*(_DWORD *)a2)
  {
    v7 = sub_2391ADD58(a1, (int *)(a2 + 16));
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    v7 = sub_23918DB74(a1, (unsigned __int8 *)(a2 + 456));
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (!*(_DWORD *)(a2 + 8))
    return 0;
  v7 = sub_23918DACC(a1, (_QWORD *)(a2 + 464));
  v4 = v7;
  if ((_DWORD)v7)
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  return v4;
}

uint64_t sub_23918DE50(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_23918C1A0(v8, v6, v7, "asn1PD_SUPLEND");
    return v5;
  }
  v9 = v4;
  *(_DWORD *)a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  *(_DWORD *)(a2 + 4) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  *(_DWORD *)(a2 + 8) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  if (*(_DWORD *)a2)
  {
    v8 = sub_2391ADE18(a1, a2 + 16);
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    v8 = sub_23918DC24(a1, (_BYTE *)(a2 + 456));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    v8 = sub_23918DB24(a1, (unint64_t *)(a2 + 464));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (!v9)
    return 0;
  v8 = sub_23918D648(a1);
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  return v5;
}

void sub_23918DFEC(uint64_t a1, int a2)
{
  if (a2 == 3 && *(_DWORD *)(a1 + 124) == 2)
  {
    if (*(_BYTE *)(a1 + 216) == 1)
    {
      if (!*(_DWORD *)(a1 + 220) && *(_DWORD *)(a1 + 128) == 2)
        sub_23918DFEC(a1, 1);
      *(_BYTE *)(a1 + 216) = 0;
    }
    sub_23918E614(a1, 0);
    if (*(_DWORD *)(a1 + 128) == 2 && *(_BYTE *)(a1 + 141) == 1)
    {
      *(_BYTE *)(a1 + 176) = 0;
      sub_23918DFEC(a1, 1);
    }
  }
  else if ((a2 | 2) != 3)
  {
    goto LABEL_14;
  }
  if (*(_DWORD *)(a1 + 128) == 2)
  {
    *(_QWORD *)(a1 + 128) = 1;
    *(_DWORD *)(a1 + 136) = -1;
    *(_WORD *)(a1 + 140) = 0;
    *(_BYTE *)(a1 + 142) = 0;
    *(_DWORD *)(a1 + 144) = 0;
    *(_WORD *)(a1 + 148) = 0;
  }
LABEL_14:
  if ((a2 & 0xFFFFFFFE) == 2 && *(_DWORD *)(a1 + 152) == 2)
  {
    *(_QWORD *)(a1 + 152) = 1;
    *(_DWORD *)(a1 + 160) = -1;
    *(_WORD *)(a1 + 164) = 0;
    *(_BYTE *)(a1 + 166) = 0;
    *(_DWORD *)(a1 + 168) = 0;
    *(_WORD *)(a1 + 172) = 0;
  }
  if (*(_DWORD *)(a1 + 128) != 2)
    *(_DWORD *)(a1 + 124) = 1;
}

void sub_23918E114(uint64_t a1, int *a2, int a3, _DWORD *a4, _DWORD *a5, _BYTE *a6, _BYTE *a7, char a8)
{
  int v16;
  void *v17;
  _DWORD *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  _BOOL4 v31;
  BOOL v32;
  int v33;
  uint64_t *v34;
  int v35;
  int v36;
  int v37;
  char v38;

  if (!a5)
  {
    v18 = (_DWORD *)(a1 + 124);
    v16 = 1;
    if (*(_DWORD *)(a1 + 124))
    {
      v38 = a8;
      v19 = 0;
      v20 = 0;
      a3 = 0;
LABEL_23:
      v22 = 1;
      goto LABEL_24;
    }
LABEL_11:
    LOBYTE(v22) = 1;
    goto LABEL_48;
  }
  LOBYTE(v16) = 1;
  v17 = malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
  free(v17);
  v18 = (_DWORD *)(a1 + 124);
  if (!*(_DWORD *)(a1 + 124))
    goto LABEL_11;
  v38 = a8;
  v19 = *a2;
  v20 = a2[1];
  if (*a5 == 3)
  {
    v25 = *(_DWORD *)(a1 + 152);
    switch(v25)
    {
      case 0:
LABEL_22:
        v16 = 1;
        goto LABEL_23;
      case 1:
        v22 = 0;
        break;
      case 2:
        v26 = a2[1];
        v27 = *a2;
        sub_23918E388(a1, 2, v27, v26);
        v19 = v27;
        v22 = v28;
        break;
      default:
        v29 = 362;
        goto LABEL_21;
    }
    v16 = 1;
    goto LABEL_24;
  }
  if (*a5)
    goto LABEL_22;
  v21 = *(_DWORD *)(a1 + 128);
  if (!v21)
    goto LABEL_22;
  if (v21 == 1)
  {
    v16 = 0;
    goto LABEL_23;
  }
  if (v21 != 2)
  {
    v29 = 339;
LABEL_21:
    v30 = *a2;
    sub_2391BCBBC(v29, "lpc.c");
    v19 = v30;
    goto LABEL_22;
  }
  v22 = 1;
  v23 = v19;
  sub_23918E388(a1, 1, v19, v20);
  v19 = v23;
  v16 = v24;
LABEL_24:
  v31 = 0;
  if (v16)
    v32 = v22 == 0;
  else
    v32 = 1;
  v33 = v32;
  if (a4 && v33)
    v31 = *a4 != 0;
  v34 = 0;
  v35 = 0;
  if (a5 && !v16)
  {
    *(_DWORD *)(a1 + 132) = v19;
    *(_DWORD *)(a1 + 136) = v20;
    v34 = (uint64_t *)(a1 + 132);
    *(_DWORD *)(a1 + 140) = a3;
    v36 = a5[1];
    *(_DWORD *)(a1 + 144) = v36;
    if (v36 == 2)
    {
      v37 = a5[3];
      *(_BYTE *)(a1 + 149) = v37;
      *(_BYTE *)(a1 + 148) = 0;
      if (v31)
        *(_BYTE *)(a1 + 149) = v37 - 1;
    }
    *(_DWORD *)(a1 + 128) = 2;
    v35 = 1;
  }
  if (a5 && !v22)
  {
    *(_DWORD *)(a1 + 156) = v19;
    *(_DWORD *)(a1 + 160) = v20;
    v34 = (uint64_t *)(a1 + 156);
    *(_DWORD *)(a1 + 164) = a3;
    *(_DWORD *)(a1 + 168) = a5[1];
    *(_DWORD *)(a1 + 152) = 2;
    v35 = 1;
  }
  if (a5 && v35)
  {
    if (*a5 != 3)
      sub_23918F0EC(a1, (uint64_t)a5, v34, v38);
    if (*v18 == 1)
      *v18 = 2;
  }
LABEL_48:
  *a6 = v16;
  *a7 = v22;
}

double sub_23918E388(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t *v5;
  double result;
  uint64_t v7;
  _BYTE v8[560];
  uint64_t v9;
  uint64_t *v10;
  _BYTE *v11;

  if (a2 == 2)
  {
    v5 = (uint64_t *)(a1 + 156);
  }
  else
  {
    if (a2 != 1)
    {
      sub_2391BCBBC(1659, "lpc.c");
      return result;
    }
    v5 = (uint64_t *)(a1 + 132);
  }
  if ((*(_DWORD *)v5 != a3 || *((_DWORD *)v5 + 1) != a4) && (a3 != 1 || *(_DWORD *)v5 == 1))
  {
    if (a2 == 2)
    {
      bzero(v8, 0x230uLL);
      v8[552] = 1;
      v7 = *v5;
      v11 = v8;
      v9 = v7;
      v10 = &v9;
    }
    else
    {
      if (!*(_BYTE *)(a1 + 176))
        *(_BYTE *)(a1 + 176) = 1;
      bzero(v8, 0x230uLL);
      v8[416] = 1;
      v9 = *v5;
      if (*((_BYTE *)v5 + 10) || *((_BYTE *)v5 + 9))
        goto LABEL_20;
      v10 = &v9;
      v11 = v8;
    }
    sub_23918F6D0(a1, &v10);
LABEL_20:
    result = NAN;
    *v5 = 0xFFFFFFFF00000000;
    *((_WORD *)v5 + 4) = 0;
    *((_BYTE *)v5 + 10) = 0;
  }
  return result;
}

void sub_23918E4C4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;

  v9 = a2;
  if (!*(_DWORD *)(a1 + 124))
  {
    sub_2391BCBBC(568, "lpc.c");
    return;
  }
  if ((a3 - 1) > 1)
  {
    sub_2391BCBBC(562, "lpc.c");
    return;
  }
  v5 = a1 + 128;
  v6 = 152;
  if (a3 == 1)
    v6 = 128;
  else
    v5 = a1 + 152;
  if (*(_DWORD *)(a1 + v6) != 2)
  {
    sub_2391BCBBC(556, "lpc.c");
    return;
  }
  if (*(_QWORD *)(v5 + 4) != a2)
  {
    sub_2391BCBBC(551, "lpc.c");
    return;
  }
  if (a3 != 2)
  {
    if (a4 != 1 || *(_BYTE *)(a1 + 176))
    {
      if (a4)
      {
        sub_23918DFEC(a1, a3);
        return;
      }
      v8 = 0;
    }
    else
    {
      v8 = 1;
    }
    *(_BYTE *)(a1 + 176) = v8;
  }
  sub_23918DFEC(a1, a3);
  if (!a4)
    sub_23918E614(a1, &v9);
}

void sub_23918E614(uint64_t a1, _DWORD *a2)
{
  _DWORD *v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void *v7;

  v2 = *(_DWORD **)(a1 + 200);
  if (!v2)
    return;
  v4 = a1 + 184;
  if (a2)
  {
    if (*(_DWORD *)v4 != *a2 || *(_DWORD *)(a1 + 188) != a2[1])
      return;
    goto LABEL_14;
  }
  if (*(_BYTE *)(a1 + 193) != 1)
  {
    v6 = 2469;
LABEL_13:
    sub_2391BCBBC(v6, "lpc.c");
    goto LABEL_14;
  }
  v5 = *(_DWORD *)(a1 + 196);
  if (v5 != 1)
  {
    if (v5 == 2)
    {
      if (!*v2)
        sub_23918DFEC(a1, 1);
      goto LABEL_14;
    }
    v6 = 2463;
    goto LABEL_13;
  }
LABEL_14:
  v7 = *(void **)(a1 + 200);
  if (v7)
    free(v7);
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = 0;
}

double sub_23918E6D8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  double result;

  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_QWORD *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 108) = 3;
  *(_BYTE *)(a1 + 116) = -1;
  v2 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)(a1 + 72) = v2;
  v3 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)(a1 + 96) = v3;
  *(_DWORD *)(a1 + 232) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_BYTE *)(a1 + 120) = 1;
  *(_BYTE *)a1 = 1;
  return result;
}

void sub_23918E784(uint64_t a1, int a2, char a3, int a4, const void *a5)
{
  NSObject *v10;
  void *v11;
  NSObject *v12;
  int v13;
  void *v14;
  _DWORD v15[2];
  uint8_t buf[4];
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v15[0] = 1;
  v10 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v13) = 0;
    _os_log_debug_impl(&dword_2390FD000, v10, OS_LOG_TYPE_DEBUG, "#posp,lpp,lpp_t_supl_pos_trigger", (uint8_t *)&v13, 2u);
  }
  sub_23918F174((uint64_t)a5, a4);
  if (!*(_DWORD *)(a1 + 4))
    goto LABEL_11;
  if (!a5 || a4 < 1)
  {
    sub_2391BCBBC(608, "lpp_if.c");
    sub_2391BCBBC(609, "lpp_if.c");
LABEL_11:
    sub_23918FB1C(a1, a2, 1, 0, 0);
    return;
  }
  v15[1] = a2;
  v11 = malloc_type_calloc(1uLL, a4, 0x86CB5109uLL);
  bzero(v11, a4);
  v14 = v11;
  v13 = a4;
  memcpy(v11, a5, a4);
  v12 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67109120;
    v17 = a4;
    _os_log_debug_impl(&dword_2390FD000, v12, OS_LOG_TYPE_DEBUG, "#posp,lpp,lpp_t_supl_pos_trigger,calling lpp_process_downlink_message,airMsgLen,%d", buf, 8u);
  }
  sub_23918F174((uint64_t)v11, a4);
  sub_23918F48C(a1, v15, a3, (uint64_t)&v13);
  if (v14)
    free(v14);
}

void sub_23918E974(uint64_t a1, int a2, char a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v13;
  int v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  __int16 v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  size_t size[2];
  void *__src[2];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[16];
  __int16 v31;
  char v32;
  int v33;
  char v34;

  bzero(v30, 0x368uLL);
  v28 = 0u;
  v29 = 0u;
  *(_OWORD *)__src = 0u;
  v27 = 0u;
  v24 = 0u;
  *(_OWORD *)size = 0u;
  v22 = 0;
  v23 = 0;
  v21 = 0xFFFFFFFF00000000;
  if (!(a5 | a7))
    goto LABEL_21;
  if (a5)
    sub_239197C6C(a5);
  v22 = a5;
  v23 = a7;
  if (a4 == 1)
  {
    LODWORD(v21) = 1;
    HIDWORD(v21) = a2;
    v13 = **(char ***)(a1 + 72);
    if (v13)
    {
      while (*((_DWORD *)v13 + 4) != 1 || *((_DWORD *)v13 + 5) != a2)
      {
        v13 = *(char **)v13;
        if (!v13)
          goto LABEL_9;
      }
    }
    else
    {
LABEL_9:
      v13 = sub_239197D84(a1, &v21, a3, 255, 0);
      if (!v13)
        goto LABEL_24;
    }
    v20 = 1;
    v14 = v13[24];
    HIBYTE(v20) = v13[24];
    v15 = (char *)**((_QWORD **)v13 + 5);
    if (v15)
    {
      while (v15[16] != 1 || v15[17] != v14)
      {
        v15 = *(char **)v15;
        if (!v15)
          goto LABEL_14;
      }
      goto LABEL_15;
    }
LABEL_14:
    v15 = sub_23918FDF0((uint64_t)v13, &v20, 6);
    if (v15)
    {
LABEL_15:
      *((_DWORD *)v15 + 6) = 1;
      goto LABEL_17;
    }
LABEL_24:
    sub_2391BCBBC(882, "lpp_if.c");
    goto LABEL_25;
  }
  v31 = 1;
  v32 = 0;
  v33 = 2;
  v34 = 0;
  v15 = v30;
LABEL_17:
  if (sub_239191718(a1, (uint64_t)v15, &v22, (uint64_t)&v27) == 1)
  {
    v16 = v28;
    size[0] = v28;
    *(_BYTE *)(v28 + 5) = 0;
    *(_BYTE *)(v16 + 9) = 0;
    v17 = sub_2391BC2A8(4, 7u, (uint64_t *)__src, 0, &size[1], (__int16 *)v16);
    if (!a4)
      goto LABEL_19;
    goto LABEL_22;
  }
LABEL_21:
  v17 = 1;
  if (a4)
  {
LABEL_22:
    if (!v17)
    {
      sub_23918FC54(a1, SHIDWORD(v21), 0, (unsigned int *)&size[1]);
      goto LABEL_26;
    }
LABEL_25:
    HIDWORD(v21) = a2;
    sub_23918FC54(a1, a2, 1, 0);
    sub_2391BCBBC(924, "lpp_if.c");
    goto LABEL_26;
  }
LABEL_19:
  v18 = LODWORD(size[1]);
  if (LODWORD(size[1]))
  {
    v19 = malloc_type_calloc(1uLL, LODWORD(size[1]), 0x86CB5109uLL);
    bzero(v19, v18);
    memcpy(v19, __src[0], SLODWORD(size[1]));
  }
LABEL_26:
  sub_2391995B8((void **)size);
}

void sub_23918EBE4(uint64_t a1, int a2, char a3)
{
  char *v4;
  int v5;
  char *v6;
  uint64_t v7;
  int v8;
  void *v9;
  size_t v10;
  size_t size[2];
  void *__src[2];
  __int128 v13;
  _OWORD v14[2];
  __int16 v15;
  int v16;
  int v17;

  v13 = 0u;
  memset(v14, 0, sizeof(v14));
  *(_OWORD *)size = 0u;
  *(_OWORD *)__src = 0u;
  v16 = 1;
  v17 = a2;
  v4 = **(char ***)(a1 + 72);
  if (v4)
  {
    while (*((_DWORD *)v4 + 4) != 1 || *((_DWORD *)v4 + 5) != a2)
    {
      v4 = *(char **)v4;
      if (!v4)
        goto LABEL_5;
    }
    LOBYTE(v15) = 1;
  }
  else
  {
LABEL_5:
    v4 = sub_239197D84(a1, &v16, a3, 255, 0);
    LOBYTE(v15) = 1;
    if (!v4)
      goto LABEL_19;
  }
  v5 = v4[24];
  HIBYTE(v15) = v4[24];
  v6 = (char *)**((_QWORD **)v4 + 5);
  if (v6)
  {
    while (v6[16] != 1 || v6[17] != v5)
    {
      v6 = *(char **)v6;
      if (!v6)
        goto LABEL_12;
    }
  }
  else
  {
LABEL_12:
    v6 = sub_23918FDF0((uint64_t)v4, &v15, 5);
    if (!v6)
      goto LABEL_19;
  }
  *((_DWORD *)v6 + 6) = 1;
  if (sub_239191598(a1, (uint64_t)v6, 0, (uint64_t)&v13) == 1)
  {
    v7 = *(_QWORD *)&v14[0];
    *(_BYTE *)(*(_QWORD *)&v14[0] + 5) = 0;
    *(_BYTE *)(v7 + 9) = 0;
    LODWORD(size[1]) = 0;
    if (sub_2391BC2A8(4, 7u, (uint64_t *)__src, 0, &size[1], (__int16 *)v7))
    {
      sub_2391BCBBC(1016, "lpp_if.c");
      v8 = 1;
      v9 = __src[0];
    }
    else
    {
      v4[113] = 1;
      v10 = LODWORD(size[1]);
      v9 = malloc_type_calloc(1uLL, LODWORD(size[1]), 0x86CB5109uLL);
      bzero(v9, v10);
      memcpy(v9, __src[0], SLODWORD(size[1]));
      v8 = 0;
      __src[0] = v9;
    }
  }
  else
  {
    v9 = 0;
    LODWORD(size[1]) = 0;
    __src[0] = 0;
    v8 = 1;
  }
  sub_23918FA78(a1, v17, v8, size[1], (char *)v9);
LABEL_19:
  sub_2391995B8((void **)v14);
}

void sub_23918EDCC(uint64_t a1, int a2)
{
  uint64_t v3;

  v3 = **(_QWORD **)(a1 + 72);
  if (v3)
  {
    while (*(_DWORD *)(v3 + 16) != 1 || *(_DWORD *)(v3 + 20) != a2)
    {
      v3 = *(_QWORD *)v3;
      if (!v3)
        return;
    }
    sub_239197F74(a1, v3, 1u);
  }
}

void sub_23918EE08(uint64_t a1, __int128 *a2, __int128 *a3, char a4, uint64_t a5, int a6, uint64_t a7)
{
  unsigned __int8 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 *v14;
  _DWORD v15[2];
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  _OWORD v19[5];
  char v20;
  uint64_t v21;

  v8 = BYTE4(a5);
  v21 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v18 = 0x8000000080000000;
  *((_QWORD *)&v18 + 1) = 0xFFFF00007FFFFFFFLL;
  LOWORD(v19[0]) = 255;
  WORD4(v19[0]) = -1;
  BYTE10(v19[0]) = -1;
  *(_DWORD *)((char *)v19 + 2) = -1;
  BYTE6(v19[0]) = -1;
  memset((char *)v19 + 11, 0, 32);
  v20 = 0;
  v16 = 0;
  v17 = 0;
  if ((a4 & 3) != 0)
  {
    v10 = a2[1];
    v18 = *a2;
    v19[0] = v10;
    v11 = *(__int128 *)((char *)a2 + 43);
    v12 = *a3;
    v13 = a3[1];
    v19[1] = a2[2];
    *(_OWORD *)((char *)&v19[1] + 11) = v11;
    v19[3] = v12;
    v19[4] = v13;
    v14 = &v18;
    v16 = &v18;
    v20 = a4;
    if ((a4 & 4) == 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v14 = 0;
  if ((a4 & 4) != 0)
LABEL_3:
    v17 = a7;
LABEL_4:
  if ((a5 & 0xFFFFFFFE) == 2)
  {
    if (v14)
      sub_239197C6C((uint64_t)v14);
    v15[0] = v8;
    v15[1] = a6;
    sub_239197184(a1, (uint64_t)&v16, v15);
  }
  else
  {
    sub_2391BCBBC(1145, "lpp_if.c");
  }
}

void sub_23918EF40(uint64_t a1, int *a2, uint64_t a3, int a4)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _DWORD v10[2];
  char v11[8];
  int v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _DWORD v19[39];
  uint64_t v20;
  char v21;
  int v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v26[2];

  *(_QWORD *)((char *)&v15 + 4) = 0xFFFFFFFFLL;
  BYTE12(v15) = -1;
  *(_QWORD *)&v16 = 0xFF00000000;
  BYTE8(v16) = -1;
  if ((a3 & 0xFFFFFFFE) == 2 && BYTE4(a3) <= 1u)
  {
    v10[0] = BYTE4(a3);
    v10[1] = a4;
  }
  else
  {
    sub_2391BCBBC(1268, "lpp_if.c");
  }
  bzero(v11, 0x230uLL);
  v11[0] = 1;
  v12 = *a2;
  v21 = *((_BYTE *)a2 + 264);
  v22 = a2[67];
  v24 = *(_OWORD *)(a2 + 70);
  v25 = *((_QWORD *)a2 + 37);
  v23 = *((_BYTE *)a2 + 272);
  if ((v12 - 1) < 2)
  {
    v17 = *(_OWORD *)(a2 + 17);
    v18 = *(_OWORD *)(a2 + 21);
    *(_OWORD *)v19 = *(_OWORD *)(a2 + 25);
    *(_QWORD *)((char *)&v19[3] + 2) = *(_QWORD *)((char *)a2 + 114);
    v13 = *(_OWORD *)(a2 + 1);
    v14 = *(_OWORD *)(a2 + 5);
    v15 = *(_OWORD *)(a2 + 9);
    v16 = *(_OWORD *)(a2 + 13);
LABEL_9:
    v26[0] = v10;
    v26[1] = v11;
    sub_23918F6D0(a1, v26);
    return;
  }
  if (!v12)
  {
    v6 = *((_OWORD *)a2 + 12);
    *(_OWORD *)&v19[27] = *((_OWORD *)a2 + 13);
    v7 = *((_OWORD *)a2 + 15);
    *(_OWORD *)&v19[31] = *((_OWORD *)a2 + 14);
    *(_OWORD *)&v19[35] = v7;
    v8 = *((_OWORD *)a2 + 8);
    *(_OWORD *)&v19[11] = *((_OWORD *)a2 + 9);
    v9 = *((_OWORD *)a2 + 11);
    *(_OWORD *)&v19[15] = *((_OWORD *)a2 + 10);
    *(_OWORD *)&v19[19] = v9;
    *(_OWORD *)&v19[23] = v6;
    v20 = *((_QWORD *)a2 + 32);
    *(_OWORD *)&v19[7] = v8;
    goto LABEL_9;
  }
  sub_2391BCBBC(1293, "lpp_if.c");
}

__n128 sub_23918F0EC(uint64_t a1, uint64_t a2, uint64_t *a3, char a4)
{
  uint64_t v7;
  char *v8;
  __n128 result;

  if (a3)
  {
    if (*(_BYTE *)(a1 + 176))
    {
      v7 = *a3;
      *(_DWORD *)(a1 + 192) = *((_DWORD *)a3 + 2);
      *(_QWORD *)(a1 + 184) = v7;
      v8 = (char *)malloc_type_calloc(1uLL, 0x1CuLL, 0x86CB5109uLL);
      *((_QWORD *)v8 + 1) = 0;
      *((_QWORD *)v8 + 2) = 0;
      *(_QWORD *)v8 = 0;
      *((_DWORD *)v8 + 6) = 0;
      *(_QWORD *)(a1 + 200) = v8;
      *(_BYTE *)(a1 + 208) = a4;
      *(_DWORD *)(a1 + 196) = 2;
      result = *(__n128 *)(a2 + 12);
      *(_OWORD *)v8 = *(_OWORD *)a2;
      *(__n128 *)(v8 + 12) = result;
    }
  }
  return result;
}

void sub_23918F174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::string *p_p;
  std::string::size_type size;
  std::string::size_type v11;
  std::string::size_type v12;
  std::string::size_type v13;
  std::string::size_type v14;
  std::string::size_type v15;
  uint64_t v16;
  NSObject *v17;
  std::string *v18;
  std::string __p;
  std::string __str;
  uint8_t buf[12];
  __int16 v22;
  _BYTE v23[10];
  _QWORD v24[10];
  char v25;
  _QWORD v26[22];

  v26[20] = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    v2 = a2;
    if (a2)
    {
      v3 = a1;
      memset(&__str, 0, sizeof(__str));
      v4 = *MEMORY[0x24BEDB7F0];
      v6 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v5 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v7 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2390FE8EC((uint64_t)buf);
        v8 = *(_QWORD *)&v23[2];
        *(_DWORD *)((char *)v24 + *(_QWORD *)(*(_QWORD *)&v23[2] - 24)) = *(_DWORD *)((_BYTE *)v24
                                                                                      + *(_QWORD *)(*(_QWORD *)&v23[2]
                                                                                                  - 24)) & 0xFFFFFFB5 | 8;
        *(_QWORD *)((char *)&v24[2] + *(_QWORD *)(v8 - 24)) = 2;
        __p.__r_.__value_.__s.__data_[0] = 48;
        sub_2390FEA18(&v23[2], (char *)&__p);
        std::ostream::operator<<();
        std::stringbuf::str();
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        std::string::append(&__str, (const std::string::value_type *)p_p, size);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        *(_QWORD *)buf = v4;
        *(_QWORD *)&buf[*(_QWORD *)(v4 - 24)] = v6;
        *(_QWORD *)&v23[2] = v5;
        v24[0] = v7;
        if (v25 < 0)
          operator delete((void *)v24[8]);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B8387F0](v26);
        ++v3;
        --v2;
      }
      while (v2);
      v11 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        v12 = __str.__r_.__value_.__l.__size_ / 0x1F4;
        v13 = __str.__r_.__value_.__l.__size_ % 0x1F4;
      }
      else
      {
        v12 = 0;
        v13 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      }
      v14 = 0;
      if (v13)
        v15 = v12 + 1;
      else
        v15 = v12;
      v16 = 1;
      if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) != 0)
        goto LABEL_24;
      while (v14 < v11)
      {
        while (1)
        {
          std::string::basic_string(&__p, &__str, v14, 0x1F4uLL, (std::allocator<char> *)buf);
          v17 = qword_2542CF618;
          if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
          {
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v18 = &__p;
            else
              v18 = (std::string *)__p.__r_.__value_.__r.__words[0];
            *(_DWORD *)buf = 134284035;
            *(_QWORD *)&buf[4] = v16;
            v22 = 2049;
            *(_QWORD *)v23 = v15;
            *(_WORD *)&v23[8] = 2081;
            v24[0] = v18;
            _os_log_impl(&dword_2390FD000, v17, OS_LOG_TYPE_DEFAULT, "#lpp,#pdu,%{private}zu,of,%{private}zu,%{private}s", buf, 0x20u);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          v11 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          v14 += 500;
          ++v16;
          if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) == 0)
            break;
LABEL_24:
          if (v14 >= __str.__r_.__value_.__l.__size_)
          {
            operator delete(__str.__r_.__value_.__l.__data_);
            return;
          }
        }
      }
    }
  }
}

void sub_23918F440(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23918F48C(uint64_t a1, _DWORD *a2, char a3, uint64_t a4)
{
  uint64_t v4;
  unsigned int v6;
  _QWORD *v10;
  char *v11;
  _BYTE v12[332];
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_QWORD *)(a4 + 8);
  if (v4 && (v6 = *(_DWORD *)a4) != 0)
  {
    v15 = 0u;
    v16 = 0u;
    v14 = 0u;
    *(_QWORD *)&v16 = v4;
    DWORD2(v15) = v6;
    v10 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
    bzero(v10, 0xA28uLL);
    *(_QWORD *)&v15 = v10;
    v13 = sub_2391BC0FC(4u, 7u, v4, v6, (uint64_t)v10, 0, (uint64_t)v12, 0, 0);
    v11 = sub_239197D44(a1, a2, a3, v13, (uint64_t)v10);
    if (v11)
    {
      (*((void (**)(uint64_t, char *, uint64_t, int *, __int128 *))v11 + 6))(a1, v11, a4, &v13, &v14);
      v10 = (_QWORD *)v15;
    }
    else
    {
      sub_2391BCBBC(174, "lpp_control.c");
    }
    sub_23919A5E4(v10, (uint64_t)&unk_250A90278);
    free((void *)v15);
  }
  else
  {
    sub_2391BCBBC(124, "lpp_control.c");
  }
}

void sub_23918F5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v4;
  _WORD *v5;
  signed int v6;
  void *v7;

  if (a2 && a3)
  {
    if (*(_BYTE *)(a1 + 45) == 1)
    {
      v4 = (*(_DWORD *)a3 + 2);
      v5 = malloc_type_calloc(1uLL, v4, 0x86CB5109uLL);
      bzero(v5, v4);
      v6 = *(_DWORD *)a3;
      *v5 = bswap32(*(_DWORD *)a3) >> 16;
      if ((v5 & 1) != 0)
        v6 = *(_DWORD *)a3;
      memcpy(v5 + 1, *(const void **)(a3 + 8), v6);
      v7 = malloc_type_calloc(1uLL, 5uLL, 0x86CB5109uLL);
      free(v7);
      free(v5);
    }
    else
    {
      sub_2391BCBBC(353, "lpp_control.c");
    }
  }
}

void sub_23918F6D0(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t j;

  v2 = **(uint64_t ***)(a1 + 72);
  if (!v2)
  {
LABEL_5:
    sub_2391BCBBC(695, "lpp_control.c");
    return;
  }
  while (*((_DWORD *)v2 + 4) != *(_DWORD *)*a2 || *((_DWORD *)v2 + 5) != *(_DWORD *)(*a2 + 4))
  {
    v2 = (uint64_t *)*v2;
    if (!v2)
      goto LABEL_5;
  }
  v3 = a2[1];
  if (*(_BYTE *)v3 == 1)
  {
    if (*((_BYTE *)v2 + 110))
    {
      v4 = *(_QWORD *)v2[5];
      if (v4)
      {
        while (*(unsigned __int8 *)(v4 + 16) != *((unsigned __int8 *)v2 + 104)
             || *(unsigned __int8 *)(v4 + 17) != *((unsigned __int8 *)v2 + 105))
        {
          v4 = *(_QWORD *)v4;
          if (!v4)
            goto LABEL_38;
        }
        goto LABEL_37;
      }
    }
  }
  else
  {
    if ((*(_BYTE *)(v3 + 416) == 1 || *(_BYTE *)(v3 + 320) == 1 && !*(_DWORD *)(v3 + 328)) && *((_BYTE *)v2 + 111))
    {
      for (i = *(_QWORD *)v2[5]; i; i = *(_QWORD *)i)
      {
        if (*(unsigned __int8 *)(i + 16) == *((unsigned __int8 *)v2 + 106)
          && *(unsigned __int8 *)(i + 17) == *((unsigned __int8 *)v2 + 107))
        {
          break;
        }
      }
    }
    else
    {
      i = 0;
    }
    if ((*(_BYTE *)(v3 + 552) == 1 || *(_BYTE *)(v3 + 417) == 1 && *(_DWORD *)(v3 + 424) == 3) && *((_BYTE *)v2 + 112))
    {
      for (j = *(_QWORD *)v2[5]; j; j = *(_QWORD *)j)
      {
        if (*(unsigned __int8 *)(j + 16) == *((unsigned __int8 *)v2 + 108)
          && *(unsigned __int8 *)(j + 17) == *((unsigned __int8 *)v2 + 109))
        {
          break;
        }
      }
    }
    else
    {
      j = 0;
    }
    if (j)
      v4 = j;
    else
      v4 = i;
    if (v4)
    {
LABEL_37:
      sub_2391906D8(a1, v4, 7u, (uint64_t *)v3);
      return;
    }
  }
LABEL_38:
  sub_2391BCBBC(690, "lpp_control.c");
}

void sub_23918F868(uint64_t a1, int a2)
{
  NSObject *v4;
  int v5;
  int v6;
  int v7;
  _DWORD v8[2];
  __int16 v9;
  int v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v4 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    v7 = *(_DWORD *)(a1 + 4);
    v8[0] = 67109376;
    v8[1] = v7;
    v9 = 1024;
    v10 = a2;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#posp,#lpp,entered lpp_state_control,state,%d,event,%d", (uint8_t *)v8, 0xEu);
  }
  v5 = *(_DWORD *)(a1 + 4);
  if (v5 == 2)
  {
    if (a2 == 1 && !**(_QWORD **)(a1 + 72))
    {
      *(_DWORD *)(a1 + 4) = 1;
      v6 = 2;
      goto LABEL_13;
    }
  }
  else
  {
    if (v5 == 1)
    {
      if (a2)
        return;
      *(_DWORD *)(a1 + 4) = 2;
      v6 = 1;
      goto LABEL_13;
    }
    if (!v5 && a2 == 2)
    {
      *(_DWORD *)(a1 + 4) = 1;
      v6 = 0;
LABEL_13:
      sub_239197568(v6);
    }
  }
}

void sub_23918F998(uint64_t a1, _DWORD *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  int v6;
  _QWORD *v7;
  void *v8;
  void *v9;

  v4 = **(_QWORD ***)(a1 + 96);
  while (v4)
  {
    while (1)
    {
      v5 = v4;
      v4 = (_QWORD *)*v4;
      if (a2)
        break;
      v6 = *((_DWORD *)v5 + 5);
LABEL_8:
      sub_239197BB4(*(unsigned __int8 *)(v5[3] + 32), v6);
      v7 = (_QWORD *)v5[3];
      v8 = (void *)v7[1];
      if (v8)
      {
        free(v8);
        v7[1] = 0;
        v7 = (_QWORD *)v5[3];
      }
      v9 = (void *)v7[3];
      if (!v9 || (free(v9), v7[3] = 0, (v7 = (_QWORD *)v5[3]) != 0))
      {
        free(v7);
        v5[3] = 0;
      }
      sub_239199144(*(_QWORD **)(a1 + 96), v5);
      free(v5);
      if (!v4)
        goto LABEL_14;
    }
    if (*a2 == *((_DWORD *)v5 + 4))
    {
      v6 = a2[1];
      if (v6 == *((_DWORD *)v5 + 5))
        goto LABEL_8;
    }
  }
LABEL_14:
  if (!a2)
    *(_BYTE *)(a1 + 104) = 0;
}

void sub_23918FA78(int a1, int a2, int a3, int a4, char *__src)
{
  _QWORD *v6;
  int v7;
  BOOL v8;
  void *__p;
  void *v10;
  uint64_t v11;
  int v12;

  __p = 0;
  v10 = 0;
  v12 = 0;
  v11 = 0;
  v8 = a3 != 0;
  v7 = a2;
  sub_239107FF0(&__p, __src, &__src[a4], a4);
  v12 = 0;
  v6 = (_QWORD *)sub_239189E98();
  sub_23918A158(v6, (uint64_t)&v7);
  if (__src)
    free(__src);
  if (__p)
  {
    v10 = __p;
    operator delete(__p);
  }
}

void sub_23918FB00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23918FB1C(uint64_t a1, int a2, int a3, int a4, char *a5)
{
  NSObject *v9;
  uint64_t v10;
  void *__p;
  void *v12;
  uint64_t v13;
  BOOL v14;
  int v15;
  int v16;
  uint8_t buf[4];
  int v18;
  __int16 v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  __p = 0;
  v12 = 0;
  v13 = 0;
  v9 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109376;
    v18 = a2;
    v19 = 1024;
    v20 = a3;
    _os_log_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp SessionID,%u,result,%u", buf, 0xEu);
  }
  v14 = a3 != 0;
  v15 = a2;
  v16 = 0;
  sub_239107FF0(&__p, a5, &a5[a4], a4);
  sub_239189E98();
  v10 = sub_2391AE584();
  sub_2391AF510(v10, (uint64_t)&__p);
  if (a5)
    free(a5);
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_23918FC38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23918FC54(uint64_t a1, int a2, int a3, unsigned int *a4)
{
  void *v6;
  unint64_t v8;
  NSObject *v9;
  size_t v10;
  uint64_t v11;
  _DWORD v12[2];
  void *__p;
  void *v14;
  uint64_t v15;
  BOOL v16;
  int v17;
  uint64_t v18;

  v6 = 0;
  v18 = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v8 = 0;
  }
  else
  {
    v8 = 0;
    if (a4)
    {
      v9 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
      {
        v12[0] = 67109376;
        v12[1] = a2;
        LOWORD(__p) = 1024;
        *(_DWORD *)((char *)&__p + 2) = 0;
        _os_log_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp SessionID,%u,result,%u", (uint8_t *)v12, 0xEu);
      }
      v10 = *a4;
      v6 = malloc_type_calloc(1uLL, v10, 0x86CB5109uLL);
      bzero(v6, v10);
      sub_2391AC49C((uint64_t)"send_lpm_supl_ad_rsp", 143, v6, *a4, *((void **)a4 + 1), *a4);
      v8 = (int)*a4;
    }
  }
  __p = 0;
  v14 = 0;
  v15 = 0;
  v12[0] = a2;
  v16 = a3 != 0;
  v17 = 0;
  sub_239107FF0(&__p, (char *)v6, (char *)v6 + v8, v8);
  v11 = sub_239189E98();
  sub_239189FC0(v11, (uint64_t)v12);
  if (v6)
    free(v6);
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_23918FDCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  _Unwind_Resume(exception_object);
}

char *sub_23918FDF0(uint64_t a1, __int16 *a2, signed int a3)
{
  int v5;
  void (*v6)(uint64_t, _DWORD *);
  uint64_t v7;
  char *v9;
  __int16 v10;
  char v11;

  if (!a1)
  {
    v7 = 1242;
LABEL_9:
    sub_2391BCBBC(v7, "lpp_transaction.c");
    return 0;
  }
  if (!a2)
  {
    v7 = 1247;
    goto LABEL_9;
  }
  if (*(_BYTE *)a2 != 1)
  {
    if (!*(_BYTE *)a2 && a3 < 3)
    {
      v5 = dword_2391CBB1C[a3];
      v6 = (void (*)(uint64_t, _DWORD *))qword_250A73AB0[a3];
LABEL_16:
      v9 = (char *)malloc_type_calloc(1uLL, 0x368uLL, 0x86CB5109uLL);
      bzero(v9, 0x368uLL);
      v10 = *a2;
      *((_WORD *)v9 + 8) = *a2;
      if (v10 == 1)
      {
        v11 = *(_BYTE *)(a1 + 24);
        v9[17] = v11;
        v9[18] = 1;
        *(_BYTE *)(a1 + 24) = v11 + 1;
      }
      *((_DWORD *)v9 + 5) = v5;
      *(_QWORD *)(v9 + 28) = *(_QWORD *)(a1 + 16);
      *((_DWORD *)v9 + 6) = 0;
      *((_QWORD *)v9 + 108) = v6;
      sub_2391990F8(*(_QWORD **)(a1 + 40), v9);
      sub_2391976A8((uint64_t)v9, 0, 0);
      return v9;
    }
    return 0;
  }
  v6 = 0;
  v5 = 1;
  switch(a3)
  {
    case 1:
      ++*(_BYTE *)(a1 + 24);
      v6 = sub_23918FF88;
      v5 = 3;
      goto LABEL_16;
    case 5:
      goto LABEL_16;
    case 6:
      v6 = sub_23918FF88;
      v5 = 2;
      goto LABEL_16;
    case 7:
      v6 = 0;
      v5 = 5;
      goto LABEL_16;
    default:
      return (char *)v6;
  }
  return (char *)v6;
}

void sub_23918FF88(uint64_t a1, _DWORD *a2)
{
  uint64_t *v2;

  if ((a2[5] & 0xFFFFFFFE) == 2)
  {
    v2 = **(uint64_t ***)(a1 + 72);
    if (v2)
    {
      while (*((_DWORD *)v2 + 4) != a2[7] || *((_DWORD *)v2 + 5) != a2[8])
      {
        v2 = (uint64_t *)*v2;
        if (!v2)
          goto LABEL_6;
      }
    }
    else
    {
LABEL_6:
      sub_2391BCBBC(4147, "lpp_transaction.c");
    }
  }
  else
  {
    sub_2391BCBBC(4154, "lpp_transaction.c");
  }
}

void sub_239190000(uint64_t a1, _DWORD *a2, int a3)
{
  uint64_t *v4;
  uint64_t v7;
  char v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  char v15;

  if (a2[5] == 4)
  {
    v4 = **(uint64_t ***)(a1 + 72);
    if (v4)
    {
      while (*((_DWORD *)v4 + 4) != a2[7] || *((_DWORD *)v4 + 5) != a2[8])
      {
        v4 = (uint64_t *)*v4;
        if (!v4)
          goto LABEL_6;
      }
      v7 = 0;
      v8 = 0;
      v15 = 0;
      v9 = a2 + 12;
      v14 = 0;
LABEL_9:
      v10 = (uint64_t)v4 + 2 * v7 + 105;
      do
      {
        if (v9[v7] == 1)
        {
          v9[v7] = 4;
          *(_WORD *)(v10 - 1) = 0;
          *((_BYTE *)v4 + v7 + 110) = 0;
          v8 = 1;
          *((_BYTE *)&v14 + v7) = 1;
          if (v7++ != 2)
            goto LABEL_9;
          goto LABEL_17;
        }
        ++v7;
        v10 += 2;
      }
      while (v7 != 3);
      if ((v8 & 1) == 0)
        goto LABEL_21;
LABEL_17:
      v12 = 0;
      v13 = v4[2];
      do
      {
        if (*((_BYTE *)&v14 + v12) == 1)
          sub_23918E4C4(a1, v13, v12, a3);
        ++v12;
      }
      while (v12 != 3);
LABEL_21:
      a2[6] = 2;
      sub_239194050((uint64_t)a2);
    }
    else
    {
LABEL_6:
      sub_2391BCBBC(4003, "lpp_transaction.c");
    }
  }
  else
  {
    sub_2391BCBBC(4012, "lpp_transaction.c");
  }
}

void sub_239190178(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v8;

  v6 = *(_DWORD *)(a2 + 24);
  if (v6 != 2)
  {
    if (v6 != 1)
    {
      *(_DWORD *)(a2 + 24) = 2;
      sub_2391976A8(a2, v6, 2);
      return;
    }
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(a2 + 864);
    if (v7)
    {
      v7(a1, a2, a3, a4);
      *(_QWORD *)(a2 + 864) = 0;
    }
  }
  *(_DWORD *)(a2 + 24) = 2;
  sub_2391976A8(a2, v6, 2);
  v8 = **(_QWORD **)(a1 + 72);
  if (v8)
  {
    while (*(_DWORD *)(v8 + 16) != *(_DWORD *)(a2 + 28) || *(_DWORD *)(v8 + 20) != *(_DWORD *)(a2 + 32))
    {
      v8 = *(_QWORD *)v8;
      if (!v8)
        goto LABEL_9;
    }
    sub_239198D84(a1, v8, (unsigned __int8 *)(a2 + 16));
  }
  else
  {
LABEL_9:
    sub_2391BCBBC(1515, "lpp_transaction.c");
  }
}

uint64_t sub_239190274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 *v4;
  int v7;
  uint64_t *v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  uint64_t *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _WORD *v22;
  uint64_t *v23;
  BOOL v24;
  int v25;
  char *v26;
  _OWORD v27[3];

  if (!a2)
  {
    v11 = 1573;
    goto LABEL_8;
  }
  if (!a3 || (v4 = *(unsigned __int8 **)(a3 + 16)) == 0)
  {
    v11 = 1579;
LABEL_8:
    sub_2391BCBBC(v11, "lpp_transaction.c");
    return 0;
  }
  v7 = 0;
  v8 = (uint64_t *)(v4 + 24);
  v9 = 8;
  v10 = 0;
  switch(*((_DWORD *)v4 + 6))
  {
    case 0:
      v7 = 0;
      v9 = 0;
      goto LABEL_11;
    case 1:
    case 2:
    case 5:
      break;
    case 3:
      v7 = 0;
      v10 = 1;
      v9 = 1;
      break;
    case 4:
      v9 = 2;
      v7 = 1;
LABEL_11:
      v10 = 1;
      break;
    case 6:
      v7 = 0;
      v10 = 0;
      v9 = 4;
      break;
    case 7:
      v7 = 0;
      v10 = 0;
      v9 = 3;
      break;
    default:
      v10 = 0;
      break;
  }
  v13 = **(uint64_t ***)(a2 + 40);
  if (v13)
  {
    v14 = **(char ***)(a2 + 40);
    while (v14[16] != *v4 || v14[17] != v4[1])
    {
      v14 = *(char **)v14;
      if (!v14)
      {
        v15 = *v4;
        while (1)
        {
          if (*((unsigned __int8 *)v13 + 16) == v15)
          {
            v16 = v10 ? dword_2391CBB1C[v9] : 6;
            if (*((_DWORD *)v13 + 5) == v16 && *((_DWORD *)v13 + 6) == 2)
              break;
          }
          v13 = (uint64_t *)*v13;
          if (!v13)
            goto LABEL_28;
        }
        v14 = (char *)v13;
        goto LABEL_56;
      }
    }
    if (*((_DWORD *)v14 + 6) != 2)
      goto LABEL_58;
LABEL_56:
    sub_23919064C(a1, (uint64_t)v14);
    if (!v7)
      goto LABEL_57;
    goto LABEL_29;
  }
LABEL_28:
  if (v7)
  {
LABEL_29:
    if (*(_DWORD *)(a2 + 16) != 1)
    {
      v17 = *(uint64_t **)(a2 + 40);
      v18 = *v17;
      if (*v17)
      {
        v19 = 0;
        v20 = *v17;
        do
        {
          if (*(_DWORD *)(v20 + 20) == 4 && *(_DWORD *)(v20 + 24) == 1)
            ++v19;
          v20 = *(_QWORD *)v20;
        }
        while (v20);
        if (v19)
        {
          do
          {
            if (*(_DWORD *)(v18 + 20) == 4 && *(_DWORD *)(v18 + 24) == 1)
            {
              v21 = *(_QWORD *)v18;
              v22 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
              bzero(v22, 0xA28uLL);
              v22[1] = 257;
              *v22 = *(_WORD *)(v18 + 16);
              *((_BYTE *)v22 + 2592) = 1;
              *((_DWORD *)v22 + 6) = 5;
              *((_BYTE *)v22 + 9) = 1;
              *((_BYTE *)v22 + 6) = 1;
              *((_DWORD *)v22 + 8) = 0;
              *((_DWORD *)v22 + 10) = 0;
              *((_BYTE *)v22 + 144) = 1;
              *(_WORD *)((char *)v22 + 97) = 256;
              v27[0] = 0u;
              v27[2] = 0u;
              v27[1] = (unint64_t)v22;
              v23 = **(uint64_t ***)(a1 + 72);
              if (v23)
              {
                while (*((_DWORD *)v23 + 4) != *(_DWORD *)(v18 + 28) || *((_DWORD *)v23 + 5) != *(_DWORD *)(v18 + 32))
                {
                  v23 = (uint64_t *)*v23;
                  if (!v23)
                    goto LABEL_46;
                }
                ((void (*)(uint64_t))v23[7])(a1);
              }
LABEL_46:
              sub_23919064C(a1, v18);
              --v19;
            }
            else
            {
              v21 = *(_QWORD *)v18;
            }
            if (v21)
              v24 = v19 == 0;
            else
              v24 = 1;
            v18 = v21;
          }
          while (!v24);
        }
      }
    }
  }
LABEL_57:
  v14 = sub_23918FDF0(a2, *(__int16 **)(a3 + 16), v9);
  if (v14)
  {
LABEL_58:
    v25 = *((_DWORD *)v14 + 5);
    if (v25)
    {
      if (!*(_BYTE *)(a2 + 113) && *(_DWORD *)(a2 + 16) != 1)
      {
        LOWORD(v27[0]) = 1;
        v26 = sub_23918FDF0(a2, (__int16 *)v27, 5);
        if (v26)
        {
          sub_2391906D8(a1, (uint64_t)v26, 5u, 0);
          *(_BYTE *)(a2 + 113) = 1;
        }
        v25 = *((_DWORD *)v14 + 5);
      }
      if (v25 == 3)
      {
        v14[40] = *(_BYTE *)(*(_QWORD *)(a3 + 16) + 3);
      }
      else if (v25 == 2)
      {
        v14[41] = *(_BYTE *)(*(_QWORD *)(a3 + 16) + 3);
      }
    }
    else
    {
      *(_BYTE *)(a2 + 113) = 1;
    }
    sub_2391906D8(a1, (uint64_t)v14, v9, v8);
  }
  return 5;
}

void sub_23919064C(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;

  if (a2)
  {
    v3 = **(uint64_t ***)(a1 + 72);
    if (v3)
    {
      while (*((_DWORD *)v3 + 4) != *(_DWORD *)(a2 + 28) || *((_DWORD *)v3 + 5) != *(_DWORD *)(a2 + 32))
      {
        v3 = (uint64_t *)*v3;
        if (!v3)
          goto LABEL_6;
      }
      sub_239190178();
      sub_239199144((_QWORD *)v3[5], (_QWORD *)a2);
    }
    else
    {
LABEL_6:
      sub_239190178();
    }
    free((void *)a2);
  }
}

void sub_2391906D8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t *a4)
{
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  _WORD *v15;
  NSObject *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  void **v21;
  int v22;
  uint8_t v23[16];
  uint8_t buf[16];
  _OWORD v25[17];
  uint64_t v26;

  v8 = qword_2542CF610;
  if (!os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    if (a2)
      goto LABEL_3;
LABEL_37:
    v11 = 1729;
    goto LABEL_38;
  }
  *(_WORD *)buf = 0;
  _os_log_debug_impl(&dword_2390FD000, v8, OS_LOG_TYPE_DEBUG, "#posp,#lpp,entered lpp_transaction_act", buf, 2u);
  if (!a2)
    goto LABEL_37;
LABEL_3:
  v26 = 0;
  *(_OWORD *)buf = 0u;
  memset(v25, 0, sizeof(v25));
  v10 = *(unsigned int *)(a2 + 20);
  if ((_DWORD)v10 == 6)
  {
    v11 = 1740;
LABEL_38:
    sub_2391BCBBC(v11, "lpp_transaction.c");
    return;
  }
  v12 = *(unsigned int *)(a2 + 24);
  v13 = *((_DWORD *)*(&off_250A73A80 + v10) + 8 * v12 + a3);
  if (v13 == 2)
  {
    sub_2391BCBBC(1770, "lpp_transaction.c");
    goto LABEL_14;
  }
  if (v13 == 1)
  {
    v14 = 1;
    sub_239190178(a1, a2, 1, 1u);
    v15 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
    bzero(v15, 0xA28uLL);
    *((_QWORD *)&v25[0] + 1) = v15;
    *((_BYTE *)v15 + 2) = 1;
    *v15 = *(_WORD *)(a2 + 16);
    *((_BYTE *)v15 + 9) = 0;
    *((_BYTE *)v15 + 3) = 0;
    *((_BYTE *)v15 + 2592) = 1;
    *((_DWORD *)v15 + 4) = 0;
    *((_DWORD *)v15 + 6) = 7;
    *((_DWORD *)v15 + 8) = 0;
    v15[20] = 256;
    buf[0] = 1;
    goto LABEL_16;
  }
  if (v13)
    goto LABEL_14;
  if (!(_DWORD)v12)
    *(_DWORD *)(a2 + 24) = 1;
  if ((a3 & 0xF8) != 0)
  {
LABEL_14:
    v14 = 0;
    goto LABEL_16;
  }
  switch(a3)
  {
    case 0u:
      v14 = 1;
      buf[0] = 1;
      sub_239190AC0((_BYTE *)a1, a2, (uint64_t)a4, (uint64_t)&buf[8]);
      break;
    case 1u:
      buf[0] = 1;
      sub_239192414(a1, a2, (uint64_t)a4);
      goto LABEL_14;
    case 2u:
      buf[0] = 1;
      v22 = sub_239192FA8(a1, a2, (uint64_t)a4, (uint64_t)&buf[8]);
      goto LABEL_46;
    case 3u:
    case 4u:
      sub_239190178(a1, a2, 1, 2u);
      goto LABEL_14;
    case 5u:
      v14 = 1;
      buf[0] = 1;
      sub_239191598(a1, a2, v9, (uint64_t)&buf[8]);
      break;
    case 6u:
      v14 = 1;
      buf[0] = 1;
      sub_239191718(a1, a2, a4, (uint64_t)&buf[8]);
      break;
    case 7u:
      v22 = sub_239194184(a1, a2, (uint64_t)a4, buf);
LABEL_46:
      v14 = v22;
      break;
    default:
      goto LABEL_14;
  }
LABEL_16:
  v16 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v23 = 0;
    _os_log_debug_impl(&dword_2390FD000, v16, OS_LOG_TYPE_DEBUG, "#posp,#lpp,calling lpp_mon_transaction", v23, 2u);
  }
  sub_2391976A8(a2, v12, *(_DWORD *)(a2 + 24));
  v17 = buf[0];
  if (v14 == 1)
  {
    if (buf[0])
    {
      v18 = 0;
      do
      {
        v19 = **(uint64_t ***)(a1 + 72);
        if (v19)
        {
          while (*((_DWORD *)v19 + 4) != *(_DWORD *)(a2 + 28) || *((_DWORD *)v19 + 5) != *(_DWORD *)(a2 + 32))
          {
            v19 = (uint64_t *)*v19;
            if (!v19)
              goto LABEL_27;
          }
          ((void (*)(uint64_t))v19[7])(a1);
          LODWORD(v17) = buf[0];
        }
LABEL_27:
        ++v18;
      }
      while (v18 < v17);
    }
  }
  else
  {
    if (buf[0])
    {
      v20 = 0;
      v21 = (void **)v25 + 1;
      do
      {
        if (*v21)
        {
          free(*v21);
          *v21 = 0;
        }
        ++v20;
        v21 += 6;
      }
      while (v20 < v17);
    }
    if (*(_DWORD *)(a2 + 24) == 2)
      sub_23919064C(a1, a2);
  }
}

void sub_239190AC0(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v8 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
  bzero(v8, 0xA28uLL);
  *(_QWORD *)(a4 + 16) = v8;
  *((_BYTE *)v8 + 2592) = 1;
  *((_DWORD *)v8 + 6) = 1;
  v9 = *(_QWORD *)(a4 + 16);
  *(_BYTE *)(v9 + 2) = 1;
  *(_WORD *)v9 = *(_WORD *)(a2 + 16);
  v10 = *(_QWORD *)(a4 + 16);
  *(_BYTE *)(v10 + 3) = 1;
  *(_BYTE *)(v10 + 6) = 1;
  *(_WORD *)(v10 + 8) = 256;
  if (*(_DWORD *)(a3 + 8))
  {
    *(_DWORD *)(v10 + 32) = 1;
  }
  else
  {
    *(_DWORD *)(v10 + 32) = 0;
    if (*(_DWORD *)(a3 + 16))
    {
      *(_DWORD *)(v10 + 40) = 1;
    }
    else
    {
      *(_DWORD *)(v10 + 40) = 0;
      *(_BYTE *)(v10 + 80) = 0;
      if ((a1[8] || a1[10] || a1[46]) && *(_BYTE *)(a3 + 52) == 1)
      {
        *(_BYTE *)(v10 + 320) = 1;
        *(_BYTE *)(v10 + 248) = *(_BYTE *)(a3 + 50);
        *(_BYTE *)(v10 + 112) = *(_BYTE *)(a3 + 49);
        if ((((a1[11] | a1[9]) | a1[47]) & 6) != 0 && *(_BYTE *)(a3 + 51) == 1)
        {
          *(_BYTE *)(v10 + 260) = 1;
          *(_BYTE *)(v10 + 265) = 1;
        }
        else
        {
          *(_BYTE *)(v10 + 260) = 0;
          *(_BYTE *)(v10 + 265) = 0;
        }
      }
      else
      {
        *(_BYTE *)(v10 + 320) = 0;
      }
      if (a1[44] != 1 || (v11 = *(unsigned __int8 *)(a3 + 68), v11 != 1))
        LOBYTE(v11) = 0;
      *(_BYTE *)(v10 + 472) = v11;
      if (a1[61] != 1 || (v12 = *(unsigned __int8 *)(a3 + 136), v12 != 1))
        LOBYTE(v12) = 0;
      *(_BYTE *)(v10 + 832) = v12;
      *(_BYTE *)(v10 + 504) = 0;
      *(_BYTE *)(v10 + 1032) = 0;
      *(_BYTE *)(v10 + 1224) = 0;
      *(_BYTE *)(v10 + 1400) = 0;
      *(_BYTE *)(v10 + 1464) = 0;
      sub_239190C74((uint64_t)a1, v10 + 48);
    }
  }
  sub_2391976A8(a2, *(_DWORD *)(a2 + 24), 2);
  *(_DWORD *)(a2 + 24) = 2;
}

void sub_239190C74(uint64_t a1, uint64_t a2)
{
  _BOOL4 v4;
  int v5;
  uint64_t v6;
  char *v8;
  uint64_t v9;
  _OWORD *v10;
  int v11;
  unsigned int v12;
  size_t v13;
  _BYTE *v14;
  char v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _BYTE *v19;
  _BYTE *v20;
  char v21;
  __int16 v22;
  _BYTE *v23;
  _BYTE *v24;
  __int16 v25;
  _BYTE *v26;
  _BYTE *v27;
  __int16 v28;
  int v29;
  _BYTE *v30;
  _BYTE *v31;
  __int16 v32;
  _WORD *v33;
  _WORD *v34;
  char v35;
  __int16 v36;
  char *v37;
  _BYTE *v38;
  char v39;
  char v40;
  int v41;
  unsigned int v42;
  size_t v43;

  if (*(_BYTE *)(a2 + 272) == 1)
  {
    v4 = *(unsigned __int8 *)(a1 + 8) == 1;
    if (*(_BYTE *)(a1 + 8) == 1)
      v5 = 2;
    else
      v5 = 1;
    if (*(_BYTE *)(a1 + 10) == 1)
      v4 = v5;
    if (*(_BYTE *)(a1 + 46) == 1)
      v6 = (v4 + 1);
    else
      v6 = v4;
    if (*(_BYTE *)(a2 + 64) == 1 && v6 != 0)
    {
      *(_DWORD *)(a2 + 56) = v6;
      *(_DWORD *)(a2 + 60) = 1;
      v8 = (char *)malloc_type_calloc(1uLL, 0xA0uLL, 0x86CB5109uLL);
      *(_OWORD *)(v8 + 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *(_OWORD *)(v8 + 40) = 0u;
      *(_OWORD *)(v8 + 56) = 0u;
      *(_OWORD *)(v8 + 72) = 0u;
      *(_OWORD *)(v8 + 88) = 0u;
      *(_OWORD *)(v8 + 104) = 0u;
      *(_OWORD *)(v8 + 120) = 0u;
      *(_OWORD *)(v8 + 136) = 0u;
      *((_QWORD *)v8 + 19) = 0;
      *(_QWORD *)v8 = 0;
      *(_QWORD *)(a2 + 40) = v8;
      *(_QWORD *)(a2 + 48) = v8;
      if (v6 >= 2u)
      {
        v9 = v6 - 1;
        do
        {
          v10 = malloc_type_calloc(1uLL, 0xA0uLL, 0x86CB5109uLL);
          *v10 = 0u;
          v10[1] = 0u;
          v10[2] = 0u;
          v10[3] = 0u;
          v10[4] = 0u;
          v10[5] = 0u;
          v10[6] = 0u;
          v10[7] = 0u;
          v10[8] = 0u;
          v10[9] = 0u;
          **(_QWORD **)(a2 + 48) = v10;
          *(_QWORD *)(a2 + 48) = v10;
          --v9;
        }
        while (v9);
        v8 = *(char **)(a2 + 40);
      }
      if (*(_BYTE *)(a1 + 8) == 1)
      {
        v8[8] = 0;
        v8[32] = 0;
        sub_2391991A8((uint64_t)(v8 + 40), 3uLL, *(unsigned __int8 *)(a1 + 9));
        sub_2391991A8((uint64_t)(v8 + 56), 8uLL, 0x80u);
        *(_WORD *)(v8 + 129) = 0;
        v8 = *(char **)v8;
      }
      if (*(_BYTE *)(a1 + 10) == 1)
      {
        v8[8] = 4;
        v8[32] = 0;
        sub_2391991A8((uint64_t)(v8 + 40), 3uLL, *(unsigned __int8 *)(a1 + 11));
        sub_2391991A8((uint64_t)(v8 + 56), 8uLL, 0x80u);
        *(_WORD *)(v8 + 129) = 0;
        v8 = *(char **)v8;
      }
      if (*(_BYTE *)(a1 + 46) == 1)
      {
        v8[8] = 5;
        v8[32] = 0;
        sub_2391991A8((uint64_t)(v8 + 40), 3uLL, *(unsigned __int8 *)(a1 + 47));
        sub_2391991A8((uint64_t)(v8 + 56), 8uLL, 0x80u);
        *(_WORD *)(v8 + 129) = 0;
      }
    }
    if (*(_BYTE *)(a2 + 200) == 1)
    {
      v11 = *(_BYTE *)(a1 + 50) & 1;
      *(_BYTE *)(a2 + 112) = v11;
      v12 = *(unsigned __int8 *)(a1 + 8) == 1;
      if (*(_BYTE *)(a1 + 10) == 1)
        v12 = 5;
      if (*(_BYTE *)(a1 + 46) == 1)
        v13 = 6;
      else
        v13 = v12;
      if ((_DWORD)v13 && (_BYTE)v6)
      {
        if (v11)
        {
          *(_DWORD *)(a2 + 72) = v13;
          *(_DWORD *)(a2 + 76) = 1;
          v14 = malloc_type_calloc(1uLL, v13, 0x86CB5109uLL);
          bzero(v14, v13);
          *(_QWORD *)(a2 + 80) = v14;
          if (*(_BYTE *)(a1 + 8) == 1)
            *v14 = 1;
          if (*(_BYTE *)(a1 + 10) == 1)
            *(_BYTE *)(*(_QWORD *)(a2 + 80) + 4) = 1;
          if (*(_BYTE *)(a1 + 46) == 1)
            *(_BYTE *)(*(_QWORD *)(a2 + 80) + 5) = 1;
          *(_BYTE *)(a2 + 104) = 0;
        }
        else
        {
          *(_QWORD *)(a2 + 104) = 0;
          *(_OWORD *)(a2 + 72) = 0u;
          *(_OWORD *)(a2 + 88) = 0u;
        }
        v15 = *(_BYTE *)(a1 + 50);
        *(_BYTE *)(a2 + 120) = (v15 & 2) != 0;
        if ((v15 & 4) != 0)
        {
          *(_BYTE *)(a2 + 144) = 1;
          sub_2391991A8(a2 + 128, 1uLL, 1u);
        }
        else
        {
          *(_QWORD *)(a2 + 128) = 0;
          *(_QWORD *)(a2 + 136) = 0;
          *(_BYTE *)(a2 + 144) = 0;
        }
        *(_BYTE *)(a2 + 152) = 0;
        *(_DWORD *)(a2 + 192) = v6;
        *(_DWORD *)(a2 + 196) = 1;
        v16 = (char *)malloc_type_calloc(1uLL, 0x270uLL, 0x86CB5109uLL);
        bzero(v16 + 8, 0x268uLL);
        *(_QWORD *)v16 = 0;
        *(_QWORD *)(a2 + 176) = v16;
        *(_QWORD *)(a2 + 184) = v16;
        if (v6 >= 2u)
        {
          v17 = v6 - 1;
          do
          {
            v18 = malloc_type_calloc(1uLL, 0x270uLL, 0x86CB5109uLL);
            bzero(v18, 0x270uLL);
            **(_QWORD **)(a2 + 184) = v18;
            *(_QWORD *)(a2 + 184) = v18;
            --v17;
          }
          while (v17);
          v16 = *(char **)(a2 + 176);
        }
        if (*(_BYTE *)(a1 + 8) == 1)
        {
          v16[8] = 0;
          v16[10] = 0;
          v16[16] = 0;
          v16[72] = 0;
          if ((*(_BYTE *)(a1 + 52) & 1) != 0)
          {
            v16[128] = 1;
            v16[96] = 1;
            v19 = malloc_type_calloc(1uLL, 2uLL, 0x86CB5109uLL);
            *(_WORD *)v19 = 0;
            *((_QWORD *)v16 + 11) = v19;
            *((_QWORD *)v16 + 10) = 0x100000002;
            v19[1] |= 1u;
            v16[120] = 1;
            v20 = malloc_type_calloc(1uLL, 2uLL, 0x86CB5109uLL);
            *(_WORD *)v20 = 0;
            *((_QWORD *)v16 + 14) = v20;
            *((_QWORD *)v16 + 13) = 0x100000002;
            v20[1] |= 1u;
          }
          else
          {
            v16[128] = 0;
            *((_OWORD *)v16 + 6) = 0u;
            *((_OWORD *)v16 + 7) = 0u;
            *((_OWORD *)v16 + 5) = 0u;
          }
          v21 = 0;
          v16[144] = 0;
          v22 = *(_WORD *)(a1 + 52);
          if ((*(_BYTE *)(a1 + 9) & 1) != 0 && (v22 & 4) != 0)
          {
            v21 = 1;
            v16[146] = 1;
            v16[148] = 1;
          }
          v16[149] = v21;
          if ((v22 & 8) != 0)
          {
            v16[176] = 1;
            v16[168] = 1;
            v23 = malloc_type_calloc(1uLL, 2uLL, 0x86CB5109uLL);
            *(_WORD *)v23 = 0;
            *((_QWORD *)v16 + 20) = v23;
            *((_QWORD *)v16 + 19) = 0x100000002;
            v23[1] |= 1u;
          }
          else
          {
            *((_QWORD *)v16 + 19) = 0;
            *((_QWORD *)v16 + 20) = 0;
            v16[176] = 0;
            *((_QWORD *)v16 + 21) = 0;
          }
          if ((*(_WORD *)(a1 + 52) & 0x10) != 0)
          {
            v16[208] = 1;
            v16[200] = 1;
            v24 = malloc_type_calloc(1uLL, 1uLL, 0x86CB5109uLL);
            *v24 = 0;
            *((_QWORD *)v16 + 24) = v24;
            *((_QWORD *)v16 + 23) = 0x100000001;
            *v24 |= 1u;
          }
          else
          {
            *((_QWORD *)v16 + 23) = 0;
            *((_QWORD *)v16 + 24) = 0;
            v16[208] = 0;
            *((_QWORD *)v16 + 25) = 0;
          }
          v16[136] = (*(_BYTE *)(a1 + 52) & 2) != 0;
          v16[216] = 0;
          v16 = *(char **)v16;
        }
        if (*(_BYTE *)(a1 + 10) == 1)
        {
          v16[8] = 4;
          v16[10] = 0;
          v25 = *(_WORD *)(a1 + 54);
          v16[16] = (v25 & 0x20) != 0;
          v16[72] = 0;
          if ((v25 & 1) != 0)
          {
            v16[128] = 1;
            v16[96] = 1;
            v26 = malloc_type_calloc(1uLL, 4uLL, 0x86CB5109uLL);
            *(_DWORD *)v26 = 0;
            *((_QWORD *)v16 + 11) = v26;
            *((_QWORD *)v16 + 10) = 0x100000004;
            v26[3] |= 1u;
            v16[120] = 1;
            v27 = malloc_type_calloc(1uLL, 4uLL, 0x86CB5109uLL);
            *(_DWORD *)v27 = 0;
            *((_QWORD *)v16 + 14) = v27;
            *((_QWORD *)v16 + 13) = 0x100000004;
            v27[3] |= 1u;
          }
          else
          {
            v16[128] = 0;
            *((_OWORD *)v16 + 6) = 0u;
            *((_OWORD *)v16 + 7) = 0u;
            *((_OWORD *)v16 + 5) = 0u;
          }
          v28 = *(_WORD *)(a1 + 54);
          v16[136] = (v28 & 2) != 0;
          v16[144] = (v28 & 0x40) != 0;
          v29 = *(unsigned __int8 *)(a1 + 11) & ((v28 & 4) >> 2);
          v16[149] = *(_BYTE *)(a1 + 11) & ((v28 & 4) >> 2);
          v16[148] = v29;
          v16[146] = v29;
          if ((v28 & 8) != 0)
          {
            v16[176] = 1;
            v16[168] = 1;
            v30 = malloc_type_calloc(1uLL, 5uLL, 0x86CB5109uLL);
            *(_DWORD *)v30 = 0;
            v30[4] = 0;
            *((_QWORD *)v16 + 20) = v30;
            *((_QWORD *)v16 + 19) = 0x100000005;
            v30[4] |= 1u;
          }
          else
          {
            *((_QWORD *)v16 + 19) = 0;
            *((_QWORD *)v16 + 20) = 0;
            v16[176] = 0;
            *((_QWORD *)v16 + 21) = 0;
          }
          if ((*(_WORD *)(a1 + 54) & 0x10) != 0)
          {
            v16[208] = 1;
            v16[200] = 1;
            v31 = malloc_type_calloc(1uLL, 3uLL, 0x86CB5109uLL);
            *(_WORD *)v31 = 0;
            v31[2] = 0;
            *((_QWORD *)v16 + 24) = v31;
            *((_QWORD *)v16 + 23) = 0x100000003;
            v31[2] |= 1u;
          }
          else
          {
            *((_QWORD *)v16 + 23) = 0;
            *((_QWORD *)v16 + 24) = 0;
            v16[208] = 0;
            *((_QWORD *)v16 + 25) = 0;
          }
          v16[216] = (*(_WORD *)(a1 + 54) & 0x80) != 0;
          v16 = *(char **)v16;
        }
        if (*(_BYTE *)(a1 + 46) == 1)
        {
          v16[8] = 5;
          v16[10] = 0;
          v32 = *(_WORD *)(a1 + 56);
          v16[16] = (v32 & 0x20) != 0;
          v16[72] = 0;
          if ((v32 & 1) != 0)
          {
            v16[128] = 1;
            v16[96] = 1;
            v33 = malloc_type_calloc(1uLL, 6uLL, 0x86CB5109uLL);
            *(_DWORD *)v33 = 0;
            v33[2] = 0;
            *((_QWORD *)v16 + 11) = v33;
            *((_QWORD *)v16 + 10) = 0x100000006;
            *((_BYTE *)v33 + 5) |= 1u;
            v16[120] = 1;
            v34 = malloc_type_calloc(1uLL, 6uLL, 0x86CB5109uLL);
            *(_DWORD *)v34 = 0;
            v34[2] = 0;
            *((_QWORD *)v16 + 14) = v34;
            *((_QWORD *)v16 + 13) = 0x100000006;
            *((_BYTE *)v34 + 5) |= 1u;
          }
          else
          {
            v16[128] = 0;
            *((_OWORD *)v16 + 6) = 0u;
            *((_OWORD *)v16 + 7) = 0u;
            *((_OWORD *)v16 + 5) = 0u;
          }
          v35 = 0;
          v36 = *(_WORD *)(a1 + 56);
          v16[136] = (v36 & 2) != 0;
          v16[144] = (v36 & 0x40) != 0;
          if ((v36 & 4) != 0 && (*(_BYTE *)(a1 + 47) & 1) != 0)
          {
            v35 = 1;
            v16[146] = 1;
            v16[148] = 1;
          }
          v16[149] = v35;
          if ((v36 & 8) != 0)
          {
            v16[176] = 1;
            v16[168] = 1;
            v37 = (char *)malloc_type_calloc(1uLL, 7uLL, 0x86CB5109uLL);
            *(_DWORD *)v37 = 0;
            *(_DWORD *)(v37 + 3) = 0;
            *((_QWORD *)v16 + 20) = v37;
            *((_QWORD *)v16 + 19) = 0x100000007;
            v37[6] |= 1u;
          }
          else
          {
            *((_QWORD *)v16 + 19) = 0;
            *((_QWORD *)v16 + 20) = 0;
            v16[176] = 0;
            *((_QWORD *)v16 + 21) = 0;
          }
          if ((*(_WORD *)(a1 + 56) & 0x10) != 0)
          {
            v16[208] = 1;
            v16[200] = 1;
            v38 = malloc_type_calloc(1uLL, 5uLL, 0x86CB5109uLL);
            *(_DWORD *)v38 = 0;
            v38[4] = 0;
            *((_QWORD *)v16 + 24) = v38;
            *((_QWORD *)v16 + 23) = 0x100000005;
            v38[4] |= 1u;
          }
          else
          {
            *((_QWORD *)v16 + 23) = 0;
            *((_QWORD *)v16 + 24) = 0;
            v16[208] = 0;
            *((_QWORD *)v16 + 25) = 0;
          }
          v16[216] = 0;
          v16[272] = (*(_WORD *)(a1 + 56) & 0x80) != 0;
        }
        if (*(_BYTE *)(a2 + 212) == 1)
        {
          v39 = *(_BYTE *)(a1 + 59);
          *(_BYTE *)(a2 + 201) = v39 & 1;
          *(_BYTE *)(a2 + 202) = (v39 & 2) != 0;
          *(_BYTE *)(a2 + 203) = (v39 & 4) != 0;
          *(_BYTE *)(a2 + 204) = 0;
          *(_BYTE *)(a2 + 205) = (v39 & 0x10) != 0;
          *(_WORD *)(a2 + 206) = (v39 & 0x20) != 0;
        }
        if (*(_BYTE *)(a2 + 217) == 1)
        {
          v40 = *(_BYTE *)(a1 + 58);
          *(_BYTE *)(a2 + 213) = v40 & 1;
          *(_BYTE *)(a2 + 214) = (v40 & 2) != 0;
          *(_BYTE *)(a2 + 215) = (v40 & 4) != 0;
          *(_BYTE *)(a2 + 216) = (v40 & 8) != 0;
        }
      }
    }
  }
  if (*(_BYTE *)(a2 + 424) == 1)
  {
    sub_2391991A8(a2 + 400, 3uLL, 7u);
    *(_WORD *)(a2 + 416) = 256;
  }
  if (*(_BYTE *)(a2 + 784) == 1)
  {
    if (*(_BYTE *)(a1 + 64))
      v41 = 3;
    else
      v41 = 0;
    if (*(_BYTE *)(a1 + 65))
      v42 = v41 | 0xC;
    else
      v42 = v41;
    if (*(_BYTE *)(a1 + 65))
      v43 = 4;
    else
      v43 = 2 * (*(_BYTE *)(a1 + 64) != 0);
    sub_2391991A8(a2 + 760, v43, v42);
    *(_BYTE *)(a2 + 777) = 0;
    *(_BYTE *)(a2 + 779) = 0;
  }
}

uint64_t sub_239191598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;

  v7 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
  bzero(v7, 0xA28uLL);
  *(_QWORD *)(a4 + 16) = v7;
  *((_BYTE *)v7 + 2592) = 1;
  *((_DWORD *)v7 + 6) = 1;
  v8 = *(_QWORD *)(a4 + 16);
  *(_BYTE *)(v8 + 2) = 1;
  *(_WORD *)v8 = *(_WORD *)(a2 + 16);
  v9 = *(_QWORD *)(a4 + 16);
  *(_BYTE *)(v9 + 3) = 1;
  *(_BYTE *)(v9 + 6) = 1;
  *(_WORD *)(v9 + 8) = 256;
  *(_DWORD *)(v9 + 16) = 0;
  *(_DWORD *)(v9 + 24) = 1;
  *(_DWORD *)(v9 + 32) = 0;
  *(_DWORD *)(v9 + 40) = 0;
  *(_BYTE *)(v9 + 80) = 0;
  if (*(_BYTE *)(a1 + 8) || *(_BYTE *)(a1 + 10) || *(_BYTE *)(a1 + 46))
  {
    *(_BYTE *)(v9 + 320) = 1;
    *(_BYTE *)(v9 + 248) = 1;
    *(_BYTE *)(v9 + 112) = 1;
    if ((((*(_BYTE *)(a1 + 11) | *(_BYTE *)(a1 + 9)) | *(_BYTE *)(a1 + 47)) & 6) != 0)
    {
      *(_BYTE *)(v9 + 260) = 1;
      *(_BYTE *)(v9 + 265) = 1;
    }
    else
    {
      *(_BYTE *)(v9 + 260) = 0;
      *(_BYTE *)(v9 + 265) = 0;
    }
  }
  else
  {
    *(_BYTE *)(v9 + 320) = 0;
  }
  v11 = 0;
  if (*(_BYTE *)(a1 + 44) == 1)
  {
    v10 = **(_QWORD **)(a1 + 72);
    if (v10)
    {
      if (*(_DWORD *)(v10 + 16) != 1)
        v11 = 1;
    }
  }
  *(_BYTE *)(v9 + 472) = v11;
  *(_BYTE *)(v9 + 504) = 0;
  *(_BYTE *)(v9 + 832) = *(_BYTE *)(a1 + 61) == 1;
  *(_BYTE *)(v9 + 1032) = 0;
  *(_BYTE *)(v9 + 1224) = 0;
  *(_BYTE *)(v9 + 1400) = 0;
  *(_BYTE *)(v9 + 1464) = 0;
  sub_239190C74(a1, v9 + 48);
  sub_2391976A8(a2, *(_DWORD *)(a2 + 24), 2);
  *(_DWORD *)(a2 + 24) = 2;
  return 1;
}

uint64_t sub_239191718(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  int v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  unint64_t v33;
  _BYTE *v34;
  char v35;
  int v36;
  BOOL v37;
  char v38;
  int v39;
  BOOL v40;
  char v41;
  _BYTE *v42;
  uint64_t v43;
  __int16 v44;
  unsigned __int8 v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v50;
  int v51;
  int v52;
  _BYTE *v53;
  char v54;
  _BOOL4 v55;
  uint64_t v56;
  unsigned int *v57;
  unsigned int v58;
  int v59;
  uint64_t v60;
  int v61;
  unsigned __int8 v62;
  unsigned __int8 v63;
  _QWORD *v64;
  uint64_t v65;
  void *v66;
  uint64_t *v67;
  _BYTE *v68;
  char *v70;
  uint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  _OWORD *v74;
  unint64_t v75;
  char v76;
  __int16 v77;
  char v78;
  char v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int *v83;
  int v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  int v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  int v94;
  unint64_t v95;
  char *v96;
  unint64_t v97;
  _OWORD *v98;
  uint64_t v99;
  unint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  char v103;
  __int16 v104;
  uint64_t v105;
  int v106;
  unsigned __int8 *v107;
  int v108;
  unsigned __int8 *v109;
  int v110;
  _QWORD *v111;
  unint64_t v112;
  unint64_t v113;
  _QWORD *v114;
  uint64_t *v115;
  uint64_t v116;
  char *v117;
  char v118;
  uint64_t v119;
  __int16 v120;
  char v121;
  int v122;
  int v123;
  uint64_t v125;

  v8 = (char *)malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
  bzero(v8, 0xA28uLL);
  *(_QWORD *)(a4 + 16) = v8;
  if (!*(_BYTE *)(a2 + 18))
    goto LABEL_8;
  v9 = **(uint64_t ***)(a1 + 72);
  if (v9)
  {
    while (*((_DWORD *)v9 + 4) != *(_DWORD *)(a2 + 28) || *((_DWORD *)v9 + 5) != *(_DWORD *)(a2 + 32))
    {
      v9 = (uint64_t *)*v9;
      if (!v9)
      {
        sub_2391BCBBC(2233, "lpp_transaction.c");
        if (v8)
          goto LABEL_55;
        return 1;
      }
    }
LABEL_8:
    v8[2592] = 1;
    *((_DWORD *)v8 + 4) = 0;
    *((_DWORD *)v8 + 6) = 2;
    v10 = *(_QWORD *)(a4 + 16);
    *(_BYTE *)(v10 + 2) = 1;
    *(_WORD *)v10 = *(_WORD *)(a2 + 16);
    v11 = *(_QWORD *)(a4 + 16);
    if (!*(_BYTE *)(a2 + 18))
      *(_BYTE *)(v11 + 1) = 0;
    *(_BYTE *)(v11 + 3) = 0;
    *((_DWORD *)v8 + 4) = 0;
    *((_DWORD *)v8 + 6) = 2;
    *((_DWORD *)v8 + 8) = 0;
    *((_DWORD *)v8 + 10) = 0;
    v8[232] = 1;
    if (*(_DWORD *)(a1 + 108) == 4)
    {
      v8[224] = 1;
      *((_QWORD *)v8 + 22) = 0x100000003;
      v12 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *v12 = 0;
      v12[1] = 0;
      *((_QWORD *)v8 + 20) = v12;
      *((_QWORD *)v8 + 21) = v12;
      v13 = 2;
      do
      {
        v14 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
        *v14 = 0;
        v14[1] = 0;
        **((_QWORD **)v8 + 21) = v14;
        *((_QWORD *)v8 + 21) = v14;
        --v13;
      }
      while (v13);
      v15 = *(_DWORD *)(a1 + 84) == 1;
      if (*(_DWORD *)(a1 + 84) == 1)
        v16 = 3;
      else
        v16 = 2;
      *((_DWORD *)v8 + 50) = v16;
      *((_DWORD *)v8 + 51) = 1;
      if (v15)
        v17 = 3;
      else
        v17 = 2;
      v18 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *v18 = 0;
      v18[1] = 0;
      *((_QWORD *)v8 + 23) = v18;
      *((_QWORD *)v8 + 24) = v18;
      v19 = v17 - 1;
      do
      {
        v20 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
        *v20 = 0;
        v20[1] = 0;
        **((_QWORD **)v8 + 24) = v20;
        *((_QWORD *)v8 + 24) = v20;
        --v19;
      }
      while (v19);
      sub_239192384(*(_QWORD *)(a1 + 80), *((_QWORD *)v8 + 20), *((_BYTE **)v8 + 23));
      sub_2391993A8(*(unsigned int *)(a1 + 88), 0x24uLL, (uint64_t)(v8 + 208));
    }
    else
    {
      v8[112] = 1;
      sub_239199308(*(_DWORD *)(a1 + 88), 0x1CuLL, (uint64_t)(v8 + 96));
      *((_QWORD *)v8 + 8) = 0x100000003;
      v21 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *v21 = 0;
      v21[1] = 0;
      *((_QWORD *)v8 + 6) = v21;
      *((_QWORD *)v8 + 7) = v21;
      v22 = 2;
      do
      {
        v23 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
        *v23 = 0;
        v23[1] = 0;
        **((_QWORD **)v8 + 7) = v23;
        *((_QWORD *)v8 + 7) = v23;
        --v22;
      }
      while (v22);
      v24 = *(_DWORD *)(a1 + 84) == 1;
      if (*(_DWORD *)(a1 + 84) == 1)
        v25 = 3;
      else
        v25 = 2;
      *((_DWORD *)v8 + 22) = v25;
      *((_DWORD *)v8 + 23) = 1;
      if (v24)
        v26 = 3;
      else
        v26 = 2;
      v27 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *v27 = 0;
      v27[1] = 0;
      *((_QWORD *)v8 + 9) = v27;
      *((_QWORD *)v8 + 10) = v27;
      v28 = v26 - 1;
      do
      {
        v29 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
        *v29 = 0;
        v29[1] = 0;
        **((_QWORD **)v8 + 10) = v29;
        *((_QWORD *)v8 + 10) = v29;
        --v28;
      }
      while (v28);
      v30 = *(_QWORD *)(a1 + 80);
      v31 = *((_QWORD *)v8 + 6);
      v32 = (_BYTE *)*((_QWORD *)v8 + 9);
      v33 = v30 >> 16;
      *(_BYTE *)(v31 + 8) = (unsigned __int16)v30 / 0x64u;
      v34 = *(_BYTE **)v31;
      v34[8] = (unsigned __int16)v30 % 0x64u / 0xA;
      *(_BYTE *)(*(_QWORD *)v34 + 8) = (unsigned __int16)v30 % 0x64u % 0xA;
      if (HIDWORD(v30) == 1)
      {
        v32[8] = WORD1(v30) / 0x64u;
        LOWORD(v33) = WORD1(v30) % 0x64u;
        v32 = *(_BYTE **)v32;
      }
      v32[8] = (unsigned __int16)v33 / 0xAu;
      *(_BYTE *)(*(_QWORD *)v32 + 8) = (unsigned __int16)v33 % 0xAu;
    }
    if (*a3)
    {
      v35 = *(_BYTE *)(*a3 + 96);
      v36 = *(unsigned __int8 *)(a1 + 10);
      v37 = (v35 & 1) == 0 || *(_BYTE *)(a1 + 8) == 0;
      v38 = v37;
      v39 = *(unsigned __int8 *)(a2 + 40);
      if (!v37)
      {
        v39 |= 1u;
        *(_BYTE *)(a2 + 40) = v39;
      }
      v40 = (v35 & 2) == 0 || v36 == 0;
      v41 = v40;
      if (!v40)
      {
        *(_BYTE *)(a2 + 40) = v39 | 2;
LABEL_56:
        v8[504] = 1;
        if ((v38 & 1) != 0 || (v43 = *a3, v44 = *(_WORD *)(*a3 + 12), (v44 & 0x64) == 0))
        {
          if ((v41 & 1) != 0 || (v43 = *a3, (*(_BYTE *)(*a3 + 64) & 7) == 0))
          {
            v53 = v8 + 432;
LABEL_81:
            *v53 = 0;
            if ((v38 & 1) == 0)
            {
              v60 = *a3;
              v61 = *(unsigned __int16 *)(*a3 + 12);
              if ((v61 & 0x19A) != 0)
              {
                v62 = *(_BYTE *)(v60 + 84);
                goto LABEL_87;
              }
            }
            if ((v41 & 1) == 0)
            {
              v60 = *a3;
              v62 = *(_BYTE *)(*a3 + 84);
              if (v62)
              {
                v61 = *(unsigned __int16 *)(v60 + 12);
LABEL_87:
                v8[464] = 1;
                if (v61)
                  v63 = v62 + 1;
                else
                  v63 = v62;
                if (v63)
                {
                  *((_DWORD *)v8 + 115) = 1;
                  *((_DWORD *)v8 + 114) = v63;
                  v64 = malloc_type_calloc(1uLL, 0x428uLL, 0x86CB5109uLL);
                  bzero(v64 + 1, 0x420uLL);
                  *v64 = 0;
                  *((_QWORD *)v8 + 55) = v64;
                  *((_QWORD *)v8 + 56) = v64;
                  if (v63 != 1)
                  {
                    v65 = v63 - 1;
                    do
                    {
                      v66 = malloc_type_calloc(1uLL, 0x428uLL, 0x86CB5109uLL);
                      bzero(v66, 0x428uLL);
                      **((_QWORD **)v8 + 56) = v66;
                      *((_QWORD *)v8 + 56) = v66;
                      --v65;
                    }
                    while (v65);
                  }
                }
                v67 = (uint64_t *)*((_QWORD *)v8 + 55);
                if (!v61)
                  goto LABEL_120;
                *((_BYTE *)v67 + 8) = 0;
                *((_BYTE *)v67 + 10) = 0;
                *((_BYTE *)v67 + 40) = 0;
                *((_BYTE *)v67 + 96) = 0;
                if ((*(_BYTE *)(v60 + 12) & 8) != 0)
                {
                  *((_BYTE *)v67 + 192) = 1;
                  *((_DWORD *)v67 + 26) = 0;
                  *((_WORD *)v67 + 56) = *(_WORD *)(v60 + 14);
                  *((_BYTE *)v67 + 114) = *(_BYTE *)(v60 + 16);
                  *((_BYTE *)v67 + 115) = *(_BYTE *)(v60 + 18);
                  v68 = v67 + 18;
                  if (*(_BYTE *)(v60 + 17))
                  {
                    *v68 = 1;
                    if (*(_BYTE *)(v60 + 17))
                    {
                      *((_DWORD *)v67 + 35) = 1;
                      *((_DWORD *)v67 + 34) = *(unsigned __int8 *)(v60 + 17);
                      v70 = (char *)malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
                      *(_OWORD *)(v70 + 8) = 0u;
                      *(_OWORD *)(v70 + 24) = 0u;
                      v67[15] = (uint64_t)v70;
                      v71 = v67 + 15;
                      *(_QWORD *)v70 = 0;
                      v67[16] = v67[15];
                      LODWORD(v72) = *(unsigned __int8 *)(v60 + 17);
                      if (v72 >= 2)
                      {
                        v73 = 1;
                        do
                        {
                          v74 = malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
                          *v74 = 0u;
                          v74[1] = 0u;
                          *((_QWORD *)v74 + 4) = 0;
                          *(_QWORD *)v67[16] = v74;
                          v67[16] = *(_QWORD *)v67[16];
                          ++v73;
                          v72 = *(unsigned __int8 *)(v60 + 17);
                        }
                        while (v73 < v72);
                      }
                      if ((_DWORD)v72)
                      {
                        v75 = 0;
                        do
                        {
                          v71 = (uint64_t *)*v71;
                          *((_BYTE *)v71 + 8) = *(_BYTE *)(v60 + v75 + 27);
                          sub_239199444((uint64_t)(v71 + 2), 0xBuLL, *(unsigned __int8 *)(v60 + v75 + 43));
                          *((_DWORD *)v71 + 8) = 16908546;
                          ++v75;
                        }
                        while (v75 < *(unsigned __int8 *)(v60 + 17));
                      }
                    }
                    goto LABEL_111;
                  }
                }
                else
                {
                  v68 = v67 + 24;
                }
                *v68 = 0;
LABEL_111:
                v76 = 0;
                v77 = *(_WORD *)(v60 + 12);
                *((_BYTE *)v67 + 200) = HIBYTE(v77) & 1;
                *((_BYTE *)v67 + 288) = 0;
                if ((v77 & 0x80) != 0)
                {
                  *((_BYTE *)v67 + 289) = 0;
                  v76 = 1;
                }
                *((_BYTE *)v67 + 292) = v76;
                if ((v77 & 1) != 0)
                {
                  *(_WORD *)((char *)v67 + 293) = 258;
                  v78 = 1;
                }
                else
                {
                  v78 = 0;
                }
                *((_BYTE *)v67 + 295) = v78;
                if ((v77 & 2) != 0)
                {
                  *((_WORD *)v67 + 148) = 257;
                  v79 = 1;
                }
                else
                {
                  v79 = 0;
                }
                *((_BYTE *)v67 + 298) = v79;
                *((_BYTE *)v67 + 304) = 0;
                v67 = (uint64_t *)*v67;
LABEL_120:
                if (*(_BYTE *)(v60 + 84))
                {
                  v80 = 0;
                  v81 = 37;
                  v125 = v60;
                  do
                  {
                    v82 = *(_QWORD *)(v60 + 88);
                    v83 = (unsigned int *)(v82 + 136 * v80);
                    *((_BYTE *)v67 + 8) = byte_2391CB8AE[*v83];
                    *((_BYTE *)v67 + 10) = 0;
                    v84 = *((unsigned __int8 *)v83 + 8);
                    if (v84)
                    {
                      *((_BYTE *)v67 + 40) = 1;
                      *((_DWORD *)v67 + 8) = v84;
                      *((_DWORD *)v67 + 9) = 1;
                      v85 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
                      *v85 = 0;
                      v85[1] = 0;
                      v67[2] = (uint64_t)v85;
                      v67[3] = (uint64_t)v85;
                      LODWORD(v86) = *((_DWORD *)v67 + 8);
                      if (v86 >= 2)
                      {
                        v87 = 1;
                        do
                        {
                          v88 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
                          *v88 = 0;
                          v88[1] = 0;
                          *(_QWORD *)v67[3] = v88;
                          v67[3] = (uint64_t)v88;
                          ++v87;
                          v86 = *((int *)v67 + 8);
                        }
                        while (v87 < v86);
                      }
                      if ((int)v86 >= 1)
                      {
                        v89 = 0;
                        v90 = (uint64_t *)v67[2];
                        v91 = *(_QWORD *)(v82 + 136 * v80 + 16);
                        do
                        {
                          *((_WORD *)v90 + 4) = *(_WORD *)(v91 + 2 * v89);
                          v90 = (uint64_t *)*v90;
                          ++v89;
                        }
                        while ((int)v86 > v89);
                      }
                      v82 = *(_QWORD *)(v60 + 88);
                    }
                    if (*(_BYTE *)(v82 + 136 * v80 + 105) == 1)
                    {
                      *((_BYTE *)v67 + 192) = 1;
                      *((_DWORD *)v67 + 26) = 0;
                      v92 = v82 + 136 * v80;
                      *((_WORD *)v67 + 56) = *(_WORD *)(v92 + 112);
                      *((_BYTE *)v67 + 114) = *(_BYTE *)(v92 + 114);
                      *((_BYTE *)v67 + 115) = *(_BYTE *)(v92 + 115);
                      v94 = *(unsigned __int8 *)(v92 + 116);
                      v93 = (_BYTE *)(v92 + 116);
                      if (v94)
                      {
                        *((_BYTE *)v67 + 144) = 1;
                        LODWORD(v95) = *v93;
                        if (*v93)
                        {
                          *((_DWORD *)v67 + 35) = 1;
                          *((_DWORD *)v67 + 34) = *v93;
                          v96 = (char *)malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
                          *(_OWORD *)(v96 + 8) = 0u;
                          *(_OWORD *)(v96 + 24) = 0u;
                          v67[15] = (uint64_t)v96;
                          *(_QWORD *)v96 = 0;
                          v67[16] = v67[15];
                          LODWORD(v95) = *v93;
                          if (v95 >= 2)
                          {
                            v97 = 1;
                            do
                            {
                              v98 = malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
                              *v98 = 0u;
                              v98[1] = 0u;
                              *((_QWORD *)v98 + 4) = 0;
                              *(_QWORD *)v67[16] = v98;
                              v67[16] = *(_QWORD *)v67[16];
                              ++v97;
                              v95 = *v93;
                            }
                            while (v97 < v95);
                          }
                          if ((_DWORD)v95)
                          {
                            v99 = 0;
                            v100 = 0;
                            v101 = (_BYTE *)v67[15];
                            do
                            {
                              v102 = *(_QWORD *)(v82 + 136 * v80 + 120) + v99;
                              v101[8] = *(_BYTE *)v102;
                              sub_239199444((uint64_t)(v101 + 16), 0xBuLL, *(unsigned __int16 *)(v102 + 2));
                              v101[33] = 1;
                              v103 = *((_BYTE *)v67 + 8);
                              if ((v103 & 0xFE) == 4)
                              {
                                v101[32] = v103;
                                v101[34] = v103;
                              }
                              v101[35] = 1;
                              ++v100;
                              v95 = *v93;
                              v99 += 4;
                            }
                            while (v100 < v95);
                            v60 = v125;
                          }
                          else
                          {
                            v60 = v125;
                          }
                        }
                        *((_DWORD *)v67 + 34) = v95;
                        *((_DWORD *)v67 + 35) = 1;
                      }
                      else
                      {
                        *((_BYTE *)v67 + 144) = 0;
                      }
                      v82 = *(_QWORD *)(v60 + 88);
                    }
                    v104 = *(_WORD *)(v82 + 136 * v80 + 4);
                    if ((v104 & 1) != 0)
                      *((_BYTE *)v67 + 200) = 1;
                    if (*(_BYTE *)(v82 + 136 * v80 + 24) == 1)
                    {
                      *((_BYTE *)v67 + 288) = 1;
                      v105 = v82 + 136 * v80;
                      *((_WORD *)v67 + 104) = *(_DWORD *)(v105 + 28);
                      v106 = *(unsigned __int16 *)(v105 + 32);
                      if (v106)
                      {
                        *((_BYTE *)v67 + 212) = 1;
                        *((_WORD *)v67 + 105) = v106;
                      }
                      v107 = (unsigned __int8 *)(v82 + 136 * v80);
                      *((_BYTE *)v67 + 213) = v107[35];
                      sub_2391991A8((uint64_t)(v67 + 27), 8uLL, v107[34]);
                      v110 = v107[36];
                      v109 = v107 + 36;
                      v108 = v110;
                      if (v110)
                      {
                        *((_BYTE *)v67 + 280) = 1;
                        *((_DWORD *)v67 + 69) = 1;
                        *((_DWORD *)v67 + 68) = v108;
                        v111 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
                        *v111 = 0;
                        v111[1] = 0;
                        v67[32] = (uint64_t)v111;
                        v67[33] = (uint64_t)v111;
                        LODWORD(v112) = *v109;
                        if (v112 >= 2)
                        {
                          v113 = 1;
                          do
                          {
                            v114 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
                            *v114 = 0;
                            v114[1] = 0;
                            *(_QWORD *)v67[33] = v114;
                            v67[33] = (uint64_t)v114;
                            ++v113;
                            v112 = *v109;
                          }
                          while (v113 < v112);
                        }
                        if ((_DWORD)v112)
                        {
                          v115 = (uint64_t *)v67[32];
                          v116 = v112;
                          v117 = (char *)(v82 + v81);
                          do
                          {
                            v118 = *v117++;
                            *((_BYTE *)v115 + 8) = v118;
                            v115 = (uint64_t *)*v115;
                            --v116;
                          }
                          while (v116);
                        }
                        *((_DWORD *)v67 + 68) = v112;
                        *((_DWORD *)v67 + 69) = 1;
                      }
                      else
                      {
                        *((_BYTE *)v67 + 280) = 0;
                      }
                      v82 = *(_QWORD *)(v60 + 88);
                      v104 = *(_WORD *)(v82 + 136 * v80 + 4);
                    }
                    if ((v104 & 8) != 0)
                    {
                      *((_BYTE *)v67 + 292) = 1;
                      *((_BYTE *)v67 + 289) = 0;
                    }
                    if (*(_BYTE *)(v82 + 136 * v80 + 104) == 1)
                    {
                      *((_DWORD *)v67 + 75) = 1;
                      *((_BYTE *)v67 + 304) = 1;
                      v82 = *(_QWORD *)(v60 + 88);
                    }
                    v119 = v82 + 136 * v80;
                    v120 = *(_WORD *)(v119 + 4);
                    if (*(_BYTE *)(v119 + 128) == 1)
                    {
                      v121 = *(_WORD *)(v119 + 4);
                      if ((v120 & 0x12) != 0)
                      {
                        v122 = *(unsigned __int8 *)(v82 + 136 * v80 + 132);
                        if ((v122 | 2) == 7)
                        {
                          *((_BYTE *)v67 + 293) = v122;
                          *((_WORD *)v67 + 147) = 257;
                        }
                        v123 = *(unsigned __int8 *)(v82 + 136 * v80 + 131);
                        if (v123 == 5 || v123 == 3)
                        {
                          *((_BYTE *)v67 + 296) = v123;
                          *(_WORD *)((char *)v67 + 297) = 257;
                        }
                      }
                    }
                    else
                    {
                      v121 = *(_WORD *)(v119 + 4);
                    }
                    *((_BYTE *)v67 + 96) = 0;
                    *((_BYTE *)v67 + 360) = (v121 & 0x20) != 0;
                    v67 = (uint64_t *)*v67;
                    ++v80;
                    v81 += 136;
                  }
                  while (v80 < *(unsigned __int8 *)(v60 + 84));
                }
                goto LABEL_99;
              }
            }
            v42 = v8 + 464;
LABEL_98:
            *v42 = 0;
LABEL_99:
            v8[544] = 0;
            v8[576] = 0;
            v8[584] = 0;
            v8[672] = 0;
            return 1;
          }
          LOBYTE(v44) = *(_BYTE *)(v43 + 12);
        }
        v8[432] = 1;
        v8[272] = 0;
        v45 = ((v44 & 0x40) != 0) + *(_BYTE *)(v43 + 65);
        if (v45)
        {
          *((_DWORD *)v8 + 65) = 1;
          *((_DWORD *)v8 + 64) = v45;
          v46 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
          *v46 = 0;
          v46[1] = 0;
          *((_QWORD *)v8 + 30) = v46;
          *((_QWORD *)v8 + 31) = v46;
          if (v45 != 1)
          {
            v47 = 1 - v45;
            do
            {
              v48 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
              *v48 = 0;
              v48[1] = 0;
              **((_QWORD **)v8 + 31) = v48;
              *((_QWORD *)v8 + 31) = v48;
            }
            while (!__CFADD__(v47++, 1));
          }
        }
        v50 = (uint64_t *)*((_QWORD *)v8 + 30);
        v51 = *(unsigned __int16 *)(v43 + 12);
        if ((v51 & 0x40) != 0)
        {
          v8[272] = 1;
          *((_BYTE *)v50 + 8) = 0;
          *((_WORD *)v8 + 132) = 257;
          v8[267] = 0;
          v52 = *(unsigned __int8 *)(v43 + 64);
          if ((v52 & 1) != 0)
          {
            v50 = (uint64_t *)*v50;
            goto LABEL_72;
          }
        }
        else
        {
          v52 = *(unsigned __int8 *)(v43 + 64);
          if ((v52 & 1) != 0)
          {
            v8[272] = 1;
            v8[265] = 0;
LABEL_72:
            v54 = *(_BYTE *)(v43 + 80);
            v8[267] = v54;
            v8[266] = v54;
            v55 = *((_DWORD *)v8 + 64) != 0;
            v56 = *(unsigned __int8 *)(v43 + 65);
            if (*(_BYTE *)(v43 + 65))
            {
              v57 = *(unsigned int **)(v43 + 72);
              do
              {
                v58 = *v57++;
                *((_BYTE *)v50 + 8) = byte_2391CB8AE[v58];
                v50 = (uint64_t *)*v50;
                --v56;
              }
              while (v56);
            }
            *((_DWORD *)v8 + 64) = v55;
          }
        }
        v8[280] = (v51 & 0x20 | v52 & 2) != 0;
        if (((v51 | v52) & 4) != 0)
        {
          v8[328] = 1;
          v8[312] = 0;
          v59 = *(unsigned __int8 *)(v43 + 81);
          v8[304] = v59;
          if (v59 == 1)
            sub_2391991A8((uint64_t)(v8 + 288), 2uLL, *(unsigned __int8 *)(v43 + 82));
        }
        else
        {
          v8[328] = 0;
        }
        v53 = v8 + 336;
        goto LABEL_81;
      }
      if (v39)
        goto LABEL_56;
    }
    v42 = v8 + 504;
    goto LABEL_98;
  }
  sub_2391BCBBC(2233, "lpp_transaction.c");
LABEL_55:
  free(v8);
  return 1;
}

unint64_t sub_239192384(unint64_t result, uint64_t a2, _BYTE *a3)
{
  unint64_t v3;
  _BYTE *v4;

  v3 = result >> 16;
  *(_BYTE *)(a2 + 8) = (unsigned __int16)result / 0x64u;
  v4 = *(_BYTE **)a2;
  v4[8] = (unsigned __int16)result % 0x64u / 0xA;
  *(_BYTE *)(*(_QWORD *)v4 + 8) = (unsigned __int16)result % 0x64u % 0xA;
  if (HIDWORD(result) == 1)
  {
    a3[8] = WORD1(result) / 0x64u;
    LOWORD(v3) = WORD1(result) % 0x64u;
    a3 = *(_BYTE **)a3;
  }
  a3[8] = (unsigned __int16)v3 / 0xAu;
  *(_BYTE *)(*(_QWORD *)a3 + 8) = (unsigned __int16)v3 % 0xAu;
  return result;
}

void sub_239192414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  int v7;
  int v8;

  *(_DWORD *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 116) = -1;
  v6 = *(_DWORD *)(a2 + 20);
  if (v6 == 3)
  {
    v7 = *(unsigned __int8 *)(a2 + 40);
  }
  else
  {
    v7 = 0;
    if (v6 == 2)
      v7 = *(unsigned __int8 *)(a2 + 41);
  }
  if (*(_DWORD *)a3 == 3 && !*(_DWORD *)(a3 + 8) && !*(_DWORD *)(a3 + 16))
  {
    if ((*(_BYTE *)(a1 + 8) || *(_BYTE *)(a1 + 10) || *(_BYTE *)(a1 + 46)) && *(_BYTE *)(a3 + 832) == 1)
    {
      if (*(_BYTE *)(a3 + 720) == 1)
        sub_239192550(a1, (unsigned __int8 *)(a3 + 80), a2);
      if (*(_BYTE *)(a3 + 752) == 1)
        sub_23919285C(a1, (uint64_t *)(a3 + 728), a2);
      v8 = *(_DWORD *)(a2 + 20);
      if (v8 == 3)
      {
        v7 = *(unsigned __int8 *)(a2 + 40);
      }
      else if (v8 == 2)
      {
        v7 = *(unsigned __int8 *)(a2 + 41);
      }
      if (v7 == 1 && *(_BYTE *)(a3 + 788) == 1)
        v7 = 1;
    }
    *(_DWORD *)(a1 + 112) = 0;
    *(_BYTE *)(a1 + 116) = -1;
  }
  if (*(_DWORD *)(a2 + 24) == 1 && v7 == 1)
  {
    sub_2391976A8(a2, 1, 2);
    *(_DWORD *)(a2 + 24) = 2;
  }
}

void sub_239192550(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  int v12;
  char v13;
  int v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  int v20;
  __int16 v21;
  int v22;
  char v23;
  _BYTE v24[12];
  uint64_t v25;
  int v26;
  char v27;
  _QWORD v28[4];
  _OWORD v29[4];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[96];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  char v53;
  _BYTE v54[11];

  v6 = 0;
  LOWORD(v29[0]) = -1;
  BYTE2(v29[0]) = -1;
  DWORD1(v29[0]) = -1;
  BYTE4(v29[3]) = 127;
  BYTE8(v29[0]) = -1;
  HIDWORD(v29[0]) = 0;
  DWORD2(v29[1]) = -1;
  *(_QWORD *)&v29[1] = 0;
  *(_QWORD *)((char *)&v29[2] + 4) = 0;
  *(_QWORD *)((char *)&v29[1] + 12) = 0;
  *(_QWORD *)((char *)&v29[2] + 12) = 2;
  DWORD2(v29[3]) = 0;
  WORD6(v29[3]) = -1;
  BYTE14(v29[3]) = -1;
  LODWORD(v30) = -1;
  WORD2(v30) = -1;
  BYTE8(v30) = 0;
  do
  {
    v7 = (char *)v29 + v6;
    v7[74] = -1;
    *((_DWORD *)v7 + 19) = -1;
    v7[80] = -1;
    v6 += 8;
  }
  while (v6 != 128);
  BYTE10(v38) = -1;
  *(_QWORD *)&v39 = 0;
  v8 = 2;
  if (*(_DWORD *)(a1 + 108) == 4)
    v8 = 3;
  v9 = v8 | ((unint64_t)*(unsigned __int8 *)(a3 + 28) << 32);
  v10 = *(_DWORD *)(a3 + 32);
  if (a2[112] == 1 && (*(_BYTE *)(a1 + 50) & 1) != 0)
  {
    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
    v30 = 0u;
    v31 = 0u;
    memset(v29, 0, sizeof(v29));
    v11 = *a2;
    if (v11 == 5)
    {
      v14 = *(unsigned __int8 *)(a1 + 46);
    }
    else
    {
      if (v11 != 4)
      {
        if (!*a2 && *(_BYTE *)(a1 + 8) == 1)
        {
          sub_23919636C(a1, a2, (uint64_t)v29, 1);
          v12 = *(unsigned __int8 *)(a3 + 16);
          v13 = *(_BYTE *)(a3 + 17);
          v25 = 1;
          v26 = v12;
          v27 = v13;
          v28[0] = 0;
          *(_DWORD *)((char *)v28 + 7) = 0;
          v51 = v9;
          v52 = v10;
          v45 = v36;
          v46 = v37;
          v47 = v38;
          v48 = v39;
          *(_OWORD *)&v42[64] = v32;
          *(_OWORD *)&v42[80] = v33;
          v43 = v34;
          v44 = v35;
          *(_OWORD *)v42 = v29[2];
          *(_OWORD *)&v42[16] = v29[3];
          *(_OWORD *)&v42[32] = v30;
          *(_OWORD *)&v42[48] = v31;
          v40 = v29[0];
          v41 = v29[1];
          sub_2391AF954((unsigned __int16 *)&v40, &v51);
        }
        goto LABEL_16;
      }
      v14 = *(unsigned __int8 *)(a1 + 10);
    }
    if (v14 == 1)
      sub_23919636C(a1, a2, (uint64_t)&v25, 0);
  }
LABEL_16:
  if (a2[140] == 1 && (*(_BYTE *)(a1 + 50) & 2) != 0)
  {
    v15 = sub_239196950((unsigned __int8 *)a1, a3);
    v16 = a2[116];
    v17 = *((_WORD *)a2 + 66);
    v18 = a2[134];
    v19 = a2[128];
    v20 = *((unsigned __int16 *)a2 + 65);
    v21 = *(_WORD *)(a2 + 135);
    HIBYTE(v40) = 0;
    *(_WORD *)((char *)&v40 + 13) = 0;
    memset(&v42[2], 0, 86);
    v22 = *(unsigned __int8 *)(a3 + 16);
    v23 = *(_BYTE *)(a3 + 17);
    v51 = 1;
    v52 = v22;
    v53 = v23;
    memset(v54, 0, sizeof(v54));
    v49 = v9;
    v50 = v10;
    *(_QWORD *)&v40 = 0;
    DWORD2(v40) = 590335;
    BYTE12(v40) = v16;
    *(_QWORD *)&v41 = *((_QWORD *)a2 + 15);
    WORD4(v41) = v17;
    BYTE10(v41) = v18;
    BYTE11(v41) = v19;
    HIDWORD(v41) = v20;
    *(_WORD *)v42 = v21;
    sub_2391B0618((uint64_t)&v40, v15, &v49);
  }
  if (a2[200] == 1 && (*(_BYTE *)(a1 + 50) & 4) != 0 && a2[168] == 1)
  {
    sub_239196950((unsigned __int8 *)a1, a3);
    sub_239199230((uint64_t)(a2 + 144), *((_DWORD *)a2 + 36), v24);
  }
}

void sub_23919285C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  int v11;
  char *v12;
  char v13;
  uint64_t *v14;
  char *v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;
  uint64_t *v20;
  uint64_t v21;
  size_t v22;
  _BYTE *v23;
  uint64_t *v24;
  char *v25;
  BOOL v26;
  int v27;
  int v28;
  _BYTE *v29;
  unint64_t v30;
  unsigned int v31;
  uint64_t *v32;
  char *v33;
  char v34;
  int v35;
  void *v36;
  unsigned int v37;
  int v38;
  __int128 *p_src;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  int v43;
  size_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  int v49;
  size_t v50;
  void *v51;
  unsigned int v52;
  uint64_t v53;
  int v54;
  int v55;
  unint64_t v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  __int128 __src;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  v3 = *((_DWORD *)a2 + 4);
  if ((v3 - 1) > 0xF)
    return;
  v4 = a3;
  v7 = 0;
  v8 = 2;
  if (*(_DWORD *)(a1 + 108) == 4)
    v8 = 3;
  v58 = *(_DWORD *)(a3 + 32);
  v56 = v8 | ((unint64_t)*(unsigned __int8 *)(a3 + 28) << 32);
  v9 = a2;
  do
  {
    v9 = (uint64_t *)*v9;
    if (*((_BYTE *)v9 + 120) == 1 && !*((_BYTE *)v9 + 8) && *(_BYTE *)(a1 + 8) == 1 && (*(_WORD *)(a1 + 52) & 1) != 0)
    {
      v10 = *((_DWORD *)v9 + 28);
      if (v10 < 1)
      {
        sub_2391BCBBC(8568, "lpp_transaction.c");
      }
      else
      {
        if (v10 <= 0x10)
          v11 = *((_DWORD *)v9 + 28);
        else
          v11 = 16;
        v12 = (char *)malloc_type_calloc(1uLL, (100 * v11), 0x86CB5109uLL);
        bzero(v12, (100 * v11));
        v53 = v4;
        v13 = 0;
        v14 = v9 + 12;
        v15 = v12;
        do
        {
          v14 = (uint64_t *)*v14;
          *v15 = *((_BYTE *)v14 + 8);
          *((_WORD *)v15 + 1) = 0;
          v15[1] = 0;
          sub_239199230((uint64_t)(v14 + 2), *((_DWORD *)v14 + 4), v15 + 6);
          v15[6] = v15[6] >> 2;
          sub_23919929C((int *)v14 + 8, *((_DWORD *)v14 + 8), (_WORD *)v15 + 4);
          if (*((_DWORD *)v14 + 12) == 1 && *((_DWORD *)v14 + 26) == 1)
          {
            *((_WORD *)v15 + 15) = *((_WORD *)v14 + 28);
            *((_WORD *)v15 + 16) = *((char *)v14 + 58);
            *((_WORD *)v15 + 17) = *((_WORD *)v14 + 30);
            *((_DWORD *)v15 + 9) = *((_DWORD *)v14 + 16);
            *((_WORD *)v15 + 14) = *((char *)v14 + 68);
            v15[5] = *((_BYTE *)v14 + 112);
            v15[66] = *((_BYTE *)v14 + 113);
            *((_WORD *)v15 + 32) = *((_WORD *)v14 + 57);
            *((_DWORD *)v15 + 22) = *((_DWORD *)v14 + 29);
            *((_WORD *)v15 + 21) = *((_WORD *)v14 + 60);
            *((_DWORD *)v15 + 11) = *((_DWORD *)v14 + 31);
            *((_DWORD *)v15 + 23) = *((_DWORD *)v14 + 32);
            *((_DWORD *)v15 + 13) = *((_DWORD *)v14 + 33);
            *((_WORD *)v15 + 48) = *((_WORD *)v14 + 68);
            *((_DWORD *)v15 + 15) = *((_DWORD *)v14 + 35);
            *((_DWORD *)v15 + 20) = *((_DWORD *)v14 + 36);
            *((_DWORD *)v15 + 18) = *((_DWORD *)v14 + 37);
            *((_WORD *)v15 + 20) = *((_WORD *)v14 + 76);
            *((_WORD *)v15 + 38) = *((_WORD *)v14 + 77);
            *((_WORD *)v15 + 28) = *((_WORD *)v14 + 78);
            *((_WORD *)v15 + 42) = *((_WORD *)v14 + 79);
            *((_WORD *)v15 + 34) = *((_WORD *)v14 + 80);
            *((_WORD *)v15 + 24) = *((_WORD *)v14 + 81);
            if (*((_BYTE *)v14 + 188) == 1)
            {
              v15[4] = *((_BYTE *)v14 + 164);
              v15[10] = *((_BYTE *)v14 + 165);
              v15[67] = *((_BYTE *)v14 + 184);
              *(_QWORD *)(v15 + 12) = v14[21];
              *((_DWORD *)v15 + 5) = *((_DWORD *)v14 + 44);
              *((_DWORD *)v15 + 6) = *((unsigned __int16 *)v14 + 90);
            }
            ++v13;
            v15 += 100;
          }
          else
          {
            sub_2391BCBBC(8549, "lpp_transaction.c");
          }
          --v11;
        }
        while (v11);
        v4 = v53;
        if (v13)
        {
          LOBYTE(__src) = v13;
          *(_DWORD *)((char *)&__src + 1) = 0;
          DWORD1(__src) = 0;
          *((_QWORD *)&__src + 1) = v12;
          *(_QWORD *)&v62 = 0;
          sub_239199048(a1, &__src, v56, v58, v53);
        }
        else if (v12)
        {
          free(v12);
        }
      }
      v3 = *((_DWORD *)a2 + 4);
    }
    ++v7;
  }
  while (v3 > v7);
  bzero(&__src, 0x2A8uLL);
  if (v3 <= 0)
    return;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v57 = 0;
  v59 = 0;
  v55 = 0;
  v19 = 0;
  v20 = a2;
  do
  {
    v20 = (uint64_t *)*v20;
    if (*((_BYTE *)v20 + 152) == 1)
    {
      v21 = *((unsigned __int8 *)v20 + 8);
      if (*((_BYTE *)v20 + 8))
      {
        if ((_DWORD)v21 == 5)
        {
          if (*(_BYTE *)(a1 + 46) != 1 || (*(_WORD *)(a1 + 56) & 2) == 0 || v59 || v18 > 4)
            goto LABEL_61;
        }
        else
        {
          if ((_DWORD)v21 != 4 || *(_BYTE *)(a1 + 10) != 1 || (*(_WORD *)(a1 + 54) & 2) == 0 || v55 || v18 >= 5)
            goto LABEL_61;
          v55 = 1;
        }
        v25 = (char *)&__src + 136 * v18;
        ++v17;
        *(_DWORD *)v25 = dword_2391CB8C4[v21];
        v26 = (_DWORD)v21 == 5;
        v27 = v59;
        if (v26)
          v27 = 1;
        v59 = v27;
        v28 = *((_DWORD *)v20 + 36);
        v25[4] = v28;
        v29 = v25 + 4;
        if ((_BYTE)v28)
        {
          v52 = v18 + 1;
          v54 = v17;
          v30 = 0;
          v31 = v18;
          v32 = v20 + 16;
          v33 = (char *)&__src + 136 * v31;
          do
          {
            v32 = (uint64_t *)*v32;
            v34 = *((_BYTE *)v32 + 8);
            v33[v30 + 69] = -1;
            v33[v30 + 5] = v34;
            if (*((_BYTE *)v32 + 56) == 1)
            {
              sub_239199230((uint64_t)(v32 + 2), *((_DWORD *)v32 + 4), &v33[v30 + 69]);
              LOBYTE(v28) = *v29;
            }
            ++v30;
          }
          while (v30 < v28);
          v18 = v52;
          v17 = v54;
        }
        else
        {
          ++v18;
        }
      }
      else
      {
        if (*(_BYTE *)(a1 + 8) != 1 || (*(_WORD *)(a1 + 52) & 2) == 0 || v19 || v57 > 4)
        {
LABEL_61:
          sub_2391BCBBC(8992, "lpp_transaction.c");
          goto LABEL_62;
        }
        ++v57;
        v22 = *((unsigned __int8 *)v20 + 144);
        v19 = 1;
        v23 = malloc_type_calloc(1uLL, v22, 0x86CB5109uLL);
        bzero(v23, v22);
        if ((_DWORD)v22)
        {
          v24 = v20 + 16;
          do
          {
            v24 = (uint64_t *)*v24;
            *v23++ = *((_BYTE *)v24 + 8);
            v19 = 1;
            --v22;
          }
          while (v22);
        }
      }
    }
LABEL_62:
    v35 = *((_DWORD *)a2 + 4);
    if (v16 > 4)
      break;
    ++v16;
  }
  while (v35 > (int)v16);
  if ((v17 - 1) <= 4u)
  {
    v36 = malloc_type_calloc(1uLL, 136 * v17, 0x86CB5109uLL);
    memcpy(v36, &__src, 136 * v17);
    v35 = *((_DWORD *)a2 + 4);
  }
  v68 = 0;
  v66 = 0u;
  v67 = 0u;
  v64 = 0u;
  v65 = 0u;
  v62 = 0u;
  v63 = 0u;
  __src = 0u;
  if (v35 >= 1)
  {
    v37 = 0;
    v38 = 0;
    p_src = &__src;
    v40 = a2;
    while (1)
    {
      v40 = (uint64_t *)*v40;
      if (*((_BYTE *)v40 + 392) == 1)
      {
        if (*((_BYTE *)v40 + 8) == 4 && *(_BYTE *)(a1 + 10) == 1 && (*(_WORD *)(a1 + 54) & 0x80) != 0)
        {
          if (*((_DWORD *)v40 + 90) == 1)
          {
            v60 = v38;
            v42 = (uint64_t *)v40[46];
            *(_DWORD *)p_src = 3;
            v43 = *((_DWORD *)v40 + 96);
            *((_BYTE *)p_src + 8) = v43;
            v44 = 4 * v43;
            v45 = malloc_type_calloc(1uLL, v44, 0x86CB5109uLL);
            bzero(v45, v44);
            *((_QWORD *)p_src + 2) = v45;
            if (*((_BYTE *)p_src + 8))
            {
              v46 = 0;
              v47 = 0;
              do
              {
                v48 = *((_DWORD *)v42 + 4);
                *((_BYTE *)v45 + v46) = *((_BYTE *)v42 + 8);
                sub_239199230((uint64_t)(v42 + 2), v48, (_BYTE *)v45 + v46 + 1);
                v49 = *((unsigned __int8 *)v42 + 57);
                v45 = (void *)*((_QWORD *)p_src + 2);
                *((_BYTE *)v45 + v46 + 2) = v49;
                if (v49 == 1)
                  *((_BYTE *)v45 + v46 + 3) = *((_BYTE *)v42 + 56);
                v42 = (uint64_t *)*v42;
                ++v47;
                v46 += 4;
              }
              while (v47 < *((unsigned __int8 *)p_src + 8));
            }
            v38 = v60 + 1;
            p_src = (__int128 *)((char *)p_src + 24);
            goto LABEL_76;
          }
          v41 = 9453;
        }
        else
        {
          v41 = 9458;
        }
        sub_2391BCBBC(v41, "lpp_transaction.c");
      }
LABEL_76:
      if (v37 <= 4 && *((_DWORD *)a2 + 4) > (signed int)++v37)
        continue;
      if ((v38 - 1) <= 4u)
      {
        v50 = 24 * v38;
        v51 = malloc_type_calloc(1uLL, v50, 0x86CB5109uLL);
        memcpy(v51, &__src, v50);
      }
      return;
    }
  }
}

uint64_t sub_239192FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _DWORD *v8;
  uint64_t *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  int v20;
  _WORD *v21;
  _BYTE *v22;
  int v23;
  int *v24;
  int v25;
  uint64_t v26;
  unsigned __int8 *v27;
  int v28;
  int v29;
  _DWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD *v34;
  BOOL v35;
  char v36;
  __int128 *v37;
  __int128 v38;
  char v39;
  int v40;
  unsigned int v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t i;
  int v46;
  int v47;
  unint64_t v48;
  _OWORD v49[2];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  int v54;
  __int16 v55;
  char v56[2];

  if (*(_DWORD *)(a2 + 20) != 4)
  {
    v16 = 2650;
LABEL_16:
    sub_2391BCBBC(v16, "lpp_transaction.c");
    return 0;
  }
  if (*(_DWORD *)a3 != 4)
  {
    v16 = 2655;
    goto LABEL_16;
  }
  v8 = (_DWORD *)(a2 + 48);
  v56[0] = 0;
  v55 = 0;
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v54 = 0;
  memset(v49, 0, 28);
  *(_QWORD *)(a2 + 152) = 0;
  v9 = **(uint64_t ***)(a1 + 72);
  if (!v9)
  {
LABEL_8:
    sub_2391BCBBC(2693, "lpp_transaction.c");
    LOBYTE(v12) = 0;
    v13 = 0;
    v14 = 0xFF000000FFLL;
    v11 = -1;
    v15 = 1;
    goto LABEL_9;
  }
  v10 = *(_DWORD *)(a2 + 28);
  while (1)
  {
    if (*((_DWORD *)v9 + 4) == v10)
    {
      v11 = *((_DWORD *)v9 + 5);
      if (v11 == *(_DWORD *)(a2 + 32))
        break;
    }
    v9 = (uint64_t *)*v9;
    if (!v9)
      goto LABEL_8;
  }
  if (v10 == 1)
    v19 = *((unsigned __int8 *)v9 + 64);
  else
    v19 = 0;
  if (*(_DWORD *)(a3 + 8) || *(_DWORD *)(a3 + 16) || *(_BYTE *)(a3 + 92) != 1)
    goto LABEL_31;
  v20 = *(unsigned __int8 *)(a3 + 120);
  if (v20 == 1)
  {
    *v8 = 1;
    if (!*(_BYTE *)(a1 + 8) && !*(_BYTE *)(a1 + 10) && !*(_BYTE *)(a1 + 46))
      *v8 = 2;
  }
  else if (!*(_BYTE *)(a3 + 120) && !*(_BYTE *)(a3 + 152) && !*(_BYTE *)(a3 + 312))
  {
LABEL_31:
    v15 = 0;
    LOBYTE(v12) = 0;
    v13 = 0;
    v14 = 0xFF000000FFLL;
    v11 = -1;
    goto LABEL_9;
  }
  if (*(_BYTE *)(a3 + 152) == 1)
  {
    *(_DWORD *)(a2 + 52) = 1;
    if (!*(_BYTE *)(a1 + 44) || *(_DWORD *)(a1 + 108) != 3)
      *(_DWORD *)(a2 + 52) = 2;
  }
  if (*(_BYTE *)(a3 + 312) == 1)
  {
    *(_DWORD *)(a2 + 56) = 1;
    if (!*(_BYTE *)(a1 + 61) || *(_DWORD *)(a1 + 108) != 4)
      *(_DWORD *)(a2 + 56) = 2;
  }
  v22 = (_BYTE *)(a3 + 24);
  if (*v8 == 1)
  {
    v23 = sub_239193670((_BYTE *)a1, a3 + 24, (uint64_t)v8, (uint64_t)&v50);
    v24 = (int *)(a2 + 52);
    if (*(_DWORD *)(a2 + 52) != 1 && *(_DWORD *)(a2 + 56) != 1)
    {
      v25 = 0;
      goto LABEL_56;
    }
  }
  else
  {
    v24 = (int *)(a2 + 52);
    if (*(_DWORD *)(a2 + 52) != 1 && *(_DWORD *)(a2 + 56) != 1)
    {
      if (v10)
      {
        v15 = 0;
        v13 = 0;
        v14 = 0xFF000000FFLL;
        v11 = -1;
      }
      else
      {
        if (*(_DWORD *)(a1 + 108) == 4)
          v14 = 3;
        else
          v14 = 2;
        v47 = 0;
        switch(*v22)
        {
          case 0:
          case 2:
            if (v20 != 1)
              goto LABEL_111;
            if (*(_BYTE *)(a3 + 115) == 1)
              v47 = 1;
            else
              v47 = 2;
            break;
          case 1:
          case 3:
            break;
          default:
LABEL_111:
            v47 = 2;
            break;
        }
        v15 = 0;
        v13 = 0;
        *(_DWORD *)(a2 + 60) = v47;
      }
      LOBYTE(v12) = 1;
      goto LABEL_9;
    }
    v23 = 0;
  }
  v25 = sub_239193BDC((_BYTE *)a1, (uint64_t)v22, (uint64_t)v8, (uint64_t)v49);
LABEL_56:
  v26 = 0;
  v12 = 0;
  v27 = (unsigned __int8 *)v9 + 105;
  do
  {
    if (v8[v26] == 1 && *((_BYTE *)v9 + v26 + 110) && *v27 != *(unsigned __int8 *)(a2 + 17))
    {
      v12 = 2;
      v8[v26] = 2;
    }
    ++v26;
    v27 += 2;
  }
  while (v26 != 3);
  if (*v8 == 1)
  {
    v28 = *(_DWORD *)(a2 + 76);
    v29 = *(_DWORD *)(a2 + 52);
    if (v28 == 2 && (v29 == 1 || *(_DWORD *)(a2 + 56) == 1))
    {
      *(_BYTE *)(a2 + 144) = 1;
      v30 = malloc_type_calloc(1uLL, 0x44uLL, 0x86CB5109uLL);
      v30[16] = 0;
      *((_OWORD *)v30 + 2) = 0u;
      *((_OWORD *)v30 + 3) = 0u;
      *(_OWORD *)v30 = 0u;
      *((_OWORD *)v30 + 1) = 0u;
      *(_QWORD *)(a2 + 128) = v30;
      v31 = v51;
      v32 = v52;
      v33 = v53;
      v30[16] = v54;
      *((_OWORD *)v30 + 2) = v32;
      *((_OWORD *)v30 + 3) = v33;
      *((_OWORD *)v30 + 1) = v31;
      *(_OWORD *)v30 = v50;
      BYTE4(v50) = v50;
      LODWORD(v50) = 0;
      v34 = malloc_type_calloc(1uLL, 0x1CuLL, 0x86CB5109uLL);
      v35 = 0;
      v36 = 0;
      v37 = 0;
      *(_QWORD *)(a2 + 136) = v34;
      v38 = v49[0];
      *(_OWORD *)((char *)v34 + 12) = *(_OWORD *)((char *)v49 + 12);
      *v34 = v38;
      DWORD1(v49[0]) = 0;
      v39 = v49[1];
      *((_QWORD *)&v49[0] + 1) = 0xFF0000000002;
      LODWORD(v49[1]) = 0;
      BYTE12(v49[0]) = v39;
      v40 = *(_DWORD *)(a2 + 48);
      v29 = *(_DWORD *)(a2 + 52);
      v48 = v9[2];
      if (v40 != 1)
      {
LABEL_74:
        v42 = v49;
        if (v29 != 1 && *(_DWORD *)(a2 + 56) != 1)
          v42 = 0;
        sub_23918E114(a1, (int *)&v48, v19, v37, v42, (_BYTE *)&v55 + 1, v56, v36);
        if (*v8 == 1)
        {
          v43 = 2;
          if (*(_DWORD *)(a1 + 108) == 4)
            v43 = 3;
          v11 = HIDWORD(v48);
          v14 = v43 | ((unint64_t)v48 << 32);
          LODWORD(v50) = 1000 * v50;
          v13 = 1;
        }
        else
        {
          v13 = 0;
          v14 = 0xFF000000FFLL;
          v11 = -1;
        }
        v44 = 0;
        for (i = 104; i != 110; i += 2)
        {
          if (v8[v44] == 1)
          {
            if (v56[v44 - 2] == 1)
            {
              LOBYTE(v12) = 0;
              v8[v44] = 2;
            }
            else
            {
              *(_WORD *)((char *)v9 + i) = *(_WORD *)(a2 + 16);
              *((_BYTE *)v9 + v44 + 110) = 1;
            }
          }
          ++v44;
        }
        v15 = 0;
        goto LABEL_9;
      }
    }
    else
    {
      v35 = v28 == 2;
      v48 = v9[2];
    }
    v37 = &v50;
    v36 = v35;
    goto LABEL_74;
  }
  v29 = *v24;
  if (*v24 == 1)
  {
    v41 = *((_DWORD *)v9 + 4);
LABEL_73:
    v37 = 0;
    v36 = *(_DWORD *)(a2 + 76) == 2;
    v48 = __PAIR64__(*((_DWORD *)v9 + 5), v41);
    goto LABEL_74;
  }
  v41 = *((_DWORD *)v9 + 4);
  if (*(_DWORD *)(a2 + 56) == 1)
    goto LABEL_73;
  v15 = 0;
  if (v25)
    v46 = v25;
  else
    v46 = v12;
  if (v23)
    v12 = v23;
  else
    v12 = v46;
  v14 = 0xFF000000FFLL;
  v11 = -1;
  v13 = 0;
  if (!v41 && v12 == 1)
  {
    v15 = 0;
    v13 = 0;
    if (*(_DWORD *)(a1 + 108) == 4)
      v14 = 3;
    else
      v14 = 2;
    v11 = *((_DWORD *)v9 + 5);
  }
LABEL_9:
  if (*v8 == 1 || *(_DWORD *)(a2 + 52) == 1 || *(_DWORD *)(a2 + 56) == 1)
  {
    if (v13)
      sub_239198EDC(a1, (unsigned int *)&v50, v14, v11, a2);
    return 0;
  }
  if ((v15 & 1) != 0)
  {
    v17 = 0;
  }
  else
  {
    v17 = 1;
    v21 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
    bzero(v21, 0xA28uLL);
    *(_QWORD *)(a4 + 16) = v21;
    v21[1] = 257;
    *v21 = *(_WORD *)(a2 + 16);
    *((_BYTE *)v21 + 2592) = 1;
    *((_DWORD *)v21 + 6) = 5;
    *((_BYTE *)v21 + 9) = 1;
    *((_BYTE *)v21 + 6) = 1;
    *((_DWORD *)v21 + 8) = 0;
    *((_DWORD *)v21 + 10) = 0;
    *((_BYTE *)v21 + 144) = 1;
    *((_BYTE *)v21 + 98) = 1;
    *((_BYTE *)v21 + 97) = v12;
  }
  if (*(_DWORD *)(a2 + 24) == 1)
    sub_2391976A8(a2, 1, 2);
  *(_DWORD *)(a2 + 24) = 2;
  sub_239194050(a2);
  return v17;
}

uint64_t sub_239193670(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  _DWORD *v5;
  int v6;
  uint64_t result;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  char v20;
  char v21;

  switch(*(_BYTE *)a2)
  {
    case 0:
    case 2:
      if (*(_BYTE *)(a2 + 96) != 1 || *(_BYTE *)(a2 + 91) != 1)
      {
        v4 = 0;
        goto LABEL_8;
      }
      v4 = 0;
      *(_DWORD *)(a4 + 64) = 1;
      v5 = (_DWORD *)(a4 + 64);
      v6 = 2;
      break;
    case 1:
    case 3:
      v4 = 0;
      *(_DWORD *)(a4 + 64) = 0;
      v5 = (_DWORD *)(a4 + 64);
      v6 = 1;
      break;
    default:
      v4 = 1;
LABEL_8:
      v6 = 0;
      *(_DWORD *)(a4 + 64) = 2;
      v5 = (_DWORD *)(a4 + 64);
      break;
  }
  *(_DWORD *)(a4 + 44) = v6;
  *(_WORD *)(a4 + 52) = 0;
  *(_BYTE *)(a4 + 43) = -1;
  if (*(_BYTE *)(a2 + 96) == 1 && *(int *)(a2 + 72) >= 1)
  {
    if (**(_BYTE **)(a2 + 80))
    {
      *(_BYTE *)(a3 + 16) = 1;
      if (a1[8] == 1 && ((a1[9] >> *v5) & 1) != 0)
      {
        *(_BYTE *)(a3 + 22) = 1;
        *(_WORD *)(a4 + 54) |= 1u;
        *(_WORD *)(a4 + 52) |= 1u;
      }
    }
    if (*(int *)(a2 + 72) >= 5)
    {
      if (*(_BYTE *)(*(_QWORD *)(a2 + 80) + 4))
      {
        *(_BYTE *)(a3 + 17) = 1;
        if (a1[10] == 1 && ((a1[11] >> *v5) & 1) != 0)
        {
          *(_BYTE *)(a3 + 23) = 1;
          *(_WORD *)(a4 + 54) |= 0x20u;
          *(_WORD *)(a4 + 52) |= 1u;
        }
      }
      if (*(int *)(a2 + 72) >= 6)
      {
        if (*(_BYTE *)(*(_QWORD *)(a2 + 80) + 5))
        {
          *(_BYTE *)(a3 + 18) = 1;
          if (a1[46] == 1 && ((a1[47] >> *v5) & 1) != 0)
          {
            *(_BYTE *)(a3 + 24) = 1;
            *(_WORD *)(a4 + 54) |= 0x40u;
            *(_WORD *)(a4 + 52) |= 1u;
          }
        }
      }
    }
  }
  if (!*(_BYTE *)(a3 + 22) && !*(_BYTE *)(a3 + 23) && !*(_BYTE *)(a3 + 24))
  {
    if (*(_BYTE *)(a3 + 16) || *(_BYTE *)(a3 + 17) || *(_BYTE *)(a3 + 18))
      *(_DWORD *)a3 = 2;
    goto LABEL_29;
  }
  if (v4)
  {
LABEL_29:
    *(_DWORD *)a3 = 2;
    return 1;
  }
  *(_DWORD *)(a3 + 12) = *(_DWORD *)(a4 + 64);
  *(_BYTE *)(a4 + 59) = *(_BYTE *)(a2 + 91);
  *(_WORD *)(a4 + 56) = 0;
  *(_BYTE *)(a4 + 58) = 0;
  if (*(_BYTE *)(a2 + 40) == 1 && *(_BYTE *)(a2 + 22) == 1)
  {
    v8 = *(unsigned __int8 *)(a2 + 7);
    *(_DWORD *)a4 = 0;
    *(_BYTE *)(a4 + 42) = 0;
    if (v8 != 1)
    {
      *(_DWORD *)(a3 + 28) = 0;
      v9 = *(unsigned __int8 *)(a2 + 17);
      *(_BYTE *)(a4 + 4) = v9;
      if (a1[49] == 1 && *(_BYTE *)(a2 + 19) == 1 && (v10 = *(unsigned __int8 *)(a2 + 18), v9 > v10))
      {
        *(_BYTE *)(a4 + 43) = v10;
        if (*(_BYTE *)(a3 + 22) == 1 || *(_BYTE *)(a3 + 23) == 1 || *(_BYTE *)(a3 + 24) == 1)
        {
          *(_DWORD *)(a3 + 104) = 1;
          *(_DWORD *)(a3 + 116) = 4;
        }
      }
      else
      {
        *(_BYTE *)(a4 + 43) = -1;
        *(_DWORD *)(a3 + 104) = 0;
      }
      goto LABEL_61;
    }
  }
  else
  {
    if (*(_BYTE *)(a2 + 7) != 1)
    {
      result = 0;
      *(_DWORD *)a3 = 2;
      return result;
    }
    *(_DWORD *)a4 = 0;
    *(_BYTE *)(a4 + 42) = 0;
  }
  v11 = *(unsigned __int8 *)(a2 + 6);
  if (*(_BYTE *)(a2 + 6))
  {
    v12 = *(unsigned __int8 *)(a2 + 4);
    if (*(_BYTE *)(a2 + 4))
    {
      if (v11 >= 0xA)
      {
        *(_DWORD *)a4 = 0;
      }
      else
      {
        *(_DWORD *)a4 = dword_2391CBB28[(char)(v11 - 1)];
        *(_DWORD *)(a3 + 28) = 2;
        if (v12 == 7)
          LOBYTE(v13) = -1;
        else
          v13 = 1 << v12;
        if (*(_BYTE *)(a2 + 5) != 1)
          LOBYTE(v13) = -1;
        *(_BYTE *)(a3 + 97) = v13;
        *(_BYTE *)(a3 + 98) = 0;
        *(_BYTE *)(a4 + 42) = v13;
      }
LABEL_61:
      *(_DWORD *)(a4 + 36) = 2;
      if (*(_BYTE *)(a2 + 9) == 1)
      {
        v14 = *(unsigned __int8 *)(a2 + 8);
        if (v14 <= 1)
        {
          if (v14 == 1)
            v15 = 1;
          else
            v15 = 2;
          if (*(_BYTE *)(a2 + 8))
            v16 = v15;
          else
            v16 = 0;
          *(_DWORD *)(a4 + 36) = v16;
        }
      }
      if (*(_BYTE *)(a2 + 12) == 1)
      {
        *(_DWORD *)(a4 + 8) = *(unsigned __int8 *)(a2 + 10);
        *(_BYTE *)(a4 + 16) = *(_BYTE *)(a2 + 11);
      }
      v17 = *(unsigned __int8 *)(a2 + 13);
      *(_DWORD *)(a4 + 20) = v17;
      if (v17 == 1 && *(_BYTE *)(a2 + 16) == 1)
      {
        *(_DWORD *)(a4 + 24) = *(unsigned __int8 *)(a2 + 14);
        *(_BYTE *)(a4 + 28) = *(_BYTE *)(a2 + 15);
      }
      *(_DWORD *)(a4 + 12) = *(unsigned __int8 *)(a2 + 23);
      *(_DWORD *)(a4 + 32) = 2;
      if (*(_BYTE *)(a2 + 42) == 1)
      {
        v18 = *(unsigned __int8 *)(a2 + 41);
        if (v18 <= 2)
          *(_DWORD *)(a4 + 32) = v18;
      }
      *(_BYTE *)(a4 + 40) = -1;
      if (*(_BYTE *)(a2 + 54) != 1)
        goto LABEL_98;
      v19 = 0;
      *(_BYTE *)(a4 + 40) = 0;
      if (*(_BYTE *)(a2 + 43) == 1)
      {
        if ((a1[59] & 1) != 0)
        {
          v19 = 1;
          *(_BYTE *)(a4 + 40) = 1;
        }
        else
        {
          v19 = 0;
        }
      }
      if (*(_BYTE *)(a2 + 44) == 1 && (a1[59] & 2) != 0)
      {
        v19 |= 2u;
        *(_BYTE *)(a4 + 40) = v19;
      }
      if (*(_BYTE *)(a2 + 45) == 1 && (a1[59] & 4) != 0)
      {
        v19 |= 4u;
        *(_BYTE *)(a4 + 40) = v19;
      }
      if (*(_BYTE *)(a2 + 47) == 1 && (a1[59] & 0x10) != 0)
      {
        v19 |= 0x10u;
        *(_BYTE *)(a4 + 40) = v19;
      }
      if (*(_BYTE *)(a2 + 48) == 1 && (a1[59] & 0x20) != 0)
      {
        v20 = v19 | 0x20;
      }
      else
      {
        if (v19)
        {
LABEL_98:
          *(_BYTE *)(a4 + 41) = -1;
          if (*(_BYTE *)(a2 + 59) != 1)
            return 0;
          v21 = 0;
          *(_BYTE *)(a4 + 41) = 0;
          if (*(_BYTE *)(a2 + 55) == 1)
          {
            if ((a1[58] & 1) != 0)
            {
              v21 = 1;
              *(_BYTE *)(a4 + 41) = 1;
            }
            else
            {
              v21 = 0;
            }
          }
          if (*(_BYTE *)(a2 + 56) == 1 && (a1[58] & 2) != 0)
          {
            v21 |= 2u;
            *(_BYTE *)(a4 + 41) = v21;
          }
          if (*(_BYTE *)(a2 + 57) == 1 && (a1[58] & 4) != 0)
          {
            v21 |= 4u;
            *(_BYTE *)(a4 + 41) = v21;
          }
          if (*(_BYTE *)(a2 + 58) != 1 || (a1[58] & 8) == 0)
            return 0;
          result = 0;
          *(_BYTE *)(a4 + 41) = v21 | 8;
          return result;
        }
        v20 = a1[59];
      }
      *(_BYTE *)(a4 + 40) = v20;
      goto LABEL_98;
    }
  }
  result = 2;
  if (*(_DWORD *)a3 == 1)
    *(_DWORD *)a3 = 2;
  return result;
}

uint64_t sub_239193BDC(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  _BYTE *v14;
  _DWORD *v15;
  int v16;
  int v17;
  unsigned int v18;
  _BYTE *v19;

  switch(*(_BYTE *)a2)
  {
    case 0:
    case 2:
      if (*(_DWORD *)(a3 + 4) == 1)
        *(_DWORD *)(a3 + 4) = 2;
      if (*(_DWORD *)(a3 + 8) == 1)
        *(_DWORD *)(a3 + 8) = 2;
      return 1;
    case 1:
    case 3:
      *(_DWORD *)(a3 + 12) = 0;
      v4 = *(unsigned __int8 *)(a2 + 40);
      if ((v4 != 1 || *(_BYTE *)(a2 + 22) != 1) && *(_BYTE *)(a2 + 7) != 1 && *(_BYTE *)(a2 + 3) != 1)
      {
        result = 0;
        *(_QWORD *)(a3 + 4) = 0x200000002;
        return result;
      }
      if (*(_BYTE *)(a2 + 3) == 1)
      {
        *(_QWORD *)(a4 + 8) = 0;
        *(_DWORD *)(a4 + 16) = 0;
        *(_BYTE *)(a4 + 8) = 1;
        *(_BYTE *)(a4 + 16) = 1;
        *(_DWORD *)(a4 + 4) = 1;
        *(_DWORD *)(a4 + 12) = *(unsigned __int8 *)(a2 + 1);
        *(_BYTE *)(a4 + 16) = *(_BYTE *)(a2 + 2);
        v4 = *(unsigned __int8 *)(a2 + 40);
      }
      if (v4 != 1 || *(_BYTE *)(a2 + 22) != 1)
        goto LABEL_26;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 16) = 0;
      *(_BYTE *)(a4 + 8) = 2;
      *(_WORD *)(a4 + 12) = -255;
      *(_DWORD *)(a4 + 4) = 0;
      *(_BYTE *)(a4 + 12) = *(_BYTE *)(a2 + 17);
      if (a1[49] != 1
        || *(_BYTE *)(a2 + 19) != 1
        || (v5 = *(unsigned __int8 *)(a2 + 18), *(unsigned __int8 *)(a2 + 17) <= v5))
      {
        *(_BYTE *)(a4 + 13) = -1;
        *(_DWORD *)(a3 + 108) = 0;
LABEL_25:
        *(_DWORD *)(a3 + 112) = 0;
        goto LABEL_26;
      }
      *(_BYTE *)(a4 + 13) = v5;
      if (*(_DWORD *)(a3 + 4) == 1)
      {
        *(_DWORD *)(a3 + 108) = 1;
        *(_DWORD *)(a3 + 120) = 4;
      }
      if (*(_DWORD *)(a3 + 8) == 1)
        goto LABEL_25;
LABEL_26:
      if (*(_BYTE *)(a2 + 7) != 1)
      {
        v7 = *(_DWORD *)(a4 + 4);
        if (v7 == 1)
        {
          v8 = *(_DWORD *)(a3 + 4);
          if (v8 == 1)
          {
            if (*(_DWORD *)(a4 + 12))
            {
              v8 = 1;
            }
            else
            {
              v8 = 2;
              *(_DWORD *)(a3 + 4) = 2;
            }
          }
          if (*(_DWORD *)(a3 + 8) == 1)
            *(_DWORD *)(a3 + 8) = 2;
          v7 = 1;
LABEL_54:
          if (v8 == 1)
          {
            v13 = *(_DWORD *)(a2 + 112);
            if (v13 >= 1)
            {
              v14 = *(_BYTE **)(a2 + 120);
              if (*v14)
                *(_BYTE *)(a4 + 21) = 1;
              if (v13 >= 2)
              {
                if (v14[1])
                  *(_BYTE *)(a4 + 22) = 1;
                if (v13 >= 3 && v14[2])
                  *(_BYTE *)(a4 + 23) = 1;
              }
            }
            if (*(_BYTE *)(a4 + 21) || *(_BYTE *)(a4 + 22) || *(_BYTE *)(a4 + 23))
            {
              v15 = (_DWORD *)(a3 + 8);
              v16 = *(_DWORD *)(a3 + 8);
              if (v16 != 1)
              {
                v8 = 1;
                goto LABEL_92;
              }
LABEL_71:
              v18 = *(_DWORD *)(a2 + 272);
              if ((int)v18 >= 1)
              {
                v19 = *(_BYTE **)(a2 + 280);
                if (*v19 && a1[64])
                  *(_BYTE *)(a4 + 24) = 1;
                if (v18 >= 2)
                {
                  if (v19[1] && a1[64])
                    *(_BYTE *)(a4 + 25) = 1;
                  if (v18 >= 3)
                  {
                    if (v19[2] && a1[65])
                      *(_BYTE *)(a4 + 26) = 1;
                    if (v18 >= 4 && v19[3] && a1[65])
                      *(_BYTE *)(a4 + 27) = 1;
                  }
                }
              }
              if (*(_BYTE *)(a4 + 24) || *(_BYTE *)(a4 + 25) || *(_BYTE *)(a4 + 26) || *(_BYTE *)(a4 + 27))
              {
                v8 = v8 == 1;
                v16 = 1;
                goto LABEL_92;
              }
              v16 = 2;
              *v15 = 2;
              if (v8 == 1)
              {
LABEL_92:
                if (*(_DWORD *)a3 != 1)
                {
                  if (v7 != 1)
                  {
                    if (v7)
                    {
                      *(_DWORD *)(a3 + 28) = 2;
                      *(_WORD *)(a3 + 97) = *(_DWORD *)(a4 + 12);
                      if (!v8)
                        goto LABEL_101;
                    }
                    else
                    {
                      *(_DWORD *)(a3 + 28) = 0;
                      *(_WORD *)(a3 + 97) = 0;
                      if (!v8)
                      {
LABEL_101:
                        if (v16 == 1)
                        {
                          result = 0;
                          *(_DWORD *)a4 = 3;
                          return result;
                        }
                        return 0;
                      }
                    }
LABEL_99:
                    result = 0;
                    *(_DWORD *)a4 = 0;
                    return result;
                  }
                  *(_DWORD *)(a3 + 28) = 1;
                }
                if (!v8)
                  goto LABEL_101;
                goto LABEL_99;
              }
              return 0;
            }
            v15 = (_DWORD *)(a3 + 8);
            v17 = *(_DWORD *)(a3 + 8);
            v8 = 2;
            *(_DWORD *)(a3 + 4) = 2;
          }
          else
          {
            v15 = (_DWORD *)(a3 + 8);
            v17 = *(_DWORD *)(a3 + 8);
          }
          if (v17 != 1)
            return 0;
          goto LABEL_71;
        }
LABEL_49:
        v8 = *(_DWORD *)(a3 + 4);
        goto LABEL_54;
      }
      if (*(_BYTE *)(a2 + 6) && *(_BYTE *)(a2 + 4) && *(_DWORD *)(a3 + 8) != 1)
      {
        *(_OWORD *)(a4 + 4) = xmmword_2391CBB90;
        if (*(_BYTE *)(a2 + 5) == 1)
        {
          v9 = *(unsigned __int8 *)(a2 + 4);
          if (v9 == 7)
            v10 = 255;
          else
            v10 = 1 << v9;
          *(_DWORD *)(a4 + 12) = v10;
        }
        else
        {
          *(_DWORD *)(a4 + 16) = 255;
        }
        v11 = *(unsigned __int8 *)(a2 + 6) - 1;
        if (v11 > 8)
          v12 = 0;
        else
          v12 = dword_2391CBB28[(char)v11];
        *(_DWORD *)(a4 + 16) = v12;
        v7 = 2;
        goto LABEL_49;
      }
      if (*(_DWORD *)(a3 + 4) == 1)
        *(_DWORD *)(a3 + 4) = 2;
      result = 2;
      if (*(_DWORD *)(a3 + 8) == 1)
        *(_DWORD *)(a3 + 8) = 2;
      return result;
    default:
      *(_QWORD *)(a3 + 4) = 0x200000002;
      return 1;
  }
}

void sub_239194050(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  if (!a1)
    return;
  if (*(_DWORD *)(a1 + 20) != 4)
  {
    v5 = 4085;
LABEL_14:
    sub_2391BCBBC(v5, "lpp_transaction.c");
    return;
  }
  if (*(_DWORD *)(a1 + 24) != 2)
  {
    v5 = 4076;
    goto LABEL_14;
  }
  v2 = *(void **)(a1 + 128);
  if (v2)
  {
    free(v2);
    *(_QWORD *)(a1 + 128) = 0;
  }
  v3 = *(void **)(a1 + 136);
  if (v3)
  {
    free(v3);
    *(_QWORD *)(a1 + 136) = 0;
  }
  v4 = *(void **)(a1 + 80);
  if (v4)
  {
    free(v4);
    *(_QWORD *)(a1 + 80) = 0;
  }
  sub_2391994EC((void **)(a1 + 88));
  sub_2391994EC((void **)(a1 + 112));
  *(_BYTE *)(a1 + 40) = 0;
  sub_239199530((void **)(a1 + 96));
  sub_239199530((void **)(a1 + 120));
  sub_239199574((void **)(a1 + 104));
}

BOOL sub_239194124(_QWORD *a1)
{
  _BOOL8 result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = 1;
  if (!a1[4])
  {
    v2 = a1[5];
    if (!v2 || *(_BYTE *)(v2 + 352) != 1 && *(_BYTE *)(v2 + 176) != 1)
    {
      v3 = a1[6];
      if (!v3 || *(_BYTE *)(v3 + 184) != 1)
      {
        v4 = a1[7];
        if (!v4 || *(_BYTE *)(v4 + 216) != 1)
          return 0;
      }
    }
  }
  return result;
}

uint64_t sub_239194184(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t *v5;
  _QWORD *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  _OWORD *v25;
  __int16 v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  BOOL v30;
  _QWORD *v31;
  int v32;
  unsigned __int8 v33;
  unsigned int v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _OWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  void *v59;
  void *v60;
  __int128 *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  void *v73;
  __int128 *v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  void *v86;
  void *v87;
  unint64_t v88;
  void *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  _OWORD *v95;
  _DWORD *v96;
  int v97;
  _DWORD *v98;
  int v99;
  int v100;
  _DWORD *v101;
  _DWORD *v102;
  unsigned int *v103;
  uint64_t v104;
  unint64_t v105;
  int v106;
  uint64_t i;
  _DWORD *v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t j;
  int v113;
  int *v114;
  _QWORD *v115;
  char v116;
  __int16 v117;
  __int16 v118;
  _BYTE v119[2];
  _WORD v120[2];

  *a4 = 0;
  if (*(_DWORD *)(a2 + 20) != 4)
  {
    v11 = 3446;
    goto LABEL_9;
  }
  v5 = **(uint64_t ***)(a1 + 72);
  if (!v5)
  {
LABEL_7:
    v11 = 3466;
LABEL_9:
    sub_2391BCBBC(v11, "lpp_transaction.c");
    return 0;
  }
  v9 = (_QWORD *)(a2 + 48);
  v10 = *(_DWORD *)(a2 + 28);
  while (*((_DWORD *)v5 + 4) != v10 || *((_DWORD *)v5 + 5) != *(_DWORD *)(a2 + 32))
  {
    v5 = (uint64_t *)*v5;
    if (!v5)
      goto LABEL_7;
  }
  if (v10 == 1)
    v14 = *((unsigned __int8 *)v5 + 64);
  else
    v14 = 0;
  if (*(_BYTE *)a3 == 1)
  {
    if (*(_DWORD *)v9 == 1)
    {
      v15 = *(_DWORD *)(a3 + 8);
      v16 = *(_DWORD *)(a2 + 60);
      if (v15 == v16 || v15 == 1 && (v16 - 1) <= 1)
      {
        if (*(_DWORD *)(a2 + 152) == 1)
        {
          if (*(_BYTE *)(a3 + 272) == 1)
          {
            *(_DWORD *)(a2 + 164) = 2;
LABEL_25:
            if (*(_DWORD *)(a2 + 168) != 3)
              goto LABEL_31;
            goto LABEL_30;
          }
          *(_DWORD *)(a2 + 164) = 3;
        }
        else
        {
          if (*(_DWORD *)(a2 + 156) != 1)
          {
LABEL_31:
            if (!*(_BYTE *)(a2 + 40))
              *(_BYTE *)(a2 + 40) = 1;
            sub_2391950C8(a1, (uint64_t)v9, a3, 0);
            goto LABEL_34;
          }
          if (*(_DWORD *)(a2 + 164) != 3)
            goto LABEL_25;
        }
LABEL_30:
        sub_2391950C8(a1, a2 + 48, a3, 1);
        goto LABEL_31;
      }
      v17 = 3568;
    }
    else
    {
      v17 = 3574;
    }
    sub_2391BCBBC(v17, "lpp_transaction.c");
  }
LABEL_34:
  if (*(_BYTE *)(a3 + 416) || *(_BYTE *)(a3 + 320) || *(_BYTE *)(a3 + 552) || *(_BYTE *)(a3 + 417))
  {
    if (*(_DWORD *)(a2 + 52) == 1)
    {
      if (*(_BYTE *)(a3 + 416) == 1)
      {
        *(_DWORD *)(a2 + 52) = 3;
        *(_DWORD *)(a2 + 156) = 0;
      }
      else if (*(_BYTE *)(a3 + 320) == 1 && !*(_DWORD *)(a3 + 328))
      {
        if (*(_DWORD *)(a2 + 156) == 1)
        {
          if (*(_BYTE *)(a3 + 409))
          {
            *(_DWORD *)(a2 + 168) = 2;
          }
          else
          {
            *(_DWORD *)(a2 + 168) = 3;
            sub_239195D10(a1, (uint64_t)v9, a3 + 328, 1);
          }
        }
        if (!*(_BYTE *)(a2 + 40))
          *(_BYTE *)(a2 + 40) = 1;
        sub_239195D10(a1, (uint64_t)v9, a3 + 328, 0);
      }
    }
    if (*(_DWORD *)(a2 + 56) == 1)
    {
      if (*(_BYTE *)(a3 + 552) == 1)
      {
        *(_DWORD *)(a2 + 56) = 3;
        *(_DWORD *)(a2 + 160) = 0;
      }
      else if (*(_BYTE *)(a3 + 417) == 1 && *(_DWORD *)(a3 + 424) == 3)
      {
        if (!*(_BYTE *)(a2 + 40))
          *(_BYTE *)(a2 + 40) = 1;
        sub_23919612C(a1, (uint64_t)v9, a3 + 424);
      }
    }
  }
  v118 = 0;
  v119[0] = 0;
  v18 = *(_DWORD *)(a2 + 76);
  if (v18 != 1)
  {
    if (!v18)
    {
      v19 = *(_DWORD *)(a2 + 60);
      if (v19)
        v20 = 1;
      else
        v20 = *(_QWORD *)(a2 + 88) == 0;
      if (!v20 || (v19 - 1) <= 1)
      {
        v21 = *(_DWORD *)(a2 + 152);
        if ((!v21 || v21 == 1 && *(_DWORD *)(a2 + 164) == 3) && *(_DWORD *)v9 == 1)
          *(_DWORD *)v9 = 5;
      }
      if (*(_QWORD *)(a2 + 96))
      {
        v22 = *(_DWORD *)(a2 + 156);
        if ((!v22 || v22 == 1 && *(_DWORD *)(a2 + 168) == 3) && *(_DWORD *)(a2 + 52) == 1)
          *(_DWORD *)(a2 + 52) = 5;
      }
      if (*(_QWORD *)(a2 + 104) && *(_DWORD *)(a2 + 56) == 1)
        *(_DWORD *)(a2 + 56) = 5;
      if (*(_DWORD *)v9 == 1 || *(_DWORD *)(a2 + 52) == 1 || *(_DWORD *)(a2 + 56) == 1)
      {
        v23 = *(_DWORD *)(a2 + 152);
        if (v23 != 1 && *(_DWORD *)(a2 + 156) != 1 && *(_DWORD *)(a2 + 160) != 1
          || *(_DWORD *)(a2 + 164) == 4
          || *(_DWORD *)(a2 + 168) == 4)
        {
          goto LABEL_269;
        }
      }
      else
      {
        v23 = *(_DWORD *)(a2 + 152);
      }
      if (v23 == 1 || *(_DWORD *)(a2 + 156) == 1 || *(_DWORD *)(a2 + 160) == 1)
      {
        v40 = *(char **)(a2 + 80);
        if (!v40)
        {
          v40 = (char *)malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
          *(_OWORD *)v40 = 0u;
          *((_OWORD *)v40 + 1) = 0u;
          *((_OWORD *)v40 + 2) = 0u;
          *((_OWORD *)v40 + 3) = 0u;
          *((_OWORD *)v40 + 4) = 0u;
          *((_OWORD *)v40 + 5) = 0u;
          *(_QWORD *)(a2 + 80) = v40;
        }
        v41 = *(_DWORD *)(a2 + 164);
        if (v41 == 2)
        {
          *(_WORD *)(v40 + 51) = 257;
          if (*(_DWORD *)(a2 + 152) == 1)
            *(_DWORD *)(a2 + 164) = 4;
          goto LABEL_139;
        }
        v42 = *(_DWORD *)(a2 + 168);
        if (v42 == 2 || (v43 = *(_DWORD *)(a2 + 172), v43 == 2))
        {
          *(_WORD *)(v40 + 51) = 257;
LABEL_139:
          if (*(_DWORD *)(a2 + 156) == 1 && *(_DWORD *)(a2 + 168) == 2)
            *(_DWORD *)(a2 + 168) = 4;
          goto LABEL_172;
        }
        v40[52] = 1;
        if (v41 == 3 || v42 == 3 || v43 == 3)
          v40[51] = 0;
      }
LABEL_172:
      if (sub_239194124(v9) || *(_QWORD *)(a2 + 80))
        goto LABEL_174;
      if (*(_QWORD *)(a2 + 88) || *(_QWORD *)(a2 + 96) || *(_QWORD *)(a2 + 104))
      {
        v94 = (char *)malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
        *(_OWORD *)v94 = 0u;
        *((_OWORD *)v94 + 1) = 0u;
        *((_OWORD *)v94 + 4) = 0u;
        *((_OWORD *)v94 + 5) = 0u;
        *((_OWORD *)v94 + 2) = 0u;
        *((_OWORD *)v94 + 3) = 0u;
        *(_QWORD *)(a2 + 80) = v94;
        v32 = 5;
        *(_WORD *)(v94 + 49) = 258;
        goto LABEL_175;
      }
LABEL_103:
      v32 = 6;
      goto LABEL_175;
    }
    v27 = *(_DWORD *)v9;
    if (*(_DWORD *)v9 == 1)
    {
      v28 = (_BYTE *)(a2 + 144);
      if (*(_BYTE *)(a2 + 144) == 1)
      {
        v114 = (int *)(v5 + 2);
        v113 = v14;
        memset(v120, 0, 3);
        v29 = *(_QWORD *)(a2 + 88);
        if (v29)
        {
          v30 = 0;
          v27 = 5;
          v31 = v9;
          *(_DWORD *)v9 = 5;
        }
        else
        {
          v31 = v9;
          v27 = 1;
          v30 = 1;
        }
LABEL_143:
        v44 = *(_QWORD *)(a2 + 96);
        if (v44 && *(_DWORD *)(a2 + 52) == 1)
          *(_DWORD *)(a2 + 52) = 5;
        if (sub_239194124(v31))
        {
          if (!v30 && (*(_BYTE *)(v29 + 352) == 1 || *(_BYTE *)(v29 + 176) == 1) && *(_DWORD *)(a2 + 52) == 1)
          {
            v45 = 0;
            HIBYTE(v120[0]) = 1;
            *(_DWORD *)(a2 + 52) = 5;
            v46 = *(_QWORD *)v114;
            do
            {
              if (*((_BYTE *)v120 + v45) == 1)
                sub_23918E4C4(a1, v46, v45, 1);
              ++v45;
            }
            while (v45 != 3);
            v44 = *(_QWORD *)(a2 + 96);
          }
          if (v44 && *(_BYTE *)(v44 + 184) == 1 && *(_DWORD *)v31 == 1)
          {
            v47 = 0;
            *(_WORD *)((char *)v120 + 1) = 0;
            *(_DWORD *)v31 = 5;
            LOBYTE(v120[0]) = 1;
            v48 = *(_QWORD *)v114;
            do
            {
              if (*((_BYTE *)v120 + v47) == 1)
                sub_23918E4C4(a1, v48, v47, 0);
              ++v47;
            }
            while (v47 != 3);
          }
        }
        else
        {
          if (v27 == 1 || *(_DWORD *)(a2 + 52) == 1 || *(_DWORD *)(a2 + 56) == 1)
          {
            v49 = 1;
            v32 = 6;
            goto LABEL_228;
          }
          v95 = *(_OWORD **)(a2 + 80);
          if (!v95)
          {
            v95 = malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
            *v95 = 0u;
            v95[1] = 0u;
            v95[2] = 0u;
            v95[3] = 0u;
            v95[4] = 0u;
            v95[5] = 0u;
            *(_QWORD *)(a2 + 80) = v95;
          }
          *((_BYTE *)v95 + 32) = 0;
          *((_WORD *)v95 + 24) = 768;
          *((_BYTE *)v95 + 50) = 1;
        }
        v49 = 0;
        *(_BYTE *)(a2 + 144) = 0;
        v32 = 5;
LABEL_228:
        v9 = v31;
        if (*v28)
          goto LABEL_268;
        v96 = *(_DWORD **)(a2 + 128);
        if (v96 && *(_DWORD *)v31 == 5)
          *(_DWORD *)v31 = 1;
        v97 = *(_DWORD *)(a2 + 52);
        if (v97 == 5)
        {
          v98 = *(_DWORD **)(a2 + 136);
          if (v98)
          {
            v97 = 1;
            *(_DWORD *)(a2 + 52) = 1;
            *v98 = 0;
            v99 = *(_DWORD *)(a2 + 48) == 1;
            goto LABEL_242;
          }
          v99 = *(_DWORD *)v31;
          if (*(_DWORD *)v31 == 1)
          {
            v97 = 5;
            goto LABEL_242;
          }
        }
        else
        {
          v99 = *(_DWORD *)v31;
          if (*(_DWORD *)v31 == 1)
            goto LABEL_242;
          if (v97 == 1)
            goto LABEL_241;
        }
        if (*(_DWORD *)(a2 + 56) != 1)
          goto LABEL_268;
LABEL_241:
        v99 = 0;
LABEL_242:
        v100 = *(unsigned __int8 *)(a2 + 145);
        if (v100 != 255)
          *(_BYTE *)(a2 + 145) = v100 - 1;
        v101 = 0;
        if (v99)
          v102 = v96;
        else
          v102 = 0;
        if (v97 == 1)
          v101 = *(_DWORD **)(a2 + 136);
        sub_23918E114(a1, v114, v113, v102, v101, (_BYTE *)&v118 + 1, v119, 0);
        if (*(_DWORD *)v31 == 1)
        {
          v103 = *(unsigned int **)(a2 + 128);
          if (v103)
          {
            v104 = 2;
            if (*(_DWORD *)(a1 + 108) == 4)
              v104 = 3;
            v105 = v104 | ((unint64_t)*((unsigned __int8 *)v5 + 16) << 32);
            v106 = *((_DWORD *)v5 + 5);
            *v103 *= 1000;
            sub_239198EDC(a1, v103, v105, v106, a2);
          }
        }
        for (i = 0; i != 3; ++i)
        {
          if (*((_DWORD *)v31 + i) == 1 && v119[i - 2] == 1)
            *((_DWORD *)v31 + i) = 3;
        }
        if (*(_DWORD *)v31 == 1 && (*(_DWORD *)(a2 + 52) == 1 || *(_DWORD *)(a2 + 56) == 1))
        {
          v108 = *(_DWORD **)(a2 + 128);
          if (!v108)
          {
LABEL_266:
            v110 = *(void **)(a2 + 136);
            if (v110)
            {
              free(v110);
              *(_QWORD *)(a2 + 136) = 0;
            }
LABEL_268:
            if ((v49 & 1) == 0)
            {
LABEL_175:
              if (v32 == 6)
              {
                v89 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
                bzero(v89, 0xA28uLL);
                *((_QWORD *)a4 + 3) = v89;
                *((_DWORD *)v89 + 6) = 6;
                *((_DWORD *)v89 + 8) = 0;
                *((_DWORD *)v89 + 10) = 0;
                *((_WORD *)v89 + 24) = 258;
                LOBYTE(v88) = 1;
                *a4 = 1;
              }
              else
              {
                if (*(_BYTE *)(a2 + 40))
                {
                  v115 = v9;
                  v50 = 0;
                  v51 = a2 + 88;
                  v52 = 24;
                  do
                  {
                    v53 = (char *)malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
                    bzero(v53, 0xA28uLL);
                    *(_QWORD *)&a4[v52] = v53;
                    bzero(v53 + 24, 0xA08uLL);
                    *((_DWORD *)v53 + 6) = 5;
                    if (*(_QWORD *)(v51 - 8))
                    {
                      v53[144] = 1;
                      v54 = *(_OWORD **)(v51 - 8);
                      v55 = v54[1];
                      *((_OWORD *)v53 + 3) = *v54;
                      *((_OWORD *)v53 + 4) = v55;
                      v56 = v54[2];
                      v57 = v54[3];
                      v58 = v54[5];
                      *((_OWORD *)v53 + 7) = v54[4];
                      *((_OWORD *)v53 + 8) = v58;
                      *((_OWORD *)v53 + 5) = v56;
                      *((_OWORD *)v53 + 6) = v57;
                      v59 = *(void **)(v51 - 8);
                      if (v59)
                      {
                        free(v59);
                        *(_QWORD *)(v51 - 8) = 0;
                      }
                    }
                    if (*(_QWORD *)v51)
                    {
                      v53[544] = 1;
                      memcpy(v53 + 152, *(const void **)v51, 0x188uLL);
                      if (*(_QWORD *)v51)
                      {
                        free(*(void **)v51);
                        *(_QWORD *)v51 = 0;
                      }
                    }
                    else if (*(_QWORD *)(v51 + 24)
                           && (*(_DWORD *)(v51 + 76) == 3 || *(_DWORD *)(v51 + 80) == 3 || *(_DWORD *)(v51 + 84) == 3))
                    {
                      v53[544] = 1;
                      memcpy(v53 + 152, *(const void **)(v51 + 24), 0x188uLL);
                      v60 = *(void **)(v51 + 24);
                      if (v60)
                      {
                        free(v60);
                        *(_QWORD *)(v51 + 24) = 0;
                      }
                    }
                    else if (*(_DWORD *)(v51 - 40) == 2)
                    {
                      v53[544] = 1;
                      v53[540] = 1;
                      *((_DWORD *)v53 + 127) = 1;
                      v53[512] = 0;
                    }
                    if (*(_QWORD *)(v51 + 8))
                    {
                      v53[1336] = 1;
                      v61 = *(__int128 **)(v51 + 8);
                      v62 = *v61;
                      v63 = v61[1];
                      *(_OWORD *)(v53 + 1128) = v61[2];
                      *(_OWORD *)(v53 + 1112) = v63;
                      *(_OWORD *)(v53 + 1096) = v62;
                      v64 = v61[3];
                      v65 = v61[4];
                      v66 = v61[6];
                      *(_OWORD *)(v53 + 1176) = v61[5];
                      *(_OWORD *)(v53 + 1192) = v66;
                      *(_OWORD *)(v53 + 1144) = v64;
                      *(_OWORD *)(v53 + 1160) = v65;
                      v67 = v61[7];
                      v68 = v61[8];
                      v69 = v61[10];
                      *(_OWORD *)(v53 + 1240) = v61[9];
                      *(_OWORD *)(v53 + 1256) = v69;
                      *(_OWORD *)(v53 + 1208) = v67;
                      *(_OWORD *)(v53 + 1224) = v68;
                      v70 = v61[11];
                      v71 = v61[12];
                      v72 = v61[14];
                      *(_OWORD *)(v53 + 1304) = v61[13];
                      *(_OWORD *)(v53 + 1320) = v72;
                      *(_OWORD *)(v53 + 1272) = v70;
                      *(_OWORD *)(v53 + 1288) = v71;
                      v73 = *(void **)(v51 + 8);
                      if (v73)
                      {
                        free(v73);
                        *(_QWORD *)(v51 + 8) = 0;
                      }
                    }
                    else if (*(_QWORD *)(v51 + 32))
                    {
                      v53[1336] = 1;
                      v74 = *(__int128 **)(v51 + 32);
                      v75 = *v74;
                      v76 = v74[1];
                      *(_OWORD *)(v53 + 1128) = v74[2];
                      *(_OWORD *)(v53 + 1112) = v76;
                      *(_OWORD *)(v53 + 1096) = v75;
                      v77 = v74[3];
                      v78 = v74[4];
                      v79 = v74[6];
                      *(_OWORD *)(v53 + 1176) = v74[5];
                      *(_OWORD *)(v53 + 1192) = v79;
                      *(_OWORD *)(v53 + 1144) = v77;
                      *(_OWORD *)(v53 + 1160) = v78;
                      v80 = v74[7];
                      v81 = v74[8];
                      v82 = v74[10];
                      *(_OWORD *)(v53 + 1240) = v74[9];
                      *(_OWORD *)(v53 + 1256) = v82;
                      *(_OWORD *)(v53 + 1208) = v80;
                      *(_OWORD *)(v53 + 1224) = v81;
                      v83 = v74[11];
                      v84 = v74[12];
                      v85 = v74[14];
                      *(_OWORD *)(v53 + 1304) = v74[13];
                      *(_OWORD *)(v53 + 1320) = v85;
                      *(_OWORD *)(v53 + 1272) = v83;
                      *(_OWORD *)(v53 + 1288) = v84;
                      v86 = *(void **)(v51 + 32);
                      if (v86)
                      {
                        free(v86);
                        *(_QWORD *)(v51 + 32) = 0;
                      }
                    }
                    else if (*(_DWORD *)(v51 - 36) == 2)
                    {
                      v53[1336] = 1;
                      v53[1332] = 1;
                      *((_DWORD *)v53 + 321) = 1;
                      v53[1288] = 0;
                    }
                    if (*(_QWORD *)(v51 + 16))
                    {
                      v53[2128] = 1;
                      memcpy(v53 + 1864, *(const void **)(v51 + 16), 0x108uLL);
                      v87 = *(void **)(v51 + 16);
                      if (v87)
                      {
                        free(v87);
                        *(_QWORD *)(v51 + 16) = 0;
                      }
                    }
                    else if (*(_DWORD *)(v51 - 32) == 2)
                    {
                      v53[2128] = 1;
                      v53[2124] = 1;
                      *((_DWORD *)v53 + 521) = 1;
                      v53[2088] = 0;
                    }
                    LOBYTE(v88) = *a4 + 1;
                    *a4 = v88;
                    ++v50;
                    v51 += 136;
                    v52 += 48;
                  }
                  while (v50 < *(unsigned __int8 *)(a2 + 40));
                  v9 = v115;
                }
                else
                {
                  LOBYTE(v88) = *a4;
                }
                if (!(_BYTE)v88)
                  goto LABEL_219;
              }
              v90 = 0;
              v91 = 24;
              do
              {
                v92 = *(_QWORD *)&a4[v91];
                *(_WORD *)(v92 + 2) = 1;
                *(_WORD *)v92 = *(_WORD *)(a2 + 16);
                if (*(_DWORD *)(a2 + 48) != 1 && *(_DWORD *)(a2 + 52) != 1 && *(_DWORD *)(a2 + 56) != 1)
                  *(_BYTE *)(v92 + 3) = (_DWORD)v90 == v88 - 1;
                *(_BYTE *)(v92 + 2592) = 1;
                *(_DWORD *)(v92 + 16) = 0;
                *(_DWORD *)(v92 + 24) = v32;
                v93 = *(_QWORD *)&a4[v91];
                if ((*(_DWORD *)(v93 + 24) - 5) <= 1)
                {
                  *(_WORD *)(v93 + 8) = 256;
                  *(_BYTE *)(v93 + 6) = 1;
                }
                ++v90;
                v88 = *a4;
                v91 += 48;
              }
              while (v90 < v88);
LABEL_219:
              v12 = 1;
              goto LABEL_270;
            }
            goto LABEL_269;
          }
          *(_DWORD *)(a2 + 148) = *v108;
        }
        v109 = *(void **)(a2 + 128);
        if (v109)
        {
          free(v109);
          *(_QWORD *)(a2 + 128) = 0;
        }
        goto LABEL_266;
      }
      if (*(_DWORD *)(a2 + 52) == 1 || *(_DWORD *)(a2 + 56) == 1)
        goto LABEL_269;
    }
    else
    {
      if (*(_DWORD *)(a2 + 52) != 1 && *(_DWORD *)(a2 + 56) != 1)
        goto LABEL_103;
      v28 = (_BYTE *)(a2 + 144);
      if (*(_BYTE *)(a2 + 144) == 1)
      {
        v114 = (int *)(v5 + 2);
        v113 = v14;
        v31 = v9;
        memset(v120, 0, 3);
        v29 = *(_QWORD *)(a2 + 88);
        v30 = v29 == 0;
        goto LABEL_143;
      }
    }
    if (!*(_QWORD *)(a2 + 88) && !*(_QWORD *)(a2 + 96) && !*(_QWORD *)(a2 + 104))
      goto LABEL_269;
    v33 = *(_BYTE *)(a2 + 146) + 1;
    *(_BYTE *)(a2 + 146) = v33;
    v34 = *(unsigned __int8 *)(a2 + 145);
    if (v34 != 255 && v34 <= v33)
    {
      v35 = 0;
      v36 = 0;
      v37 = 0;
      v117 = 0;
      do
      {
        if (*(_DWORD *)((char *)v9 + v35) == 1)
        {
          if (!v35)
          {
            v36 = 1;
            v37 = 1;
          }
          *(_DWORD *)((char *)v9 + v35) = 5;
        }
        v35 += 4;
      }
      while (v35 != 12);
      v116 = v36;
      if (v37 == 1)
      {
        v38 = 0;
        v39 = v5[2];
        do
        {
          if (*(&v116 + v38) == 1)
            sub_23918E4C4(a1, v39, v38, 0);
          ++v38;
        }
        while (v38 != 3);
      }
    }
    if (sub_239194124(v9))
      goto LABEL_174;
    v25 = *(_OWORD **)(a2 + 80);
    if (!v25)
    {
      v25 = malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
      *v25 = 0u;
      v25[1] = 0u;
      v25[2] = 0u;
      v25[3] = 0u;
      v25[4] = 0u;
      v25[5] = 0u;
      *(_QWORD *)(a2 + 80) = v25;
    }
    *((_BYTE *)v25 + 32) = 0;
    v26 = 768;
    goto LABEL_126;
  }
  v24 = *(_QWORD *)(a2 + 96);
  if (v24)
  {
    if (*(_BYTE *)(v24 + 184) == 1)
    {
LABEL_174:
      v32 = 5;
      goto LABEL_175;
    }
    v25 = *(_OWORD **)(a2 + 80);
    if (!v25)
    {
      v25 = malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
      *v25 = 0u;
      v25[1] = 0u;
      v25[2] = 0u;
      v25[3] = 0u;
      v25[4] = 0u;
      v25[5] = 0u;
      *(_QWORD *)(a2 + 80) = v25;
    }
    *((_BYTE *)v25 + 32) = 0;
    v26 = 512;
LABEL_126:
    *((_WORD *)v25 + 24) = v26;
    *((_BYTE *)v25 + 50) = 1;
    *((_BYTE *)v25 + 52) = 0;
    goto LABEL_174;
  }
  if (*(_DWORD *)(a2 + 52) != 5)
    goto LABEL_103;
LABEL_269:
  sub_2391BCBBC(3819, "lpp_transaction.c");
  v12 = 0;
LABEL_270:
  v111 = 0;
  for (j = 104; j != 110; j += 2)
  {
    if (*(_DWORD *)(a2 + 4 * v111 + 48) != 1
      && *((unsigned __int8 *)v5 + j) == *(unsigned __int8 *)(a2 + 16)
      && *((unsigned __int8 *)v5 + j + 1) == *(unsigned __int8 *)(a2 + 17))
    {
      *((_BYTE *)v5 + j) = 0;
      *((_BYTE *)v5 + j + 1) = 0;
      *((_BYTE *)v5 + v111 + 110) = 0;
    }
    ++v111;
  }
  if (*(_DWORD *)v9 != 1 && *(_DWORD *)(a2 + 52) != 1 && *(_DWORD *)(a2 + 56) != 1)
  {
    sub_2391976A8(a2, *(_DWORD *)(a2 + 24), 2);
    *(_DWORD *)(a2 + 24) = 2;
    sub_239194050(a2);
  }
  return v12;
}

void sub_2391950C8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  void *v8;
  uint64_t v9;
  void **v10;
  int v11;
  int v12;
  _OWORD *v13;
  _OWORD *v14;
  char v15;
  unsigned int v16;
  size_t v17;
  _BYTE *v18;
  char v19;
  uint64_t v20;
  int v21;
  char v22;
  _OWORD *v23;
  _OWORD *v24;
  int v25;
  char v26;
  int v27;
  _OWORD *v28;
  _OWORD *v29;
  char v30;
  unsigned __int8 v31;
  char v32;
  int v33;
  char v34;
  _OWORD *v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  unsigned __int16 v42;
  unsigned __int16 v43;
  unsigned __int16 v44;
  unsigned int v45;
  int v46;
  int v47;
  char v48;
  char v49;
  int v50;
  char v51;
  int v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _OWORD *v56;
  int v57;
  unsigned __int16 v58;
  unsigned __int16 v59;
  char __str[2];
  char v61[2];

  if (!a2 || !a3)
    return;
  v8 = *(void **)(a2 + 32);
  if (v8)
  {
    free(v8);
    *(_QWORD *)(a2 + 32) = 0;
  }
  if (a4 == 1)
    v9 = 64;
  else
    v9 = 40;
  if (a4 == 1)
    v10 = (void **)(a2 + 64);
  else
    v10 = (void **)(a2 + 40);
  sub_2391994EC(v10);
  v11 = *(_DWORD *)(a2 + 12);
  if ((v11 - 1) < 2)
  {
    v12 = *(_DWORD *)(a3 + 276);
    if (v12 != 1)
    {
      if (v12)
      {
        v23 = malloc_type_calloc(1uLL, 0x188uLL, 0x86CB5109uLL);
        *v23 = 0u;
        v23[1] = 0u;
        v23[2] = 0u;
        v23[3] = 0u;
        v23[4] = 0u;
        v23[5] = 0u;
        v23[6] = 0u;
        v23[7] = 0u;
        v23[8] = 0u;
        v23[9] = 0u;
        v23[10] = 0u;
        v23[11] = 0u;
        v23[12] = 0u;
        v23[13] = 0u;
        v23[14] = 0u;
        v23[15] = 0u;
        v23[16] = 0u;
        v23[17] = 0u;
        v23[18] = 0u;
        v23[19] = 0u;
        v23[20] = 0u;
        v23[21] = 0u;
        v23[22] = 0u;
        v23[23] = 0u;
        *((_QWORD *)v23 + 48) = 0;
        *(_QWORD *)(a2 + v9) = v23;
        *((_BYTE *)v23 + 388) = 1;
        *((_BYTE *)v23 + 360) = 1;
        *((_DWORD *)v23 + 89) = 1;
        return;
      }
      if ((*(_BYTE *)(a2 + 22) != 1 || (*(_BYTE *)(a3 + 128) & 1) == 0)
        && (*(_BYTE *)(a2 + 23) != 1 || (*(_BYTE *)(a3 + 128) & 0x10) == 0)
        && (*(_BYTE *)(a2 + 24) != 1 || (*(_BYTE *)(a3 + 128) & 0x20) == 0))
      {
LABEL_69:
        v35 = malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
        *v35 = 0u;
        v35[1] = 0u;
        v35[2] = 0u;
        v35[3] = 0u;
        v35[4] = 0u;
        v35[5] = 0u;
        *(_QWORD *)(a2 + 32) = v35;
        v36 = *(unsigned __int8 *)(a3 + 46);
        *((_BYTE *)v35 + 48) = v36;
        if (v36 == 1)
        {
          if (*(_DWORD *)(a3 + 60) == 1)
          {
            if (*(_DWORD *)(a3 + 72) == 1)
            {
              *((_DWORD *)v35 + 9) = 3;
              *((_WORD *)v35 + 20) = *(_WORD *)(a3 + 48);
              *(_WORD *)(*(_QWORD *)(a2 + 32) + 42) = *(_WORD *)(a3 + 50);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 45) = *(_BYTE *)(a3 + 68);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 44) = *(_DWORD *)(a3 + 64);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 46) = *(_BYTE *)(a3 + 56);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 47) = *(_BYTE *)(a3 + 76);
              goto LABEL_78;
            }
            *((_DWORD *)v35 + 9) = 1;
            *((_WORD *)v35 + 20) = *(_WORD *)(a3 + 48);
            *(_WORD *)(*(_QWORD *)(a2 + 32) + 42) = *(_WORD *)(a3 + 50);
            *(_BYTE *)(*(_QWORD *)(a2 + 32) + 45) = *(_BYTE *)(a3 + 68);
            v37 = *(_DWORD *)(a3 + 64);
          }
          else
          {
            if (*(_DWORD *)(a3 + 52) != 1)
            {
              *((_WORD *)v35 + 20) = *(_WORD *)(a3 + 48);
              *(_WORD *)(*(_QWORD *)(a2 + 32) + 42) = *(_WORD *)(a3 + 50);
              goto LABEL_78;
            }
            *((_DWORD *)v35 + 9) = 2;
            *((_WORD *)v35 + 20) = *(_WORD *)(a3 + 48);
            *(_WORD *)(*(_QWORD *)(a2 + 32) + 42) = *(_WORD *)(a3 + 50);
            LOBYTE(v37) = *(_BYTE *)(a3 + 56);
          }
          *(_BYTE *)(*(_QWORD *)(a2 + 32) + 44) = v37;
        }
LABEL_78:
        v38 = *(_QWORD *)(a2 + 32);
        if (v38)
        {
          *(_BYTE *)(v38 + 50) = 0;
          *(_BYTE *)(v38 + 32) = 1;
          switch(*(_WORD *)(a3 + 22))
          {
            case 0:
              *(_DWORD *)v38 = 0;
              *(_BYTE *)(v38 + 8) = *(_BYTE *)(a3 + 24);
              *(_DWORD *)(*(_QWORD *)(a2 + 32) + 12) = *(_DWORD *)(a3 + 28);
              *(_DWORD *)(*(_QWORD *)(a2 + 32) + 16) = *(_DWORD *)(a3 + 32);
              break;
            case 1:
              *(_DWORD *)v38 = 1;
              *(_BYTE *)(v38 + 8) = *(_BYTE *)(a3 + 24);
              *(_DWORD *)(*(_QWORD *)(a2 + 32) + 12) = *(_DWORD *)(a3 + 28);
              *(_DWORD *)(*(_QWORD *)(a2 + 32) + 16) = *(_DWORD *)(a3 + 32);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 20) = *(_BYTE *)(a3 + 44);
              break;
            case 3:
              *(_DWORD *)v38 = 2;
              *(_BYTE *)(v38 + 8) = *(_BYTE *)(a3 + 24);
              *(_DWORD *)(*(_QWORD *)(a2 + 32) + 12) = *(_DWORD *)(a3 + 28);
              *(_DWORD *)(*(_QWORD *)(a2 + 32) + 16) = *(_DWORD *)(a3 + 32);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 20) = *(_BYTE *)(a3 + 36);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 21) = *(_BYTE *)(a3 + 37);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 22) = *(_BYTE *)(a3 + 38);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 23) = *(_BYTE *)(a3 + 45);
              break;
            case 5:
              v39 = 3;
              goto LABEL_89;
            case 8:
              *(_DWORD *)v38 = 4;
              *(_BYTE *)(v38 + 8) = *(_BYTE *)(a3 + 24);
              *(_DWORD *)(*(_QWORD *)(a2 + 32) + 12) = *(_DWORD *)(a3 + 28);
              *(_DWORD *)(*(_QWORD *)(a2 + 32) + 16) = *(_DWORD *)(a3 + 32);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 20) = *(_BYTE *)(a3 + 39);
              *(_WORD *)(*(_QWORD *)(a2 + 32) + 22) = *(_DWORD *)(a3 + 40);
              break;
            case 9:
              *(_DWORD *)v38 = 5;
              *(_BYTE *)(v38 + 8) = *(_BYTE *)(a3 + 24);
              *(_DWORD *)(*(_QWORD *)(a2 + 32) + 12) = *(_DWORD *)(a3 + 28);
              *(_DWORD *)(*(_QWORD *)(a2 + 32) + 16) = *(_DWORD *)(a3 + 32);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 20) = *(_BYTE *)(a3 + 39);
              *(_WORD *)(*(_QWORD *)(a2 + 32) + 22) = *(_DWORD *)(a3 + 40);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 24) = *(_BYTE *)(a3 + 36);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 25) = *(_BYTE *)(a3 + 37);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 26) = *(_BYTE *)(a3 + 38);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 27) = *(_BYTE *)(a3 + 44);
              *(_BYTE *)(*(_QWORD *)(a2 + 32) + 28) = *(_BYTE *)(a3 + 45);
              break;
            case 0xA:
              v39 = 6;
LABEL_89:
              *(_DWORD *)v38 = v39;
              break;
            default:
              break;
          }
        }
        v40 = *(_QWORD *)(a2 + 32);
        if (*(_BYTE *)(a1 + 60) == 1)
        {
          *(_BYTE *)(v40 + 72) = 1;
          if (*(_WORD *)(a3 + 288))
          {
            *(_BYTE *)(v40 + 88) = 1;
            v41 = (char *)malloc_type_calloc(1uLL, 0xEuLL, 0x86CB5109uLL);
            *(_QWORD *)v41 = 0;
            *(_QWORD *)(v41 + 6) = 0;
            v42 = *(_WORD *)(a3 + 290);
            v43 = *(_WORD *)(a3 + 292);
            v44 = *(_WORD *)(a3 + 294);
            v58 = *(_WORD *)(a3 + 296);
            v59 = *(_WORD *)(a3 + 298);
            v45 = *(unsigned __int16 *)(a3 + 288) / 0xAu;
            snprintf(__str, 2uLL, "%.1d", *(_WORD *)(a3 + 288) % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v45 - 10 * ((6554 * v45) >> 16)));
            *v41 = v61[0];
            v41[1] = __str[0];
            snprintf(__str, 2uLL, "%.1d", v42 % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v42 / 0xAu - 10 * ((6554 * (v42 / 0xAu)) >> 16)));
            v41[2] = v61[0];
            v41[3] = __str[0];
            snprintf(__str, 2uLL, "%.1d", v43 % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v43 / 0xAu - 10 * ((6554 * (v43 / 0xAu)) >> 16)));
            v41[4] = v61[0];
            v41[5] = __str[0];
            snprintf(__str, 2uLL, "%.1d", v44 % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v44 / 0xAu - 10 * ((6554 * (v44 / 0xAu)) >> 16)));
            v41[6] = v61[0];
            v41[7] = __str[0];
            snprintf(__str, 2uLL, "%.1d", v58 % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v58 / 0xAu - 10 * ((6554 * (v58 / 0xAu)) >> 16)));
            v41[8] = v61[0];
            v41[9] = __str[0];
            snprintf(__str, 2uLL, "%.1d", v59 % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v59 / 0xAu - 10 * ((6554 * (v59 / 0xAu)) >> 16)));
            v41[10] = v61[0];
            v41[11] = __str[0];
            *((_WORD *)v41 + 6) = 90;
            *(_QWORD *)(*(_QWORD *)(a2 + 32) + 80) = v41;
          }
          else
          {
            *(_BYTE *)(v40 + 88) = 0;
          }
        }
        else
        {
          *(_BYTE *)(v40 + 72) = 0;
        }
        return;
      }
      v13 = malloc_type_calloc(1uLL, 0x188uLL, 0x86CB5109uLL);
      v14 = v13;
      *v13 = 0u;
      v13[1] = 0u;
      v13[2] = 0u;
      v13[3] = 0u;
      v13[4] = 0u;
      v13[5] = 0u;
      v13[6] = 0u;
      v13[7] = 0u;
      v13[8] = 0u;
      v13[9] = 0u;
      v13[10] = 0u;
      v13[11] = 0u;
      v13[12] = 0u;
      v13[13] = 0u;
      v13[14] = 0u;
      v13[15] = 0u;
      v13[16] = 0u;
      v13[17] = 0u;
      v13[18] = 0u;
      v13[19] = 0u;
      v13[20] = 0u;
      v13[21] = 0u;
      v13[22] = 0u;
      v13[23] = 0u;
      *((_QWORD *)v13 + 48) = 0;
      *(_QWORD *)(a2 + v9) = v13;
      *((_BYTE *)v13 + 352) = 1;
      if ((*(_BYTE *)(a2 + 22) != 1 || (v15 = *(_BYTE *)(a3 + 128)) == 0)
        && (*(_BYTE *)(a2 + 23) != 1 || (v15 = *(_BYTE *)(a3 + 128)) == 0))
      {
        if (*(_BYTE *)(a2 + 24) != 1)
          goto LABEL_36;
        v15 = *(_BYTE *)(a3 + 128);
        if (!v15)
          goto LABEL_36;
      }
      v16 = v15 & 1;
      if ((v15 & 0x10) != 0)
        v16 = 5;
      v17 = (v15 & 0x20) != 0 ? 6 : v16;
      if (!(_DWORD)v17)
        goto LABEL_36;
      *((_DWORD *)v13 + 85) = 1;
      *((_DWORD *)v13 + 84) = v17;
      v18 = malloc_type_calloc(1uLL, v17, 0x86CB5109uLL);
      bzero(v18, v17);
      *((_QWORD *)v14 + 43) = v18;
      v19 = *(_BYTE *)(a3 + 128);
      if ((v19 & 1) != 0)
      {
        *v18 = 1;
        v19 = *(_BYTE *)(a3 + 128);
        if ((v19 & 0x10) == 0)
        {
LABEL_34:
          if ((v19 & 0x20) != 0)
LABEL_35:
            *(_BYTE *)(*((_QWORD *)v14 + 43) + 5) = 1;
LABEL_36:
          v20 = *(unsigned int *)(a3 + 124);
          if ((_DWORD)v20 == 5)
          {
            *((_DWORD *)v14 + 46) = *(_DWORD *)(a3 + 16) % 0x36EE80u;
            *((_BYTE *)v14 + 190) = 0;
            v21 = *(unsigned __int8 *)(a3 + 20);
            if (v21 == 255)
            {
              v22 = 0;
            }
            else
            {
              *((_BYTE *)v14 + 191) = v21;
              v22 = 1;
            }
            v32 = 0;
            *((_BYTE *)v14 + 192) = v22;
          }
          else
          {
            *((_DWORD *)v14 + 46) = *(_DWORD *)(a3 + 116);
            v25 = *(unsigned __int16 *)(a3 + 120);
            if (v25 == 0xFFFF)
            {
              v26 = 0;
            }
            else
            {
              *((_WORD *)v14 + 94) = v25;
              v26 = 1;
            }
            *((_BYTE *)v14 + 190) = v26;
            v33 = *(unsigned __int8 *)(a3 + 122);
            if (v33 == 255)
            {
              v34 = 0;
            }
            else
            {
              *((_BYTE *)v14 + 191) = v33;
              v34 = 1;
            }
            *((_BYTE *)v14 + 192) = v34;
            v32 = byte_2391CB8B5[v20];
          }
          *((_BYTE *)v14 + 193) = v32;
          *((_BYTE *)v14 + 328) = 0;
          goto LABEL_69;
        }
      }
      else if ((*(_BYTE *)(a3 + 128) & 0x10) == 0)
      {
        goto LABEL_34;
      }
      *(_BYTE *)(*((_QWORD *)v14 + 43) + 4) = 1;
      if ((*(_BYTE *)(a3 + 128) & 0x20) == 0)
        goto LABEL_36;
      goto LABEL_35;
    }
    goto LABEL_41;
  }
  if (v11)
  {
    sub_2391BCBBC(6680, "lpp_transaction.c");
    return;
  }
  if (*(_DWORD *)(a3 + 276))
  {
LABEL_41:
    if (*(_DWORD *)a2 == 1)
      *(_DWORD *)a2 = 4;
    return;
  }
  if ((*(_BYTE *)(a3 + 136) & 1) != 0 && !*(_WORD *)(a3 + 144)
    || (*(_BYTE *)(a3 + 136) & 2) != 0 && !*(_WORD *)(a3 + 240))
  {
    v27 = 1;
    v28 = malloc_type_calloc(1uLL, 0x188uLL, 0x86CB5109uLL);
    v29 = v28;
    *v28 = 0u;
    v28[1] = 0u;
    v28[2] = 0u;
    v28[3] = 0u;
    v28[4] = 0u;
    v28[5] = 0u;
    v28[6] = 0u;
    v28[7] = 0u;
    v28[8] = 0u;
    v28[9] = 0u;
    v28[10] = 0u;
    v28[11] = 0u;
    v28[12] = 0u;
    v28[13] = 0u;
    v28[14] = 0u;
    v28[15] = 0u;
    v28[16] = 0u;
    v28[17] = 0u;
    v28[18] = 0u;
    v28[19] = 0u;
    v28[20] = 0u;
    v28[21] = 0u;
    v28[22] = 0u;
    v28[23] = 0u;
    *((_QWORD *)v28 + 48) = 0;
    *(_QWORD *)(a2 + v9) = v28;
    *((_BYTE *)v28 + 176) = 1;
    v30 = *(_BYTE *)(a3 + 136);
    if ((v30 & 1) != 0)
    {
      if (*(_WORD *)(a3 + 144))
      {
        v31 = 0;
        v27 = 1;
      }
      else
      {
        if (*(_DWORD *)(a3 + 156) == 1)
        {
          *(_DWORD *)v28 = *(_DWORD *)(a3 + 160);
          v46 = *(unsigned __int8 *)(a3 + 167);
        }
        else
        {
          *(_DWORD *)v28 = *(_DWORD *)(a3 + 148) % 0x36EE80u;
          v46 = *(unsigned __int8 *)(a3 + 152);
        }
        if (v46 != 255)
        {
          *((_BYTE *)v28 + 8) = 1;
          *((_BYTE *)v28 + 7) = v46;
        }
        v47 = *(unsigned __int16 *)(a3 + 164);
        v27 = 0;
        if (v47 == 0xFFFF)
        {
          *((_BYTE *)v28 + 6) = 0;
          v31 = 1;
        }
        else
        {
          v31 = 1;
          *((_BYTE *)v28 + 6) = 1;
          *((_WORD *)v28 + 2) = v47;
        }
      }
    }
    else
    {
      v31 = 0;
    }
    if ((v30 & 2) != 0)
    {
      v48 = *(_BYTE *)(a3 + 256);
      if (v48)
      {
        if (!*(_WORD *)(a3 + 240))
        {
          if (v27)
          {
            if (*(_BYTE *)(a3 + 242) == 1)
              v49 = byte_2391CB8B5[*(unsigned int *)(a3 + 244)];
            else
              v49 = 3;
            *((_BYTE *)v28 + 9) = v49;
            *(_DWORD *)v28 = *(_DWORD *)(a3 + 248);
            v50 = *(unsigned __int8 *)(a3 + 255);
            if (v50 == 255)
            {
              v51 = 0;
            }
            else
            {
              *((_BYTE *)v28 + 7) = v50;
              v51 = 1;
            }
            *((_BYTE *)v28 + 8) = v51;
            v52 = *(unsigned __int16 *)(a3 + 252);
            if (v52 == 0xFFFF)
            {
              *((_BYTE *)v28 + 6) = 0;
            }
            else
            {
              *((_BYTE *)v28 + 6) = 1;
              *((_WORD *)v28 + 2) = v52;
            }
          }
          v31 += v48;
        }
      }
    }
    if (v31)
    {
      v53 = v31;
      *((_DWORD *)v28 + 42) = v31;
      *((_DWORD *)v28 + 43) = 1;
      v54 = (char *)malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
      *(_OWORD *)(v54 + 8) = 0u;
      *(_OWORD *)(v54 + 24) = 0u;
      *((_QWORD *)v29 + 19) = v54;
      *(_QWORD *)v54 = 0;
      *((_QWORD *)v29 + 20) = v54;
      if ((_DWORD)v53 != 1)
      {
        v55 = v53 - 1;
        do
        {
          v56 = malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
          *v56 = 0u;
          v56[1] = 0u;
          *((_QWORD *)v56 + 4) = 0;
          **((_QWORD **)v29 + 20) = v56;
          *((_QWORD *)v29 + 20) = v56;
          --v55;
        }
        while (v55);
      }
      if ((*(_BYTE *)(a3 + 136) & 1) != 0 && !*(_WORD *)(a3 + 144))
      {
        sub_23919656C(*((_QWORD *)v29 + 19), a3 + 8);
        v57 = 1;
        if ((*(_BYTE *)(a3 + 136) & 2) == 0)
          return;
      }
      else
      {
        v57 = 0;
        if ((*(_BYTE *)(a3 + 136) & 2) == 0)
          return;
      }
      if (!*(_WORD *)(a3 + 240))
        sub_2391966AC((_QWORD *)v29 + 19, a3 + 8, v57);
    }
  }
  else if ((*(_BYTE *)(a3 + 136) & 1) != 0 && *(_WORD *)(a3 + 144)
         || (*(_BYTE *)(a3 + 136) & 2) != 0 && *(_WORD *)(a3 + 240))
  {
    v24 = malloc_type_calloc(1uLL, 0x188uLL, 0x86CB5109uLL);
    *v24 = 0u;
    v24[1] = 0u;
    v24[2] = 0u;
    v24[3] = 0u;
    v24[4] = 0u;
    v24[5] = 0u;
    v24[6] = 0u;
    v24[7] = 0u;
    v24[8] = 0u;
    v24[9] = 0u;
    v24[10] = 0u;
    v24[11] = 0u;
    v24[12] = 0u;
    v24[13] = 0u;
    v24[14] = 0u;
    v24[15] = 0u;
    v24[16] = 0u;
    v24[17] = 0u;
    v24[18] = 0u;
    v24[19] = 0u;
    v24[20] = 0u;
    v24[21] = 0u;
    v24[22] = 0u;
    v24[23] = 0u;
    *((_QWORD *)v24 + 48) = 0;
    *(_QWORD *)(a2 + v9) = v24;
    *((_BYTE *)v24 + 388) = 1;
    *((_DWORD *)v24 + 89) = 1;
    *((_BYTE *)v24 + 360) = 1;
  }
}

void sub_239195D10(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  _QWORD *v8;
  _QWORD *v9;
  void **v10;
  int v11;
  _OWORD *v12;
  int v13;
  int *v14;
  uint64_t v15;
  char *v16;
  unsigned int v17;
  unsigned int v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  _OWORD *v22;
  int v23;
  _QWORD *v24;
  uint64_t v25;

  v8 = (_QWORD *)(a2 + 48);
  v9 = (_QWORD *)(a2 + 72);
  if (a4 == 1)
    v10 = (void **)(a2 + 72);
  else
    v10 = (void **)(a2 + 48);
  sub_239199530(v10);
  v11 = *(_DWORD *)(a3 + 4);
  if (v11 == 7)
  {
    v13 = 5;
    goto LABEL_17;
  }
  if (v11)
  {
    if (a4 == 1)
    {
      if (!*v9)
      {
        v12 = malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
        *v12 = 0u;
        v12[1] = 0u;
        v12[2] = 0u;
        v12[3] = 0u;
        v12[4] = 0u;
        v12[5] = 0u;
        v12[6] = 0u;
        v12[7] = 0u;
        v12[8] = 0u;
        v12[9] = 0u;
        v12[10] = 0u;
        v12[11] = 0u;
        v12[12] = 0u;
        v12[13] = 0u;
        v12[14] = 0u;
        *v9 = v12;
LABEL_22:
        *(_DWORD *)(a2 + 4) = 4;
LABEL_23:
        *((_BYTE *)v12 + 184) = 0;
        *((_BYTE *)v12 + 236) = 1;
        *((_DWORD *)v12 + 47) = 1;
        *((_BYTE *)v12 + 192) = 0;
        return;
      }
    }
    else if (!*v8)
    {
      v12 = malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
      *v12 = 0u;
      v12[1] = 0u;
      v12[2] = 0u;
      v12[3] = 0u;
      v12[4] = 0u;
      v12[5] = 0u;
      v12[6] = 0u;
      v12[7] = 0u;
      v12[8] = 0u;
      v12[9] = 0u;
      v12[10] = 0u;
      v12[11] = 0u;
      v12[12] = 0u;
      v12[13] = 0u;
      v12[14] = 0u;
      *v8 = v12;
      goto LABEL_22;
    }
    v13 = 4;
LABEL_17:
    *(_DWORD *)(a2 + 4) = v13;
    return;
  }
  if (*(_BYTE *)(a3 + 8))
  {
    if (*(_BYTE *)(a3 + 81))
      return;
    if (a4 == 1)
    {
      if (*v9)
        return;
      v12 = malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
      *v12 = 0u;
      v12[1] = 0u;
      v12[2] = 0u;
      v12[3] = 0u;
      v12[4] = 0u;
      v12[5] = 0u;
      v12[6] = 0u;
      v12[7] = 0u;
      v12[8] = 0u;
      v12[9] = 0u;
      v12[10] = 0u;
      v12[11] = 0u;
      v12[12] = 0u;
      v12[13] = 0u;
      v12[14] = 0u;
      *v9 = v12;
      goto LABEL_23;
    }
    if (!*v8)
    {
      v12 = malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
      *v12 = 0u;
      v12[1] = 0u;
      v12[2] = 0u;
      v12[3] = 0u;
      v12[4] = 0u;
      v12[5] = 0u;
      v12[6] = 0u;
      v12[7] = 0u;
      v12[8] = 0u;
      v12[9] = 0u;
      v12[10] = 0u;
      v12[11] = 0u;
      v12[12] = 0u;
      v12[13] = 0u;
      v12[14] = 0u;
      *v8 = v12;
      goto LABEL_23;
    }
  }
  else
  {
    if (a4 == 1)
    {
      if (*v9)
        return;
      v14 = (int *)malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
      *(_OWORD *)v14 = 0u;
      *((_OWORD *)v14 + 1) = 0u;
      *((_OWORD *)v14 + 2) = 0u;
      *((_OWORD *)v14 + 3) = 0u;
      *((_OWORD *)v14 + 4) = 0u;
      *((_OWORD *)v14 + 5) = 0u;
      *((_OWORD *)v14 + 6) = 0u;
      *((_OWORD *)v14 + 7) = 0u;
      *((_OWORD *)v14 + 8) = 0u;
      *((_OWORD *)v14 + 9) = 0u;
      *((_OWORD *)v14 + 10) = 0u;
      *((_OWORD *)v14 + 11) = 0u;
      *((_OWORD *)v14 + 12) = 0u;
      *((_OWORD *)v14 + 13) = 0u;
      *((_OWORD *)v14 + 14) = 0u;
      *v9 = v14;
    }
    else
    {
      if (*v8)
        return;
      v14 = (int *)malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
      *(_OWORD *)v14 = 0u;
      *((_OWORD *)v14 + 1) = 0u;
      *((_OWORD *)v14 + 2) = 0u;
      *((_OWORD *)v14 + 3) = 0u;
      *((_OWORD *)v14 + 4) = 0u;
      *((_OWORD *)v14 + 5) = 0u;
      *((_OWORD *)v14 + 6) = 0u;
      *((_OWORD *)v14 + 7) = 0u;
      *((_OWORD *)v14 + 8) = 0u;
      *((_OWORD *)v14 + 9) = 0u;
      *((_OWORD *)v14 + 10) = 0u;
      *((_OWORD *)v14 + 11) = 0u;
      *((_OWORD *)v14 + 12) = 0u;
      *((_OWORD *)v14 + 13) = 0u;
      *((_OWORD *)v14 + 14) = 0u;
      *v8 = v14;
    }
    *((_BYTE *)v14 + 184) = 1;
    *((_BYTE *)v14 + 236) = 0;
    *((_BYTE *)v14 + 152) = 0;
    if (*(_BYTE *)(a3 + 16) == 1)
    {
      if (*(_QWORD *)(a3 + 64))
      {
        *((_BYTE *)v14 + 152) = 1;
        v15 = (uint64_t)v14;
      }
      else
      {
        *((_QWORD *)v14 + 22) = 0x100000001;
        v16 = (char *)malloc_type_calloc(1uLL, 0xA0uLL, 0x86CB5109uLL);
        *(_OWORD *)(v16 + 24) = 0u;
        *(_OWORD *)(v16 + 40) = 0u;
        *(_OWORD *)(v16 + 56) = 0u;
        *(_OWORD *)(v16 + 72) = 0u;
        *(_OWORD *)(v16 + 88) = 0u;
        *(_OWORD *)(v16 + 104) = 0u;
        *(_OWORD *)(v16 + 120) = 0u;
        *(_OWORD *)(v16 + 136) = 0u;
        *((_QWORD *)v16 + 19) = 0;
        *(_OWORD *)(v16 + 8) = 0u;
        v15 = (uint64_t)(v16 + 8);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v14 + 20) = v16;
        *((_QWORD *)v14 + 21) = v16;
      }
      sub_2391969C8(v15, a3 + 20);
    }
    if (*(_QWORD *)(a3 + 64))
    {
      *((_BYTE *)v14 + 184) = 1;
      v17 = *(unsigned __int8 *)(a3 + 60);
      if (v17 >= 0x20)
        v17 = 32;
      v14[44] = v17;
      if (*(_BYTE *)(a1 + 62))
      {
        v18 = *(unsigned __int8 *)(a1 + 63);
        if (v17 > v18)
        {
          v14[44] = v18;
          v17 = v18;
        }
      }
      if (v17)
      {
        v14[45] = 1;
        v19 = (char *)malloc_type_calloc(1uLL, 0xA0uLL, 0x86CB5109uLL);
        *(_OWORD *)(v19 + 8) = 0u;
        *(_OWORD *)(v19 + 24) = 0u;
        *(_OWORD *)(v19 + 40) = 0u;
        *(_OWORD *)(v19 + 56) = 0u;
        *(_OWORD *)(v19 + 72) = 0u;
        *(_OWORD *)(v19 + 88) = 0u;
        *(_OWORD *)(v19 + 104) = 0u;
        *(_OWORD *)(v19 + 120) = 0u;
        *(_OWORD *)(v19 + 136) = 0u;
        *((_QWORD *)v19 + 19) = 0;
        *(_QWORD *)v19 = 0;
        *((_QWORD *)v14 + 20) = v19;
        *((_QWORD *)v14 + 21) = v19;
        LODWORD(v20) = v14[44];
        if (v20 >= 2)
        {
          v21 = 1;
          do
          {
            v22 = malloc_type_calloc(1uLL, 0xA0uLL, 0x86CB5109uLL);
            *v22 = 0u;
            v22[1] = 0u;
            v22[2] = 0u;
            v22[3] = 0u;
            v22[4] = 0u;
            v22[5] = 0u;
            v22[6] = 0u;
            v22[7] = 0u;
            v22[8] = 0u;
            v22[9] = 0u;
            **((_QWORD **)v14 + 21) = v22;
            *((_QWORD *)v14 + 21) = v22;
            ++v21;
            v20 = v14[44];
          }
          while (v21 < v20);
        }
        if ((int)v20 >= 1)
        {
          v23 = 0;
          v24 = v14 + 40;
          v25 = *(_QWORD *)(a3 + 64);
          do
          {
            v24 = (_QWORD *)*v24;
            sub_2391969C8((uint64_t)(v24 + 1), v25);
            ++v23;
            v25 += 40;
          }
          while (v14[44] > v23);
        }
      }
    }
  }
}

void sub_23919612C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int **v6;
  int *v7;
  int v8;
  int *v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  int v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = (int **)(a2 + 56);
  sub_239199574((void **)(a2 + 56));
  if (*(_DWORD *)(a3 + 4))
  {
    v7 = (int *)malloc_type_calloc(1uLL, 0x108uLL, 0x86CB5109uLL);
    *(_OWORD *)v7 = 0u;
    *((_OWORD *)v7 + 1) = 0u;
    *((_OWORD *)v7 + 2) = 0u;
    *((_OWORD *)v7 + 3) = 0u;
    *((_OWORD *)v7 + 4) = 0u;
    *((_OWORD *)v7 + 5) = 0u;
    *((_OWORD *)v7 + 6) = 0u;
    *((_OWORD *)v7 + 7) = 0u;
    *((_OWORD *)v7 + 8) = 0u;
    *((_OWORD *)v7 + 9) = 0u;
    *((_OWORD *)v7 + 10) = 0u;
    *((_OWORD *)v7 + 11) = 0u;
    *((_OWORD *)v7 + 12) = 0u;
    *((_OWORD *)v7 + 13) = 0u;
    *((_OWORD *)v7 + 14) = 0u;
    *((_OWORD *)v7 + 15) = 0u;
    *((_QWORD *)v7 + 32) = 0;
    *(_QWORD *)(a2 + 56) = v7;
    *(_DWORD *)(a2 + 8) = 4;
LABEL_4:
    *((_BYTE *)v7 + 216) = 0;
    *((_BYTE *)v7 + 260) = 1;
    v7[55] = 1;
    *((_BYTE *)v7 + 224) = 0;
    return;
  }
  v8 = *(unsigned __int8 *)(a3 + 8);
  v9 = (int *)malloc_type_calloc(1uLL, 0x108uLL, 0x86CB5109uLL);
  v7 = v9;
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *((_OWORD *)v9 + 5) = 0u;
  *((_OWORD *)v9 + 6) = 0u;
  *((_OWORD *)v9 + 7) = 0u;
  *((_OWORD *)v9 + 8) = 0u;
  *((_OWORD *)v9 + 9) = 0u;
  *((_OWORD *)v9 + 10) = 0u;
  *((_OWORD *)v9 + 11) = 0u;
  *((_OWORD *)v9 + 12) = 0u;
  *((_OWORD *)v9 + 13) = 0u;
  *((_OWORD *)v9 + 14) = 0u;
  *((_OWORD *)v9 + 15) = 0u;
  *((_QWORD *)v9 + 32) = 0;
  *v6 = v9;
  if (v8)
    goto LABEL_4;
  *((_BYTE *)v9 + 216) = 1;
  *((_BYTE *)v9 + 208) = 0;
  sub_239196C98((uint64_t)v9, a3 + 16);
  if (*(_QWORD *)(a3 + 104))
  {
    v10 = *(unsigned __int8 *)(a3 + 96);
    if (*(_BYTE *)(a3 + 96))
    {
      *((_BYTE *)v7 + 208) = 1;
      v11 = v10 >= 0x20 ? 32 : v10;
      v7[50] = v11;
      if (!*(_BYTE *)(a1 + 66) || (v12 = *(unsigned __int8 *)(a1 + 67), v11 <= v12) || (v7[50] = v12) != 0)
      {
        v7[51] = 1;
        v13 = (char *)malloc_type_calloc(1uLL, 0xC0uLL, 0x86CB5109uLL);
        *(_OWORD *)(v13 + 8) = 0u;
        *(_OWORD *)(v13 + 24) = 0u;
        *(_OWORD *)(v13 + 40) = 0u;
        *(_OWORD *)(v13 + 56) = 0u;
        *(_OWORD *)(v13 + 72) = 0u;
        *(_OWORD *)(v13 + 88) = 0u;
        *(_OWORD *)(v13 + 104) = 0u;
        *(_OWORD *)(v13 + 120) = 0u;
        *(_OWORD *)(v13 + 136) = 0u;
        *(_OWORD *)(v13 + 152) = 0u;
        *(_OWORD *)(v13 + 168) = 0u;
        *((_QWORD *)v13 + 23) = 0;
        *(_QWORD *)v13 = 0;
        *((_QWORD *)v7 + 23) = v13;
        *((_QWORD *)v7 + 24) = v13;
        LODWORD(v14) = v7[50];
        if (v14 >= 2)
        {
          v15 = 1;
          do
          {
            v16 = malloc_type_calloc(1uLL, 0xC0uLL, 0x86CB5109uLL);
            *v16 = 0u;
            v16[1] = 0u;
            v16[2] = 0u;
            v16[3] = 0u;
            v16[4] = 0u;
            v16[5] = 0u;
            v16[6] = 0u;
            v16[7] = 0u;
            v16[8] = 0u;
            v16[9] = 0u;
            v16[10] = 0u;
            v16[11] = 0u;
            **((_QWORD **)v7 + 24) = v16;
            *((_QWORD *)v7 + 24) = v16;
            ++v15;
            v14 = v7[50];
          }
          while (v15 < v14);
        }
        if ((int)v14 >= 1)
        {
          v17 = 0;
          v18 = v7 + 46;
          v19 = *(_QWORD *)(a3 + 104);
          do
          {
            v18 = (_QWORD *)*v18;
            sub_239196C98((uint64_t)(v18 + 1), v19);
            ++v17;
            v19 += 80;
          }
          while (v7[50] > v17);
        }
      }
    }
  }
}

uint64_t sub_23919636C(uint64_t result, unsigned __int8 *a2, uint64_t a3, int a4)
{
  unsigned __int16 v6;
  unsigned int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int16 v15;
  char v16;
  char v17;

  if (a4 == 1)
  {
    v6 = *((_WORD *)a2 + 1);
    v7 = ((unsigned __int16)(v6 - ((9363 * v6) >> 16)) >> 1) + ((9363 * v6) >> 16);
    *(_WORD *)a3 = (v7 >> 2) & 0x3FF;
    v8 = 1000 * *((_DWORD *)a2 + 1) + 86400000 * (unsigned __int16)(v6 - 7 * (v7 >> 2));
    *(_DWORD *)(a3 + 4) = v8;
    if (a2[10] == 1)
    {
      v8 += *((unsigned __int16 *)a2 + 4);
      *(_DWORD *)(a3 + 4) = v8;
    }
    *(_OWORD *)(a3 + 186) = 0u;
    *(_OWORD *)(a3 + 170) = 0u;
    *(_OWORD *)(a3 + 154) = 0u;
    *(_OWORD *)(a3 + 138) = 0u;
    *(_OWORD *)(a3 + 122) = 0u;
    *(_OWORD *)(a3 + 106) = 0u;
    *(_OWORD *)(a3 + 90) = 0u;
    *(_OWORD *)(a3 + 74) = 0u;
    if (a2[64] == 1 && (v9 = *((unsigned int *)a2 + 14), (v9 - 1) <= 0x3F))
    {
      v10 = 0;
      v11 = a2 + 40;
      v12 = a3 + 80;
      do
      {
        v13 = v10;
        v11 = *(unsigned __int8 **)v11;
        *(_BYTE *)(v12 - 6) = v11[8] - 1;
        *(_WORD *)(v12 - 4) = *((_WORD *)v11 + 5);
        *(_BYTE *)(v12 - 2) = v11[12];
        *(_WORD *)(v12 - 1) = *(_WORD *)(v11 + 13);
        ++v10;
        if (v13 > 0xE)
          break;
        v12 += 8;
      }
      while (v10 < v9);
    }
    else
    {
      LOBYTE(v10) = 0;
    }
    *(_BYTE *)(a3 + 72) = v10;
    v16 = -1;
    if (a2[73] == 1)
      v16 = a2[72];
    *(_BYTE *)(a3 + 8) = v16;
    *(_DWORD *)(result + 112) = v8;
    *(_BYTE *)(result + 116) = v16;
    *(_BYTE *)(a3 + 2) = -1;
  }
  else
  {
    v14 = *a2;
    *(_DWORD *)(a3 + 16) = byte_2391CB8BB[v14];
    *(_BYTE *)a3 = 1;
    *(_WORD *)(a3 + 2) = *((_WORD *)a2 + 1) & 0x1FFF;
    *(_DWORD *)(a3 + 8) = *((_DWORD *)a2 + 1);
    if (a2[10] == 1)
      v15 = *((_WORD *)a2 + 4);
    else
      v15 = 0;
    *(_WORD *)(a3 + 12) = v15;
    if ((_DWORD)v14 == 4 && a2[32] == 1)
      result = sub_239199230((uint64_t)(a2 + 16), *((_DWORD *)a2 + 4), (_BYTE *)(a3 + 20));
    else
      *(_BYTE *)(a3 + 20) = 0;
    v17 = -1;
    if (a2[73] == 1)
    {
      if (a2[104])
        v17 = -1;
      else
        v17 = a2[72];
    }
    *(_BYTE *)(a3 + 14) = v17;
    *(_BYTE *)(a3 + 4) = -1;
  }
  return result;
}

uint64_t sub_23919656C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  _QWORD *v12;

  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 32) = 0x100000001;
  result = (uint64_t)malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
  *(_QWORD *)(result + 9) = 0;
  *(_QWORD *)(result + 25) = 0;
  *(_QWORD *)(result + 17) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)result = 0;
  *(_QWORD *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 24) = result;
  *(_BYTE *)(result + 8) = 0;
  v5 = *(unsigned __int8 *)(a2 + 216);
  if (v5 == 255)
  {
    v6 = 0;
  }
  else
  {
    *(_BYTE *)(result + 11) = v5;
    v6 = 1;
  }
  *(_BYTE *)(result + 12) = v6;
  if (*(_BYTE *)(a2 + 217))
  {
    *(_DWORD *)(result + 32) = *(unsigned __int8 *)(a2 + 217);
    *(_DWORD *)(result + 36) = 1;
    result = (uint64_t)malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    v7 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(v7 + 16) = result;
    *(_QWORD *)(v7 + 24) = result;
    LODWORD(v8) = *(unsigned __int8 *)(a2 + 217);
    if (v8 >= 2)
    {
      v9 = 1;
      do
      {
        result = (uint64_t)malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
        *(_OWORD *)result = 0u;
        *(_OWORD *)(result + 16) = 0u;
        *(_OWORD *)(result + 32) = 0u;
        v7 = *(_QWORD *)(a1 + 16);
        **(_QWORD **)(v7 + 24) = result;
        *(_QWORD *)(v7 + 24) = result;
        ++v9;
        v8 = *(unsigned __int8 *)(a2 + 217);
      }
      while (v9 < v8);
    }
    if ((_DWORD)v8)
    {
      v10 = 0;
      v11 = *(_QWORD *)(a2 + 224);
      v12 = (_QWORD *)(v7 + 16);
      do
      {
        v12 = (_QWORD *)*v12;
        result = sub_2391970F4((uint64_t)(v12 + 1), v11);
        ++v10;
        v11 += 36;
      }
      while (v10 < *(unsigned __int8 *)(a2 + 217));
    }
  }
  return result;
}

void sub_2391966AC(_QWORD *a1, uint64_t a2, int a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  unsigned int v24;
  uint64_t v25;
  _QWORD *v26;

  v4 = a1;
  if (a3 == 1)
    v4 = (_QWORD *)*a1;
  if (*(_BYTE *)(a2 + 248))
  {
    v5 = 0;
    v6 = *(_QWORD *)(a2 + 256);
    while (1)
    {
      v7 = *(unsigned int *)(v6 + 16 * v5);
      v4 = (_QWORD *)*v4;
      *((_BYTE *)v4 + 8) = byte_2391CB8AE[v7];
      if ((_DWORD)v7 != 3 && (_DWORD)v7 != 5)
      {
        sub_2391BCBBC(1166, "lpp_transaction.c");
        v6 = *(_QWORD *)(a2 + 256);
      }
      if (*(_BYTE *)(v6 + 16 * v5 + 4))
      {
        *((_DWORD *)v4 + 8) = *(unsigned __int8 *)(v6 + 16 * v5 + 4);
        *((_DWORD *)v4 + 9) = 1;
        v9 = (char *)malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        v4[2] = v9;
        v10 = v4 + 2;
        *(_QWORD *)v9 = 0;
        v4[3] = v9;
        v6 = *(_QWORD *)(a2 + 256);
        LODWORD(v11) = *(unsigned __int8 *)(v6 + 16 * v5 + 4);
        if (v11 >= 2)
        {
          v12 = 1;
          do
          {
            v13 = malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
            *v13 = 0u;
            v13[1] = 0u;
            *((_QWORD *)v13 + 4) = 0;
            *(_QWORD *)v4[3] = v13;
            v4[3] = v13;
            ++v12;
            v6 = *(_QWORD *)(a2 + 256);
            v11 = *(unsigned __int8 *)(v6 + 16 * v5 + 4);
          }
          while (v12 < v11);
        }
        if ((_DWORD)v11)
          break;
      }
LABEL_28:
      if (++v5 >= (unint64_t)*(unsigned __int8 *)(a2 + 248))
        return;
    }
    v14 = 0;
    while (1)
    {
      v15 = 0;
      v10 = (_QWORD *)*v10;
      *((_BYTE *)v10 + 8) = 0;
      v16 = (unsigned __int8 *)(*(_QWORD *)(v6 + 16 * v5 + 8) + 16 * v14);
      v17 = v16[4];
      *((_BYTE *)v10 + 12) = v17;
      if (v17 == 1)
        v15 = v16[5];
      *((_BYTE *)v10 + 11) = v15;
      v18 = v16[6];
      if (v18)
        break;
      v6 = *(_QWORD *)(a2 + 256);
      v20 = *(_QWORD *)(v6 + 16 * v5 + 8);
      if (*(_BYTE *)(v20 + 16 * v14 + 6))
        goto LABEL_25;
LABEL_27:
      if (++v14 >= (unint64_t)*(unsigned __int8 *)(v6 + 16 * v5 + 4))
        goto LABEL_28;
    }
    *((_DWORD *)v10 + 8) = v18;
    *((_DWORD *)v10 + 9) = 1;
    v19 = (char *)malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
    *(_OWORD *)(v19 + 8) = 0u;
    *(_OWORD *)(v19 + 24) = 0u;
    *((_QWORD *)v19 + 5) = 0;
    *(_QWORD *)v19 = 0;
    v10[2] = v19;
    v10[3] = v19;
    v6 = *(_QWORD *)(a2 + 256);
    v20 = *(_QWORD *)(v6 + 16 * v5 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v20 + 16 * v14 + 6);
    if (v21 >= 2)
    {
      v22 = 1;
      do
      {
        v23 = malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
        *v23 = 0u;
        v23[1] = 0u;
        v23[2] = 0u;
        *(_QWORD *)v10[3] = v23;
        v10[3] = v23;
        ++v22;
        v6 = *(_QWORD *)(a2 + 256);
        v20 = *(_QWORD *)(v6 + 16 * v5 + 8);
        v21 = *(unsigned __int8 *)(v20 + 16 * v14 + 6);
      }
      while (v22 < v21);
    }
    if (!(_DWORD)v21)
      goto LABEL_27;
LABEL_25:
    v24 = 0;
    v25 = *(_QWORD *)(v20 + 16 * v14 + 8);
    v26 = v10 + 2;
    do
    {
      v26 = (_QWORD *)*v26;
      sub_2391970F4((uint64_t)(v26 + 1), v25);
      ++v24;
      v25 += 36;
      v6 = *(_QWORD *)(a2 + 256);
    }
    while (v24 < *(unsigned __int8 *)(*(_QWORD *)(v6 + 16 * v5 + 8) + 16 * v14 + 6));
    goto LABEL_27;
  }
}

uint64_t sub_239196950(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  unsigned int v3;

  v2 = *(_DWORD *)(a2 + 20);
  if (v2 == 2)
    return *(unsigned __int8 *)(a2 + 40);
  if (v2 == 3)
  {
    v3 = a1[8] == 1;
    if (a1[10] == 1)
      v3 |= 2u;
    if (a1[46] == 1)
      return v3 | 4;
    else
      return v3;
  }
  else
  {
    sub_2391BCBBC(7623, "lpp_transaction.c");
    return 0;
  }
}

uint64_t sub_2391969C8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned __int16 v9;
  _BYTE *v10;
  unsigned int v11;
  BOOL v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _BYTE *v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  char v22;
  unsigned int v23;
  char v24;
  int v25;

  v3 = result;
  *(_WORD *)result = *(_WORD *)a2;
  v4 = *(_DWORD *)(a2 + 12);
  *(_BYTE *)(result + 80) = v4;
  if (v4 == 1)
  {
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)(result + 24) = 0x100000003;
    v5 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *v5 = 0;
    v5[1] = 0;
    *(_QWORD *)(v3 + 8) = v5;
    *(_QWORD *)(v3 + 16) = v5;
    v6 = 2;
    do
    {
      v7 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *v7 = 0;
      v7[1] = 0;
      **(_QWORD **)(v3 + 16) = v7;
      *(_QWORD *)(v3 + 16) = v7;
      --v6;
    }
    while (v6);
    v8 = *(_QWORD *)(v3 + 8);
    v9 = *(_WORD *)(a2 + 16);
    *(_BYTE *)(v8 + 8) = v9 / 0x64u;
    v10 = *(_BYTE **)v8;
    v9 %= 0x64u;
    v10[8] = v9 / 0xAu;
    *(_BYTE *)(*(_QWORD *)v10 + 8) = v9 % 0xAu;
    v11 = *(unsigned __int16 *)(a2 + 18);
    v12 = *(_DWORD *)(a2 + 20) == 1;
    if (*(_DWORD *)(a2 + 20) == 1)
      v13 = 3;
    else
      v13 = 2;
    *(_DWORD *)(v3 + 48) = v13;
    *(_DWORD *)(v3 + 52) = 1;
    if (v12)
      v14 = 3;
    else
      v14 = 2;
    v15 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *v15 = 0;
    v15[1] = 0;
    *(_QWORD *)(v3 + 32) = v15;
    *(_QWORD *)(v3 + 40) = v15;
    v16 = v14 - 1;
    do
    {
      v17 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *v17 = 0;
      v17[1] = 0;
      **(_QWORD **)(v3 + 40) = v17;
      *(_QWORD *)(v3 + 40) = v17;
      --v16;
    }
    while (v16);
    v18 = *(_BYTE **)(v3 + 32);
    if (*(_DWORD *)(a2 + 20) == 1)
    {
      v18[8] = (5243 * (v11 >> 2)) >> 17;
      v11 = *(unsigned __int16 *)(a2 + 18) - 100 * ((5243 * (*(unsigned __int16 *)(a2 + 18) >> 2)) >> 17);
      v18 = *(_BYTE **)v18;
    }
    v18[8] = (unsigned __int16)v11 / 0xAu;
    *(_BYTE *)(*(_QWORD *)v18 + 8) = (unsigned __int16)v11 % 0xAu;
    result = sub_239199308(*(_DWORD *)(a2 + 24), 0x1CuLL, v3 + 64);
  }
  v19 = *(_DWORD *)(a2 + 8);
  if (v19 >= 0x10000)
  {
    *(_BYTE *)(v3 + 120) = 1;
    *(_DWORD *)(v3 + 116) = v19;
    LOWORD(v19) = -1;
  }
  *(_WORD *)(v3 + 82) = v19;
  v20 = *(unsigned __int8 *)(a2 + 28);
  *(_BYTE *)(v3 + 104) = v20;
  if (v20 == 1)
    result = sub_239199444(v3 + 88, 0xAuLL, *(unsigned __int16 *)(a2 + 30));
  *(_BYTE *)(v3 + 106) = 0;
  *(_BYTE *)(v3 + 108) = 0;
  *(_BYTE *)(v3 + 146) = 0;
  *(_BYTE *)(v3 + 148) = 0;
  *(_BYTE *)(v3 + 112) = 0;
  v21 = *(unsigned __int16 *)(a2 + 32);
  if (v21 != 255)
  {
    if (v21 > 0x61)
    {
      if (v21 < 0xFFEF)
        goto LABEL_25;
      v22 = 0;
      *(_BYTE *)(v3 + 146) = 1;
      *(_BYTE *)(v3 + 145) = v21;
    }
    else
    {
      *(_BYTE *)(v3 + 106) = 1;
      v22 = v21;
    }
    *(_BYTE *)(v3 + 105) = v22;
  }
LABEL_25:
  v23 = *(unsigned __int16 *)(a2 + 34);
  if (v23 != 255)
  {
    if (v23 > 0x22)
    {
      if (v23 <= 0xFFE1 && v23 - 35 > 0xB)
        goto LABEL_32;
      v24 = 0;
      *(_BYTE *)(v3 + 148) = 1;
      *(_BYTE *)(v3 + 147) = v23;
      *(_BYTE *)(v3 + 108) = 0;
    }
    else
    {
      *(_BYTE *)(v3 + 108) = 1;
      v24 = v23;
    }
    *(_BYTE *)(v3 + 107) = v24;
  }
LABEL_32:
  v25 = *(unsigned __int16 *)(a2 + 36);
  if (v25 != 0xFFFF)
  {
    *(_BYTE *)(v3 + 112) = 1;
    *(_WORD *)(v3 + 110) = v25;
  }
  return result;
}

void sub_239196C98(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  BOOL v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  int v14;
  char v15;
  int v16;
  char v17;
  int v18;
  char v19;
  int v20;
  char v21;
  int v22;
  unsigned int v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  int v28;
  uint64_t *v29;
  unsigned __int16 *v30;
  char v31;
  int v32;
  char v33;
  int v34;
  unsigned int v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  int v40;
  uint64_t *v41;
  unsigned __int16 *v42;
  char v43;
  int v44;
  char v45;
  int v46;

  *(_WORD *)a1 = *(_WORD *)a2;
  if (*(_BYTE *)(a2 + 2))
  {
    if (*(_DWORD *)(a2 + 4))
      *(_DWORD *)(a1 + 4) = 1;
    else
      *(_DWORD *)(a1 + 4) = 0;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  }
  else
  {
    sub_2391BCBBC(10783, "lpp_transaction.c");
    *(_DWORD *)(a1 + 4) = 0;
    *(_DWORD *)(a1 + 8) = 0;
  }
  if (*(_BYTE *)(a2 + 12) == 1)
  {
    *(_QWORD *)(a1 + 32) = 0x100000003;
    v4 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *v4 = 0;
    v4[1] = 0;
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v4;
    v5 = 2;
    do
    {
      v6 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *v6 = 0;
      v6[1] = 0;
      **(_QWORD **)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 24) = v6;
      --v5;
    }
    while (v5);
    v7 = *(_DWORD *)(a2 + 20) == 1;
    if (*(_DWORD *)(a2 + 20) == 1)
      v8 = 3;
    else
      v8 = 2;
    *(_DWORD *)(a1 + 56) = v8;
    *(_DWORD *)(a1 + 60) = 1;
    if (v7)
      v9 = 3;
    else
      v9 = 2;
    v10 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *v10 = 0;
    v10[1] = 0;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v10;
    v11 = v9 - 1;
    do
    {
      v12 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *v12 = 0;
      v12[1] = 0;
      **(_QWORD **)(a1 + 48) = v12;
      *(_QWORD *)(a1 + 48) = v12;
      --v11;
    }
    while (v11);
    sub_239192384(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 16), *(_BYTE **)(a1 + 40));
    sub_2391993A8(*(unsigned int *)(a2 + 24), 0x24uLL, a1 + 64);
    v13 = 1;
  }
  else
  {
    v13 = 0;
  }
  *(_BYTE *)(a1 + 80) = v13;
  v14 = *(unsigned __int8 *)(a2 + 28);
  *(_BYTE *)(a1 + 104) = v14;
  if (v14 == 1)
    sub_239199444(a1 + 88, 0xAuLL, *(unsigned __int16 *)(a2 + 30));
  *(_BYTE *)(a1 + 106) = 0;
  *(_WORD *)(a1 + 108) = 0;
  *(_BYTE *)(a1 + 111) = 0;
  *(_WORD *)(a1 + 113) = 0;
  *(_BYTE *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  if (*(_BYTE *)(a2 + 32) == 1)
  {
    *(_BYTE *)(a1 + 109) = 1;
    v15 = *(_BYTE *)(a2 + 34);
    if (v15)
    {
      v16 = *(unsigned __int16 *)(a2 + 36);
      if (v16 != 255)
      {
        *(_BYTE *)(a1 + 105) = v16;
        *(_BYTE *)(a1 + 106) = v15;
      }
    }
    v17 = *(_BYTE *)(a2 + 38);
    if (v17)
    {
      v18 = *(unsigned __int16 *)(a2 + 40);
      if (v18 != 255)
      {
        *(_BYTE *)(a1 + 107) = v18;
        *(_BYTE *)(a1 + 108) = v17;
      }
    }
  }
  if (*(_BYTE *)(a2 + 42) == 1)
  {
    *(_BYTE *)(a1 + 114) = 1;
    v19 = *(_BYTE *)(a2 + 44);
    if (v19)
    {
      v20 = *(unsigned __int16 *)(a2 + 46);
      if (v20 != 255)
      {
        *(_BYTE *)(a1 + 110) = v20;
        *(_BYTE *)(a1 + 111) = v19;
      }
    }
    v21 = *(_BYTE *)(a2 + 48);
    if (v21)
    {
      v22 = *(unsigned __int16 *)(a2 + 50);
      if (v22 != 255)
      {
        *(_BYTE *)(a1 + 112) = v22;
        *(_BYTE *)(a1 + 113) = v21;
      }
    }
  }
  if (*(_BYTE *)(a2 + 52) == 1)
  {
    v23 = *(unsigned __int8 *)(a2 + 53);
    *(_DWORD *)(a1 + 136) = v23;
    *(_BYTE *)(a1 + 144) = 1;
    if (v23 < 0x41)
    {
      if (!v23)
        goto LABEL_52;
    }
    else
    {
      *(_DWORD *)(a1 + 136) = 64;
    }
    *(_DWORD *)(a1 + 140) = 1;
    v24 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *v24 = 0;
    v24[1] = 0;
    *(_QWORD *)(a1 + 120) = v24;
    *(_QWORD *)(a1 + 128) = v24;
    LODWORD(v25) = *(_DWORD *)(a1 + 136);
    if (v25 >= 2)
    {
      v26 = 1;
      do
      {
        v27 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
        *v27 = 0;
        v27[1] = 0;
        **(_QWORD **)(a1 + 128) = v27;
        *(_QWORD *)(a1 + 128) = v27;
        ++v26;
        v25 = *(int *)(a1 + 136);
      }
      while (v26 < v25);
    }
    if ((int)v25 >= 1)
    {
      v28 = 0;
      v29 = (uint64_t *)(a1 + 120);
      v30 = (unsigned __int16 *)(*(_QWORD *)(a2 + 56) + 8);
      do
      {
        v29 = (uint64_t *)*v29;
        *((_BYTE *)v29 + 10) = 0;
        *((_BYTE *)v29 + 12) = 0;
        *((_BYTE *)v29 + 8) = *((_BYTE *)v30 - 8);
        v31 = *((_BYTE *)v30 - 6);
        if (v31)
        {
          v32 = *(v30 - 2);
          if (v32 != 255)
          {
            *((_BYTE *)v29 + 9) = v32;
            *((_BYTE *)v29 + 10) = v31;
          }
        }
        v33 = *((_BYTE *)v30 - 2);
        if (v33)
        {
          v34 = *v30;
          if (v34 != 255)
          {
            *((_BYTE *)v29 + 11) = v34;
            *((_BYTE *)v29 + 12) = v33;
          }
        }
        ++v28;
        v30 += 5;
      }
      while ((int)v25 > v28);
    }
  }
LABEL_52:
  if (*(_BYTE *)(a2 + 64) != 1)
    return;
  v35 = *(unsigned __int8 *)(a2 + 65);
  *(_DWORD *)(a1 + 168) = v35;
  *(_BYTE *)(a1 + 176) = 1;
  if (v35 < 0x41)
  {
    if (!v35)
      return;
  }
  else
  {
    *(_DWORD *)(a1 + 168) = 64;
  }
  *(_DWORD *)(a1 + 172) = 1;
  v36 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
  *v36 = 0;
  v36[1] = 0;
  *(_QWORD *)(a1 + 152) = v36;
  *(_QWORD *)(a1 + 160) = v36;
  LODWORD(v37) = *(_DWORD *)(a1 + 168);
  if (v37 >= 2)
  {
    v38 = 1;
    do
    {
      v39 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *v39 = 0;
      v39[1] = 0;
      **(_QWORD **)(a1 + 160) = v39;
      *(_QWORD *)(a1 + 160) = v39;
      ++v38;
      v37 = *(int *)(a1 + 168);
    }
    while (v38 < v37);
  }
  if ((int)v37 >= 1)
  {
    v40 = 0;
    v41 = (uint64_t *)(a1 + 152);
    v42 = (unsigned __int16 *)(*(_QWORD *)(a2 + 72) + 8);
    do
    {
      v41 = (uint64_t *)*v41;
      *((_BYTE *)v41 + 10) = 0;
      *((_BYTE *)v41 + 12) = 0;
      *((_BYTE *)v41 + 8) = *((_BYTE *)v42 - 8);
      v43 = *((_BYTE *)v42 - 6);
      if (v43)
      {
        v44 = *(v42 - 2);
        if (v44 != 255)
        {
          *((_BYTE *)v41 + 9) = v44;
          *((_BYTE *)v41 + 10) = v43;
        }
      }
      v45 = *((_BYTE *)v42 - 2);
      if (v45)
      {
        v46 = *v42;
        if (v46 != 255)
        {
          *((_BYTE *)v41 + 11) = v46;
          *((_BYTE *)v41 + 12) = v45;
        }
      }
      ++v40;
      v42 += 5;
    }
    while ((int)v37 > v40);
  }
}

uint64_t sub_2391970F4(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  char v4;
  int v5;
  int v6;

  *(_WORD *)result = *(_WORD *)a2;
  *(_BYTE *)(result + 2) = *(_BYTE *)(a2 + 8);
  v2 = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(result + 4) = *(_DWORD *)(a2 + 20);
  if (v2 == 1)
    *(_BYTE *)(result + 3) = *(_BYTE *)(a2 + 24);
  v3 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(result + 8) = *(_DWORD *)(a2 + 12);
  if (v3 == 255)
  {
    v4 = 0;
  }
  else
  {
    *(_BYTE *)(result + 12) = v3;
    v4 = 1;
  }
  *(_BYTE *)(result + 13) = v4;
  *(_BYTE *)(result + 14) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(result + 18) = 1;
  *(_WORD *)(result + 16) = *(_WORD *)(a2 + 2);
  v5 = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(result + 24) = *(_DWORD *)(a2 + 28);
  if (v5 == 1)
    v6 = *(_DWORD *)(a2 + 32);
  else
    v6 = 0;
  *(_DWORD *)(result + 20) = v6;
  return result;
}

void sub_239197184(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v4;
  char *v6;
  __int16 v7;

  v4 = **(_QWORD **)(a1 + 72);
  if (v4)
  {
    while (*(_DWORD *)(v4 + 16) != *a3 || *(_DWORD *)(v4 + 20) != a3[1])
    {
      v4 = *(_QWORD *)v4;
      if (!v4)
        goto LABEL_5;
    }
    v7 = 1;
    v6 = sub_23918FDF0(v4, &v7, 6);
    if (v6)
      sub_2391906D8(a1, v6, 6, a2);
    else
      sub_2391BCBBC(12657, "lpp_transaction.c");
  }
  else
  {
LABEL_5:
    sub_2391BCBBC(12663, "lpp_transaction.c");
  }
}

void sub_239197250(_QWORD *a1, int __val)
{
  char *v3;
  std::string *v4;
  __int128 v5;
  std::string v6;

  switch(__val)
  {
    case 0:
      v3 = "LPP_INACTIVE";
      goto LABEL_7;
    case 1:
      v3 = "LPP_IDLE";
      goto LABEL_7;
    case 2:
      v3 = "LPP_ACTIVE";
LABEL_7:
      sub_2391011A4(a1, v3);
      return;
  }
  std::to_string(&v6, __val);
  v4 = std::string::insert(&v6, 0, "unknown ");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  a1[2] = *((_QWORD *)&v4->__r_.__value_.__l + 2);
  *(_OWORD *)a1 = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
}

void sub_239197304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239197320(_QWORD *a1, int __val)
{
  char *v3;
  std::string *v4;
  __int128 v5;
  std::string v6;

  switch(__val)
  {
    case 2:
      v3 = "TRANSACTION_TERMINATED";
      goto LABEL_7;
    case 1:
      v3 = "TRANSACTION_ACTIVE";
      goto LABEL_7;
    case 0:
      v3 = "TRANSACTION_INITIAL";
LABEL_7:
      sub_2391011A4(a1, v3);
      return;
  }
  std::to_string(&v6, __val);
  v4 = std::string::insert(&v6, 0, "unknown ");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  a1[2] = *((_QWORD *)&v4->__r_.__value_.__l + 2);
  *(_OWORD *)a1 = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
}

void sub_2391973D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2391973F0(_QWORD *a1, int __val)
{
  char *v3;
  std::string *v4;
  __int128 v5;
  std::string v6;

  if (__val == 1)
  {
    v3 = "LASN_Initiator_targetDevice";
    goto LABEL_5;
  }
  if (!__val)
  {
    v3 = "LASN_Initiator_locationServer";
LABEL_5:
    sub_2391011A4(a1, v3);
    return;
  }
  std::to_string(&v6, __val);
  v4 = std::string::insert(&v6, 0, "unknown ");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  a1[2] = *((_QWORD *)&v4->__r_.__value_.__l + 2);
  *(_OWORD *)a1 = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
}

void sub_239197490(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2391974AC(_QWORD *a1, int __val)
{
  char *v3;
  std::string *v4;
  __int128 v5;
  std::string v6;

  if (__val == 1)
  {
    v3 = "USER_PLANE";
    goto LABEL_5;
  }
  if (!__val)
  {
    v3 = "CONTROL_PLANE";
LABEL_5:
    sub_2391011A4(a1, v3);
    return;
  }
  std::to_string(&v6, __val);
  v4 = std::string::insert(&v6, 0, "unknown ");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  a1[2] = *((_QWORD *)&v4->__r_.__value_.__l + 2);
  *(_OWORD *)a1 = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
}

void sub_23919754C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239197568(int a1)
{
  NSObject *v2;
  int v3;
  void **v4;
  void **v5;
  void **v6;
  void *__p[2];
  char v8;
  void *v9[2];
  char v10;
  uint8_t buf[4];
  void **v12;
  __int16 v13;
  void **v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v2 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    sub_239197250(v9, a1);
    v3 = v10;
    v4 = (void **)v9[0];
    sub_239197250(__p, a1);
    v5 = v9;
    if (v3 < 0)
      v5 = v4;
    if (v8 >= 0)
      v6 = __p;
    else
      v6 = (void **)__p[0];
    *(_DWORD *)buf = 136315394;
    v12 = v5;
    v13 = 2080;
    v14 = v6;
    _os_log_debug_impl(&dword_2390FD000, v2, OS_LOG_TYPE_DEBUG, "#posp,#lpp,#lpp_state,current_state,%s,next_state,%s", buf, 0x16u);
    if (v8 < 0)
      operator delete(__p[0]);
    if (v10 < 0)
      operator delete(v9[0]);
  }
}

void sub_239197684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2391976A8(uint64_t a1, int a2, int a3)
{
  NSObject *v6;
  void **v7;
  int v8;
  void **v9;
  int v10;
  void **v11;
  int v12;
  void **v13;
  uint64_t v14;
  std::string *v15;
  __int128 v16;
  void **v17;
  void **v18;
  void *__p[2];
  int64_t v20;
  void *v21[2];
  char v22;
  void *v23[2];
  char v24;
  void *v25[2];
  char v26;
  void *v27[2];
  char v28;
  std::string v29;
  uint8_t buf[4];
  void **v31;
  __int16 v32;
  int v33;
  __int16 v34;
  void **v35;
  __int16 v36;
  int v37;
  __int16 v38;
  void **v39;
  __int16 v40;
  void **v41;
  __int16 v42;
  void **v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v6 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    sub_2391973F0(v27, *(unsigned __int8 *)(a1 + 16));
    if (v28 >= 0)
      v7 = v27;
    else
      v7 = (void **)v27[0];
    v8 = *(unsigned __int8 *)(a1 + 17);
    sub_2391974AC(v25, *(_DWORD *)(a1 + 28));
    if (v26 >= 0)
      v9 = v25;
    else
      v9 = (void **)v25[0];
    v10 = *(_DWORD *)(a1 + 32);
    sub_239197320(v23, a2);
    if (v24 >= 0)
      v11 = v23;
    else
      v11 = (void **)v23[0];
    sub_239197320(v21, a3);
    v12 = v22;
    v13 = (void **)v21[0];
    v14 = *(int *)(a1 + 20);
    if (v14 > 5)
    {
      std::to_string(&v29, v14);
      v15 = std::string::insert(&v29, 0, "unknown ");
      v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
      v20 = v15->__r_.__value_.__r.__words[2];
      *(_OWORD *)__p = v16;
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v29.__r_.__value_.__l.__data_);
    }
    else
    {
      sub_2391011A4(__p, off_250A73AC8[v14]);
    }
    v17 = v21;
    if (v12 < 0)
      v17 = v13;
    v18 = __p;
    *(_DWORD *)buf = 136316674;
    if (v20 < 0)
      v18 = (void **)__p[0];
    v31 = v7;
    v32 = 1024;
    v33 = v8;
    v34 = 2080;
    v35 = v9;
    v36 = 1024;
    v37 = v10;
    v38 = 2080;
    v39 = v11;
    v40 = 2080;
    v41 = v17;
    v42 = 2080;
    v43 = v18;
    _os_log_debug_impl(&dword_2390FD000, v6, OS_LOG_TYPE_DEBUG, " #posp,#lpp,#lpp_transaction,trasaction_initiator,%s,transaction_id,%d,session_type,%s,session_id,%d,current_transaction_state,%s,next_transaction_state,%s,transaction_type,%s", buf, 0x40u);
    if (SHIBYTE(v20) < 0)
      operator delete(__p[0]);
    if (v22 < 0)
      operator delete(v21[0]);
    if (v24 < 0)
      operator delete(v23[0]);
    if (v26 < 0)
      operator delete(v25[0]);
    if (v28 < 0)
      operator delete(v27[0]);
  }
}

void sub_239197900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (a41 < 0)
    operator delete(__p);
  if (a17 < 0)
    operator delete(a12);
  if (a23 < 0)
    operator delete(a18);
  if (a29 < 0)
    operator delete(a24);
  if (a35 < 0)
    operator delete(a30);
  _Unwind_Resume(exception_object);
}

void sub_239197984(uint64_t a1, int a2, unsigned int a3)
{
  NSObject *v6;
  void **v7;
  int v8;
  void **v9;
  int v10;
  int v11;
  std::string *v12;
  __int128 v13;
  void **v14;
  void **v15;
  void *__p[2];
  int64_t v17;
  void *v18[2];
  char v19;
  void *v20[2];
  char v21;
  std::string v22;
  uint8_t buf[4];
  void **v24;
  __int16 v25;
  void **v26;
  __int16 v27;
  int v28;
  __int16 v29;
  int v30;
  __int16 v31;
  void **v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v6 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    sub_2391973F0(v20, a2);
    if (v21 >= 0)
      v7 = v20;
    else
      v7 = (void **)v20[0];
    sub_2391974AC(v18, *(_DWORD *)(a1 + 16));
    v8 = v19;
    v9 = (void **)v18[0];
    v10 = *(_DWORD *)(a1 + 20);
    v11 = *(unsigned __int8 *)(a1 + 24);
    if (a3 > 3)
    {
      std::to_string(&v22, a3);
      v12 = std::string::insert(&v22, 0, "unknown ");
      v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
      v17 = v12->__r_.__value_.__r.__words[2];
      *(_OWORD *)__p = v13;
      v12->__r_.__value_.__l.__size_ = 0;
      v12->__r_.__value_.__r.__words[2] = 0;
      v12->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v22.__r_.__value_.__l.__data_);
    }
    else
    {
      sub_2391011A4(__p, off_250A73AF8[a3]);
    }
    v14 = v18;
    if (v8 < 0)
      v14 = v9;
    v15 = __p;
    if (v17 < 0)
      v15 = (void **)__p[0];
    *(_DWORD *)buf = 136316162;
    v24 = v7;
    v25 = 2080;
    v26 = v14;
    v27 = 1024;
    v28 = v10;
    v29 = 1024;
    v30 = v11;
    v31 = 2080;
    v32 = v15;
    _os_log_debug_impl(&dword_2390FD000, v6, OS_LOG_TYPE_DEBUG, " #posp,#lpp,#lpp_session,initiator,%s,session_type,%s,session_id,%d,ue_initiated_transaction_number,%d,session_action,%s", buf, 0x2Cu);
    if (SHIBYTE(v17) < 0)
      operator delete(__p[0]);
    if (v19 < 0)
      operator delete(v18[0]);
    if (v21 < 0)
      operator delete(v20[0]);
  }
}

void sub_239197B60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
    operator delete(__p);
  if (a17 < 0)
    operator delete(a12);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(exception_object);
}

void sub_239197BB4(int a1, int a2)
{
  NSObject *v4;
  _DWORD v5[2];
  __int16 v6;
  int v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v4 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    v5[0] = 67109376;
    v5[1] = a1;
    v6 = 1024;
    v7 = a2;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#posp,#lpp,#lpp_cp_ul_data_clear,index,%d,session_number,%d", (uint8_t *)v5, 0xEu);
  }
}

void sub_239197C6C(uint64_t a1)
{
  NSObject *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _DWORD v8[2];
  __int16 v9;
  int v10;
  __int16 v11;
  int v12;
  __int16 v13;
  int v14;
  __int16 v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v2 = qword_2542CF610;
  if (os_log_type_enabled((os_log_t)qword_2542CF610, OS_LOG_TYPE_DEBUG))
  {
    v3 = *(unsigned __int16 *)(a1 + 12);
    v4 = *(unsigned __int16 *)(a1 + 14);
    v5 = *(unsigned __int8 *)(a1 + 16);
    v6 = *(unsigned __int8 *)(a1 + 17);
    v7 = *(unsigned __int8 *)(a1 + 18);
    v8[0] = 67110144;
    v8[1] = v3;
    v9 = 1024;
    v10 = v4;
    v11 = 1024;
    v12 = v5;
    v13 = 1024;
    v14 = v6;
    v15 = 1024;
    v16 = v7;
    _os_log_debug_impl(&dword_2390FD000, v2, OS_LOG_TYPE_DEBUG, "#posp,#lpp,#gps_aid_request,aidMask,%d,gpsWeek,%d,gpsTow,%d,numOfSats,%d,toeLimit,%d", (uint8_t *)v8, 0x20u);
  }
}

char *sub_239197D44(uint64_t a1, _DWORD *a2, char a3, int a4, uint64_t a5)
{
  uint64_t *v5;

  v5 = **(uint64_t ***)(a1 + 72);
  if (!v5)
    return sub_239197D84(a1, a2, a3, a4, a5);
  while (*((_DWORD *)v5 + 4) != *a2 || *((_DWORD *)v5 + 5) != a2[1])
  {
    v5 = (uint64_t *)*v5;
    if (!v5)
      return sub_239197D84(a1, a2, a3, a4, a5);
  }
  return (char *)v5;
}

char *sub_239197D84(uint64_t a1, _DWORD *a2, char a3, int a4, uint64_t a5)
{
  char *v8;
  _QWORD *v9;
  int v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;

  if (!*a2)
  {
    v13 = *(_QWORD *)(a1 + 72);
    if (*(_QWORD *)v13)
    {
      if (!a4 && a5 && *(_BYTE *)(a5 + 2592) == 1 && !*(_DWORD *)(a5 + 16) && *(_DWORD *)(a5 + 24) == 6)
        return 0;
      while (1)
      {
        v13 = *(_QWORD *)v13;
        if (!v13)
          break;
        if (!*(_DWORD *)(v13 + 16))
        {
          sub_239197F74(a1, v13, 5u);
          break;
        }
      }
    }
  }
  v8 = (char *)malloc_type_calloc(1uLL, 0x78uLL, 0x86CB5109uLL);
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *((_OWORD *)v8 + 3) = 0u;
  *((_OWORD *)v8 + 4) = 0u;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_QWORD *)v8 + 14) = 0;
  *((_QWORD *)v8 + 2) = *(_QWORD *)a2;
  v8[24] = 0;
  *(_DWORD *)(v8 + 111) = 0;
  *((_QWORD *)v8 + 13) = 0;
  v8[115] = 1;
  v9 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
  *v9 = 0;
  v9[1] = 0;
  *((_QWORD *)v8 + 5) = v9;
  v10 = *((_DWORD *)v8 + 4);
  if (v10 == 1)
  {
    v8[64] = a3;
    *((_QWORD *)v8 + 6) = sub_2391984C0;
    *((_QWORD *)v8 + 7) = sub_239198620;
  }
  else
  {
    if (v10)
    {
      sub_2391BCBBC(283, "lpp_session.c");
      return v8;
    }
    *((_DWORD *)v8 + 16) = 0x1000000;
    v8[80] = 0;
    *((_QWORD *)v8 + 9) = 0;
    *((_WORD *)v8 + 48) = 256;
    v11 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *v11 = 0;
    v11[1] = 0;
    *((_QWORD *)v8 + 11) = v11;
    *((_QWORD *)v8 + 6) = sub_23919802C;
    *((_QWORD *)v8 + 7) = sub_239198220;
    v12 = *(unsigned __int8 *)(a1 + 48);
    v8[115] = v12;
    if (!v12 && !*(_BYTE *)(a1 + 105))
      v8[114] = 1;
  }
  sub_2391990B8(*(uint64_t **)(a1 + 72), v8);
  *((_QWORD *)v8 + 4) = 1000000 * sub_239184EE8();
  sub_23918F868(a1, 0);
  sub_239197984((uint64_t)v8, 0, 0);
  return v8;
}

void sub_239197F74(uint64_t a1, uint64_t a2, unsigned int a3)
{
  _QWORD *v6;
  _QWORD *v7;

  if (a2)
  {
    sub_239197984(a2, 0, 2u);
    if (!*(_DWORD *)(a2 + 16))
    {
      *(_BYTE *)(a2 + 96) = 1;
      sub_23918F998(a1, (_DWORD *)(a2 + 16));
    }
    v6 = **(_QWORD ***)(a2 + 40);
    if (v6)
    {
      do
      {
        v7 = (_QWORD *)*v6;
        sub_239190178(a1, (uint64_t)v6, 0, a3);
        v6 = v7;
      }
      while (v7);
    }
    sub_2391987C4(a1, a2);
    sub_23918F868(a1, 1);
  }
  else
  {
    sub_2391BCBBC(374, "lpp_session.c");
  }
}

void sub_23919802C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5)
{
  int v8;
  int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  _BOOL4 v12;
  int v13;
  BOOL v16;
  char v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;

  if (a5)
  {
    v8 = *a4;
    if (*a4 >= 1)
      v9 = 2;
    else
      v9 = 5;
    v10 = *(unsigned __int8 **)(a5 + 16);
    v11 = *v10;
    v12 = v11 < 2;
    if (*(_BYTE *)(a2 + 97) == 1)
    {
      v13 = v10[2];
      if (v8 > 0 || v11 > 1 || v13 == 0)
      {
        v16 = 1;
      }
      else
      {
        v12 = v11 == 0;
        v16 = v11 != 1;
      }
    }
    else
    {
      v16 = 1;
    }
    *(_BYTE *)(a2 + 97) = 0;
    if (v8 > 0 || !v12)
      goto LABEL_21;
    v19 = *(_QWORD *)(a5 + 16);
    if (*(_BYTE *)(v19 + 2592))
    {
      if (*(_BYTE *)(v19 + 2592) != 1 || *(_DWORD *)(v19 + 16))
        goto LABEL_48;
      if (!*(_BYTE *)(a2 + 114))
      {
        if (*(_BYTE *)(v19 + 5))
        {
LABEL_45:
          if (!sub_2391988F8(a1, a2, (unsigned __int8 *)v19)
            && *(_BYTE *)(*(_QWORD *)(a5 + 16) + 2) == 1)
          {
            v9 = sub_239190274(a1, a2, a5);
LABEL_21:
            v18 = !v12;
            if (v9 == 5)
              v18 = 1;
            if ((v18 & 1) == 0)
              sub_239198BD0(a1, a2, *(_QWORD *)(a5 + 16), v9);
          }
LABEL_48:
          if (!v16)
            sub_239197F74(a1, a2, 1u);
          return;
        }
LABEL_44:
        *(_BYTE *)(v19 + 6) = 0;
        goto LABEL_45;
      }
    }
    else if (!*(_BYTE *)(a2 + 114))
    {
      *(_BYTE *)(v19 + 2) = 0;
      *(_BYTE *)(v19 + 5) = 0;
      goto LABEL_44;
    }
    if (*(_BYTE *)(v19 + 9) && *(_BYTE *)(v19 + 8)
      || *(_BYTE *)(v19 + 2592)
      && !*(_DWORD *)(v19 + 16)
      && (v20 = *(_DWORD *)(v19 + 24), v20 <= 4)
      && ((1 << v20) & 0x19) != 0)
    {
      if (!sub_2391988F8(a1, a2, (unsigned __int8 *)v19))
      {
        v21 = *(_QWORD *)(a5 + 16);
        if (*(_BYTE *)(v21 + 2592))
        {
          v22 = *(_DWORD *)(v21 + 24);
          if (v22 <= 4 && ((1 << v22) & 0x19) != 0)
            sub_239198AD4(a1, a2, v21);
        }
      }
    }
    goto LABEL_48;
  }
}

void sub_239198220(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  void *v14;
  uint64_t v15;
  size_t v16;
  void *v17;
  int v18;
  __int16 v19;
  uint64_t v20;

  if (!a2)
  {
    v10 = 832;
LABEL_9:
    sub_2391BCBBC(v10, "lpp_session.c");
    return;
  }
  if (!a3)
  {
    v10 = 837;
    goto LABEL_9;
  }
  v6 = *(_QWORD *)(a2 + 72);
  if (v6 && (sub_23918F174(*(_QWORD *)(v6 + 32), *(int *)(v6 + 24)), *(_QWORD *)(a2 + 72)) || *(_BYTE *)(a2 + 96))
  {
    v7 = malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
    v7[1] = 0u;
    v7[2] = 0u;
    *v7 = 0u;
    v8 = *a3;
    v9 = a3[2];
    v7[1] = a3[1];
    v7[2] = v9;
    *v7 = v8;
    sub_2391990F8(*(_QWORD **)(a2 + 88), v7);
    return;
  }
  v11 = (int *)malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  v12 = *((_QWORD *)a3 + 2);
  *((_QWORD *)v11 + 2) = v12;
  *(_BYTE *)(v12 + 5) = 1;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(a2 + 64);
  if (sub_2391BC2A8(4, 7u, (uint64_t *)v11 + 4, 0, v11 + 6, (__int16 *)v12))
  {
    sub_2391BCBBC(880, "lpp_session.c");
LABEL_12:
    v13 = (unsigned __int8 *)*((_QWORD *)v11 + 2);
    goto LABEL_13;
  }
  sub_23918F174(*((_QWORD *)v11 + 4), v11[6]);
  sub_23918F5E8(a1, a2 + 16, (uint64_t)(v11 + 6));
  *(_QWORD *)(a2 + 32) = 1000000 * sub_239184EE8();
  v15 = *((_QWORD *)v11 + 2);
  if (*(_BYTE *)(v15 + 9) == 1 && *(_BYTE *)(v15 + 6) == 1)
  {
    v16 = v11[6];
    v17 = malloc_type_calloc(1uLL, v16, 0x86CB5109uLL);
    bzero(v17, v16);
    memcpy(v17, *((const void **)v11 + 4), v11[6]);
    *(_QWORD *)(a2 + 72) = v11;
    *((_QWORD *)v11 + 4) = v17;
    *(_BYTE *)(a2 + 80) = 0;
    return;
  }
  v18 = *(unsigned __int16 *)(a2 + 64);
  if (v18 == 255)
    v19 = 0;
  else
    v19 = v18 + 1;
  *(_WORD *)(a2 + 64) = v19;
  v13 = (unsigned __int8 *)*((_QWORD *)v11 + 2);
  if (v13[3] == 1)
  {
    v20 = **(_QWORD **)(a2 + 40);
    if (v20)
    {
      while (*(unsigned __int8 *)(v20 + 16) != *v13 || *(unsigned __int8 *)(v20 + 17) != v13[1])
      {
        v20 = *(_QWORD *)v20;
        if (!v20)
          goto LABEL_13;
      }
      if (*(_DWORD *)(v20 + 24) == 2)
      {
        sub_23919064C(a1, v20);
        goto LABEL_12;
      }
    }
  }
LABEL_13:
  sub_23919A5E4(v13, (uint64_t)&unk_250A90278);
  v14 = (void *)*((_QWORD *)v11 + 2);
  if (v14)
    free(v14);
  free(v11);
}

void sub_2391984C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  _BYTE *v7;
  int v8;
  char v9;
  int v10;
  _BYTE v11[328];
  __int128 v12;
  __int128 v13;
  __int128 v14;

  if (*(_DWORD *)(a2 + 16) != 1)
  {
    sub_2391BCBBC(725, "lpp_session.c");
    return;
  }
  v3 = *(_QWORD *)(a3 + 8);
  if (v3)
  {
    v4 = *(_DWORD *)a3;
    if (*(_DWORD *)a3)
    {
      v13 = 0u;
      v14 = 0u;
      v12 = 0u;
      *(_QWORD *)&v14 = v3;
      DWORD2(v13) = v4;
      v7 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
      bzero(v7, 0xA28uLL);
      *(_QWORD *)&v13 = v7;
      v8 = sub_2391BC0FC(4u, 7u, v3, v4, (uint64_t)v7, 0, (uint64_t)v11, 0, 0);
      v7[5] = 0;
      v7[9] = 0;
      if (!v7[2592])
        v7[2] = 0;
      if (v8 <= 0)
      {
        if (v7[2] != 1)
          goto LABEL_9;
        v10 = sub_239190274(a1, a2, (uint64_t)&v12);
        if (v10 == 5)
          goto LABEL_9;
        v9 = v10;
        v7 = (_BYTE *)v13;
      }
      else
      {
        v9 = 2;
      }
      sub_239198BD0(a1, a2, (uint64_t)v7, v9);
LABEL_9:
      sub_2391995B8((void **)&v13);
    }
  }
}

void sub_239198620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v5;
  size_t v7;
  void *v8;
  uint64_t v9;
  size_t size[2];
  void *__src[2];

  if (a2)
  {
    if (a3)
    {
      *(_OWORD *)size = 0u;
      *(_OWORD *)__src = 0u;
      v5 = *(_QWORD *)(a3 + 16);
      size[0] = v5;
      *(_BYTE *)(v5 + 5) = 0;
      *(_BYTE *)(v5 + 9) = 0;
      if (!sub_2391BC2A8(4, 7u, (uint64_t *)__src, 0, &size[1], (__int16 *)v5))
      {
        v7 = LODWORD(size[1]);
        v8 = malloc_type_calloc(1uLL, LODWORD(size[1]), 0x86CB5109uLL);
        bzero(v8, v7);
        LODWORD(v7) = size[1];
        memcpy(v8, __src[0], SLODWORD(size[1]));
        sub_23918FB1C(a1, *(_DWORD *)(a2 + 20), 0, v7, (char *)v8);
      }
      v9 = **(_QWORD **)(a2 + 40);
      if (v9)
      {
        while (*(unsigned __int8 *)(v9 + 16) != *(unsigned __int8 *)size[0]
             || *(unsigned __int8 *)(v9 + 17) != *(unsigned __int8 *)(size[0] + 1))
        {
          v9 = *(_QWORD *)v9;
          if (!v9)
            goto LABEL_15;
        }
        if (*(_DWORD *)(v9 + 24) == 2)
          sub_23919064C(a1, v9);
      }
LABEL_15:
      sub_2391995B8((void **)size);
    }
    else
    {
      sub_2391BCBBC(1038, "lpp_session.c");
    }
  }
  else
  {
    sub_2391BCBBC(1032, "lpp_session.c");
  }
}

void sub_2391987C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t ***v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;

  if (!*(_DWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a2 + 72);
    if (v4)
    {
      sub_23919A5E4(*(_QWORD **)(v4 + 16), (uint64_t)&unk_250A90278);
      v5 = *(_QWORD **)(a2 + 72);
      v6 = (void *)v5[2];
      if (v6)
      {
        free(v6);
        v5[2] = 0;
        v5 = *(_QWORD **)(a2 + 72);
      }
      v7 = (void *)v5[4];
      if (!v7 || (free(v7), v5[4] = 0, (v5 = *(_QWORD **)(a2 + 72)) != 0))
      {
        free(v5);
        *(_QWORD *)(a2 + 72) = 0;
      }
    }
    v8 = *(uint64_t ****)(a2 + 88);
    v9 = *v8;
    if (*v8)
    {
      do
      {
        v10 = *v9;
        sub_239199144(*(_QWORD **)(a2 + 88), v9);
        sub_23919A5E4(v9[2], (uint64_t)&unk_250A90278);
        v11 = v9[2];
        if (v11)
        {
          free(v11);
          v9[2] = 0;
        }
        v12 = v9[4];
        if (v12)
          free(v12);
        free(v9);
        v9 = (uint64_t **)v10;
      }
      while (v10);
      v8 = *(uint64_t ****)(a2 + 88);
    }
    sub_239199188(v8);
  }
  v13 = *(_QWORD **)(a2 + 40);
  v14 = (_QWORD *)*v13;
  if (*v13)
  {
    do
    {
      v15 = (_QWORD *)*v14;
      sub_239199144(*(_QWORD **)(a2 + 40), v14);
      free(v14);
      v14 = v15;
    }
    while (v15);
    v13 = *(_QWORD **)(a2 + 40);
  }
  sub_239199188(v13);
  sub_239199144(*(_QWORD **)(a1 + 72), (_QWORD *)a2);
  free((void *)a2);
}

uint64_t sub_2391988F8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t i;
  _QWORD *v12;
  void *v13;
  void *v14;
  int v15;
  __int16 v16;

  if (!a2)
  {
    v8 = 1477;
LABEL_8:
    sub_2391BCBBC(v8, "lpp_session.c");
    return 3;
  }
  if (!a3)
  {
    v8 = 1482;
    goto LABEL_8;
  }
  if (a3[5] == 1)
  {
    v6 = a3[4];
    if (*(unsigned __int16 *)(a2 + 66) == v6)
    {
      v7 = 2;
      sub_2391BCBBC(1242, "lpp_session.c");
    }
    else
    {
      v7 = 0;
      *(_WORD *)(a2 + 66) = v6;
    }
  }
  else
  {
    v7 = 0;
  }
  if (a3[9] == 1 && a3[8] == 1)
  {
    v9 = *(_QWORD *)(a2 + 72);
    if (v9)
    {
      if (*(unsigned __int8 *)(*(_QWORD *)(v9 + 16) + 4) == a3[7])
      {
        *(_BYTE *)(a2 + 80) = 0;
        v10 = *(unsigned __int8 **)(v9 + 16);
        if (v10[2] == 1 && v10[3] == 1)
        {
          for (i = **(_QWORD **)(a2 + 40); i; i = *(_QWORD *)i)
          {
            if (*(unsigned __int8 *)(i + 16) == *v10 && *(unsigned __int8 *)(i + 17) == v10[1])
              break;
          }
        }
        else
        {
          i = 0;
        }
        sub_23919A5E4(v10, (uint64_t)&unk_250A90278);
        v12 = *(_QWORD **)(a2 + 72);
        v13 = (void *)v12[2];
        if (v13)
        {
          free(v13);
          v12[2] = 0;
          v12 = *(_QWORD **)(a2 + 72);
        }
        v14 = (void *)v12[4];
        if (!v14 || (free(v14), v12[4] = 0, (v12 = *(_QWORD **)(a2 + 72)) != 0))
        {
          free(v12);
          *(_QWORD *)(a2 + 72) = 0;
        }
        v15 = *(unsigned __int16 *)(a2 + 64);
        if (v15 == 255)
          v16 = 0;
        else
          v16 = v15 + 1;
        *(_WORD *)(a2 + 64) = v16;
        if (i && *(_DWORD *)(i + 24) == 2)
          sub_23919064C(a1, i);
        sub_239198CE8(a1, a2);
      }
    }
  }
  return v7;
}

void sub_239198AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _WORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  if (a2 && a3)
  {
    v6 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
    bzero(v6, 0xA28uLL);
    *(_QWORD *)&v8 = v6;
    *((_DWORD *)v6 + 6) = 6;
    *((_DWORD *)v6 + 10) = 0;
    *((_BYTE *)v6 + 49) = 1;
    *((_BYTE *)v6 + 2) = *(_BYTE *)(a3 + 2);
    if (*(_BYTE *)(a3 + 2) == 1)
      *v6 = *(_WORD *)a3;
    *((_BYTE *)v6 + 6) = 1;
    v6[4] = 256;
    *((_BYTE *)v6 + 3) = 1;
    *((_BYTE *)v6 + 2592) = 1;
    *((_DWORD *)v6 + 4) = 0;
    (*(void (**)(uint64_t, uint64_t, __int128 *))(a2 + 56))(a1, a2, &v7);
  }
  else
  {
    sub_2391BCBBC(1131, "lpp_session.c");
  }
}

void sub_239198BD0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _WORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  if (a2 && a3)
  {
    if (*(_BYTE *)(a3 + 2592) != 1 || (*(_DWORD *)(a3 + 24) & 0xFFFFFFFE) != 6)
    {
      v10 = 0u;
      v11 = 0u;
      v9 = 0u;
      v8 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
      bzero(v8, 0xA28uLL);
      *(_QWORD *)&v10 = v8;
      *((_BYTE *)v8 + 2) = *(_BYTE *)(a3 + 2);
      if (*(_BYTE *)(a3 + 2) == 1)
        *v8 = *(_WORD *)a3;
      *((_BYTE *)v8 + 9) = 0;
      *((_BYTE *)v8 + 3) = 0;
      *((_BYTE *)v8 + 2592) = 1;
      *((_DWORD *)v8 + 4) = 0;
      *((_DWORD *)v8 + 6) = 7;
      *((_DWORD *)v8 + 8) = 0;
      *((_BYTE *)v8 + 41) = 1;
      *((_BYTE *)v8 + 40) = a4;
      (*(void (**)(uint64_t, uint64_t, __int128 *))(a2 + 56))(a1, a2, &v9);
    }
  }
  else
  {
    sub_2391BCBBC(1169, "lpp_session.c");
  }
}

void sub_239198CE8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v5;
  void *v6;

  if (a2)
  {
    v3 = **(_QWORD ***)(a2 + 88);
    if (v3)
    {
      do
      {
        if (*(_QWORD *)(a2 + 72) || *(_BYTE *)(a2 + 96))
          break;
        v5 = (_QWORD *)*v3;
        sub_239199144(*(_QWORD **)(a2 + 88), v3);
        sub_239198220(a1, a2, v3);
        v6 = (void *)v3[4];
        if (v6)
          free(v6);
        free(v3);
        v3 = v5;
      }
      while (v5);
    }
  }
  else
  {
    sub_2391BCBBC(1408, "lpp_session.c");
  }
}

void sub_239198D84(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v6;
  unsigned __int8 *v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  int v11;
  __int16 v12;
  _QWORD *v13;
  _QWORD *v14;
  unsigned __int8 *v15;
  void *v16;

  if (!*(_DWORD *)(a2 + 16))
  {
    v6 = *(_QWORD *)(a2 + 72);
    if (v6)
    {
      v7 = *(unsigned __int8 **)(v6 + 16);
      if (*v7 == *a3 && v7[1] == a3[1])
      {
        *(_BYTE *)(a2 + 80) = 0;
        sub_23919A5E4(*(_QWORD **)(v6 + 16), (uint64_t)&unk_250A90278);
        v8 = *(_QWORD **)(a2 + 72);
        v9 = (void *)v8[2];
        if (v9)
        {
          free(v9);
          v8[2] = 0;
          v8 = *(_QWORD **)(a2 + 72);
        }
        v10 = (void *)v8[4];
        if (!v10 || (free(v10), v8[4] = 0, (v8 = *(_QWORD **)(a2 + 72)) != 0))
        {
          free(v8);
          *(_QWORD *)(a2 + 72) = 0;
        }
        v11 = *(unsigned __int16 *)(a2 + 64);
        if (v11 == 255)
          v12 = 0;
        else
          v12 = v11 + 1;
        *(_WORD *)(a2 + 64) = v12;
      }
    }
    v13 = **(_QWORD ***)(a2 + 88);
    while (v13)
    {
      v14 = v13;
      v13 = (_QWORD *)*v13;
      v15 = (unsigned __int8 *)v14[2];
      if (*v15 == *a3 && v15[1] == a3[1])
      {
        sub_239199144(*(_QWORD **)(a2 + 88), v14);
        sub_23919A5E4((_QWORD *)v14[2], (uint64_t)&unk_250A90278);
        v16 = (void *)v14[2];
        if (v16)
          free(v16);
        free(v14);
      }
    }
    sub_239198CE8(a1, a2);
  }
}

void sub_239198EDC(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, uint64_t a5)
{
  int v5;
  char v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  void *__p[2];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int16 v21;
  __int16 v22;
  int v23;
  int v24;
  char v25;
  int v26;
  int v27;
  int v28;
  char v29;
  _BYTE v30[11];

  if (a5)
  {
    v5 = *(unsigned __int8 *)(a5 + 16);
    v6 = *(_BYTE *)(a5 + 17);
    v7 = 1;
  }
  else
  {
    v7 = 0;
    v5 = 0;
    v6 = 0;
  }
  v26 = v7;
  v27 = 0;
  v28 = v5;
  v29 = v6;
  memset(v30, 0, sizeof(v30));
  if ((a2[13] & 1) != 0)
  {
    LOBYTE(__p[1]) = -1;
    v9 = a2[3];
    HIDWORD(__p[0]) = a2[2];
    HIDWORD(v18) = *((unsigned __int8 *)a2 + 59);
    v10 = *((unsigned __int8 *)a2 + 56);
    BYTE4(v17) = *((_BYTE *)a2 + 16);
    LOBYTE(v18) = *((_BYTE *)a2 + 28);
    v22 = *((_WORD *)a2 + 27);
    v20 = *((_BYTE *)a2 + 40);
    v11 = *((unsigned __int8 *)a2 + 57);
    v23 = v10;
    v24 = v11;
    v25 = *((_BYTE *)a2 + 43);
    LOWORD(__p[0]) = *((unsigned __int8 *)a2 + 4);
    v12 = *((unsigned __int8 *)a2 + 58);
    v19 = *((_QWORD *)a2 + 4);
    HIDWORD(__p[1]) = v9;
    LODWORD(v17) = v12;
    v21 = *(_WORD *)((char *)a2 + 41);
    *((_QWORD *)&v17 + 1) = *(_QWORD *)(a2 + 5);
    v14 = a3;
    v15 = a4;
    v13 = a2[16];
    if (v13 == 1)
    {
      sub_2391B0B04(*a2, (unsigned __int16 *)__p, &v14);
    }
    else if (v13 == 2)
    {
      sub_2391B0C7C((unsigned __int16 *)__p, &v14, 1);
    }
  }
  else
  {
    v18 = 0;
    *(_OWORD *)__p = 0u;
    v17 = 0u;
    BYTE8(v17) = 1;
    HIDWORD(v17) = a4;
    sub_239189E98();
    v8 = sub_2391AE584();
    sub_2391AF510(v8, (uint64_t)__p);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
}

void sub_23919902C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239199048(uint64_t a1, __int128 *a2, uint64_t a3, int a4, uint64_t a5)
{
  int v5;
  char v6;
  int v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  char v15;
  _BYTE v16[11];

  if (a5)
  {
    v5 = *(unsigned __int8 *)(a5 + 16);
    v6 = *(_BYTE *)(a5 + 17);
    v7 = 1;
  }
  else
  {
    v7 = 0;
    v5 = 0;
    v6 = 0;
  }
  v12 = v7;
  v13 = 0;
  v14 = v5;
  v15 = v6;
  memset(v16, 0, sizeof(v16));
  v11 = a4;
  v8 = *a2;
  v9 = *((_QWORD *)a2 + 2);
  v10 = a3;
  sub_2391AFDB4((unsigned __int8 *)&v8, &v10);
}

void sub_2391990B8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  if (a1 && a2)
  {
    v2 = *a1;
    *a1 = (uint64_t)a2;
    *a2 = v2;
    a2[1] = 0;
    if (v2)
      *(_QWORD *)(v2 + 8) = a2;
    else
      a1[1] = (uint64_t)a2;
  }
  else
  {
    sub_2391BCBBC(44, "lpm_utils.c");
  }
}

void sub_2391990F8(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a1 && a2)
  {
    v2 = (_QWORD *)*a1;
    if (*a1)
    {
      v3 = (_QWORD *)a1[1];
      v2 = v3;
    }
    else
    {
      v3 = a1;
    }
    *v3 = a2;
    a2[1] = v2;
    a1[1] = a2;
    *a2 = 0;
  }
  else
  {
    sub_2391BCBBC(69, "lpm_utils.c");
  }
}

void sub_239199144(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  if (a1 && a2)
  {
    v3 = (_QWORD *)*a2;
    v2 = a2[1];
    if (v2)
      v4 = (_QWORD *)a2[1];
    else
      v4 = a1;
    *v4 = v3;
    if (!v3)
      v3 = a1;
    v3[1] = v2;
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    sub_2391BCBBC(97, "lpm_utils.c");
  }
}

void sub_239199188(void *a1)
{
  if (a1)
    free(a1);
  else
    sub_2391BCBBC(141, "lpm_utils.c");
}

uint64_t sub_2391991A8(uint64_t a1, size_t size, unsigned int a3)
{
  size_t v5;
  void *v6;
  uint64_t v7;

  if (!(_DWORD)size)
    return 0;
  *(_DWORD *)a1 = size;
  *(_DWORD *)(a1 + 4) = 1;
  v5 = size;
  v6 = malloc_type_calloc(1uLL, size, 0x86CB5109uLL);
  bzero(v6, v5);
  v7 = 0;
  *(_QWORD *)(a1 + 8) = v6;
  do
    *(_BYTE *)(*(_QWORD *)(a1 + 8) + v7++) = (a3 >> --v5) & 1;
  while (v5);
  return 1;
}

uint64_t sub_239199230(uint64_t a1, int a2, _BYTE *a3)
{
  int v3;
  int v4;
  int v5;

  if (a2 < 1 || !*(_DWORD *)(a1 + 4))
    return 0;
  v3 = 0;
  v4 = 0;
  v5 = 0;
  *a3 = 0;
  do
  {
    if (*(_DWORD *)a1 <= v4)
      break;
    v3 |= *(unsigned __int8 *)(*(_QWORD *)(a1 + 8) + (__int16)v5) << (~(_BYTE)v4 + a2);
    *a3 = v3;
    v4 = (__int16)++v5;
  }
  while ((__int16)v5 < a2);
  return 1;
}

uint64_t sub_23919929C(int *a1, int a2, _WORD *a3)
{
  int v3;
  int v4;
  int v5;
  int v6;

  if (a2 < 1 || !a1[1])
    return 0;
  v3 = 0;
  v4 = 0;
  v5 = 0;
  *a3 = 0;
  v6 = *a1;
  do
  {
    if (v6 <= v4)
      break;
    v3 |= *(unsigned __int8 *)(*((_QWORD *)a1 + 1) + (unsigned __int16)v5) << (~(_BYTE)v4 + a2);
    *a3 = v3;
    v4 = (unsigned __int16)++v5;
  }
  while ((unsigned __int16)v5 < a2);
  return 1;
}

uint64_t sub_239199308(unsigned int a1, size_t size, uint64_t a3)
{
  int v4;
  size_t v6;
  uint64_t v7;
  void *v8;
  size_t v9;

  v4 = size;
  v6 = size;
  v7 = 1;
  v8 = malloc_type_calloc(1uLL, size, 0x86CB5109uLL);
  bzero(v8, v6);
  *(_QWORD *)(a3 + 8) = v8;
  if (!v8)
    return 0;
  *(_DWORD *)a3 = v4;
  *(_DWORD *)(a3 + 4) = 1;
  if (v4 >= 1)
  {
    v9 = v6 - 1;
    do
    {
      *(_BYTE *)(*(_QWORD *)(a3 + 8) + v9) = a1 & 1;
      a1 >>= 1;
      --v9;
      --v4;
    }
    while (v4);
    return 1;
  }
  return v7;
}

uint64_t sub_2391993A8(unint64_t a1, size_t size, uint64_t a3)
{
  int v4;
  size_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v4 = size;
  v6 = size;
  v7 = 1;
  v8 = malloc_type_calloc(1uLL, size, 0x86CB5109uLL);
  bzero(v8, v6);
  *(_QWORD *)(a3 + 8) = v8;
  if (!v8)
    return 0;
  *(_DWORD *)a3 = v4;
  *(_DWORD *)(a3 + 4) = 1;
  if (v4)
  {
    v9 = (v4 - 1);
    do
    {
      *(_BYTE *)(*(_QWORD *)(a3 + 8) + v9) = a1 & 1;
      a1 >>= 1;
      --v9;
      --v6;
    }
    while (v6);
    return 1;
  }
  return v7;
}

uint64_t sub_239199444(uint64_t a1, size_t size, unsigned int a3)
{
  int v4;
  size_t v6;
  void *v7;
  char v8;
  int v9;

  if (!(_DWORD)size)
    return 0;
  v4 = size;
  *(_DWORD *)a1 = size;
  *(_DWORD *)(a1 + 4) = 1;
  v6 = size;
  v7 = malloc_type_calloc(1uLL, size, 0x86CB5109uLL);
  bzero(v7, v6);
  v8 = 0;
  v9 = 0;
  *(_QWORD *)(a1 + 8) = v7;
  do
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 8) + (__int16)v9++) = (a3 >> (~v8 + v4)) & 1;
    v8 = v9;
  }
  while ((__int16)v9 < v4);
  return 1;
}

void sub_2391994EC(void **a1)
{
  _QWORD *v2;

  if (a1)
  {
    v2 = *a1;
    if (v2)
    {
      sub_23919A5E4(v2, (uint64_t)&unk_250A8C5E8);
      if (*a1)
      {
        free(*a1);
        *a1 = 0;
      }
    }
  }
}

void sub_239199530(void **a1)
{
  _QWORD *v2;

  if (a1)
  {
    v2 = *a1;
    if (v2)
    {
      sub_23919A5E4(v2, (uint64_t)&unk_250A8D5B8);
      if (*a1)
      {
        free(*a1);
        *a1 = 0;
      }
    }
  }
}

void sub_239199574(void **a1)
{
  _QWORD *v2;

  if (a1)
  {
    v2 = *a1;
    if (v2)
    {
      sub_23919A5E4(v2, (uint64_t)&unk_250A8E880);
      if (*a1)
      {
        free(*a1);
        *a1 = 0;
      }
    }
  }
}

void sub_2391995B8(void **a1)
{
  _QWORD *v2;

  if (a1)
  {
    v2 = *a1;
    if (v2)
    {
      sub_23919A5E4(v2, (uint64_t)&unk_250A90278);
      if (*a1)
      {
        free(*a1);
        *a1 = 0;
      }
    }
  }
}

uint64_t sub_2391995FC(uint64_t a1)
{
  uint64_t v2;
  char *v3;

  v2 = sub_2391B7394(a1);
  *(_QWORD *)v2 = &off_250A73B28;
  *(_QWORD *)(v2 + 376) = 0;
  *(_QWORD *)(v2 + 384) = 0;
  *(_QWORD *)(v2 + 392) = 0;
  *(_DWORD *)(v2 + 360) = -1;
  *(_QWORD *)(v2 + 364) = 0;
  *(_QWORD *)(v2 + 370) = 0;
  *(_DWORD *)(v2 + 378) = -1;
  *(_DWORD *)(v2 + 387) = 0;
  *(_DWORD *)(v2 + 384) = 0;
  *(_BYTE *)(v2 + 16) = 7;
  *(_WORD *)(v2 + 32) = 6;
  v3 = (char *)operator new(0x1E8uLL, MEMORY[0x24BEDB6B8]);
  if (v3)
  {
    *(_QWORD *)v3 = 0;
    *((_DWORD *)v3 + 2) = 0;
    *((_QWORD *)v3 + 4) = 0;
    *((_QWORD *)v3 + 5) = 0;
    *((_QWORD *)v3 + 3) = 0;
    v3[60] = -1;
    *((_QWORD *)v3 + 8) = 0;
    *((_DWORD *)v3 + 18) = 0;
    v3[76] = -1;
    *((_WORD *)v3 + 39) = 0;
    v3[80] = 0;
    *((_DWORD *)v3 + 14) = 0;
    *((_QWORD *)v3 + 6) = 0;
    *((_QWORD *)v3 + 11) = 255;
    *((_DWORD *)v3 + 4) = 0;
    *((_QWORD *)v3 + 59) = 0;
    *((_QWORD *)v3 + 60) = 0;
    *((_QWORD *)v3 + 58) = 0;
    *(_OWORD *)(v3 + 441) = 0u;
    *((_OWORD *)v3 + 26) = 0u;
    *((_OWORD *)v3 + 27) = 0u;
    *((_OWORD *)v3 + 24) = 0u;
    *((_OWORD *)v3 + 25) = 0u;
    *((_OWORD *)v3 + 22) = 0u;
    *((_OWORD *)v3 + 23) = 0u;
    *((_OWORD *)v3 + 20) = 0u;
    *((_OWORD *)v3 + 21) = 0u;
    *((_OWORD *)v3 + 18) = 0u;
    *((_OWORD *)v3 + 19) = 0u;
    *((_OWORD *)v3 + 16) = 0u;
    *((_OWORD *)v3 + 17) = 0u;
    *((_OWORD *)v3 + 14) = 0u;
    *((_OWORD *)v3 + 15) = 0u;
    *((_OWORD *)v3 + 12) = 0u;
    *((_OWORD *)v3 + 13) = 0u;
    *((_OWORD *)v3 + 10) = 0u;
    *((_OWORD *)v3 + 11) = 0u;
    *((_OWORD *)v3 + 8) = 0u;
    *((_OWORD *)v3 + 9) = 0u;
    *((_OWORD *)v3 + 6) = 0u;
    *((_OWORD *)v3 + 7) = 0u;
  }
  *(_QWORD *)(a1 + 40) = v3;
  return a1;
}

uint64_t sub_2391996F8(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &off_250A73B28;
  if (*(_WORD *)(a1 + 32) == 6)
  {
    v2 = *(_QWORD **)(a1 + 40);
    if (v2)
    {
      v3 = (void *)v2[58];
      if (v3)
      {
        v2[59] = v3;
        operator delete(v3);
      }
      sub_239199F0C((uint64_t)(v2 + 12));
      v4 = (void *)v2[3];
      if (v4)
      {
        v2[4] = v4;
        operator delete(v4);
      }
      MEMORY[0x23B838844](v2, 0x1010C40F88FA712);
    }
    *(_QWORD *)(a1 + 40) = 0;
  }
  return sub_2391B7470(a1);
}

void sub_239199780(uint64_t a1)
{
  sub_2391996F8(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_2391997A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_2391997AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  _DWORD v6[2];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 8);
  if (v2
    && (v3 = sub_2391B7D4C(), (v4 = sub_2391B8A50(v3, *(_DWORD *)(v2 + 376))) != 0)
    && sub_2391A5AA4(v4, *(_QWORD *)(a1 + 40) + 464, *(unsigned int *)(*(_QWORD *)(a1 + 8) + 376), *(_DWORD *)(*(_QWORD *)(a1 + 8) + 596)))
  {
    v5 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v6[0] = 67109120;
      v6[1] = 515;
      _os_log_error_impl(&dword_2390FD000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v6, 8u);
    }
  }
  else
  {
    *(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) = 1;
  }
}

uint64_t sub_239199890(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  _BOOL4 v7;
  unsigned int v8;
  __int16 v9;
  _BOOL4 v10;
  char v11;
  char v12;
  char v13;
  NSObject *v14;
  uint64_t v16;
  int v17;
  BOOL v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned __int8 *v22;
  int v24;
  __int128 buf;
  int v26;
  unint64_t v27;
  int v28;
  char v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 8))
  {
    sub_2391B7BC8(a1, a2);
    v24 = 0;
    v3 = *(_QWORD *)(a1 + 40);
    if (*(_DWORD *)(v3 + 4))
    {
      v4 = sub_2391B7D4C();
      v3 = *(_QWORD *)(a1 + 40);
      sub_2391BA440(v4, *(unsigned __int8 *)(v3 + 456), &v24);
    }
    if (!*(_DWORD *)v3)
    {
      v16 = sub_2391BDC54();
      v17 = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 376);
      *((_QWORD *)&buf + 1) = 0;
      v26 = 0;
      LODWORD(buf) = v17;
      v29 = -1;
      v27 = 6;
      v28 = v24;
      sub_2391BE930(v16, (unsigned int *)&buf);
      *(_BYTE *)(a1 + 361) = -1;
LABEL_31:
      sub_239199C58(a1);
      return 0;
    }
    v5 = *(_DWORD *)(v3 + 56);
    if (*(_DWORD *)(v3 + 52))
    {
      if (v5)
      {
        *(_WORD *)(a1 + 360) = 1;
        v6 = *(_DWORD *)(v3 + 64);
        *(_DWORD *)(a1 + 368) = v6;
        v7 = *(unsigned __int8 *)(v3 + 60) == 1;
        *(_BYTE *)(a1 + 362) = v7;
        v8 = *(_DWORD *)(v3 + 68);
        *(_DWORD *)(a1 + 372) = v8;
        v9 = *(_WORD *)(v3 + 78);
        *(_WORD *)(a1 + 376) = v9;
        v10 = *(unsigned __int8 *)(v3 + 76) == 1;
        *(_BYTE *)(a1 + 363) = v10;
        v11 = *(_BYTE *)(v3 + 80);
        *(_BYTE *)(a1 + 381) = v11;
        *(_BYTE *)(a1 + 382) = *(_BYTE *)(v3 + 75);
        if (!*(_DWORD *)(v3 + 48))
        {
          v12 = *(_BYTE *)(a1 + 378);
          v13 = *(_BYTE *)(a1 + 379);
LABEL_23:
          v29 = 0;
          v31 = -1;
          v32 = 0;
          buf = 0x100000000uLL;
          if (v7)
            v19 = 2;
          else
            v19 = 1;
          v26 = v19;
          v27 = __PAIR64__(v8, v6);
          LOWORD(v28) = v9;
          if (v10)
            v20 = 2;
          else
            v20 = 1;
          v30 = v20;
          BYTE2(v28) = v12;
          HIBYTE(v28) = v13;
          LOBYTE(v31) = v11;
          v21 = sub_2391BDC54();
          sub_2391BF2E8(v21, *(_DWORD *)(*(_QWORD *)(a1 + 8) + 376), 6, 0, v24, &buf);
          v22 = *(unsigned __int8 **)(*(_QWORD *)(a1 + 40) + 24);
          if (*(_QWORD *)(*(_QWORD *)(a1 + 40) + 32) - (_QWORD)v22 == 13)
          {
            *(_WORD *)(a1 + 384) = v22[1] + 10 * *v22 + 1472;
            *(_BYTE *)(a1 + 386) = v22[3] + 10 * v22[2] - 16;
            *(_BYTE *)(a1 + 387) = v22[5] + 10 * v22[4] - 16;
            *(_BYTE *)(a1 + 388) = v22[7] + 10 * v22[6] - 16;
            *(_BYTE *)(a1 + 389) = v22[9] + 10 * v22[8] - 16;
            *(_BYTE *)(a1 + 390) = v22[11] + 10 * v22[10] - 16;
          }
          goto LABEL_31;
        }
LABEL_21:
        v12 = *(_BYTE *)(v3 + 72);
        *(_BYTE *)(a1 + 378) = v12;
        v13 = *(_BYTE *)(v3 + 73);
        *(_BYTE *)(a1 + 379) = v13;
        *(_BYTE *)(a1 + 380) = *(_BYTE *)(v3 + 74);
        goto LABEL_23;
      }
      if (*(_DWORD *)(v3 + 48))
      {
        v11 = 0;
        v10 = 0;
        v9 = 0;
        *(_WORD *)(a1 + 360) = 1;
        v6 = *(_DWORD *)(v3 + 64);
        *(_DWORD *)(a1 + 368) = v6;
        v7 = *(unsigned __int8 *)(v3 + 60) == 1;
        *(_BYTE *)(a1 + 362) = v7;
        v8 = *(_DWORD *)(v3 + 68);
        *(_DWORD *)(a1 + 372) = v8;
        *(_WORD *)(a1 + 376) = 0;
        *(_BYTE *)(a1 + 363) = 0;
        *(_BYTE *)(a1 + 381) = 0;
        *(_BYTE *)(a1 + 382) = *(_BYTE *)(v3 + 75);
        goto LABEL_21;
      }
    }
    else if (v5 && !*(_DWORD *)(v3 + 48))
    {
      v13 = 0;
      v12 = 0;
      v11 = 0;
      *(_WORD *)(a1 + 360) = 1;
      v6 = *(_DWORD *)(v3 + 64);
      *(_DWORD *)(a1 + 368) = v6;
      v7 = *(unsigned __int8 *)(v3 + 60) == 1;
      *(_BYTE *)(a1 + 362) = v7;
      v8 = *(_DWORD *)(v3 + 68);
      *(_DWORD *)(a1 + 372) = v8;
      v9 = *(_WORD *)(v3 + 78);
      *(_WORD *)(a1 + 376) = v9;
      v18 = *(_BYTE *)(v3 + 76) == 1;
      *(_DWORD *)(a1 + 378) = 0;
      v10 = v18;
      *(_BYTE *)(a1 + 363) = v10;
      *(_BYTE *)(a1 + 382) = 0;
      goto LABEL_23;
    }
    v13 = 0;
    v12 = 0;
    v11 = 0;
    v10 = 0;
    v9 = 0;
    *(_WORD *)(a1 + 360) = 1;
    v6 = *(_DWORD *)(v3 + 64);
    *(_DWORD *)(a1 + 368) = v6;
    v7 = *(unsigned __int8 *)(v3 + 60) == 1;
    *(_BYTE *)(a1 + 362) = v7;
    v8 = *(_DWORD *)(v3 + 68);
    *(_DWORD *)(a1 + 376) = 0;
    *(_DWORD *)(a1 + 379) = 0;
    *(_DWORD *)(a1 + 372) = v8;
    *(_BYTE *)(a1 + 363) = 0;
    goto LABEL_23;
  }
  v14 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    *(_QWORD *)&buf = 0x20104000100;
    _os_log_error_impl(&dword_2390FD000, v14, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&buf, 8u);
  }
  return -1;
}

void sub_239199C58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  if (**(_DWORD **)(a1 + 40))
  {
    if (!v2)
      return;
    goto LABEL_3;
  }
  *(_BYTE *)(a1 + 361) = -1;
  if (v2)
  {
LABEL_3:
    v3 = sub_2391B1EF8();
    *(_QWORD *)(v3 + 40) = *(_QWORD *)(v3 + 32);
    v4 = (_QWORD *)sub_2391AE584();
    sub_23918EDCC((uint64_t)off_25691E330, *(_DWORD *)(*(_QWORD *)(a1 + 8) + 376));
    sub_2391AEFF8(v4);
    v5 = sub_2391B1EF8();
    sub_2391B3078(v5, *(_DWORD *)(*(_QWORD *)(a1 + 8) + 376));
  }
}

BOOL sub_239199CDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  _BOOL8 result;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13[2];
  uint8_t buf[4];
  int v15;
  uint64_t v16;
  _DWORD v17[4];
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(v4 + 64);
    v5 = a1 + 48;
    *(_WORD *)(a1 + 56) = *(_WORD *)(v4 + 72);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(v4 + 80);
    sub_23919A01C(a1 + 72, v4 + 88);
    if (v5 != v4 + 64)
    {
      sub_239107FF0((_QWORD *)(a1 + 248), *(char **)(v4 + 264), *(char **)(v4 + 272), *(_QWORD *)(v4 + 272) - *(_QWORD *)(v4 + 264));
      *(_BYTE *)(a1 + 272) = *(_BYTE *)(v4 + 288);
      *(_BYTE *)(a1 + 280) = *(_BYTE *)(v4 + 296);
      sub_239107FF0((_QWORD *)(a1 + 288), *(char **)(v4 + 304), *(char **)(v4 + 312), *(_QWORD *)(v4 + 312) - *(_QWORD *)(v4 + 304));
      sub_239107FF0((_QWORD *)(a1 + 312), *(char **)(v4 + 328), *(char **)(v4 + 336), *(_QWORD *)(v4 + 336) - *(_QWORD *)(v4 + 328));
      sub_239107FF0((_QWORD *)(a1 + 336), *(char **)(v4 + 352), *(char **)(v4 + 360), *(_QWORD *)(v4 + 360) - *(_QWORD *)(v4 + 352));
    }
  }
  v13[0] = (uint64_t)a2;
  v13[1] = a1 + 24;
  if (sub_2391AA398(v13))
  {
    v6 = qword_2542CF618;
    result = os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR);
    if (result)
    {
      *(_DWORD *)buf = 67109120;
      v15 = 770;
      _os_log_error_impl(&dword_2390FD000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      return 0;
    }
  }
  else
  {
    v12 = 0;
    if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4))
    {
      v8 = sub_2391B7D4C();
      sub_2391BA440(v8, *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + 456), &v12);
      v9 = v12;
    }
    else
    {
      v9 = 0;
    }
    v10 = sub_2391BDC54();
    v11 = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 376);
    v16 = 0;
    v17[0] = 0;
    *(_DWORD *)buf = v11;
    v18 = -1;
    *(_QWORD *)&v17[1] = 7;
    v17[3] = v9;
    sub_2391BE930(v10, (unsigned int *)buf);
    sub_2391B7C60(a1, a2);
    return 1;
  }
  return result;
}

void sub_239199EAC(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  if (*(_DWORD *)(a1 + 48) != 1)
  {
    *(_DWORD *)(a1 + 48) = 1;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      *(_WORD *)(a1 + 56) = *(_DWORD *)(v2 + 376);
      v3 = *(_DWORD *)(v2 + 596);
      v4 = sub_2391B7D4C();
      sub_2391B8198(v4, a1 + 64, v3);
    }
  }
}

uint64_t sub_239199F0C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v2 = *(void **)(a1 + 336);
  if (v2)
  {
    *(_QWORD *)(a1 + 344) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 312);
  if (v3)
  {
    *(_QWORD *)(a1 + 320) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 288);
  if (v4)
  {
    *(_QWORD *)(a1 + 296) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 264);
  if (v5)
  {
    *(_QWORD *)(a1 + 272) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 240);
  if (v6)
  {
    *(_QWORD *)(a1 + 248) = v6;
    operator delete(v6);
  }
  v7 = *(void **)(a1 + 216);
  if (v7)
  {
    *(_QWORD *)(a1 + 224) = v7;
    operator delete(v7);
  }
  v8 = *(void **)(a1 + 192);
  if (v8)
  {
    *(_QWORD *)(a1 + 200) = v8;
    operator delete(v8);
  }
  v9 = *(void **)(a1 + 168);
  if (v9)
  {
    *(_QWORD *)(a1 + 176) = v9;
    operator delete(v9);
  }
  v10 = *(void **)(a1 + 144);
  if (v10)
  {
    *(_QWORD *)(a1 + 152) = v10;
    operator delete(v10);
  }
  v11 = *(void **)(a1 + 120);
  if (v11)
  {
    *(_QWORD *)(a1 + 128) = v11;
    operator delete(v11);
  }
  v12 = *(void **)(a1 + 96);
  if (v12)
  {
    *(_QWORD *)(a1 + 104) = v12;
    operator delete(v12);
  }
  v13 = *(void **)(a1 + 72);
  if (v13)
  {
    *(_QWORD *)(a1 + 80) = v13;
    operator delete(v13);
  }
  v14 = *(void **)(a1 + 48);
  if (v14)
  {
    *(_QWORD *)(a1 + 56) = v14;
    operator delete(v14);
  }
  v15 = *(void **)(a1 + 24);
  if (v15)
  {
    *(_QWORD *)(a1 + 32) = v15;
    operator delete(v15);
  }
  v16 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v16;
    operator delete(v16);
  }
  return a1;
}

uint64_t sub_23919A01C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_239107FF0((_QWORD *)a1, *(char **)a2, *(char **)(a2 + 8), *(_QWORD *)(a2 + 8) - *(_QWORD *)a2);
    sub_239107FF0((_QWORD *)(a1 + 24), *(char **)(a2 + 24), *(char **)(a2 + 32), *(_QWORD *)(a2 + 32) - *(_QWORD *)(a2 + 24));
    sub_239107FF0((_QWORD *)(a1 + 48), *(char **)(a2 + 48), *(char **)(a2 + 56), *(_QWORD *)(a2 + 56) - *(_QWORD *)(a2 + 48));
    sub_239107FF0((_QWORD *)(a1 + 72), *(char **)(a2 + 72), *(char **)(a2 + 80), *(_QWORD *)(a2 + 80) - *(_QWORD *)(a2 + 72));
    sub_239107FF0((_QWORD *)(a1 + 96), *(char **)(a2 + 96), *(char **)(a2 + 104), *(_QWORD *)(a2 + 104) - *(_QWORD *)(a2 + 96));
    *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    sub_239107FF0((_QWORD *)(a1 + 128), *(char **)(a2 + 128), *(char **)(a2 + 136), *(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128));
    sub_239107FF0((_QWORD *)(a1 + 152), *(char **)(a2 + 152), *(char **)(a2 + 160), *(_QWORD *)(a2 + 160) - *(_QWORD *)(a2 + 152));
  }
  return a1;
}

uint64_t sub_23919A0C4(uint64_t result, _BYTE *a2, int a3)
{
  switch((int)result)
  {
    case 1:
      *a2 = a3;
      break;
    case 2:
      *(_WORD *)a2 = a3;
      break;
    case 8:
      *(_QWORD *)a2 = a3;
      break;
    default:
      *(_DWORD *)a2 = a3;
      break;
  }
  return result;
}

uint64_t sub_23919A10C(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t i;
  uint64_t (**v8)(uint64_t, unsigned int *, uint64_t);
  size_t v9;
  int v11;
  uint64_t v12;
  unsigned int v13;
  char v14;
  const char *v15;
  size_t v16;
  void *v17;
  size_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  const char *v23;
  _DWORD *v24;
  _DWORD *v25;
  void *v26;
  unsigned int *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t j;
  uint64_t v32;
  const char *v33;

  v4 = a3;
  for (i = a4; ; i = *(_QWORD *)(i + 24))
  {
    v8 = *(uint64_t (***)(uint64_t, unsigned int *, uint64_t))(i + 16);
    if (v8 && *v8)
      return (*v8)(a1, a2, a3);
    if ((*(_DWORD *)i & 0xFFFFFFFE) != 0xAA)
      break;
  }
  if ((*(_BYTE *)(i + 4) & 4) != 0)
  {
    if ((unsigned int *)a1 != a2 && (a3 & 0x10) != 0)
      sub_23919A5E4((_QWORD *)a1, i);
    if ((v4 & 0x10) != 0 && (unsigned int *)a1 == a2)
      goto LABEL_16;
    v11 = *(_DWORD *)i;
    if (*(int *)i > 145)
    {
      switch(v11)
      {
        case 172:
          if (!*(_QWORD *)(i + 24))
            goto LABEL_71;
          v26 = (void *)a1;
          v27 = a2;
          v28 = v4;
          goto LABEL_83;
        case 173:
          if ((v4 & 0x20) == 0)
            memcpy((void *)a1, a2, *(_QWORD *)(i + 8));
          v29 = *(_DWORD *)(i + 32);
          if (v29)
          {
            v30 = 0;
            for (j = 0; j < v29; ++j)
            {
              v32 = *(_QWORD *)(i + 24);
              if ((*(_BYTE *)(*(_QWORD *)(v32 + v30) + 4) & 4) != 0)
              {
                sub_23919A10C(*(_QWORD *)(v32 + v30 + 8) + a1, (char *)a2 + *(_QWORD *)(v32 + v30 + 8), v4 & 0xF | 0x20);
                v29 = *(_DWORD *)(i + 32);
              }
              v30 += 24;
            }
          }
          goto LABEL_16;
        case 174:
        case 176:
          bzero((void *)a1, *(_QWORD *)(i + 8));
          v12 = *(unsigned int *)(i + 48);
          switch((int)v12)
          {
            case 1:
              v13 = *(unsigned __int8 *)a2;
              break;
            case 2:
              v13 = *(__int16 *)a2;
              break;
            default:
              v13 = *a2;
              break;
          }
          sub_23919A0C4(v12, (_BYTE *)a1, v13);
          if (v13 < *(_DWORD *)(i + 32))
            sub_23919A10C(*(_QWORD *)(i + 40) + a1, (char *)a2 + *(_QWORD *)(i + 40), v4 & 0xF);
          LOBYTE(v4) = v4 & 0x1F;
          goto LABEL_16;
        case 175:
        case 177:
        case 178:
        case 182:
        case 185:
          goto LABEL_71;
        case 179:
        case 180:
        case 181:
          goto LABEL_57;
        case 183:
        case 184:
          if (*(_DWORD *)(i + 32))
          {
            v20 = 0;
            do
            {
              v21 = *(_QWORD *)(*(_QWORD *)(i + 24) + 8) * v20;
              sub_23919A10C(v21 + a1, (char *)a2 + v21, v4 & 0xF);
              ++v20;
            }
            while (v20 < *(int *)(i + 32));
          }
          goto LABEL_16;
        case 186:
          v33 = *(const char **)a2;
          if ((v4 & 1) != 0 && v33)
          {
            v26 = malloc_type_calloc(1uLL, *(_QWORD *)(*(_QWORD *)(i + 24) + 8), 0xE275099CuLL);
            *(_QWORD *)a1 = v26;
            v27 = *(unsigned int **)a2;
            v28 = 9;
LABEL_83:
            sub_23919A10C(v26, v27, v28);
          }
          else
          {
            *(_QWORD *)a1 = v33;
            *(_QWORD *)a2 = 0;
          }
          break;
        default:
          if (v11 != 146)
            goto LABEL_71;
LABEL_57:
          v22 = a2[4];
          if (v22 >= 1 && ((v4 & 1) != 0 || (v4 & 2) != 0 && a2[5]))
          {
            v23 = *(const char **)a2;
            v24 = malloc_type_calloc(1uLL, *(_QWORD *)(i + 32), 0xABB6DAB2uLL);
            *(_QWORD *)a1 = v24;
            while (1)
            {
              sub_23919A10C((char *)v24 + *(_QWORD *)(i + 40), &v23[*(_QWORD *)(i + 40)], v4 & 7 | 8);
              if (*(_DWORD *)i == 180)
                v24[2] = *((_DWORD *)v23 + 2);
              v23 = *(const char **)v23;
              if (!v23)
                break;
              v25 = malloc_type_calloc(1uLL, *(_QWORD *)(i + 32), 0xAFB415BFuLL);
              *(_QWORD *)v24 = v25;
              v24 = v25;
            }
            *(_QWORD *)v24 = 0;
            *(_QWORD *)(a1 + 8) = v24;
            v22 = a2[4];
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          *(_DWORD *)(a1 + 16) = v22;
          LOBYTE(v4) = v4 & 0x1F;
          break;
      }
      goto LABEL_16;
    }
    if (v11 <= 140)
    {
      if (v11 == 136)
        goto LABEL_36;
      if (v11 == 138 || v11 == 140)
      {
        v16 = *a2;
        if ((int)v16 >= 1 && ((v4 & 1) != 0 || (v4 & 2) != 0 && a2[1]))
        {
          v17 = malloc_type_calloc(1uLL, v16, 0xE945716AuLL);
          *(_QWORD *)(a1 + 8) = v17;
          memcpy(v17, *((const void **)a2 + 1), (int)*a2);
        }
        else
        {
          *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        }
        *(_DWORD *)a1 = *a2;
LABEL_16:
        if ((*(_DWORD *)i - 136) <= 0x2D)
        {
          if (((1 << (*(_BYTE *)i + 120)) & 0x1E1) != 0)
          {
            if (*(_QWORD *)a1)
            {
              if ((v4 & 8) != 0)
                v14 = 86;
              else
                v14 = 84;
              **(_BYTE **)a1 = v14;
            }
          }
          else if (((1 << (*(_BYTE *)i + 120)) & 0x280000000400) != 0)
          {
            *(_DWORD *)(a1 + 20) = v4 & 8;
          }
          else if (((1 << (*(_BYTE *)i + 120)) & 0x14) != 0)
          {
            *(_DWORD *)(a1 + 4) = v4 & 8;
          }
        }
        return a1;
      }
    }
    else if ((v11 - 141) < 4)
    {
LABEL_36:
      v15 = *(const char **)a2;
      if (*(_QWORD *)a2 && ((v4 & 1) != 0 || (v4 & 2) != 0 && *v15 != 84))
      {
        v18 = strlen(v15);
        v19 = (char *)malloc_type_calloc(1uLL, v18 + 1, 0xB7754DC3uLL);
        *(_QWORD *)a1 = v19;
        strcpy(v19, *(const char **)a2);
      }
      else
      {
        *(_QWORD *)a1 = v15;
      }
      goto LABEL_16;
    }
LABEL_71:
    memcpy((void *)a1, a2, *(_QWORD *)(i + 8));
    goto LABEL_16;
  }
  if ((unsigned int *)a1 != a2)
  {
    if (*(_DWORD *)i == 128)
      v9 = *(_QWORD *)(a4 + 8);
    else
      v9 = *(_QWORD *)(i + 8);
    memcpy((void *)a1, a2, v9);
  }
  return a1;
}

void sub_23919A5E4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(_QWORD *);
  int v6;
  int v7;
  void *v8;
  unint64_t v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  unint64_t i;
  uint64_t v14;

  while (1)
  {
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(void (**)(_QWORD *))(v4 + 16);
      if (v5)
      {
        v5(a1);
        return;
      }
    }
    v6 = *(_DWORD *)a2;
    if ((*(_DWORD *)a2 - 170) >= 2)
      break;
    a2 = *(_QWORD *)(a2 + 24);
  }
  if (v6 > 145)
  {
    switch(v6)
    {
      case 173:
        v11 = *(_DWORD *)(a2 + 32);
        if (v11)
        {
          v12 = 0;
          for (i = 0; i < v11; ++i)
          {
            v14 = *(_QWORD *)(a2 + 24);
            if ((*(_BYTE *)(*(_QWORD *)(v14 + v12) + 4) & 1) != 0)
            {
              sub_23919A5E4((char *)a1 + *(_QWORD *)(v14 + v12 + 8));
              v11 = *(_DWORD *)(a2 + 32);
            }
            v12 += 24;
          }
        }
        return;
      case 174:
      case 176:
        switch(*(_DWORD *)(a2 + 48))
        {
          case 1:
            v7 = *(unsigned __int8 *)a1;
            break;
          case 2:
            v7 = *(__int16 *)a1;
            break;
          default:
            v7 = *(_DWORD *)a1;
            break;
        }
        if (v7 < (unint64_t)*(unsigned int *)(a2 + 32)
          && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 8 * v7) + 4) & 1) != 0)
        {
          sub_23919A5E4((char *)a1 + *(_QWORD *)(a2 + 40));
        }
        bzero(a1, *(_QWORD *)(a2 + 8));
        return;
      case 175:
      case 177:
      case 178:
      case 182:
      case 185:
        return;
      case 179:
      case 180:
      case 181:
        goto LABEL_29;
      case 183:
      case 184:
        if ((*(_BYTE *)(*(_QWORD *)(a2 + 24) + 4) & 1) != 0 && *(_DWORD *)(a2 + 32))
        {
          v9 = 0;
          do
            sub_23919A5E4((char *)a1 + *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8) * v9++);
          while (v9 < *(int *)(a2 + 32));
        }
        return;
      case 186:
        v8 = (void *)*a1;
        if (!*a1)
          return;
        if ((*(_BYTE *)(*(_QWORD *)(a2 + 24) + 4) & 1) != 0)
        {
          ((void (*)(void))sub_23919A5E4)();
          v8 = (void *)*a1;
        }
        break;
      default:
        if (v6 == 146)
        {
LABEL_29:
          while (1)
          {
            v10 = (_QWORD *)*a1;
            if (!*a1)
              break;
            if ((*(_BYTE *)(*(_QWORD *)(a2 + 24) + 4) & 1) != 0)
              sub_23919A5E4((char *)v10 + *(_QWORD *)(a2 + 40));
            *a1 = *v10;
            free(v10);
          }
        }
        return;
    }
    goto LABEL_17;
  }
  if (v6 > 140)
  {
    if ((v6 - 141) >= 4)
      return;
LABEL_11:
    v8 = (void *)*a1;
    if (!*a1)
      return;
    goto LABEL_17;
  }
  if (v6 == 136)
    goto LABEL_11;
  if (v6 == 138 || v6 == 140)
  {
    v8 = (void *)a1[1];
    if (v8)
LABEL_17:
      free(v8);
  }
}

uint64_t sub_23919A824(unsigned int *a1, unsigned __int8 *a2, __int16 *a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  unsigned int v11;
  _BYTE *v12;

  result = *a1;
  if (!(_DWORD)result)
  {
    if (!setjmp((int *)a1 + 1))
    {
      *((_BYTE *)a1 + 196) = 1;
      *a1 = 0;
      *((_QWORD *)a1 + 25) = a2;
      *((_QWORD *)a1 + 89) = 1;
      *((_QWORD *)a1 + 101) = a2;
      *((_QWORD *)a1 + 102) = a3;
      v7 = *((_QWORD *)a1 + 96);
      *((_QWORD *)a1 + 105) = *((_QWORD *)a1 + 95);
      *((_QWORD *)a1 + 106) = v7;
      LOBYTE(v7) = *((_BYTE *)a1 + 801);
      *((_BYTE *)a1 + 872) = v7;
      v8 = *((_QWORD *)a1 + 98);
      *((_QWORD *)a1 + 107) = v8;
      *((_QWORD *)a1 + 108) = v8;
      *((_BYTE *)a1 + 873) = v7;
      if ((*((_BYTE *)a1 + 825) & 8) == 0)
        *((_QWORD *)a1 + 103) = 2080;
      sub_23919CA58((uint64_t)a1, a2, a3);
      if (*((_QWORD *)a1 + 108) == *((_QWORD *)a1 + 107)
        && *((unsigned __int8 *)a1 + 873) == *((unsigned __int8 *)a1 + 872))
      {
        sub_23919AEA0((char *)a1, 0);
      }
      if ((a1[206] & 0x10) != 0)
      {
        v10 = (_BYTE *)*((_QWORD *)a1 + 108);
        v11 = *((unsigned __int8 *)a1 + 873);
      }
      else
      {
        v9 = *((unsigned __int8 *)a1 + 873);
        v10 = (_BYTE *)*((_QWORD *)a1 + 108);
        v11 = 7;
        if (v9 != 7)
        {
          *v10 &= -2 << v9;
          v10 = (_BYTE *)(*((_QWORD *)a1 + 108) + 1);
          *((_QWORD *)a1 + 108) = v10;
          *((_BYTE *)a1 + 873) = 7;
        }
      }
      v12 = &v10[-*((_QWORD *)a1 + 107)];
      *((_QWORD *)a1 + 98) += v12;
      *((_BYTE *)a1 + 801) = v11;
      *((_QWORD *)a1 + 104) = *((unsigned __int8 *)a1 + 872) - (unint64_t)v11 + 8 * (_QWORD)v12;
    }
    *((_BYTE *)a1 + 196) = 0;
    return *a1;
  }
  return result;
}

uint64_t sub_23919A988(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v3 = result;
  v4 = *(_QWORD *)(result + 856);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(result + 736);
  if (v5)
  {
    result = v5(result, a2);
    *(_BYTE *)(v3 + 872) = *(_BYTE *)(v3 + 801);
    v6 = *(_QWORD *)(v3 + 784);
    *(_QWORD *)(v3 + 856) = v6;
  }
  else
  {
    v6 = *(_QWORD *)(result + 856);
  }
  if (v6 - v4 < a2)
    return sub_2391AE48C(v3, 22);
  return result;
}

char *sub_23919AA08(char *result, char a2)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  char v9;
  char v10;

  v3 = result;
  v4 = (char *)*((_QWORD *)result + 108);
  if (v4 == *((char **)result + 106))
  {
    v5 = *((_QWORD *)result + 105);
    v6 = *((_QWORD *)result + 107) - v5;
    v7 = &v4[-v5];
    result = sub_2391BBE54((uint64_t)result, 1);
    *((_QWORD *)v3 + 105) = result;
    v4 = &v7[(_QWORD)result];
    *((_QWORD *)v3 + 106) = &v7[(_QWORD)result + 1];
    *((_QWORD *)v3 + 107) = &result[v6];
    *((_QWORD *)v3 + 108) = &v7[(_QWORD)result];
  }
  v8 = v3[873];
  if (v8 == 7)
  {
    *v4 = a2 << 7;
    v9 = v3[873];
  }
  else
  {
    *v4 |= a2 << v8;
    v9 = v3[873];
    if (!v9)
    {
      ++*((_QWORD *)v3 + 108);
      v10 = 7;
      goto LABEL_8;
    }
  }
  v10 = v9 - 1;
LABEL_8:
  v3[873] = v10;
  return result;
}

uint64_t sub_23919AAC8(uint64_t a1)
{
  unsigned __int8 *v2;
  unsigned int v3;
  char v4;
  char v5;

  v2 = *(unsigned __int8 **)(a1 + 864);
  if (v2 == *(unsigned __int8 **)(a1 + 856))
  {
    sub_23919A988(a1, 1);
    v2 = *(unsigned __int8 **)(a1 + 864);
  }
  v3 = *v2;
  v4 = *(_BYTE *)(a1 + 873);
  if (v4)
  {
    v5 = v4 - 1;
  }
  else
  {
    *(_QWORD *)(a1 + 864) = v2 + 1;
    v5 = 7;
  }
  *(_BYTE *)(a1 + 873) = v5;
  return (v3 >> v4) & 1;
}

char *sub_23919AB30(char *result, unint64_t a2, unsigned int a3)
{
  char *v3;
  int v5;
  unsigned __int8 v6;
  char v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int v17;
  _BYTE *v18;
  _BYTE *v19;

  if (a3)
  {
    v3 = result;
    if (a3 >= 0x21)
      sub_2391AE50C((uint64_t)result, 15);
    v5 = result[873];
    v6 = a3 - v5 + 7;
    v7 = v6 & 7;
    v8 = v6 >> 3;
    v9 = (char *)*((_QWORD *)result + 108);
    if ((v6 & 7) != 0)
      v10 = (unint64_t)&v9[v8 + 1];
    else
      v10 = (unint64_t)&v9[v8];
    v11 = *((_QWORD *)result + 106);
    if (v10 > v11)
    {
      v12 = (uint64_t)&v9[((v6 & 7) != 0) + v8 - v11];
      v13 = *((_QWORD *)result + 105);
      v14 = *((_QWORD *)result + 107) - v13;
      v15 = &v9[-v13];
      v16 = v11 - v13;
      result = sub_2391BBE54((uint64_t)result, v12);
      *((_QWORD *)v3 + 105) = result;
      *((_QWORD *)v3 + 106) = &result[v16 + v12];
      *((_QWORD *)v3 + 107) = &result[v14];
      v9 = &v15[(_QWORD)result];
      *((_QWORD *)v3 + 108) = &v15[(_QWORD)result];
      v5 = v3[873];
    }
    if (v5 == 7)
      *v9 = 0;
    if (v6 >= 8u)
    {
      v19 = (_BYTE *)(*((_QWORD *)v3 + 108) + v8);
      *((_QWORD *)v3 + 108) = v19;
      if ((v6 & 7) != 0)
      {
        *v19 = a2 << (8 - v7);
        a2 >>= v7;
        v19 = (_BYTE *)*((_QWORD *)v3 + 108);
      }
      v18 = v19 - 1;
      if (v6 >= 0x10u)
      {
        do
        {
          *v18-- = a2;
          LODWORD(v8) = v8 - 1;
          a2 >>= 8;
        }
        while (v8 > 1u);
      }
      v17 = (0xFFu >> (7 - v3[873])) & a2;
    }
    else
    {
      v17 = (0xFFu >> (7 - v3[873])) & ((_DWORD)a2 << (8 - v7));
      v18 = (_BYTE *)*((_QWORD *)v3 + 108);
    }
    *v18 |= v17;
    v3[873] = v7 ^ 7;
  }
  return result;
}

unint64_t sub_23919ACE0(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;

  if (!a2)
    return 0;
  if (a2 > 0x20
    || (v2 = *(unsigned __int8 *)(a1 + 873),
        v3 = *(unint64_t **)(a1 + 864),
        v4 = v2 - *(unsigned __int8 *)(a1 + 872) + 8 * (*(_QWORD *)(a1 + 856) - (_QWORD)v3),
        v4 < a2))
  {
    sub_23919AD78(a1, a2);
    return 0;
  }
  if (v4 < 0x40)
    return sub_23919ADB0(a1, a2);
  v5 = *v3;
  *(_QWORD *)(a1 + 864) = (char *)v3 + ((int)(7 - v2 + a2) >> 3);
  *(_BYTE *)(a1 + 873) = (v2 - a2) & 7;
  return bswap64(v5) << (7 - v2) >> -(char)a2;
}

uint64_t sub_23919AD78(uint64_t a1, unsigned int a2)
{
  if (a2 >= 0x21)
    sub_2391AE50C(a1, 15);
  return sub_2391AE48C(a1, 22);
}

uint64_t sub_23919ADB0(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;
  unsigned __int8 *v4;
  unint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(unsigned __int8 *)(a1 + 873);
  if (v2 == 7)
  {
    v3 = 0;
  }
  else
  {
    v4 = *(unsigned __int8 **)(a1 + 864);
    v5 = (*v4 << (7 - v2));
    if (v2 + 1 >= a2)
    {
      v3 = v5 >> (8 - a2);
      if (v2 + 1 == a2)
      {
        *(_BYTE *)(a1 + 873) = 7;
        *(_QWORD *)(a1 + 864) = v4 + 1;
        return v3;
      }
      v7 = v2 - a2;
LABEL_14:
      *(_BYTE *)(a1 + 873) = v7;
      return v3;
    }
    v3 = v5 >> (7 - v2);
    LOBYTE(a2) = ~(_BYTE)v2 + a2;
    *(_QWORD *)(a1 + 864) = v4 + 1;
  }
  if (a2 >= 8u)
  {
    v6 = *(_QWORD *)(a1 + 864) + 1;
    do
    {
      v3 = *(unsigned __int8 *)(v6 - 1) | (v3 << 8);
      LOBYTE(a2) = a2 - 8;
      *(_QWORD *)(a1 + 864) = v6++;
    }
    while (a2 > 7u);
  }
  if (!(_BYTE)a2)
  {
    v7 = 7;
    goto LABEL_14;
  }
  *(_BYTE *)(a1 + 873) = a2 ^ 7;
  return (v3 << a2) | (**(unsigned __int8 **)(a1 + 864) >> (8 - a2));
}

char *sub_23919AEA0(char *result, unsigned int a2)
{
  char *v3;
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v3 = result;
  v4 = result[873];
  v5 = (char *)*((_QWORD *)result + 108);
  if (v4 == 7)
  {
    if (v5 == *((char **)result + 106))
    {
      v6 = *((_QWORD *)result + 105);
      v7 = *((_QWORD *)result + 107) - v6;
      v8 = &v5[-v6];
      result = sub_2391BBE54((uint64_t)result, 1);
      *((_QWORD *)v3 + 105) = result;
      v5 = &v8[(_QWORD)result];
      *((_QWORD *)v3 + 106) = &v8[(_QWORD)result + 1];
      *((_QWORD *)v3 + 107) = &result[v7];
      *((_QWORD *)v3 + 108) = &v8[(_QWORD)result];
    }
    *v5 = a2;
    ++*((_QWORD *)v3 + 108);
  }
  else
  {
    if (v5 + 1 == *((char **)result + 106))
    {
      v9 = *((_QWORD *)result + 105);
      v10 = *((_QWORD *)result + 107) - v9;
      v11 = &v5[-v9];
      v12 = &v5[-v9 + 1];
      result = sub_2391BBE54((uint64_t)result, 1);
      *((_QWORD *)v3 + 105) = result;
      *((_QWORD *)v3 + 106) = &v12[(_QWORD)result + 1];
      *((_QWORD *)v3 + 107) = &result[v10];
      v5 = &v11[(_QWORD)result];
      *((_QWORD *)v3 + 108) = &v11[(_QWORD)result];
      LOBYTE(v4) = v3[873];
    }
    *v5 |= a2 >> (7 - v4);
    v13 = *((_QWORD *)v3 + 108);
    *((_QWORD *)v3 + 108) = v13 + 1;
    *(_BYTE *)(v13 + 1) = a2 << (v3[873] + 1);
  }
  return result;
}

uint64_t sub_23919AFC0(uint64_t a1)
{
  int v2;
  _BYTE *v3;
  int v4;
  unsigned __int8 *v5;
  uint64_t v6;
  int v7;

  v2 = *(unsigned __int8 *)(a1 + 873);
  if (v2 == 7)
  {
    v3 = *(_BYTE **)(a1 + 864);
    if (v3 == *(_BYTE **)(a1 + 856))
    {
      sub_23919A988(a1, 1);
      v3 = *(_BYTE **)(a1 + 864);
    }
    LOBYTE(v4) = *v3;
    *(_QWORD *)(a1 + 864) = v3 + 1;
  }
  else
  {
    v5 = *(unsigned __int8 **)(a1 + 864);
    v6 = *(_QWORD *)(a1 + 856) - (_QWORD)v5;
    if (v6 <= 1)
    {
      sub_23919A988(a1, 2 - v6);
      v5 = *(unsigned __int8 **)(a1 + 864);
      LOBYTE(v2) = *(_BYTE *)(a1 + 873);
    }
    v7 = *v5 << (7 - v2);
    *(_QWORD *)(a1 + 864) = v5 + 1;
    return ((v5[1] >> (v2 + 1)) | v7);
  }
  return v4;
}

void sub_23919B06C(uint64_t a1, size_t a2)
{
  int v4;
  char *v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v4 = *(unsigned __int8 *)(a1 + 873);
  v5 = *(char **)(a1 + 864);
  v6 = &v5[a2];
  v7 = *(_QWORD *)(a1 + 848);
  if (v4 == 7)
  {
    if ((unint64_t)v6 > v7)
    {
      v8 = (uint64_t)&v5[a2 - v7];
      v9 = *(_QWORD *)(a1 + 840);
      v10 = *(_QWORD *)(a1 + 856) - v9;
      v11 = &v5[-v9];
      v12 = v7 - v9;
      v13 = sub_2391BBE54(a1, v8);
      *(_QWORD *)(a1 + 840) = v13;
      *(_QWORD *)(a1 + 848) = &v13[v12 + v8];
      *(_QWORD *)(a1 + 856) = &v13[v10];
      v5 = &v11[(_QWORD)v13];
      *(_QWORD *)(a1 + 864) = v5;
    }
  }
  else
  {
    if ((unint64_t)v6 >= v7)
    {
      v14 = (uint64_t)&v5[a2 - v7 + 1];
      v15 = *(_QWORD *)(a1 + 840);
      v16 = *(_QWORD *)(a1 + 856) - v15;
      v17 = &v5[-v15];
      v18 = v7 - v15;
      v19 = sub_2391BBE54(a1, v14);
      *(_QWORD *)(a1 + 840) = v19;
      *(_QWORD *)(a1 + 848) = &v19[v18 + v14];
      *(_QWORD *)(a1 + 856) = &v19[v16];
      v5 = &v17[(_QWORD)v19];
      *(_QWORD *)(a1 + 864) = v5;
      LOBYTE(v4) = *(_BYTE *)(a1 + 873);
    }
    *v5 &= 510 << v4;
    v5 = (char *)(*(_QWORD *)(a1 + 864) + 1);
  }
  bzero(v5, a2);
  *(_QWORD *)(a1 + 864) += a2;
}

uint64_t sub_23919B190(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  if (a2)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + 864);
    v5 = v4 + a2;
    if (*(_BYTE *)(result + 873) == 7)
    {
      v6 = *(_QWORD *)(result + 856);
      if (v5 > v6)
      {
        v7 = v4 + a2 - v6;
LABEL_7:
        result = sub_23919A988(result, v7);
        v4 = *(_QWORD *)(v3 + 864);
      }
    }
    else
    {
      v8 = v5 + 1;
      v9 = *(_QWORD *)(result + 856);
      if (v8 > v9)
      {
        v7 = a2 + v4 - v9 + 1;
        goto LABEL_7;
      }
    }
    *(_QWORD *)(v3 + 864) = v4 + a2;
  }
  return result;
}

char *sub_23919B210(char *result, unsigned __int8 *__src, size_t __n)
{
  size_t v3;
  uint64_t v5;
  int v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;

  if (__n)
  {
    v3 = __n;
    v5 = (uint64_t)result;
    v6 = result[873];
    result = (char *)*((_QWORD *)result + 108);
    v7 = &result[__n];
    if (v6 == 7)
    {
      v8 = *(char **)(v5 + 848);
      if (v7 > v8)
      {
        v9 = result - v8 + __n;
        v10 = *(_QWORD *)(v5 + 840);
        v11 = *(_QWORD *)(v5 + 856) - v10;
        v12 = &result[-v10];
        v13 = &v8[-v10];
        v14 = sub_2391BBE54(v5, v9);
        *(_QWORD *)(v5 + 840) = v14;
        *(_QWORD *)(v5 + 848) = &v13[v9 + (_QWORD)v14];
        *(_QWORD *)(v5 + 856) = &v14[v11];
        result = &v12[(_QWORD)v14];
        *(_QWORD *)(v5 + 864) = result;
      }
      result = (char *)memcpy(result, __src, v3);
      *(_QWORD *)(v5 + 864) += v3;
    }
    else
    {
      v15 = *(_QWORD *)(v5 + 848);
      if ((unint64_t)(v7 + 1) > v15)
      {
        v16 = (uint64_t)&result[__n - v15 + 1];
        v17 = *(_QWORD *)(v5 + 840);
        v18 = *(_QWORD *)(v5 + 856) - v17;
        v19 = &result[-v17];
        v20 = v15 - v17;
        result = sub_2391BBE54(v5, v16);
        *(_QWORD *)(v5 + 840) = result;
        *(_QWORD *)(v5 + 848) = &result[v20 + v16];
        *(_QWORD *)(v5 + 856) = &result[v18];
        *(_QWORD *)(v5 + 864) = &v19[(_QWORD)result];
      }
      do
      {
        **(_BYTE **)(v5 + 864) |= *__src >> (7 - *(_BYTE *)(v5 + 873));
        v21 = *(_QWORD *)(v5 + 864);
        *(_QWORD *)(v5 + 864) = v21 + 1;
        v22 = *__src++;
        *(_BYTE *)(v21 + 1) = v22 << (*(_BYTE *)(v5 + 873) + 1);
        --v3;
      }
      while (v3);
    }
  }
  return result;
}

uint64_t sub_23919B37C(_QWORD *a1, unint64_t a2)
{
  size_t v2;
  _BYTE *v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;
  unsigned __int16 v8;
  unint64_t v9;
  unsigned __int16 v10;
  BOOL v11;
  unsigned int v12;
  BOOL v13;
  unsigned __int16 v14;
  BOOL v15;
  int64_t v16;
  size_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unsigned __int16 v21;
  uint64_t v22;
  char *v23;
  BOOL v24;

  v2 = a2;
  if (a2 >= 0x4000)
  {
    v6 = (a2 - 0x10000) >> 16;
    v7 = v6 + 1;
    if (a2 >> 16)
      v8 = v6 + 1;
    else
      v8 = 0;
    v9 = (unsigned __int16)a2 >> 14;
    if ((unsigned __int16)a2 < 0x4000uLL)
      v10 = v8;
    else
      v10 = v8 + 1;
    v11 = (unsigned __int16)a2 < 0x4000uLL;
    if ((unsigned __int16)a2 >= 0x4000uLL)
      v12 = 0x4000;
    else
      v12 = 0;
    if ((unsigned __int16)a2 >= 0x8000uLL)
    {
      v10 = v8 + 1;
      v11 = 0;
      v12 = 0x8000;
    }
    v13 = v9 > 2;
    if (v9 > 2)
      v14 = v8 + 1;
    else
      v14 = v10;
    v15 = v9 <= 2 && v11;
    if (v13)
      v16 = 49152;
    else
      v16 = v12;
    v17 = (unsigned __int16)a2 - (unint64_t)v16;
    v24 = v15;
    if (v17 < 0x80)
    {
      sub_23919B06C((uint64_t)a1, v14);
      v18 = (char *)(a1[108] - v17 - v14);
      if ((unint64_t)v18 < a1[105])
        sub_2391AE48C((uint64_t)a1, 43);
      if (v17 > a1[106] - (_QWORD)&v18[v14])
        sub_2391AE48C((uint64_t)a1, 43);
      result = (uint64_t)memmove(&v18[v14], v18, v17);
    }
    else
    {
      sub_23919B06C((uint64_t)a1, v14 + 1);
      v18 = (char *)(a1[108] + ~(v17 + v14));
      if ((unint64_t)v18 < a1[105])
        sub_2391AE48C((uint64_t)a1, 43);
      if (v17 > a1[106] - (_QWORD)&v18[v14 + 1])
        sub_2391AE48C((uint64_t)a1, 43);
      result = (uint64_t)memmove(&v18[v14 + 1], v18, v17);
      v18[v14] = v2;
      LODWORD(v2) = (v17 >> 8) | 0xFFFFFF80;
    }
    v18[v14 - 1] = v2;
    if (!v24)
    {
      --v14;
      v18 -= v16;
      if ((unint64_t)v18 < a1[105])
        result = sub_2391AE48C((uint64_t)a1, 43);
      if (v14)
      {
        v19 = v14;
        if (a1[106] - (_QWORD)&v18[v14] < v16)
          sub_2391AE48C((uint64_t)a1, 43);
        result = (uint64_t)memmove(&v18[v14], v18, v16);
      }
      else
      {
        v19 = 0;
      }
      v18[v19 - 1] = (v16 >> 14) | 0xC0;
    }
    if (v8)
    {
      if (v8 == 1)
      {
        v20 = v18;
      }
      else
      {
        v21 = v14 - 1;
        v22 = 0x10000 - (_QWORD)v18;
        do
        {
          v20 = v18 - 0x10000;
          if ((unint64_t)(v18 - 0x10000) < a1[105])
            sub_2391AE48C((uint64_t)a1, 43);
          if (a1[106] + v22 - v21 < 0x10000)
            sub_2391AE48C((uint64_t)a1, 43);
          v23 = &v18[v21];
          result = (uint64_t)memmove(v23 - 0x10000, v20, 0x10000uLL);
          *(v23 - 65537) = -60;
          --v7;
          --v21;
          v22 += 0x10000;
          v18 = v20;
        }
        while ((unsigned __int16)v7 > 1u);
      }
      if ((unint64_t)(v20 - 65537) < a1[105])
        result = sub_2391AE48C((uint64_t)a1, 43);
      *(v20 - 65537) = -60;
    }
  }
  else
  {
    sub_23919B06C((uint64_t)a1, 1uLL);
    v4 = (_BYTE *)(a1[108] + ~v2);
    if ((unint64_t)v4 < a1[105])
      sub_2391AE48C((uint64_t)a1, 43);
    if (a1[106] - (_QWORD)(v4 + 1) < v2)
      sub_2391AE48C((uint64_t)a1, 43);
    result = (uint64_t)memmove(v4 + 1, v4, v2);
    *v4 = v2;
    *(v4 - 1) = BYTE1(v2) | 0x80;
  }
  return result;
}

unint64_t sub_23919B70C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  void *v15;
  size_t v16;
  int64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 864);
  switch(sub_23919AFC0(a1))
  {
    case 0xC1u:
      v3 = *(_QWORD *)(a1 + 864) + 0x4000;
      *(_QWORD *)(a1 + 864) = v3;
      v4 = 0x4000;
      break;
    case 0xC2u:
      v3 = *(_QWORD *)(a1 + 864) + 0x8000;
      *(_QWORD *)(a1 + 864) = v3;
      v4 = 0x8000;
      break;
    case 0xC3u:
      v3 = *(_QWORD *)(a1 + 864) + 49152;
      *(_QWORD *)(a1 + 864) = v3;
      v4 = 49152;
      break;
    case 0xC4u:
      v3 = *(_QWORD *)(a1 + 864) + 0x10000;
      *(_QWORD *)(a1 + 864) = v3;
      v4 = 0x10000;
      break;
    default:
      sub_2391AE48C(a1, 26);
      v4 = 0;
      v3 = *(_QWORD *)(a1 + 864);
      break;
  }
  v5 = *(_QWORD *)(a1 + 856);
  if (v3 >= v5)
  {
    sub_23919A988(a1, v3 - v5);
    v3 = *(_QWORD *)(a1 + 864);
  }
  v6 = sub_23919AFC0(a1);
  if (v6 == 196)
  {
    v7 = -(uint64_t)v3;
    do
    {
      v8 = *(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 864);
      if (v8 < 0x10000)
        sub_23919A988(a1, 0x10000 - v8);
      v4 += 0x10000;
      if (v4 > v7 + *(_QWORD *)(a1 + 848))
        sub_2391AE48C(a1, 43);
      memmove((void *)v3, *(const void **)(a1 + 864), 0x10000uLL);
      v3 += 0x10000;
      *(_QWORD *)(a1 + 864) += 0x10000;
      v6 = sub_23919AFC0(a1);
      v7 -= 0x10000;
    }
    while (v6 == 196);
  }
  v9 = v6;
  if (v6 >= 0xC1)
  {
    v10 = (unint64_t)(v6 & 3) << 14;
    v11 = *(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 864);
    if (v10 > v11)
      sub_23919A988(a1, v10 - v11);
    v4 += v10;
    if ((uint64_t)(*(_QWORD *)(a1 + 848) - v3) < v10)
      sub_2391AE48C(a1, 43);
    memmove((void *)v3, *(const void **)(a1 + 864), v10);
    v3 += v10;
    *(_QWORD *)(a1 + 864) += v10;
    v9 = sub_23919AFC0(a1);
  }
  if ((v9 & 0xC0) == 0x80)
  {
    v12 = sub_23919AFC0(a1) & 0xFFFF80FF | ((v9 & 0x7F) << 8);
    v13 = *(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 864);
    if (v12 > v13)
      sub_23919A988(a1, v12 - v13);
    v4 += v12;
    if (*(_QWORD *)(a1 + 848) - v3 < v12)
      sub_2391AE48C(a1, 43);
    v14 = *(const void **)(a1 + 864);
    v15 = (void *)v3;
    v16 = v12;
  }
  else
  {
    if (v9 < 0)
    {
      sub_2391AE48C(a1, 26);
      goto LABEL_35;
    }
    v17 = v9 & 0x7F;
    v18 = *(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 864);
    if (v17 > v18)
      sub_23919A988(a1, v17 - v18);
    v4 += v17;
    if ((uint64_t)(*(_QWORD *)(a1 + 848) - v3) < v17)
      sub_2391AE48C(a1, 43);
    v14 = *(const void **)(a1 + 864);
    v15 = (void *)v3;
    v16 = v17;
  }
  memmove(v15, v14, v16);
LABEL_35:
  *(_QWORD *)(a1 + 864) = v2 + 1;
  return v4;
}

uint64_t sub_23919B9DC(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t result;
  _BYTE *v7;
  char v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  unsigned __int16 v13;
  unsigned int v14;
  unint64_t v15;
  _BYTE *v16;
  size_t v17;
  _BYTE *v18;
  int64_t v19;
  unsigned int v20;
  char *v21;
  unsigned __int16 v22;
  uint64_t v23;
  char v24;
  char v25;
  _BYTE *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  unint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  unsigned int v40;

  v2 = a2;
  if (a2 < 0x4000)
  {
    sub_23919B06C(a1, 1uLL);
    v4 = (_BYTE *)(*(_QWORD *)(a1 + 864) + ~v2);
    if ((unint64_t)v4 < *(_QWORD *)(a1 + 840))
      sub_2391AE48C(a1, 43);
    v5 = v4 + 1;
    if (*(_QWORD *)(a1 + 848) - (_QWORD)(v4 + 1) <= v2)
      sub_2391AE48C(a1, 43);
    result = (uint64_t)memmove(v4 + 1, v4, v2 + 1);
    v7 = (_BYTE *)(a1 + 873);
    v8 = *(v4 - 1) & (510 << *(_BYTE *)(a1 + 873));
    *(v4 - 1) = v8;
    *(v4 - 1) = v8 | ((v2 | 0x8000) >> (15 - *(_BYTE *)(a1 + 873)));
    *v4 = (v2 | 0x8000) >> (7 - *(_BYTE *)(a1 + 873));
    v9 = v4[1];
    v10 = v9 & (0xFFu >> (7 - *(_BYTE *)(a1 + 873)));
    v4[1] = v9 & (0xFFu >> (7 - *(_BYTE *)(a1 + 873)));
    goto LABEL_69;
  }
  if (a2 >> 16)
    v11 = ((a2 - 0x10000) >> 16) + 1;
  else
    LOWORD(v11) = 0;
  v40 = (a2 - 0x10000) >> 16;
  if ((unsigned __int16)((unsigned __int16)a2 >> 14) <= 2uLL)
  {
    if ((unsigned __int16)a2 < 0x8000uLL)
    {
      if ((unsigned __int16)a2 < 0x4000uLL)
      {
        v14 = 0;
        v12 = 1;
        v13 = v11;
      }
      else
      {
        v12 = 0;
        v13 = v11 + 1;
        v14 = 0x4000;
      }
    }
    else
    {
      v12 = 0;
      v13 = v11 + 1;
      v14 = 0x8000;
    }
  }
  else
  {
    v12 = 0;
    v13 = v11 + 1;
    v14 = 49152;
  }
  v15 = (unsigned __int16)a2 - (unint64_t)v14;
  if (v15 >= 0x80)
  {
    sub_23919B06C(a1, v13 + 1);
    v16 = (_BYTE *)(*(_QWORD *)(a1 + 864) + ~(v15 + v13));
    if ((unint64_t)v16 < *(_QWORD *)(a1 + 840))
      sub_2391AE48C(a1, 43);
    v17 = v15 + 1;
    v18 = &v16[v13 + 1];
    if (v15 + 1 <= *(_QWORD *)(a1 + 848) - (_QWORD)v18)
      goto LABEL_26;
LABEL_25:
    sub_2391AE48C(a1, 43);
    goto LABEL_26;
  }
  sub_23919B06C(a1, v13);
  v16 = (_BYTE *)(*(_QWORD *)(a1 + 864) - v15 - v13);
  if ((unint64_t)v16 < *(_QWORD *)(a1 + 840))
    sub_2391AE48C(a1, 43);
  v17 = v15 + 1;
  v18 = &v16[v13];
  if (v15 >= *(_QWORD *)(a1 + 848) - (_QWORD)v18)
    goto LABEL_25;
LABEL_26:
  result = (uint64_t)memmove(v18, v16, v17);
  if ((v12 & 1) == 0)
  {
    --v13;
    v16 -= v14;
    if ((unint64_t)v16 < *(_QWORD *)(a1 + 840))
      result = sub_2391AE48C(a1, 43);
    if (v13)
    {
      v19 = v14 | 1;
      if (*(_QWORD *)(a1 + 848) - (_QWORD)&v16[v13] < v19)
        sub_2391AE48C(a1, 43);
      result = (uint64_t)memmove(&v16[v13], v16, v19);
    }
    else
    {
      v13 = 0;
      --v16;
    }
  }
  if ((_WORD)v11)
  {
    if ((unsigned __int16)v11 != 1)
    {
      v20 = v40 + 1;
      v21 = v16 - 0x10000;
      v22 = v13 - 1;
      v23 = 0x10000 - (_QWORD)v16;
      do
      {
        if ((unint64_t)v21 < *(_QWORD *)(a1 + 840))
          sub_2391AE48C(a1, 43);
        if (*(_QWORD *)(a1 + 848) + v23 - v22 <= 0x10000)
          sub_2391AE48C(a1, 43);
        result = (uint64_t)memmove(&v21[v22], v21, 0x10001uLL);
        --v20;
        v21 -= 0x10000;
        --v22;
        v23 += 0x10000;
      }
      while ((unsigned __int16)v20 > 1u);
      v16 = v21 + 0x10000;
    }
    v16 -= 65537;
  }
  if (v2 >= 0x10000)
  {
    do
    {
      if ((unint64_t)v16 < *(_QWORD *)(a1 + 840))
        result = sub_2391AE48C(a1, 43);
      v24 = *v16 & (510 << *(_BYTE *)(a1 + 873));
      *v16 = v24;
      *v16 = v24 | (0xC4u >> (7 - *(_BYTE *)(a1 + 873)));
      v25 = v16[1] & (0xFFu >> (7 - *(_BYTE *)(a1 + 873)));
      v16[1] = v25;
      v16[1] = v25 | (392 << *(_BYTE *)(a1 + 873));
      v2 -= 0x10000;
      v16 += 65537;
    }
    while (v2 >> 16);
  }
  if (v2 >= 0xC000)
  {
    if ((unint64_t)v16 < *(_QWORD *)(a1 + 840))
      result = sub_2391AE48C(a1, 43);
    v26 = (_BYTE *)(a1 + 873);
    v27 = *v16 & (510 << *(_BYTE *)(a1 + 873));
    *v16 = v27;
    *v16 = v27 | (0xC3u >> (7 - *(_BYTE *)(a1 + 873)));
    v28 = v16[1] & (0xFFu >> (7 - *(_BYTE *)(a1 + 873)));
    v16[1] &= 0xFFu >> (7 - *(_BYTE *)(a1 + 873));
    v29 = -49152;
    v30 = -122;
    v31 = 49153;
LABEL_60:
    v16[1] = v28 | (v30 << *v26);
    v2 += v29;
    v16 += v31;
    goto LABEL_61;
  }
  if (v2 >= 0x8000)
  {
    if ((unint64_t)v16 < *(_QWORD *)(a1 + 840))
      result = sub_2391AE48C(a1, 43);
    v26 = (_BYTE *)(a1 + 873);
    v32 = *v16 & (510 << *(_BYTE *)(a1 + 873));
    *v16 = v32;
    *v16 = v32 | (0xC2u >> (7 - *(_BYTE *)(a1 + 873)));
    v28 = v16[1] & (0xFFu >> (7 - *(_BYTE *)(a1 + 873)));
    v16[1] &= 0xFFu >> (7 - *(_BYTE *)(a1 + 873));
    v29 = -32768;
    v30 = -124;
    v31 = 32769;
    goto LABEL_60;
  }
  if (v2 >= 0x4000)
  {
    if ((unint64_t)v16 < *(_QWORD *)(a1 + 840))
      result = sub_2391AE48C(a1, 43);
    v26 = (_BYTE *)(a1 + 873);
    v33 = *v16 & (510 << *(_BYTE *)(a1 + 873));
    *v16 = v33;
    *v16 = v33 | (0xC1u >> (7 - *(_BYTE *)(a1 + 873)));
    v28 = v16[1] & (0xFFu >> (7 - *(_BYTE *)(a1 + 873)));
    v16[1] &= 0xFFu >> (7 - *(_BYTE *)(a1 + 873));
    v29 = -16384;
    v30 = -126;
    v31 = 16385;
    goto LABEL_60;
  }
LABEL_61:
  v34 = *(_QWORD *)(a1 + 840);
  if (v2 < 0x80)
  {
    if ((unint64_t)v16 < v34)
      result = sub_2391AE48C(a1, 43);
    v7 = (_BYTE *)(a1 + 873);
    v38 = *v16 & (510 << *(_BYTE *)(a1 + 873));
    *v16 = v38;
    *v16 = v38 | (v2 >> (7 - *(_BYTE *)(a1 + 873)));
    v10 = 0xFFu >> (7 - *(_BYTE *)(a1 + 873));
    v39 = v16[1];
    v5 = v16 + 1;
    v36 = v39;
  }
  else
  {
    if ((unint64_t)v16 < v34)
      result = sub_2391AE48C(a1, 43);
    v7 = (_BYTE *)(a1 + 873);
    v35 = *v16 & (510 << *(_BYTE *)(a1 + 873));
    *v16 = v35;
    *v16 = v35 | ((v2 | 0x8000) >> (15 - *(_BYTE *)(a1 + 873)));
    v16[1] = (v2 | 0x8000) >> (7 - *(_BYTE *)(a1 + 873));
    v10 = 0xFFu >> (7 - *(_BYTE *)(a1 + 873));
    v37 = v16[2];
    v5 = v16 + 2;
    v36 = v37;
  }
  LOBYTE(v10) = v36 & v10;
  *v5 = v10;
LABEL_69:
  *v5 = v10 | (v2 << (*v7 + 1));
  return result;
}

uint64_t sub_23919C0B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v20;
  unint64_t v21;

  v2 = *(_QWORD *)(a1 + 864);
  switch(sub_23919AFC0(a1))
  {
    case 0xC1u:
      v3 = *(_QWORD *)(a1 + 864) + 0x4000;
      *(_QWORD *)(a1 + 864) = v3;
      v4 = 0x4000;
      break;
    case 0xC2u:
      v3 = *(_QWORD *)(a1 + 864) + 0x8000;
      *(_QWORD *)(a1 + 864) = v3;
      v4 = 0x8000;
      break;
    case 0xC3u:
      v3 = *(_QWORD *)(a1 + 864) + 49152;
      *(_QWORD *)(a1 + 864) = v3;
      v4 = 49152;
      break;
    case 0xC4u:
      v3 = *(_QWORD *)(a1 + 864) + 0x10000;
      *(_QWORD *)(a1 + 864) = v3;
      v4 = 0x10000;
      break;
    default:
      sub_2391AE48C(a1, 26);
      v4 = 0;
      v3 = *(_QWORD *)(a1 + 864);
      break;
  }
  v5 = *(_QWORD *)(a1 + 856);
  if (v3 >= v5)
  {
    sub_23919A988(a1, v3 - v5);
    v3 = *(_QWORD *)(a1 + 864);
  }
  v6 = sub_23919AFC0(a1);
  if (v6 == 196)
  {
    v7 = ~v3;
    do
    {
      v8 = *(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 864);
      if (v8 < 65537)
        sub_23919A988(a1, 65537 - v8);
      *(_BYTE *)v3 &= 510 << *(_BYTE *)(a1 + 873);
      **(_BYTE **)(a1 + 864) &= 0xFFu >> (7 - *(_BYTE *)(a1 + 873));
      *(_BYTE *)v3 |= **(_BYTE **)(a1 + 864);
      v9 = *(_QWORD *)(a1 + 848);
      if (*(_QWORD *)(a1 + 864) + 65537 > v9)
      {
        sub_2391AE48C(a1, 43);
        v9 = *(_QWORD *)(a1 + 848);
      }
      if ((uint64_t)(v7 + v9) < 0x10000)
        sub_2391AE48C(a1, 43);
      memmove((void *)(v3 + 1), (const void *)(*(_QWORD *)(a1 + 864) + 1), 0x10000uLL);
      v3 += 0x10000;
      *(_QWORD *)(a1 + 864) += 0x10000;
      v6 = sub_23919AFC0(a1);
      v7 -= 0x10000;
      v4 += 0x10000;
    }
    while (v6 == 196);
  }
  v10 = v6;
  if (v6 >= 0xC1)
  {
    v11 = (unint64_t)(v6 & 3) << 14;
    v12 = *(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 864);
    v13 = (unsigned __int16)((_WORD)v6 << 14) | 1u;
    if (v13 > v12)
      sub_23919A988(a1, v13 - v12);
    *(_BYTE *)v3 &= 510 << *(_BYTE *)(a1 + 873);
    **(_BYTE **)(a1 + 864) &= 0xFFu >> (7 - *(_BYTE *)(a1 + 873));
    *(_BYTE *)v3 |= **(_BYTE **)(a1 + 864);
    v14 = *(_QWORD *)(a1 + 848);
    if (*(_QWORD *)(a1 + 864) + v11 + 1 > v14)
    {
      sub_2391AE48C(a1, 43);
      v14 = *(_QWORD *)(a1 + 848);
    }
    v4 += v11;
    if ((uint64_t)(v14 - (v3 + 1)) < v11)
      sub_2391AE48C(a1, 43);
    memmove((void *)(v3 + 1), (const void *)(*(_QWORD *)(a1 + 864) + 1), (unint64_t)(v10 & 3) << 14);
    v3 += v11;
    *(_QWORD *)(a1 + 864) += v11;
    v10 = sub_23919AFC0(a1);
  }
  if ((v10 & 0xC0) == 0x80)
  {
    v15 = sub_23919AFC0(a1) & 0xFFFF80FF | ((v10 & 0x7F) << 8);
    v16 = *(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 864);
    if (v15 > v16)
      sub_23919A988(a1, v15 - v16);
    *(_BYTE *)v3 &= 510 << *(_BYTE *)(a1 + 873);
    **(_BYTE **)(a1 + 864) &= 0xFFu >> (7 - *(_BYTE *)(a1 + 873));
    *(_BYTE *)v3 |= **(_BYTE **)(a1 + 864);
    v17 = *(_QWORD *)(a1 + 848);
    if (*(_QWORD *)(a1 + 864) + v15 + 1 > v17)
    {
      sub_2391AE48C(a1, 43);
      v17 = *(_QWORD *)(a1 + 848);
    }
    v4 += v15;
    v18 = (void *)(v3 + 1);
    if (v17 - (v3 + 1) >= v15)
      goto LABEL_33;
    goto LABEL_32;
  }
  if (v10 < 0)
  {
    sub_2391AE48C(a1, 26);
    goto LABEL_34;
  }
  v15 = v10 & 0x7F;
  v20 = *(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 864);
  if (v15 > v20)
    sub_23919A988(a1, v15 - v20);
  *(_BYTE *)v3 &= 510 << *(_BYTE *)(a1 + 873);
  **(_BYTE **)(a1 + 864) &= 0xFFu >> (7 - *(_BYTE *)(a1 + 873));
  *(_BYTE *)v3 |= **(_BYTE **)(a1 + 864);
  v21 = *(_QWORD *)(a1 + 848);
  if (*(_QWORD *)(a1 + 864) + v15 + 1 > v21)
  {
    sub_2391AE48C(a1, 43);
    v21 = *(_QWORD *)(a1 + 848);
  }
  v4 += v15;
  v18 = (void *)(v3 + 1);
  if ((uint64_t)(v21 - (v3 + 1)) < v15)
LABEL_32:
    sub_2391AE48C(a1, 43);
LABEL_33:
  memmove(v18, (const void *)(*(_QWORD *)(a1 + 864) + 1), v15);
LABEL_34:
  *(_QWORD *)(a1 + 864) = v2 + 1;
  return v4;
}

uint64_t sub_23919C56C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 >= 0x4000)
  {
    if (v4 >= 0x10000)
    {
      do
      {
        if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
        {
          v5 = *(unsigned __int8 *)(a1 + 873);
          if (v5 != 7)
          {
            *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v5;
            *(_BYTE *)(a1 + 873) = 7;
          }
        }
        sub_23919AEA0((char *)a1, 0xC4u);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(a1, 0x10000, a2);
        v4 = *(_QWORD *)(a2 + 8);
      }
      while (v4 >> 16);
    }
    if (v4 >= 0xC000)
    {
      if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
      {
        v6 = *(unsigned __int8 *)(a1 + 873);
        if (v6 != 7)
        {
          *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v6;
          *(_BYTE *)(a1 + 873) = 7;
        }
      }
      sub_23919AEA0((char *)a1, 0xC3u);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(a1, 49152, a2);
      v4 = *(_QWORD *)(a2 + 8);
    }
    if (v4 >= 0x8000)
    {
      if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
      {
        v7 = *(unsigned __int8 *)(a1 + 873);
        if (v7 != 7)
        {
          *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v7;
          *(_BYTE *)(a1 + 873) = 7;
        }
      }
      sub_23919AEA0((char *)a1, 0xC2u);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(a1, 0x8000, a2);
      v4 = *(_QWORD *)(a2 + 8);
    }
    if (v4 >= 0x4000)
    {
      if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
      {
        v8 = *(unsigned __int8 *)(a1 + 873);
        if (v8 != 7)
        {
          *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v8;
          *(_BYTE *)(a1 + 873) = 7;
        }
      }
      sub_23919AEA0((char *)a1, 0xC1u);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(a1, 0x4000, a2);
    }
  }
  if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
  {
    v9 = *(unsigned __int8 *)(a1 + 873);
    if (v9 != 7)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v9;
      *(_BYTE *)(a1 + 873) = 7;
    }
  }
  v10 = *(_QWORD *)(a2 + 8);
  if (v10 > 0x7F)
    sub_23919AB30((char *)a1, v10 | 0x8000, 0x10u);
  else
    sub_23919AEA0((char *)a1, *(_QWORD *)(a2 + 8));
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(a2 + 16))(a1, *(_QWORD *)(a2 + 8), a2);
}

uint64_t sub_23919C7CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  char v6;
  uint64_t result;

  v4 = 0;
  while (1)
  {
    if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
    {
      v5 = *(unsigned __int8 *)(a1 + 873);
      if (v5 != 7)
      {
        *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v5;
        *(_BYTE *)(a1 + 873) = 7;
      }
    }
    v6 = sub_23919AFC0(a1);
    if ((v6 + 63) >= 4u)
      break;
    v4 = ((unint64_t)(v6 + 63) << 14) + 0x4000;
LABEL_11:
    result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(a2 + 16))(a1, v4, a2);
    if (!(v4 >> 14))
      return result;
  }
  if ((v6 & 0xC0) == 0x80)
  {
    v4 = sub_23919AFC0(a1) & 0xFFFF80FF | ((v6 & 0x7F) << 8);
    goto LABEL_11;
  }
  if (v6 < 0)
  {
    sub_2391AE48C(a1, 26);
    goto LABEL_11;
  }
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(a2 + 16))(a1, v6 & 0x7F, a2);
}

uint64_t sub_23919C8E0(unsigned int *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _BYTE *v12;
  unsigned int v13;
  _BYTE *v14;

  result = *a1;
  if (!(_DWORD)result)
  {
    if (!setjmp((int *)a1 + 1))
    {
      *((_BYTE *)a1 + 196) = 1;
      *a1 = 0;
      *((_QWORD *)a1 + 25) = a2;
      *((_QWORD *)a1 + 89) = 1;
      *((_QWORD *)a1 + 101) = a2;
      *((_QWORD *)a1 + 102) = a3;
      v7 = *((_QWORD *)a1 + 96);
      *((_QWORD *)a1 + 105) = *((_QWORD *)a1 + 95);
      *((_QWORD *)a1 + 106) = v7;
      LODWORD(v7) = *((unsigned __int8 *)a1 + 801);
      *((_BYTE *)a1 + 872) = v7;
      if ((_DWORD)v7 == 7)
        v8 = *((_QWORD *)a1 + 98);
      else
        v8 = *((_QWORD *)a1 + 98) + 1;
      *((_QWORD *)a1 + 107) = v8;
      v9 = *((unsigned __int8 *)a1 + 802);
      *((_BYTE *)a1 + 873) = v9;
      v10 = *((_QWORD *)a1 + 99);
      *((_QWORD *)a1 + 108) = v10;
      if ((*((_BYTE *)a1 + 825) & 8) == 0)
        *((_QWORD *)a1 + 103) = 2080;
      *((_QWORD *)a1 + 110) = 0;
      sub_23919E0EC((unint64_t)a1, a2, a3, 0);
      if (*((_QWORD *)a1 + 108) == v10 && *((unsigned __int8 *)a1 + 873) == (_DWORD)v9)
        sub_23919AFC0((uint64_t)a1);
      if ((a1[206] & 0x10) != 0)
      {
        v12 = (_BYTE *)*((_QWORD *)a1 + 108);
        v13 = *((unsigned __int8 *)a1 + 873);
      }
      else
      {
        v11 = *((unsigned __int8 *)a1 + 873);
        v12 = (_BYTE *)*((_QWORD *)a1 + 108);
        v13 = 7;
        if (v11 != 7)
        {
          *v12 &= -2 << v11;
          v12 = (_BYTE *)(*((_QWORD *)a1 + 108) + 1);
          *((_QWORD *)a1 + 108) = v12;
          *((_BYTE *)a1 + 873) = 7;
        }
      }
      v14 = &v12[-v10];
      *((_QWORD *)a1 + 99) += v14;
      *((_BYTE *)a1 + 802) = v13;
      *((_QWORD *)a1 + 104) = v9 - v13 + 8 * (_QWORD)v14;
    }
    *((_BYTE *)a1 + 196) = 0;
    return *a1;
  }
  return result;
}

void sub_23919CA58(uint64_t a1, unsigned __int8 *a2, __int16 *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  char v10;
  const char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  int v17;
  unsigned __int8 v18;
  const char *v19;
  void *v20;
  size_t v21;
  size_t v22;
  unsigned int v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  int v27;
  unsigned __int8 v28;
  uint64_t v29;
  unint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 *v32;
  unint64_t v33;
  unsigned __int8 v34;
  int v35;
  int *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  int v40;
  int *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  __int16 *v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t **v61;
  uint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int v73;
  unint64_t v74;
  uint64_t v75;
  int v76;
  const char *v77;
  size_t v78;
  size_t v79;
  size_t v80;
  size_t v81;
  size_t v82;
  size_t v83;
  void *v84;
  int v85;
  const char *v86;
  size_t v87;
  const char *v88;
  size_t v89;
  const char *v90;
  size_t v91;
  const char *v92;
  size_t v93;
  const char *v94;
  size_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int v98;
  unsigned int v99;
  BOOL v100;
  unsigned int v101;
  unsigned __int8 v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  unint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  unint64_t v112;
  unsigned int v113;
  int v114;
  const char *v115;
  unsigned int v116;
  char *v117;
  unint64_t v118;
  unsigned int v119;
  unsigned __int8 v120;
  int v121;
  int v122;
  unsigned int v123;
  unsigned __int8 v124;
  unint64_t v125;
  int v126;
  int v127;
  char *v128;
  unint64_t v129;
  unint64_t v130;
  int v131;
  int v132;
  unsigned __int8 *v133;
  size_t v134;
  char *v135;
  unint64_t v136;
  unint64_t v137;
  int v138;
  unint64_t v139;
  int v140;
  int v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  int v146;
  unint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  char *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t *v153;
  unint64_t v154;
  uint64_t v155;
  unsigned int v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  unint64_t v162;
  uint64_t v163;
  int v164;
  int v165;
  int v166;
  void *v167;
  unint64_t v168;
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;

  v5 = a1;
  v6 = *(_QWORD *)(a1 + 808);
  *(_QWORD *)(a1 + 808) = a2;
  v7 = *a2;
  if (v7 <= 0x3F)
  {
    switch(*a2)
    {
      case 1u:
        sub_23919AA08((char *)a1, *(_BYTE *)a3 != 0);
        goto LABEL_363;
      case 2u:
        v44 = *(_QWORD *)(*((_QWORD *)a2 + 1) + 8);
        switch(v44)
        {
          case 4:
            goto LABEL_202;
          case 2:
            v45 = *a3;
            break;
          case 1:
            v45 = *(char *)a3;
            break;
          default:
LABEL_202:
            v45 = *(_DWORD *)a3;
            break;
        }
        if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
        {
          v141 = *(unsigned __int8 *)(a1 + 873);
          if (v141 != 7)
          {
            *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v141;
            *(_BYTE *)(a1 + 873) = 7;
          }
        }
        *(_QWORD *)&v170 = 0;
        goto LABEL_289;
      case 3u:
        v46 = *(int *)a3;
        if (!(_DWORD)v46)
          goto LABEL_125;
        *(_QWORD *)&v170 = *((_QWORD *)a3 + 1);
        *((_QWORD *)&v170 + 1) = v46;
        goto LABEL_250;
      case 4u:
        v47 = *(int *)a3;
        if ((_DWORD)v47)
        {
          *(_QWORD *)&v170 = *((_QWORD *)a3 + 1);
          *((_QWORD *)&v170 + 1) = v47;
          goto LABEL_261;
        }
LABEL_125:
        if ((*(_BYTE *)(v5 + 824) & 0x40) != 0)
        {
          v85 = *(unsigned __int8 *)(v5 + 873);
          if (v85 != 7)
          {
            *(_BYTE *)(*(_QWORD *)(v5 + 864))++ &= 510 << v85;
            *(_BYTE *)(v5 + 873) = 7;
          }
        }
        sub_23919AEA0((char *)v5, 0);
        goto LABEL_363;
      case 5u:
        goto LABEL_363;
      case 6u:
        if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
        {
          v48 = *(unsigned __int8 *)(a1 + 873);
          if (v48 != 7)
          {
            *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v48;
            *(_BYTE *)(a1 + 873) = 7;
          }
        }
        v49 = *(_QWORD *)(a1 + 864);
        v50 = *(_QWORD *)(a1 + 856);
        sub_23919B06C(a1, 1uLL);
        v51 = *((int *)a3 + 4);
        v52 = *(_QWORD *)a3;
        if (*(_QWORD *)a3)
          v52 = *(int *)(v52 + 8);
        v53 = 0;
        v54 = v49 - v50;
        v55 = 40 * v52;
        v56 = a3;
        while (1)
        {
          v56 = *(__int16 **)v56;
          if (!v56)
            break;
          v57 = v53;
          v53 = 1;
          if ((v57 & 1) != 0)
          {
            v52 = *((int *)v56 + 2);
            break;
          }
        }
        v58 = v52 + v55;
        if (((v52 + v55) & 0xFFFFFF80) != 0)
          sub_2391AE48C(v5, 28);
        sub_23919AEA0((char *)v5, v58);
        if (v51 >= 3)
        {
          v59 = 2;
          v60 = 3;
          do
          {
            v61 = *(uint64_t ***)a3;
            v62 = v60;
            if (*(_QWORD *)a3)
            {
              while (--v62)
              {
                v61 = (uint64_t **)*v61;
                if (!v61)
                  goto LABEL_84;
              }
              v58 = *((int *)v61 + 2);
            }
LABEL_84:
            if (v58 >= 0x80)
            {
              v64 = 0;
              v65 = v58;
              do
              {
                v66 = v65 >> 14;
                v65 >>= 7;
                v64 += 7;
              }
              while (v66);
              for (; v64; v64 -= 7)
                sub_23919AEA0((char *)v5, (v58 >> v64) | 0x80);
              v63 = v58 & 0x7F;
            }
            else
            {
              v63 = v58;
            }
            sub_23919AEA0((char *)v5, v63);
            ++v59;
            ++v60;
          }
          while (v59 != v51);
        }
        v67 = *(_QWORD *)(v5 + 856);
        v68 = *(_QWORD *)(v5 + 864) - v67 + ~v54;
        if (v68 > 0x7F)
        {
          if (*(_BYTE *)(v5 + 873) == 7)
            sub_23919B37C((_QWORD *)v5, v68);
          else
            sub_23919B9DC(v5, v68);
        }
        else
        {
          v69 = (_BYTE *)(v67 + v54);
          v70 = *(unsigned __int8 *)(v5 + 873);
          if (v70 == 7)
          {
            *v69 = v68;
          }
          else
          {
            *v69 |= v68 >> (7 - v70);
            v69[1] |= v68 << (*(_BYTE *)(v5 + 873) + 1);
          }
        }
        goto LABEL_363;
      case 7u:
      case 8u:
      case 9u:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x11u:
      case 0x14u:
      case 0x15u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
      case 0x1Eu:
      case 0x1Fu:
        goto LABEL_373;
      case 0xAu:
        v71 = *(unsigned __int8 *)a3;
        if (*((_QWORD *)a2 + 4) <= v71)
          sub_2391AE48C(a1, 21);
        v72 = *((_QWORD *)a2 + 2);
        if (v72 == -1)
        {
          LODWORD(v170) = v71;
          v73 = *((_DWORD *)a2 + 8);
          goto LABEL_209;
        }
        if (v72 > v71)
        {
          sub_23919AA08((char *)v5, 0);
          LODWORD(v170) = v71;
          v73 = *((_DWORD *)a2 + 4);
LABEL_209:
          v113 = v73 - 1;
          goto LABEL_308;
        }
        sub_23919AA08((char *)v5, 1);
        sub_2391A0D2C((char *)v5, v71 - *((_QWORD *)a2 + 2));
        goto LABEL_363;
      case 0x10u:
        if ((a2[40] & 1) != 0)
        {
          v109 = *(_QWORD *)(a1 + 864);
          v110 = *(_QWORD *)(a1 + 856);
          v111 = *(_BYTE *)(a1 + 873);
          sub_23919AA08((char *)a1, 0);
          v112 = *((_QWORD *)a2 + 9);
          if (v112)
          {
            v170 = 0uLL;
            *(_QWORD *)&v171 = 0;
            if (v112 >> 16)
              sub_2391A0E40(v5, (uint64_t)&v170, v112);
            else
              sub_2391A0DEC(v5, (uint64_t)&v170, v112);
            sub_2391A1048(v5, (uint64_t)&v170, a2, (uint64_t)a3);
          }
          else
          {
            sub_2391A1374(v5, a2, (uint64_t)a3);
          }
          v158 = *((_QWORD *)a2 + 10);
          if (v158)
          {
            v170 = 0uLL;
            *(_QWORD *)&v171 = 0;
            v159 = *(_QWORD *)(v5 + 864);
            v160 = *(_QWORD *)(v5 + 856);
            v161 = *(_BYTE *)(v5 + 873);
            if (v158 < 0x41)
            {
              sub_23919AB30((char *)v5, v158 - 1, 7u);
              sub_2391A0DEC(v5, (uint64_t)&v170, *((_QWORD *)a2 + 10));
            }
            else
            {
              sub_23919AA08((char *)v5, 1);
              sub_2391A0E40(v5, (uint64_t)&v170, *((_QWORD *)a2 + 10));
            }
            if (sub_2391A14A4(v5, (uint64_t)&v170, (uint64_t)a2, (uint64_t)a3))
            {
              *(_BYTE *)(*(_QWORD *)(v5 + 856) + v109 - v110) |= 1 << v111;
            }
            else
            {
              v163 = *(_QWORD *)(v5 + 856);
              *(_QWORD *)(v5 + 864) = v163 + v159 - v160;
              *(_BYTE *)(v5 + 873) = v161;
              *(_BYTE *)(v163 + v159 - v160) &= -2 << v161;
            }
          }
        }
        else
        {
          v74 = *((_QWORD *)a2 + 9);
          if (v74)
          {
            v170 = 0uLL;
            *(_QWORD *)&v171 = 0;
            if (v74 >> 16)
              sub_2391A0E40(a1, (uint64_t)&v170, v74);
            else
              sub_2391A0DEC(a1, (uint64_t)&v170, v74);
            sub_2391A1048(v5, (uint64_t)&v170, a2, (uint64_t)a3);
          }
          else
          {
            sub_2391A1374(a1, a2, (uint64_t)a3);
          }
        }
        goto LABEL_363;
      case 0x12u:
      case 0x13u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x1Au:
        *((_QWORD *)&v171 + 1) = 0;
        switch(v7)
        {
          case 0x12u:
            v8 = *(_QWORD *)a3;
            v9 = strlen(*(const char **)a3);
            switch(v9)
            {
              case 1uLL:
                goto LABEL_125;
              case 0x801uLL:
                goto LABEL_391;
              case 0uLL:
                goto LABEL_392;
            }
            *(_QWORD *)&v170 = v8 + 1;
            *((_QWORD *)&v170 + 1) = v9 - 1;
            v10 = 4;
            v11 = " 0123456789";
            v12 = 1;
            v13 = 11;
            goto LABEL_124;
          case 0x13u:
            v77 = *(const char **)a3;
            v78 = strlen(*(const char **)a3);
            if (!v78)
              goto LABEL_392;
            v79 = v78 - 1;
            if (v78 == 2049)
              goto LABEL_391;
            goto LABEL_120;
          case 0x16u:
            v77 = *(const char **)a3;
            v80 = strlen(*(const char **)a3);
            if (!v80)
              goto LABEL_392;
            v79 = v80 - 1;
            if (v80 == 2049)
              goto LABEL_391;
            goto LABEL_120;
          case 0x17u:
            v77 = *(const char **)a3;
            v81 = strlen(*(const char **)a3);
            if (!v81)
              goto LABEL_392;
            v79 = v81 - 1;
            if (v81 == 2049)
              goto LABEL_391;
            goto LABEL_120;
          case 0x18u:
            v77 = *(const char **)a3;
            v82 = strlen(*(const char **)a3);
            if (!v82)
              goto LABEL_392;
            v79 = v82 - 1;
            if (v82 == 2049)
              goto LABEL_391;
            goto LABEL_120;
          case 0x1Au:
            v77 = *(const char **)a3;
            v83 = strlen(*(const char **)a3);
            if (!v83)
              goto LABEL_392;
            v79 = v83 - 1;
            if (v83 == 2049)
              goto LABEL_391;
LABEL_120:
            if (!v79)
              goto LABEL_125;
            v12 = 0;
            v11 = 0;
            v13 = 0;
            *(_QWORD *)&v170 = v77 + 1;
            *((_QWORD *)&v170 + 1) = v79;
            if ((*(_BYTE *)(v5 + 824) & 0x40) != 0)
              v10 = 8;
            else
              v10 = 7;
LABEL_124:
            BYTE9(v171) = v12;
            *(_QWORD *)&v172 = v11;
            *((_QWORD *)&v172 + 1) = v13;
            BYTE8(v171) = v10;
            v84 = sub_2391A0B2C;
            break;
          default:
            goto LABEL_393;
        }
        goto LABEL_262;
      case 0x20u:
        v75 = *((_QWORD *)a2 + 1);
        switch(*(_DWORD *)(v75 + 48))
        {
          case 1:
            v76 = *(unsigned __int8 *)a3;
            break;
          case 2:
            v76 = *a3;
            break;
          default:
            v76 = *(_DWORD *)a3;
            break;
        }
        v147 = *((_QWORD *)a2 + 4);
        if (v147)
        {
          v148 = *((_QWORD *)a2 + 4);
          v149 = (_QWORD *)*((_QWORD *)a2 + 3);
          while (*((_BYTE *)v149 + 8) == 5 || v149[2] != v76)
          {
            v149 += 4;
            if (!--v148)
            {
              v149 = (_QWORD *)*((_QWORD *)a2 + 3);
              break;
            }
          }
          v150 = (char *)a3 + *(_QWORD *)(v75 + 40);
          v151 = (uint64_t)v149 - *((_QWORD *)a2 + 3);
          v153 = (uint64_t *)(a2 + 16);
          v152 = *((_QWORD *)a2 + 2);
          if (v152 == -1)
          {
            if (v147 < 2)
              goto LABEL_358;
            LODWORD(v170) = (unint64_t)v151 >> 5;
            v156 = v147 - 1;
            goto LABEL_331;
          }
          v154 = v151 >> 5;
        }
        else
        {
          v150 = (char *)a3 + *(_QWORD *)(v75 + 40);
          v153 = (uint64_t *)(a2 + 16);
          v152 = *((_QWORD *)a2 + 2);
          if (v152 == -1)
          {
            v149 = (_QWORD *)*((_QWORD *)a2 + 3);
            goto LABEL_358;
          }
          v154 = 0;
          v149 = (_QWORD *)*((_QWORD *)a2 + 3);
        }
        if (v154 >= v152)
        {
          sub_23919AA08((char *)a1, 1);
          sub_2391A0D2C((char *)v5, v154 - *v153);
          if (!v149)
            sub_2391AE48C(v5, 44);
          v157 = *(_QWORD *)(v5 + 712);
          if (v157 < 0x40)
          {
            *(_QWORD *)(v5 + 8 * v157 + 200) = v149;
            *(_QWORD *)(v5 + 712) = v157 + 1;
            v144 = *v149;
            a1 = v5;
            v143 = (uint64_t)v150;
LABEL_328:
            sub_2391A1CE4(a1, v144, v143);
            goto LABEL_362;
          }
LABEL_393:
          sub_2391AE50C(v5, 15);
        }
        sub_23919AA08((char *)a1, 0);
        v155 = *v153;
        if (*v153 >= 2)
        {
          LODWORD(v170) = v154;
          v156 = v155 - 1;
LABEL_331:
          sub_23919FA48((char *)v5, v156, (int *)&v170);
        }
LABEL_358:
        if (!v149)
          sub_2391AE48C(v5, 44);
        v162 = *(_QWORD *)(v5 + 712);
        if (v162 < 0x40)
        {
          *(_QWORD *)(v5 + 8 * v162 + 200) = v149;
          *(_QWORD *)(v5 + 712) = v162 + 1;
          sub_23919CA58(v5, *v149, v150);
LABEL_362:
          --*(_QWORD *)(v5 + 712);
          goto LABEL_363;
        }
        goto LABEL_393;
      default:
        if (v7 != 48)
          goto LABEL_373;
        *((_QWORD *)&v172 + 1) = 0;
        v40 = **((_DWORD **)a2 + 1);
        v41 = (int *)a3;
        if (v40 == 182)
          goto LABEL_55;
        if (v40 != 181)
          goto LABEL_393;
        v41 = (int *)(a3 + 8);
LABEL_55:
        v42 = *v41;
        *(_QWORD *)&v170 = a3;
        *((_QWORD *)&v170 + 1) = v42;
        *((_QWORD *)&v171 + 1) = 0;
        *(_QWORD *)&v172 = a2;
        v43 = *(_QWORD *)(a1 + 712);
        if (v43 >= 0x40)
          goto LABEL_393;
        *(_QWORD *)(a1 + 8 * v43 + 200) = a2;
        *(_QWORD *)(a1 + 712) = v43 + 1;
        *(_QWORD *)&v171 = sub_2391A31C4;
        sub_23919C56C(a1, (uint64_t)&v170);
        goto LABEL_362;
    }
  }
  if (*a2 > 0x55u)
  {
    if (*a2 > 0x6Fu)
    {
      if (*a2 <= 0x9Fu)
      {
        if (v7 != 112)
        {
          if (v7 != 128)
            goto LABEL_373;
          goto LABEL_32;
        }
        v171 = 0u;
        v172 = 0u;
        v34 = a2[24];
        v35 = **((_DWORD **)a2 + 1);
        v36 = (int *)a3;
        if (v35 != 182)
        {
          if (v35 != 181)
            goto LABEL_393;
          v36 = (int *)(a3 + 8);
        }
        v37 = *v36;
        *(_QWORD *)&v170 = a3;
        *((_QWORD *)&v170 + 1) = v37;
        *(_QWORD *)&v172 = a2;
        if (a2[25] == 1)
        {
          if (*((_QWORD *)a2 + 4) > v37 || (v34 & 0x80) != 0 && *((_QWORD *)a2 + 5) < v37)
          {
            sub_23919AA08((char *)a1, 1);
            v38 = *(_QWORD *)(v5 + 712);
            if (v38 > 0x3F)
              goto LABEL_393;
            v39 = (_QWORD *)(v5 + 712);
            *(_QWORD *)(v5 + 8 * v38 + 200) = a2;
            *(_QWORD *)(v5 + 712) = v38 + 1;
            goto LABEL_274;
          }
          sub_23919AA08((char *)a1, 0);
        }
        else
        {
          sub_2391A46C0(a1, (uint64_t)a2, v37);
        }
        v136 = *(_QWORD *)(v5 + 712);
        if (v136 > 0x3F)
          goto LABEL_393;
        v39 = (_QWORD *)(v5 + 712);
        *(_QWORD *)(v5 + 8 * v136 + 200) = a2;
        *(_QWORD *)(v5 + 712) = v136 + 1;
        if ((v34 & 0x80) == 0)
          goto LABEL_274;
        if ((v34 & 2) != 0)
        {
          v139 = *((_QWORD *)a2 + 4);
          if (!v139)
            goto LABEL_275;
          if (!(v139 >> 16))
          {
LABEL_354:
            sub_2391A31C4(v5, v139, (uint64_t)&v170);
            goto LABEL_275;
          }
        }
        else
        {
          v137 = *((_QWORD *)a2 + 5);
          if (!(v137 >> 16))
          {
            v138 = *((_DWORD *)a2 + 8);
            LODWORD(v167) = v37 - v138;
            sub_23919FA48((char *)v5, v137 - v138, (int *)&v167);
            v139 = *((_QWORD *)&v170 + 1);
            goto LABEL_354;
          }
        }
LABEL_274:
        *(_QWORD *)&v171 = sub_2391A31C4;
        sub_23919C56C(v5, (uint64_t)&v170);
LABEL_275:
        --*v39;
        goto LABEL_363;
      }
      if (v7 == 160)
      {
LABEL_32:
        sub_23919CA58(a1, *((_QWORD *)a2 + 2), a3);
        goto LABEL_363;
      }
      if (v7 != 162)
        goto LABEL_373;
      v23 = a2[16];
      switch(v23)
      {
        case 1u:
          v24 = *(int *)a3 + 0x80000000;
          break;
        case 3u:
          v115 = *(const char **)a3;
          if ((unint64_t)(*(_QWORD *)a3 - 0x100000000) < 0xFFFFFFFE00000000)
            sub_2391AE48C(a1, 18);
          v24 = (uint64_t)(v115 + 0x100000000);
          if ((*(_BYTE *)(v5 + 824) & 0x40) == 0)
            goto LABEL_231;
          goto LABEL_236;
        case 2u:
          v24 = *(unsigned int *)a3;
          break;
        default:
          v24 = *(_QWORD *)a3;
          if (v23 == 4 && (unint64_t)v24 >> 33 || v23 == 16 && (unint64_t)v24 >> 39)
            sub_2391AE48C(a1, 18);
          break;
      }
      if ((*(_BYTE *)(v5 + 824) & 0x40) == 0)
      {
        if (v23 < 3)
        {
LABEL_235:
          v117 = (char *)v5;
          v118 = v24;
          v119 = 32;
LABEL_306:
          sub_23919AB30(v117, v118, v119);
          goto LABEL_363;
        }
LABEL_231:
        if (v23 == 16)
          v116 = 7;
        else
          v116 = 1;
        sub_23919AB30((char *)v5, v24 >> 32, v116);
        goto LABEL_235;
      }
LABEL_236:
      if (v23 < 3)
        v120 = 2;
      else
        v120 = 3;
      v121 = __clz(v24 | 1);
      if (v24)
        v122 = 64;
      else
        v122 = 63;
      v123 = v122 - v121;
      if (v122 == v121)
      {
        v124 = 1;
      }
      else if ((v123 & 7) != 0)
      {
        v124 = (v123 >> 3) + 1;
      }
      else
      {
        v124 = v123 >> 3;
      }
      sub_23919AB30((char *)v5, v124 - 1, v120);
      v145 = *(unsigned __int8 *)(v5 + 873);
      if (v145 != 7)
      {
        *(_BYTE *)(*(_QWORD *)(v5 + 864))++ &= 510 << v145;
        *(_BYTE *)(v5 + 873) = 7;
      }
      if (v123 >= 0x21)
      {
        sub_23919AB30((char *)v5, v24 >> 32, 8u);
        --v124;
      }
      v119 = 8 * (v124 & 0x1F);
      v117 = (char *)v5;
      v118 = v24;
      goto LABEL_306;
    }
    if (v7 != 86 && v7 != 90)
    {
      if (v7 != 96)
LABEL_373:
        sub_2391AE50C(a1, 16);
      goto LABEL_32;
    }
LABEL_22:
    v167 = 0;
    v168 = 0;
    v169 = 0;
    v18 = a2[32];
    switch(v7 & 0x1F)
    {
      case 0x12u:
        v19 = *(const char **)a3;
        v20 = (void *)(*(_QWORD *)a3 + 1);
        v167 = v20;
        v21 = strlen(v19);
        if (!v21)
          goto LABEL_392;
        v22 = v21 - 1;
        v168 = v21 - 1;
        LOBYTE(v169) = 1;
        if (v21 == 2049)
          goto LABEL_391;
        goto LABEL_143;
      case 0x13u:
        v86 = *(const char **)a3;
        v20 = (void *)(*(_QWORD *)a3 + 1);
        v167 = v20;
        v87 = strlen(v86);
        if (!v87)
          goto LABEL_392;
        v22 = v87 - 1;
        v168 = v87 - 1;
        LOBYTE(v169) = 1;
        if (v87 == 2049)
          goto LABEL_391;
        goto LABEL_143;
      case 0x16u:
        v88 = *(const char **)a3;
        v20 = (void *)(*(_QWORD *)a3 + 1);
        v167 = v20;
        v89 = strlen(v88);
        if (!v89)
          goto LABEL_392;
        v22 = v89 - 1;
        v168 = v89 - 1;
        LOBYTE(v169) = 1;
        if (v89 == 2049)
          goto LABEL_391;
        goto LABEL_143;
      case 0x17u:
        v90 = *(const char **)a3;
        v20 = (void *)(*(_QWORD *)a3 + 1);
        v167 = v20;
        v91 = strlen(v90);
        if (!v91)
          goto LABEL_392;
        v22 = v91 - 1;
        v168 = v91 - 1;
        LOBYTE(v169) = 1;
        if (v91 == 2049)
          goto LABEL_391;
        goto LABEL_143;
      case 0x18u:
        v92 = *(const char **)a3;
        v20 = (void *)(*(_QWORD *)a3 + 1);
        v167 = v20;
        v93 = strlen(v92);
        if (!v93)
          goto LABEL_392;
        v22 = v93 - 1;
        v168 = v93 - 1;
        LOBYTE(v169) = 1;
        if (v93 == 2049)
          goto LABEL_391;
        goto LABEL_143;
      case 0x1Au:
        v94 = *(const char **)a3;
        v20 = (void *)(*(_QWORD *)a3 + 1);
        v167 = v20;
        v95 = strlen(v94);
        if (!v95)
LABEL_392:
          sub_2391AE50C(v5, 24);
        v22 = v95 - 1;
        v168 = v95 - 1;
        LOBYTE(v169) = 1;
        if (v95 == 2049)
LABEL_391:
          sub_2391AE50C(v5, 42);
LABEL_143:
        v171 = 0u;
        v172 = 0u;
        v170 = 0u;
        if (a2[33] == 1)
        {
          if (v22 < *((_QWORD *)a2 + 5) || (v18 & 0x80) != 0 && *((_QWORD *)a2 + 6) < v22)
          {
            sub_23919AA08((char *)v5, 1);
            v18 = 0;
            *(_QWORD *)&v170 = v20;
            *((_QWORD *)&v170 + 1) = v22;
            goto LABEL_160;
          }
          sub_23919AA08((char *)v5, 0);
        }
        else
        {
          sub_2391A45C8(v5, (uint64_t)a2, &v167);
          v20 = v167;
          v22 = v168;
        }
        *(_QWORD *)&v170 = v20;
        *((_QWORD *)&v170 + 1) = v22;
        v96 = *((_QWORD *)a2 + 3);
        if (v96)
        {
          v97 = *((_QWORD *)a2 + 2);
          *(_QWORD *)&v172 = v97;
          *((_QWORD *)&v172 + 1) = v96;
          v98 = (v96 - 1);
          if ((_BYTE)v96 == 1)
          {
            LOBYTE(v99) = 0;
            BYTE8(v171) = 0;
            if ((*(_BYTE *)(v5 + 824) & 0x40) == 0)
              goto LABEL_170;
            v99 = 0;
            v101 = 1;
          }
          else
          {
            LOBYTE(v99) = 0;
            do
            {
              LOBYTE(v99) = v99 + 1;
              v100 = v98 > 1;
              v98 >>= 1;
            }
            while (v100);
            BYTE8(v171) = v99;
            if ((*(_BYTE *)(v5 + 824) & 0x40) == 0)
              goto LABEL_170;
            LOBYTE(v101) = 1;
            v102 = v99;
            do
            {
              v103 = v102;
              v102 >>= 1;
              LOBYTE(v101) = 2 * v101;
            }
            while (v103 > 1);
            v101 = v101;
            v99 = v99;
          }
          if (v101 >> 1 >= v99)
            LOBYTE(v99) = v101 >> 1;
          else
            LOBYTE(v99) = v101;
          BYTE8(v171) = v99;
LABEL_170:
          if (*(unsigned __int8 *)(v96 + v97 - 1) > ~(-1 << v99))
          {
            BYTE9(v171) = 1;
            goto LABEL_173;
          }
LABEL_172:
          BYTE9(v171) = 0;
LABEL_173:
          if ((v18 & 0x80) == 0)
            goto LABEL_174;
          if ((v18 & 2) != 0)
          {
            v107 = *((_QWORD *)a2 + 5);
            if (!v107)
              goto LABEL_175;
            if (v107 <= 2)
            {
LABEL_186:
              sub_2391A0B2C((char *)v5, v107, (char **)&v170);
              goto LABEL_175;
            }
            if (!(v107 >> 16))
            {
              if ((*(_BYTE *)(v5 + 824) & 0x40) != 0 && v107 * v99 >= 0x11)
              {
                v140 = *(unsigned __int8 *)(v5 + 873);
                if (v140 != 7)
                {
                  *(_BYTE *)(*(_QWORD *)(v5 + 864))++ &= 510 << v140;
                  *(_BYTE *)(v5 + 873) = 7;
                  v107 = *((_QWORD *)a2 + 5);
                }
              }
              goto LABEL_186;
            }
          }
          else
          {
            v104 = *((_QWORD *)a2 + 5);
            v105 = *((_QWORD *)a2 + 6) - v104;
            if (!((unint64_t)(v105 + 1) >> 16))
            {
              v166 = v22 - v104;
              sub_23919FA48((char *)v5, v105, &v166);
              if ((*(_BYTE *)(v5 + 824) & 0x40) != 0)
              {
                v106 = *(unsigned __int8 *)(v5 + 873);
                if (v106 != 7)
                {
                  *(_BYTE *)(*(_QWORD *)(v5 + 864))++ &= 510 << v106;
                  *(_BYTE *)(v5 + 873) = 7;
                }
              }
              v107 = v168;
              goto LABEL_186;
            }
          }
LABEL_174:
          *(_QWORD *)&v171 = sub_2391A0B2C;
          sub_23919C56C(v5, (uint64_t)&v170);
LABEL_175:
          if (!(_BYTE)v169 && v168)
            free(v167);
          goto LABEL_363;
        }
        if ((*a2 & 0x1F) == 0x12)
        {
          *(_QWORD *)&v172 = " 0123456789";
          *((_QWORD *)&v172 + 1) = 11;
          WORD4(v171) = 260;
          LOBYTE(v99) = 4;
          goto LABEL_173;
        }
LABEL_160:
        v172 = 0uLL;
        if ((*(_QWORD *)(v5 + 824) & 0x40) != 0)
          LOBYTE(v99) = 8;
        else
          LOBYTE(v99) = 7;
        BYTE8(v171) = v99;
        goto LABEL_172;
      default:
        goto LABEL_393;
    }
  }
  switch(*a2)
  {
    case '@':
      v14 = *((_QWORD *)a2 + 1);
      v15 = (uint64_t *)*((_QWORD *)a2 + 3);
      v16 = *((_QWORD *)a2 + 4);
      switch(*(_DWORD *)(v14 + 48))
      {
        case 1:
          v17 = *(unsigned __int8 *)a3;
          break;
        case 2:
          v17 = *a3;
          break;
        default:
          v17 = *(_DWORD *)a3;
          break;
      }
      if (!v16)
        goto LABEL_363;
      while (v15[2] != v17)
      {
        v15 += 3;
        if (!--v16)
          goto LABEL_363;
      }
      v142 = *(_QWORD *)(a1 + 712);
      if (v142 >= 0x40)
        goto LABEL_393;
      v143 = (uint64_t)a3 + *(_QWORD *)(v14 + 40);
      *(_QWORD *)(a1 + 8 * v142 + 200) = v15;
      *(_QWORD *)(a1 + 712) = v142 + 1;
      v144 = *v15;
      goto LABEL_328;
    case 'A':
      goto LABEL_373;
    case 'B':
      v25 = a2[16];
      v26 = *(_QWORD *)(*((_QWORD *)a2 + 1) + 8);
      if ((v25 & 1) != 0)
      {
        if (v26 != 4)
        {
          if (v26 != 2)
          {
            if (v26 == 1)
            {
              v27 = *(char *)a3;
              goto LABEL_194;
            }
            goto LABEL_193;
          }
          v27 = *a3;
          goto LABEL_194;
        }
      }
      else if (v26 != 4)
      {
        if (v26 != 2)
        {
          if (v26 == 1)
          {
            v27 = *(unsigned __int8 *)a3;
            goto LABEL_194;
          }
          goto LABEL_193;
        }
        v27 = (unsigned __int16)*a3;
LABEL_194:
        LODWORD(v167) = v27;
        if (a2[17] == 1)
        {
          if ((v25 & 0x20) != 0 && *((_QWORD *)a2 + 3) > v27 || (v25 & 8) != 0 && *((_QWORD *)a2 + 4) < v27)
          {
            sub_23919AA08((char *)a1, 1);
LABEL_214:
            if ((*(_BYTE *)(v5 + 824) & 0x40) != 0)
            {
              v114 = *(unsigned __int8 *)(v5 + 873);
              if (v114 != 7)
              {
                *(_BYTE *)(*(_QWORD *)(v5 + 864))++ &= 510 << v114;
                *(_BYTE *)(v5 + 873) = 7;
              }
            }
            *(_QWORD *)&v170 = 0;
            v45 = (int)v167;
LABEL_289:
            LOBYTE(v170) = v45 < 0;
            DWORD1(v170) = v45 ^ (v45 >> 31);
            sub_23919F8F8((char *)v5, (uint64_t)&v170);
            goto LABEL_363;
          }
          v108 = v25 & 0x20;
          sub_23919AA08((char *)a1, 0);
        }
        else
        {
          sub_2391A4548(a1, (uint64_t)a2, (int *)&v167);
          v108 = v25 & 0x20;
        }
        if (v108)
        {
          if ((v25 & 0x80) != 0)
          {
            v146 = *((_DWORD *)a2 + 6);
            LODWORD(v170) = (_DWORD)v167 - v146;
            v113 = *((_DWORD *)a2 + 8) - v146;
LABEL_308:
            sub_23919FA48((char *)v5, v113, (int *)&v170);
          }
          else
          {
            LODWORD(v170) = (_DWORD)v167 - *((_DWORD *)a2 + 6);
            sub_23919FD04(v5, (unsigned int *)&v170);
          }
          goto LABEL_363;
        }
        goto LABEL_214;
      }
LABEL_193:
      v27 = *(_DWORD *)a3;
      goto LABEL_194;
    case 'C':
      v170 = 0uLL;
      *(_QWORD *)&v171 = 0;
      v28 = a2[16];
      v29 = *((_QWORD *)a3 + 1);
      v30 = *(int *)a3;
      if (a2[17] == 1)
      {
        if (*((_QWORD *)a2 + 3) > v30 || (a2[16] & 0x80) != 0 && *((_QWORD *)a2 + 4) < v30)
        {
          sub_23919AA08((char *)a1, 1);
          *(_QWORD *)&v170 = v29;
          *((_QWORD *)&v170 + 1) = v30;
          goto LABEL_250;
        }
        sub_23919AA08((char *)a1, 0);
      }
      else
      {
        sub_2391A4580(a1, (uint64_t)a2, v30);
      }
      *(_QWORD *)&v170 = v29;
      *((_QWORD *)&v170 + 1) = v30;
      if ((v28 & 0x80) != 0)
      {
        if ((v28 & 2) != 0)
        {
          v129 = *((_QWORD *)a2 + 3);
          if (!v129)
            goto LABEL_363;
          if (v129 > 0x10)
          {
            if (v129 >> 16)
              goto LABEL_250;
            if ((*(_BYTE *)(v5 + 824) & 0x40) != 0)
            {
              v164 = *(unsigned __int8 *)(v5 + 873);
              if (v164 != 7)
              {
                *(_BYTE *)(*(_QWORD *)(v5 + 864))++ &= 510 << v164;
                *(_BYTE *)(v5 + 873) = 7;
                v129 = *((_QWORD *)a2 + 3);
              }
            }
          }
          v128 = (char *)v5;
        }
        else
        {
          v125 = *((_QWORD *)a2 + 4);
          if (v125 >> 16)
            goto LABEL_250;
          v126 = *((_DWORD *)a2 + 6);
          LODWORD(v167) = v30 - v126;
          sub_23919FA48((char *)v5, v125 - v126, (int *)&v167);
          if ((*(_BYTE *)(v5 + 824) & 0x40) != 0)
          {
            v127 = *(unsigned __int8 *)(v5 + 873);
            if (v127 != 7)
            {
              *(_BYTE *)(*(_QWORD *)(v5 + 864))++ &= 510 << v127;
              *(_BYTE *)(v5 + 873) = 7;
            }
          }
          v128 = (char *)v5;
          v129 = v30;
        }
        sub_2391A0070(v128, v129, (char **)&v170);
        goto LABEL_363;
      }
LABEL_250:
      v84 = sub_2391A0070;
      goto LABEL_262;
    case 'D':
      v170 = 0uLL;
      *(_QWORD *)&v171 = 0;
      v31 = a2[16];
      v32 = (unsigned __int8 *)*((_QWORD *)a3 + 1);
      v33 = *(int *)a3;
      if (a2[17] == 1)
      {
        if (*((_QWORD *)a2 + 3) > v33 || (a2[16] & 0x80) != 0 && *((_QWORD *)a2 + 4) < v33)
        {
          sub_23919AA08((char *)a1, 1);
          *(_QWORD *)&v170 = v32;
          *((_QWORD *)&v170 + 1) = v33;
          goto LABEL_261;
        }
        sub_23919AA08((char *)a1, 0);
      }
      else
      {
        sub_2391A4580(a1, (uint64_t)a2, v33);
      }
      *(_QWORD *)&v170 = v32;
      *((_QWORD *)&v170 + 1) = v33;
      if ((v31 & 0x80) == 0)
        goto LABEL_261;
      if ((v31 & 2) != 0)
      {
        v134 = *((_QWORD *)a2 + 3);
        if (!v134)
          goto LABEL_363;
        if (v134 > 2)
        {
          if (v134 >> 16)
            goto LABEL_261;
          if ((*(_BYTE *)(v5 + 824) & 0x40) != 0)
          {
            v165 = *(unsigned __int8 *)(v5 + 873);
            if (v165 != 7)
            {
              *(_BYTE *)(*(_QWORD *)(v5 + 864))++ &= 510 << v165;
              *(_BYTE *)(v5 + 873) = 7;
              v134 = *((_QWORD *)a2 + 3);
              v32 = (unsigned __int8 *)v170;
            }
          }
        }
        v135 = (char *)v5;
        v133 = v32;
LABEL_351:
        sub_23919B210(v135, v133, v134);
        goto LABEL_363;
      }
      v130 = *((_QWORD *)a2 + 4);
      if (!(v130 >> 16))
      {
        v131 = *((_DWORD *)a2 + 6);
        LODWORD(v167) = v33 - v131;
        sub_23919FA48((char *)v5, v130 - v131, (int *)&v167);
        if ((*(_BYTE *)(v5 + 824) & 0x40) != 0)
        {
          v132 = *(unsigned __int8 *)(v5 + 873);
          if (v132 != 7)
          {
            *(_BYTE *)(*(_QWORD *)(v5 + 864))++ &= 510 << v132;
            *(_BYTE *)(v5 + 873) = 7;
          }
        }
        v134 = *((_QWORD *)&v170 + 1);
        v133 = (unsigned __int8 *)v170;
        v135 = (char *)v5;
        goto LABEL_351;
      }
LABEL_261:
      v84 = sub_2391A0710;
LABEL_262:
      *(_QWORD *)&v171 = v84;
      sub_23919C56C(v5, (uint64_t)&v170);
LABEL_363:
      *(_QWORD *)(v5 + 808) = v6;
      return;
    default:
      if (v7 - 82 < 2)
        goto LABEL_22;
      goto LABEL_373;
  }
}

void sub_23919E0EC(unint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  unsigned __int8 **v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  int v17;
  uint64_t v18;
  char v19;
  _BYTE *v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;
  malloc_type_id_t v24;
  char v25;
  uint64_t v26;
  unsigned int v27;
  unsigned __int8 v28;
  BOOL v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t v35;
  unsigned __int8 v36;
  int v37;
  uint64_t v38;
  int v39;
  void (*v40)(uint64_t, size_t, uint64_t);
  int v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL4 v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  void (*v51)(uint64_t, size_t, uint64_t);
  uint64_t v52;
  int v53;
  _BOOL4 v54;
  void **v55;
  unsigned __int8 v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  unsigned int v72;
  int v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  malloc_type_id_t v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  int v81;
  unsigned int v82;
  unint64_t v83;
  int v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  unsigned int v91;
  _WORD *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  size_t v98;
  int v99;
  unint64_t v100;
  size_t v101;
  int v102;
  unint64_t v103;
  unint64_t v104;
  unsigned int v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  BOOL v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  BOOL v141;
  uint64_t v142;
  unint64_t v143;
  int v144;
  _WORD *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  int v159;
  void *v160;
  uint64_t v161;
  int v162;
  int v163;
  unsigned int v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;

  v8 = *(_QWORD *)(a1 + 808);
  *(_QWORD *)(a1 + 808) = a2;
  v9 = *a2;
  if (v9 > 0x3F)
  {
    if (*a2 > 0x55u)
    {
      if (*a2 > 0x6Fu)
      {
        if (*a2 <= 0x9Fu)
        {
          if (v9 != 112)
          {
            if (v9 != 128)
              goto LABEL_390;
LABEL_60:
            sub_23919E0EC(a1, *((_QWORD *)a2 + 2), a3, a4);
            goto LABEL_375;
          }
          v168 = (unint64_t)a3;
          v169 = 0uLL;
          *(_QWORD *)&v170 = a2;
          *((_QWORD *)&v170 + 1) = a4;
          v45 = *(_QWORD *)(a1 + 712);
          if (v45 >= 0x40)
            goto LABEL_391;
          *(_QWORD *)(a1 + 8 * v45 + 200) = a2;
          *(_QWORD *)(a1 + 712) = v45 + 1;
          if (a2[25] == 1 && sub_23919AAC8(a1) == 1)
            goto LABEL_88;
          v46 = (char)a2[24];
          if ((v46 & 0x80000000) == 0)
            goto LABEL_88;
          if ((v46 & 2) != 0)
          {
            v104 = *((_QWORD *)a2 + 4);
            if (!v104)
              goto LABEL_89;
            if (!(v104 >> 16))
            {
LABEL_371:
              sub_2391A32C0(a1, v104, (uint64_t)&v168);
LABEL_89:
              --*(_QWORD *)(a1 + 712);
              if (!a2[25])
                sub_2391A46C0(a1, (uint64_t)a2, *((unint64_t *)&v169 + 1));
              goto LABEL_375;
            }
          }
          else
          {
            v103 = *((_QWORD *)a2 + 5);
            if (!(v103 >> 16))
            {
              LODWORD(v165) = 0;
              sub_23919FDBC(a1, v103 - *((_DWORD *)a2 + 8), (int *)&v165);
              v104 = *((_QWORD *)a2 + 4) + v165;
              *((_QWORD *)&v168 + 1) = v104;
              goto LABEL_371;
            }
          }
LABEL_88:
          *(_QWORD *)&v169 = sub_2391A32C0;
          sub_23919C7CC(a1, (uint64_t)&v168);
          goto LABEL_89;
        }
        if (v9 == 160)
          goto LABEL_60;
        if (v9 == 162)
        {
          v33 = a2[16];
          if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
          {
            if (v33 < 3)
              v82 = 2;
            else
              v82 = 3;
            v83 = sub_23919ACE0(a1, v82);
            v84 = *(unsigned __int8 *)(a1 + 873);
            if (v84 != 7)
            {
              *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v84;
              *(_BYTE *)(a1 + 873) = 7;
            }
            if (v83 == 4)
              v85 = sub_23919AFC0(a1) << 32;
            else
              v85 = 0;
          }
          else
          {
            if (v33 < 3)
            {
              v35 = 0;
            }
            else
            {
              if (v33 == 16)
                v34 = 7;
              else
                v34 = 1;
              v35 = sub_23919ACE0(a1, v34) << 32;
            }
            v85 = sub_23919ACE0(a1, 0x20u) + v35;
          }
          v143 = v85 - 0x80000000;
          if (v33 == 3)
            v85 -= 0x100000000;
          if (v33 == 1)
            v85 = v143;
          v144 = a2[16];
          if (v144 != 3 && (v144 == 2 || v144 == 1))
            *(_DWORD *)a3 = v85;
          else
            *(_QWORD *)a3 = v85;
          if (v33 == 1)
          {
            if (v85 == (int)v85)
              goto LABEL_375;
          }
          else if ((v33 != 2 || !HIDWORD(v85))
                 && (v33 != 3 || v85 - 0x100000000 >= 0xFFFFFFFE00000000)
                 && (v33 != 4 || !(v85 >> 33))
                 && (v33 != 16 || !(v85 >> 39)))
          {
            goto LABEL_375;
          }
          v106 = a1;
          v107 = 18;
LABEL_374:
          sub_2391AE48C(v106, v107);
          goto LABEL_375;
        }
LABEL_390:
        sub_2391AE50C(a1, 16);
      }
      if (v9 != 86 && v9 != 90)
      {
        if (v9 == 96)
        {
          sub_23919E0EC(a1, *((_QWORD *)a2 + 2), a3, 0);
          v21 = sub_2391A4B20(a1, 0x18uLL);
          *v21 = a2;
          v21[1] = a3;
          v21[2] = *(_QWORD *)a4;
          *(_QWORD *)a4 = v21;
          goto LABEL_375;
        }
        goto LABEL_390;
      }
LABEL_38:
      v167 = 0;
      v169 = 0u;
      v170 = 0u;
      v168 = 0u;
      if (a2[33] == 1 && sub_23919AAC8(a1) == 1)
      {
        *((_QWORD *)&v170 + 1) = 0;
        if ((*(_QWORD *)(a1 + 824) & 0x40) != 0)
          v25 = 8;
        else
          v25 = 7;
        BYTE8(v169) = v25;
        goto LABEL_152;
      }
      v26 = *((_QWORD *)a2 + 3);
      if (v26)
      {
        *(_QWORD *)&v170 = *((_QWORD *)a2 + 2);
        *((_QWORD *)&v170 + 1) = v26;
        v27 = (v26 - 1);
        if ((_BYTE)v26 == 1)
        {
          v28 = 0;
          BYTE8(v169) = 0;
          if ((*(_BYTE *)(a1 + 824) & 0x40) == 0)
            goto LABEL_151;
          v30 = 1;
        }
        else
        {
          v28 = 0;
          do
          {
            ++v28;
            v29 = v27 > 1;
            v27 >>= 1;
          }
          while (v29);
          BYTE8(v169) = v28;
          if ((*(_BYTE *)(a1 + 824) & 0x40) == 0)
          {
LABEL_151:
            v73 = (char)a2[32];
            if ((v73 & 0x80000000) == 0)
            {
LABEL_152:
              *(_QWORD *)&v169 = sub_2391A0C08;
              sub_23919C7CC(a1, (uint64_t)&v168);
LABEL_153:
              if (*((_QWORD *)&v170 + 1)
                && *(unsigned __int8 *)(*((_QWORD *)&v170 + 1) + v170 - 1) > ~(-1 << SBYTE8(v169)))
              {
                v75 = *((_QWORD *)&v168 + 1);
                v74 = (_BYTE *)v168;
                if (*((_QWORD *)&v168 + 1))
                {
                  while (v74)
                  {
                    *v74 = *(_BYTE *)(v170 + (char)*v74);
                    ++v74;
                    if (!--v75)
                      goto LABEL_158;
                  }
                  goto LABEL_384;
                }
                v76 = 0;
              }
              else
              {
LABEL_158:
                v76 = *((_QWORD *)&v168 + 1);
                v74 = (_BYTE *)v168;
              }
              v166 = v76;
              if (v74)
              {
                v165 = v74;
                switch(*a2 & 0x1F)
                {
                  case 0x12:
                    if (v76)
                      goto LABEL_177;
                    v77 = 2364759556;
                    goto LABEL_301;
                  case 0x13:
                    if (v76)
                      goto LABEL_177;
                    v77 = 636702409;
                    goto LABEL_301;
                  case 0x16:
                    if (v76)
                      goto LABEL_177;
                    v77 = 3756785102;
                    goto LABEL_301;
                  case 0x17:
                    if (v76)
                      goto LABEL_177;
                    v77 = 1241086440;
                    goto LABEL_301;
                  case 0x18:
                    if (v76)
                      goto LABEL_177;
                    v77 = 1840963905;
                    goto LABEL_301;
                  case 0x1A:
                    if (v76)
                    {
LABEL_177:
                      v74[v76] = 0;
                      *(_QWORD *)a3 = v74 - 1;
                      v81 = 1;
                    }
                    else
                    {
                      v77 = 3522706990;
LABEL_301:
                      v145 = malloc_type_calloc(1uLL, 2uLL, v77);
                      v81 = 0;
                      *v145 = 0;
                      *(_QWORD *)a3 = v145;
                      *(_BYTE *)v145 = 86;
                      *(_BYTE *)(*(_QWORD *)a3 + 1) = 0;
                    }
                    LOBYTE(v167) = v81;
                    *(_QWORD *)(a1 + 880) = 0;
                    if (!a2[33])
                    {
                      sub_2391A45C8(a1, (uint64_t)a2, &v165);
                      v81 = v167;
                      v76 = v166;
                    }
                    if (!v81 && v76)
                      free(v165);
                    break;
                  default:
                    goto LABEL_391;
                }
                goto LABEL_375;
              }
LABEL_384:
              sub_2391AE50C(a1, 44);
            }
            if ((v73 & 2) != 0)
            {
              v79 = *((_QWORD *)a2 + 5);
              if (!v79)
                goto LABEL_153;
              if (v79 > 2)
              {
                if (v79 >> 16)
                  goto LABEL_152;
                if ((*(_BYTE *)(a1 + 824) & 0x40) != 0 && v79 * v28 >= 0x11)
                {
                  v159 = *(unsigned __int8 *)(a1 + 873);
                  if (v159 != 7)
                  {
                    *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v159;
                    *(_BYTE *)(a1 + 873) = 7;
                    v79 = *((_QWORD *)a2 + 5);
                  }
                }
              }
            }
            else
            {
              v78 = *((_QWORD *)a2 + 6) - *((_QWORD *)a2 + 5);
              if ((unint64_t)(v78 + 1) >> 16)
                goto LABEL_152;
              v164 = 0;
              sub_23919FDBC(a1, v78, (int *)&v164);
              v79 = *((_QWORD *)a2 + 5) + v164;
              *((_QWORD *)&v168 + 1) = v79;
              if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
              {
                v80 = *(unsigned __int8 *)(a1 + 873);
                if (v80 != 7)
                {
                  *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v80;
                  *(_BYTE *)(a1 + 873) = 7;
                  v79 = *((_QWORD *)&v168 + 1);
                }
              }
            }
            sub_2391A0C08(a1, v79, (uint64_t *)&v168);
            goto LABEL_153;
          }
          v30 = 1;
          v31 = v28;
          do
          {
            v32 = v31;
            v31 >>= 1;
            v30 *= 2;
          }
          while (v32 > 1);
        }
        v71 = v30;
        v72 = v30 >> 1;
        if (v72 >= v28)
          v28 = v72;
        else
          v28 = v71;
      }
      else if ((*a2 & 0x1F) == 0x12)
      {
        *(_QWORD *)&v170 = " 0123456789";
        *((_QWORD *)&v170 + 1) = 11;
        v28 = 4;
      }
      else
      {
        *((_QWORD *)&v170 + 1) = 0;
        if ((*(_QWORD *)(a1 + 824) & 0x40) != 0)
          v28 = 8;
        else
          v28 = 7;
      }
      BYTE8(v169) = v28;
      goto LABEL_151;
    }
    switch(*a2)
    {
      case '@':
        v13 = *(_QWORD *)a4;
        if (!*(_QWORD *)a4)
          goto LABEL_23;
        while (1)
        {
          v14 = (unsigned __int8 **)(a2 + 16);
          do
          {
            v15 = *v14;
            v16 = *v14;
            v17 = *v16;
            v14 = (unsigned __int8 **)(v16 + 16);
          }
          while (v17 == 128);
          if (v15 == *(unsigned __int8 **)v13)
            break;
          v13 = *(_QWORD *)(v13 + 16);
          if (!v13)
          {
LABEL_23:
            v18 = *(_QWORD *)(a1 + 864);
            v19 = *(_BYTE *)(a1 + 873);
            v20 = sub_2391A4B20(a1, 0x28uLL);
            *(_QWORD *)v20 = v18;
            v20[8] = v19;
            *((_QWORD *)v20 + 2) = a2;
            *((_QWORD *)v20 + 3) = a3;
            *((_QWORD *)v20 + 4) = *(_QWORD *)(a4 + 8);
            *(_QWORD *)(a4 + 8) = v20;
            goto LABEL_24;
          }
        }
        *(_QWORD *)&v168 = 0;
        v93 = sub_2391A35A4(a1, (uint64_t)a2, *(unsigned __int8 **)(v13 + 8), &v168);
        if (v93)
        {
          v94 = (uint64_t *)v93;
          v95 = *((_QWORD *)a2 + 1);
          sub_23919A0C4(*(unsigned int *)(v95 + 48), (_BYTE *)a3, *(_DWORD *)(v93 + 16));
          v96 = *(_QWORD *)(a1 + 712);
          if (v96 < 0x40)
          {
            v67 = a3 + *(_QWORD *)(v95 + 40);
            *(_QWORD *)(a1 + 8 * v96 + 200) = v94;
            *(_QWORD *)(a1 + 712) = v96 + 1;
            v68 = *v94;
            v69 = a1;
            v70 = 0;
            goto LABEL_207;
          }
LABEL_391:
          sub_2391AE50C(a1, 15);
        }
        v106 = a1;
        v107 = 39;
        goto LABEL_374;
      case 'A':
        goto LABEL_390;
      case 'B':
        v36 = a2[16];
        if (a2[17] != 1)
          goto LABEL_66;
        if (sub_23919AAC8(a1) == 1)
          goto LABEL_394;
        v36 = a2[16];
LABEL_66:
        if ((v36 & 0x20) != 0)
        {
          LODWORD(v168) = 0;
          if ((v36 & 0x80) != 0)
            sub_23919FDBC(a1, *((_DWORD *)a2 + 8) - *((_DWORD *)a2 + 6), (int *)&v168);
          else
            sub_23919FFCC(a1, &v168);
          v38 = *((_QWORD *)a2 + 3) + v168;
        }
        else
        {
LABEL_394:
          if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
          {
            v37 = *(unsigned __int8 *)(a1 + 873);
            if (v37 != 7)
            {
              *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v37;
              *(_BYTE *)(a1 + 873) = 7;
            }
          }
          *(_QWORD *)&v168 = 0;
          sub_23919F9BC(a1, (uint64_t)&v168);
          LODWORD(v38) = DWORD1(v168);
        }
        LODWORD(v165) = v38;
        v161 = *(_QWORD *)(*((_QWORD *)a2 + 1) + 8);
        switch(v161)
        {
          case 4:
            *(_DWORD *)a3 = v38;
            break;
          case 2:
            *(_WORD *)a3 = v38;
            break;
          case 1:
            *(_BYTE *)a3 = v38;
            break;
          default:
            *(_QWORD *)a3 = (int)v38;
            break;
        }
        if (!a2[17])
          sub_2391A4548(a1, (uint64_t)a2, (int *)&v165);
        goto LABEL_375;
      case 'C':
        v168 = 0uLL;
        *(_QWORD *)&v169 = 0;
        if (a2[17] == 1 && sub_23919AAC8(a1) == 1)
          goto LABEL_74;
        v39 = (char)a2[16];
        if ((v39 & 0x80000000) == 0)
          goto LABEL_74;
        if ((v39 & 2) != 0)
        {
          v98 = *((_QWORD *)a2 + 3);
          if (!v98)
          {
LABEL_80:
            v42 = *((_QWORD *)&v168 + 1);
            v43 = v168;
            v124 = *((_QWORD *)&v168 + 1) == 0;
            v44 = *((_QWORD *)&v168 + 1) != 0;
            *(_QWORD *)(a1 + 880) = 0;
            if (v124)
              v43 = 0;
            *(_QWORD *)(a3 + 8) = v43;
            *(_DWORD *)a3 = v42;
            *(_DWORD *)(a3 + 4) = 8 * v44;
            if (!a2[17])
              sub_2391A4580(a1, (uint64_t)a2, v42);
            goto LABEL_375;
          }
          if (v98 <= 0x10)
          {
LABEL_365:
            sub_2391A0370(a1, v98, (uint64_t)&v168);
            goto LABEL_80;
          }
          if (!(v98 >> 16))
          {
            if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
            {
              v162 = *(unsigned __int8 *)(a1 + 873);
              if (v162 != 7)
              {
                *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v162;
                *(_BYTE *)(a1 + 873) = 7;
                v98 = *((_QWORD *)a2 + 3);
              }
            }
            goto LABEL_365;
          }
        }
        else
        {
          v97 = *((_QWORD *)a2 + 4);
          if (!(v97 >> 16))
          {
            LODWORD(v165) = 0;
            sub_23919FDBC(a1, v97 - *((_DWORD *)a2 + 6), (int *)&v165);
            v98 = *((_QWORD *)a2 + 3) + v165;
            *((_QWORD *)&v168 + 1) = v98;
            if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
            {
              v99 = *(unsigned __int8 *)(a1 + 873);
              if (v99 != 7)
              {
                *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v99;
                *(_BYTE *)(a1 + 873) = 7;
                v98 = *((_QWORD *)&v168 + 1);
              }
            }
            goto LABEL_365;
          }
        }
LABEL_74:
        v40 = sub_2391A0370;
        goto LABEL_79;
      case 'D':
        v168 = 0uLL;
        *(_QWORD *)&v169 = 0;
        if (a2[17] == 1 && sub_23919AAC8(a1) == 1)
          goto LABEL_78;
        v41 = (char)a2[16];
        if ((v41 & 0x80000000) == 0)
          goto LABEL_78;
        if ((v41 & 2) != 0)
        {
          v101 = *((_QWORD *)a2 + 3);
          if (!v101)
            goto LABEL_80;
          if (v101 <= 2)
            goto LABEL_368;
          if (!(v101 >> 16))
          {
            if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
            {
              v163 = *(unsigned __int8 *)(a1 + 873);
              if (v163 != 7)
              {
                *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v163;
                *(_BYTE *)(a1 + 873) = 7;
                v101 = *((_QWORD *)a2 + 3);
              }
            }
            goto LABEL_368;
          }
        }
        else
        {
          v100 = *((_QWORD *)a2 + 4);
          if (!(v100 >> 16))
          {
            LODWORD(v165) = 0;
            sub_23919FDBC(a1, v100 - *((_DWORD *)a2 + 6), (int *)&v165);
            v101 = *((_QWORD *)a2 + 3) + v165;
            *((_QWORD *)&v168 + 1) = v101;
            if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
            {
              v102 = *(unsigned __int8 *)(a1 + 873);
              if (v102 != 7)
              {
                *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v102;
                *(_BYTE *)(a1 + 873) = 7;
                v101 = *((_QWORD *)&v168 + 1);
              }
            }
LABEL_368:
            sub_2391A074C(a1, v101, (uint64_t)&v168);
            goto LABEL_80;
          }
        }
LABEL_78:
        v40 = sub_2391A074C;
LABEL_79:
        *(_QWORD *)&v169 = v40;
        sub_23919C7CC(a1, (uint64_t)&v168);
        goto LABEL_80;
      default:
        if (v9 - 82 < 2)
          goto LABEL_38;
        goto LABEL_390;
    }
  }
  switch(*a2)
  {
    case 1u:
      *(_BYTE *)a3 = sub_23919AAC8(a1) != 0;
      goto LABEL_375;
    case 2u:
      if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
      {
        v48 = *(unsigned __int8 *)(a1 + 873);
        if (v48 != 7)
        {
          *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v48;
          *(_BYTE *)(a1 + 873) = 7;
        }
      }
      *(_QWORD *)&v168 = 0;
      sub_23919F9BC(a1, (uint64_t)&v168);
      LOBYTE(v49) = BYTE4(v168);
      v50 = *(_QWORD *)(*((_QWORD *)a2 + 1) + 8);
      switch(v50)
      {
        case 4:
          *(_DWORD *)a3 = DWORD1(v168);
          break;
        case 2:
          *(_WORD *)a3 = WORD2(v168);
          break;
        case 1:
          goto LABEL_110;
        default:
          *(_QWORD *)a3 = SDWORD1(v168);
          break;
      }
      goto LABEL_375;
    case 3u:
      v168 = 0uLL;
      v51 = sub_2391A0370;
      goto LABEL_104;
    case 4u:
      v168 = 0uLL;
      v51 = sub_2391A074C;
LABEL_104:
      *(_QWORD *)&v169 = v51;
      sub_23919C7CC(a1, (uint64_t)&v168);
      v53 = DWORD2(v168);
      v52 = v168;
      v124 = *((_QWORD *)&v168 + 1) == 0;
      v54 = *((_QWORD *)&v168 + 1) != 0;
      *(_QWORD *)(a1 + 880) = 0;
      if (v124)
        v52 = 0;
      *(_QWORD *)(a3 + 8) = v52;
      *(_DWORD *)a3 = v53;
      *(_DWORD *)(a3 + 4) = 8 * v54;
      goto LABEL_375;
    case 5u:
      *(_DWORD *)a3 = 0;
      goto LABEL_375;
    case 6u:
      if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
      {
        v58 = *(unsigned __int8 *)(a1 + 873);
        if (v58 != 7)
        {
          *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v58;
          *(_BYTE *)(a1 + 873) = 7;
        }
      }
      v59 = sub_23919AFC0(a1);
      if (v59 >= 0xC1)
      {
        --*(_QWORD *)(a1 + 864);
        v60 = *(unsigned __int8 *)(a1 + 873);
        if (v60 == 7)
        {
          v61 = sub_23919B70C(a1);
          sub_2391A095C(a1, v61, a3);
          if (*(unsigned __int8 *)(a1 + 873) <= 6u)
          {
            ++*(_QWORD *)(a1 + 864);
            *(_BYTE *)(a1 + 873) = 7;
          }
          sub_23919B37C((_QWORD *)a1, v61);
        }
        else
        {
          v146 = sub_23919C0B4(a1);
          sub_2391A095C(a1, v146, a3);
          if (*(unsigned __int8 *)(a1 + 873) < v60)
            ++*(_QWORD *)(a1 + 864);
          *(_BYTE *)(a1 + 873) = v60;
          sub_23919B9DC(a1, v146);
        }
        goto LABEL_375;
      }
      if ((v59 & 0xC0) == 0x80)
      {
        v87 = sub_23919AFC0(a1) & 0xFFFF80FF | ((v59 & 0x7F) << 8);
        v88 = a1;
LABEL_316:
        sub_2391A095C(v88, v87, a3);
        goto LABEL_375;
      }
      if ((v59 & 0x80) == 0)
      {
        v147 = v59 & 0x7F;
        if ((v59 & 0x7F) == 0)
          sub_2391AE48C(a1, 26);
        v88 = a1;
        v87 = v147;
        goto LABEL_316;
      }
      v106 = a1;
      v107 = 26;
      goto LABEL_374;
    case 7u:
    case 8u:
    case 9u:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x11u:
    case 0x14u:
    case 0x15u:
    case 0x19u:
    case 0x1Bu:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
      goto LABEL_390;
    case 0xAu:
      v165 = 0;
      if (*((_QWORD *)a2 + 2) == -1)
      {
        LODWORD(v168) = 0;
        v89 = *((_DWORD *)a2 + 8);
      }
      else
      {
        if (sub_23919AAC8(a1) == 1)
        {
          sub_2391A0D94(a1, (unint64_t *)&v165);
          v49 = (_DWORD)v165 + *((_DWORD *)a2 + 4);
LABEL_110:
          *(_BYTE *)a3 = v49;
          goto LABEL_375;
        }
        LODWORD(v168) = 0;
        v89 = *((_DWORD *)a2 + 4);
      }
      sub_23919FDBC(a1, v89 - 1, (int *)&v168);
      v105 = v168;
      *(_BYTE *)a3 = v168;
      if (*((_QWORD *)a2 + 4) > (unint64_t)v105)
        goto LABEL_375;
      v106 = a1;
      v107 = 21;
      goto LABEL_374;
    case 0x10u:
      v165 = 0;
      v166 = 0;
      v55 = (void **)a4;
      v56 = a2[40];
      if ((v56 & 0x10) != 0)
      {
        if (a4)
          v165 = *(void **)a4;
        v55 = &v165;
      }
      if ((v56 & 1) != 0)
        v57 = sub_23919AAC8(a1);
      else
        v57 = 0;
      v86 = *((_QWORD *)a2 + 9);
      if (v86)
      {
        v168 = 0uLL;
        *(_QWORD *)&v169 = 0;
        if (v86 >> 16)
          sub_2391A1EE4(a1, (uint64_t)&v168);
        else
          sub_2391A1E94(a1, (uint64_t)&v168, v86);
        v108 = *((_QWORD *)a2 + 6);
        if (v108)
        {
          v109 = *((_QWORD *)a2 + 2);
          v110 = a1 + 200;
          while (2)
          {
            switch(*(_BYTE *)(v109 + 8))
            {
              case 0:
                goto LABEL_229;
              case 1:
                sub_2391A2D10(a1, (unsigned __int8 **)&v168);
LABEL_229:
                v111 = *(_QWORD *)(a1 + 712);
                if (v111 >= 0x40)
                  goto LABEL_391;
                v112 = a3 + *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 1) + 24) + 24 * *(_QWORD *)(v109 + 16) + 8);
                *(_QWORD *)(v110 + 8 * v111) = v109;
                v113 = v111 + 1;
                goto LABEL_237;
              case 2:
                v114 = sub_2391A2D10(a1, (unsigned __int8 **)&v168);
                v115 = *(_QWORD *)(*((_QWORD *)a2 + 1) + 24);
                v116 = *(_QWORD *)(v109 + 16);
                if (!v114)
                {
                  *(_BYTE *)(a3 + **(_QWORD **)(v115 + 24 * v116 + 16)) = 0;
                  goto LABEL_241;
                }
                v117 = v115 + 24 * v116;
                v118 = *(_QWORD *)(v117 + 8);
                *(_BYTE *)(a3 + **(_QWORD **)(v117 + 16)) = 1;
                v119 = *(_QWORD *)(a1 + 712);
                if (v119 >= 0x40)
                  goto LABEL_391;
                goto LABEL_236;
              case 3:
                v120 = sub_2391A2D10(a1, (unsigned __int8 **)&v168);
                v121 = *((_QWORD *)a2 + 1);
                v122 = *(_QWORD *)(v121 + 24) + 24 * *(_QWORD *)(v109 + 16);
                if (v120)
                {
                  v118 = *(_QWORD *)(v122 + 8);
                  *(_BYTE *)(a3 + **(_QWORD **)(v122 + 16)) = 1;
                  v119 = *(_QWORD *)(a1 + 712);
                  if (v119 >= 0x40)
                    goto LABEL_391;
LABEL_236:
                  v112 = a3 + v118;
                  *(_QWORD *)(v110 + 8 * v119) = v109;
                  v113 = v119 + 1;
LABEL_237:
                  *(_QWORD *)(a1 + 712) = v113;
                  sub_23919E0EC(a1, *(_QWORD *)v109, v112, v55);
                  --*(_QWORD *)(a1 + 712);
                }
                else
                {
                  *(_BYTE *)(a3 + **(_QWORD **)(v122 + 16)) = 0;
                  v123 = (uint64_t *)(*(_QWORD *)(v121 + 24) + 24 * *(_QWORD *)(v109 + 16));
                  sub_23919A10C(a3 + v123[1], *(unsigned int **)(v123[2] + 8), 10, *v123);
                }
LABEL_241:
                if ((_QWORD)v169)
                  v124 = 0;
                else
                  v124 = BYTE9(v168) == 1;
                if (v124)
                  sub_2391A2D7C((unsigned __int8 **)&v168);
                v109 += 32;
                if (!--v108)
                  break;
                continue;
              case 5:
                sub_2391A2D10(a1, (unsigned __int8 **)&v168);
                goto LABEL_241;
              default:
                goto LABEL_241;
            }
            break;
          }
        }
        v125 = *((_QWORD *)a2 + 8);
        if (v125)
        {
          v126 = *((_QWORD *)a2 + 4);
          v127 = a1 + 200;
          while (2)
          {
            switch(*(_BYTE *)(v126 + 8))
            {
              case 0:
                goto LABEL_252;
              case 1:
                sub_2391A2D10(a1, (unsigned __int8 **)&v168);
LABEL_252:
                v128 = *(_QWORD *)(a1 + 712);
                if (v128 >= 0x40)
                  goto LABEL_391;
                v129 = a3 + *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 1) + 24) + 24 * *(_QWORD *)(v126 + 16) + 8);
                *(_QWORD *)(v127 + 8 * v128) = v126;
                v130 = v128 + 1;
                goto LABEL_260;
              case 2:
                v131 = sub_2391A2D10(a1, (unsigned __int8 **)&v168);
                v132 = *(_QWORD *)(*((_QWORD *)a2 + 1) + 24);
                v133 = *(_QWORD *)(v126 + 16);
                if (!v131)
                {
                  *(_BYTE *)(a3 + **(_QWORD **)(v132 + 24 * v133 + 16)) = 0;
                  goto LABEL_264;
                }
                v134 = v132 + 24 * v133;
                v135 = *(_QWORD *)(v134 + 8);
                *(_BYTE *)(a3 + **(_QWORD **)(v134 + 16)) = 1;
                v136 = *(_QWORD *)(a1 + 712);
                if (v136 >= 0x40)
                  goto LABEL_391;
                goto LABEL_259;
              case 3:
                v137 = sub_2391A2D10(a1, (unsigned __int8 **)&v168);
                v138 = *((_QWORD *)a2 + 1);
                v139 = *(_QWORD *)(v138 + 24) + 24 * *(_QWORD *)(v126 + 16);
                if (v137)
                {
                  v135 = *(_QWORD *)(v139 + 8);
                  *(_BYTE *)(a3 + **(_QWORD **)(v139 + 16)) = 1;
                  v136 = *(_QWORD *)(a1 + 712);
                  if (v136 >= 0x40)
                    goto LABEL_391;
LABEL_259:
                  v129 = a3 + v135;
                  *(_QWORD *)(v127 + 8 * v136) = v126;
                  v130 = v136 + 1;
LABEL_260:
                  *(_QWORD *)(a1 + 712) = v130;
                  sub_23919E0EC(a1, *(_QWORD *)v126, v129, v55);
                  --*(_QWORD *)(a1 + 712);
                }
                else
                {
                  *(_BYTE *)(a3 + **(_QWORD **)(v139 + 16)) = 0;
                  v140 = (uint64_t *)(*(_QWORD *)(v138 + 24) + 24 * *(_QWORD *)(v126 + 16));
                  sub_23919A10C(a3 + v140[1], *(unsigned int **)(v140[2] + 8), 10, *v140);
                }
LABEL_264:
                if ((_QWORD)v169)
                  v141 = 0;
                else
                  v141 = BYTE9(v168) == 1;
                if (v141)
                  sub_2391A2D7C((unsigned __int8 **)&v168);
                v126 += 32;
                if (!--v125)
                  break;
                continue;
              case 5:
                sub_2391A2D10(a1, (unsigned __int8 **)&v168);
                goto LABEL_264;
              default:
                goto LABEL_264;
            }
            break;
          }
        }
      }
      else
      {
        sub_2391A205C(a1, a2, a3, (uint64_t)v55);
      }
      if (v57 == 1)
      {
        v168 = 0uLL;
        *(_QWORD *)&v169 = 0;
        if (sub_23919AAC8(a1) == 1)
        {
          sub_2391A1EE4(a1, (uint64_t)&v168);
        }
        else
        {
          v148 = sub_23919ACE0(a1, 6u);
          *(_QWORD *)&v168 = *(_QWORD *)(a1 + 864);
          WORD4(v168) = *(unsigned __int8 *)(a1 + 873);
          v149 = v148 + 1;
          *(_QWORD *)&v169 = v148 + 1;
          sub_23919B190(a1, (v148 + 1) >> 3);
          sub_23919ACE0(a1, v149 & 7);
        }
        if (!*((_QWORD *)a2 + 10) || sub_2391A2198(a1, (uint64_t)&v168, a2, a3, (uint64_t)v55))
          sub_2391A29C0(a1, (uint64_t)&v168);
      }
      else
      {
        v142 = *((_QWORD *)a2 + 7);
        if (v142)
          sub_2391A2A34(a1, a2, v142, a3);
      }
      if ((a2[40] & 0x10) != 0)
      {
        v150 = v166;
        if (v166)
        {
          sub_2391A2B44(a1, (uint64_t *)&v165);
          v150 = v166;
        }
        if (a4)
        {
          if (v150)
          {
            v151 = (_QWORD *)(a4 + 8);
            v152 = *(_QWORD *)(a4 + 8);
            if (v152)
            {
              do
              {
                v153 = v152;
                v152 = *(_QWORD *)(v152 + 32);
              }
              while (v152);
              v151 = (_QWORD *)(v153 + 32);
            }
            *v151 = v150;
          }
          if (!*(_QWORD *)a4)
            *(_QWORD *)a4 = v165;
        }
        else
        {
          if (v150)
            sub_2391AE48C(a1, 38);
          while (1)
          {
            v160 = v165;
            if (!v165)
              break;
            v165 = (void *)*((_QWORD *)v165 + 2);
            sub_2391A4BBC(a1, v160, 24);
          }
        }
      }
      goto LABEL_375;
    case 0x12u:
    case 0x13u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x1Au:
      v169 = 0u;
      v170 = 0u;
      v168 = 0u;
      if (v9 == 18)
      {
        BYTE8(v169) = 4;
        *(_QWORD *)&v169 = sub_2391A0C08;
        sub_23919C7CC(a1, (uint64_t)&v168);
        v10 = *((_QWORD *)&v168 + 1);
        if (!*((_QWORD *)&v168 + 1))
          goto LABEL_34;
        v11 = (char *)v168;
        do
        {
          if (*v11)
            v12 = *v11 + 47;
          else
            v12 = 32;
          *v11++ = v12;
          --v10;
        }
        while (v10);
      }
      else
      {
        if ((*(_QWORD *)(a1 + 824) & 0x40) != 0)
          v22 = 8;
        else
          v22 = 7;
        BYTE8(v169) = v22;
        *(_QWORD *)&v169 = sub_2391A0C08;
        sub_23919C7CC(a1, (uint64_t)&v168);
      }
      v10 = *((_QWORD *)&v168 + 1);
LABEL_34:
      v23 = v168;
      switch(*a2 & 0x1F)
      {
        case 0x12:
          if (v10)
            goto LABEL_141;
          v24 = 3998012216;
          goto LABEL_202;
        case 0x13:
          if (v10)
            goto LABEL_141;
          v24 = 2427040028;
          goto LABEL_202;
        case 0x16:
          if (v10)
            goto LABEL_141;
          v24 = 3692221067;
          goto LABEL_202;
        case 0x17:
          if (v10)
            goto LABEL_141;
          v24 = 2699246459;
          goto LABEL_202;
        case 0x18:
          if (v10)
            goto LABEL_141;
          v24 = 828715913;
          goto LABEL_202;
        case 0x1A:
          if (v10)
          {
LABEL_141:
            *(_BYTE *)(v168 + v10) = 0;
            *(_QWORD *)a3 = v23 - 1;
          }
          else
          {
            v24 = 4203528122;
LABEL_202:
            v92 = malloc_type_calloc(1uLL, 2uLL, v24);
            *v92 = 0;
            *(_QWORD *)a3 = v92;
            *(_BYTE *)v92 = 86;
            *(_BYTE *)(*(_QWORD *)a3 + 1) = 0;
          }
          *(_QWORD *)(a1 + 880) = 0;
          break;
        default:
          goto LABEL_391;
      }
      goto LABEL_375;
    case 0x20u:
      *(_QWORD *)&v168 = 0;
      v62 = *((_QWORD *)a2 + 3);
      if (*((_QWORD *)a2 + 2) == -1)
      {
        v90 = *((_QWORD *)a2 + 4);
        if ((unint64_t)v90 < 2)
        {
LABEL_333:
          v91 = 0;
LABEL_334:
          v154 = v91;
          if (*((_QWORD *)a2 + 4) <= (unint64_t)v91)
            sub_2391AE48C(a1, 37);
          v155 = v62 + 32 * v154;
          if (*(_BYTE *)(v155 + 8) != 5)
          {
            v156 = *((_QWORD *)a2 + 1);
            sub_23919A0C4(*(unsigned int *)(v156 + 48), (_BYTE *)a3, *(_DWORD *)(v155 + 16));
            v157 = *(_QWORD *)(a1 + 712);
            if (v157 < 0x40)
            {
              v158 = a3 + *(_QWORD *)(v156 + 40);
              *(_QWORD *)(a1 + 8 * v157 + 200) = v155;
              *(_QWORD *)(a1 + 712) = v157 + 1;
              sub_23919E0EC(a1, *(_QWORD *)v155, v158, a4);
              goto LABEL_340;
            }
            goto LABEL_391;
          }
LABEL_337:
          v106 = a1;
          v107 = 37;
          goto LABEL_374;
        }
LABEL_199:
        LODWORD(v165) = 0;
        sub_23919FDBC(a1, v90 - 1, (int *)&v165);
        v91 = v165;
        goto LABEL_334;
      }
      if (!sub_23919AAC8(a1))
      {
        v90 = *((_QWORD *)a2 + 2);
        if (v90 < 2)
          goto LABEL_333;
        goto LABEL_199;
      }
      sub_2391A0D94(a1, (unint64_t *)&v168);
      v63 = *((_QWORD *)a2 + 2) + v168;
      if (v63 < *((_QWORD *)a2 + 4))
      {
        v64 = v62 + 32 * v63;
        if (*(_BYTE *)(v64 + 8) != 5)
        {
          v65 = *((_QWORD *)a2 + 1);
          sub_23919A0C4(*(unsigned int *)(v65 + 48), (_BYTE *)a3, *(_DWORD *)(v64 + 16));
          v66 = *(_QWORD *)(a1 + 712);
          if (v66 < 0x40)
          {
            v67 = a3 + *(_QWORD *)(v65 + 40);
            *(_QWORD *)(a1 + 8 * v66 + 200) = v64;
            *(_QWORD *)(a1 + 712) = v66 + 1;
            v68 = *(_QWORD *)v64;
            v69 = a1;
            v70 = a4;
LABEL_207:
            sub_2391A2E7C(v69, v68, v67, v70);
LABEL_340:
            --*(_QWORD *)(a1 + 712);
            goto LABEL_375;
          }
          goto LABEL_391;
        }
        goto LABEL_337;
      }
      sub_23919A0C4(*(unsigned int *)(*((_QWORD *)a2 + 1) + 48), (_BYTE *)a3, v63);
LABEL_24:
      sub_2391A30C8(a1);
LABEL_375:
      *(_QWORD *)(a1 + 808) = v8;
      return;
    default:
      if (v9 != 48)
        goto LABEL_390;
      *(_QWORD *)&v168 = a3;
      *((_QWORD *)&v169 + 1) = 0;
      *(_QWORD *)&v170 = a2;
      *((_QWORD *)&v170 + 1) = a4;
      v47 = *(_QWORD *)(a1 + 712);
      if (v47 >= 0x40)
        goto LABEL_391;
      *(_QWORD *)(a1 + 8 * v47 + 200) = a2;
      *(_QWORD *)(a1 + 712) = v47 + 1;
      *((_QWORD *)&v168 + 1) = 0;
      *(_QWORD *)&v169 = sub_2391A32C0;
      sub_23919C7CC(a1, (uint64_t)&v168);
      goto LABEL_340;
  }
}

char *sub_23919F8F8(char *a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;

  v4 = *(_DWORD *)(a2 + 4);
  if (v4 >= 0x80)
  {
    if (v4 >= 0x8000)
    {
      if (v4 >= 0x800000)
      {
        sub_23919AEA0(a1, 4u);
        v5 = *(_DWORD *)(a2 + 4);
        if (*(_BYTE *)a2)
        {
          v5 = ~v5;
          *(_DWORD *)(a2 + 4) = v5;
        }
      }
      else
      {
        if (*(_BYTE *)a2)
        {
          v4 = 0xFFFFFF - v4;
          *(_DWORD *)(a2 + 4) = v4;
        }
        v5 = v4 | 0x3000000;
      }
      v6 = 32;
    }
    else
    {
      if (*(_BYTE *)a2)
      {
        v4 = 0xFFFF - v4;
        *(_DWORD *)(a2 + 4) = v4;
      }
      v5 = v4 | 0x20000;
      v6 = 24;
    }
  }
  else
  {
    if (*(_BYTE *)a2)
    {
      v4 = 255 - v4;
      *(_DWORD *)(a2 + 4) = v4;
    }
    v5 = v4 | 0x100;
    v6 = 16;
  }
  return sub_23919AB30(a1, v5, v6);
}

unint64_t sub_23919F9BC(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  char v5;
  unint64_t result;

  v4 = sub_23919AFC0(a1);
  if (v4 - 5 <= 0xFFFFFFFB)
    sub_2391AE48C(a1, 24);
  v5 = 8 * v4;
  result = sub_23919ACE0(a1, (8 * v4));
  *(_DWORD *)(a2 + 4) = result;
  if (v4 <= 3 && (result & (128 << (v5 - 8))) != 0)
    *(_DWORD *)(a2 + 4) = (-1 << v5) | result;
  return result;
}

char *sub_23919FA48(char *result, unsigned int a2, int *a3)
{
  char *v4;
  char v5;
  char v6;
  unint64_t v7;
  unsigned int v8;
  int v9;
  char *v10;
  int v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  unsigned int v17;
  char v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = result;
  if ((result[824] & 0x40) == 0)
  {
    v5 = __clz(a2 | 1);
    if (a2)
      v6 = 32;
    else
      v6 = 31;
    v7 = *a3;
    v8 = (v6 - v5);
    return sub_23919AB30(v4, v7, v8);
  }
  if (!a2)
    return result;
  if (a2 <= 0xFE)
  {
    v8 = 32 - __clz(a2 | 1);
    v7 = *a3;
    return sub_23919AB30(v4, v7, v8);
  }
  if (a2 == 255)
  {
    v9 = result[873];
    if (v9 == 7)
    {
      v10 = (char *)*((_QWORD *)result + 108);
    }
    else
    {
      **((_BYTE **)result + 108) &= 510 << v9;
      v10 = (char *)(*((_QWORD *)result + 108) + 1);
      *((_QWORD *)result + 108) = v10;
      result[873] = 7;
    }
    if (v10 == *((char **)result + 106))
    {
      v13 = *((_QWORD *)result + 105);
      v14 = *((_QWORD *)result + 107) - v13;
      v15 = &v10[-v13];
      result = sub_2391BBE54((uint64_t)result, 1);
      *((_QWORD *)v4 + 105) = result;
      v10 = &v15[(_QWORD)result];
      *((_QWORD *)v4 + 106) = &v15[(_QWORD)result + 1];
      *((_QWORD *)v4 + 107) = &result[v14];
      *((_QWORD *)v4 + 108) = &v15[(_QWORD)result];
    }
    *v10 = *a3;
  }
  else
  {
    if (HIWORD(a2))
    {
      v16 = *a3;
      v17 = 64 - (__clz(a2 | 1) | 0x20);
      if ((v17 & 7) != 0)
        v18 = (v17 >> 3) + 1;
      else
        v18 = v17 >> 3;
      v19 = 32 - __clz((v18 - 1) & 0xFE | 1);
      if (v16)
        v20 = 64;
      else
        v20 = 63;
      v21 = __clz(v16 | 1) | 0x20;
      if (((v20 - v21) & 7) != 0)
        v22 = ((v20 - v21) >> 3) + 1;
      else
        v22 = (v20 - v21) >> 3;
      if (v20 == v21)
        v23 = 1;
      else
        v23 = v22;
      sub_23919AB30(result, v23 - 1, v19);
      v24 = v4[873];
      if (v24 != 7)
      {
        *(_BYTE *)(*((_QWORD *)v4 + 108))++ &= 510 << v24;
        v4[873] = 7;
      }
      v7 = *a3;
      v8 = 8 * (v23 & 0x1F);
      return sub_23919AB30(v4, v7, v8);
    }
    v11 = result[873];
    if (v11 == 7)
    {
      v12 = (char *)*((_QWORD *)result + 108);
    }
    else
    {
      **((_BYTE **)result + 108) &= 510 << v11;
      v12 = (char *)(*((_QWORD *)result + 108) + 1);
      *((_QWORD *)result + 108) = v12;
      result[873] = 7;
    }
    v25 = *((_QWORD *)result + 106);
    if (v25 - (uint64_t)v12 <= 1)
    {
      v26 = 2 - (v25 - (_QWORD)v12);
      v27 = *((_QWORD *)result + 105);
      v28 = *((_QWORD *)result + 107) - v27;
      v29 = &v12[-v27];
      v30 = v25 - v27;
      result = sub_2391BBE54((uint64_t)result, v26);
      *((_QWORD *)v4 + 105) = result;
      *((_QWORD *)v4 + 106) = &result[v30 + v26];
      *((_QWORD *)v4 + 107) = &result[v28];
      v12 = &v29[(_QWORD)result];
      *((_QWORD *)v4 + 108) = &v29[(_QWORD)result];
    }
    *v12 = BYTE1(*a3);
    v31 = *((_QWORD *)v4 + 108);
    *((_QWORD *)v4 + 108) = v31 + 1;
    *(_BYTE *)(v31 + 1) = *a3;
  }
  ++*((_QWORD *)v4 + 108);
  return result;
}

char *sub_23919FD04(uint64_t a1, unsigned int *a2)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;

  if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
  {
    v4 = *(unsigned __int8 *)(a1 + 873);
    if (v4 != 7)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v4;
      *(_BYTE *)(a1 + 873) = 7;
    }
  }
  v5 = *a2;
  if (*a2 >= 0x100)
  {
    if (v5 >= 0x10000)
    {
      if (HIBYTE(v5))
      {
        sub_23919AEA0((char *)a1, 4u);
        v6 = *a2;
      }
      else
      {
        v6 = v5 | 0x3000000;
      }
      v7 = 32;
    }
    else
    {
      v6 = v5 | 0x20000;
      v7 = 24;
    }
  }
  else
  {
    v6 = v5 | 0x100;
    v7 = 16;
  }
  return sub_23919AB30((char *)a1, v6, v7);
}

uint64_t sub_23919FDBC(uint64_t result, unsigned int a2, int *a3)
{
  uint64_t v4;
  char v5;
  char v6;
  unsigned int v7;
  int v8;
  unsigned __int8 *v9;
  int v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  int v13;
  unsigned int v14;
  char v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;

  v4 = result;
  if ((*(_BYTE *)(result + 824) & 0x40) == 0)
  {
    v5 = __clz(a2 | 1);
    if (a2)
      v6 = 32;
    else
      v6 = 31;
    v7 = (v6 - v5);
    goto LABEL_26;
  }
  if (!a2)
  {
    *a3 = 0;
    return result;
  }
  if (a2 <= 0xFE)
  {
    v7 = 32 - __clz(a2 | 1);
LABEL_26:
    result = sub_23919ACE0(v4, v7);
    *a3 = result;
    return result;
  }
  if (a2 == 255)
  {
    v8 = *(unsigned __int8 *)(result + 873);
    if (v8 == 7)
    {
      v9 = *(unsigned __int8 **)(result + 864);
    }
    else
    {
      **(_BYTE **)(result + 864) &= 510 << v8;
      v9 = (unsigned __int8 *)(*(_QWORD *)(result + 864) + 1);
      *(_QWORD *)(result + 864) = v9;
      *(_BYTE *)(result + 873) = 7;
    }
    if (v9 == *(unsigned __int8 **)(result + 856))
    {
      result = sub_23919A988(result, 1);
      v9 = *(unsigned __int8 **)(v4 + 864);
    }
    v13 = *v9;
    v12 = v9 + 1;
    *a3 = v13;
  }
  else
  {
    if (HIWORD(a2))
    {
      v14 = 64 - (__clz(a2 | 1) | 0x20);
      if ((v14 & 7) != 0)
        v15 = (v14 >> 3) + 1;
      else
        v15 = v14 >> 3;
      v16 = sub_23919ACE0(result, 32 - __clz((v15 - 1) & 0xFE | 1));
      *a3 = v16;
      v17 = *(unsigned __int8 *)(v4 + 873);
      if (v17 != 7)
      {
        *(_BYTE *)(*(_QWORD *)(v4 + 864))++ &= 510 << v17;
        *(_BYTE *)(v4 + 873) = 7;
        v16 = *a3;
      }
      v7 = (8 * v16 + 8) & 0xF8;
      goto LABEL_26;
    }
    v10 = *(unsigned __int8 *)(result + 873);
    if (v10 == 7)
    {
      v11 = *(unsigned __int8 **)(result + 864);
    }
    else
    {
      **(_BYTE **)(result + 864) &= 510 << v10;
      v11 = (unsigned __int8 *)(*(_QWORD *)(result + 864) + 1);
      *(_QWORD *)(result + 864) = v11;
      *(_BYTE *)(result + 873) = 7;
    }
    v18 = *(_QWORD *)(result + 856) - (_QWORD)v11;
    if (v18 <= 1)
    {
      result = sub_23919A988(result, 2 - v18);
      v11 = *(unsigned __int8 **)(v4 + 864);
    }
    v19 = *v11;
    *a3 = v19 << 8;
    *(_QWORD *)(v4 + 864) = v11 + 1;
    *a3 = v11[1] | (v19 << 8);
    v12 = v11 + 2;
  }
  *(_QWORD *)(v4 + 864) = v12;
  return result;
}

unint64_t sub_23919FFCC(uint64_t a1, _DWORD *a2)
{
  int v4;
  char v5;
  unint64_t result;

  if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
  {
    v4 = *(unsigned __int8 *)(a1 + 873);
    if (v4 != 7)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v4;
      *(_BYTE *)(a1 + 873) = 7;
    }
  }
  v5 = sub_23919AFC0(a1);
  if ((v5 - 5) <= 0xFBu)
    sub_2391AE48C(a1, 24);
  result = sub_23919ACE0(a1, 8 * (v5 & 0x1Fu));
  *a2 = result;
  return result;
}

char *sub_2391A0070(char *result, unint64_t a2, char **a3)
{
  char *v4;
  unsigned int v5;
  char *v6;
  char *v7;
  unint64_t v9;
  int v10;
  char *v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int i;
  char v22;
  _BYTE *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  _BYTE *v33;
  uint64_t v34;
  int j;
  char v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  int v40;
  unint64_t v41;
  int v42;
  char *v43;

  v4 = result;
  v5 = a2 & 7;
  v6 = *a3;
  v7 = *a3;
  if (a2 >= 8)
  {
    v9 = a2 >> 3;
    v10 = result[873];
    v11 = (char *)*((_QWORD *)result + 108);
    v12 = &v11[a2 >> 3];
    if (v10 == 7)
    {
      v13 = *((_QWORD *)result + 106);
      if ((unint64_t)v12 > v13)
      {
        v14 = (uint64_t)&v11[v9 - v13];
        v15 = *((_QWORD *)result + 105);
        v16 = *((_QWORD *)result + 107) - v15;
        v17 = &v11[-v15];
        v18 = v13 - v15;
        result = sub_2391BBE54((uint64_t)result, v14);
        *((_QWORD *)v4 + 105) = result;
        *((_QWORD *)v4 + 106) = &result[v18 + v14];
        *((_QWORD *)v4 + 107) = &result[v16];
        v11 = &v17[(_QWORD)result];
        *((_QWORD *)v4 + 108) = &v17[(_QWORD)result];
      }
      v19 = 0;
      if (v9 <= 1)
        v20 = 1;
      else
        v20 = a2 >> 3;
      do
      {
        *v11 = 0;
        for (i = 7; i != -1; --i)
        {
          v22 = *v7++;
          **((_BYTE **)v4 + 108) |= v22 << i;
        }
        ++v19;
        v11 = (char *)(*((_QWORD *)v4 + 108) + 1);
        *((_QWORD *)v4 + 108) = v11;
      }
      while (v19 != v20);
    }
    else
    {
      v23 = v12 + 1;
      v24 = *((_QWORD *)result + 106);
      if ((unint64_t)v23 > v24)
      {
        v25 = (uint64_t)&v11[v9 - v24 + 1];
        v26 = *((_QWORD *)result + 105);
        v27 = *((_QWORD *)result + 107) - v26;
        v43 = &v11[-v26];
        v28 = v24 - v26;
        result = sub_2391BBE54((uint64_t)result, v25);
        *((_QWORD *)v4 + 105) = result;
        *((_QWORD *)v4 + 106) = &result[v28 + v25];
        *((_QWORD *)v4 + 107) = &result[v27];
        v11 = &v43[(_QWORD)result];
        *((_QWORD *)v4 + 108) = &v43[(_QWORD)result];
        LOBYTE(v10) = v4[873];
      }
      v29 = 0;
      v30 = 0;
      if ((((_BYTE)v10 + 1) & 0xFE) != 0)
        v31 = (v10 + 1);
      else
        v31 = 1;
      do
      {
        v32 = *v7++;
        v30 |= v32 << (v29-- + 7);
      }
      while (-(int)v31 != v29);
      v7 = &v6[v31];
      *v11 |= v30 >> (7 - v10);
      v33 = (_BYTE *)(*((_QWORD *)v4 + 108) + 1);
      *((_QWORD *)v4 + 108) = v33;
      if (v9 != 1)
      {
        v34 = 0;
        do
        {
          *v33 = 0;
          for (j = 7; j != -1; --j)
          {
            v36 = *v7++;
            **((_BYTE **)v4 + 108) |= v36 << j;
          }
          ++v34;
          v33 = (_BYTE *)(*((_QWORD *)v4 + 108) + 1);
          *((_QWORD *)v4 + 108) = v33;
        }
        while (v34 != v9 - 1);
      }
      *v33 = 0;
      if (v4[873] <= 6u)
      {
        v37 = 0;
        v38 = 7;
        do
          **((_BYTE **)v4 + 108) |= v7[v37++] << v38--;
        while (7 - v4[873] > (int)v37);
        v7 += v37;
      }
    }
    v39 = (unint64_t)&a3[1][-a2];
    *a3 += a2;
    a3[1] = (char *)v39;
  }
  if (v5)
  {
    v40 = 0;
    v41 = 0;
    do
    {
      v42 = *v7++;
      v41 |= (v42 << (v40-- + 7));
    }
    while (-v5 != v40);
    return sub_23919AB30(v4, v41 >> (8 - v5), v5);
  }
  return result;
}

void sub_2391A0370(uint64_t a1, size_t size, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t (*v14)(_QWORD, size_t);
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  void (*v18)(_QWORD, void **);
  uint64_t v19;
  void *v20;
  _BYTE *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t (*v24)(_QWORD, size_t);
  size_t v25;
  int v26;
  int i;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int j;
  uint64_t v32;
  int v33;
  int v34;
  unint64_t v35;
  unsigned int v36;
  uint64x2_t v37;
  char v38;
  int32x2_t v39;
  void *v40;

  if (size <= 0x10000)
  {
    if (size)
    {
      v6 = *(unsigned __int8 *)(a1 + 872);
      if (v6 == 7)
        v7 = *(unsigned __int8 *)(a1 + 873) + 8 * (*(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 864)) - 7;
      else
        v7 = *(unsigned __int8 *)(a1 + 873) - v6 + 8 * (~*(_QWORD *)(a1 + 864) + *(_QWORD *)(a1 + 856));
      v8 = size >= v7;
      v9 = size - v7;
      if (v9 != 0 && v8)
      {
        if ((v9 & 7) != 0)
          v10 = (v9 >> 3) + 1;
        else
          v10 = v9 >> 3;
        sub_23919A988(a1, v10);
      }
      v11 = *(void **)a3;
      if (*(_QWORD *)a3)
      {
        v40 = *(void **)a3;
        v12 = *(_QWORD **)(a1 + 944);
        if (v12 && (v13 = (_QWORD *)*v12) != 0 && (v14 = (uint64_t (*)(_QWORD, size_t))v13[1]) != 0)
        {
          v15 = (void *)v14(*v13, *(_QWORD *)(a3 + 8) + size);
        }
        else
        {
          v15 = malloc_type_calloc(1uLL, *(_QWORD *)(a3 + 8) + size, 0x16D83DAuLL);
          bzero(v15, *(_QWORD *)(a3 + 8) + size);
        }
        *(_QWORD *)a3 = v15;
        memcpy(v15, v11, *(_QWORD *)(a3 + 8));
        v16 = *(_QWORD **)(a1 + 944);
        if (v16 && (v17 = (_QWORD *)*v16) != 0 && (v18 = (void (*)(_QWORD, void **))v17[2]) != 0)
          v18(*v17, &v40);
        else
          free(v11);
        v20 = *(void **)a3;
        v19 = *(_QWORD *)(a3 + 8);
        v21 = (_BYTE *)(*(_QWORD *)a3 + v19);
        *(_QWORD *)(a3 + 8) = v19 + size;
      }
      else
      {
        v22 = *(_QWORD **)(a1 + 944);
        if (v22 && (v23 = (_QWORD *)*v22) != 0 && (v24 = (uint64_t (*)(_QWORD, size_t))v23[1]) != 0)
        {
          v20 = (void *)v24(*v23, size);
        }
        else
        {
          v20 = malloc_type_calloc(1uLL, size, 0x16D83DAuLL);
          bzero(v20, size);
        }
        *(_QWORD *)a3 = v20;
        *(_QWORD *)(a3 + 8) = size;
        v21 = v20;
      }
      *(_QWORD *)(a1 + 880) = v20;
      if (size >= 8)
      {
        v25 = size >> 3;
        v26 = *(unsigned __int8 *)(a1 + 873);
        if (v26 == 7)
        {
          do
          {
            for (i = 7; i != -1; --i)
              *v21++ = (**(unsigned __int8 **)(a1 + 864) >> i) & 1;
            ++*(_QWORD *)(a1 + 864);
            --v25;
          }
          while (v25);
        }
        else
        {
          v28 = 0;
          v29 = (**(unsigned __int8 **)(a1 + 864) << (7 - v26));
          do
          {
            *v21++ = (v29 >> (7 - v28++)) & 1;
            v30 = *(unsigned __int8 *)(a1 + 873);
          }
          while (v30 >= v28);
          ++*(_QWORD *)(a1 + 864);
          if (size >= 0x10)
          {
            do
            {
              for (j = 7; j != -1; --j)
                *v21++ = (**(unsigned __int8 **)(a1 + 864) >> j) & 1;
              --v25;
              ++*(_QWORD *)(a1 + 864);
            }
            while (v25 > 1);
            v30 = *(unsigned __int8 *)(a1 + 873);
          }
          if (v30 <= 6)
          {
            v32 = 0;
            v33 = 7;
            do
              v21[v32++] = (**(unsigned __int8 **)(a1 + 864) >> v33--) & 1;
            while (7 - *(unsigned __int8 *)(a1 + 873) > (int)v32);
            v21 += v32;
          }
        }
      }
      if ((size & 7) != 0)
      {
        v34 = sub_23919ACE0(a1, size & 7);
        v35 = 0;
        v36 = (v34 << (8 - (size & 7))) & 0xFE;
        v37 = (uint64x2_t)vdupq_n_s64((size & 7) - 1);
        v38 = 7;
        do
        {
          v39 = vmovn_s64((int64x2_t)vcgeq_u64(v37, (uint64x2_t)vorrq_s8((int8x16_t)vdupq_n_s64(v35), (int8x16_t)xmmword_2391CBDF0)));
          if ((v39.i8[0] & 1) != 0)
            v21[v35] = (v36 >> v38) & 1;
          if ((v39.i8[4] & 1) != 0)
            v21[v35 + 1] = (v36 >> (v38 - 1)) & 1;
          v35 += 2;
          v38 -= 2;
        }
        while ((((size & 7) + 1) & 0xE) != v35);
      }
    }
  }
  else
  {
    sub_2391AE48C(a1, 41);
  }
}

char *sub_2391A0710(char *a1, size_t __n, uint64_t a3)
{
  char *result;
  size_t v6;

  result = sub_23919B210(a1, *(unsigned __int8 **)a3, __n);
  v6 = *(_QWORD *)(a3 + 8) - __n;
  *(_QWORD *)a3 += __n;
  *(_QWORD *)(a3 + 8) = v6;
  return result;
}

void sub_2391A074C(uint64_t a1, size_t size, uint64_t a3)
{
  size_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v8)(_QWORD, size_t);
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  void (*v12)(_QWORD, uint64_t);
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t (*v16)(_QWORD, size_t);
  const void *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;

  if (size <= 0x10000)
  {
    v4 = size;
    if (size)
    {
      v6 = *(_QWORD **)(a1 + 944);
      if (*(_QWORD *)a3)
      {
        if (v6 && (v7 = (_QWORD *)*v6) != 0 && (v8 = (uint64_t (*)(_QWORD, size_t))v7[1]) != 0)
        {
          v9 = (char *)v8(*v7, *(_QWORD *)(a3 + 8) + size);
        }
        else
        {
          v9 = (char *)malloc_type_calloc(1uLL, *(_QWORD *)(a3 + 8) + size, 0x6F337D7DuLL);
          bzero(v9, *(_QWORD *)(a3 + 8) + v4);
        }
        memcpy(v9, *(const void **)a3, *(_QWORD *)(a3 + 8));
        v10 = *(_QWORD **)(a1 + 944);
        if (v10 && (v11 = (_QWORD *)*v10) != 0 && (v12 = (void (*)(_QWORD, uint64_t))v11[2]) != 0)
          v12(*v11, a3);
        else
          free(*(void **)a3);
        v13 = *(_QWORD *)(a3 + 8);
        v14 = &v9[v13];
        *(_QWORD *)a3 = v9;
        *(_QWORD *)(a3 + 8) = v13 + v4;
      }
      else
      {
        if (v6 && (v15 = (_QWORD *)*v6) != 0 && (v16 = (uint64_t (*)(_QWORD, size_t))v15[1]) != 0)
        {
          v9 = (char *)v16(*v15, size);
        }
        else
        {
          v9 = (char *)malloc_type_calloc(1uLL, size, 0x6F337D7DuLL);
          bzero(v9, v4);
        }
        *(_QWORD *)a3 = v9;
        *(_QWORD *)(a3 + 8) = v4;
        v14 = v9;
      }
      *(_QWORD *)(a1 + 880) = v9;
      v17 = *(const void **)(a1 + 864);
      v18 = *(_QWORD *)(a1 + 856) - (_QWORD)v17;
      if (*(_BYTE *)(a1 + 873) == 7)
      {
        v19 = __OFSUB__(v4, v18);
        v20 = v4 - v18;
        if (!((v20 < 0) ^ v19 | (v20 == 0)))
        {
          sub_23919A988(a1, v20);
          v17 = *(const void **)(a1 + 864);
        }
        memcpy(v14, v17, v4);
        *(_QWORD *)(a1 + 864) += v4;
      }
      else
      {
        v19 = __OFSUB__(v4, v18);
        v21 = v4 - v18;
        if (v21 < 0 == v19)
          sub_23919A988(a1, v21 + 1);
        do
        {
          *v14 = **(unsigned __int8 **)(a1 + 864) << (7 - *(_BYTE *)(a1 + 873));
          v22 = (unsigned __int8 *)(*(_QWORD *)(a1 + 864) + 1);
          *(_QWORD *)(a1 + 864) = v22;
          *v14++ |= *v22 >> (*(_BYTE *)(a1 + 873) + 1);
          --v4;
        }
        while (v4);
      }
    }
  }
  else
  {
    sub_2391AE48C(a1, 41);
  }
}

_DWORD *sub_2391A095C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v6;
  _QWORD *v7;
  uint64_t v8;
  _DWORD *result;
  char v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;

  v6 = sub_23919AFC0(a1);
  if ((v6 & 0x80) != 0)
    sub_2391AE48C(a1, 28);
  v7 = malloc_type_calloc(1uLL, 0x10uLL, 0x10200403A5D3213uLL);
  v7[1] = v6 / 0x28u;
  *v7 = 0;
  if (*(_QWORD *)a3)
  {
    **(_QWORD **)(a3 + 8) = v7;
    ++*(_DWORD *)(a3 + 16);
  }
  else
  {
    *(_QWORD *)a3 = v7;
    *(_DWORD *)(a3 + 16) = 1;
  }
  v8 = a2 - 1;
  *(_QWORD *)(a3 + 8) = v7;
  *(_DWORD *)(a3 + 20) = 8;
  result = malloc_type_calloc(1uLL, 0x10uLL, 0x10200403A5D3213uLL);
  result[2] = v6 % 0x28u;
  result[3] = 0;
  *(_QWORD *)result = 0;
  if (*(_QWORD *)a3)
  {
    **(_QWORD **)(a3 + 8) = result;
    ++*(_DWORD *)(a3 + 16);
  }
  else
  {
    *(_QWORD *)a3 = result;
    *(_DWORD *)(a3 + 16) = 1;
  }
  *(_QWORD *)(a3 + 8) = result;
  for (*(_DWORD *)(a3 + 20) = 8; v8; v8 -= v12)
  {
    v10 = sub_23919AFC0(a1);
    v11 = v10 & 0x7F;
    if (v10 < 0)
    {
      v13 = 1;
      do
      {
        v14 = sub_23919AFC0(a1);
        v11 = v14 & 0x7F | (v11 << 7);
        v12 = v13 + 1;
        if ((v14 & 0x80) == 0)
          break;
      }
      while (v13++ < 5);
    }
    else
    {
      v12 = 1;
    }
    result = malloc_type_calloc(1uLL, 0x10uLL, 0x10200403A5D3213uLL);
    result[2] = v11;
    result[3] = 0;
    *(_QWORD *)result = 0;
    if (*(_QWORD *)a3)
    {
      **(_QWORD **)(a3 + 8) = result;
      v16 = *(_DWORD *)(a3 + 16) + 1;
    }
    else
    {
      *(_QWORD *)a3 = result;
      v16 = 1;
    }
    *(_QWORD *)(a3 + 8) = result;
    *(_DWORD *)(a3 + 16) = v16;
    *(_DWORD *)(a3 + 20) = 8;
  }
  return result;
}

char *sub_2391A0B2C(char *result, uint64_t a2, char **a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  int v8;
  unint64_t v9;
  char *v10;
  unsigned __int8 *v11;
  int v12;
  char *v13;

  v4 = a2;
  v5 = result;
  if (*((_BYTE *)a3 + 25) == 1)
  {
    if (a2)
    {
      v6 = *a3;
      do
      {
        v7 = a3[4];
        v8 = *v6;
        if (*v7 == v8)
        {
          v9 = 0;
        }
        else
        {
          v10 = 0;
          v11 = (unsigned __int8 *)(v7 + 1);
          while (a3[5] != v10)
          {
            v9 = (unint64_t)(v10 + 1);
            v12 = (v10++)[(_QWORD)v11];
            if (v12 == v8)
              goto LABEL_11;
          }
          v9 = (unint64_t)a3[5];
        }
LABEL_11:
        result = sub_23919AB30(v5, v9, *((unsigned __int8 *)a3 + 24));
        v6 = *a3 + 1;
        *a3 = v6;
        --v4;
      }
      while (v4);
    }
  }
  else if (a2)
  {
    v13 = *a3;
    do
    {
      result = sub_23919AB30(v5, *v13, *((unsigned __int8 *)a3 + 24));
      v13 = *a3 + 1;
      *a3 = v13;
      --v4;
    }
    while (v4);
  }
  return result;
}

unint64_t sub_2391A0C08(unint64_t result, unint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;

  v3 = result;
  if (a2 >= 0x801)
    return sub_2391AE48C(result, 41);
  v4 = a2;
  if (a2)
  {
    if (*a3)
    {
      v6 = (void *)(*a3 - 1);
      v7 = malloc_type_calloc(1uLL, a3[1] + a2 + 2, 0xEA7AB5EDuLL);
      bzero(v7, a3[1] + v4 + 2);
      *a3 = (uint64_t)v7;
      memcpy(v7, v6, a3[1]);
      free(v6);
      v8 = *a3;
      v9 = a3[1];
      v10 = *a3 + 1;
      v11 = (_BYTE *)(v10 + v9);
      *a3 = v10;
      a3[1] = v9 + v4;
    }
    else
    {
      v12 = malloc_type_calloc(1uLL, a2 + 2, 0xEA7AB5EDuLL);
      bzero(v12, v4 + 2);
      *a3 = (uint64_t)v12;
      *v12 = 86;
      v8 = *a3;
      v11 = (_BYTE *)(*a3 + 1);
      *a3 = (uint64_t)v11;
      a3[1] = v4;
    }
    *(_QWORD *)(v3 + 880) = v8;
    do
    {
      result = sub_23919ACE0(v3, *((unsigned __int8 *)a3 + 24));
      *v11++ = result;
      --v4;
    }
    while (v4);
  }
  return result;
}

char *sub_2391A0D2C(char *a1, unint64_t a2)
{
  unsigned int v2;
  unsigned int v5;

  v2 = a2;
  if (a2 <= 0x3E)
    return sub_23919AB30(a1, a2, 7u);
  sub_23919AA08(a1, 1);
  v5 = v2;
  return sub_23919FD04((uint64_t)a1, &v5);
}

unint64_t sub_2391A0D94(uint64_t a1, unint64_t *a2)
{
  unint64_t result;
  unsigned int v5;

  if (sub_23919AAC8(a1))
  {
    v5 = 0;
    sub_23919FFCC(a1, &v5);
    result = v5;
  }
  else
  {
    result = sub_23919ACE0(a1, 6u);
  }
  *a2 = result;
  return result;
}

char *sub_2391A0DEC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char v3;

  v3 = a3;
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 864) - *(_QWORD *)(a1 + 856);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 873);
  *(_QWORD *)(a2 + 16) = a3 + 1;
  sub_23919B06C(a1, a3 >> 3);
  return sub_23919AB30((char *)a1, 0, v3 & 7);
}

char *sub_2391A0E40(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  int v6;
  unint64_t v7;
  uint64_t v8;
  size_t v9;

  v3 = a3;
  if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
  {
    v6 = *(unsigned __int8 *)(a1 + 873);
    if (v6 != 7)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v6;
      *(_BYTE *)(a1 + 873) = 7;
    }
  }
  *(_QWORD *)(a2 + 16) = 0;
  if (a3 >= 0x10000)
  {
    do
    {
      sub_23919AEA0((char *)a1, 0xC4u);
      if (!*(_QWORD *)(a2 + 16))
      {
        *(_QWORD *)a2 = *(_QWORD *)(a1 + 864) - *(_QWORD *)(a1 + 856);
        *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 873);
        *(_QWORD *)(a2 + 16) = 0x10000;
      }
      sub_23919B06C(a1, 0x2000uLL);
      v3 -= 0x10000;
    }
    while (v3 >> 16);
  }
  v7 = v3 - 49152;
  if (v3 > 0xC000)
  {
    sub_23919AEA0((char *)a1, 0xC3u);
    if (!*(_QWORD *)(a2 + 16))
    {
      *(_QWORD *)a2 = *(_QWORD *)(a1 + 864) - *(_QWORD *)(a1 + 856);
      *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 873);
      *(_QWORD *)(a2 + 16) = 49152;
    }
    v8 = a1;
    v9 = 6144;
LABEL_20:
    sub_23919B06C(v8, v9);
    v3 = v7;
    goto LABEL_21;
  }
  if (v3 >= 0x8000)
  {
    sub_23919AEA0((char *)a1, 0xC2u);
    if (!*(_QWORD *)(a2 + 16))
    {
      *(_QWORD *)a2 = *(_QWORD *)(a1 + 864) - *(_QWORD *)(a1 + 856);
      *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 873);
      *(_QWORD *)(a2 + 16) = 0x8000;
    }
    sub_23919B06C(a1, 0x1000uLL);
    v3 -= 0x8000;
  }
  v7 = v3 - 0x4000;
  if (v3 >= 0x4000)
  {
    sub_23919AEA0((char *)a1, 0xC1u);
    if (!*(_QWORD *)(a2 + 16))
    {
      *(_QWORD *)a2 = *(_QWORD *)(a1 + 864) - *(_QWORD *)(a1 + 856);
      *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 873);
      *(_QWORD *)(a2 + 16) = 0x4000;
    }
    v8 = a1;
    v9 = 2048;
    goto LABEL_20;
  }
LABEL_21:
  if (v3 > 0x7F)
    sub_23919AB30((char *)a1, v3 | 0x8000, 0x10u);
  else
    sub_23919AEA0((char *)a1, v3);
  if (!*(_QWORD *)(a2 + 16))
  {
    *(_QWORD *)a2 = *(_QWORD *)(a1 + 864) - *(_QWORD *)(a1 + 856);
    *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 873);
    *(_QWORD *)(a2 + 16) = v3;
  }
  sub_23919B06C(a1, v3 >> 3);
  return sub_23919AB30((char *)a1, 0, v3 & 7);
}

uint64_t sub_2391A1048(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = result;
  v8 = a3[6];
  if (v8)
  {
    v9 = a3[2];
    do
    {
      switch(*(_BYTE *)(v9 + 8))
      {
        case 0:
          goto LABEL_5;
        case 1:
          sub_2391A1B60(v7, a2, 1);
LABEL_5:
          v10 = *(_QWORD *)(v7 + 712);
          if (v10 >= 0x40)
            goto LABEL_32;
          v11 = a4 + *(_QWORD *)(*(_QWORD *)(a3[1] + 24) + 24 * *(_QWORD *)(v9 + 16) + 8);
          goto LABEL_13;
        case 2:
          v12 = *(_QWORD *)(a3[1] + 24);
          v13 = *(_QWORD *)(v9 + 16);
          if (*(_BYTE *)(a4 + **(_QWORD **)(v12 + 24 * v13 + 16)) != 1)
            goto LABEL_14;
          v14 = *(_QWORD *)(v12 + 24 * v13 + 8);
          sub_2391A1B60(v7, a2, 1);
          v10 = *(_QWORD *)(v7 + 712);
          if (v10 >= 0x40)
            goto LABEL_32;
          goto LABEL_12;
        case 3:
          v15 = *(_QWORD *)(a3[1] + 24);
          v16 = *(_QWORD *)(v9 + 16);
          if (*(_BYTE *)(a4 + **(_QWORD **)(v15 + 24 * v16 + 16)) != 1)
            goto LABEL_14;
          v14 = *(_QWORD *)(v15 + 24 * v16 + 8);
          sub_2391A1B60(v7, a2, 1);
          v10 = *(_QWORD *)(v7 + 712);
          if (v10 >= 0x40)
LABEL_32:
            sub_2391AE50C(v7, 15);
LABEL_12:
          v11 = a4 + v14;
LABEL_13:
          *(_QWORD *)(v7 + 200 + 8 * v10) = v9;
          *(_QWORD *)(v7 + 712) = v10 + 1;
          result = sub_23919CA58(v7, *(_QWORD *)v9, v11);
          --*(_QWORD *)(v7 + 712);
          break;
        case 5:
LABEL_14:
          result = sub_2391A1B60(v7, a2, 0);
          break;
        default:
          break;
      }
      v9 += 32;
      --v8;
    }
    while (v8);
  }
  v17 = a3[8];
  if (v17)
  {
    v18 = a3[4];
    while (2)
    {
      switch(*(_BYTE *)(v18 + 8))
      {
        case 0:
          goto LABEL_20;
        case 1:
          sub_2391A1B60(v7, a2, 1);
LABEL_20:
          v19 = *(_QWORD *)(v7 + 712);
          if (v19 >= 0x40)
            goto LABEL_32;
          v20 = a4 + *(_QWORD *)(*(_QWORD *)(a3[1] + 24) + 24 * *(_QWORD *)(v18 + 16) + 8);
          goto LABEL_28;
        case 2:
          v21 = *(_QWORD *)(a3[1] + 24);
          v22 = *(_QWORD *)(v18 + 16);
          if (*(_BYTE *)(a4 + **(_QWORD **)(v21 + 24 * v22 + 16)) != 1)
            goto LABEL_29;
          v23 = *(_QWORD *)(v21 + 24 * v22 + 8);
          sub_2391A1B60(v7, a2, 1);
          v19 = *(_QWORD *)(v7 + 712);
          if (v19 >= 0x40)
            goto LABEL_32;
          goto LABEL_27;
        case 3:
          v24 = *(_QWORD *)(a3[1] + 24);
          v25 = *(_QWORD *)(v18 + 16);
          if (*(_BYTE *)(a4 + **(_QWORD **)(v24 + 24 * v25 + 16)) != 1)
            goto LABEL_29;
          v23 = *(_QWORD *)(v24 + 24 * v25 + 8);
          sub_2391A1B60(v7, a2, 1);
          v19 = *(_QWORD *)(v7 + 712);
          if (v19 >= 0x40)
            goto LABEL_32;
LABEL_27:
          v20 = a4 + v23;
LABEL_28:
          *(_QWORD *)(v7 + 200 + 8 * v19) = v18;
          *(_QWORD *)(v7 + 712) = v19 + 1;
          result = sub_23919CA58(v7, *(_QWORD *)v18, v20);
          --*(_QWORD *)(v7 + 712);
LABEL_30:
          v18 += 32;
          if (!--v17)
            return result;
          continue;
        case 5:
LABEL_29:
          result = sub_2391A1B60(v7, a2, 0);
          goto LABEL_30;
        default:
          goto LABEL_30;
      }
    }
  }
  return result;
}

uint64_t sub_2391A1374(uint64_t result, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = result;
  v6 = a2[6];
  if (v6)
  {
    v7 = (uint64_t *)a2[2];
    v8 = *(_QWORD *)(result + 712);
    while (v8 < 0x40)
    {
      v9 = a3 + *(_QWORD *)(*(_QWORD *)(a2[1] + 24) + 24 * v7[2] + 8);
      *(_QWORD *)(v5 + 200 + 8 * v8) = v7;
      *(_QWORD *)(v5 + 712) = v8 + 1;
      v10 = *v7;
      v7 += 4;
      result = sub_23919CA58(v5, v10, v9);
      v8 = *(_QWORD *)(v5 + 712) - 1;
      *(_QWORD *)(v5 + 712) = v8;
      if (!--v6)
        goto LABEL_5;
    }
LABEL_10:
    sub_2391AE50C(v5, 15);
  }
LABEL_5:
  v11 = a2[8];
  if (v11)
  {
    v12 = (uint64_t *)a2[4];
    v13 = *(_QWORD *)(v5 + 712);
    while (v13 < 0x40)
    {
      v14 = a3 + *(_QWORD *)(*(_QWORD *)(a2[1] + 24) + 24 * v12[2] + 8);
      *(_QWORD *)(v5 + 200 + 8 * v13) = v12;
      *(_QWORD *)(v5 + 712) = v13 + 1;
      v15 = *v12;
      v12 += 4;
      result = sub_23919CA58(v5, v15, v14);
      v13 = *(_QWORD *)(v5 + 712) - 1;
      *(_QWORD *)(v5 + 712) = v13;
      if (!--v11)
        return result;
    }
    goto LABEL_10;
  }
  return result;
}

BOOL sub_2391A14A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unsigned __int8 *v25;
  int v26;
  _BYTE *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  unsigned int v50;
  BOOL v51;
  unsigned __int8 v52;
  unint64_t v53;
  unint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  uint64_t v64;
  _QWORD v65[3];

  v4 = *(_QWORD *)(a3 + 56);
  if (v4)
  {
    v6 = a3;
    v7 = a2;
    v9 = 0;
    v10 = 0;
    v11 = *(_QWORD **)(a3 + 24);
    v64 = a1 + 200;
    while (2)
    {
      switch(*((_BYTE *)v11 + 8))
      {
        case 0:
        case 1:
          v12 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24);
          v13 = v11[2];
          if (*(_BYTE *)(a4 + **(_QWORD **)(v12 + 24 * v13 + 16)) != 1)
            goto LABEL_14;
          v14 = *(_QWORD *)(v12 + 24 * v13 + 8);
          sub_2391A1B60(a1, v7, 1);
          v15 = *(_QWORD *)(a1 + 712);
          if (v15 >= 0x40)
            goto LABEL_73;
          *(_QWORD *)(v64 + 8 * v15) = v11;
          *(_QWORD *)(a1 + 712) = v15 + 1;
          sub_2391A1CE4(a1, *v11, a4 + v14);
          --*(_QWORD *)(a1 + 712);
          ++v10;
          goto LABEL_13;
        case 2:
          v16 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24);
          v17 = v11[2];
          if (*(_BYTE *)(a4 + **(_QWORD **)(v16 + 24 * v17 + 16)) != 1)
            goto LABEL_14;
          v18 = *(_QWORD *)(v16 + 24 * v17 + 8);
          sub_2391A1B60(a1, v7, 1);
          v19 = *(_QWORD *)(a1 + 712);
          if (v19 >= 0x40)
            goto LABEL_73;
          goto LABEL_12;
        case 3:
          v20 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24);
          v21 = v11[2];
          if (*(_BYTE *)(a4 + **(_QWORD **)(v20 + 24 * v21 + 16)) != 1)
            goto LABEL_14;
          v18 = *(_QWORD *)(v20 + 24 * v21 + 8);
          sub_2391A1B60(a1, v7, 1);
          v19 = *(_QWORD *)(a1 + 712);
          if (v19 >= 0x40)
            goto LABEL_73;
LABEL_12:
          *(_QWORD *)(v64 + 8 * v19) = v11;
          *(_QWORD *)(a1 + 712) = v19 + 1;
          sub_2391A1CE4(a1, *v11, a4 + v18);
          --*(_QWORD *)(a1 + 712);
          ++v9;
LABEL_13:
          v6 = a3;
          goto LABEL_15;
        case 4:
          v60 = v9;
          v22 = v11[2];
          memset(v65, 0, sizeof(v65));
          v23 = v11[2];
          if (v23)
          {
            v24 = 0;
            v25 = (unsigned __int8 *)(v11 + 5);
            do
            {
              v26 = *v25;
              v25 += 32;
              if (v26)
                ++v24;
              --v23;
            }
            while (v23);
          }
          else
          {
            v24 = 0;
          }
          if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
          {
            v28 = *(unsigned __int8 *)(a1 + 873);
            v27 = *(_BYTE **)(a1 + 864);
            v62 = 7;
            if (v28 != 7)
            {
              *v27 &= 510 << v28;
              v27 = (_BYTE *)(*(_QWORD *)(a1 + 864) + 1);
              *(_QWORD *)(a1 + 864) = v27;
              *(_BYTE *)(a1 + 873) = 7;
            }
          }
          else
          {
            v27 = *(_BYTE **)(a1 + 864);
            v62 = *(unsigned __int8 *)(a1 + 873);
          }
          v29 = *(_QWORD *)(a1 + 856);
          sub_23919B06C(a1, 1uLL);
          if (v24 >> 16)
            sub_2391A0E40(a1, (uint64_t)v65, v24);
          else
            sub_2391A0DEC(a1, (uint64_t)v65, v24);
          v4 -= v22;
          v61 = (unint64_t)&v27[-v29];
          v30 = v11[2];
          if (v30)
          {
            v59 = v10;
            v31 = 0;
            v32 = 0;
            v33 = 0;
            v34 = 0;
            v35 = v11 + 4;
            while (2)
            {
              switch(*((_BYTE *)v35 + 8))
              {
                case 0:
                case 1:
                  v36 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24);
                  v37 = v35[2];
                  if (*(_BYTE *)(a4 + **(_QWORD **)(v36 + 24 * v37 + 16)) == 1)
                  {
                    v38 = *(_QWORD *)(a1 + 712);
                    if (v38 >= 0x40)
LABEL_73:
                      sub_2391AE50C(a1, 15);
                    v39 = a4 + *(_QWORD *)(v36 + 24 * v37 + 8);
                    *(_QWORD *)(v64 + 8 * v38) = v35;
                    *(_QWORD *)(a1 + 712) = v38 + 1;
                    sub_23919CA58(a1, *v35, v39);
                    --*(_QWORD *)(a1 + 712);
                    if (*((_BYTE *)v35 + 8) == 1)
                      sub_2391A1B60(a1, (uint64_t)v65, 1);
                    ++v32;
                  }
                  else
                  {
                    ++v33;
                  }
LABEL_47:
                  ++v34;
                  v35 += 4;
                  if (v34 < v11[2])
                    continue;
                  LODWORD(v30) = v31 != 0;
                  v11 = v35 - 4;
                  v10 = v59;
                  if (!v33)
                    goto LABEL_52;
                  v46 = v62;
                  if (v31)
                  {
                    sub_2391AE48C(a1, 33);
                    goto LABEL_57;
                  }
                  if (!v32)
                    goto LABEL_55;
                  goto LABEL_57;
                case 2:
                  v44 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24);
                  v45 = v35[2];
                  if (*(_BYTE *)(a4 + **(_QWORD **)(v44 + 24 * v45 + 16)) != 1)
                    goto LABEL_45;
                  v42 = *(_QWORD *)(v44 + 24 * v45 + 8);
                  sub_2391A1B60(a1, (uint64_t)v65, 1);
                  v43 = *(_QWORD *)(a1 + 712);
                  if (v43 < 0x40)
                    goto LABEL_44;
                  goto LABEL_73;
                case 3:
                  v40 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24);
                  v41 = v35[2];
                  if (*(_BYTE *)(a4 + **(_QWORD **)(v40 + 24 * v41 + 16)) != 1)
                    goto LABEL_45;
                  v42 = *(_QWORD *)(v40 + 24 * v41 + 8);
                  sub_2391A1B60(a1, (uint64_t)v65, 1);
                  v43 = *(_QWORD *)(a1 + 712);
                  if (v43 >= 0x40)
                    goto LABEL_73;
LABEL_44:
                  *(_QWORD *)(v64 + 8 * v43) = v35;
                  *(_QWORD *)(a1 + 712) = v43 + 1;
                  sub_23919CA58(a1, *v35, a4 + v42);
                  --*(_QWORD *)(a1 + 712);
                  ++v31;
                  v6 = a3;
                  goto LABEL_47;
                case 5:
LABEL_45:
                  sub_2391A1B60(a1, (uint64_t)v65, 0);
                  goto LABEL_47;
                default:
                  goto LABEL_73;
              }
            }
          }
          v32 = 0;
LABEL_52:
          v46 = v62;
          if (v32)
            goto LABEL_57;
LABEL_55:
          if (!(_DWORD)v30)
          {
            v47 = *(_QWORD *)(a1 + 856);
            *(_QWORD *)(a1 + 864) = v47 + v61;
            *(_BYTE *)(a1 + 873) = v46;
            *(_BYTE *)(v47 + v61) &= -2 << v46;
            v7 = a2;
            sub_2391A1B60(a1, a2, 0);
            v9 = v60;
            goto LABEL_15;
          }
LABEL_57:
          v48 = *(_QWORD *)(a1 + 864);
          v49 = (_BYTE *)(v48 - *(_QWORD *)(a1 + 856));
          v50 = *(unsigned __int8 *)(a1 + 873);
          v51 = v50 >= v46;
          v52 = v50 - v46;
          if (v51)
          {
            v53 = v61;
            v54 = (unint64_t)&v49[~v61];
            if (!v54)
              goto LABEL_65;
            sub_23919AB30((char *)a1, 0, v52);
          }
          else
          {
            sub_23919AB30((char *)a1, 0, (v52 + 8));
            v53 = v61;
            v54 = (unint64_t)&v49[-v61];
            if (v49 == (_BYTE *)v61)
            {
              v48 = *(_QWORD *)(a1 + 864);
LABEL_65:
              *(_QWORD *)(a1 + 864) = v48 - 1;
              sub_23919AB30((char *)a1, 0x100uLL, 0x10u);
              goto LABEL_70;
            }
          }
          if (v54 > 0x7F)
          {
            if (*(_BYTE *)(a1 + 873) == 7)
              sub_23919B37C((_QWORD *)a1, v54);
            else
              sub_23919B9DC(a1, v54);
          }
          else
          {
            v55 = (_BYTE *)(*(_QWORD *)(a1 + 856) + v53);
            v56 = *(unsigned __int8 *)(a1 + 873);
            if (v56 == 7)
            {
              *v55 = v54;
            }
            else
            {
              *v55 |= v54 >> (7 - v56);
              v55[1] |= v54 << (*(_BYTE *)(a1 + 873) + 1);
            }
          }
LABEL_70:
          v7 = a2;
          sub_2391A1B60(a1, a2, 1);
          v9 = v60 + 1;
LABEL_15:
          v11 += 4;
          if (!--v4)
            return (v10 | v9) != 0;
          continue;
        case 5:
LABEL_14:
          sub_2391A1B60(a1, v7, 0);
          goto LABEL_15;
        default:
          goto LABEL_73;
      }
    }
  }
  v10 = 0;
  v9 = 0;
  return (v10 | v9) != 0;
}

uint64_t sub_2391A1B60(uint64_t result, uint64_t a2, char a3)
{
  char v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  *(_BYTE *)(*(_QWORD *)(result + 856) + *(_QWORD *)a2) |= a3 << *(_BYTE *)(a2 + 8);
  v3 = *(_BYTE *)(a2 + 8);
  if (v3)
  {
    v4 = (uint64_t *)(a2 + 16);
    v5 = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a2 + 8) = v3 - 1;
    *(_QWORD *)(a2 + 16) = --v5;
    if (v5)
      return result;
    v8 = (v3 - 1);
    v6 = *(_QWORD *)a2;
    if ((v3 - 1) != 7)
    {
      v12 = 0;
      v9 = *(_QWORD *)(result + 856);
      v13 = *(unsigned __int8 *)(v9 + v6) << (8 - v3);
      v11 = v6 + 1;
      *(_QWORD *)a2 = v11;
      v10 = (*(unsigned __int8 *)(v9 + v11) >> v3) | v13;
      goto LABEL_9;
    }
LABEL_7:
    v9 = *(_QWORD *)(result + 856);
    LOBYTE(v10) = *(_BYTE *)(v9 + v6);
    v11 = v6 + 1;
    *(_QWORD *)a2 = v11;
    LOBYTE(v8) = 7;
    v12 = 1;
LABEL_9:
    switch((char)v10)
    {
      case -63:
        v14 = 0x4000;
        goto LABEL_21;
      case -62:
        v14 = 0x8000;
        goto LABEL_21;
      case -61:
        v14 = 49152;
        goto LABEL_21;
      case -60:
        v14 = 0x10000;
        goto LABEL_21;
      default:
        if ((v10 & 0xC0) == 0x80)
        {
          v15 = (v10 & 0x7F) << 8;
          *v4 = v15;
          v16 = *(unsigned __int8 *)(v9 + v11);
          if (v12)
          {
            *(_QWORD *)a2 = v11 + 1;
          }
          else
          {
            v17 = v11 + 1;
            *(_QWORD *)a2 = v17;
            v16 = (*(unsigned __int8 *)(v9 + v17) >> (v8 + 1)) | (v16 << (7 - v8));
          }
          v14 = v16 | (unint64_t)v15;
        }
        else
        {
          if ((v10 & 0x80) != 0)
            return sub_2391AE48C(result, 26);
          v14 = v10 & 0x7F;
        }
LABEL_21:
        *v4 = v14;
        return result;
    }
  }
  v6 = *(_QWORD *)a2 + 1;
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = 7;
  v4 = (uint64_t *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 16) - 1;
  *(_QWORD *)(a2 + 16) = v7;
  if (!v7)
    goto LABEL_7;
  return result;
}

char *sub_2391A1CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  BOOL v12;
  unsigned __int8 v13;
  char *result;
  unint64_t v15;
  _BYTE *v16;
  uint64_t v17;

  v6 = *(unsigned __int8 *)(a1 + 873);
  v7 = v6;
  if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
  {
    v7 = 7;
    if (v6 != 7)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v6;
      *(_BYTE *)(a1 + 873) = 7;
    }
  }
  v8 = *(_QWORD *)(a1 + 864) - *(_QWORD *)(a1 + 856);
  sub_23919B06C(a1, 1uLL);
  sub_23919CA58(a1, a2, a3);
  v9 = *(_QWORD *)(a1 + 864);
  v10 = v9 - *(_QWORD *)(a1 + 856);
  v11 = *(unsigned __int8 *)(a1 + 873);
  v12 = v11 >= v7;
  v13 = v11 - v7;
  if (v12)
  {
    v15 = v10 + ~v8;
    if (!v15)
      goto LABEL_12;
    result = sub_23919AB30((char *)a1, 0, v13);
  }
  else
  {
    result = sub_23919AB30((char *)a1, 0, (v13 + 8));
    v15 = v10 - v8;
    if (!v15)
    {
      v9 = *(_QWORD *)(a1 + 864);
LABEL_12:
      *(_QWORD *)(a1 + 864) = v9 - 1;
      return sub_23919AB30((char *)a1, 0x100uLL, 0x10u);
    }
  }
  if (v15 > 0x7F)
  {
    if (*(_BYTE *)(a1 + 873) == 7)
      return (char *)sub_23919B37C((_QWORD *)a1, v15);
    else
      return (char *)sub_23919B9DC(a1, v15);
  }
  else
  {
    v16 = (_BYTE *)(*(_QWORD *)(a1 + 856) + v8);
    v17 = *(unsigned __int8 *)(a1 + 873);
    if (v17 == 7)
    {
      *v16 = v15;
    }
    else
    {
      *v16 |= v15 >> (7 - v17);
      v16[1] |= v15 << (*(_BYTE *)(a1 + 873) + 1);
    }
  }
  return result;
}

unint64_t sub_2391A1E94(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char v3;

  v3 = a3;
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 864);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 873);
  *(_BYTE *)(a2 + 9) = 0;
  *(_QWORD *)(a2 + 16) = a3 + 1;
  sub_23919B190(a1, a3 >> 3);
  return sub_23919ACE0(a1, v3 & 7);
}

uint64_t sub_2391A1EE4(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  unint64_t v6;
  char v7;
  int v8;
  unint64_t v9;
  uint64_t result;

  if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
  {
    v4 = *(unsigned __int8 *)(a1 + 873);
    if (v4 != 7)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v4;
      *(_BYTE *)(a1 + 873) = 7;
    }
  }
  *(_QWORD *)a2 = 0;
  do
  {
    v5 = sub_23919AFC0(a1);
    if ((v5 + 63) >= 4u)
    {
      v7 = v5;
      if ((v5 & 0xC0) == 0x80)
      {
        v8 = sub_23919AFC0(a1);
        v6 = v8 & 0xFFFF80FF | ((v7 & 0x7F) << 8);
        if (!*(_QWORD *)a2)
        {
          *(_QWORD *)a2 = *(_QWORD *)(a1 + 864);
          *(_WORD *)(a2 + 8) = *(unsigned __int8 *)(a1 + 873);
          *(_QWORD *)(a2 + 16) = v6;
        }
        sub_23919ACE0(a1, v8 & 7);
      }
      else if (v5 < 0)
      {
        sub_2391AE48C(a1, 26);
        v6 = 0;
      }
      else
      {
        v9 = v5 & 0x7F;
        if (!*(_QWORD *)a2)
        {
          *(_QWORD *)a2 = *(_QWORD *)(a1 + 864);
          *(_WORD *)(a2 + 8) = *(unsigned __int8 *)(a1 + 873);
          *(_QWORD *)(a2 + 16) = v9;
        }
        sub_23919ACE0(a1, v5 & 7);
        v6 = v9 >> 3;
      }
    }
    else
    {
      v6 = ((unint64_t)(v5 + 63) << 11) + 2048;
    }
    if (!*(_QWORD *)a2)
    {
      *(_QWORD *)a2 = *(_QWORD *)(a1 + 864);
      *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 873);
      *(_BYTE *)(a2 + 9) = 1;
      *(_QWORD *)(a2 + 16) = 8 * v6;
    }
    result = sub_23919B190(a1, v6);
  }
  while (v6 > 0x7FF);
  return result;
}

uint64_t sub_2391A205C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = result;
  v8 = a2[6];
  if (v8)
  {
    v9 = (uint64_t *)a2[2];
    v10 = *(_QWORD *)(result + 712);
    while (v10 < 0x40)
    {
      v11 = a3 + *(_QWORD *)(*(_QWORD *)(a2[1] + 24) + 24 * v9[2] + 8);
      *(_QWORD *)(v7 + 200 + 8 * v10) = v9;
      *(_QWORD *)(v7 + 712) = v10 + 1;
      v12 = *v9;
      v9 += 4;
      result = sub_23919E0EC(v7, v12, v11, a4);
      v10 = *(_QWORD *)(v7 + 712) - 1;
      *(_QWORD *)(v7 + 712) = v10;
      if (!--v8)
        goto LABEL_5;
    }
LABEL_10:
    sub_2391AE50C(v7, 15);
  }
LABEL_5:
  v13 = a2[8];
  if (v13)
  {
    v14 = (uint64_t *)a2[4];
    v15 = *(_QWORD *)(v7 + 712);
    while (v15 < 0x40)
    {
      v16 = a3 + *(_QWORD *)(*(_QWORD *)(a2[1] + 24) + 24 * v14[2] + 8);
      *(_QWORD *)(v7 + 200 + 8 * v15) = v14;
      *(_QWORD *)(v7 + 712) = v15 + 1;
      v17 = *v14;
      v14 += 4;
      result = sub_23919E0EC(v7, v17, v16, a4);
      v15 = *(_QWORD *)(v7 + 712) - 1;
      *(_QWORD *)(v7 + 712) = v15;
      if (!--v13)
        return result;
    }
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_2391A2198(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned __int8 *v31;
  int v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  int v42;
  char v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  BOOL v63;
  unint64_t v64;
  unsigned int v66;
  unint64_t v68;
  int v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 *v74;
  uint64_t v75;
  unint64_t v76;

  v5 = a3[7];
  v6 = 1;
  if (!v5)
    return v6;
  v7 = a5;
  v12 = 0;
  v13 = a3[3];
  v72 = 0;
  v73 = a1 + 200;
  while (2)
  {
    switch(*(_BYTE *)(v13 + 8))
    {
      case 0:
      case 1:
        v14 = sub_2391A2D10(a1, (unsigned __int8 **)a2);
        v15 = *(_QWORD *)(a3[1] + 24);
        v16 = *(_QWORD *)(v13 + 16);
        if (v14)
        {
          v17 = v15 + 24 * v16;
          v18 = *(_QWORD *)(v17 + 8);
          *(_BYTE *)(a4 + **(_QWORD **)(v17 + 16)) = 1;
          v19 = *(_QWORD *)(a1 + 712);
          if (v19 >= 0x40)
            goto LABEL_104;
          *(_QWORD *)(v73 + 8 * v19) = v13;
          *(_QWORD *)(a1 + 712) = v19 + 1;
          sub_2391A2E7C(a1, *(_QWORD *)v13, a4 + v18, v7);
          --*(_QWORD *)(a1 + 712);
        }
        else
        {
          *(_BYTE *)(a4 + **(_QWORD **)(v15 + 24 * v16 + 16)) = 0;
          ++v72;
        }
        goto LABEL_31;
      case 2:
        v20 = sub_2391A2D10(a1, (unsigned __int8 **)a2);
        v21 = *(_QWORD *)(a3[1] + 24);
        v22 = *(_QWORD *)(v13 + 16);
        if (!v20)
        {
          *(_BYTE *)(a4 + **(_QWORD **)(v21 + 24 * v22 + 16)) = 0;
          goto LABEL_31;
        }
        v23 = v21 + 24 * v22;
        v24 = *(_QWORD *)(v23 + 8);
        *(_BYTE *)(a4 + **(_QWORD **)(v23 + 16)) = 1;
        v25 = *(_QWORD *)(a1 + 712);
        if (v25 >= 0x40)
          goto LABEL_104;
        goto LABEL_12;
      case 3:
        v26 = sub_2391A2D10(a1, (unsigned __int8 **)a2);
        v27 = a3[1];
        v28 = *(_QWORD *)(v27 + 24) + 24 * *(_QWORD *)(v13 + 16);
        if (!v26)
        {
          *(_BYTE *)(a4 + **(_QWORD **)(v28 + 16)) = 0;
          v33 = (uint64_t *)(*(_QWORD *)(v27 + 24) + 24 * *(_QWORD *)(v13 + 16));
          sub_23919A10C(a4 + v33[1], *(unsigned int **)(v33[2] + 8), 10, *v33);
          goto LABEL_31;
        }
        v24 = *(_QWORD *)(v28 + 8);
        *(_BYTE *)(a4 + **(_QWORD **)(v28 + 16)) = 1;
        v25 = *(_QWORD *)(a1 + 712);
        if (v25 >= 0x40)
LABEL_104:
          sub_2391AE50C(a1, 15);
LABEL_12:
        *(_QWORD *)(v73 + 8 * v25) = v13;
        *(_QWORD *)(a1 + 712) = v25 + 1;
        sub_2391A2E7C(a1, *(_QWORD *)v13, a4 + v24, v7);
        --*(_QWORD *)(a1 + 712);
        goto LABEL_13;
      case 4:
        v5 -= *(_QWORD *)(v13 + 16);
        v71 = v12;
        if (!sub_2391A2D10(a1, (unsigned __int8 **)a2))
        {
          v34 = *(_QWORD *)(v13 + 16);
          if (v34)
          {
            while (2)
            {
              switch(*(_BYTE *)(v13 + 40))
              {
                case 0:
                case 5:
                  goto LABEL_29;
                case 1:
                case 2:
                  *(_BYTE *)(a4 + **(_QWORD **)(*(_QWORD *)(a3[1] + 24) + 24 * *(_QWORD *)(v13 + 48) + 16)) = 0;
                  goto LABEL_29;
                case 3:
                  v35 = a3[1];
                  *(_BYTE *)(a4 + **(_QWORD **)(*(_QWORD *)(v35 + 24) + 24 * *(_QWORD *)(v13 + 48) + 16)) = 0;
                  v36 = (uint64_t *)(*(_QWORD *)(v35 + 24) + 24 * *(_QWORD *)(v13 + 48));
                  sub_23919A10C(a4 + v36[1], *(unsigned int **)(v36[2] + 8), 10, *v36);
LABEL_29:
                  v13 += 32;
                  if (!--v34)
                    break;
                  continue;
                default:
                  goto LABEL_104;
              }
              break;
            }
          }
          v12 = v71;
          goto LABEL_31;
        }
        v75 = 0;
        v76 = 0;
        v74 = 0;
        v29 = *(_QWORD *)(v13 + 16);
        if (v29)
        {
          v30 = 0;
          v31 = (unsigned __int8 *)(v13 + 40);
          do
          {
            v32 = *v31;
            v31 += 32;
            if (v32)
              ++v30;
            --v29;
          }
          while (v29);
        }
        else
        {
          v30 = 0;
        }
        if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
        {
          v37 = *(unsigned __int8 *)(a1 + 873);
          if (v37 != 7)
          {
            *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v37;
            *(_BYTE *)(a1 + 873) = 7;
          }
        }
        v38 = sub_23919AFC0(a1);
        if (v38 >= 0xC1)
        {
          v39 = *(_QWORD *)(a1 + 864) - 1;
          *(_QWORD *)(a1 + 864) = v39;
          v40 = *(unsigned __int8 *)(a1 + 873);
          v66 = v40;
          if (v40 == 7)
          {
            v41 = sub_23919B70C(a1);
            v42 = -1;
          }
          else
          {
            v41 = sub_23919C0B4(a1);
            v42 = v40;
          }
          v68 = v41;
          v70 = v39 + v41;
          goto LABEL_50;
        }
        v43 = v38;
        if ((v38 & 0xC0) == 0x80)
        {
          v44 = sub_23919AFC0(a1);
          v42 = 0;
          v68 = v44 & 0xFFFF80FF | ((v43 & 0x7F) << 8);
          v45 = *(_QWORD *)(a1 + 864) + v68;
LABEL_49:
          v70 = v45;
          v66 = *(unsigned __int8 *)(a1 + 873);
          goto LABEL_50;
        }
        if ((v38 & 0x80) == 0)
        {
          v42 = 0;
          v68 = v38 & 0x7F;
          v45 = *(_QWORD *)(a1 + 864) + v68;
          goto LABEL_49;
        }
        v66 = v38;
        sub_2391AE48C(a1, 26);
        v42 = 0;
        v70 = 0;
        v68 = 0;
LABEL_50:
        v7 = a5;
        v69 = v42;
        if (v30 >> 16)
        {
          sub_2391A1EE4(a1, (uint64_t)&v74);
        }
        else
        {
          v74 = *(unsigned __int8 **)(a1 + 864);
          LOWORD(v75) = *(unsigned __int8 *)(a1 + 873);
          v76 = v30 + 1;
          sub_23919B190(a1, v30 >> 3);
          sub_23919ACE0(a1, v30 & 7);
        }
        v46 = *(_QWORD *)(v13 + 16);
        if (v46)
        {
          v47 = v13 + 32;
          while (2)
          {
            switch(*(_BYTE *)(v47 + 8))
            {
              case 0:
                v48 = a4 + *(_QWORD *)(*(_QWORD *)(a3[1] + 24) + 24 * *(_QWORD *)(v47 + 16) + 8);
                goto LABEL_59;
              case 1:
                sub_2391A2D10(a1, &v74);
                v49 = *(_QWORD *)(a3[1] + 24);
                v50 = *(_QWORD *)(v47 + 16);
                v48 = a4 + *(_QWORD *)(v49 + 24 * v50 + 8);
                if (*(_BYTE *)(v47 + 8) == 1)
                  *(_BYTE *)(a4 + **(_QWORD **)(v49 + 24 * v50 + 16)) = 1;
LABEL_59:
                v51 = *(_QWORD *)(a1 + 712);
                if (v51 >= 0x40)
                  goto LABEL_104;
                *(_QWORD *)(v73 + 8 * v51) = v47;
                v52 = v51 + 1;
                goto LABEL_67;
              case 2:
                v53 = sub_2391A2D10(a1, &v74);
                v54 = *(_QWORD *)(a3[1] + 24);
                v55 = *(_QWORD *)(v47 + 16);
                if (!v53)
                {
                  *(_BYTE *)(a4 + **(_QWORD **)(v54 + 24 * v55 + 16)) = 0;
                  goto LABEL_71;
                }
                v56 = v54 + 24 * v55;
                v57 = *(_QWORD *)(v56 + 8);
                *(_BYTE *)(a4 + **(_QWORD **)(v56 + 16)) = 1;
                v58 = *(_QWORD *)(a1 + 712);
                if (v58 >= 0x40)
                  goto LABEL_104;
                goto LABEL_66;
              case 3:
                v59 = sub_2391A2D10(a1, &v74);
                v60 = a3[1];
                v61 = *(_QWORD *)(v60 + 24) + 24 * *(_QWORD *)(v47 + 16);
                if (v59)
                {
                  v57 = *(_QWORD *)(v61 + 8);
                  *(_BYTE *)(a4 + **(_QWORD **)(v61 + 16)) = 1;
                  v58 = *(_QWORD *)(a1 + 712);
                  if (v58 >= 0x40)
                    goto LABEL_104;
LABEL_66:
                  v48 = a4 + v57;
                  *(_QWORD *)(v73 + 8 * v58) = v47;
                  v52 = v58 + 1;
LABEL_67:
                  *(_QWORD *)(a1 + 712) = v52;
                  sub_23919E0EC(a1, *(_QWORD *)v47, v48, a5);
                  --*(_QWORD *)(a1 + 712);
                }
                else
                {
                  *(_BYTE *)(a4 + **(_QWORD **)(v61 + 16)) = 0;
                  v62 = (uint64_t *)(*(_QWORD *)(v60 + 24) + 24 * *(_QWORD *)(v47 + 16));
                  sub_23919A10C(a4 + v62[1], *(unsigned int **)(v62[2] + 8), 10, *v62);
                }
LABEL_71:
                if (v76)
                  v63 = 0;
                else
                  v63 = BYTE1(v75) == 1;
                if (v63)
                  sub_2391A2D7C(&v74);
                v47 += 32;
                if (--v46)
                  continue;
                v13 = v47 - 32;
                break;
              case 5:
                sub_2391A2D10(a1, &v74);
                goto LABEL_71;
              default:
                goto LABEL_71;
            }
            break;
          }
        }
        v12 = v71;
        if (v69 < 1)
        {
          if (v69 < 0)
          {
            if (*(unsigned __int8 *)(a1 + 873) <= 6u)
            {
              ++*(_QWORD *)(a1 + 864);
              *(_BYTE *)(a1 + 873) = 7;
            }
            sub_23919B37C((_QWORD *)a1, v68);
            if ((uint64_t)(v70 - *(_QWORD *)(a1 + 864)) >= 1)
LABEL_95:
              sub_2391AE48C(a1, 26);
          }
          else
          {
            if ((uint64_t)(v70 - *(_QWORD *)(a1 + 864)) >= 2)
              sub_2391AE48C(a1, 26);
            v64 = *(_QWORD *)(a1 + 856);
            if (v70 > v64 || v66 != 7 && v70 == v64)
              sub_2391AE48C(a1, 26);
            *(_QWORD *)(a1 + 864) = v70;
            *(_BYTE *)(a1 + 873) = v66;
          }
        }
        else
        {
          if (*(unsigned __int8 *)(a1 + 873) < v69)
            ++*(_QWORD *)(a1 + 864);
          *(_BYTE *)(a1 + 873) = v69;
          sub_23919B9DC(a1, v68);
          if ((uint64_t)(v70 - *(_QWORD *)(a1 + 864)) >= 2)
            goto LABEL_95;
        }
LABEL_13:
        ++v12;
LABEL_31:
        --v5;
        if (!*(_QWORD *)(a2 + 16))
        {
          if (*(_BYTE *)(a2 + 9) != 1)
            goto LABEL_97;
          sub_2391A2D7C((unsigned __int8 **)a2);
        }
        v13 += 32;
        if (v5)
          continue;
LABEL_97:
        if (v72 && v12)
          sub_2391AE48C(a1, 33);
        if (!v5)
          return 1;
        sub_2391A2A34(a1, a3, v5, a4);
        return 0;
      case 5:
        sub_2391A2D10(a1, (unsigned __int8 **)a2);
        goto LABEL_31;
      default:
        goto LABEL_104;
    }
  }
}

uint64_t sub_2391A29C0(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  v3 = result;
  if (*(_QWORD *)(a2 + 16))
    goto LABEL_4;
LABEL_2:
  if (*(_BYTE *)(a2 + 9) == 1)
    result = (uint64_t)sub_2391A2D7C((unsigned __int8 **)a2);
LABEL_4:
  while (*(_QWORD *)(a2 + 16) || *(_BYTE *)(a2 + 9) == 1)
  {
    result = sub_2391A2D10(v3, (unsigned __int8 **)a2);
    if ((_DWORD)result)
      result = sub_2391A30C8(v3);
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_2;
  }
  return result;
}

uint64_t sub_2391A2A34(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  uint64_t *v12;

  v5 = a3;
  v7 = result;
  v8 = (_QWORD *)(a2[3] - 32 * a3 + 32 * a2[7] + 16);
  do
  {
    v9 = *((unsigned __int8 *)v8 - 8);
    if (v9 > 5)
      sub_2391AE50C(v7, 15);
    v10 = 1 << v9;
    if ((v10 & 0x31) == 0)
    {
      if ((v10 & 6) != 0)
      {
        *(_BYTE *)(a4 + **(_QWORD **)(*(_QWORD *)(a2[1] + 24) + 24 * *v8 + 16)) = 0;
      }
      else
      {
        v11 = a2[1];
        *(_BYTE *)(a4 + **(_QWORD **)(*(_QWORD *)(v11 + 24) + 24 * *v8 + 16)) = 0;
        v12 = (uint64_t *)(*(_QWORD *)(v11 + 24) + 24 * *v8);
        result = sub_23919A10C(a4 + v12[1], *(unsigned int **)(v12[2] + 8), 10, *v12);
      }
    }
    v8 += 4;
    --v5;
  }
  while (v5);
  return result;
}

void sub_2391A2B44(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned __int8 **v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1 + 200;
  do
  {
    v5 = (_QWORD *)a2[1];
    if (!v5)
      return;
    v6 = 0;
    v7 = (_QWORD *)a2[1];
    do
    {
      v8 = *a2;
      v9 = (unsigned __int8 **)(v7[2] + 16);
      do
      {
        v10 = *v9;
        v11 = *v9;
        v12 = *v11;
        v9 = (unsigned __int8 **)(v11 + 16);
      }
      while (v12 == 128);
      if (!v8)
        goto LABEL_14;
      while (v10 != *(unsigned __int8 **)v8)
      {
LABEL_10:
        v8 = *(_QWORD *)(v8 + 16);
        if (!v8)
          goto LABEL_14;
      }
      v22 = 0;
      v13 = sub_2391A35A4(a1, v7[2], *(unsigned __int8 **)(v8 + 8), &v22);
      if (!v13)
      {
        sub_2391AE48C(a1, 39);
        goto LABEL_10;
      }
      v14 = (uint64_t *)v13;
      v15 = *(_QWORD *)(a1 + 864);
      v16 = *(_BYTE *)(a1 + 873);
      *(_QWORD *)(a1 + 864) = *v7;
      *(_BYTE *)(a1 + 873) = *((_BYTE *)v7 + 8);
      v17 = *(_QWORD *)(v7[2] + 8);
      sub_23919A0C4(*(unsigned int *)(v17 + 48), (_BYTE *)v7[3], *(_DWORD *)(v13 + 16));
      v18 = *(_QWORD *)(a1 + 712);
      if (v18 >= 0x40)
        sub_2391AE50C(a1, 15);
      v19 = v7[3] + *(_QWORD *)(v17 + 40);
      *(_QWORD *)(v4 + 8 * v18) = v14;
      *(_QWORD *)(a1 + 712) = v18 + 1;
      sub_2391A2E7C(a1, *v14, v19, 0);
      --*(_QWORD *)(a1 + 712);
      *(_QWORD *)(a1 + 864) = v15;
      *(_BYTE *)(a1 + 873) = v16;
      *v7 = 0;
LABEL_14:
      if (*v7)
      {
        v20 = (_QWORD *)v7[4];
        v5 = v7;
      }
      else
      {
        v21 = v7[4];
        if (v7 == (_QWORD *)a2[1])
        {
          a2[1] = v21;
          sub_2391A4BBC(a1, v7, 40);
          v20 = (_QWORD *)a2[1];
          v6 = 1;
          v5 = v20;
        }
        else
        {
          v5[4] = v21;
          sub_2391A4BBC(a1, v7, 40);
          v20 = (_QWORD *)v5[4];
          v6 = 1;
        }
      }
      v7 = v20;
    }
    while (v20);
  }
  while (v6);
}

uint64_t sub_2391A2D10(uint64_t a1, unsigned __int8 **a2)
{
  unsigned int v3;
  char v4;
  char v5;

  if (!a2[2])
    sub_2391AE48C(a1, 40);
  v3 = **a2;
  v4 = *((_BYTE *)a2 + 8);
  if (v4)
  {
    v5 = v4 - 1;
  }
  else
  {
    ++*a2;
    v5 = 7;
  }
  *((_BYTE *)a2 + 8) = v5;
  --a2[2];
  return (v3 >> v4) & 1;
}

unsigned __int8 **sub_2391A2D7C(unsigned __int8 **result)
{
  int v1;
  unsigned __int8 *v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  unsigned __int8 *v8;
  int v9;

  v1 = *((unsigned __int8 *)result + 8);
  if (v1 == 7)
  {
    v2 = *result + 1;
    LOBYTE(v3) = **result;
    *result = v2;
  }
  else
  {
    v4 = **result << (7 - v1);
    v2 = *result + 1;
    *result = v2;
    v3 = (*v2 >> (v1 + 1)) | v4;
  }
  switch((char)v3)
  {
    case -63:
      v5 = 0x4000;
      goto LABEL_9;
    case -62:
      v5 = 0x8000;
      goto LABEL_9;
    case -61:
      v5 = 49152;
      goto LABEL_9;
    case -60:
      v5 = 0x10000;
LABEL_9:
      result[2] = (unsigned __int8 *)v5;
      break;
    default:
      if ((v3 & 0xC0) == 0x80)
      {
        v6 = (v3 & 0x7F) << 8;
        result[2] = (unsigned __int8 *)v6;
        if (v1 == 7)
        {
          LOBYTE(v7) = *v2;
          *result = v2 + 1;
        }
        else
        {
          v9 = *v2 << (7 - v1);
          *result = v2 + 1;
          v7 = (v2[1] >> (v1 + 1)) | v9;
        }
        v8 = (unsigned __int8 *)(v7 | v6);
      }
      else
      {
        v8 = (unsigned __int8 *)(v3 & 0x7F);
      }
      result[2] = v8;
      *((_BYTE *)result + 9) = 0;
      break;
  }
  return result;
}

uint64_t sub_2391A2E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  char v15;

  if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
  {
    v8 = *(unsigned __int8 *)(a1 + 873);
    if (v8 != 7)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v8;
      *(_BYTE *)(a1 + 873) = 7;
    }
  }
  v9 = sub_23919AFC0(a1);
  if (v9 < 0xC1)
  {
    if ((v9 & 0xC0) == 0x80)
    {
      v13 = *(_QWORD *)(a1 + 864) + (sub_23919AFC0(a1) & 0xFFFF80FF | ((v9 & 0x7F) << 8));
    }
    else
    {
      if ((v9 & 0x80) != 0)
        return sub_2391AE48C(a1, 26);
      v13 = *(_QWORD *)(a1 + 864) + (v9 & 0x7F);
    }
    v15 = *(_BYTE *)(a1 + 873);
    if (v13 > *(_QWORD *)(a1 + 856))
      sub_2391AE48C(a1, 43);
    result = sub_23919E0EC(a1, a2, a3, a4);
    if ((uint64_t)(v13 - *(_QWORD *)(a1 + 864)) >= 2)
      result = sub_2391AE48C(a1, 26);
    *(_QWORD *)(a1 + 864) = v13;
    *(_BYTE *)(a1 + 873) = v15;
  }
  else
  {
    --*(_QWORD *)(a1 + 864);
    v10 = *(unsigned __int8 *)(a1 + 873);
    if (v10 == 7)
    {
      v11 = sub_23919B70C(a1);
      if (*(_QWORD *)(a1 + 864) + v11 > *(_QWORD *)(a1 + 856))
        sub_2391AE48C(a1, 43);
      sub_23919E0EC(a1, a2, a3, a4);
      if (*(unsigned __int8 *)(a1 + 873) <= 6u)
      {
        ++*(_QWORD *)(a1 + 864);
        *(_BYTE *)(a1 + 873) = 7;
      }
      return sub_23919B37C((_QWORD *)a1, v11);
    }
    else
    {
      v14 = sub_23919C0B4(a1);
      if (*(_QWORD *)(a1 + 864) + v14 > *(_QWORD *)(a1 + 856))
        sub_2391AE48C(a1, 43);
      sub_23919E0EC(a1, a2, a3, a4);
      if (*(unsigned __int8 *)(a1 + 873) < v10)
        ++*(_QWORD *)(a1 + 864);
      *(_BYTE *)(a1 + 873) = v10;
      return sub_23919B9DC(a1, v14);
    }
  }
  return result;
}

uint64_t sub_2391A30C8(uint64_t a1)
{
  int v2;
  char v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t result;
  uint64_t v7;

  while (1)
  {
    if ((*(_BYTE *)(a1 + 824) & 0x40) != 0)
    {
      v2 = *(unsigned __int8 *)(a1 + 873);
      if (v2 != 7)
      {
        *(_BYTE *)(*(_QWORD *)(a1 + 864))++ &= 510 << v2;
        *(_BYTE *)(a1 + 873) = 7;
      }
    }
    v3 = sub_23919AFC0(a1);
    v4 = (v3 + 63);
    if (v4 >= 4)
      break;
    v5 = (v4 << 14) + 0x4000;
LABEL_8:
    result = sub_23919B190(a1, v5);
    if (!(v5 >> 14))
      return result;
  }
  if ((v3 & 0xC0) == 0x80)
  {
    v5 = sub_23919AFC0(a1) & 0xFFFF80FF | ((v3 & 0x7F) << 8);
    goto LABEL_8;
  }
  if (v3 < 0)
  {
    sub_2391AE48C(a1, 26);
    v7 = 0;
  }
  else
  {
    v7 = v3 & 0x7F;
  }
  return sub_23919B190(a1, v7);
}

uint64_t sub_2391A31C4(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = v5 + a2;
  if (v5 < v5 + a2)
  {
    v7 = result;
    do
    {
      v8 = *(_QWORD *)(a3 + 32);
      v9 = *(_QWORD *)(v8 + 8);
      if (*(_DWORD *)v9 == 181)
      {
        v11 = **(_QWORD ***)a3;
        if (!v11)
          goto LABEL_14;
        v12 = -1;
        while (v5 != ++v12)
        {
          v11 = (_QWORD *)*v11;
          if (!v11)
            goto LABEL_14;
        }
        v10 = (char *)v11 + *(_QWORD *)(v9 + 40);
        if (!v10)
          goto LABEL_14;
      }
      else
      {
        if (*(_DWORD *)v9 != 182)
          sub_2391AE50C(v7, 15);
        v10 = (char *)(*(_QWORD *)a3 + *(_QWORD *)(v9 + 40) + *(_QWORD *)(*(_QWORD *)(v9 + 24) + 8) * v5);
        if (!v10)
          goto LABEL_14;
      }
      result = sub_23919CA58(v7, *(_QWORD *)(v8 + 16), v10);
      v5 = *(_QWORD *)(a3 + 24);
LABEL_14:
      *(_QWORD *)(a3 + 24) = ++v5;
    }
    while (v5 < v6);
  }
  *(_QWORD *)(a3 + 8) -= a2;
  return result;
}

void sub_2391A32C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t (*v14)(_QWORD, _QWORD);
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  char *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t (*v29)(_QWORD, _QWORD);
  _QWORD *v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = v5 + a2;
  v7 = *(void ***)(a3 + 40);
  if (v7)
  {
    v33 = 0;
    v32 = *v7;
    if (v5 < v6)
    {
      do
      {
        v8 = *(_QWORD *)(a3 + 32);
        v9 = *(_QWORD *)(v8 + 8);
        if (*(_DWORD *)v9 == 181)
        {
          v12 = *(_QWORD **)(a1 + 944);
          if (v12 && (v13 = (_QWORD *)*v12) != 0 && (v14 = (uint64_t (*)(_QWORD, _QWORD))v13[1]) != 0)
          {
            v15 = (_QWORD *)v14(*v13, *(_QWORD *)(v9 + 32));
          }
          else
          {
            v15 = malloc_type_calloc(1uLL, *(_QWORD *)(v9 + 32), 0x45103692uLL);
            bzero(v15, *(_QWORD *)(v9 + 32));
          }
          *v15 = 0;
          v16 = *(_QWORD **)a3;
          if (**(_QWORD **)a3)
          {
            *(_QWORD *)v16[1] = v15;
            ++*((_DWORD *)v16 + 4);
          }
          else
          {
            *v16 = v15;
            *((_DWORD *)v16 + 4) = 1;
          }
          v16[1] = v15;
          v11 = (char *)v15 + *(_QWORD *)(v9 + 40);
          *((_DWORD *)v16 + 5) = 8;
          v8 = *(_QWORD *)(a3 + 32);
        }
        else
        {
          if (*(_DWORD *)v9 != 182)
            goto LABEL_39;
          v10 = *(_DWORD **)a3;
          *v10 = **(_DWORD **)a3 + 1;
          v11 = (char *)v10 + *(_QWORD *)(v9 + 40) + *(_QWORD *)(*(_QWORD *)(v9 + 24) + 8) * v5;
        }
        sub_23919E0EC(a1, *(_QWORD *)(v8 + 16), v11, &v32);
        while (1)
        {
          v17 = v32;
          v18 = *(_QWORD *)(a3 + 40);
          if (v32 == *(void **)v18)
            break;
          v32 = (void *)*((_QWORD *)v32 + 2);
          sub_2391A4BBC(a1, v17, 24);
        }
        v5 = *(_QWORD *)(a3 + 24) + 1;
        *(_QWORD *)(a3 + 24) = v5;
      }
      while (v5 < v6);
      if (v33)
      {
        v21 = *(_QWORD *)(v18 + 8);
        v19 = (_QWORD *)(v18 + 8);
        v20 = v21;
        if (v21)
        {
          do
          {
            v22 = v20;
            v20 = *(_QWORD *)(v20 + 32);
          }
          while (v20);
          v19 = (_QWORD *)(v22 + 32);
        }
        *v19 = v33;
      }
    }
  }
  else
  {
    for (; v5 < v6; *(_QWORD *)(a3 + 24) = v5)
    {
      v23 = *(_QWORD *)(a3 + 32);
      v24 = *(_QWORD *)(v23 + 8);
      if (*(_DWORD *)v24 == 181)
      {
        v27 = *(_QWORD **)(a1 + 944);
        if (v27 && (v28 = (_QWORD *)*v27) != 0 && (v29 = (uint64_t (*)(_QWORD, _QWORD))v28[1]) != 0)
        {
          v30 = (_QWORD *)v29(*v28, *(_QWORD *)(v24 + 32));
        }
        else
        {
          v30 = malloc_type_calloc(1uLL, *(_QWORD *)(v24 + 32), 0xF0DEBC9DuLL);
          bzero(v30, *(_QWORD *)(v24 + 32));
        }
        *v30 = 0;
        v31 = *(_QWORD **)a3;
        if (**(_QWORD **)a3)
        {
          *(_QWORD *)v31[1] = v30;
          ++*((_DWORD *)v31 + 4);
        }
        else
        {
          *v31 = v30;
          *((_DWORD *)v31 + 4) = 1;
        }
        v31[1] = v30;
        v26 = (char *)v30 + *(_QWORD *)(v24 + 40);
        *((_DWORD *)v31 + 5) = 8;
        v23 = *(_QWORD *)(a3 + 32);
      }
      else
      {
        if (*(_DWORD *)v24 != 182)
LABEL_39:
          sub_2391AE50C(a1, 15);
        v25 = *(_DWORD **)a3;
        *v25 = **(_DWORD **)a3 + 1;
        v26 = (char *)v25 + *(_QWORD *)(v24 + 40) + *(_QWORD *)(*(_QWORD *)(v24 + 24) + 8) * v5;
      }
      sub_23919E0EC(a1, *(_QWORD *)(v23 + 16), v26, 0);
      v5 = *(_QWORD *)(a3 + 24) + 1;
    }
  }
}

uint64_t sub_2391A35A4(uint64_t a1, uint64_t a2, unsigned __int8 *a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 **i;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  const void *v15;
  size_t v16;
  const char *v17;
  size_t v18;
  void *v19;
  uint64_t j;
  int v21;
  size_t v22;
  const char *v23;
  size_t v24;
  unint64_t v25;
  _BYTE *v26;
  unint64_t v27;
  _BYTE *v28;
  unsigned int v29;
  char v30;
  char v31;
  unsigned int v32;
  char v33;
  int v34;
  _QWORD *v35;
  int v36;
  const void **v37;
  int v38;
  uint64_t **v39;
  size_t v40;
  size_t v41;
  size_t v42;
  size_t v43;
  size_t v44;
  size_t v45;
  size_t v46;
  const void *v47;
  size_t v48;
  void *__s2;

  v4 = a4;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = v8;
  for (i = (unsigned __int8 **)(a2 + 16); ; i = (unsigned __int8 **)(v11 + 16))
  {
    v11 = (uint64_t)*i;
    v12 = **i;
    if (v12 != 96 && v12 != 160 && v12 != 128)
      break;
  }
  switch(v12 & 0x1F)
  {
    case 1:
      if (!v8)
        goto LABEL_80;
      while (*(_QWORD *)(v7 + 8) != *a3)
      {
        v7 += 24;
        if (!--v9)
          goto LABEL_80;
      }
      goto LABEL_91;
    case 2:
      v13 = *(_QWORD *)(*(_QWORD *)(v11 + 8) + 8);
      switch(v13)
      {
        case 4:
          goto LABEL_85;
        case 2:
          v14 = *(__int16 *)a3;
          if (!v8)
            goto LABEL_80;
          break;
        case 1:
          v14 = (char)*a3;
          if (!v8)
            goto LABEL_80;
          break;
        default:
LABEL_85:
          v14 = *(_DWORD *)a3;
          if (!v8)
            goto LABEL_80;
          break;
      }
      while (**(_DWORD **)(v7 + 8) != v14)
      {
        v7 += 24;
        if (!--v9)
          goto LABEL_80;
      }
      goto LABEL_91;
    case 3:
      if (!v8)
        goto LABEL_80;
      v15 = (const void *)*((_QWORD *)a3 + 1);
      v16 = *(int *)a3;
      while (2)
      {
        v17 = *(const char **)(v7 + 8);
        v18 = strlen(v17);
        if (v18 == 2048)
          goto LABEL_92;
        if (v18 != v16)
          goto LABEL_24;
        if ((_DWORD)v16)
        {
          v19 = sub_2391A4B20(a1, v16);
          memcpy(v19, v17, v16);
          for (j = 0; j != v16; ++j)
            *((_BYTE *)v19 + j) -= 48;
          v21 = memcmp(v19, v15, v16);
          sub_2391A4BBC(a1, v19, v16);
          if (v21)
          {
LABEL_24:
            v7 += 24;
            if (!--v9)
              goto LABEL_80;
            continue;
          }
        }
        goto LABEL_91;
      }
    case 4:
      if (!v8)
        goto LABEL_80;
      __s2 = (void *)*((_QWORD *)a3 + 1);
      v22 = *(int *)a3;
      while (2)
      {
        v23 = *(const char **)(v7 + 8);
        v24 = strlen(v23) + 1;
        if (v24 >> 1 == 2048)
          goto LABEL_92;
        if (v24 >> 1 != v22)
          goto LABEL_43;
        if (v24 >= 2)
        {
          v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
          if ((v24 & 0xFFFFFFFFFFFFFFFELL) != 0)
          {
            v26 = sub_2391A4B20(a1, v22);
            v27 = 0;
            v28 = v26;
            do
            {
              v29 = v23[v27];
              if (v29 >= 0x41)
                v30 = 9;
              else
                v30 = 0;
              v31 = v30 + v29;
              *v28 = 16 * v31;
              v32 = v23[v27 + 1];
              if (v32 >= 0x41)
                v33 = -55;
              else
                v33 = -48;
              *v28++ = (v33 + v32) | (16 * v31);
              v27 += 2;
            }
            while (v27 < v25);
          }
          else
          {
            v26 = 0;
          }
          v34 = memcmp(v26, __s2, v22);
          sub_2391A4BBC(a1, v26, v22);
          v4 = a4;
          if (v34)
          {
LABEL_43:
            v7 += 24;
            if (!--v9)
              goto LABEL_80;
            continue;
          }
        }
        goto LABEL_91;
      }
    case 5:
      goto LABEL_83;
    case 6:
      if (!v8)
        goto LABEL_80;
      while (1)
      {
        v35 = (_QWORD *)(*(uint64_t (**)(uint64_t))(v7 + 8))(a1);
        v36 = sub_2391A3AE0(v35, (uint64_t ***)a3);
        sub_2391A3B60(a1, (unsigned __int8 *)v11, v35);
        if (v36)
          goto LABEL_91;
        v7 += 24;
        if (!--v9)
          goto LABEL_80;
      }
    case 0xA:
      if (!v8)
        goto LABEL_80;
      while (*(_QWORD *)(v7 + 8) != *a3)
      {
        v7 += 24;
        if (!--v9)
          goto LABEL_80;
      }
      goto LABEL_91;
    case 0x12:
      v39 = *(uint64_t ***)a3;
      v40 = strlen(*(const char **)a3);
      if (!v40)
        goto LABEL_95;
      v41 = v40 - 1;
      if (v40 == 2049)
        goto LABEL_92;
      goto LABEL_74;
    case 0x13:
      v39 = *(uint64_t ***)a3;
      v42 = strlen(*(const char **)a3);
      if (!v42)
        goto LABEL_95;
      v41 = v42 - 1;
      if (v42 == 2049)
        goto LABEL_92;
      goto LABEL_74;
    case 0x16:
      v39 = *(uint64_t ***)a3;
      v43 = strlen(*(const char **)a3);
      if (!v43)
        goto LABEL_95;
      v41 = v43 - 1;
      if (v43 == 2049)
        goto LABEL_92;
      goto LABEL_74;
    case 0x17:
      v39 = *(uint64_t ***)a3;
      v44 = strlen(*(const char **)a3);
      if (!v44)
        goto LABEL_95;
      v41 = v44 - 1;
      if (v44 == 2049)
        goto LABEL_92;
      goto LABEL_74;
    case 0x18:
      v39 = *(uint64_t ***)a3;
      v45 = strlen(*(const char **)a3);
      if (!v45)
        goto LABEL_95;
      v41 = v45 - 1;
      if (v45 == 2049)
        goto LABEL_92;
      goto LABEL_74;
    case 0x1A:
      v39 = *(uint64_t ***)a3;
      v46 = strlen(*(const char **)a3);
      if (!v46)
LABEL_95:
        sub_2391AE50C(a1, 24);
      v41 = v46 - 1;
      if (v46 == 2049)
        goto LABEL_92;
LABEL_74:
      v47 = (char *)v39 + 1;
      if (!v8)
        goto LABEL_80;
      while (1)
      {
        v48 = strlen(*(const char **)(v7 + 8));
        if (v48 == 2048)
LABEL_92:
          sub_2391AE50C(a1, 42);
        if (v48 == v41 && (!v41 || !memcmp(*(const void **)(v7 + 8), v47, v41)))
          break;
        v7 += 24;
        if (!--v9)
          goto LABEL_80;
      }
LABEL_83:
      *v4 = v8 - v9;
      if (!v9)
        return 0;
      return v7;
    default:
      if (!v8)
        goto LABEL_80;
      break;
  }
  do
  {
    v37 = (const void **)(*(uint64_t (**)(uint64_t))(v7 + 8))(a1);
    v38 = sub_2391A3E34(a1, (_QWORD *)v11, v37, a3);
    sub_2391A3B60(a1, (unsigned __int8 *)v11, v37);
    if (v38)
    {
LABEL_91:
      *v4 = *(_QWORD *)(a2 + 32) - v9;
      return v7;
    }
    v7 += 24;
    --v9;
  }
  while (v9);
LABEL_80:
  *v4 = *(_QWORD *)(a2 + 32);
  return 0;
}

uint64_t sub_2391A3AE0(_QWORD *a1, uint64_t ***a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t **v8;

  v2 = a1[1];
  v3 = *((int *)a2 + 4);
  if (v2 == v3)
  {
    if (!(_DWORD)v3)
      return 1;
    v4 = 0;
    v5 = 0;
    if (v2 <= 1)
      v2 = 1;
    for (i = 1; ; ++i)
    {
      v7 = i;
      v8 = *a2;
      if (*a2)
      {
        while (--v7)
        {
          v8 = (uint64_t **)*v8;
          if (!v8)
            goto LABEL_11;
        }
        v5 = *((int *)v8 + 2);
      }
LABEL_11:
      if (*(_QWORD *)(*a1 + 8 * v4) != v5)
        break;
      if (++v4 == v2)
        return 1;
    }
  }
  return 0;
}

void sub_2391A3B60(uint64_t a1, unsigned __int8 *a2, _QWORD *a3)
{
  uint64_t v5;
  unsigned int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unsigned __int8 *v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = a1;
  while (1)
  {
    v6 = *a2;
    if (v6 <= 0x6F)
      break;
    if (v6 != 128 && v6 != 160)
    {
      if (v6 != 112)
        goto LABEL_55;
LABEL_35:
      if (a3[1])
      {
        v18 = 0;
        do
        {
          sub_2391A3B60(v5, *((_QWORD *)a2 + 2), *(_QWORD *)(*a3 + 8 * v18++));
          v19 = a3[1];
        }
        while (v18 < v19);
        v20 = 8 * v19;
      }
      else
      {
        v20 = 0;
      }
      v21 = (_QWORD *)*a3;
LABEL_52:
      sub_2391A4BBC(v5, v21, v20);
LABEL_53:
      a1 = v5;
      v7 = a3;
      v8 = 16;
      goto LABEL_54;
    }
LABEL_8:
    a2 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
  }
  if (*a2 <= 0x55u)
  {
    if (*a2 > 0x2Fu)
    {
      switch(*a2)
      {
        case '@':
          v9 = *((_QWORD *)a2 + 3);
          v10 = (_QWORD *)*a3;
          v11 = 24 * a3[1];
LABEL_33:
          sub_2391A3B60(a1, *(_QWORD *)(v9 + v11), v10);
          goto LABEL_53;
        case 'A':
          goto LABEL_55;
        case 'B':
LABEL_19:
          v7 = a3;
          v8 = 4;
          goto LABEL_54;
        case 'C':
        case 'D':
          goto LABEL_11;
        default:
          if (v6 - 82 < 2)
            goto LABEL_11;
          if (v6 != 48)
            goto LABEL_55;
          goto LABEL_35;
      }
    }
    switch(*a2)
    {
      case 1u:
        v7 = a3;
        v8 = 1;
        goto LABEL_54;
      case 2u:
        goto LABEL_19;
      case 3u:
      case 4u:
      case 0x12u:
      case 0x13u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x1Au:
        goto LABEL_11;
      case 5u:
        return;
      case 6u:
        goto LABEL_51;
      case 0xAu:
        v7 = a3;
        v8 = 8;
        goto LABEL_54;
      case 0x10u:
        v12 = (_QWORD *)*a3;
        v13 = *((_QWORD *)a2 + 6);
        if (v13)
        {
          v14 = 0;
          v15 = (_QWORD *)*((_QWORD *)a2 + 2);
          do
          {
            if (*v12)
            {
              sub_2391A3B60(v5, *v15, *v12);
              v13 = *((_QWORD *)a2 + 6);
            }
            v15 += 4;
            ++v12;
            ++v14;
          }
          while (v14 < v13);
          v17 = (unint64_t *)(a2 + 56);
          v16 = *((_QWORD *)a2 + 7);
          if (!v16)
          {
LABEL_46:
            v25 = *((_QWORD *)a2 + 8);
            if (v25)
            {
              v26 = 0;
              v27 = (_QWORD *)*((_QWORD *)a2 + 4);
              do
              {
                v28 = v12[v26];
                if (v28)
                {
                  sub_2391A3B60(v5, *v27, v28);
                  v25 = *((_QWORD *)a2 + 8);
                }
                v27 += 4;
                ++v26;
              }
              while (v26 < v25);
            }
LABEL_51:
            v21 = (_QWORD *)*a3;
            v20 = 8 * a3[1];
            goto LABEL_52;
          }
        }
        else
        {
          v17 = (unint64_t *)(a2 + 56);
          v16 = *((_QWORD *)a2 + 7);
          if (!v16)
            goto LABEL_51;
        }
        v22 = 0;
        v23 = (unsigned __int8 *)(*((_QWORD *)a2 + 3) + 8);
        do
        {
          if (*v12)
          {
            sub_2391A3B60(v5, *((_QWORD *)v23 - 1), *v12);
            v16 = *v17;
          }
          v24 = *v23;
          v23 += 32;
          v12 += v24 != 4;
          ++v22;
        }
        while (v22 < v16);
        goto LABEL_46;
      case 0x20u:
        v9 = *((_QWORD *)a2 + 3);
        v10 = (_QWORD *)*a3;
        v11 = 32 * a3[1];
        goto LABEL_33;
      default:
        goto LABEL_55;
    }
  }
  if (v6 == 96)
    goto LABEL_8;
  if (v6 != 86 && v6 != 90)
LABEL_55:
    sub_2391AE50C(a1, 16);
LABEL_11:
  if (!*((_BYTE *)a3 + 16))
    sub_2391A4BBC(a1, (void *)*a3, a3[1]);
  a1 = v5;
  v7 = a3;
  v8 = 24;
LABEL_54:
  sub_2391A4BBC(a1, v7, v8);
}

uint64_t sub_2391A3E34(uint64_t a1, _QWORD *a2, const void **a3, unsigned __int8 *a4)
{
  _QWORD *v4;
  const void **v5;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  const void *v11;
  const void *v12;
  uint64_t **v13;
  size_t v14;
  size_t v15;
  int v16;
  size_t v17;
  uint64_t v18;
  uint64_t result;
  size_t v20;
  size_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int *v28;
  const void *v29;
  uint64_t v30;
  uint64_t k;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  size_t v36;
  size_t v37;
  int v38;
  uint64_t v39;
  int v40;
  _QWORD *j;
  uint64_t v42;
  _QWORD *i;
  uint64_t *v44;

  v4 = a4;
  v5 = a3;
  v7 = a1;
  v8 = *(unsigned __int8 *)a2;
  if (v8 <= 0x3F)
  {
    switch(*(_BYTE *)a2)
    {
      case 1:
        v9 = *a4;
        v10 = *(unsigned __int8 *)a3;
        return v10 == v9;
      case 2:
        goto LABEL_32;
      case 3:
      case 4:
        goto LABEL_15;
      case 5:
        return 1;
      case 6:
        result = sub_2391A3AE0(a3, (uint64_t ***)a4);
        if (!(_DWORD)result)
          return result;
        return 1;
      case 7:
      case 8:
      case 9:
      case 0xB:
      case 0xC:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
      case 0x14:
      case 0x15:
      case 0x19:
      case 0x1B:
      case 0x1C:
      case 0x1D:
      case 0x1E:
      case 0x1F:
        goto LABEL_109;
      case 0xA:
        return *a3 == (const void *)*a4;
      case 0x10:
        v44 = (uint64_t *)*a3;
        return (!a2[6] || sub_2391A43FC(a1, a2, 1, &v44, (uint64_t)a4))
            && (!a2[7] || sub_2391A43FC(v7, a2, 2, &v44, (uint64_t)v4))
            && (!a2[8] || sub_2391A43FC(v7, a2, 3, &v44, (uint64_t)v4));
      case 0x12:
        goto LABEL_7;
      case 0x13:
        goto LABEL_23;
      case 0x16:
        goto LABEL_26;
      case 0x17:
        v11 = *a3;
        v12 = a3[1];
        v13 = *(uint64_t ***)a4;
        v36 = strlen(*(const char **)a4);
        if (v36)
        {
          v15 = v36 - 1;
          if (v36 == 2049)
          {
            v16 = 42;
            goto LABEL_114;
          }
LABEL_73:
          v38 = memcmp(v11, (char *)v13 + 1, v15);
          result = 0;
          if (v38 || v12 != (const void *)v15)
            return result;
          return 1;
        }
        v16 = 24;
        break;
      case 0x18:
        v11 = *a3;
        v12 = a3[1];
        v13 = *(uint64_t ***)a4;
        v37 = strlen(*(const char **)a4);
        if (v37)
        {
          v15 = v37 - 1;
          if (v37 != 2049)
            goto LABEL_73;
          v16 = 42;
        }
        else
        {
          v16 = 24;
        }
        goto LABEL_114;
      case 0x1A:
        goto LABEL_29;
      case 0x20:
        v39 = a2[1];
        switch(*(_DWORD *)(v39 + 48))
        {
          case 1:
            v40 = *a4;
            break;
          case 2:
            v40 = *(__int16 *)a4;
            break;
          default:
            v40 = *(_DWORD *)a4;
            break;
        }
        v42 = a2[4];
        if (!v42)
          return 0;
        for (i = (_QWORD *)(a2[3] + 16); *((_BYTE *)i - 8) == 5 || *i != v40; i += 4)
        {
          result = 0;
          if (!--v42)
            return result;
        }
        if (a3[1] != (const void *)v40)
          return 0;
        a4 += *(_QWORD *)(v39 + 40);
        v18 = *(i - 2);
        goto LABEL_101;
      default:
        if (v8 == 48)
          goto LABEL_40;
        goto LABEL_109;
    }
    goto LABEL_114;
  }
  if (*(unsigned __int8 *)a2 <= 0x5Fu)
  {
    switch(*(_BYTE *)a2)
    {
      case '@':
        v24 = a2[1];
        v25 = a2[4];
        switch(*(_DWORD *)(v24 + 48))
        {
          case 1:
            v26 = *a4;
            break;
          case 2:
            v26 = *(__int16 *)a4;
            break;
          default:
            v26 = *(_DWORD *)a4;
            break;
        }
        if (!v25)
          return 0;
        for (j = (_QWORD *)(a2[3] + 16); *j != v26; j += 3)
        {
          result = 0;
          if (!--v25)
            return result;
        }
        if (a3[1] != (const void *)v26)
          return 0;
        a4 += *(_QWORD *)(v24 + 40);
        v18 = *(j - 2);
LABEL_101:
        a3 = (const void **)*a3;
        a1 = v7;
        goto LABEL_21;
      case 'A':
        goto LABEL_109;
      case 'B':
LABEL_32:
        v23 = *(_QWORD *)(a2[1] + 8);
        switch(v23)
        {
          case 4:
            goto LABEL_38;
          case 2:
            v9 = *(__int16 *)a4;
            break;
          case 1:
            v9 = (char)*a4;
            break;
          default:
LABEL_38:
            v9 = *(_DWORD *)a4;
            break;
        }
        v10 = *(_DWORD *)a3;
        return v10 == v9;
      case 'C':
      case 'D':
LABEL_15:
        v17 = (size_t)a3[1];
        return v17 == *(_DWORD *)a4 && !memcmp(*v5, *((const void **)a4 + 1), v17);
      default:
        switch(*(_BYTE *)a2)
        {
          case 'R':
LABEL_7:
            v11 = *a3;
            v12 = a3[1];
            v13 = *(uint64_t ***)a4;
            v14 = strlen(*(const char **)a4);
            if (v14)
            {
              v15 = v14 - 1;
              if (v14 == 2049)
              {
                v16 = 42;
                goto LABEL_114;
              }
              goto LABEL_73;
            }
            v16 = 24;
            goto LABEL_114;
          case 'S':
LABEL_23:
            v11 = *a3;
            v12 = a3[1];
            v13 = *(uint64_t ***)a4;
            v20 = strlen(*(const char **)a4);
            if (v20)
            {
              v15 = v20 - 1;
              if (v20 == 2049)
              {
                v16 = 42;
                goto LABEL_114;
              }
              goto LABEL_73;
            }
            v16 = 24;
            goto LABEL_114;
          case 'V':
LABEL_26:
            v11 = *a3;
            v12 = a3[1];
            v13 = *(uint64_t ***)a4;
            v21 = strlen(*(const char **)a4);
            if (v21)
            {
              v15 = v21 - 1;
              if (v21 == 2049)
              {
                v16 = 42;
                goto LABEL_114;
              }
              goto LABEL_73;
            }
            v16 = 24;
            goto LABEL_114;
          case 'Z':
LABEL_29:
            v11 = *a3;
            v12 = a3[1];
            v13 = *(uint64_t ***)a4;
            v22 = strlen(*(const char **)a4);
            if (v22)
            {
              v15 = v22 - 1;
              if (v22 == 2049)
              {
                v16 = 42;
                goto LABEL_114;
              }
              goto LABEL_73;
            }
            v16 = 24;
            break;
          default:
            goto LABEL_109;
        }
        break;
    }
LABEL_114:
    sub_2391AE50C(v7, v16);
  }
  if (*(unsigned __int8 *)a2 > 0x7Fu)
  {
    if (v8 != 128 && v8 != 160)
LABEL_109:
      sub_2391AE50C(a1, 16);
    goto LABEL_20;
  }
  if (v8 == 96)
  {
LABEL_20:
    v18 = a2[2];
LABEL_21:
    result = sub_2391A3E34(a1, v18, a3, a4);
    if ((_DWORD)result)
      return 1;
    return result;
  }
  if (v8 != 112)
    goto LABEL_109;
LABEL_40:
  v27 = *(_DWORD *)a2[1];
  v28 = (int *)a4;
  if (v27 != 182)
  {
    if (v27 != 181)
LABEL_104:
      sub_2391AE50C(v7, 15);
    v28 = (int *)(a4 + 16);
  }
  v29 = (const void *)*v28;
  if (a3[1] != v29)
    return 0;
  if (!(_DWORD)v29)
    return 1;
  v30 = 0;
  for (k = 1; ; ++k)
  {
    v32 = a2[1];
    if (*(_DWORD *)v32 == 182)
    {
      v35 = (char *)v4 + *(_QWORD *)(v32 + 40) + *(_QWORD *)(*(_QWORD *)(v32 + 24) + 8) * v30;
    }
    else
    {
      if (*(_DWORD *)v32 != 181)
        goto LABEL_104;
      v33 = (_QWORD *)*v4;
      v34 = k;
      if (*v4)
      {
        while (--v34)
        {
          v33 = (_QWORD *)*v33;
          if (!v33)
            goto LABEL_51;
        }
        v35 = (char *)v33 + *(_QWORD *)(v32 + 40);
      }
      else
      {
LABEL_51:
        v35 = 0;
      }
    }
    result = sub_2391A3E34(v7, a2[2], *((_QWORD *)*v5 + v30), v35);
    if (!(_DWORD)result)
      break;
    if ((const void *)++v30 == v29)
      return 1;
  }
  return result;
}

uint64_t sub_2391A43FC(uint64_t a1, _QWORD *a2, int a3, uint64_t **a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *i;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v5 = a2 + 3;
  v6 = a2 + 7;
  v7 = a2 + 4;
  v8 = a2 + 8;
  if (a3 == 1)
  {
    v7 = a2 + 2;
    v8 = a2 + 6;
  }
  if (a3 != 2)
  {
    v5 = v7;
    v6 = v8;
  }
  v9 = *v6;
  if (!*v6)
    return 1;
  for (i = (_QWORD *)(*v5 + 16); ; i += 4)
  {
    v16 = *((unsigned __int8 *)i - 8);
    if (v16 < 2)
    {
      if (a3 != 2)
      {
        v19 = a5 + *(_QWORD *)(*(_QWORD *)(a2[1] + 24) + 24 * *i + 8);
        v20 = *(i - 2);
        v18 = **a4;
LABEL_18:
        result = sub_2391A3E34(a1, v20, v18, v19);
        if (!(_DWORD)result)
          return result;
        goto LABEL_19;
      }
    }
    else if (v16 != 2 && v16 != 3)
    {
      goto LABEL_19;
    }
    v17 = *(_QWORD *)(a2[1] + 24);
    v18 = **a4;
    if (*(_BYTE *)(a5 + **(_QWORD **)(v17 + 24 * *i + 16)) == 1)
    {
      if (!v18)
        return 0;
      v19 = a5 + *(_QWORD *)(v17 + 24 * *i + 8);
      v20 = *(i - 2);
      goto LABEL_18;
    }
    if (v18)
      break;
LABEL_19:
    ++*a4;
    if (!--v9)
      return 1;
  }
  return 0;
}

uint64_t sub_2391A4548(uint64_t result, uint64_t a2, int *a3)
{
  if ((*(_BYTE *)(a2 + 16) & 0x20) != 0 && *(_QWORD *)(a2 + 24) > *a3
    || (*(_BYTE *)(a2 + 16) & 8) != 0 && *(_QWORD *)(a2 + 32) < *a3)
  {
    return sub_2391AE48C(result, 18);
  }
  return result;
}

uint64_t sub_2391A4580(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (*(_QWORD *)(a2 + 24) > a3 || *(char *)(a2 + 16) < 0 && *(_QWORD *)(a2 + 32) < a3)
    return sub_2391AE48C(result, 19);
  return result;
}

uint64_t sub_2391A45C8(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;

  v5 = result;
  v7 = a3 + 1;
  v6 = a3[1];
  if (v6 < *(_QWORD *)(a2 + 40) || *(char *)(a2 + 32) < 0 && *(_QWORD *)(a2 + 48) < v6)
    result = sub_2391AE48C(result, 19);
  if (*(_QWORD *)(a2 + 24) && *v7)
  {
    v8 = 0;
    v9 = *(unsigned __int8 **)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    while (1)
    {
      if (*(_QWORD *)(a2 + 24))
      {
        v11 = *(unsigned __int8 *)(*a3 + v8);
        if (v11 != *v9)
          break;
      }
      v12 = 0;
LABEL_11:
      if (v12 == v10)
        return sub_2391AE48C(v5, 20);
      if (++v8 == *v7)
        return result;
    }
    v12 = 0;
    while (v10 - 1 != v12)
    {
      v13 = v9[++v12];
      if (v11 == v13)
        goto LABEL_11;
    }
    return sub_2391AE48C(v5, 20);
  }
  return result;
}

uint64_t sub_2391A46C0(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (*(_QWORD *)(a2 + 32) > a3 || *(char *)(a2 + 24) < 0 && *(_QWORD *)(a2 + 40) < a3)
    return sub_2391AE48C(result, 19);
  return result;
}

void sub_2391A470C(uint64_t a1)
{
  sub_2391B7470(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_2391A4730(uint64_t a1)
{
  _QWORD *v2;
  NSObject *v4;
  _DWORD v5[2];
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 8))
  {
    v2 = (_QWORD *)sub_2391B1EF8();
    return sub_2391B2D1C(v2, *(unsigned int *)(*(_QWORD *)(a1 + 8) + 376));
  }
  else
  {
    v4 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v5[0] = 67109120;
      v5[1] = 513;
      _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v5, 8u);
    }
    return 0;
  }
}

void sub_2391A4814(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  NSObject *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v14[2];
  char v15;
  void *__p[4];

  __p[3] = *(void **)MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  if (v1)
  {
    *(_DWORD *)(v1 + 64) = 1;
    *(_WORD *)(v1 + 72) = *(_DWORD *)(v1 + 376);
    v3 = sub_2391B7D4C();
    sub_2391B8198(v3, *(_QWORD *)(a1 + 8) + 80, *(_DWORD *)(*(_QWORD *)(a1 + 8) + 596));
    v4 = *(_QWORD *)(a1 + 8);
    v5 = sub_2391B7D4C();
    v6 = sub_2391B8A50(v5, *(_DWORD *)(v4 + 376));
    v7 = *(_QWORD *)(a1 + 8);
    if (!v6)
      goto LABEL_16;
    v8 = v6;
    if (v7 + 264 == v6 + 392)
    {
      *(_BYTE *)(v7 + 288) = *(_BYTE *)(v6 + 416);
      *(_BYTE *)(v7 + 296) = *(_BYTE *)(v6 + 424);
    }
    else
    {
      sub_239107FF0((_QWORD *)(v7 + 264), *(char **)(v6 + 392), *(char **)(v6 + 400), *(_QWORD *)(v6 + 400) - *(_QWORD *)(v6 + 392));
      *(_BYTE *)(v7 + 288) = *(_BYTE *)(v8 + 416);
      *(_BYTE *)(v7 + 296) = *(_BYTE *)(v8 + 424);
      sub_239107FF0((_QWORD *)(v7 + 304), *(char **)(v8 + 432), *(char **)(v8 + 440), *(_QWORD *)(v8 + 440) - *(_QWORD *)(v8 + 432));
      sub_239107FF0((_QWORD *)(v7 + 328), *(char **)(v8 + 456), *(char **)(v8 + 464), *(_QWORD *)(v8 + 464) - *(_QWORD *)(v8 + 456));
      sub_239107FF0((_QWORD *)(v7 + 352), *(char **)(v8 + 480), *(char **)(v8 + 488), *(_QWORD *)(v8 + 488) - *(_QWORD *)(v8 + 480));
      v7 = *(_QWORD *)(a1 + 8);
    }
    *(_DWORD *)(v7 + 68) = 1;
    if (*(_DWORD *)(v8 + 20) == 1)
    {
      v9 = *(unsigned __int8 *)(v8 + 24);
      v10 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        __p[0] = (void *)0x30204000100;
        _os_log_error_impl(&dword_2390FD000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)__p, 8u);
      }
      if (v9 == 12)
      {
        v11 = *(_QWORD *)(a1 + 8);
        *(_QWORD *)(v11 + 64) = *(_QWORD *)(v8 + 56);
        *(_WORD *)(v11 + 72) = *(_WORD *)(v8 + 64);
        *(_BYTE *)(v11 + 80) = *(_BYTE *)(v8 + 72);
        sub_23919A01C(v11 + 88, v8 + 80);
        if (v11 + 64 != v8 + 56)
        {
          sub_239107FF0((_QWORD *)(v11 + 264), *(char **)(v8 + 256), *(char **)(v8 + 264), *(_QWORD *)(v8 + 264) - *(_QWORD *)(v8 + 256));
          *(_BYTE *)(v11 + 288) = *(_BYTE *)(v8 + 280);
          *(_BYTE *)(v11 + 296) = *(_BYTE *)(v8 + 288);
          sub_239107FF0((_QWORD *)(v11 + 304), *(char **)(v8 + 296), *(char **)(v8 + 304), *(_QWORD *)(v8 + 304) - *(_QWORD *)(v8 + 296));
          sub_239107FF0((_QWORD *)(v11 + 328), *(char **)(v8 + 320), *(char **)(v8 + 328), *(_QWORD *)(v8 + 328) - *(_QWORD *)(v8 + 320));
          sub_239107FF0((_QWORD *)(v11 + 352), *(char **)(v8 + 344), *(char **)(v8 + 352), *(_QWORD *)(v8 + 352) - *(_QWORD *)(v8 + 344));
        }
      }
      sub_2391B74F4(a1, 7, *(_QWORD *)(a1 + 8));
      v12 = sub_2391B5594(*(_QWORD *)(a1 + 8));
      v13 = (uint64_t)v12;
      if (v12)
      {
        *(_BYTE *)(v12[5] + 456) = v9;
        *(_DWORD *)(v12[5] + 4) = 1;
        sub_2391997AC((uint64_t)v12);
        sub_2391015AC(__p, 0xBB8uLL);
        v14[0] = __p;
        v14[1] = 0;
        v15 = 0;
        sub_239199EAC(v13);
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v13 + 32))(v13, v14);
        sub_239199C58(v13);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
      }
    }
    else
    {
LABEL_16:
      sub_2391B74F4(a1, 2, v7);
    }
  }
}

void sub_2391A4AFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void *sub_2391A4B20(uint64_t a1, size_t a2)
{
  _QWORD *v4;
  void *v5;

  v4 = malloc_type_calloc(1uLL, 0x18uLL, 0x10A0040319E9F20uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = 0;
  v4[2] = *(_QWORD *)(a1 + 728);
  v5 = malloc_type_calloc(1uLL, a2, 0x38E200F4uLL);
  bzero(v5, a2);
  *v4 = v5;
  v4[1] = a2;
  if (!v5)
  {
    free(v4);
    sub_2391AE50C(a1, 1);
  }
  *(_QWORD *)(a1 + 728) = v4;
  return v5;
}

void sub_2391A4BBC(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v3 = *(_QWORD **)(a1 + 728);
  if (!v3)
    goto LABEL_10;
  if ((void *)*v3 == a2)
  {
    if (v3[1] == a3)
    {
      v5 = (_QWORD *)(a1 + 728);
      goto LABEL_9;
    }
LABEL_10:
    sub_2391AE50C(a1, 15);
  }
  do
  {
    v4 = v3;
    v3 = (_QWORD *)v3[2];
    if (!v3)
      goto LABEL_10;
  }
  while ((void *)*v3 != a2);
  if (v3[1] != a3)
    goto LABEL_10;
  v5 = v4 + 2;
LABEL_9:
  *v5 = v3[2];
  free(a2);
  free(v3);
}

uint64_t sub_2391A4C70(uint64_t a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 v10;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_11:
    sub_23918C1A0(v8, v6, v7, "asn1PD_SuplNotificationType");
    return v5;
  }
  v10 = 0;
  if (v4)
    v8 = sub_23918DA84(a1, &v10);
  else
    v8 = sub_23918C4D0(a1, 0, 4u, &v10);
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  if (v10 > 4u)
  {
    v5 = 4;
    *(_BYTE *)(a1 + 16) = 4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = 4;
    goto LABEL_11;
  }
  v5 = 0;
  *a2 = v10;
  return v5;
}

uint64_t sub_2391A4D4C(uint64_t a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 v10;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  v10 = 0;
  if ((_DWORD)v5)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
LABEL_11:
    sub_23918C1A0(v8, v6, v7, "asn1PD_EncodingType");
    return v5;
  }
  if (v4)
    v8 = sub_23918DA84(a1, &v10);
  else
    v8 = sub_23918C4D0(a1, 0, 2u, &v10);
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  if (v10 > 2u)
  {
    v5 = 4;
    *(_BYTE *)(a1 + 16) = 4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = 4;
    goto LABEL_11;
  }
  v5 = 0;
  *a2 = v10;
  return v5;
}

uint64_t sub_2391A4E28(uint64_t a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned __int8 v11;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  v11 = 0;
  if ((_DWORD)v5)
  {
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_FormatIndicator");
LABEL_7:
    v7 = *(_DWORD *)(a1 + 8);
    v8 = *(_DWORD *)(a1 + 12);
    v9 = v5;
    goto LABEL_8;
  }
  if (v4)
    v6 = sub_23918DA84(a1, &v11);
  else
    v6 = sub_23918C4D0(a1, 0, 7u, &v11);
  v5 = v6;
  if ((_DWORD)v6)
    goto LABEL_7;
  if (v11 <= 7u)
  {
    v5 = 0;
    *a2 = v11;
    return v5;
  }
  v5 = 4;
  *(_BYTE *)(a1 + 16) = 4;
  v7 = *(_DWORD *)(a1 + 8);
  v8 = *(_DWORD *)(a1 + 12);
  v9 = 4;
LABEL_8:
  sub_23918C1A0(v9, v7, v8, "asn1PD_FormatIndicator");
  return v5;
}

uint64_t sub_2391A4F08(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v7;

  v7 = 0;
  v4 = sub_23918C4D0(a1, 0, 1u, &v7);
  if (v7 >= 2u)
  {
    v5 = 4;
    *(_BYTE *)(a1 + 16) = 4;
    sub_23918C1A0(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SLPMode");
  }
  else
  {
    v5 = v4;
    *a2 = v7;
    if (!(_DWORD)v4)
      return v5;
  }
  sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SLPMode");
  return v5;
}

uint64_t sub_2391A4FA4(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 0x40u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_MAC");
  return v3;
}

uint64_t sub_2391A4FF4(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 0x80u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_KeyIdentity");
  return v3;
}

uint64_t sub_2391A5044(uint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  int v6;

  v6 = 0;
  sub_23918C740(a1, 1, 0x32u, &v6);
  sub_23918C9B4(a1, 8 * v6, a2, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Notification_requestorId");
  return v4;
}

uint64_t sub_2391A50BC(uint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  int v6;

  v6 = 0;
  sub_23918C740(a1, 1, 0x32u, &v6);
  sub_23918C9B4(a1, 8 * v6, a2, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Notification_clientName");
  return v4;
}

uint64_t sub_2391A5134(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_23918C1A0(v8, v6, v7, "asn1PD_Notification");
    return v5;
  }
  v9 = v4;
  *(_DWORD *)a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 4) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 8) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 12) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 16) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  v8 = sub_2391A4C70(a1, (unsigned __int8 *)(a2 + 20));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (*(_DWORD *)a2)
  {
    v8 = sub_2391A4D4C(a1, (unsigned __int8 *)(a2 + 21));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    v8 = sub_2391A5044(a1, (unint64_t *)(a2 + 24));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    v8 = sub_2391A4E28(a1, (unsigned __int8 *)(a2 + 48));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 12))
  {
    v8 = sub_2391A50BC(a1, (unint64_t *)(a2 + 56));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 16))
  {
    v8 = sub_2391A4E28(a1, (unsigned __int8 *)(a2 + 80));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (!v9)
    return 0;
  v8 = sub_23918A68C(a1, a2);
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  return v5;
}

uint64_t sub_2391A53B4(uint64_t a1)
{
  *(_DWORD *)(a1 + 108) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_QWORD *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_WORD *)(a1 + 44) = -1;
  *(_BYTE *)(a1 + 72) = -1;
  *(_BYTE *)(a1 + 104) = -1;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_BYTE *)(a1 + 112) = -1;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  bzero((void *)(a1 + 232), 0x250uLL);
  *(_BYTE *)(a1 + 592) = -1;
  *(_OWORD *)(a1 + 684) = 0u;
  *(_OWORD *)(a1 + 700) = 0u;
  *(_QWORD *)(a1 + 728) = 0;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_DWORD *)(a1 + 752) = 0;
  *(_QWORD *)(a1 + 760) = 0;
  *(_OWORD *)(a1 + 768) = 0u;
  *(_DWORD *)(a1 + 784) = 0;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 665) = 0u;
  *(_QWORD *)(a1 + 808) = 0;
  *(_DWORD *)(a1 + 816) = 0;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 20) = 9;
  *(_BYTE *)(a1 + 224) = 0;
  return a1;
}

uint64_t sub_2391A5490(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_23918C1A0(v8, v6, v7, "asn1PD_SUPLINIT");
    return v5;
  }
  v9 = v4;
  *(_DWORD *)a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 4) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 8) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 12) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 16) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  v8 = sub_2391AC5CC(a1, (unsigned __int8 *)(a2 + 20));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (*(_DWORD *)a2)
  {
    v8 = sub_2391A5134(a1, a2 + 24);
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    v8 = sub_2391B637C(a1, a2 + 112);
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    v8 = sub_2391AC708(a1, a2 + 200);
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  v8 = sub_2391A4F08(a1, (unsigned __int8 *)(a2 + 224));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (*(_DWORD *)(a2 + 12))
  {
    v8 = sub_2391A4FA4(a1, (unint64_t *)(a2 + 232));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 16))
  {
    v8 = sub_2391A4FF4(a1, (unint64_t *)(a2 + 256));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (!v9)
    return 0;
  v8 = sub_239189A8C(a1, a2);
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  return v5;
}

uint64_t sub_2391A5738(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  BOOL v5;
  uint64_t v6;
  unsigned __int8 v7;
  char *v8;
  char *v9;
  _QWORD *v10;

  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  v2 = a1 + 32;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  v3 = sub_23918BED4();
  v4 = atomic_load((unsigned __int8 *)(v3 + 1));
  v5 = v4 == 255;
  v6 = 1;
  if (v5)
    v6 = 2;
  v7 = atomic_load((unsigned __int8 *)(v3 + v6));
  *(_WORD *)(a1 + 40) = -1;
  *(_BYTE *)(a1 + 34) = v7;
  *(_WORD *)(a1 + 35) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_2391B6D50(a1 + 56);
  *(_QWORD *)(a1 + 368) = 0;
  *(_QWORD *)(a1 + 376) = 0;
  *(_QWORD *)(a1 + 384) = 0;
  sub_2391015AC((_QWORD *)(a1 + 392), 4uLL);
  *(_QWORD *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 424) = 0;
  *(_BYTE *)(a1 + 416) = -1;
  *(_DWORD *)(a1 + 20) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_WORD *)(a1 + 40) = 1;
  v8 = (char *)operator new(0x338uLL, MEMORY[0x24BEDB6B8]);
  v9 = v8;
  if (v8)
  {
    *((_DWORD *)v8 + 27) = 0;
    *(_OWORD *)(v8 + 24) = 0u;
    *((_DWORD *)v8 + 10) = 0;
    *((_QWORD *)v8 + 6) = 0;
    *(_OWORD *)(v8 + 56) = 0u;
    *((_QWORD *)v8 + 10) = 0;
    *(_OWORD *)(v8 + 88) = 0u;
    *((_WORD *)v8 + 22) = -1;
    v8[72] = -1;
    v8[104] = -1;
    *((_OWORD *)v8 + 7) = 0u;
    *((_OWORD *)v8 + 8) = 0u;
    v8[112] = -1;
    *((_OWORD *)v8 + 12) = 0u;
    *((_OWORD *)v8 + 13) = 0u;
    *((_OWORD *)v8 + 10) = 0u;
    *((_OWORD *)v8 + 11) = 0u;
    *((_OWORD *)v8 + 9) = 0u;
    bzero(v8 + 232, 0x250uLL);
    v9[592] = -1;
    *(_OWORD *)(v9 + 684) = 0u;
    *(_OWORD *)(v9 + 700) = 0u;
    *((_QWORD *)v9 + 91) = 0;
    *((_OWORD *)v9 + 46) = 0u;
    *((_DWORD *)v9 + 188) = 0;
    *((_QWORD *)v9 + 95) = 0;
    *((_OWORD *)v9 + 48) = 0u;
    *((_DWORD *)v9 + 196) = 0;
    *((_OWORD *)v9 + 38) = 0u;
    *((_OWORD *)v9 + 39) = 0u;
    *((_OWORD *)v9 + 40) = 0u;
    *((_OWORD *)v9 + 41) = 0u;
    *(_OWORD *)(v9 + 665) = 0u;
    *((_QWORD *)v9 + 101) = 0;
    *((_DWORD *)v9 + 204) = 0;
    *(_OWORD *)(v9 + 792) = 0u;
    *(_QWORD *)v9 = 0;
    *((_QWORD *)v9 + 1) = 0;
    *((_DWORD *)v9 + 4) = 0;
    v9[20] = 9;
    v9[224] = 0;
  }
  *(_QWORD *)(a1 + 48) = v9;
  v10 = operator new(8uLL, MEMORY[0x24BEDB6B8]);
  if (v10)
    *v10 = v2;
  *(_QWORD *)(a1 + 8) = v10;
  return a1;
}

void sub_2391A5910(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void *v5;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 376) = v5;
    operator delete(v5);
  }
  sub_2391A5948(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2391A5948(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(void **)(a1 + 312);
  if (v2)
  {
    *(_QWORD *)(a1 + 320) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 288);
  if (v3)
  {
    *(_QWORD *)(a1 + 296) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 264);
  if (v4)
  {
    *(_QWORD *)(a1 + 272) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 224);
  if (v5)
  {
    *(_QWORD *)(a1 + 232) = v5;
    operator delete(v5);
  }
  sub_2391A61F4(a1 + 48);
  sub_2391AA1C8((unsigned __int16 *)(a1 + 8));
  return a1;
}

uint64_t sub_2391A59B8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
    MEMORY[0x23B838844](v2, 0x20C4093837F09);
  *(_QWORD *)(a1 + 8) = 0;
  sub_2391B3F74(a1 + 504);
  v3 = *(void **)(a1 + 480);
  if (v3)
  {
    *(_QWORD *)(a1 + 488) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 456);
  if (v4)
  {
    *(_QWORD *)(a1 + 464) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 432);
  if (v5)
  {
    *(_QWORD *)(a1 + 440) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 392);
  if (v6)
  {
    *(_QWORD *)(a1 + 400) = v6;
    operator delete(v6);
  }
  v7 = *(void **)(a1 + 368);
  if (v7)
  {
    *(_QWORD *)(a1 + 376) = v7;
    operator delete(v7);
  }
  v8 = *(void **)(a1 + 344);
  if (v8)
  {
    *(_QWORD *)(a1 + 352) = v8;
    operator delete(v8);
  }
  v9 = *(void **)(a1 + 320);
  if (v9)
  {
    *(_QWORD *)(a1 + 328) = v9;
    operator delete(v9);
  }
  v10 = *(void **)(a1 + 296);
  if (v10)
  {
    *(_QWORD *)(a1 + 304) = v10;
    operator delete(v10);
  }
  v11 = *(void **)(a1 + 256);
  if (v11)
  {
    *(_QWORD *)(a1 + 264) = v11;
    operator delete(v11);
  }
  sub_2391A61F4(a1 + 80);
  sub_2391AA1C8((unsigned __int16 *)(a1 + 40));
  return a1;
}

uint64_t sub_2391A5AA4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  char **v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE v20[8];
  void *__p[2];
  uint64_t v22;
  __int16 v23;
  uint8_t buf[4];
  int v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v20[0] = 0;
  __p[1] = 0;
  v22 = 0;
  __p[0] = 0;
  v23 = 7275;
  v8 = sub_2391BC46C();
  v9 = sub_2391BC79C(v8, (uint64_t)v20, a3, a4);
  if ((_DWORD)v9)
  {
    v10 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      v25 = 515;
      _os_log_error_impl(&dword_2390FD000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    }
    goto LABEL_14;
  }
  v11 = sub_23918BED4();
  v12 = atomic_load((unsigned __int8 *)(v11 + 1));
  v13 = v12 == 255;
  v14 = 1;
  if (v13)
    v14 = 2;
  v15 = atomic_load((unsigned __int8 *)(v11 + v14));
  if (v15 == 1)
  {
    v16 = (char **)(a1 + 368);
LABEL_9:
    sub_2391BAFE0(__p, v16, (void **)a2);
    goto LABEL_10;
  }
  v17 = sub_2391B7D4C();
  v16 = (char **)(a1 + 368);
  if (*(_DWORD *)(v17 + 40))
    goto LABEL_9;
  sub_2391BB380(__p, v16, (void **)a2);
LABEL_10:
  v18 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v18 > 7)
  {
    if (v18 != 8)
      *(_QWORD *)(a2 + 8) = *(_QWORD *)a2 + 8;
  }
  else
  {
    sub_239101670((unint64_t *)a2, 8 - v18);
  }
LABEL_14:
  if (SHIBYTE(v22) < 0)
    operator delete(__p[0]);
  return v9;
}

void sub_2391A5C38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2391A5C54(uint64_t a1, uint64_t a2, const void **a3)
{
  const void **v5;
  char *v6;
  _BYTE *v7;
  size_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  size_t v12;
  NSObject *v13;
  _BYTE *v14;
  size_t v15;
  char *v16;
  char *v17;
  int v18;
  NSObject *v19;
  char v20;
  NSObject *v21;
  __int16 v22;
  uint64_t v23;
  int v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  int v28;
  uint64_t v30;
  char v31;
  NSObject *v32;
  NSObject *v33;
  _QWORD v34[2];
  _QWORD v35[2];
  char v36;
  void *__p;
  void *v38;
  uint64_t v39;
  uint8_t buf[4];
  int v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  __p = 0;
  v38 = 0;
  v39 = 0;
  v5 = a3 + 1;
  sub_239189290(&__p, *a3, (uint64_t)a3[1], (_BYTE *)a3[1] - (_BYTE *)*a3);
  v35[0] = &__p;
  v35[1] = 0;
  v36 = 0;
  v34[0] = v35;
  v34[1] = a1 + 32;
  v6 = (char *)*a3;
  v7 = *v5;
  if (v6 != *v5)
  {
    v8 = v7 - v6;
    v9 = *(_QWORD *)(a1 + 384);
    v10 = *(char **)(a1 + 368);
    if (v9 - (unint64_t)v10 >= v7 - v6)
    {
      v14 = *(_BYTE **)(a1 + 376);
      v15 = v14 - v10;
      if (v14 - v10 < v8)
      {
        v16 = &v6[v15];
        if (v14 != v10)
        {
          memmove(*(void **)(a1 + 368), v6, v15);
          v10 = *(char **)(a1 + 376);
        }
        if (v7 != v16)
          memmove(v10, v16, v7 - v16);
        v17 = &v10[v7 - v16];
        goto LABEL_21;
      }
    }
    else
    {
      if (v10)
      {
        *(_QWORD *)(a1 + 376) = v10;
        operator delete(v10);
        v9 = 0;
        *(_QWORD *)(a1 + 368) = 0;
        *(_QWORD *)(a1 + 376) = 0;
        *(_QWORD *)(a1 + 384) = 0;
      }
      if ((v8 & 0x8000000000000000) != 0)
        sub_23910165C();
      v11 = 2 * v9;
      if (2 * v9 <= v8)
        v11 = v7 - v6;
      if (v9 >= 0x3FFFFFFFFFFFFFFFLL)
        v12 = 0x7FFFFFFFFFFFFFFFLL;
      else
        v12 = v11;
      sub_23910161C((_QWORD *)(a1 + 368), v12);
      v10 = *(char **)(a1 + 376);
    }
    memmove(v10, v6, v8);
    v17 = &v10[v8];
LABEL_21:
    *(_QWORD *)(a1 + 376) = v17;
    goto LABEL_22;
  }
  v13 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109120;
    v41 = 513;
    _os_log_error_impl(&dword_2390FD000, v13, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
LABEL_22:
  v18 = sub_2391AA818((uint64_t)v34);
  if (*(_WORD *)(a1 + 40) == 1)
  {
    if (v18)
    {
      v19 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        v41 = 770;
        _os_log_error_impl(&dword_2390FD000, v19, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      }
      v20 = 3;
      goto LABEL_43;
    }
    v23 = *(_QWORD *)(a1 + 48);
    LOBYTE(v24) = *(_BYTE *)(a1 + 34);
    if (*(_DWORD *)(v23 + 308))
      v24 = *(_DWORD *)(v23 + 816);
    if (!sub_23918C000(*(unsigned __int8 *)(a1 + 34), v24))
    {
      v26 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        v41 = 515;
        _os_log_error_impl(&dword_2390FD000, v26, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      }
      v20 = 10;
      goto LABEL_43;
    }
    if (*(_DWORD *)(a1 + 56))
    {
      v25 = qword_2542CF618;
      if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
LABEL_35:
        v20 = 12;
LABEL_43:
        *(_BYTE *)(a1 + 24) = v20;
        goto LABEL_44;
      }
      *(_DWORD *)buf = 67109120;
      v41 = 515;
    }
    else
    {
      if (*(_BYTE *)(v23 + 224))
      {
        v27 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109120;
          v41 = 515;
          _os_log_error_impl(&dword_2390FD000, v27, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        }
        v20 = 13;
        goto LABEL_43;
      }
      if (*(_BYTE *)(v23 + 20) == 9 && !*(_DWORD *)v23)
      {
        v32 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109120;
          v41 = 515;
          _os_log_error_impl(&dword_2390FD000, v32, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        }
        v20 = 4;
        goto LABEL_43;
      }
      if (*(_DWORD *)(a1 + 60))
      {
        if (!*(_QWORD *)(a1 + 8))
          goto LABEL_45;
        v30 = *(_QWORD *)(a1 + 48);
        if (*(unsigned __int8 *)(v30 + 20) - 11 > 1 || *(_DWORD *)(v30 + 304))
        {
          if (*(_DWORD *)(v30 + 300) != 1 || !*(_BYTE *)(v30 + 720))
            goto LABEL_45;
          v31 = 20;
        }
        else
        {
          v31 = 7;
        }
        *(_BYTE *)(a1 + 24) = v31;
        v33 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109120;
          v41 = 515;
          _os_log_error_impl(&dword_2390FD000, v33, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        }
LABEL_44:
        *(_DWORD *)(a1 + 20) = 1;
LABEL_45:
        v28 = sub_2391B7D4C();
        sub_2391B9554(v28, a1 + 392, a1 + 32);
        v22 = 0;
        goto LABEL_46;
      }
      v25 = qword_2542CF618;
      if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        goto LABEL_35;
      *(_DWORD *)buf = 67109120;
      v41 = 515;
    }
    _os_log_error_impl(&dword_2390FD000, v25, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    goto LABEL_35;
  }
  v21 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109120;
    v41 = 515;
    _os_log_error_impl(&dword_2390FD000, v21, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
  v22 = -5;
LABEL_46:
  if (__p)
  {
    v38 = __p;
    operator delete(__p);
  }
  return v22;
}

void sub_2391A61C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2391A61F4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v2 = *(void **)(a1 + 152);
  if (v2)
  {
    *(_QWORD *)(a1 + 160) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 128);
  if (v3)
  {
    *(_QWORD *)(a1 + 136) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 96);
  if (v4)
  {
    *(_QWORD *)(a1 + 104) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 72);
  if (v5)
  {
    *(_QWORD *)(a1 + 80) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 48);
  if (v6)
  {
    *(_QWORD *)(a1 + 56) = v6;
    operator delete(v6);
  }
  v7 = *(void **)(a1 + 24);
  if (v7)
  {
    *(_QWORD *)(a1 + 32) = v7;
    operator delete(v7);
  }
  v8 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v8;
    operator delete(v8);
  }
  return a1;
}

uint64_t sub_2391A6284(uint64_t a1, unsigned __int8 *a2)
{
  NSObject *v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  NSObject *v10;
  uint8_t v12[16];
  uint8_t buf[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_Status", buf, 2u);
  }
  sub_23918C32C((uint64_t **)a1, 0);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    v8 = *(unsigned __int8 *)(a1 + 16);
LABEL_10:
    sub_23918C1A0(v8, v6, v7, "asn1PE_Status");
    goto LABEL_11;
  }
  v9 = *a2;
  if (v9 >= 3)
  {
    v5 = 4;
    *(_BYTE *)(a1 + 16) = 4;
    sub_23918C1A0(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_Status");
    goto LABEL_9;
  }
  v5 = sub_23918C42C(a1, 0, 2, v9);
  if ((_DWORD)v5)
  {
LABEL_9:
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    v8 = v5;
    goto LABEL_10;
  }
LABEL_11:
  v10 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v12 = 0;
    _os_log_debug_impl(&dword_2390FD000, v10, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_Status", v12, 2u);
  }
  return v5;
}

uint64_t sub_2391A63C8(uint64_t a1, unsigned __int16 *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  __int16 v9[8];
  uint8_t buf[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_UARFCN", buf, 2u);
  }
  v5 = sub_23918C42C(a1, 0, 0x3FFF, *a2);
  v6 = v5;
  if ((_DWORD)v5)
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_UARFCN");
  v7 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_2390FD000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_UARFCN", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_2391A64B4(uint64_t a1, unsigned __int8 *a2)
{
  NSObject *v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  NSObject *v9;
  uint64_t v10;
  int v11;
  int v12;
  NSObject *v13;
  NSObject *v14;
  const char *v15;
  NSObject *v16;
  int v17;
  int v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v24;
  int v25;
  int v26;
  const char *v27;
  uint8_t v28[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v28 = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_FrequencyInfo", v28, 2u);
  }
  sub_23918C32C((uint64_t **)a1, 0);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    v8 = *(unsigned __int8 *)(a1 + 16);
LABEL_38:
    sub_23918C1A0(v8, v6, v7, "asn1PE_FrequencyInfo");
    goto LABEL_39;
  }
  v9 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v28 = 0;
    _os_log_debug_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_FrequencyInfo_modeSpecificInfo", v28, 2u);
  }
  sub_23918C32C((uint64_t **)a1, 0);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_FrequencyInfo_modeSpecificInfo");
LABEL_37:
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    v8 = v5;
    goto LABEL_38;
  }
  v10 = sub_23918C42C(a1, 0, 1, *a2);
  if (!(_DWORD)v10)
  {
    if (*a2 != 1)
    {
      if (*a2)
      {
        v5 = 4;
        *(_BYTE *)(a1 + 16) = 4;
        sub_23918C1A0(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_FrequencyInfo_modeSpecificInfo");
        goto LABEL_32;
      }
      v13 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)v28 = 0;
        _os_log_debug_impl(&dword_2390FD000, v13, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_FrequencyInfoFDD", v28, 2u);
      }
      sub_23918C32C((uint64_t **)a1, 0);
      v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_FrequencyInfoFDD");
        v14 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)v28 = 0;
          v15 = "#gpsd,#supl Leaving asn1PE_FrequencyInfoFDD, EncodeBoolean failed";
LABEL_26:
          _os_log_debug_impl(&dword_2390FD000, v14, OS_LOG_TYPE_DEBUG, v15, v28, 2u);
          goto LABEL_32;
        }
        goto LABEL_32;
      }
      sub_23918C32C((uint64_t **)a1, *((_DWORD *)a2 + 1));
      v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_FrequencyInfoFDD");
        v14 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)v28 = 0;
          v15 = "#gpsd,#supl Leaving asn1PE_FrequencyInfoFDD, encode UARFCN failed";
          goto LABEL_26;
        }
LABEL_32:
        v11 = *(_DWORD *)(a1 + 8);
        v12 = *(_DWORD *)(a1 + 12);
        LODWORD(v10) = v5;
        goto LABEL_33;
      }
      if (*((_DWORD *)a2 + 1) && (v24 = sub_2391A63C8(a1, (unsigned __int16 *)a2 + 4), (_DWORD)v24))
      {
        v5 = v24;
        v25 = *(_DWORD *)(a1 + 8);
        v26 = *(_DWORD *)(a1 + 12);
      }
      else
      {
        v24 = sub_2391A63C8(a1, (unsigned __int16 *)a2 + 5);
        v5 = v24;
        if (!(_DWORD)v24)
        {
LABEL_48:
          v20 = qword_2542CF618;
          if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            goto LABEL_31;
          *(_WORD *)v28 = 0;
          v27 = "#gpsd,#supl Leaving asn1PE_FrequencyInfoFDD";
LABEL_51:
          _os_log_debug_impl(&dword_2390FD000, v20, OS_LOG_TYPE_DEBUG, v27, v28, 2u);
LABEL_31:
          if (!(_DWORD)v5)
            goto LABEL_34;
          goto LABEL_32;
        }
        v25 = *(_DWORD *)(a1 + 8);
        v26 = *(_DWORD *)(a1 + 12);
      }
      sub_23918C1A0(v24, v25, v26, "asn1PE_FrequencyInfoFDD");
      goto LABEL_48;
    }
    v16 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v28 = 0;
      _os_log_debug_impl(&dword_2390FD000, v16, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_FrequencyInfoTDD", v28, 2u);
    }
    sub_23918C32C((uint64_t **)a1, 0);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      v17 = *(_DWORD *)(a1 + 8);
      v18 = *(_DWORD *)(a1 + 12);
      LODWORD(v19) = *(unsigned __int8 *)(a1 + 16);
    }
    else
    {
      v19 = sub_2391A63C8(a1, (unsigned __int16 *)a2 + 6);
      v5 = v19;
      if (!(_DWORD)v19)
      {
LABEL_30:
        v20 = qword_2542CF618;
        if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          goto LABEL_31;
        *(_WORD *)v28 = 0;
        v27 = "#gpsd,#supl Leaving asn1PE_FrequencyInfoTDD";
        goto LABEL_51;
      }
      v17 = *(_DWORD *)(a1 + 8);
      v18 = *(_DWORD *)(a1 + 12);
    }
    sub_23918C1A0(v19, v17, v18, "asn1PE_FrequencyInfoTDD");
    goto LABEL_30;
  }
  v5 = v10;
  v11 = *(_DWORD *)(a1 + 8);
  v12 = *(_DWORD *)(a1 + 12);
LABEL_33:
  sub_23918C1A0(v10, v11, v12, "asn1PE_FrequencyInfo_modeSpecificInfo");
LABEL_34:
  v21 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v28 = 0;
    _os_log_debug_impl(&dword_2390FD000, v21, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_FrequencyInfo_modeSpecificInfo", v28, 2u);
  }
  if ((_DWORD)v5)
    goto LABEL_37;
LABEL_39:
  v22 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v28 = 0;
    _os_log_debug_impl(&dword_2390FD000, v22, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_FrequencyInfo", v28, 2u);
  }
  return v5;
}

uint64_t sub_2391A6948(uint64_t a1, unsigned __int16 *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  __int16 v9[8];
  uint8_t buf[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CPICH_Ec_N0", buf, 2u);
  }
  v5 = sub_23918C42C(a1, 0, 63, *a2);
  v6 = v5;
  if ((_DWORD)v5)
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CPICH_Ec_N0");
  v7 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_2390FD000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CPICH_Ec_N0", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_2391A6A34(uint64_t a1, unsigned __int16 *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  __int16 v9[8];
  uint8_t buf[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CPICH_RSCP", buf, 2u);
  }
  v5 = sub_23918C42C(a1, 0, 127, *a2);
  v6 = v5;
  if ((_DWORD)v5)
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CPICH_RSCP");
  v7 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_2390FD000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CPICH_RSCP", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_2391A6B20(uint64_t a1, unsigned __int8 *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  __int16 v9[8];
  uint8_t buf[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_Pathloss", buf, 2u);
  }
  v5 = sub_23918C42C(a1, 46, 173, *a2);
  v6 = v5;
  if ((_DWORD)v5)
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_Pathloss");
  v7 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_2390FD000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_Pathloss", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_2391A6C0C(uint64_t a1, unsigned __int8 *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  __int16 v9[8];
  uint8_t buf[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellParametersID", buf, 2u);
  }
  v5 = sub_23918C42C(a1, 0, 127, *a2);
  v6 = v5;
  if ((_DWORD)v5)
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellParametersID");
  v7 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_2390FD000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellParametersID", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_2391A6CF8(uint64_t a1, unsigned __int8 *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  __int16 v9[8];
  uint8_t buf[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_TGSN", buf, 2u);
  }
  v5 = sub_23918C42C(a1, 0, 14, *a2);
  v6 = v5;
  if ((_DWORD)v5)
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_TGSN");
  v7 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_2390FD000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leavinb asn1PE_TGSN", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_2391A6DE4(uint64_t a1, unsigned __int16 *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  __int16 v9[8];
  uint8_t buf[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_PrimaryCCPCH_RSCP", buf, 2u);
  }
  v5 = sub_23918C42C(a1, 0, 127, *a2);
  v6 = v5;
  if ((_DWORD)v5)
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PrimaryCCPCH_RSCP");
  v7 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_2390FD000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_PrimaryCCPCH_RSCP", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_2391A6ED0(uint64_t a1, _DWORD *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  __int16 v13[8];
  uint8_t v14[16];
  uint8_t v15[16];
  uint8_t v16[16];
  uint8_t buf[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v15 = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_TimeslotISCP_List", v15, 2u);
  }
  v5 = sub_23918C42C(a1, 1, 14, a2[2] - *a2);
  if ((_DWORD)v5)
  {
    v6 = v5;
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_TimeslotISCP_List");
    return v6;
  }
  v7 = *(_QWORD *)a2;
  v8 = qword_2542CF618;
  if (*((_QWORD *)a2 + 1) == *(_QWORD *)a2)
  {
LABEL_18:
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      v13[0] = 0;
      _os_log_debug_impl(&dword_2390FD000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_TimeslotISCP_List", (uint8_t *)v13, 2u);
    }
    return 0;
  }
  v9 = 0;
  while (1)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_TimeslotISCP", buf, 2u);
    }
    v10 = sub_23918C42C(a1, 0, 127, *(unsigned __int8 *)(v7 + v9));
    v6 = v10;
    if ((_DWORD)v10)
      sub_23918C1A0(v10, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_TimeslotISCP");
    v8 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      break;
    if ((_DWORD)v6)
      goto LABEL_16;
LABEL_13:
    ++v9;
    v7 = *(_QWORD *)a2;
    if (v9 >= *((_QWORD *)a2 + 1) - *(_QWORD *)a2)
      goto LABEL_18;
  }
  *(_WORD *)v16 = 0;
  _os_log_debug_impl(&dword_2390FD000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_TimeslotISCP", v16, 2u);
  v8 = qword_2542CF618;
  if (!(_DWORD)v6)
    goto LABEL_13;
LABEL_16:
  sub_23918C1A0(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_TimeslotISCP_List");
  v11 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v14 = 0;
    _os_log_debug_impl(&dword_2390FD000, v11, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_TimeslotISCP_List", v14, 2u);
  }
  return v6;
}

uint64_t sub_2391A7124(uint64_t a1, uint64_t *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  unint64_t v10;
  int *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  NSObject *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  NSObject *v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  NSObject *v32;
  uint64_t v33;
  NSObject *v34;
  const char *v35;
  int v36;
  int v37;
  unsigned int v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  NSObject *v60;
  const char *v61;
  NSObject *v62;
  NSObject *v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint8_t buf[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_MeasuredResultsList", buf, 2u);
  }
  v5 = sub_23918C42C(a1, 1, 8, -1227133513 * ((unint64_t)(a2[1] - *a2) >> 3));
  if ((_DWORD)v5)
  {
    v6 = v5;
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResultsList");
    v7 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      return v6;
    *(_WORD *)buf = 0;
LABEL_163:
    _os_log_debug_impl(&dword_2390FD000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_MeasuredResultsList", buf, 2u);
    return v6;
  }
  v8 = *a2;
  v9 = qword_2542CF618;
  if (a2[1] == *a2)
    goto LABEL_148;
  v10 = 0;
  do
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_MeasuredResults", buf, 2u);
    }
    v11 = (int *)(v8 + 56 * v10);
    sub_23918C32C((uint64_t **)a1, *v11);
    v6 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
      v63 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        goto LABEL_160;
      }
      goto LABEL_161;
    }
    sub_23918C32C((uint64_t **)a1, v11[1]);
    v6 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
      v63 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        goto LABEL_160;
      }
      goto LABEL_161;
    }
    sub_23918C32C((uint64_t **)a1, v11[2]);
    v6 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
      v63 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        goto LABEL_160;
      }
LABEL_161:
      sub_23918C1A0(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResultsList");
      v7 = qword_2542CF618;
      if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        return v6;
      *(_WORD *)buf = 0;
      goto LABEL_163;
    }
    if (*v11)
    {
      v12 = sub_2391A64B4(a1, (unsigned __int8 *)(v8 + 56 * v10 + 12));
      if ((_DWORD)v12)
      {
        v6 = v12;
        sub_23918C1A0(v12, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
        goto LABEL_161;
      }
    }
    if (v11[1])
    {
      v13 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v13, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_UTRA_CarrierRSSI", buf, 2u);
      }
      v14 = sub_23918C42C(a1, 0, 127, *(unsigned __int8 *)(v8 + 56 * v10 + 28));
      v6 = v14;
      if ((_DWORD)v14)
        sub_23918C1A0(v14, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_UTRA_CarrierRSSI");
      v15 = qword_2542CF618;
      if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        if ((_DWORD)v6)
          goto LABEL_158;
        goto LABEL_22;
      }
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v15, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_UTRA_CarrierRSSI", buf, 2u);
      if ((_DWORD)v6)
      {
LABEL_158:
        sub_23918C1A0(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
        v63 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
LABEL_160:
          _os_log_debug_impl(&dword_2390FD000, v63, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_MeasuredResults", buf, 2u);
        }
        goto LABEL_161;
      }
    }
LABEL_22:
    if (!v11[2])
    {
      v6 = 0;
      goto LABEL_137;
    }
    v16 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v16, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellMeasuredResultsList", buf, 2u);
    }
    v17 = (uint64_t *)(v8 + 56 * v10 + 32);
    v18 = sub_23918C42C(a1, 1, 32, -1171354717 * ((unint64_t)(*(_QWORD *)(v8 + 56 * v10 + 40) - *v17) >> 3));
    if ((_DWORD)v18)
    {
      v6 = v18;
      sub_23918C1A0(v18, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResultsList");
      v19 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        goto LABEL_27;
      goto LABEL_28;
    }
    v20 = *v17;
    v21 = qword_2542CF618;
    if (*(_QWORD *)(v8 + 56 * v10 + 40) == *(_QWORD *)(v8 + 56 * v10 + 32))
    {
LABEL_134:
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v21, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellMeasuredResultsList", buf, 2u);
      }
      v6 = 0;
      goto LABEL_137;
    }
    v22 = 0;
    v23 = 32;
    while (1)
    {
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v21, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellMeasuredResults", buf, 2u);
      }
      sub_23918C32C((uint64_t **)a1, *(_DWORD *)(v20 + v23 - 32));
      v6 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
        break;
      if (*(_DWORD *)(v20 + v23 - 32))
      {
        v24 = sub_23918C42C(a1, 0, 0xFFFFFFF, *(_DWORD *)(v20 + v23 - 28));
        if ((_DWORD)v24)
        {
          v6 = v24;
          v25 = *(_DWORD *)(a1 + 8);
          v26 = *(_DWORD *)(a1 + 12);
          goto LABEL_87;
        }
      }
      v27 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v27, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellMeasuredResults_modeSpecificInfo", buf, 2u);
      }
      v28 = sub_23918C42C(a1, 0, 1, *(char *)(v20 + v23 - 24));
      if ((_DWORD)v28)
      {
        v6 = v28;
        v29 = *(_DWORD *)(a1 + 8);
        v30 = *(_DWORD *)(a1 + 12);
LABEL_83:
        sub_23918C1A0(v28, v29, v30, "asn1PE_CellMeasuredResults_modeSpecificInfo");
        goto LABEL_84;
      }
      v31 = *(unsigned __int8 *)(v20 + v23 - 24);
      if (v31 == 255)
      {
        v6 = 1;
        *(_BYTE *)(a1 + 16) = 1;
        v36 = *(_DWORD *)(a1 + 8);
        v37 = *(_DWORD *)(a1 + 12);
        v38 = 1;
        goto LABEL_57;
      }
      if (v31 != 1)
      {
        if (*(_BYTE *)(v20 + v23 - 24))
        {
          v6 = 4;
          *(_BYTE *)(a1 + 16) = 4;
          v36 = *(_DWORD *)(a1 + 8);
          v37 = *(_DWORD *)(a1 + 12);
          v38 = 4;
LABEL_57:
          sub_23918C1A0(v38, v36, v37, "asn1PE_CellMeasuredResults_modeSpecificInfo");
          goto LABEL_82;
        }
        v32 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_2390FD000, v32, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellMeasuredResults_modeSpecificInfo_fdd", buf, 2u);
        }
        sub_23918C32C((uint64_t **)a1, *(_DWORD *)(v20 + v23 - 16));
        v6 = *(unsigned __int8 *)(a1 + 16);
        if (*(_BYTE *)(a1 + 16))
        {
          sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
          v33 = qword_2542CF618;
          if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            goto LABEL_82;
LABEL_49:
          *(_WORD *)buf = 0;
          v34 = v33;
          v35 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_fdd, encode BOOL failed";
LABEL_81:
          _os_log_debug_impl(&dword_2390FD000, v34, OS_LOG_TYPE_DEBUG, v35, buf, 2u);
          goto LABEL_82;
        }
        sub_23918C32C((uint64_t **)a1, *(_DWORD *)(v20 + v23 - 12));
        v6 = *(unsigned __int8 *)(a1 + 16);
        if (*(_BYTE *)(a1 + 16))
        {
          sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
          v33 = qword_2542CF618;
          if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            goto LABEL_82;
          goto LABEL_49;
        }
        sub_23918C32C((uint64_t **)a1, *(_DWORD *)(v20 + v23 - 8));
        v6 = *(unsigned __int8 *)(a1 + 16);
        if (*(_BYTE *)(a1 + 16))
        {
          sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
          v41 = qword_2542CF618;
          if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            goto LABEL_82;
          *(_WORD *)buf = 0;
          v34 = v41;
          v35 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_fdd, encode CPICH_info failed";
          goto LABEL_81;
        }
        v65 = v20 + v23;
        v42 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_2390FD000, v42, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_PrimaryCPICH_Info", buf, 2u);
        }
        v43 = sub_23918C42C(a1, 0, 511, *(unsigned __int16 *)(v20 + v23 - 4));
        v6 = v43;
        if ((_DWORD)v43)
          sub_23918C1A0(v43, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PrimaryCPICH_Info");
        v44 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_2390FD000, v44, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_PrimaryCPICH_Info", buf, 2u);
          if ((_DWORD)v6)
          {
LABEL_76:
            sub_23918C1A0(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
            v45 = qword_2542CF618;
            if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
              goto LABEL_82;
            *(_WORD *)buf = 0;
            v34 = v45;
            v35 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_fdd, encode cpich_ec_n0 failed";
            goto LABEL_81;
          }
        }
        else if ((_DWORD)v6)
        {
          goto LABEL_76;
        }
        if (*(_DWORD *)(v20 + v23 - 16))
        {
          v54 = sub_2391A6948(a1, (unsigned __int16 *)(v20 + v23 - 2));
          if ((_DWORD)v54)
          {
            v6 = v54;
            sub_23918C1A0(v54, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
            v55 = qword_2542CF618;
            if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
              goto LABEL_82;
            *(_WORD *)buf = 0;
            v34 = v55;
            v35 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_fdd, encode cpich_rsrp failed";
            goto LABEL_81;
          }
        }
        if (*(_DWORD *)(v65 - 12))
        {
          v56 = sub_2391A6A34(a1, (unsigned __int16 *)(v20 + v23));
          if ((_DWORD)v56)
          {
            v6 = v56;
            v57 = *(_DWORD *)(a1 + 8);
            v58 = *(_DWORD *)(a1 + 12);
            goto LABEL_121;
          }
        }
        if (*(_DWORD *)(v65 - 8))
        {
          v56 = sub_2391A6B20(a1, (unsigned __int8 *)(v20 + v23 + 2));
          v6 = v56;
          if ((_DWORD)v56)
          {
            v57 = *(_DWORD *)(a1 + 8);
            v58 = *(_DWORD *)(a1 + 12);
LABEL_121:
            sub_23918C1A0(v56, v57, v58, "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
          }
        }
        else
        {
          v6 = 0;
        }
        v59 = qword_2542CF618;
        if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          goto LABEL_124;
        *(_WORD *)buf = 0;
        v60 = v59;
        v61 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_fdd";
        goto LABEL_133;
      }
      v39 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v39, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellMeasuredResults_modeSpecificInfo_tdd", buf, 2u);
      }
      sub_23918C32C((uint64_t **)a1, *(_DWORD *)(v20 + v23 + 8));
      v6 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
        v40 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          goto LABEL_80;
LABEL_82:
        v29 = *(_DWORD *)(a1 + 8);
        v30 = *(_DWORD *)(a1 + 12);
        LODWORD(v28) = v6;
        goto LABEL_83;
      }
      v67 = v20 + v23;
      sub_23918C32C((uint64_t **)a1, *(_DWORD *)(v20 + v23 + 12));
      v6 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
        v40 = qword_2542CF618;
        if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          goto LABEL_82;
        goto LABEL_80;
      }
      sub_23918C32C((uint64_t **)a1, *(_DWORD *)(v67 + 16));
      v6 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
        v40 = qword_2542CF618;
        if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          goto LABEL_82;
LABEL_80:
        *(_WORD *)buf = 0;
        v34 = v40;
        v35 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_tdd";
        goto LABEL_81;
      }
      v66 = v20 + v23;
      sub_23918C32C((uint64_t **)a1, *(_DWORD *)(v20 + v23 + 20));
      v6 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
        v40 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          goto LABEL_80;
        goto LABEL_82;
      }
      v47 = sub_2391A6C0C(a1, (unsigned __int8 *)(v66 + 24));
      v6 = v47;
      if ((_DWORD)v47 || !*(_DWORD *)(v20 + v23 + 8))
      {
        sub_23918C1A0(v47, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
        v53 = qword_2542CF618;
        if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          goto LABEL_124;
      }
      else
      {
        v48 = sub_2391A6CF8(a1, (unsigned __int8 *)(v20 + v23 + 25));
        v6 = v48;
        if ((_DWORD)v48 || !*(_DWORD *)(v67 + 12))
        {
          sub_23918C1A0(v48, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
          v53 = qword_2542CF618;
          if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            goto LABEL_124;
        }
        else
        {
          v49 = sub_2391A6DE4(a1, (unsigned __int16 *)(v20 + v23 + 26));
          v6 = v49;
          if (!(_DWORD)v49 && *(_DWORD *)(v67 + 16))
          {
            v50 = sub_2391A6B20(a1, (unsigned __int8 *)(v20 + v23 + 28));
            v6 = v50;
            if ((_DWORD)v50 || !*(_DWORD *)(v66 + 20))
            {
              v51 = *(_DWORD *)(a1 + 8);
              v52 = *(_DWORD *)(a1 + 12);
LABEL_129:
              sub_23918C1A0(v50, v51, v52, "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
            }
            else
            {
              v50 = sub_2391A6ED0(a1, (_DWORD *)(v20 + v23 + 32));
              v6 = v50;
              if ((_DWORD)v50)
              {
                v51 = *(_DWORD *)(a1 + 8);
                v52 = *(_DWORD *)(a1 + 12);
                goto LABEL_129;
              }
            }
            v53 = qword_2542CF618;
            if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
              goto LABEL_124;
            goto LABEL_131;
          }
          sub_23918C1A0(v49, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
          v53 = qword_2542CF618;
          if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            goto LABEL_124;
        }
      }
LABEL_131:
      *(_WORD *)buf = 0;
      v60 = v53;
      v61 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_tdd";
LABEL_133:
      _os_log_debug_impl(&dword_2390FD000, v60, OS_LOG_TYPE_DEBUG, v61, buf, 2u);
LABEL_124:
      if ((_DWORD)v6)
        goto LABEL_82;
LABEL_84:
      v46 = qword_2542CF618;
      if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        if (!(_DWORD)v6)
          goto LABEL_88;
LABEL_86:
        v25 = *(_DWORD *)(a1 + 8);
        v26 = *(_DWORD *)(a1 + 12);
        LODWORD(v24) = v6;
LABEL_87:
        sub_23918C1A0(v24, v25, v26, "asn1PE_CellMeasuredResults");
        goto LABEL_88;
      }
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v46, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo", buf, 2u);
      if ((_DWORD)v6)
        goto LABEL_86;
LABEL_88:
      v21 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v21, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellMeasuredResults", buf, 2u);
        v21 = qword_2542CF618;
        if ((_DWORD)v6)
          goto LABEL_144;
      }
      else if ((_DWORD)v6)
      {
        goto LABEL_144;
      }
      ++v22;
      v20 = *v17;
      v23 += 88;
      if (v22 >= 0x2E8BA2E8BA2E8BA3 * ((v17[1] - *v17) >> 3))
        goto LABEL_134;
    }
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults");
    v62 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v62, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellMeasuredResults", buf, 2u);
    }
LABEL_144:
    sub_23918C1A0(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResultsList");
    v19 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
LABEL_27:
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v19, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellMeasuredResultsList", buf, 2u);
    }
LABEL_28:
    sub_23918C1A0(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
LABEL_137:
    v9 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_MeasuredResults", buf, 2u);
      v9 = qword_2542CF618;
    }
    if ((_DWORD)v6)
      goto LABEL_161;
    ++v10;
    v8 = *a2;
  }
  while (v10 < 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 3));
LABEL_148:
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_MeasuredResultsList", buf, 2u);
  }
  return 0;
}

uint64_t sub_2391A81F8(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t v14[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v14 = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_WcdmaCellInformation", v14, 2u);
  }
  sub_23918C32C((uint64_t **)a1, 0);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
    v6 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v14 = 0;
LABEL_24:
      _os_log_debug_impl(&dword_2390FD000, v6, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_WcdmaCellInformation", v14, 2u);
    }
  }
  else
  {
    sub_23918C32C((uint64_t **)a1, *(_DWORD *)a2);
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
      v6 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)v14 = 0;
        goto LABEL_24;
      }
    }
    else
    {
      sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 4));
      v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
        v6 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)v14 = 0;
          goto LABEL_24;
        }
      }
      else
      {
        sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 8));
        v5 = *(unsigned __int8 *)(a1 + 16);
        if (*(_BYTE *)(a1 + 16))
        {
          sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
          v6 = qword_2542CF618;
          if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)v14 = 0;
            goto LABEL_24;
          }
        }
        else
        {
          v7 = sub_23918C42C(a1, 0, 999, *(unsigned __int16 *)(a2 + 12));
          if ((_DWORD)v7)
          {
            v5 = v7;
            sub_23918C1A0(v7, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
            v6 = qword_2542CF618;
            if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)v14 = 0;
              goto LABEL_24;
            }
          }
          else
          {
            v8 = sub_23918C42C(a1, 0, 999, *(unsigned __int16 *)(a2 + 14));
            if ((_DWORD)v8)
            {
              v5 = v8;
              sub_23918C1A0(v8, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
              v6 = qword_2542CF618;
              if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
              {
                *(_WORD *)v14 = 0;
                goto LABEL_24;
              }
            }
            else
            {
              v9 = sub_23918C42C(a1, 0, 0xFFFFFFF, *(_DWORD *)(a2 + 16));
              if ((_DWORD)v9)
              {
                v5 = v9;
                sub_23918C1A0(v9, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
                v6 = qword_2542CF618;
                if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)v14 = 0;
                  goto LABEL_24;
                }
              }
              else
              {
                if (*(_DWORD *)a2)
                {
                  v11 = sub_2391A64B4(a1, (unsigned __int8 *)(a2 + 20));
                  if ((_DWORD)v11)
                  {
                    v5 = v11;
                    sub_23918C1A0(v11, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
                    v6 = qword_2542CF618;
                    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
                      return v5;
                    *(_WORD *)v14 = 0;
                    goto LABEL_24;
                  }
                }
                if (*(_DWORD *)(a2 + 4))
                {
                  v12 = sub_23918C42C(a1, 0, 511, *(unsigned __int16 *)(a2 + 36));
                  if ((_DWORD)v12)
                  {
                    v5 = v12;
                    sub_23918C1A0(v12, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
                    v6 = qword_2542CF618;
                    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
                      return v5;
                    *(_WORD *)v14 = 0;
                    goto LABEL_24;
                  }
                }
                if (*(_DWORD *)(a2 + 8))
                {
                  v13 = sub_2391A7124(a1, (uint64_t *)(a2 + 40));
                  v5 = v13;
                  if ((_DWORD)v13)
                    sub_23918C1A0(v13, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
                }
                else
                {
                  v5 = 0;
                }
                v6 = qword_2542CF618;
                if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)v14 = 0;
                  goto LABEL_24;
                }
              }
            }
          }
        }
      }
    }
  }
  return v5;
}

uint64_t sub_2391A861C(uint64_t a1, uint64_t *a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint8_t v18[16];

  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v18 = 0;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_NMR", v18, 2u);
  }
  v5 = sub_23918C42C(a1, 1, 15, -1431655765 * ((unint64_t)(a2[1] - *a2) >> 2));
  if ((_DWORD)v5)
  {
    v6 = v5;
    sub_23918C1A0(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMR");
    v7 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v18 = 0;
LABEL_31:
      _os_log_debug_impl(&dword_2390FD000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_NMR", v18, 2u);
    }
  }
  else
  {
    v8 = *a2;
    v9 = qword_2542CF618;
    if (a2[1] == *a2)
    {
LABEL_21:
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)v18 = 0;
        _os_log_debug_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_NMR", v18, 2u);
      }
      return 0;
    }
    else
    {
      v10 = 0;
      v11 = 0;
      while (1)
      {
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)v18 = 0;
          _os_log_debug_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_NMRelement", v18, 2u);
        }
        sub_23918C32C((uint64_t **)a1, 0);
        v6 = *(unsigned __int8 *)(a1 + 16);
        if (*(_BYTE *)(a1 + 16))
        {
          sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMRelement");
          v16 = qword_2542CF618;
          if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            goto LABEL_29;
          *(_WORD *)v18 = 0;
          goto LABEL_34;
        }
        v12 = sub_23918C42C(a1, 0, 1023, *(_DWORD *)(v8 + v10));
        if ((_DWORD)v12)
        {
          v6 = v12;
          sub_23918C1A0(v12, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMRelement");
          v16 = qword_2542CF618;
          if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            goto LABEL_29;
          *(_WORD *)v18 = 0;
          goto LABEL_34;
        }
        v13 = v8 + v10;
        v14 = sub_23918C42C(a1, 0, 63, *(_DWORD *)(v13 + 4));
        if ((_DWORD)v14)
          break;
        v15 = sub_23918C42C(a1, 0, 63, *(_DWORD *)(v13 + 8));
        v6 = v15;
        if ((_DWORD)v15)
          sub_23918C1A0(v15, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMRelement");
        v9 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)v18 = 0;
          _os_log_debug_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_NMRelement", v18, 2u);
          v9 = qword_2542CF618;
          if ((_DWORD)v6)
            goto LABEL_29;
        }
        else if ((_DWORD)v6)
        {
          goto LABEL_29;
        }
        ++v11;
        v8 = *a2;
        v10 += 12;
        if (v11 >= 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 2))
          goto LABEL_21;
      }
      v6 = v14;
      sub_23918C1A0(v14, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMRelement");
      v16 = qword_2542CF618;
      if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        goto LABEL_29;
      *(_WORD *)v18 = 0;
LABEL_34:
      _os_log_debug_impl(&dword_2390FD000, v16, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_NMRelement", v18, 2u);
LABEL_29:
      sub_23918C1A0(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMR");
      v7 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)v18 = 0;
        goto LABEL_31;
      }
    }
  }
  return v6;
}

uint64_t sub_2391A89E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_23918C1A0(v7, v5, v6, "asn1PE_GsmCellInformation");
    return v4;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  v7 = sub_23918C42C(a1, 0, 999, *(unsigned __int16 *)(a2 + 8));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  v7 = sub_23918C42C(a1, 0, 999, *(unsigned __int16 *)(a2 + 10));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  v7 = sub_23918C42C(a1, 0, 0xFFFF, *(unsigned __int16 *)(a2 + 12));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  v7 = sub_23918C42C(a1, 0, 0xFFFF, *(unsigned __int16 *)(a2 + 14));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (*(_DWORD *)a2)
  {
    v7 = sub_2391A861C(a1, (uint64_t *)(a2 + 16));
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (!*(_DWORD *)(a2 + 4))
    return 0;
  v7 = sub_23918C42C(a1, 0, 255, *(unsigned __int8 *)(a2 + 40));
  v4 = v7;
  if ((_DWORD)v7)
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  return v4;
}

uint64_t sub_2391A8BC0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void **v9;

  if (*(_BYTE *)a1 == 4)
  {
    v2 = *(_QWORD *)(a1 + 144);
    if (v2)
    {
      v9 = (void **)(v2 + 144);
      sub_2391A96C8(&v9);
      v3 = *(void **)(v2 + 112);
      if (v3)
      {
        *(_QWORD *)(v2 + 120) = v3;
        operator delete(v3);
      }
      v4 = *(void **)(v2 + 80);
      if (v4)
      {
        *(_QWORD *)(v2 + 88) = v4;
        operator delete(v4);
      }
      v5 = *(void **)(v2 + 56);
      if (v5)
      {
        *(_QWORD *)(v2 + 64) = v5;
        operator delete(v5);
      }
      v6 = *(void **)(v2 + 32);
      if (v6)
      {
        *(_QWORD *)(v2 + 40) = v6;
        operator delete(v6);
      }
      MEMORY[0x23B838844](v2, 0x1030C40753A10ABLL);
      *(_QWORD *)(a1 + 144) = 0;
    }
  }
  v9 = (void **)(a1 + 96);
  sub_2391A97B0(&v9);
  v7 = *(void **)(a1 + 24);
  if (v7)
  {
    *(_QWORD *)(a1 + 32) = v7;
    operator delete(v7);
  }
  return a1;
}

uint64_t sub_2391A8C88(uint64_t a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  v4 = *a2;
  sub_23918C32C((uint64_t **)a1, v4 == 4);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
  }
  else if (v4 == 4)
  {
    if (*((_QWORD *)a2 + 18))
    {
      v8 = sub_239189038(a1, (uint64_t)a2);
      v5 = v8;
      if (!(_DWORD)v8)
        return v5;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      v5 = 1;
      LODWORD(v8) = 1;
    }
  }
  else
  {
    v8 = sub_23918C42C(a1, 0, 2, *a2 - 1);
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      v5 = 0;
      switch(*a2)
      {
        case 0u:
        case 3u:
          v5 = 1;
          *(_BYTE *)(a1 + 16) = 1;
          v10 = *(_DWORD *)(a1 + 8);
          v11 = *(_DWORD *)(a1 + 12);
          v12 = 1;
          goto LABEL_19;
        case 1u:
          v13 = sub_2391A89E0(a1, (uint64_t)(a2 + 8));
          goto LABEL_16;
        case 2u:
          v13 = sub_2391A81F8(a1, (uint64_t)(a2 + 56));
LABEL_16:
          v5 = v13;
          if (!(_DWORD)v13)
            return v5;
          goto LABEL_20;
        case 4u:
          return v5;
        default:
          v5 = 4;
          *(_BYTE *)(a1 + 16) = 4;
          v10 = *(_DWORD *)(a1 + 8);
          v11 = *(_DWORD *)(a1 + 12);
          v12 = 4;
LABEL_19:
          sub_23918C1A0(v12, v10, v11, "asn1PE_CellInfo");
LABEL_20:
          v6 = *(_DWORD *)(a1 + 8);
          v7 = *(_DWORD *)(a1 + 12);
          LODWORD(v8) = v5;
          break;
      }
    }
  }
  sub_23918C1A0(v8, v6, v7, "asn1PE_CellInfo");
  return v5;
}

uint64_t sub_2391A8E38(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_7:
    sub_23918C1A0(v7, v5, v6, "asn1PE_LocationId");
    return v4;
  }
  v7 = sub_2391A8C88(a1, a2);
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  v7 = sub_2391A6284(a1, a2 + 152);
  v4 = v7;
  if ((_DWORD)v7)
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  return v4;
}

uint64_t sub_2391A8EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  char *v10;
  char *v11;
  _OWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  __int128 *v22;
  __int128 *v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _BYTE *v35;
  size_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  void **v43;
  _BYTE *v44;
  char *v45;
  void *v46;
  char *v47;
  __int128 *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void **v56;
  _QWORD *v57;
  int *v58;
  int *v59;
  unint64_t v60;
  _QWORD *v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int *v69;
  uint64_t v70;
  _QWORD *i;
  void **v72[2];

  v72[1] = *(void ***)MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)a1 == 4)
  {
    v4 = *(_QWORD *)(a1 + 144);
    if (v4)
    {
      v72[0] = (void **)(v4 + 144);
      sub_2391A96C8(v72);
      v5 = *(void **)(v4 + 112);
      if (v5)
      {
        *(_QWORD *)(v4 + 120) = v5;
        operator delete(v5);
      }
      v6 = *(void **)(v4 + 80);
      if (v6)
      {
        *(_QWORD *)(v4 + 88) = v6;
        operator delete(v6);
      }
      v7 = *(void **)(v4 + 56);
      if (v7)
      {
        *(_QWORD *)(v4 + 64) = v7;
        operator delete(v7);
      }
      v8 = *(void **)(v4 + 32);
      if (v8)
      {
        *(_QWORD *)(v4 + 40) = v8;
        operator delete(v8);
      }
      MEMORY[0x23B838844](v4, 0x1030C40753A10ABLL);
      *(_QWORD *)(a1 + 144) = 0;
    }
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  switch(*(_BYTE *)a2)
  {
    case 0:
      v9 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        v72[0] = (void **)0x20304000100;
        goto LABEL_38;
      }
      return a1;
    case 1:
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      if (a1 == a2)
        goto LABEL_65;
      v33 = *(char **)(a1 + 24);
      v34 = *(char **)(a2 + 24);
      v35 = *(_BYTE **)(a2 + 32);
      v36 = v35 - v34;
      v37 = 0xAAAAAAAAAAAAAAABLL * ((v35 - v34) >> 2);
      v38 = *(_QWORD *)(a1 + 40);
      if (0xAAAAAAAAAAAAAAABLL * ((v38 - (uint64_t)v33) >> 2) < v37)
      {
        if (v33)
        {
          *(_QWORD *)(a1 + 32) = v33;
          operator delete(v33);
          v38 = 0;
          *(_QWORD *)(a1 + 24) = 0;
          *(_QWORD *)(a1 + 32) = 0;
          *(_QWORD *)(a1 + 40) = 0;
        }
        if (v37 > 0x1555555555555555)
          sub_23910165C();
        v39 = 0xAAAAAAAAAAAAAAABLL * (v38 >> 2);
        v40 = 2 * v39;
        if (2 * v39 <= v37)
          v40 = 0xAAAAAAAAAAAAAAABLL * ((v35 - v34) >> 2);
        if (v39 >= 0xAAAAAAAAAAAAAAALL)
          v41 = 0x1555555555555555;
        else
          v41 = v40;
        if (v41 > 0x1555555555555555)
          sub_23910165C();
        v42 = (char *)operator new(12 * v41);
        v33 = v42;
        *(_QWORD *)(a1 + 32) = v42;
        v43 = (void **)(a1 + 32);
        *(_QWORD *)(a1 + 24) = v42;
        *(_QWORD *)(a1 + 40) = &v42[12 * v41];
        if (v35 != v34)
          memcpy(v42, v34, v35 - v34);
        goto LABEL_64;
      }
      v43 = (void **)(a1 + 32);
      v44 = *(_BYTE **)(a1 + 32);
      if (0xAAAAAAAAAAAAAAABLL * ((v44 - v33) >> 2) >= v37)
      {
        if (v35 == v34)
          goto LABEL_64;
        v46 = *(void **)(a1 + 24);
        v47 = *(char **)(a2 + 24);
        goto LABEL_63;
      }
      v45 = &v34[4 * ((v44 - v33) >> 2)];
      if (v44 != v33)
      {
        memmove(*(void **)(a1 + 24), *(const void **)(a2 + 24), v44 - v33);
        v33 = (char *)*v43;
      }
      v36 = v35 - v45;
      if (v35 != v45)
      {
        v46 = v33;
        v47 = v45;
LABEL_63:
        memmove(v46, v47, v36);
      }
LABEL_64:
      *v43 = &v33[v36];
LABEL_65:
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      return a1;
    case 2:
      v17 = *(_QWORD *)(a2 + 56);
      v18 = *(_DWORD *)(a2 + 64);
      *(_DWORD *)(a1 + 64) = v18;
      *(_QWORD *)(a1 + 56) = v17;
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 76) = *(_OWORD *)(a2 + 76);
      *(_WORD *)(a1 + 92) = *(_WORD *)(a2 + 92);
      if (a1 == a2 || v18 != 1)
        return a1;
      v19 = *(_QWORD *)(a1 + 112);
      v21 = (void **)(a1 + 96);
      v20 = *(_QWORD *)(a1 + 96);
      v23 = *(__int128 **)(a2 + 96);
      v22 = *(__int128 **)(a2 + 104);
      v24 = 0x6DB6DB6DB6DB6DB7 * (((char *)v22 - (char *)v23) >> 3);
      if (0x6DB6DB6DB6DB6DB7 * ((v19 - v20) >> 3) >= v24)
      {
        if (0x6DB6DB6DB6DB6DB7 * ((*(_QWORD *)(a1 + 104) - v20) >> 3) >= v24)
        {
          v50 = sub_2391A9F50(v23, v22, *(_QWORD *)(a1 + 96));
          v51 = *(_QWORD *)(a1 + 104);
          if (v51 != v50)
          {
            do
            {
              v52 = v51 - 56;
              v72[0] = (void **)(v51 - 24);
              sub_2391A9828(v72);
              v51 = v52;
            }
            while (v52 != v50);
          }
          *(_QWORD *)(a1 + 104) = v50;
          return a1;
        }
        v48 = (__int128 *)((char *)v23 + 8 * ((*(_QWORD *)(a1 + 104) - v20) >> 3));
        sub_2391A9F50(v23, v48, *(_QWORD *)(a1 + 96));
        v32 = sub_2391A9C38(a1 + 112, v48, v22, *(_QWORD *)(a1 + 104));
      }
      else
      {
        if (v20)
        {
          v25 = *(_QWORD *)(a1 + 104);
          v26 = *(void **)(a1 + 96);
          if (v25 != v20)
          {
            do
            {
              v27 = v25 - 56;
              v72[0] = (void **)(v25 - 24);
              sub_2391A9828(v72);
              v25 = v27;
            }
            while (v27 != v20);
            v26 = *v21;
          }
          *(_QWORD *)(a1 + 104) = v20;
          operator delete(v26);
          v19 = 0;
          *v21 = 0;
          *(_QWORD *)(a1 + 104) = 0;
          *(_QWORD *)(a1 + 112) = 0;
        }
        if (v24 > 0x492492492492492)
          sub_23910165C();
        v28 = 0x6DB6DB6DB6DB6DB7 * (v19 >> 3);
        v29 = 2 * v28;
        if (2 * v28 <= v24)
          v29 = 0x6DB6DB6DB6DB6DB7 * (((char *)v22 - (char *)v23) >> 3);
        if (v28 >= 0x249249249249249)
          v30 = 0x492492492492492;
        else
          v30 = v29;
        if (v30 > 0x492492492492492)
          sub_23910165C();
        v31 = (char *)operator new(56 * v30);
        *(_QWORD *)(a1 + 96) = v31;
        *(_QWORD *)(a1 + 104) = v31;
        *(_QWORD *)(a1 + 112) = &v31[56 * v30];
        v32 = sub_2391A9C38(a1 + 112, v23, v22, (uint64_t)v31);
      }
      *(_QWORD *)(a1 + 104) = v32;
      return a1;
    case 3:
      v9 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        v72[0] = (void **)0x20304000100;
LABEL_38:
        _os_log_error_impl(&dword_2390FD000, v9, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v72, 8u);
      }
      return a1;
    case 4:
      v10 = (char *)operator new(0xA8uLL, MEMORY[0x24BEDB6B8]);
      if (!v10)
      {
        *(_QWORD *)(a1 + 144) = 0;
        return a1;
      }
      v11 = v10;
      *((_QWORD *)v10 + 1) = 0;
      v12 = v10 + 8;
      *((_OWORD *)v10 + 2) = 0u;
      v13 = v10 + 32;
      *((_QWORD *)v11 + 18) = 0;
      *((_QWORD *)v11 + 19) = 0;
      *((_QWORD *)v11 + 20) = 0;
      *((_QWORD *)v11 + 2) = 0;
      *((_DWORD *)v11 + 6) = 0;
      *((_OWORD *)v11 + 3) = 0u;
      *((_OWORD *)v11 + 4) = 0u;
      *((_OWORD *)v11 + 5) = 0u;
      *(_OWORD *)(v11 + 90) = 0u;
      *((_QWORD *)v11 + 15) = 0;
      *((_QWORD *)v11 + 16) = 0;
      *((_QWORD *)v11 + 14) = 0;
      *((_DWORD *)v11 + 34) = 0;
      *(_WORD *)v11 = -1;
      *(_QWORD *)(a1 + 144) = v11;
      v14 = *(_QWORD *)(a2 + 144);
      if (!v14)
        return a1;
      *(_WORD *)v11 = *(_WORD *)v14;
      *v12 = *(_OWORD *)(v14 + 8);
      *((_DWORD *)v11 + 6) = *(_DWORD *)(v14 + 24);
      v15 = v11;
      if (v11 != (char *)v14)
      {
        sub_239107FF0(v13, *(char **)(v14 + 32), *(char **)(v14 + 40), *(_QWORD *)(v14 + 40) - *(_QWORD *)(v14 + 32));
        sub_239107FF0((_QWORD *)v11 + 7, *(char **)(v14 + 56), *(char **)(v14 + 64), *(_QWORD *)(v14 + 64) - *(_QWORD *)(v14 + 56));
        sub_239107FF0((_QWORD *)v11 + 10, *(char **)(v14 + 80), *(char **)(v14 + 88), *(_QWORD *)(v14 + 88) - *(_QWORD *)(v14 + 80));
        v11 = *(char **)(a2 + 144);
        v16 = *(_QWORD *)(a1 + 144);
        *(_WORD *)(v16 + 104) = *((_WORD *)v11 + 52);
        if ((char *)v16 == v11)
        {
          v15 = v11;
        }
        else
        {
          sub_239107FF0((_QWORD *)(v16 + 112), *((char **)v11 + 14), *((char **)v11 + 15), *((_QWORD *)v11 + 15) - *((_QWORD *)v11 + 14));
          v15 = *(char **)(a2 + 144);
          v11 = *(char **)(a1 + 144);
        }
      }
      v11[136] = v15[136];
      *(_BYTE *)(*(_QWORD *)(a1 + 144) + 137) = *(_BYTE *)(*(_QWORD *)(a2 + 144) + 137);
      v53 = *(_QWORD *)(a2 + 144);
      v54 = *(_QWORD *)(a1 + 144);
      *(_WORD *)(v54 + 138) = *(_WORD *)(v53 + 138);
      if (v54 == v53)
        return a1;
      v55 = *(_QWORD *)(v54 + 160);
      v56 = (void **)(v54 + 144);
      v57 = *(_QWORD **)(v54 + 144);
      v59 = *(int **)(v53 + 144);
      v58 = *(int **)(v53 + 152);
      v60 = ((char *)v58 - (char *)v59) >> 7;
      if (v60 <= (v55 - (uint64_t)v57) >> 7)
      {
        v68 = (uint64_t)(*(_QWORD *)(v54 + 152) - (_QWORD)v57) >> 7;
        if (v68 >= v60)
        {
          v70 = sub_2391A9B28(v59, v58, *(_QWORD *)(v54 + 144));
          for (i = *(_QWORD **)(v54 + 152); i != (_QWORD *)v70; sub_2391A974C(v54 + 160, i))
            i -= 16;
          *(_QWORD *)(v54 + 152) = v70;
          return a1;
        }
        v69 = &v59[32 * v68];
        sub_2391A9B28(v59, v69, *(_QWORD *)(v54 + 144));
        v67 = sub_2391A98B4(v54 + 160, (uint64_t)v69, (uint64_t)v58, *(_QWORD *)(v54 + 152));
      }
      else
      {
        if (v57)
        {
          v61 = *(_QWORD **)(v54 + 152);
          v62 = *(void **)(v54 + 144);
          if (v61 != v57)
          {
            do
            {
              v61 -= 16;
              sub_2391A974C(v54 + 160, v61);
            }
            while (v61 != v57);
            v62 = *v56;
          }
          *(_QWORD *)(v54 + 152) = v57;
          operator delete(v62);
          v55 = 0;
          *v56 = 0;
          *(_QWORD *)(v54 + 152) = 0;
          *(_QWORD *)(v54 + 160) = 0;
        }
        if ((char *)v58 - (char *)v59 < 0)
          sub_23910165C();
        v63 = v55 >> 6;
        if (v55 >> 6 <= v60)
          v63 = ((char *)v58 - (char *)v59) >> 7;
        if ((unint64_t)v55 >= 0x7FFFFFFFFFFFFF80)
          v64 = 0x1FFFFFFFFFFFFFFLL;
        else
          v64 = v63;
        if (v64 >> 57)
          sub_23910165C();
        v65 = (char *)sub_2391A9C04(v54 + 160, v64);
        *(_QWORD *)(v54 + 144) = v65;
        *(_QWORD *)(v54 + 152) = v65;
        *(_QWORD *)(v54 + 160) = &v65[128 * v66];
        v67 = sub_2391A98B4(v54 + 160, (uint64_t)v59, (uint64_t)v58, (uint64_t)v65);
      }
      *(_QWORD *)(v54 + 152) = v67;
      return a1;
    default:
      return a1;
  }
}

void sub_2391A96A4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = v1;
  _Unwind_Resume(a1);
}

void sub_2391A96AC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = v1;
  _Unwind_Resume(a1);
}

void sub_2391A96B4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 104) = v2;
  _Unwind_Resume(a1);
}

void sub_2391A96BC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 104) = v2;
  _Unwind_Resume(a1);
}

void sub_2391A96C8(void ***a1)
{
  void **v1;
  _QWORD *v2;
  _QWORD *v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 16;
        sub_2391A974C((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_2391A974C(uint64_t a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = (void *)a2[11];
  if (v3)
  {
    a2[12] = v3;
    operator delete(v3);
  }
  v4 = (void *)a2[8];
  if (v4)
  {
    a2[9] = v4;
    operator delete(v4);
  }
  v5 = (void *)a2[5];
  if (v5)
  {
    a2[6] = v5;
    operator delete(v5);
  }
  v6 = (void *)a2[2];
  if (v6)
  {
    a2[3] = v6;
    operator delete(v6);
  }
}

void sub_2391A97B0(void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  void **v7;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = v4 - 56;
        v7 = (void **)(v4 - 24);
        sub_2391A9828(&v7);
        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_2391A9828(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_2391A9868((uint64_t *)v2);
    operator delete(**a1);
  }
}

void sub_2391A9868(uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;
  void *v4;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 88)
  {
    v4 = *(void **)(i - 24);
    if (v4)
    {
      *(_QWORD *)(i - 16) = v4;
      operator delete(v4);
    }
  }
  a1[1] = v2;
}

uint64_t sub_2391A98B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = a4;
  v11 = a4;
  if (a2 != a3)
  {
    v6 = a2 + 8;
    do
    {
      v8 = v6 - 8;
      v7 = *(_DWORD *)(v6 - 8);
      *(_WORD *)(v4 + 4) = *(_WORD *)(v6 - 4);
      *(_DWORD *)v4 = v7;
      sub_2391A996C(v4 + 8, (int *)v6);
      v9 = *(_QWORD *)(v6 + 104);
      *(_DWORD *)(v4 + 120) = *(_DWORD *)(v6 + 112);
      *(_QWORD *)(v4 + 112) = v9;
      v4 = v11 + 128;
      v11 += 128;
      v6 += 128;
    }
    while (v8 + 128 != a3);
  }
  return v4;
}

void sub_2391A9958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2391A9AC8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2391A996C(uint64_t a1, int *a2)
{
  int v4;

  v4 = *a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_2391A9A50((_QWORD *)(a1 + 8), *((const void **)a2 + 1), *((_QWORD *)a2 + 2), *((_QWORD *)a2 + 2) - *((_QWORD *)a2 + 1));
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_2391A9A50((_QWORD *)(a1 + 32), *((const void **)a2 + 4), *((_QWORD *)a2 + 5), *((_QWORD *)a2 + 5) - *((_QWORD *)a2 + 4));
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_239189290((_QWORD *)(a1 + 56), *((const void **)a2 + 7), *((_QWORD *)a2 + 8), *((_QWORD *)a2 + 8) - *((_QWORD *)a2 + 7));
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  sub_239189290((_QWORD *)(a1 + 80), *((const void **)a2 + 10), *((_QWORD *)a2 + 11), *((_QWORD *)a2 + 11) - *((_QWORD *)a2 + 10));
  return a1;
}

void sub_2391A9A0C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_239104B64(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2391A9A50(_QWORD *result, const void *a2, uint64_t a3, size_t __sz)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (__sz)
  {
    v6 = result;
    result = sub_23910161C(result, __sz);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_2391A9AAC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2391A9AC8(uint64_t a1)
{
  _QWORD **v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = *(_QWORD **)(a1 + 8);
    v2 = *(_QWORD ***)(a1 + 16);
    v4 = *v2;
    v5 = (_QWORD *)*v3;
    if (*v2 != (_QWORD *)*v3)
    {
      v6 = *(_QWORD *)a1;
      do
      {
        v4 -= 16;
        sub_2391A974C(v6, v4);
      }
      while (v4 != v5);
    }
  }
  return a1;
}

uint64_t sub_2391A9B28(int *a1, int *a2, uint64_t a3)
{
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  char **v8;
  int v9;
  int *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = 0;
    v6 = a1 + 12;
    do
    {
      v7 = a3 + v5 * 4;
      v8 = (char **)&v6[v5];
      v10 = &v6[v5 - 12];
      v9 = *v10;
      *(_WORD *)(v7 + 4) = v6[v5 - 11];
      *(_DWORD *)v7 = v9;
      *(_DWORD *)(v7 + 8) = v6[v5 - 10];
      if ((int *)(a3 + v5 * 4) != v10)
      {
        sub_239107FF0((_QWORD *)(v7 + 16), *(v8 - 4), *(v8 - 3), *(v8 - 3) - *(v8 - 4));
        sub_239107FF0((_QWORD *)(v7 + 40), *(v8 - 1), *v8, *v8 - *(v8 - 1));
        sub_239107FF0((_QWORD *)(v7 + 64), v8[2], v8[3], v8[3] - v8[2]);
        sub_239107FF0((_QWORD *)(v7 + 88), v8[5], v8[6], v8[6] - v8[5]);
      }
      v11 = *(_QWORD *)&v6[v5 + 16];
      *(_WORD *)(v7 + 120) = v6[v5 + 18];
      *(_QWORD *)(v7 + 112) = v11;
      v5 += 32;
    }
    while (v10 + 32 != a2);
    a3 += v5 * 4;
  }
  return a3;
}

void *sub_2391A9C04(uint64_t a1, unint64_t a2)
{
  if (a2 >> 57)
    sub_239105DBC();
  return operator new(a2 << 7);
}

uint64_t sub_2391A9C38(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  uint64_t v4;
  __int128 *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  uint64_t v13;
  _QWORD v14[2];
  char v15;

  v4 = a4;
  v13 = a4;
  v14[0] = a4;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = v14;
  v12 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      v7 = *v6;
      *(_OWORD *)(v4 + 13) = *(__int128 *)((char *)v6 + 13);
      *(_OWORD *)v4 = v7;
      *(_QWORD *)(v4 + 32) = 0;
      *(_QWORD *)(v4 + 40) = 0;
      *(_QWORD *)(v4 + 48) = 0;
      v8 = *((_QWORD *)v6 + 4);
      v9 = *((_QWORD *)v6 + 5);
      v14[1] = v4 + 32;
      v15 = 0;
      if (v9 != v8)
      {
        sub_2391A9D58((_QWORD *)(v4 + 32), 0x2E8BA2E8BA2E8BA3 * ((v9 - v8) >> 3));
        *(_QWORD *)(v4 + 40) = sub_2391A9DAC(v4 + 48, v8, v9, *(_QWORD *)(v4 + 40));
        v4 = v14[0];
      }
      v4 += 56;
      v14[0] = v4;
      v6 = (__int128 *)((char *)v6 + 56);
    }
    while (v6 != a3);
  }
  v12 = 1;
  sub_2391A9EE4((uint64_t)v11);
  return v4;
}

void sub_2391A9D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15)
{
  sub_2391A9828(&a15);
  sub_2391A9EE4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_2391A9D58(_QWORD *a1, unint64_t a2)
{
  uint64_t v3;
  char *result;

  if (a2 >= 0x2E8BA2E8BA2E8BBLL)
    sub_23910165C();
  v3 = 88 * a2;
  result = (char *)operator new(88 * a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[v3];
  return result;
}

uint64_t sub_2391A9DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v12[3];
  char v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a4;
  v14 = a4;
  v15 = a4;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  v13 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *(_QWORD *)v4 = *(_QWORD *)v6;
      *(_BYTE *)(v4 + 8) = *(_BYTE *)(v6 + 8);
      v7 = *(_OWORD *)(v6 + 16);
      *(_DWORD *)(v4 + 32) = *(_DWORD *)(v6 + 32);
      *(_OWORD *)(v4 + 16) = v7;
      v8 = *(_OWORD *)(v6 + 40);
      v9 = *(_QWORD *)(v6 + 53);
      *(_QWORD *)(v4 + 64) = 0;
      v10 = (_QWORD *)(v4 + 64);
      *(_QWORD *)((char *)v10 - 11) = v9;
      *(_OWORD *)(v10 - 3) = v8;
      v10[1] = 0;
      v10[2] = 0;
      sub_239189290(v10, *(const void **)(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 72) - *(_QWORD *)(v6 + 64));
      v4 = v15 + 88;
      v15 += 88;
      v6 += 88;
    }
    while (v6 != a3);
  }
  v13 = 1;
  sub_2391A9E88((uint64_t)v12);
  return v4;
}

void sub_2391A9E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2391A9E88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2391A9E88(uint64_t a1)
{
  uint64_t v3;
  uint64_t i;
  void *v5;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = **(_QWORD **)(a1 + 8);
    for (i = **(_QWORD **)(a1 + 16); i != v3; i -= 88)
    {
      v5 = *(void **)(i - 24);
      if (v5)
      {
        *(_QWORD *)(i - 16) = v5;
        operator delete(v5);
      }
    }
  }
  return a1;
}

uint64_t sub_2391A9EE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void **v6;

  if (!*(_BYTE *)(a1 + 24))
  {
    v2 = **(_QWORD **)(a1 + 8);
    v3 = **(_QWORD **)(a1 + 16);
    if (v3 != v2)
    {
      do
      {
        v4 = v3 - 56;
        v6 = (void **)(v3 - 24);
        sub_2391A9828(&v6);
        v3 = v4;
      }
      while (v4 != v2);
    }
  }
  return a1;
}

uint64_t sub_2391A9F50(__int128 *a1, __int128 *a2, uint64_t a3)
{
  __int128 *i;
  __int128 v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char **v17;
  uint64_t v18;
  uint64_t j;
  void *v20;

  if (a1 != a2)
  {
    for (i = a1; i != a2; i = (__int128 *)((char *)i + 56))
    {
      v6 = *i;
      *(_OWORD *)(a3 + 13) = *(__int128 *)((char *)i + 13);
      *(_OWORD *)a3 = v6;
      if ((__int128 *)a3 != i)
      {
        v8 = (void **)(a3 + 32);
        v7 = *(_QWORD *)(a3 + 32);
        v10 = *((_QWORD *)i + 4);
        v9 = *((_QWORD *)i + 5);
        v11 = 0x2E8BA2E8BA2E8BA3 * ((v9 - v10) >> 3);
        v12 = *(_QWORD *)(a3 + 48);
        if (0x2E8BA2E8BA2E8BA3 * ((v12 - v7) >> 3) >= v11)
        {
          if (0x2E8BA2E8BA2E8BA3 * ((*(_QWORD *)(a3 + 40) - v7) >> 3) >= v11)
          {
            v18 = sub_2391AA130(*((char ***)i + 4), *((char ***)i + 5), v7);
            for (j = *(_QWORD *)(a3 + 40); j != v18; j -= 88)
            {
              v20 = *(void **)(j - 24);
              if (v20)
              {
                *(_QWORD *)(j - 16) = v20;
                operator delete(v20);
              }
            }
            *(_QWORD *)(a3 + 40) = v18;
            goto LABEL_22;
          }
          v17 = (char **)(v10 + 8 * ((*(_QWORD *)(a3 + 40) - v7) >> 3));
          sub_2391AA130(*((char ***)i + 4), v17, v7);
          v16 = sub_2391A9DAC(a3 + 48, (uint64_t)v17, v9, *(_QWORD *)(a3 + 40));
        }
        else
        {
          if (v7)
          {
            sub_2391A9868((uint64_t *)(a3 + 32));
            operator delete(*v8);
            v12 = 0;
            *v8 = 0;
            *(_QWORD *)(a3 + 40) = 0;
            *(_QWORD *)(a3 + 48) = 0;
          }
          if (v11 > 0x2E8BA2E8BA2E8BALL)
            sub_23910165C();
          v13 = 0x2E8BA2E8BA2E8BA3 * (v12 >> 3);
          v14 = 2 * v13;
          if (2 * v13 <= v11)
            v14 = 0x2E8BA2E8BA2E8BA3 * ((v9 - v10) >> 3);
          if (v13 >= 0x1745D1745D1745DLL)
            v15 = 0x2E8BA2E8BA2E8BALL;
          else
            v15 = v14;
          sub_2391A9D58((_QWORD *)(a3 + 32), v15);
          v16 = sub_2391A9DAC(a3 + 48, v10, v9, *(_QWORD *)(a3 + 40));
        }
        *(_QWORD *)(a3 + 40) = v16;
      }
LABEL_22:
      a3 += 56;
    }
  }
  return a3;
}

void sub_2391AA120(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 40) = v2;
  _Unwind_Resume(a1);
}

void sub_2391AA128(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 40) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_2391AA130(char **a1, char **a2, uint64_t a3)
{
  char **v5;
  char **v6;
  __int128 v7;
  __int128 v8;

  if (a1 != a2)
  {
    v5 = a1 + 8;
    do
    {
      v6 = v5 - 8;
      *(_QWORD *)a3 = *(v5 - 8);
      *(_BYTE *)(a3 + 8) = *((_BYTE *)v5 - 56);
      v7 = *((_OWORD *)v5 - 3);
      *(_DWORD *)(a3 + 31) = *(_DWORD *)((char *)v5 - 33);
      *(_OWORD *)(a3 + 16) = v7;
      v8 = *(_OWORD *)(v5 - 3);
      *(_QWORD *)(a3 + 53) = *(char **)((char *)v5 - 11);
      *(_OWORD *)(a3 + 40) = v8;
      if ((char **)a3 != v5 - 8)
        sub_239107FF0((_QWORD *)(a3 + 64), *v5, v5[1], v5[1] - *v5);
      a3 += 88;
      v5 += 11;
    }
    while (v6 + 11 != a2);
  }
  return a3;
}

unsigned __int16 *sub_2391AA1C8(unsigned __int16 *a1)
{
  _QWORD *v2;
  uint64_t v3;
  unsigned int v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  void **v16[2];

  v16[1] = *(void ***)MEMORY[0x24BDAC8D0];
  switch(*a1)
  {
    case 1u:
      v2 = (_QWORD *)*((_QWORD *)a1 + 1);
      if (!v2)
        goto LABEL_25;
      v3 = (uint64_t)sub_2391AB048(v2);
      v4 = -861440881;
      goto LABEL_17;
    case 2u:
    case 3u:
      goto LABEL_5;
    case 4u:
      v6 = *((_QWORD *)a1 + 1);
      if (!v6)
        goto LABEL_25;
      v3 = sub_2391AB144(v6);
      v4 = -2009602957;
      goto LABEL_17;
    case 5u:
      v7 = *((_QWORD *)a1 + 1);
      if (!v7)
        goto LABEL_25;
      sub_239199F0C(v7 + 152);
      v16[0] = (void **)(v7 + 120);
      sub_2391AB204(v16);
      v16[0] = (void **)(v7 + 96);
      sub_2391AB204(v16);
      v8 = *(void **)(v7 + 64);
      if (v8)
      {
        *(_QWORD *)(v7 + 72) = v8;
        operator delete(v8);
      }
      v9 = *(void **)(v7 + 40);
      if (v9)
      {
        *(_QWORD *)(v7 + 48) = v9;
        operator delete(v9);
      }
      v10 = *(void **)(v7 + 16);
      if (v10)
      {
        *(_QWORD *)(v7 + 24) = v10;
        operator delete(v10);
      }
      v3 = v7;
      v4 = -1737996582;
LABEL_17:
      v11 = v4 | 0x1030C4000000000;
      goto LABEL_24;
    case 6u:
      v12 = (_QWORD *)*((_QWORD *)a1 + 1);
      if (!v12)
        goto LABEL_25;
      v13 = (void *)v12[58];
      if (v13)
      {
        v12[59] = v13;
        operator delete(v13);
      }
      sub_239199F0C((uint64_t)(v12 + 12));
      v14 = (void *)v12[3];
      if (v14)
      {
        v12[4] = v14;
        operator delete(v14);
      }
      v3 = (uint64_t)v12;
      v11 = 0x1010C40F88FA712;
LABEL_24:
      MEMORY[0x23B838844](v3, v11);
LABEL_25:
      *((_QWORD *)a1 + 1) = 0;
      break;
    default:
      if (*a1 != 0xFFFF)
      {
LABEL_5:
        v5 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          v16[0] = (void **)0x20304000100;
          _os_log_error_impl(&dword_2390FD000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v16, 8u);
        }
      }
      break;
  }
  return a1;
}

uint64_t sub_2391AA398(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  int v12;
  int v13;
  NSObject *v14;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  unsigned __int16 v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  NSObject *v33;
  NSObject *v34;
  int v35;
  _DWORD v36[2];
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_BYTE *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 8) = 0;
  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 8);
  v5 = 0x8000;
  do
  {
    sub_23918C32C((uint64_t **)v3, 0);
    v6 = v5 > 1;
    v5 >>= 1;
  }
  while (v6);
  v7 = *(unsigned __int8 *)(v3 + 16);
  if ((_DWORD)v7)
  {
    v8 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v36[0]) = 0;
      _os_log_debug_impl(&dword_2390FD000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PE_UlpPdu, error in encoding version", (uint8_t *)v36, 2u);
    }
LABEL_15:
    sub_23918C1A0(v7, *(_DWORD *)(*a1 + 8), *(_DWORD *)(*a1 + 12), "asn1PE_UlpPdu");
    return v7;
  }
  v9 = *a1;
  v10 = (unsigned __int8 *)a1[1];
  v11 = sub_23918C42C(*a1, 0, 255, v10[2]);
  if ((_DWORD)v11)
  {
    v7 = v11;
    v12 = *(_DWORD *)(v9 + 8);
    v13 = *(_DWORD *)(v9 + 12);
    goto LABEL_13;
  }
  v11 = sub_23918C42C(v9, 0, 255, v10[3]);
  if ((_DWORD)v11)
  {
    v7 = v11;
    v12 = *(_DWORD *)(v9 + 8);
    v13 = *(_DWORD *)(v9 + 12);
    goto LABEL_13;
  }
  v11 = sub_23918C42C(v9, 0, 255, v10[4]);
  if ((_DWORD)v11)
  {
    v7 = v11;
    v12 = *(_DWORD *)(v9 + 8);
    v13 = *(_DWORD *)(v9 + 12);
LABEL_13:
    sub_23918C1A0(v11, v12, v13, "asn1PE_Version");
    v14 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v36[0]) = 0;
      _os_log_debug_impl(&dword_2390FD000, v14, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PE_UlpPdu, error in encoding sessionId", (uint8_t *)v36, 2u);
    }
    goto LABEL_15;
  }
  v16 = sub_2391B6E00(*a1, a1[1] + 24);
  if ((_DWORD)v16)
  {
    v7 = v16;
    v17 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v36[0]) = 0;
      _os_log_debug_impl(&dword_2390FD000, v17, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PE_UlpPdu, error in encoding", (uint8_t *)v36, 2u);
    }
    goto LABEL_15;
  }
  v18 = *a1;
  v19 = a1[1];
  sub_23918C32C((uint64_t **)*a1, 0);
  v7 = *(unsigned __int8 *)(v18 + 16);
  if (*(_BYTE *)(v18 + 16))
  {
    v20 = *(_DWORD *)(v18 + 8);
    v21 = *(_DWORD *)(v18 + 12);
    LODWORD(v22) = *(unsigned __int8 *)(v18 + 16);
    goto LABEL_41;
  }
  v22 = sub_23918C42C(v18, 0, 7, *(unsigned __int16 *)(v19 + 8) - 1);
  if ((_DWORD)v22)
  {
    v7 = v22;
    v20 = *(_DWORD *)(v18 + 8);
    v21 = *(_DWORD *)(v18 + 12);
    goto LABEL_41;
  }
  v23 = *(unsigned __int16 *)(v19 + 8);
  switch(v23)
  {
    case 6:
      v24 = sub_23918DCDC(v18, *(_QWORD *)(v19 + 16));
      break;
    case 5:
      v24 = sub_2391AE2E8(v18, *(_QWORD *)(v19 + 16));
      break;
    case 4:
      v24 = sub_2391AB738(v18, *(_QWORD *)(v19 + 16));
      break;
    default:
      v7 = 1;
      sub_23918C1A0(1u, *(_DWORD *)(v18 + 8), *(_DWORD *)(v18 + 12), "asn1PE_UlpMessage");
      goto LABEL_40;
  }
  v7 = v24;
  if ((_DWORD)v24)
  {
LABEL_40:
    v20 = *(_DWORD *)(v18 + 8);
    v21 = *(_DWORD *)(v18 + 12);
    LODWORD(v22) = v7;
LABEL_41:
    sub_23918C1A0(v22, v20, v21, "asn1PE_UlpMessage");
    v33 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v36[0]) = 0;
      _os_log_debug_impl(&dword_2390FD000, v33, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PE_UlpPdu, error in encoding ULP message", (uint8_t *)v36, 2u);
    }
    goto LABEL_15;
  }
  v25 = *a1;
  v27 = *(_DWORD *)(*a1 + 8);
  v26 = *(_DWORD *)(*a1 + 12);
  if (v26)
    v28 = v27 + 1;
  else
    v28 = *(_DWORD *)(*a1 + 8);
  *(_WORD *)a1[1] = v28;
  *(_QWORD *)(v25 + 8) = v4;
  v7 = sub_23918C42C(v25, 0, 0xFFFF, v28);
  v29 = *a1;
  if (!(_DWORD)v7)
  {
    *(_DWORD *)(v29 + 8) = v27;
    *(_DWORD *)(v29 + 12) = v26;
  }
  v30 = *(unint64_t **)v29;
  v31 = *(unsigned __int16 *)a1[1];
  v32 = v30[1] - *v30;
  if (v31 <= v32)
  {
    if (v31 < v32)
      v30[1] = *v30 + v31;
  }
  else
  {
    sub_239101670(v30, v31 - v32);
  }
  v34 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v35 = *(unsigned __int16 *)a1[1];
    v36[0] = 67109120;
    v36[1] = v35;
    _os_log_debug_impl(&dword_2390FD000, v34, OS_LOG_TYPE_DEBUG, "#gpsd,#supl lengh of encoded message %d", (uint8_t *)v36, 8u);
  }
  return v7;
}

uint64_t sub_2391AA818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int v9;
  int v10;
  NSObject *v11;
  NSObject *v12;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  NSObject *v22;
  __int16 v23;
  __int16 v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _DWORD *v43;
  char *v44;
  int v45;
  int v46;
  int v47;
  NSObject *v48;
  NSObject *v49;
  int v50;
  uint8_t buf[8];
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)a1;
  *(_BYTE *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 8) = 0;
  v3 = sub_23918C5A0(*(_QWORD *)a1, 0, 0xFFFFu, *(_WORD **)(a1 + 8));
  if ((_DWORD)v3)
  {
    v4 = v3;
    v5 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v5, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PD_UlpPdu, decoding version failed", buf, 2u);
    }
LABEL_13:
    sub_23918C1A0(v4, *(_DWORD *)(*(_QWORD *)a1 + 8), *(_DWORD *)(*(_QWORD *)a1 + 12), "asn1PD_UlpPdu");
    goto LABEL_14;
  }
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE **)(a1 + 8);
  v8 = sub_23918C4D0(*(_QWORD *)a1, 0, 0xFFu, v7 + 2);
  if ((_DWORD)v8)
  {
    v4 = v8;
    v9 = *(_DWORD *)(v6 + 8);
    v10 = *(_DWORD *)(v6 + 12);
    goto LABEL_11;
  }
  v8 = sub_23918C4D0(v6, 0, 0xFFu, v7 + 3);
  if ((_DWORD)v8)
  {
    v4 = v8;
    v9 = *(_DWORD *)(v6 + 8);
    v10 = *(_DWORD *)(v6 + 12);
    goto LABEL_11;
  }
  v8 = sub_23918C4D0(v6, 0, 0xFFu, v7 + 4);
  if ((_DWORD)v8)
  {
    v4 = v8;
    v9 = *(_DWORD *)(v6 + 8);
    v10 = *(_DWORD *)(v6 + 12);
LABEL_11:
    sub_23918C1A0(v8, v9, v10, "asn1PD_Version");
    v11 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v11, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PD_UlpPdu, decoding session ID failed", buf, 2u);
    }
    goto LABEL_13;
  }
  v14 = sub_2391B6ED8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8) + 24);
  if ((_DWORD)v14)
  {
    v4 = v14;
    v15 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v15, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PD_UlpPdu, decoding ULP message failed", buf, 2u);
    }
    goto LABEL_13;
  }
  v16 = *(_QWORD *)a1;
  v17 = *(_QWORD *)(a1 + 8);
  v18 = sub_23918C3B4(*(uint64_t ***)a1);
  v4 = *(unsigned __int8 *)(v16 + 16);
  if (*(_BYTE *)(v16 + 16))
  {
LABEL_28:
    v22 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v22, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PD_UlpPdu, decoding failed", buf, 2u);
    }
    sub_23918C1A0(v4, *(_DWORD *)(*(_QWORD *)a1 + 8), *(_DWORD *)(*(_QWORD *)a1 + 12), "asn1PD_UlpPdu");
    goto LABEL_14;
  }
  if (!v18)
  {
    v50 = 0;
    v19 = sub_23918C740(v16, 0, 7u, &v50);
    v4 = v19;
    if ((_DWORD)v19)
    {
      v20 = *(_DWORD *)(v16 + 8);
      v21 = *(_DWORD *)(v16 + 12);
      goto LABEL_27;
    }
    v23 = v50;
    v24 = v50 + 1;
    if (v50 + 1 != *(unsigned __int16 *)(v17 + 8))
    {
      switch(*(_WORD *)(v17 + 8))
      {
        case 1:
          v26 = (_QWORD *)(v17 + 16);
          v25 = *(_QWORD **)(v17 + 16);
          if (!v25)
            goto LABEL_53;
          v27 = (uint64_t)sub_2391AB048(v25);
          v28 = -861440881;
          goto LABEL_45;
        case 4:
          v26 = (_QWORD *)(v17 + 16);
          v29 = *(_QWORD *)(v17 + 16);
          if (!v29)
            goto LABEL_53;
          v27 = sub_2391AB144(v29);
          v28 = -2009602957;
          goto LABEL_45;
        case 5:
          v26 = (_QWORD *)(v17 + 16);
          v30 = *(_QWORD **)(v17 + 16);
          if (!v30)
            goto LABEL_53;
          sub_239199F0C((uint64_t)(v30 + 19));
          *(_QWORD *)buf = v30 + 15;
          sub_2391AB204((void ***)buf);
          *(_QWORD *)buf = v30 + 12;
          sub_2391AB204((void ***)buf);
          v31 = (void *)v30[8];
          if (v31)
          {
            v30[9] = v31;
            operator delete(v31);
          }
          v32 = (void *)v30[5];
          if (v32)
          {
            v30[6] = v32;
            operator delete(v32);
          }
          v33 = (void *)v30[2];
          if (v33)
          {
            v30[3] = v33;
            operator delete(v33);
          }
          v27 = (uint64_t)v30;
          v28 = -1737996582;
LABEL_45:
          v34 = v28 | 0x1030C4000000000;
          break;
        case 6:
          v26 = (_QWORD *)(v17 + 16);
          v35 = *(_QWORD **)(v17 + 16);
          if (!v35)
            goto LABEL_53;
          v36 = (void *)v35[58];
          if (v36)
          {
            v35[59] = v36;
            operator delete(v36);
          }
          sub_239199F0C((uint64_t)(v35 + 12));
          v37 = (void *)v35[3];
          if (v37)
          {
            v35[4] = v37;
            operator delete(v37);
          }
          v27 = (uint64_t)v35;
          v34 = 0x1010C40F88FA712;
          break;
        default:
          goto LABEL_54;
      }
      MEMORY[0x23B838844](v27, v34);
LABEL_53:
      *v26 = 0;
    }
LABEL_54:
    *(_WORD *)(v17 + 8) = v24;
    if (v23 == 5)
    {
      v41 = *(_QWORD *)(v17 + 16);
      if (!v41)
      {
        v42 = (char *)operator new(0x1E8uLL, MEMORY[0x24BEDB6B8]);
        if (!v42)
        {
          *(_QWORD *)(v17 + 16) = 0;
          v49 = qword_2542CF618;
          if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&buf[4] = 1537;
            goto LABEL_87;
          }
LABEL_85:
          v4 = 2;
          *(_BYTE *)(v16 + 16) = 2;
          goto LABEL_28;
        }
        v41 = (uint64_t)v42;
        *(_QWORD *)v42 = 0;
        *((_DWORD *)v42 + 2) = 0;
        *((_QWORD *)v42 + 4) = 0;
        *((_QWORD *)v42 + 5) = 0;
        *((_QWORD *)v42 + 3) = 0;
        v42[60] = -1;
        *((_QWORD *)v42 + 8) = 0;
        *((_DWORD *)v42 + 18) = 0;
        v42[76] = -1;
        *((_WORD *)v42 + 39) = 0;
        v42[80] = 0;
        *((_DWORD *)v42 + 14) = 0;
        *((_QWORD *)v42 + 6) = 0;
        *((_QWORD *)v42 + 11) = 255;
        *((_DWORD *)v42 + 4) = 0;
        *((_QWORD *)v42 + 59) = 0;
        *((_QWORD *)v42 + 60) = 0;
        *((_QWORD *)v42 + 58) = 0;
        *(_OWORD *)(v42 + 441) = 0u;
        *((_OWORD *)v42 + 26) = 0u;
        *((_OWORD *)v42 + 27) = 0u;
        *((_OWORD *)v42 + 24) = 0u;
        *((_OWORD *)v42 + 25) = 0u;
        *((_OWORD *)v42 + 22) = 0u;
        *((_OWORD *)v42 + 23) = 0u;
        *((_OWORD *)v42 + 20) = 0u;
        *((_OWORD *)v42 + 21) = 0u;
        *((_OWORD *)v42 + 18) = 0u;
        *((_OWORD *)v42 + 19) = 0u;
        *((_OWORD *)v42 + 16) = 0u;
        *((_OWORD *)v42 + 17) = 0u;
        *((_OWORD *)v42 + 14) = 0u;
        *((_OWORD *)v42 + 15) = 0u;
        *((_OWORD *)v42 + 12) = 0u;
        *((_OWORD *)v42 + 13) = 0u;
        *((_OWORD *)v42 + 10) = 0u;
        *((_OWORD *)v42 + 11) = 0u;
        *((_OWORD *)v42 + 8) = 0u;
        *((_OWORD *)v42 + 9) = 0u;
        *((_OWORD *)v42 + 6) = 0u;
        *((_OWORD *)v42 + 7) = 0u;
        *(_QWORD *)(v17 + 16) = v42;
      }
      v40 = sub_23918DE50(v16, v41);
    }
    else
    {
      if (v23 != 4)
      {
        if (v23)
        {
          *(_BYTE *)(v16 + 16) = 4;
          sub_23918C1A0(4u, *(_DWORD *)(v16 + 8), *(_DWORD *)(v16 + 12), "asn1PD_UlpMessage");
          v4 = 4;
          goto LABEL_79;
        }
        v38 = *(_QWORD *)(v17 + 16);
        if (v38)
          goto LABEL_60;
        v39 = operator new(0x338uLL, MEMORY[0x24BEDB6B8]);
        if (v39)
        {
          v38 = (uint64_t)v39;
          *(_QWORD *)(v17 + 16) = sub_2391A53B4((uint64_t)v39);
LABEL_60:
          v40 = sub_2391A5490(v16, v38);
          goto LABEL_69;
        }
        *(_QWORD *)(v17 + 16) = 0;
        v49 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = 1537;
LABEL_87:
          _os_log_error_impl(&dword_2390FD000, v49, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
          goto LABEL_85;
        }
        goto LABEL_85;
      }
      v43 = *(_DWORD **)(v17 + 16);
      if (!v43)
      {
        v44 = (char *)operator new(0x200uLL, MEMORY[0x24BEDB6B8]);
        if (!v44)
        {
          *(_QWORD *)(v17 + 16) = 0;
          v49 = qword_2542CF618;
          if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&buf[4] = 1537;
            goto LABEL_87;
          }
          goto LABEL_85;
        }
        v43 = v44;
        *(_OWORD *)(v44 + 136) = 0u;
        *(_OWORD *)(v44 + 120) = 0u;
        *(_OWORD *)(v44 + 104) = 0u;
        *(_OWORD *)(v44 + 88) = 0u;
        *(_OWORD *)(v44 + 72) = 0u;
        *(_OWORD *)(v44 + 56) = 0u;
        *(_OWORD *)(v44 + 40) = 0u;
        *(_OWORD *)(v44 + 24) = 0u;
        *(_OWORD *)(v44 + 8) = 0u;
        v44[144] = -1;
        *(_OWORD *)(v44 + 168) = 0u;
        *(_OWORD *)(v44 + 184) = 0u;
        *(_OWORD *)(v44 + 200) = 0u;
        *(_OWORD *)(v44 + 216) = 0u;
        *(_OWORD *)(v44 + 232) = 0u;
        *(_OWORD *)(v44 + 248) = 0u;
        *(_OWORD *)(v44 + 152) = 0u;
        *((_QWORD *)v44 + 63) = 0;
        *(_OWORD *)(v44 + 408) = 0u;
        *(_OWORD *)(v44 + 424) = 0u;
        *(_OWORD *)(v44 + 440) = 0u;
        *(_OWORD *)(v44 + 456) = 0u;
        *(_OWORD *)(v44 + 472) = 0u;
        *(_OWORD *)(v44 + 488) = 0u;
        *(_OWORD *)(v44 + 264) = 0u;
        *(_OWORD *)(v44 + 280) = 0u;
        *(_OWORD *)(v44 + 296) = 0u;
        *(_OWORD *)(v44 + 312) = 0u;
        *(_OWORD *)(v44 + 328) = 0u;
        *(_OWORD *)(v44 + 344) = 0u;
        *(_OWORD *)(v44 + 360) = 0u;
        *(_OWORD *)(v44 + 376) = 0u;
        *(_OWORD *)(v44 + 392) = 0u;
        *(_DWORD *)v44 = 0;
        *(_QWORD *)(v17 + 16) = v44;
      }
      v40 = sub_2391AE380(v16, v43);
    }
LABEL_69:
    v4 = v40;
    if (!(_DWORD)v40)
      goto LABEL_70;
LABEL_79:
    sub_23918C1A0(v4, *(_DWORD *)(v16 + 8), *(_DWORD *)(v16 + 12), "asn1PD_UlpMessage");
    goto LABEL_28;
  }
  sub_23918D714(v16);
  if ((_DWORD)v19)
  {
    v4 = v19;
    v20 = *(_DWORD *)(v16 + 8);
    v21 = *(_DWORD *)(v16 + 12);
LABEL_27:
    sub_23918C1A0(v19, v20, v21, "asn1PD_UlpMessage");
    goto LABEL_28;
  }
LABEL_70:
  v46 = *(_DWORD *)(*(_QWORD *)a1 + 8);
  v45 = *(_DWORD *)(*(_QWORD *)a1 + 12);
  if (v45)
    v47 = v46 + 1;
  else
    v47 = *(_DWORD *)(*(_QWORD *)a1 + 8);
  if (v47 == **(unsigned __int16 **)(a1 + 8))
    return 0;
  v48 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_2390FD000, v48, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PD_UlpPdu, message length check failed", buf, 2u);
    v46 = *(_DWORD *)(*(_QWORD *)a1 + 8);
    v45 = *(_DWORD *)(*(_QWORD *)a1 + 12);
  }
  sub_23918C1A0(6u, v46, v45, "asn1PD_UlpPdu");
  v4 = 6;
LABEL_14:
  v12 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = 770;
    _os_log_error_impl(&dword_2390FD000, v12, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
  return v4;
}

_QWORD *sub_2391AB048(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v2 = (void *)a1[95];
  if (v2)
  {
    a1[96] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[91];
  if (v3)
  {
    a1[92] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[82];
  if (v4)
  {
    a1[83] = v4;
    operator delete(v4);
  }
  v5 = (void *)a1[79];
  if (v5)
  {
    a1[80] = v5;
    operator delete(v5);
  }
  v6 = (void *)a1[76];
  if (v6)
  {
    a1[77] = v6;
    operator delete(v6);
  }
  if (a1[49])
  {
    sub_239189244(a1 + 49);
    operator delete((void *)a1[49]);
  }
  v7 = (void *)a1[32];
  if (v7)
  {
    a1[33] = v7;
    operator delete(v7);
  }
  v8 = (void *)a1[29];
  if (v8)
  {
    a1[30] = v8;
    operator delete(v8);
  }
  v9 = (void *)a1[22];
  if (v9)
  {
    a1[23] = v9;
    operator delete(v9);
  }
  v10 = (void *)a1[19];
  if (v10)
  {
    a1[20] = v10;
    operator delete(v10);
  }
  v11 = (void *)a1[16];
  if (v11)
  {
    a1[17] = v11;
    operator delete(v11);
  }
  v12 = (void *)a1[10];
  if (v12)
  {
    a1[11] = v12;
    operator delete(v12);
  }
  v13 = (void *)a1[6];
  if (v13)
  {
    a1[7] = v13;
    operator delete(v13);
  }
  return a1;
}

uint64_t sub_2391AB144(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void **v9;

  v2 = *(void **)(a1 + 1280);
  if (v2)
  {
    *(_QWORD *)(a1 + 1288) = v2;
    operator delete(v2);
  }
  sub_239199F0C(a1 + 920);
  v9 = (void **)(a1 + 888);
  sub_2391AB204(&v9);
  v9 = (void **)(a1 + 864);
  sub_2391AB204(&v9);
  v3 = *(void **)(a1 + 832);
  if (v3)
  {
    *(_QWORD *)(a1 + 840) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 808);
  if (v4)
  {
    *(_QWORD *)(a1 + 816) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 784);
  if (v5)
  {
    *(_QWORD *)(a1 + 792) = v5;
    operator delete(v5);
  }
  sub_239199F0C(a1 + 408);
  v6 = *(void **)(a1 + 336);
  if (v6)
  {
    *(_QWORD *)(a1 + 344) = v6;
    operator delete(v6);
  }
  sub_2391A8BC0(a1 + 168);
  v7 = *(void **)(a1 + 144);
  if (v7)
  {
    *(_QWORD *)(a1 + 152) = v7;
    operator delete(v7);
  }
  return a1;
}

void sub_2391AB204(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_23918AE9C((uint64_t *)v2);
    operator delete(**a1);
  }
}

uint64_t sub_2391AB244(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  v4 = sub_23918C42C(a1, 1, 31, (unint64_t)(a2[1] - *a2) >> 3);
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
LABEL_14:
    sub_23918C1A0(v4, v6, v7, "asn1PE_SatelliteInfo");
    return v5;
  }
  v8 = *a2;
  if (a2[1] != *a2)
  {
    v9 = 0;
    v10 = 0;
    while (1)
    {
      sub_23918C32C((uint64_t **)a1, 0);
      v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(_BYTE *)(a1 + 16))
      {
        v12 = *(_DWORD *)(a1 + 8);
        v13 = *(_DWORD *)(a1 + 12);
        LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
        goto LABEL_13;
      }
      v11 = sub_23918C42C(a1, 0, 63, *(_DWORD *)(v8 + v9));
      if ((_DWORD)v11)
      {
        v5 = v11;
        v12 = *(_DWORD *)(a1 + 8);
        v13 = *(_DWORD *)(a1 + 12);
        goto LABEL_13;
      }
      v11 = sub_23918C42C(a1, 0, 255, *(_DWORD *)(v8 + v9 + 4));
      if ((_DWORD)v11)
        break;
      ++v10;
      v8 = *a2;
      v9 += 8;
      if (v10 >= (a2[1] - *a2) >> 3)
        return 0;
    }
    v5 = v11;
    v12 = *(_DWORD *)(a1 + 8);
    v13 = *(_DWORD *)(a1 + 12);
LABEL_13:
    sub_23918C1A0(v11, v12, v13, "asn1PE_SatelliteInfoElement");
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v4) = v5;
    goto LABEL_14;
  }
  return 0;
}

uint64_t sub_2391AB388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_13:
    sub_23918C1A0(v7, v5, v6, "asn1PE_NavigationModel");
    return v4;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_13;
  }
  v7 = sub_23918C42C(a1, 0, 1023, *(unsigned __int16 *)(a2 + 4));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  v7 = sub_23918C42C(a1, 0, 167, *(unsigned __int8 *)(a2 + 6));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  v7 = sub_23918C42C(a1, 0, 31, *(unsigned __int8 *)(a2 + 7));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  v7 = sub_23918C42C(a1, 0, 10, *(unsigned __int8 *)(a2 + 8));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  if (!*(_DWORD *)a2)
    return 0;
  v7 = sub_2391AB244(a1, (uint64_t *)(a2 + 16));
  v4 = v7;
  if ((_DWORD)v7)
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  return v4;
}

uint64_t sub_2391AB504(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_23:
    sub_23918C1A0(v7, v5, v6, "asn1PE_RequestedAssistData");
    return v4;
  }
  sub_23918C32C((uint64_t **)a1, *a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_23918C32C((uint64_t **)a1, a2[1]);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_23918C32C((uint64_t **)a1, a2[2]);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_23918C32C((uint64_t **)a1, a2[3]);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_23918C32C((uint64_t **)a1, a2[4]);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_23918C32C((uint64_t **)a1, a2[5]);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_23918C32C((uint64_t **)a1, a2[6]);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_23918C32C((uint64_t **)a1, a2[7]);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_23918C32C((uint64_t **)a1, a2[8]);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_23918C32C((uint64_t **)a1, a2[9]);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  if (!*a2)
    return 0;
  return sub_2391AB388(a1, (uint64_t)(a2 + 10));
}

uint64_t sub_2391AB738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_13:
    sub_23918C1A0(v7, v5, v6, "asn1PE_SUPLPOSINIT");
    return v4;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_13;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_13;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 8));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_13;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 12));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_13;
  }
  v7 = sub_2391B72D8(a1, a2 + 16);
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  if (*(_DWORD *)a2)
  {
    v7 = sub_2391AB504(a1, (int *)(a2 + 88));
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_13;
    }
  }
  v7 = sub_2391A8E38(a1, (unsigned __int8 *)(a2 + 168));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  if (*(_DWORD *)(a2 + 4))
  {
    v7 = sub_2391ADD58(a1, (int *)(a2 + 328));
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_13;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    v7 = sub_2391AE2E8(a1, a2 + 768);
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_13;
    }
  }
  if (!*(_DWORD *)(a2 + 12))
    return 0;
  return sub_23918DACC(a1, (_QWORD *)(a2 + 1280));
}

uint64_t sub_2391AB944(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void **v7;

  *(_QWORD *)a1 = &off_250A73C18;
  if (*(_WORD *)(a1 + 32) == 5)
  {
    v2 = *(_QWORD *)(a1 + 40);
    if (v2)
    {
      sub_239199F0C(v2 + 152);
      v7 = (void **)(v2 + 120);
      sub_2391AB204(&v7);
      v7 = (void **)(v2 + 96);
      sub_2391AB204(&v7);
      v3 = *(void **)(v2 + 64);
      if (v3)
      {
        *(_QWORD *)(v2 + 72) = v3;
        operator delete(v3);
      }
      v4 = *(void **)(v2 + 40);
      if (v4)
      {
        *(_QWORD *)(v2 + 48) = v4;
        operator delete(v4);
      }
      v5 = *(void **)(v2 + 16);
      if (v5)
      {
        *(_QWORD *)(v2 + 24) = v5;
        operator delete(v5);
      }
      MEMORY[0x23B838844](v2, 0x1030C40986846DALL);
    }
    *(_QWORD *)(a1 + 40) = 0;
  }
  return sub_2391B7470(a1);
}

void sub_2391ABA08(uint64_t a1)
{
  sub_2391AB944(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_2391ABA2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 360);
}

void sub_2391ABA34(uint64_t a1)
{
  NSObject *v2;
  int v3;
  NSObject *v4;
  uint8_t v5[16];
  uint8_t buf[16];

  if (*(_DWORD *)(a1 + 360))
  {
    v2 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v2, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::UpdateState, next state Supl_Pos_Recd", buf, 2u);
    }
    v3 = 5;
LABEL_9:
    sub_2391B74F4(a1, v3, *(_QWORD *)(a1 + 8));
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 20))
  {
    v4 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v5 = 0;
      _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::UpdateState, next state Supl_End_Recd", v5, 2u);
    }
    v3 = 7;
    goto LABEL_9;
  }
LABEL_10:
  *(_DWORD *)(a1 + 360) = 0;
  *(_DWORD *)(a1 + 20) = 0;
}

uint64_t sub_2391ABB10(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  int v14;
  NSObject *v15;
  int v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  uint64_t v20;
  int v21;
  NSObject *v22;
  NSObject *v23;
  uint64_t v24;
  _QWORD *v25;
  NSObject *v26;
  int v28;
  NSObject *v29;
  uint64_t v30;
  int v31;
  uint64_t *v32;
  int v33;
  NSObject *v34;
  NSObject *v35;
  _QWORD *v36;
  NSObject *v37;
  NSObject *v38;
  NSObject *v39;
  uint8_t v40[8];
  _QWORD v41[2];
  char v42;
  void *__p;
  void *v44;
  _DWORD v45[4];
  char v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  if (sub_2391B7BC8(a1, a2))
  {
    v4 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(__p) = 0;
      _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, error in processing SUPL message", (uint8_t *)&__p, 2u);
      v4 = qword_2542CF618;
    }
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      __p = (void *)0x20304000100;
      _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&__p, 8u);
    }
    v5 = 3;
  }
  else
  {
    v6 = sub_2391B7D4C();
    v7 = *(_QWORD *)(a1 + 8);
    if (sub_2391B90F0(v6, *(unsigned __int16 *)(v7 + 72), *(unsigned __int16 *)(a1 + 56))
      && sub_2391B91A4(v6, (unsigned __int8 *)(v7 + 80), (unsigned __int8 *)(a1 + 64)))
    {
      v5 = 0;
      v8 = 0;
    }
    else
    {
      v9 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(__p) = 0;
        _os_log_debug_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, SET session ID validation failed", (uint8_t *)&__p, 2u);
        v9 = qword_2542CF618;
      }
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        __p = (void *)0x20304000100;
        _os_log_error_impl(&dword_2390FD000, v9, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&__p, 8u);
      }
      v8 = 1;
      v5 = 12;
    }
    v10 = *(_QWORD *)(a1 + 8);
    v11 = sub_2391B7D4C();
    v12 = sub_2391B9020(v11, a1 + 248, v10 + 264);
    v13 = sub_2391B7D4C();
    v14 = sub_2391B8BC4(v13, (unsigned __int8 *)(a1 + 272), (_QWORD *)(v10 + 288));
    if (!v12 || !v14)
    {
      v15 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(__p) = 0;
        _os_log_debug_impl(&dword_2390FD000, v15, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, SLP session ID validation failed", (uint8_t *)&__p, 2u);
        v15 = qword_2542CF618;
      }
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        __p = (void *)0x20304000100;
        _os_log_error_impl(&dword_2390FD000, v15, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&__p, 8u);
      }
      v8 = 1;
      v5 = 12;
    }
    v16 = *(unsigned __int8 *)(a1 + 26);
    v17 = sub_23918BED4();
    v18 = atomic_load((unsigned __int8 *)(v17 + 1));
    v19 = v18 == 255;
    v20 = 1;
    if (v19)
      v20 = 2;
    v21 = atomic_load((unsigned __int8 *)(v17 + v20));
    if (v16 == v21 || *(_WORD *)(a1 + 32) != 5)
    {
      if (!v8)
      {
        v28 = *(unsigned __int16 *)(a1 + 32);
        if (v28 == 6)
        {
          v35 = qword_2542CF618;
          if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(__p) = 0;
            _os_log_debug_impl(&dword_2390FD000, v35, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, received SUPL END Message", (uint8_t *)&__p, 2u);
          }
          *(_DWORD *)(a1 + 20) = 1;
          (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
          v36 = sub_2391B5594(*(_QWORD *)(a1 + 8));
          (*(void (**)(_QWORD *, uint64_t))(*v36 + 40))(v36, a2);
        }
        else
        {
          if (v28 != 5)
          {
            v37 = qword_2542CF618;
            if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(__p) = 0;
              _os_log_debug_impl(&dword_2390FD000, v37, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, received unexpected Message", (uint8_t *)&__p, 2u);
              v37 = qword_2542CF618;
            }
            if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
            {
              __p = (void *)0x20204000100;
              _os_log_error_impl(&dword_2390FD000, v37, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&__p, 8u);
            }
            v5 = 2;
            goto LABEL_32;
          }
          v29 = qword_2542CF618;
          if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(__p) = 0;
            _os_log_debug_impl(&dword_2390FD000, v29, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, received SUPL POS Message", (uint8_t *)&__p, 2u);
          }
          v30 = sub_2391BDC54();
          v31 = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 376);
          v44 = 0;
          v45[0] = 0;
          LODWORD(__p) = v31;
          v46 = -1;
          *(_QWORD *)&v45[1] = 4;
          v45[3] = 0;
          sub_2391BE930(v30, (unsigned int *)&__p);
          v32 = (uint64_t *)sub_2391AE584();
          v33 = sub_2391AE6AC(v32, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 8));
          if (v33 == -7)
          {
            v38 = qword_2542CF618;
            if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(__p) = 0;
              _os_log_debug_impl(&dword_2390FD000, v38, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, ProcessPosPayload returned failure", (uint8_t *)&__p, 2u);
            }
            v5 = 8;
            goto LABEL_32;
          }
          if ((_WORD)v33)
          {
            v39 = qword_2542CF618;
            if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(__p) = 0;
              _os_log_debug_impl(&dword_2390FD000, v39, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, ProcessPosPayload returned failure", (uint8_t *)&__p, 2u);
            }
            v5 = 0;
            goto LABEL_32;
          }
          v34 = qword_2542CF618;
          if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(__p) = 0;
            _os_log_debug_impl(&dword_2390FD000, v34, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, ProcessPosPayload returned success", (uint8_t *)&__p, 2u);
          }
          *(_DWORD *)(a1 + 360) = 1;
          (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
        }
        return 1;
      }
    }
    else
    {
      v22 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(__p) = 0;
        _os_log_debug_impl(&dword_2390FD000, v22, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, protocol version validation failed", (uint8_t *)&__p, 2u);
        v22 = qword_2542CF618;
      }
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        __p = (void *)0x20304000100;
        _os_log_error_impl(&dword_2390FD000, v22, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&__p, 8u);
      }
      v5 = 10;
    }
  }
LABEL_32:
  v23 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(__p) = 0;
    _os_log_debug_impl(&dword_2390FD000, v23, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, sending SUPL END Message", (uint8_t *)&__p, 2u);
  }
  if (v5 == 12)
  {
    v24 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)(v24 + 64) = *(_QWORD *)(a1 + 48);
    *(_WORD *)(v24 + 72) = *(_WORD *)(a1 + 56);
    *(_BYTE *)(v24 + 80) = *(_BYTE *)(a1 + 64);
    sub_23919A01C(v24 + 88, a1 + 72);
    if (v24 + 64 != a1 + 48)
    {
      sub_239107FF0((_QWORD *)(v24 + 264), *(char **)(a1 + 248), *(char **)(a1 + 256), *(_QWORD *)(a1 + 256) - *(_QWORD *)(a1 + 248));
      *(_BYTE *)(v24 + 288) = *(_BYTE *)(a1 + 272);
      *(_BYTE *)(v24 + 296) = *(_BYTE *)(a1 + 280);
      sub_239107FF0((_QWORD *)(v24 + 304), *(char **)(a1 + 288), *(char **)(a1 + 296), *(_QWORD *)(a1 + 296) - *(_QWORD *)(a1 + 288));
      sub_239107FF0((_QWORD *)(v24 + 328), *(char **)(a1 + 312), *(char **)(a1 + 320), *(_QWORD *)(a1 + 320) - *(_QWORD *)(a1 + 312));
      sub_239107FF0((_QWORD *)(v24 + 352), *(char **)(a1 + 336), *(char **)(a1 + 344), *(_QWORD *)(a1 + 344) - *(_QWORD *)(a1 + 336));
    }
  }
  *(_DWORD *)(a1 + 20) = 1;
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  v25 = sub_2391B5594(*(_QWORD *)(a1 + 8));
  *(_BYTE *)(v25[5] + 456) = v5;
  *(_DWORD *)(v25[5] + 4) = 1;
  sub_2391015AC(&__p, 0xBB8uLL);
  v41[0] = &__p;
  v41[1] = 0;
  v42 = 0;
  (*(void (**)(_QWORD *, _QWORD *))(*v25 + 32))(v25, v41);
  sub_239199C58((uint64_t)v25);
  v26 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v40 = 0;
    _os_log_debug_impl(&dword_2390FD000, v26, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving SuplPosInitSent::ProcessSuplPos", v40, 2u);
  }
  if (__p)
  {
    v44 = __p;
    operator delete(__p);
  }
  return 0;
}

void sub_2391AC2D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2391AC2F4(uint64_t a1)
{
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1))
    return 0;
  else
    return 0xFFFFFFFFLL;
}

void *sub_2391AC318(const char *a1, int a2, int a3, size_t size)
{
  uint64_t v7;
  void *result;
  NSObject *v9;
  size_t v10;
  NSObject *v11;
  uint8_t v12[4];
  uint8_t *v13;
  uint8_t buf[4];
  size_t v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  int v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v7 = a3;
  result = malloc_type_calloc(a3, size, 0xC27E8167uLL);
  if (!result)
  {
    v9 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134218498;
      v10 = v7 * size;
      v15 = v10;
      v16 = 2080;
      v17 = a1;
      v18 = 1024;
      v19 = a2;
      _os_log_error_impl(&dword_2390FD000, v9, OS_LOG_TYPE_ERROR, "#gpsd #supl gnssOsa_Calloc allocation failed Size,%lu,Fn,%s,Line,%d", buf, 0x1Cu);
    }
    else
    {
      v10 = v7 * size;
    }
    snprintf((char *)buf, 0x400uLL, "Size,%lu,Fn,%s,Line,%d", v10, a1, a2);
    v11 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v12 = 136315138;
      v13 = buf;
      _os_log_error_impl(&dword_2390FD000, v11, OS_LOG_TYPE_ERROR, "%s", v12, 0xCu);
    }
    __assert_rtn("gnssOsa_Calloc", "agpsmacosa.cpp", 34, "false && \"Memory allocation failure\"");
  }
  return result;
}

void *sub_2391AC49C(uint64_t a1, int a2, void *__dst, unsigned int a4, void *__src, size_t __n)
{
  NSObject *v8;
  const char *v9;
  void *v10;
  int v12;
  uint64_t v13;
  __int16 v14;
  int v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  if (__dst && __src)
  {
    if (a4 >= __n)
    {
      v10 = __dst;
      memcpy(__dst, __src, __n);
      return v10;
    }
    v8 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v12 = 136315394;
      v13 = a1;
      v14 = 1024;
      v15 = a2;
      v9 = "#gpsd #supl memcpy_s invalid input Caller,%s,line,%d";
LABEL_11:
      _os_log_error_impl(&dword_2390FD000, v8, OS_LOG_TYPE_ERROR, v9, (uint8_t *)&v12, 0x12u);
    }
  }
  else
  {
    v8 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v12 = 136315394;
      v13 = a1;
      v14 = 1024;
      v15 = a2;
      v9 = "#gpsd #supl memcpy_s failure Caller,%s,line,%d";
      goto LABEL_11;
    }
  }
  return 0;
}

uint64_t sub_2391AC5CC(uint64_t a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  NSObject *v7;
  unsigned __int8 v9;
  uint8_t buf[4];
  int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v9 = 0;
  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (v4)
    {
      v5 = sub_23918DA84(a1, &v9);
      v9 += 10;
      if ((_DWORD)v5)
        return v5;
    }
    else
    {
      v5 = sub_23918C4D0(a1, 0, 9u, &v9);
      if ((_DWORD)v5)
        return v5;
    }
    v6 = v9;
    if (v9 > 0x10u)
    {
      v5 = 4;
      *(_BYTE *)(a1 + 16) = 4;
      sub_23918C1A0(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosMethod");
    }
    else
    {
      *a2 = v9;
      v7 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67174657;
        v11 = v6;
        _os_log_debug_impl(&dword_2390FD000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl asn1PD_PosMethod, posMethod %{private}d", buf, 8u);
      }
      return 0;
    }
  }
  return v5;
}

uint64_t sub_2391AC708(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_11:
    sub_23918C1A0(v8, v6, v7, "asn1PD_QoP");
    return v5;
  }
  v9 = v4;
  *(_DWORD *)a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  *(_DWORD *)(a2 + 4) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  *(_DWORD *)(a2 + 8) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  v8 = sub_23918C4D0(a1, 0, 0x7Fu, (_BYTE *)(a2 + 12));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  if (*(_DWORD *)a2)
  {
    v8 = sub_23918C4D0(a1, 0, 0x7Fu, (_BYTE *)(a2 + 13));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    v8 = sub_23918C740(a1, 0, 0xFFFFu, (_DWORD *)(a2 + 16));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    v8 = sub_23918C4D0(a1, 0, 7u, (_BYTE *)(a2 + 20));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  if (!v9)
    return 0;
  return sub_23918D648(a1);
}

uint64_t sub_2391AC8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23918D3D8(a1, 0, 255, *(_DWORD *)(a2 + 8) - *(_DWORD *)a2, (_QWORD *)a2, 0);
  v4 = v3;
  if ((_DWORD)v3)
    sub_23918C1A0(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_UTCTime");
  return v4;
}

uint64_t sub_2391AC938(uint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  int v6;

  v6 = 0;
  sub_23918C740(a1, 0, 0xFFu, &v6);
  sub_23918D258(a1, 7 * v6, 7, a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_UTCTime");
  return v4;
}

uint64_t sub_2391AC9B4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  v4 = sub_23918C42C(a1, 0, 127, *a2);
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
LABEL_5:
    sub_23918C1A0(v4, v6, v7, "asn1PE_PositionEstimate_uncertainty");
    return v5;
  }
  v4 = sub_23918C42C(a1, 0, 127, a2[1]);
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return sub_23918C42C(a1, 0, 180, a2[2]);
}

uint64_t sub_2391ACA5C(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  v4 = sub_23918C4D0(a1, 0, 0x7Fu, a2);
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
LABEL_5:
    sub_23918C1A0(v4, v6, v7, "asn1PD_PositionEstimate_uncertainty");
    return v5;
  }
  v4 = sub_23918C4D0(a1, 0, 0x7Fu, a2 + 1);
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return sub_23918C4D0(a1, 0, 0xB4u, a2 + 2);
}

uint64_t sub_2391ACB04(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  NSObject *v9;
  int v10;
  int v11;
  unsigned int v12;
  _DWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_13:
    sub_23918C1A0(v7, v5, v6, "asn1PE_AltitudeInfo");
    return v4;
  }
  v8 = *a2;
  if (v8 >= 2)
  {
    if (v8 == 255)
    {
      v4 = 1;
      *(_BYTE *)(a1 + 16) = 1;
      v10 = *(_DWORD *)(a1 + 8);
      v11 = *(_DWORD *)(a1 + 12);
      v12 = 1;
    }
    else
    {
      v4 = 4;
      *(_BYTE *)(a1 + 16) = 4;
      v10 = *(_DWORD *)(a1 + 8);
      v11 = *(_DWORD *)(a1 + 12);
      v12 = 4;
    }
    sub_23918C1A0(v12, v10, v11, "asn1PE_AltitudeInfo_altitudeDirection");
    goto LABEL_12;
  }
  v4 = sub_23918C42C(a1, 0, 1, *a2);
  v9 = qword_2542CF618;
  if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    if (!(_DWORD)v4)
      goto LABEL_6;
LABEL_12:
    sub_23918C1A0(v4, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_AltitudeInfo_altitudeDirection");
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = v4;
    goto LABEL_13;
  }
  v14[0] = 67174657;
  v14[1] = v8;
  _os_log_debug_impl(&dword_2390FD000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl asn1PE_AltitudeInfo_altitudeDirection, value = %{private}d", (uint8_t *)v14, 8u);
  if ((_DWORD)v4)
    goto LABEL_12;
LABEL_6:
  v7 = sub_23918C42C(a1, 0, 0x7FFF, *((unsigned __int16 *)a2 + 1));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  return sub_23918C42C(a1, 0, 127, a2[4]);
}

uint64_t sub_2391ACCF8(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned __int8 v14;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_10:
    sub_23918C1A0(v8, v6, v7, "asn1PD_AltitudeInfo");
    return v5;
  }
  v9 = v4;
  v14 = 0;
  v10 = sub_23918C4D0(a1, 0, 1u, &v14);
  if ((_DWORD)v10)
  {
    v5 = v10;
    v11 = *(_DWORD *)(a1 + 8);
    v12 = *(_DWORD *)(a1 + 12);
LABEL_9:
    sub_23918C1A0(v10, v11, v12, "asn1PD_AltitudeInfo_altitudeDirection");
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_10;
  }
  if (v14 >= 2u)
  {
    v5 = 4;
    *(_BYTE *)(a1 + 16) = 4;
    v11 = *(_DWORD *)(a1 + 8);
    v12 = *(_DWORD *)(a1 + 12);
    LODWORD(v10) = 4;
    goto LABEL_9;
  }
  *(_BYTE *)a2 = v14;
  v8 = sub_23918C5A0(a1, 0, 0x7FFFu, (_WORD *)(a2 + 2));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_10;
  }
  v8 = sub_23918C4D0(a1, 0, 0x7Fu, (_BYTE *)(a2 + 4));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_10;
  }
  if (!v9)
    return 0;
  return sub_23918D648(a1);
}

uint64_t sub_2391ACE54(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;

  if (a2 >= 2u)
  {
    if (a2 == 255)
    {
      v3 = 1;
      *(_BYTE *)(a1 + 16) = 1;
      v4 = *(_DWORD *)(a1 + 8);
      v5 = *(_DWORD *)(a1 + 12);
      v6 = 1;
    }
    else
    {
      v3 = 4;
      *(_BYTE *)(a1 + 16) = 4;
      v4 = *(_DWORD *)(a1 + 8);
      v5 = *(_DWORD *)(a1 + 12);
      v6 = 4;
    }
    sub_23918C1A0(v6, v4, v5, "asn1PE_PositionEstimate_latitudeSign");
  }
  else
  {
    v3 = sub_23918C42C(a1, 0, 1, a2);
    if (!(_DWORD)v3)
      return v3;
  }
  sub_23918C1A0(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PositionEstimate_latitudeSign");
  return v3;
}

uint64_t sub_2391ACEFC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned __int8 v9;

  v9 = 0;
  v4 = sub_23918C4D0(a1, 0, 1u, &v9);
  if ((_DWORD)v4)
  {
    v5 = v4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
LABEL_6:
    sub_23918C1A0(v4, v6, v7, "asn1PD_PositionEstimate_latitudeSign");
    return v5;
  }
  if (v9 > 1u)
  {
    v5 = 4;
    *(_BYTE *)(a1 + 16) = 4;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v4) = 4;
    goto LABEL_6;
  }
  v5 = 0;
  *a2 = v9;
  return v5;
}

uint64_t sub_2391ACF98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_23918C1A0(v7, v5, v6, "asn1PE_PositionEstimate");
    return v4;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)(a2 + 8));
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  v4 = sub_2391ACE54(a1, *(_BYTE *)(a2 + 12));
  if ((_DWORD)v4)
    return v4;
  v7 = sub_23918C42C(a1, 0, 0x7FFFFF, *(_DWORD *)(a2 + 16));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  v7 = sub_23918C42C(a1, -8388608, 0x7FFFFF, *(_DWORD *)(a2 + 20));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  if (*(_DWORD *)a2)
  {
    v7 = sub_2391AC9B4(a1, (unsigned __int8 *)(a2 + 24));
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    v7 = sub_23918C42C(a1, 0, 100, *(unsigned __int8 *)(a2 + 27));
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (!*(_DWORD *)(a2 + 8))
    return 0;
  return sub_2391ACB04(a1, (unsigned __int8 *)(a2 + 28));
}

uint64_t sub_2391AD174(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_23918C1A0(v8, v6, v7, "asn1PD_PositionEstimate");
    return v5;
  }
  v9 = v4;
  *(_DWORD *)a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 4) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 8) = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  v8 = sub_2391ACEFC(a1, (unsigned __int8 *)(a2 + 12));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  v8 = sub_23918C740(a1, 0, 0x7FFFFFu, (_DWORD *)(a2 + 16));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  v8 = sub_23918C670(a1, -8388608, 0x7FFFFF, (_DWORD *)(a2 + 20));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (*(_DWORD *)a2)
  {
    v8 = sub_2391ACA5C(a1, (_BYTE *)(a2 + 24));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    v8 = sub_23918C4D0(a1, 0, 0x64u, (_BYTE *)(a2 + 27));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    v8 = sub_2391ACCF8(a1, a2 + 28);
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (!v9)
    return 0;
  return sub_23918D648(a1);
}

uint64_t sub_2391AD38C(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 9u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horvel_bearing");
  return v3;
}

uint64_t sub_2391AD3DC(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 0x10u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horvel_horspeed");
  return v3;
}

uint64_t sub_2391AD42C(uint64_t a1, unint64_t *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_7:
    sub_23918C1A0(v8, v6, v7, "asn1PD_Horvel");
    return v5;
  }
  v9 = v4;
  v8 = sub_2391AD38C(a1, a2);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  v8 = sub_2391AD3DC(a1, a2 + 3);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  if (!v9)
    return 0;
  return sub_23918D648(a1);
}

uint64_t sub_2391AD4F0(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 1u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandvervel_verdirect");
  return v3;
}

uint64_t sub_2391AD540(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 9u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandvervel_bearing");
  return v3;
}

uint64_t sub_2391AD590(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 0x10u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandvervel_horspeed");
  return v3;
}

uint64_t sub_2391AD5E0(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 8u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandvervel_verspeed");
  return v3;
}

uint64_t sub_2391AD630(uint64_t a1, unint64_t *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_11:
    sub_23918C1A0(v8, v6, v7, "asn1PD_Horandvervel");
    return v5;
  }
  v9 = v4;
  v8 = sub_2391AD4F0(a1, a2);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  v8 = sub_2391AD540(a1, a2 + 3);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  v8 = sub_2391AD590(a1, a2 + 6);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  v8 = sub_2391AD5E0(a1, a2 + 9);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  if (!v9)
    return 0;
  return sub_23918D648(a1);
}

uint64_t sub_2391AD744(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 9u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horveluncert_bearing");
  return v3;
}

uint64_t sub_2391AD794(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 0x10u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horveluncert_horspeed");
  return v3;
}

uint64_t sub_2391AD7E4(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 8u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horveluncert_uncertspeed");
  return v3;
}

uint64_t sub_2391AD834(uint64_t a1, unint64_t *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_23918C1A0(v8, v6, v7, "asn1PD_Horveluncert");
    return v5;
  }
  v9 = v4;
  v8 = sub_2391AD744(a1, a2);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  v8 = sub_2391AD794(a1, a2 + 3);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  v8 = sub_2391AD7E4(a1, a2 + 6);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  if (!v9)
    return 0;
  return sub_23918D648(a1);
}

uint64_t sub_2391AD920(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 8u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_verspeed");
  return v3;
}

uint64_t sub_2391AD970(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 8u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_horuncertspeed");
  return v3;
}

uint64_t sub_2391AD9C0(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23918C9B4(a1, 8u, a2, 0);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_veruncertspeed");
  return v3;
}

uint64_t sub_2391ADA10(uint64_t a1, unint64_t *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_23918C1A0(v8, v6, v7, "asn1PD_Horandveruncert");
    return v5;
  }
  v9 = v4;
  sub_23918C9B4(a1, 1u, a2, 0);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_verdirect");
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_15;
  }
  sub_23918C9B4(a1, 9u, a2 + 3, 0);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_bearing");
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_15;
  }
  sub_23918C9B4(a1, 0x10u, a2 + 6, 0);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_horspeed");
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_15;
  }
  v8 = sub_2391AD920(a1, a2 + 9);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  v8 = sub_2391AD970(a1, a2 + 12);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  v8 = sub_2391AD9C0(a1, a2 + 15);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (!v9)
    return 0;
  return sub_23918D648(a1);
}

void sub_2391ADBE0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  __int16 v14;

  v4 = sub_23918C3B4((uint64_t **)a1);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_3:
    sub_23918C1A0(v7, v5, v6, "asn1PD_Velocity");
    return;
  }
  if (!v4)
  {
    v14 = 0;
    v7 = sub_23918C5A0(a1, 0, 3u, &v14);
    if (v7)
    {
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      v8 = v14;
      *(_BYTE *)a2 = v14;
      switch(v8)
      {
        case 0:
          v9 = sub_2391AD42C(a1, (unint64_t *)(a2 + 8));
          goto LABEL_15;
        case 1:
          v9 = sub_2391AD630(a1, (unint64_t *)(a2 + 56));
          goto LABEL_15;
        case 2:
          v9 = sub_2391AD834(a1, (unint64_t *)(a2 + 152));
          goto LABEL_15;
        case 3:
          v9 = sub_2391ADA10(a1, (unint64_t *)(a2 + 224));
LABEL_15:
          v10 = v9;
          if (!v9)
            return;
          goto LABEL_19;
        default:
          if (v8 == 255)
          {
            v10 = 1;
            *(_BYTE *)(a1 + 16) = 1;
            v11 = *(_DWORD *)(a1 + 8);
            v12 = *(_DWORD *)(a1 + 12);
            v13 = 1;
          }
          else
          {
            v10 = 4;
            *(_BYTE *)(a1 + 16) = 4;
            v11 = *(_DWORD *)(a1 + 8);
            v12 = *(_DWORD *)(a1 + 12);
            v13 = 4;
          }
          sub_23918C1A0(v13, v11, v12, "asn1PD_Velocity");
LABEL_19:
          v5 = *(_DWORD *)(a1 + 8);
          v6 = *(_DWORD *)(a1 + 12);
          v7 = v10;
          break;
      }
    }
    goto LABEL_3;
  }
  sub_23918D714(a1);
}

uint64_t sub_2391ADD58(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_7:
    sub_23918C1A0(v7, v5, v6, "asn1PE_Position");
    return v4;
  }
  sub_23918C32C((uint64_t **)a1, *a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  v7 = sub_2391AC8D8(a1, (uint64_t)(a2 + 2));
  if ((_DWORD)v7)
  {
    v4 = v7;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  return sub_2391ACF98(a1, (uint64_t)(a2 + 8));
}

uint64_t sub_2391ADE18(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_23918C1A0(v8, v6, v7, "asn1PD_Position");
    return v5;
  }
  v9 = v4;
  *(_DWORD *)a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  v8 = sub_2391AC938(a1, (unint64_t *)(a2 + 8));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  v8 = sub_2391AD174(a1, a2 + 32);
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  if (*(_DWORD *)a2)
  {
    sub_2391ADBE0(a1, a2 + 72);
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (!v9)
    return 0;
  return sub_23918D648(a1);
}

uint64_t sub_2391ADF38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23918CC8C(a1, 1, 0x2000, *(_DWORD *)(a2 + 8) - *(_DWORD *)a2, (_QWORD *)a2, 0, 0);
  v4 = v3;
  if ((_DWORD)v3)
    sub_23918C1A0(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PosPayLoad_rrlpPayload");
  return v4;
}

uint64_t sub_2391ADF9C(uint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  int v6;

  v6 = 0;
  sub_23918C740(a1, 1, 0x2000u, &v6);
  sub_23918C9B4(a1, 8 * v6, a2, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    sub_23918C1A0(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoad_rrlpPayload");
  return v4;
}

uint64_t sub_2391AE014(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  sub_23918C32C((uint64_t **)a1, *a2 > 3u);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_3;
  }
  v9 = *a2;
  if (v9 < 4)
  {
    v7 = sub_23918C42C(a1, 0, 2, v9 - 1);
    if ((_DWORD)v7)
    {
      v4 = v7;
      v5 = *(_DWORD *)(a1 + 8);
      v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_3;
    }
    v10 = *a2;
    if (v10 != 1)
    {
      if (v10 == 3)
      {
        v4 = sub_2391ADF38(a1, (uint64_t)(a2 + 28));
        if (!(_DWORD)v4)
          return v4;
        goto LABEL_17;
      }
      if (v10 != 2)
      {
        v4 = 4;
        *(_BYTE *)(a1 + 16) = 4;
        v5 = *(_DWORD *)(a1 + 8);
        v6 = *(_DWORD *)(a1 + 12);
        LODWORD(v7) = 4;
        goto LABEL_3;
      }
    }
    v4 = 1;
    *(_BYTE *)(a1 + 16) = 1;
    sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PosPayLoad");
LABEL_17:
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = v4;
    goto LABEL_3;
  }
  if (*((_QWORD *)a2 + 10))
  {
    v7 = sub_23918AB88(a1, a2);
    v4 = v7;
    if (!(_DWORD)v7)
      return v4;
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v4 = 1;
    LODWORD(v7) = 1;
  }
LABEL_3:
  sub_23918C1A0(v7, v5, v6, "asn1PE_PosPayLoad");
  return v4;
}

uint64_t sub_2391AE194(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v10;
  unsigned __int16 v11;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_3;
  }
  if (!v4)
  {
    v11 = 0;
    v8 = sub_23918C5A0(a1, 0, 2u, &v11);
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_3;
    }
    v10 = v11;
    *(_WORD *)a2 = v11 + 1;
    if (v10)
    {
      if (v10 == 2)
      {
        v5 = sub_2391ADF9C(a1, (unint64_t *)(a2 + 56));
        if (!(_DWORD)v5)
          return v5;
        goto LABEL_15;
      }
      if (v10 != 1)
      {
        v5 = 4;
        *(_BYTE *)(a1 + 16) = 4;
        v6 = *(_DWORD *)(a1 + 8);
        v7 = *(_DWORD *)(a1 + 12);
        LODWORD(v8) = 4;
        goto LABEL_3;
      }
    }
    v5 = 1;
    *(_BYTE *)(a1 + 16) = 1;
    sub_23918C1A0(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoad");
LABEL_15:
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_3;
  }
  v8 = sub_23918A7DC(a1, a2);
  v5 = v8;
  if (!(_DWORD)v8)
    return v5;
  v6 = *(_DWORD *)(a1 + 8);
  v7 = *(_DWORD *)(a1 + 12);
LABEL_3:
  sub_23918C1A0(v8, v6, v7, "asn1PD_PosPayLoad");
  return v5;
}

uint64_t sub_2391AE2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;

  sub_23918C32C((uint64_t **)a1, 0);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_5:
    sub_23918C1A0(v7, v5, v6, "asn1PE_SUPLPOS");
    return v4;
  }
  sub_23918C32C((uint64_t **)a1, *(_DWORD *)a2);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v5 = *(_DWORD *)(a1 + 8);
    v6 = *(_DWORD *)(a1 + 12);
    v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_5;
  }
  return sub_2391AE014(a1, (unsigned __int16 *)(a2 + 8));
}

uint64_t sub_2391AE380(uint64_t a1, _DWORD *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  v4 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_7:
    sub_23918C1A0(v8, v6, v7, "asn1PD_SUPLPOS");
    return v5;
  }
  v9 = v4;
  *a2 = sub_23918C3B4((uint64_t **)a1);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  v8 = sub_2391AE194(a1, (uint64_t)(a2 + 2));
  if ((_DWORD)v8)
  {
    v5 = v8;
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  if (*a2)
  {
    sub_2391ADBE0(a1, (uint64_t)(a2 + 36));
    if ((_DWORD)v8)
    {
      v5 = v8;
      v6 = *(_DWORD *)(a1 + 8);
      v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_7;
    }
  }
  if (!v9)
    return 0;
  v8 = sub_23918D648(a1);
  v5 = v8;
  if ((_DWORD)v8)
  {
    v6 = *(_DWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  return v5;
}

uint64_t sub_2391AE48C(uint64_t result, int a2)
{
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  _QWORD *v5;
  void (*v6)(_QWORD, uint64_t);

  *(_DWORD *)result = a2;
  if (*(_BYTE *)(result + 196))
  {
    v2 = result;
    v3 = *(void **)(result + 880);
    if (v3)
    {
      v4 = *(_QWORD **)(v2 + 944);
      if (v4 && (v5 = (_QWORD *)*v4) != 0 && (v6 = (void (*)(_QWORD, uint64_t))v5[2]) != 0)
        v6(*v5, v2 + 880);
      else
        free(v3);
      *(_QWORD *)(v2 + 880) = 0;
    }
    longjmp((int *)(v2 + 4), a2);
  }
  return result;
}

void sub_2391AE50C(uint64_t a1, int a2)
{
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  void (*v7)(_QWORD, uint64_t);

  if (!a1 || (*(_DWORD *)a1 = a2, !*(_BYTE *)(a1 + 196)))
    exit(a2);
  v4 = *(void **)(a1 + 880);
  if (v4)
  {
    v5 = *(_QWORD **)(a1 + 944);
    if (v5 && (v6 = (_QWORD *)*v5) != 0 && (v7 = (void (*)(_QWORD, uint64_t))v6[2]) != 0)
      v7(*v6, a1 + 880);
    else
      free(v4);
    *(_QWORD *)(a1 + 880) = 0;
  }
  longjmp((int *)(a1 + 4), a2);
}

uint64_t sub_2391AE584()
{
  uint64_t result;
  NSObject *v1;
  int v2;
  const char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  if (qword_2542CF588 != -1)
    dispatch_once(&qword_2542CF588, &unk_250A73C88);
  result = qword_2542CF580;
  if (!qword_2542CF580)
  {
    v1 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v2 = 136315138;
      v3 = "GetInstance";
      _os_log_error_impl(&dword_2390FD000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SuplPosPayloadHandler.cpp", 56, "false && \"Memory allocation failure\"");
  }
  return result;
}

_QWORD *sub_2391AE678()
{
  _QWORD *result;

  result = operator new(0x18uLL, MEMORY[0x24BEDB6B8]);
  if (result)
  {
    *result = 0;
    result[1] = 0;
    result[2] = 0;
  }
  qword_2542CF580 = (uint64_t)result;
  return result;
}

uint64_t sub_2391AE6AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _BOOL4 v6;
  int v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  __int16 v12;
  NSObject *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  NSObject *v24;
  _BYTE *v25;
  _BYTE *v26;
  NSObject *v27;
  NSObject *v28;
  int v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char **v36;
  void *__p;
  _BYTE *v38;
  uint64_t v39;
  char v40;
  int v41;
  _BOOL4 v42;
  uint8_t buf[8];
  void *v44;
  uint64_t v45;
  char v46;
  int v47;
  _BOOL4 v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  if (a2 && a3)
  {
    __p = 0;
    v38 = 0;
    v40 = 0;
    v39 = 0;
    sub_2391AEFF8(a1);
    v6 = *(unsigned __int8 *)(a3 + 380) == 2;
    v41 = *(_DWORD *)(a3 + 376);
    v42 = v6;
    v7 = *(unsigned __int16 *)(a2 + 8);
    if (v7 != 4)
    {
      if (v7 != 3)
      {
        v10 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = 770;
          _os_log_error_impl(&dword_2390FD000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
          v10 = qword_2542CF618;
        }
        if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
          goto LABEL_36;
        *(_WORD *)buf = 0;
        goto LABEL_86;
      }
      v8 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, payload type RRLP", buf, 2u);
      }
      v9 = sub_2391BC46C();
      if (sub_2391BC974(v9, *(_DWORD *)(a3 + 596)))
      {
        v10 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_2390FD000, v10, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, RRLP on LTE not supported", buf, 2u);
          v10 = qword_2542CF618;
        }
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = 515;
          _os_log_error_impl(&dword_2390FD000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
          v10 = qword_2542CF618;
        }
        if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
          goto LABEL_36;
        *(_WORD *)buf = 0;
LABEL_86:
        _os_log_debug_impl(&dword_2390FD000, v10, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving SuplPosPayloadHandler::ProcessPosPayload", buf, 2u);
LABEL_36:
        v12 = -7;
        goto LABEL_73;
      }
      v40 = 1;
      if (&__p == (void **)(a2 + 64))
      {
        v26 = 0;
        v25 = 0;
      }
      else
      {
        sub_239107FF0(&__p, *(char **)(a2 + 64), *(char **)(a2 + 72), *(_QWORD *)(a2 + 72) - *(_QWORD *)(a2 + 64));
        v25 = __p;
        v26 = v38;
      }
      sub_23918B630((uint64_t)v25, v26 - v25);
      if (*(_WORD *)(a2 + 8) == 4)
        sub_2391BCD34((uint64_t)&__p);
      goto LABEL_72;
    }
    v13 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v13, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, payload type LPP", buf, 2u);
    }
    if (!*(_DWORD *)(a2 + 88))
    {
      v24 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v24, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, LPP payload not present", buf, 2u);
        v24 = qword_2542CF618;
      }
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&buf[4] = 515;
        _os_log_error_impl(&dword_2390FD000, v24, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        v24 = qword_2542CF618;
      }
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v24, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving SuplPosPayloadHandler::ProcessPosPayload", buf, 2u);
      }
      goto LABEL_68;
    }
    v14 = sub_2391BC46C();
    if (!sub_2391BC974(v14, *(_DWORD *)(a3 + 596)))
    {
      v10 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v10, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, LPP received in non-LTE", buf, 2u);
        v10 = qword_2542CF618;
      }
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&buf[4] = 515;
        _os_log_error_impl(&dword_2390FD000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        v10 = qword_2542CF618;
      }
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
        goto LABEL_36;
      *(_WORD *)buf = 0;
      goto LABEL_86;
    }
    v40 = 3;
    v15 = operator new(0x38uLL, MEMORY[0x24BEDB6B8]);
    if (v15)
    {
      v15[6] = 0;
      *((_OWORD *)v15 + 1) = 0u;
      *((_OWORD *)v15 + 2) = 0u;
      *(_OWORD *)v15 = 0u;
      *a1 = (uint64_t)v15;
      v17 = *(_QWORD *)(a2 + 96);
      v16 = *(_QWORD *)(a2 + 104);
      if (v16 != v17)
      {
        v18 = 0;
        v19 = 0;
        do
        {
          v20 = v17 + v18;
          if (*(_QWORD *)(v17 + v18) != *(_QWORD *)(v17 + v18 + 8))
          {
            ++*((_BYTE *)a1 + 8);
            v21 = *a1;
            v22 = *(_QWORD **)(*a1 + 16);
            if ((unint64_t)v22 >= *(_QWORD *)(*a1 + 24))
            {
              v23 = sub_23918AEF0((uint64_t *)(v21 + 8), v20);
            }
            else
            {
              *v22 = 0;
              v22[1] = 0;
              v22[2] = 0;
              sub_239189290(v22, *(const void **)v20, *(_QWORD *)(v20 + 8), *(_QWORD *)(v20 + 8) - *(_QWORD *)v20);
              v23 = (uint64_t)(v22 + 3);
              *(_QWORD *)(v21 + 16) = v22 + 3;
            }
            *(_QWORD *)(v21 + 16) = v23;
            sub_23918B630(*(_QWORD *)(*(_QWORD *)(*a1 + 8) + v18), *(_QWORD *)(*(_QWORD *)(*a1 + 8) + v18 + 8) - *(_QWORD *)(*(_QWORD *)(*a1 + 8) + v18));
            v17 = *(_QWORD *)(a2 + 96);
            v16 = *(_QWORD *)(a2 + 104);
          }
          ++v19;
          v18 += 24;
        }
        while (v19 < 0xAAAAAAAAAAAAAAABLL * ((v16 - v17) >> 3));
      }
    }
    else
    {
      *a1 = 0;
      v27 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_2390FD000, v27, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::CopyLppPayLoad, mem allocation failed", buf, 2u);
        v27 = qword_2542CF618;
      }
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&buf[4] = 1537;
        _os_log_error_impl(&dword_2390FD000, v27, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      }
    }
    v28 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v28, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, calling ProcessLppPayload", buf, 2u);
    }
    if (*a1)
    {
      v29 = *(_DWORD *)(a3 + 376);
      v30 = *(_QWORD *)(sub_2391B1EF8() + 24);
      if (v30)
      {
        while (*(_DWORD *)v30 != v29)
        {
          v30 = *(_QWORD *)(v30 + 8);
          if (!v30)
            goto LABEL_61;
        }
        if (*((char *)a1 + 8) >= 1)
        {
          v33 = 0;
          v34 = 0;
          while (1)
          {
            v35 = *a1;
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(*a1 + 16) - *(_QWORD *)(*a1 + 8)) >> 3) <= v34)
              break;
            v47 = 0;
            v48 = 0;
            v46 = 0;
            v44 = 0;
            v45 = 0;
            *(_QWORD *)buf = 0;
            v36 = (char **)(*(_QWORD *)(v35 + 8) + v33);
            if (v36 != (char **)buf)
              sub_239107FF0(buf, *v36, v36[1], v36[1] - *v36);
            v46 = 3;
            v47 = v29;
            v48 = v6;
            sub_2391BCD34((uint64_t)buf);
            if (*(_QWORD *)buf)
            {
              v44 = *(void **)buf;
              operator delete(*(void **)buf);
            }
            v12 = 0;
            ++v34;
            v33 += 24;
            if ((uint64_t)v34 >= *((char *)a1 + 8))
              goto LABEL_73;
          }
        }
LABEL_72:
        v12 = 0;
LABEL_73:
        if (__p)
        {
          v38 = __p;
          operator delete(__p);
        }
        return v12;
      }
LABEL_61:
      v31 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&buf[4] = v29;
        _os_log_error_impl(&dword_2390FD000, v31, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::ProcessLppPayload, session not found %d", buf, 8u);
        v31 = qword_2542CF618;
      }
      if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
      {
LABEL_68:
        v12 = -1;
        goto LABEL_73;
      }
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = 513;
    }
    else
    {
      v31 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_2390FD000, v31, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::ProcessLppPayload, m_lppReqParams NULL", buf, 2u);
        v31 = qword_2542CF618;
      }
      if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
        goto LABEL_68;
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = 513;
    }
    _os_log_error_impl(&dword_2390FD000, v31, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    goto LABEL_68;
  }
  v11 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_error_impl(&dword_2390FD000, v11, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, suplpos or session NULL", buf, 2u);
    v11 = qword_2542CF618;
  }
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = 513;
    _os_log_error_impl(&dword_2390FD000, v11, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
  return -1;
}

void sub_2391AEFB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  if (a10)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2391AEFF8(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;

  v1 = result;
  v2 = *result;
  if (*result)
  {
    v4 = (void **)(v2 + 32);
    sub_2391AB204(&v4);
    v4 = (void **)(v2 + 8);
    sub_2391AB204(&v4);
    result = (_QWORD *)MEMORY[0x23B838844](v2, 0x1020C401E2BB44DLL);
  }
  *v1 = 0;
  v3 = v1[2];
  if (v3)
  {
    v4 = (void **)(v3 + 32);
    sub_2391AB204(&v4);
    v4 = (void **)(v3 + 8);
    sub_2391AB204(&v4);
    result = (_QWORD *)MEMORY[0x23B838844](v3, 0x1020C401E2BB44DLL);
  }
  v1[2] = 0;
  *((_BYTE *)v1 + 8) = 0;
  return result;
}

void sub_2391AF0A8(uint64_t a1, char **a2, int a3, uint64_t a4)
{
  NSObject *v4;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char **v13;
  _DWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = qword_2542CF618;
  if (a4)
  {
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v14[0]) = 0;
      _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosResponse, update state to Supl_Pos_Recd", (uint8_t *)v14, 2u);
    }
    v8 = sub_2391B5594(a4);
    sub_2391B74F4((uint64_t)v8, 5, a4);
    v9 = sub_2391B5594(a4);
    v10 = (uint64_t)v9;
    v11 = *a2;
    v12 = a2[1];
    if (*a2 != v12)
    {
      *(_WORD *)(v9[5] + 8) = 3;
      v13 = (char **)(v9[5] + 64);
      if (v13 != a2)
        sub_239107FF0(v13, v11, v12, v12 - v11);
    }
    sub_2391B15F0(v10, a3);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v14[0]) = 0;
      _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosResponse, session NULL", (uint8_t *)v14, 2u);
      v4 = qword_2542CF618;
    }
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v14[0] = 67109120;
      v14[1] = 513;
      _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v14, 8u);
    }
  }
}

uint64_t sub_2391AF244(uint64_t a1, int a2, char a3)
{
  uint64_t v5;
  NSObject *v6;
  uint64_t v8;
  unsigned __int16 v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *__p;
  void *v16;
  uint64_t v17;
  char v18;
  uint8_t buf[4];
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD v25[8];
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  char v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(sub_2391B1EF8() + 24);
  if (v5)
  {
    while (*(_DWORD *)v5 != a2)
    {
      v5 = *(_QWORD *)(v5 + 8);
      if (!v5)
        goto LABEL_4;
    }
    buf[0] = 0;
    v21 = 0;
    v22 = -1;
    v23 = 0;
    *(_QWORD *)v25 = 0;
    v24 = 0;
    *(_QWORD *)((char *)&v25[1] + 1) = 0;
    *(_QWORD *)&v25[5] = 0;
    v25[7] = 0;
    v26 = -1;
    v27 = 0;
    v28 = 0;
    v29 = -1;
    v30 = 0;
    v31 = 0;
    v32[0] = 0;
    *(_QWORD *)((char *)v32 + 6) = 0;
    memset(&v32[2], 0, 24);
    v33 = 1;
    v8 = *(_QWORD *)(sub_2391BC46C() + 16);
    if (v8)
    {
      while (*(_DWORD *)v8 != *(_DWORD *)(v5 + 588))
      {
        v8 = *(_QWORD *)(v8 + 8);
        if (!v8)
          goto LABEL_14;
      }
      sub_2391A8EE0((uint64_t)buf, v8 + 56);
    }
LABEL_14:
    v10 = *(_WORD *)(v5 + 512);
    v11 = *(_QWORD *)(v5 + 520);
    v12 = 0;
    v13 = 0;
    v14 = 0;
    sub_239189290(&v12, *(const void **)(v5 + 528), *(_QWORD *)(v5 + 536), *(_QWORD *)(v5 + 536) - *(_QWORD *)(v5 + 528));
    __p = 0;
    v16 = 0;
    v17 = 0;
    sub_239189290(&__p, *(const void **)(v5 + 552), *(_QWORD *)(v5 + 560), *(_QWORD *)(v5 + 560) - *(_QWORD *)(v5 + 552));
    v18 = *(_BYTE *)(v5 + 576);
    sub_2391BD258(a2, a3, &v10);
    if (__p)
    {
      v16 = __p;
      operator delete(__p);
    }
    if (v12)
    {
      v13 = v12;
      operator delete(v12);
    }
    sub_2391A8BC0((uint64_t)buf);
    return 0;
  }
  else
  {
LABEL_4:
    v6 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_2390FD000, v6, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::ProcessLppAdReq, session NULL", buf, 2u);
      v6 = qword_2542CF618;
    }
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      v20 = 513;
      _os_log_error_impl(&dword_2390FD000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    }
    return -1;
  }
}

void sub_2391AF490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  sub_2391AF4D0(&a10);
  sub_2391A8BC0((uint64_t)&a19);
  _Unwind_Resume(a1);
}

_QWORD *sub_2391AF4D0(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)a1[5];
  if (v2)
  {
    a1[6] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[2];
  if (v3)
  {
    a1[3] = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_2391AF510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  int v9;
  NSObject *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v26[6];

  v26[5] = *MEMORY[0x24BDAC8D0];
  v4 = sub_2391B1EF8();
  v5 = *(_DWORD *)(a2 + 28);
  v6 = *(_QWORD *)(v4 + 24);
  if (!v6)
  {
LABEL_4:
    v7 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      LODWORD(v26[0]) = 67109120;
      HIDWORD(v26[0]) = v5;
      _os_log_error_impl(&dword_2390FD000, v7, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::HandleLppPosResponseFromStack, session not found %d", (uint8_t *)v26, 8u);
      v7 = qword_2542CF618;
    }
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      return;
    v26[0] = 0x20104000100;
LABEL_8:
    _os_log_error_impl(&dword_2390FD000, v7, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v26, 8u);
    return;
  }
  while (*(_DWORD *)v6 != v5)
  {
    v6 = *(_QWORD *)(v6 + 8);
    if (!v6)
      goto LABEL_4;
  }
  v8 = v6 - 8;
  *(_DWORD *)(v6 + 416) = *(_DWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(_BYTE *)(a2 + 24))
  {
    v10 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      LODWORD(v26[0]) = 67109120;
      HIDWORD(v26[0]) = v9;
      _os_log_error_impl(&dword_2390FD000, v10, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::HandleLppPosResponseFromStack, lppstatus %d", (uint8_t *)v26, 8u);
      v10 = qword_2542CF618;
    }
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      v26[0] = 0x20304000100;
      _os_log_error_impl(&dword_2390FD000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v26, 8u);
    }
    v11 = sub_2391B5594(v8);
    sub_2391B74F4((uint64_t)v11, 5, v8);
    v12 = sub_2391B5594(v8);
    sub_2391B1B30((uint64_t)v12, *(uint64_t **)(a1 + 16));
    sub_2391B15F0((uint64_t)v12, 1);
    sub_2391AEFF8((_QWORD *)a1);
    return;
  }
  v13 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)a2 == v13)
    return;
  sub_23918B630(*(_QWORD *)a2, v13 - *(_QWORD *)a2);
  v14 = *(_QWORD **)(a1 + 16);
  if (v14)
    goto LABEL_20;
  v15 = operator new(0x38uLL, MEMORY[0x24BEDB6B8]);
  if (v15)
  {
    v14 = v15;
    v15[6] = 0;
    *((_OWORD *)v15 + 1) = 0u;
    *((_OWORD *)v15 + 2) = 0u;
    *(_OWORD *)v15 = 0u;
    *(_QWORD *)(a1 + 16) = v15;
LABEL_20:
    *(_DWORD *)v14 = 1;
    v16 = (_QWORD *)v14[1];
    v17 = (_QWORD *)v14[2];
    if (v17 == v16)
    {
      if ((_QWORD *)v14[3] == v17)
      {
        v26[4] = v14 + 3;
        v22 = operator new(0x18uLL);
        v26[0] = v22;
        v26[1] = v22;
        v22[1] = 0;
        v22[2] = 0;
        *v22 = 0;
        v26[2] = v22 + 3;
        v26[3] = v22 + 3;
        sub_23918B000(v14 + 1, v26);
        sub_23918B1D0((uint64_t)v26);
      }
      else
      {
        *v17 = 0;
        v17[1] = 0;
        v17[2] = 0;
        v14[2] = v17 + 3;
      }
    }
    else if (0xAAAAAAAAAAAAAAABLL * (v17 - v16) >= 2)
    {
      v18 = v16 + 3;
      if (v17 != v16 + 3)
      {
        v19 = (_QWORD *)v14[2];
        do
        {
          v21 = (void *)*(v19 - 3);
          v19 -= 3;
          v20 = v21;
          if (v21)
          {
            *(v17 - 2) = v20;
            operator delete(v20);
          }
          v17 = v19;
        }
        while (v19 != v18);
      }
      v14[2] = v18;
    }
    v23 = *(_QWORD **)(*(_QWORD *)(a1 + 16) + 8);
    if (v23 != (_QWORD *)a2)
      sub_239107FF0(v23, *(char **)a2, *(char **)(a2 + 8), *(_QWORD *)(a2 + 8) - *(_QWORD *)a2);
    v24 = sub_2391B5594(v8);
    sub_2391B74F4((uint64_t)v24, 5, v8);
    v25 = sub_2391B5594(v8);
    sub_2391B1B30((uint64_t)v25, *(uint64_t **)(a1 + 16));
    sub_2391B15F0((uint64_t)v25, 0);
    sub_2391AEFF8((_QWORD *)a1);
    return;
  }
  *(_QWORD *)(a1 + 16) = 0;
  v7 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    LOWORD(v26[0]) = 0;
    _os_log_error_impl(&dword_2390FD000, v7, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::HandleLppPosResponseFromStack, rsp params mem allocation failure", (uint8_t *)v26, 2u);
    v7 = qword_2542CF618;
  }
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    v26[0] = 0x60104000100;
    goto LABEL_8;
  }
}

void sub_2391AF938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23918B1D0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2391AF954(unsigned __int16 *a1, _DWORD *a2)
{
  NSObject *v4;
  uint64_t v5;
  _DWORD *v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _DWORD *v14;
  int v15;
  NSObject *v16;
  unint64_t v17;
  NSObject *v18;
  unsigned __int8 *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  NSObject *v30;
  _BYTE *v31;
  _BYTE *v32;
  _DWORD *v33;
  uint8_t __dst[280];
  uint8_t buf[4];
  _BYTE *v36;
  _DWORD __src[72];
  _BYTE __p[32];
  _QWORD v39[40];

  v39[37] = *MEMORY[0x24BDAC8D0];
  sub_2391011A4(__p, "gps_set_gps_time");
  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v31 = __p;
    if (__p[23] < 0)
      v31 = *(_BYTE **)__p;
    __src[0] = 136315138;
    *(_QWORD *)&__src[1] = v31;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", (uint8_t *)__src, 0xCu);
  }
  if ((__p[23] & 0x80000000) != 0)
    operator delete(*(void **)__p);
  v5 = 2;
  do
  {
    v6 = &__src[v5];
    *(_WORD *)v6 = -1;
    *((_BYTE *)v6 + 2) = -1;
    *(_QWORD *)(v6 + 1) = -1;
    *((_BYTE *)v6 + 12) = -1;
    v5 += 4;
  }
  while (v6 + 4 != &__src[66]);
  v7 = *((_DWORD *)a1 + 1);
  __src[0] = v7;
  v8 = *a1;
  LOWORD(__src[1]) = *a1;
  LOBYTE(__src[66]) = *((_BYTE *)a1 + 2);
  __src[67] = 1;
  __src[68] = 2 * (*a2 != 0);
  __src[69] = a2[2];
  v9 = *((unsigned __int8 *)a1 + 8);
  BYTE2(__src[1]) = *((_BYTE *)a1 + 8);
  HIBYTE(__src[1]) = *((_BYTE *)a1 + 72);
  v10 = HIBYTE(__src[1]);
  if (HIBYTE(__src[1]))
  {
    v11 = 0;
    v12 = 16 * HIBYTE(__src[1]);
    v13 = a1 + 40;
    do
    {
      v14 = &__src[v11 / 4];
      *((_BYTE *)v14 + 10) = *(v13 - 6);
      v15 = *(v13 - 1);
      v14[3] = *(v13 - 2);
      v14[4] = v15;
      *((_BYTE *)v14 + 20) = *v13;
      *((_WORD *)v14 + 4) = *((_WORD *)v13 - 2);
      v11 += 16;
      v13 += 8;
    }
    while (v12 != v11);
  }
  v16 = qword_2542CF618;
  v33 = a2;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)__p = 67109888;
    *(_DWORD *)&__p[4] = v7;
    *(_WORD *)&__p[8] = 1024;
    *(_DWORD *)&__p[10] = v9;
    *(_WORD *)&__p[14] = 1024;
    *(_DWORD *)&__p[16] = v8;
    *(_WORD *)&__p[20] = 1024;
    *(_DWORD *)&__p[22] = v10;
    _os_log_debug_impl(&dword_2390FD000, v16, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp gpsTow,%u,GpsTowUncK,%u,GpsWeek,%u,,NumTowAssist,%u", __p, 0x1Au);
    v10 = HIBYTE(__src[1]);
    if (!HIBYTE(__src[1]))
      goto LABEL_15;
  }
  else if (!v10)
  {
    goto LABEL_15;
  }
  v17 = 0;
  v18 = qword_2542CF618;
  v19 = (unsigned __int8 *)&__src[2] + 2;
  do
  {
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v20 = *v19;
      v21 = *(_DWORD *)(v19 + 2);
      v22 = *(_DWORD *)(v19 + 6);
      v23 = v19[10];
      v24 = *((unsigned __int16 *)v19 - 1);
      *(_DWORD *)__p = 134219264;
      *(_QWORD *)&__p[4] = v17;
      *(_WORD *)&__p[12] = 1024;
      *(_DWORD *)&__p[14] = v20;
      *(_WORD *)&__p[18] = 1024;
      *(_DWORD *)&__p[20] = v21;
      *(_WORD *)&__p[24] = 1024;
      *(_DWORD *)&__p[26] = v22;
      *(_WORD *)&__p[30] = 1024;
      LODWORD(v39[0]) = v23;
      WORD2(v39[0]) = 1024;
      *(_DWORD *)((char *)v39 + 6) = v24;
      _os_log_impl(&dword_2390FD000, v18, OS_LOG_TYPE_DEFAULT, "Index,%zu,Satid,%u,antiSpoof,%u,Alert,%u,tlmRes,%u,tlmWord,%u", __p, 0x2Au);
      v18 = qword_2542CF618;
      v10 = HIBYTE(__src[1]);
    }
    ++v17;
    v19 += 16;
  }
  while (v17 < v10);
LABEL_15:
  v25 = *((_QWORD *)a1 + 26);
  if (v25)
    MEMORY[0x23B838820](v25, 0x1000C80737C248BLL);
  *((_QWORD *)a1 + 26) = 0;
  v26 = sub_2391BDC54();
  memcpy(__dst, __src, sizeof(__dst));
  memmove((void *)(v26 + 144), __src, 0x118uLL);
  v27 = *(NSObject **)(v26 + 96);
  *(_QWORD *)__p = MEMORY[0x24BDAC760];
  *(_QWORD *)&__p[8] = 3221225472;
  *(_QWORD *)&__p[16] = sub_2391C1C8C;
  *(_QWORD *)&__p[24] = &unk_250ABD238;
  v39[0] = v26;
  memcpy(&v39[1], __dst, 0x118uLL);
  dispatch_async(v27, __p);
  v28 = v33[2];
  v29 = sub_2391BDC54();
  *(_DWORD *)&__p[20] = 0;
  *(_QWORD *)&__p[8] = 0;
  *(_QWORD *)&__p[24] = 0;
  *(_DWORD *)__p = v28;
  LOBYTE(v39[0]) = -1;
  *(_DWORD *)&__p[16] = 35;
  sub_2391BE930(v29, (unsigned int *)__p);
  sub_2391011A4(__p, "gps_set_gps_time");
  v30 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v32 = __p;
    if (__p[23] < 0)
      v32 = *(_BYTE **)__p;
    *(_DWORD *)buf = 136315138;
    v36 = v32;
    _os_log_debug_impl(&dword_2390FD000, v30, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
  }
  if ((__p[23] & 0x80000000) != 0)
    operator delete(*(void **)__p);
}

void sub_2391AFDB4(unsigned __int8 *a1, _DWORD *a2)
{
  NSObject *v4;
  uint64_t v5;
  __int128 v6;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  NSObject *v19;
  void **p_vtable;
  NSObject *v21;
  _WORD *v22;
  __int16 v23;
  _DWORD *v24;
  NSObject *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  NSObject *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  void *v64;
  NSObject *v65;
  uint64_t v66;
  void *p_p;
  void *v68;
  _DWORD *v69;
  uint8_t buf[4];
  void *v71;
  _DWORD __src[388];
  void *__p;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _DWORD v77[388];
  uint64_t v78;

  v78 = *MEMORY[0x24BDAC8D0];
  sub_2391011A4(&__p, "gps_set_based_aid");
  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    p_p = &__p;
    if (SBYTE7(v75) < 0)
      p_p = __p;
    __src[0] = 136315138;
    *(_QWORD *)&__src[1] = p_p;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", (uint8_t *)__src, 0xCu);
  }
  if (SBYTE7(v75) < 0)
    operator delete(__p);
  LOBYTE(__src[0]) = -1;
  v5 = 1;
  *(_QWORD *)&v6 = 0x8000000080000000;
  *((_QWORD *)&v6 + 1) = 0x8000000080000000;
  do
  {
    v7 = &__src[v5];
    *(_OWORD *)v7 = xmmword_2391C7E10;
    *((_OWORD *)v7 + 1) = v6;
    *((_OWORD *)v7 + 2) = xmmword_2391C7E20;
    *((_QWORD *)v7 + 6) = 0x8000800080008000;
    v7[14] = 0x80000000;
    *((_WORD *)v7 + 30) = -1;
    v7[16] = -1;
    *((_BYTE *)v7 + 68) = 127;
    v7[18] = -1;
    v5 += 24;
    *((_BYTE *)v7 + 76) = -1;
  }
  while (v7 + 24 != &__src[385]);
  *(_QWORD *)&__src[385] = -1;
  __src[387] = -1;
  if (*a1)
  {
    v69 = a2;
    v8 = 0;
    v9 = 0;
    LOBYTE(__src[0]) = *a1;
    v10 = 96;
    do
    {
      v11 = a1;
      v12 = *((_QWORD *)a1 + 1);
      v13 = v12 + v10;
      v14 = &__src[v8];
      *((_BYTE *)v14 + 64) = *(_BYTE *)(v12 + v10 - 94);
      *((_BYTE *)v14 + 60) = *(_BYTE *)(v12 + v10 - 96);
      *((_BYTE *)v14 + 65) = *(_BYTE *)(v12 + v10 - 92);
      *((_BYTE *)v14 + 61) = *(_BYTE *)(v12 + v10 - 91);
      v15 = *(unsigned __int8 *)(v12 + v10 - 90);
      if (v15 >= 0x3F)
        LOBYTE(v15) = 63;
      *((_BYTE *)v14 + 62) = v15;
      v14[17] = *(unsigned __int8 *)(v13 - 86);
      *((_WORD *)v14 + 18) = *(_WORD *)(v13 - 88);
      *((_WORD *)v14 + 19) = *(_WORD *)(v13 - 66);
      *(_OWORD *)(v14 + 21) = *(_OWORD *)(v13 - 84);
      v16 = *(__int16 *)(v13 - 68);
      v17 = *(unsigned __int16 *)(v13 - 68);
      *((_BYTE *)v14 + 72) = *(_WORD *)(v13 - 68);
      v18 = *(unsigned __int16 *)(v13 - 64);
      *((_BYTE *)v14 + 63) = v18;
      if (v16 > 127)
      {
        v19 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          LODWORD(__p) = 67109120;
          HIDWORD(__p) = v17;
          _os_log_error_impl(&dword_2390FD000, v19, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp ephem_tgd,%d", (uint8_t *)&__p, 8u);
          v12 = *((_QWORD *)v11 + 1);
          v18 = *(unsigned __int16 *)(v12 + v10 - 64);
        }
      }
      else
      {
        *((_BYTE *)v14 + 72) = v17;
      }
      if ((__int16)v18 > 127)
      {
        p_vtable = &OBJC_METACLASS___CoreGnssEmergencyManager.vtable;
        v21 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          LODWORD(__p) = 67109120;
          HIDWORD(__p) = v18;
          _os_log_error_impl(&dword_2390FD000, v21, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp ephem_af2,%d", (uint8_t *)&__p, 8u);
          v12 = *((_QWORD *)v11 + 1);
        }
      }
      else
      {
        *((_BYTE *)v14 + 63) = v18;
        p_vtable = (void **)(&OBJC_METACLASS___CoreGnssEmergencyManager + 24);
      }
      v22 = (_WORD *)(v12 + v10);
      v23 = *(_WORD *)(v12 + v10 - 62);
      v24 = &__src[v8];
      *((_WORD *)v24 + 20) = v23;
      v14[1] = *((_DWORD *)v22 - 15);
      *(_DWORD *)((char *)v24 + 42) = *((_DWORD *)v22 - 14);
      v24[2] = *((_DWORD *)v22 - 13);
      *((_WORD *)v24 + 23) = *(v22 - 24);
      *((_WORD *)v24 + 24) = *(v22 - 20);
      v24[3] = *((_DWORD *)v22 - 11);
      v24[4] = *((_DWORD *)v22 - 9);
      *((_WORD *)v24 + 25) = *(v22 - 16);
      v24[19] = *((unsigned __int8 *)v22 - 30);
      *((_BYTE *)v24 + 80) = *((_BYTE *)v22 - 29);
      *((_WORD *)v24 + 26) = *(v22 - 14);
      *((_WORD *)v24 + 27) = *(v22 - 10);
      v24[5] = *((_DWORD *)v22 - 6);
      v24[6] = *((_DWORD *)v22 - 4);
      *((_WORD *)v24 + 29) = *v22;
      *((_WORD *)v24 + 28) = *(v22 - 6);
      *(_QWORD *)(v24 + 7) = *((_QWORD *)v22 - 1);
      v25 = p_vtable[195];
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(__p) = 0;
        _os_log_debug_impl(&dword_2390FD000, v25, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp NavModel", (uint8_t *)&__p, 2u);
        v25 = p_vtable[195];
      }
      a1 = v11;
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        v26 = *((unsigned __int8 *)v14 + 65);
        v27 = *((unsigned __int8 *)v14 + 61);
        v28 = *((unsigned __int8 *)v14 + 62);
        v29 = v14[17];
        v30 = *((unsigned __int16 *)v14 + 18);
        v31 = *((unsigned __int16 *)v14 + 19);
        v32 = v14[21];
        v33 = v14[22];
        LODWORD(__p) = 67111168;
        HIDWORD(__p) = v9;
        LOWORD(v74) = 1024;
        *(_DWORD *)((char *)&v74 + 2) = v26;
        HIWORD(v74) = 1024;
        LODWORD(v75) = v27;
        WORD2(v75) = 1024;
        *(_DWORD *)((char *)&v75 + 6) = v28;
        WORD5(v75) = 1024;
        HIDWORD(v75) = v29;
        LOWORD(v76) = 1024;
        *(_DWORD *)((char *)&v76 + 2) = v30;
        HIWORD(v76) = 1024;
        v77[0] = v31;
        LOWORD(v77[1]) = 1024;
        *(_DWORD *)((char *)&v77[1] + 2) = v32;
        HIWORD(v77[2]) = 1024;
        v77[3] = v33;
        _os_log_impl(&dword_2390FD000, v25, OS_LOG_TYPE_DEFAULT, "SatId,%u,EphemCodeOnL2,%u,EphemURA,%u,EphemSvHealth,%u,Epheml2pFlag,%u,EphemIodc,%u,EphemToc,%u,Reserved1,%u,Reserved2,%u", (uint8_t *)&__p, 0x38u);
        v25 = p_vtable[195];
      }
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        v34 = v14[23];
        v35 = v14[24];
        v36 = *((char *)v14 + 72);
        v37 = *((char *)v14 + 63);
        v38 = *((__int16 *)v24 + 20);
        v39 = v14[1];
        v40 = *((__int16 *)v24 + 21);
        v41 = *((__int16 *)v24 + 22);
        v42 = v24[2];
        v43 = *((__int16 *)v24 + 23);
        LODWORD(__p) = 67111424;
        HIDWORD(__p) = v34;
        LOWORD(v74) = 1024;
        *(_DWORD *)((char *)&v74 + 2) = v35;
        HIWORD(v74) = 1024;
        LODWORD(v75) = v36;
        WORD2(v75) = 1024;
        *(_DWORD *)((char *)&v75 + 6) = v37;
        WORD5(v75) = 1024;
        HIDWORD(v75) = v38;
        LOWORD(v76) = 1024;
        *(_DWORD *)((char *)&v76 + 2) = v39;
        HIWORD(v76) = 1024;
        v77[0] = v40;
        LOWORD(v77[1]) = 1024;
        *(_DWORD *)((char *)&v77[1] + 2) = v41;
        HIWORD(v77[2]) = 1024;
        v77[3] = v42;
        LOWORD(v77[4]) = 1024;
        *(_DWORD *)((char *)&v77[4] + 2) = v43;
        _os_log_impl(&dword_2390FD000, v25, OS_LOG_TYPE_DEFAULT, "Reserved3,%u,Reserved4,%u,EphemTgd,%d,EphemAf2,%d,EphemAf1,%d,EphemAf0,%d,EphemCrs,%d,EphemDeltaN,%d,EphemMo,%d,EphemCuc,%d", (uint8_t *)&__p, 0x3Eu);
        v25 = p_vtable[195];
      }
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        v44 = *((__int16 *)v24 + 24);
        v45 = v24[3];
        v46 = v24[4];
        v47 = *((unsigned __int16 *)v24 + 25);
        v48 = v24[19];
        v49 = *((unsigned __int8 *)v24 + 80);
        v50 = *((__int16 *)v24 + 26);
        v51 = *((__int16 *)v24 + 27);
        v52 = v24[5];
        v53 = v24[6];
        v54 = *((__int16 *)v24 + 29);
        v55 = *((__int16 *)v24 + 28);
        v56 = v24[7];
        v57 = v24[8];
        LODWORD(__p) = 67112448;
        HIDWORD(__p) = v44;
        LOWORD(v74) = 1024;
        *(_DWORD *)((char *)&v74 + 2) = v45;
        HIWORD(v74) = 1024;
        LODWORD(v75) = v46;
        WORD2(v75) = 1024;
        *(_DWORD *)((char *)&v75 + 6) = v47;
        WORD5(v75) = 1024;
        HIDWORD(v75) = v48;
        LOWORD(v76) = 1024;
        *(_DWORD *)((char *)&v76 + 2) = v49;
        HIWORD(v76) = 1024;
        v77[0] = v50;
        LOWORD(v77[1]) = 1024;
        *(_DWORD *)((char *)&v77[1] + 2) = v51;
        HIWORD(v77[2]) = 1024;
        v77[3] = v52;
        LOWORD(v77[4]) = 1024;
        *(_DWORD *)((char *)&v77[4] + 2) = v53;
        HIWORD(v77[5]) = 1024;
        v77[6] = v54;
        LOWORD(v77[7]) = 1024;
        *(_DWORD *)((char *)&v77[7] + 2) = v55;
        HIWORD(v77[8]) = 1024;
        v77[9] = v56;
        LOWORD(v77[10]) = 1024;
        *(_DWORD *)((char *)&v77[10] + 2) = v57;
        _os_log_impl(&dword_2390FD000, v25, OS_LOG_TYPE_DEFAULT, "EphemCus,%d,Epheme,%u,EphemAPowerhalf,%u,EphemToe,%u,EphemFitFlag,%u,EphemAODO,%u,EphemCic,%d,EphemCis,%d,EphemOmegaA0,%d,EphemIo,%d,EphemIdot,%d,EphemCrc,%d,EphemW,%d,EphemOmegaAdot,%d", (uint8_t *)&__p, 0x56u);
      }
      ++v9;
      v8 += 24;
      v10 += 100;
    }
    while (v9 < *v11);
    __src[385] = 1;
    __src[386] = 2 * (*v69 != 0);
    __src[387] = v69[2];
    v58 = sub_2391BDC54();
    v59 = *(NSObject **)(v58 + 96);
    __p = (void *)MEMORY[0x24BDAC760];
    v74 = 3221225472;
    *(_QWORD *)&v75 = sub_2391C1C48;
    *((_QWORD *)&v75 + 1) = &unk_250ABD218;
    v76 = v58;
    memcpy(v77, __src, sizeof(v77));
    dispatch_async(v59, &__p);
    v60 = v69[2];
    v61 = sub_2391BDC54();
    v74 = 0;
    LODWORD(__p) = v60;
    LOBYTE(v76) = -1;
    v75 = 0x25uLL;
    sub_2391BE930(v61, (unsigned int *)&__p);
    v62 = *((_QWORD *)v11 + 1);
    if (v62)
      MEMORY[0x23B838820](v62, 0x1000C80A2FAA732);
    *((_QWORD *)v11 + 1) = 0;
    sub_2391011A4(&__p, "gps_set_based_aid");
    v63 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      v64 = &__p;
      if (SBYTE7(v75) < 0)
        v64 = __p;
      *(_DWORD *)buf = 136315138;
      v71 = v64;
LABEL_47:
      _os_log_debug_impl(&dword_2390FD000, v63, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
    }
  }
  else
  {
    v65 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__p) = 0;
      _os_log_error_impl(&dword_2390FD000, v65, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp Zero Satellites", (uint8_t *)&__p, 2u);
    }
    v66 = *((_QWORD *)a1 + 1);
    if (v66)
      MEMORY[0x23B838820](v66, 0x1000C80A2FAA732);
    *((_QWORD *)a1 + 1) = 0;
    sub_2391011A4(&__p, "gps_set_based_aid");
    v63 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      v68 = &__p;
      if (SBYTE7(v75) < 0)
        v68 = __p;
      *(_DWORD *)buf = 136315138;
      v71 = v68;
      goto LABEL_47;
    }
  }
  if (SBYTE7(v75) < 0)
    operator delete(__p);
}

void sub_2391B0618(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  NSObject *v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  int v12;
  NSObject *v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  NSObject *v19;
  uint64_t v20;
  int v21;
  _BOOL4 v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  void *p_p;
  void *v31;
  int v32;
  unsigned int v33;
  int v34;
  uint8_t buf[4];
  void *v37;
  void *__p;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _BYTE v42[12];
  int v43;
  __int16 v44;
  _BYTE v45[6];
  int v46;
  int v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  sub_2391011A4(&__p, "gps_set_gnss_ref_loc");
  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    p_p = &__p;
    if (SBYTE7(v40) < 0)
      p_p = __p;
    *(_DWORD *)buf = 136315138;
    v37 = p_p;
    _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", buf, 0xCu);
  }
  if (SBYTE7(v40) < 0)
    operator delete(__p);
  v5 = *(unsigned __int16 *)(a1 + 10);
  if (v5 == 9)
  {
    v6 = *(_DWORD *)(a1 + 16);
    v34 = *(_DWORD *)(a1 + 20);
    v7 = *(unsigned __int8 *)(a1 + 12);
    v8 = *(_DWORD *)(a1 + 28);
    if (HIWORD(v8))
    {
      v12 = *(unsigned __int8 *)(a1 + 12);
      v13 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        LODWORD(__p) = 67109120;
        HIDWORD(__p) = v8;
        _os_log_error_impl(&dword_2390FD000, v13, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp altitude,%u", (uint8_t *)&__p, 8u);
        v8 = *(_DWORD *)(a1 + 28);
      }
      LOWORD(v32) = -1;
      v7 = v12;
    }
    else
    {
      v32 = *(_DWORD *)(a1 + 28);
    }
    v14 = *(unsigned __int8 *)(a1 + 24);
    if (v14 <= 0x45)
      v14 = 69;
    v33 = v14;
    if (*(unsigned __int8 *)(a1 + 25) <= 0x45u)
      v15 = 69;
    else
      v15 = *(unsigned __int8 *)(a1 + 25);
    v16 = *(unsigned __int8 *)(a1 + 26);
    v17 = *(unsigned __int8 *)(a1 + 32);
    v18 = *(unsigned __int8 *)(a1 + 33);
    v19 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(__p) = 0;
      _os_log_impl(&dword_2390FD000, v19, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp Shape Type is Ellipsoid Point Uncertain Altitude", (uint8_t *)&__p, 2u);
      v19 = qword_2542CF618;
    }
    v20 = *(_QWORD *)&v6 & 0x7FFFFFLL;
    v21 = (v8 >> 15) & 1;
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      __p = (void *)0x904010B01;
      LOWORD(v39) = 1025;
      *(_DWORD *)((char *)&v39 + 2) = v7 != 0;
      HIWORD(v39) = 1025;
      LODWORD(v40) = v20;
      WORD2(v40) = 1025;
      *(_DWORD *)((char *)&v40 + 6) = v34;
      WORD5(v40) = 1025;
      HIDWORD(v40) = (unsigned __int16)v32;
      LOWORD(v41) = 1025;
      *(_DWORD *)((char *)&v41 + 2) = v33;
      HIWORD(v41) = 1025;
      *(_DWORD *)v42 = v15;
      *(_WORD *)&v42[4] = 1025;
      *(_DWORD *)&v42[6] = v16;
      *(_WORD *)&v42[10] = 1025;
      v43 = (v8 >> 15) & 1;
      v44 = 1025;
      *(_DWORD *)v45 = v17;
      *(_WORD *)&v45[4] = 1025;
      v46 = v18;
      _os_log_impl(&dword_2390FD000, v19, OS_LOG_TYPE_DEFAULT, "v_ShapeType,%{private}u,v_SignOfLat,%{private}u,v_Latitude,%{private}u,v_Longitude,%{private}u,v_Altitude,%{private}u,v_UncertSemiMajor,%{private}u,v_UncertSemiMinor,%{private}u,v_AxisBearing,%{private}u,v_DirectOfAlt,%{private}u,v_UncertAltitude,%{private}u,v_Confidence,%{private}u", (uint8_t *)&__p, 0x44u);
    }
    v22 = *a3 != 0;
    v23 = a3[2];
    v24 = sub_2391BDC54();
    v25 = 256;
    if (!v7)
      v25 = 0;
    v26 = (v20 << 32) | ((unint64_t)(unsigned __int16)v32 << 16) | 9 | v25;
    *(_QWORD *)(v24 + 112) = v26;
    *(_DWORD *)(v24 + 120) = v34;
    *(_BYTE *)(v24 + 124) = v21;
    *(_BYTE *)(v24 + 125) = v33;
    *(_BYTE *)(v24 + 126) = v15;
    *(_BYTE *)(v24 + 127) = v16;
    *(_BYTE *)(v24 + 128) = v17;
    *(_BYTE *)(v24 + 129) = v18;
    *(_DWORD *)(v24 + 132) = 1;
    *(_DWORD *)(v24 + 136) = 2 * v22;
    *(_DWORD *)(v24 + 140) = v23;
    v27 = *(NSObject **)(v24 + 96);
    __p = (void *)MEMORY[0x24BDAC760];
    v39 = 3221225472;
    *(_QWORD *)&v40 = sub_2391C1CD0;
    *((_QWORD *)&v40 + 1) = &unk_250ABD258;
    v41 = v24;
    *(_QWORD *)v42 = v26;
    *(_DWORD *)&v42[8] = v34;
    LOBYTE(v43) = v21;
    BYTE1(v43) = v33;
    BYTE2(v43) = v15;
    HIBYTE(v43) = v16;
    LOBYTE(v44) = v17;
    HIBYTE(v44) = v18;
    *(_DWORD *)&v45[2] = 1;
    v46 = 2 * v22;
    v47 = v23;
    dispatch_async(v27, &__p);
    v28 = a3[2];
    v29 = sub_2391BDC54();
    v39 = 0;
    LODWORD(__p) = v28;
    LOBYTE(v41) = -1;
    v40 = 0x24uLL;
    sub_2391BE930(v29, (unsigned int *)&__p);
    sub_2391011A4(&__p, "gps_set_gnss_ref_loc");
    v10 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      goto LABEL_28;
    v31 = &__p;
    if (SBYTE7(v40) < 0)
      v31 = __p;
    *(_DWORD *)buf = 136315138;
    v37 = v31;
LABEL_37:
    _os_log_debug_impl(&dword_2390FD000, v10, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
    goto LABEL_28;
  }
  v9 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    LODWORD(__p) = 67109120;
    HIDWORD(__p) = v5;
    _os_log_error_impl(&dword_2390FD000, v9, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp Shape,%u", (uint8_t *)&__p, 8u);
  }
  sub_2391011A4(&__p, "gps_set_gnss_ref_loc");
  v10 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v11 = &__p;
    if (SBYTE7(v40) < 0)
      v11 = __p;
    *(_DWORD *)buf = 136315138;
    v37 = v11;
    goto LABEL_37;
  }
LABEL_28:
  if (SBYTE7(v40) < 0)
    operator delete(__p);
}

uint64_t sub_2391B0B04(uint64_t a1, unsigned __int16 *a2, _DWORD *a3)
{
  NSObject *v5;
  NSObject *v6;
  void **v8;
  void **v9;
  void *__p[2];
  char v11;
  uint8_t buf[4];
  void **v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  sub_2391011A4(__p, "gps_gnss_start_based_mode");
  v5 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v8 = __p;
    if (v11 < 0)
      v8 = (void **)__p[0];
    *(_DWORD *)buf = 136315138;
    v13 = v8;
    _os_log_debug_impl(&dword_2390FD000, v5, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", buf, 0xCu);
  }
  if (v11 < 0)
    operator delete(__p[0]);
  sub_2391B0C7C(a2, a3, 4);
  sub_2391011A4(__p, "gps_gnss_start_based_mode");
  v6 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v9 = __p;
    if (v11 < 0)
      v9 = (void **)__p[0];
    *(_DWORD *)buf = 136315138;
    v13 = v9;
    _os_log_debug_impl(&dword_2390FD000, v6, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
  }
  if (v11 < 0)
    operator delete(__p[0]);
  return 4;
}

void sub_2391B0C7C(unsigned __int16 *a1, _DWORD *a2, int a3)
{
  NSObject *v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  NSObject *v17;
  int v18;
  _BOOL4 v19;
  NSObject *v20;
  unsigned int v21;
  unsigned int v22;
  NSObject *v23;
  _BOOL4 v24;
  int v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  NSObject *v29;
  NSObject *v30;
  void *p_p;
  void *v32;
  int v33;
  int v34;
  int v35;
  uint8_t buf[4];
  void *v37;
  void *__p;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  int v42;
  unsigned int v43;
  __int16 v44;
  char v45;
  int v46;
  char v47;
  char v48;
  char v49;
  int v50;
  int v51;
  __int16 v52;
  char v53;
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  sub_2391011A4(&__p, "sendPositionReq");
  v6 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    p_p = &__p;
    if (SBYTE7(v40) < 0)
      p_p = __p;
    *(_DWORD *)buf = 136315138;
    v37 = p_p;
    _os_log_debug_impl(&dword_2390FD000, v6, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", buf, 0xCu);
  }
  if (SBYTE7(v40) < 0)
    operator delete(__p);
  v7 = *a1;
  if (a3 != 4)
  {
    if (a3 == 2)
    {
      v34 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v10 = 0;
      v8 = 0;
    }
    else
    {
      if (a3 == 1)
        goto LABEL_7;
      v34 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v10 = 0;
      v8 = -1;
    }
LABEL_31:
    v17 = qword_2542CF618;
    if ((a1[26] & 1) != 0)
    {
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(__p) = 0;
        _os_log_impl(&dword_2390FD000, v17, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp AGPS constellation requested", (uint8_t *)&__p, 2u);
        v17 = qword_2542CF618;
      }
      v35 = 1;
    }
    else
    {
      v35 = 0;
    }
    v18 = *((_DWORD *)a1 + 9);
    v19 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
    if (v18 == 1)
    {
      if (v19)
      {
        LOWORD(__p) = 0;
        _os_log_impl(&dword_2390FD000, v17, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp UE can request for additional assistance data", (uint8_t *)&__p, 2u);
      }
      v33 = 0;
    }
    else
    {
      if (v19)
      {
        LOWORD(__p) = 0;
        _os_log_impl(&dword_2390FD000, v17, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp UE cannot request for additional assistance data", (uint8_t *)&__p, 2u);
      }
      v33 = 1;
    }
    v20 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(__p) = 67175169;
      HIDWORD(__p) = v8;
      LOWORD(v39) = 1025;
      *(_DWORD *)((char *)&v39 + 2) = v34;
      HIWORD(v39) = 1025;
      LODWORD(v40) = 255;
      _os_log_debug_impl(&dword_2390FD000, v20, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,v_LocInfoType,%{private}u,v_LocShapeTypes,%{private}u,v_VelReqType,%{private}u", (uint8_t *)&__p, 0x14u);
      v20 = qword_2542CF618;
    }
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      __p = (void *)0x104010701;
      LOWORD(v39) = 1025;
      *(_DWORD *)((char *)&v39 + 2) = v10;
      HIWORD(v39) = 1025;
      LODWORD(v40) = v13;
      WORD2(v40) = 1025;
      *(_DWORD *)((char *)&v40 + 6) = v12;
      WORD5(v40) = 1025;
      HIDWORD(v40) = v11;
      LOWORD(v41) = 1025;
      *(_DWORD *)((char *)&v41 + 2) = v7;
      HIWORD(v41) = 1025;
      v42 = v35;
      _os_log_impl(&dword_2390FD000, v20, OS_LOG_TYPE_DEFAULT, "ReportingAmount,%{private}u,HorAccuracy,%{private}u,HorAccConfidence,%{private}u,VertAccuracy,%{private}u,VertAccConfidence,%{private}u,RespTime,%{private}u,requestedGnss,%{private}u", (uint8_t *)&__p, 0x2Cu);
    }
    if (v8)
    {
      v21 = v8;
      if (v8 >= 3)
      {
        v23 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          __p = (void *)-4227858176;
          _os_log_error_impl(&dword_2390FD000, v23, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp LocInfoType,%u", (uint8_t *)&__p, 8u);
        }
        v22 = 0;
      }
      else
      {
        v22 = 29;
      }
    }
    else
    {
      v21 = 0;
      v22 = 32;
    }
    v24 = *a2 != 0;
    v25 = a2[2];
    v26 = sub_2391BDC54();
    v27 = *(NSObject **)(v26 + 96);
    __p = (void *)MEMORY[0x24BDAC760];
    v39 = 3221225472;
    *(_QWORD *)&v40 = sub_2391C1D08;
    *((_QWORD *)&v40 + 1) = &unk_250ABD278;
    v41 = v26;
    LOWORD(v42) = 0;
    v43 = v21;
    v44 = v7;
    v45 = v10;
    v46 = -1;
    v47 = v13;
    v48 = v12;
    v49 = v11;
    v50 = -1;
    v51 = v33;
    v52 = v35;
    v53 = v34;
    v54 = 511;
    v55 = 2 * v24;
    v56 = v25;
    dispatch_async(v27, &__p);
    v28 = sub_2391BDC54();
    v39 = 0;
    LODWORD(__p) = v25;
    LOBYTE(v41) = v10;
    v40 = v22;
    sub_2391BE930(v28, (unsigned int *)&__p);
    sub_2391011A4(&__p, "sendPositionReq");
    v29 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      v32 = &__p;
      if (SBYTE7(v40) < 0)
        v32 = __p;
      *(_DWORD *)buf = 136315138;
      v37 = v32;
      _os_log_debug_impl(&dword_2390FD000, v29, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
    }
    if (SBYTE7(v40) < 0)
      operator delete(__p);
    return;
  }
LABEL_7:
  if (a3 == 1)
    v8 = 2;
  else
    v8 = 1;
  v9 = *((_DWORD *)a1 + 1);
  if (v9 + 1 >= 2)
    v10 = (int)(log((double)v9 / 10.0 + 1.0) * 10.5 + 0.5);
  else
    v10 = 0;
  if (*((unsigned __int8 *)a1 + 20) == 255)
    v13 = 0;
  else
    v13 = *((unsigned __int8 *)a1 + 20);
  if (*((_DWORD *)a1 + 6) == 1)
  {
    v14 = *((_DWORD *)a1 + 7);
    if (v14 + 1 >= 2)
      v12 = (int)(log((double)v14 / 10.0 + 1.0) * 10.5 + 0.5);
    else
      v12 = 0;
    if (*((unsigned __int8 *)a1 + 32) == 255)
      v11 = 0;
    else
      v11 = *((unsigned __int8 *)a1 + 32);
  }
  else
  {
    v11 = 0;
    v12 = 0;
  }
  v15 = 0;
  v16 = *((unsigned __int8 *)a1 + 48);
  if (!*((_BYTE *)a1 + 48) || v16 == 255)
    goto LABEL_30;
  if ((v16 & 0xB7) != 0)
  {
    v15 = v16 & 0x37;
LABEL_30:
    v34 = v15;
    goto LABEL_31;
  }
  v30 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    LODWORD(__p) = 67109120;
    HIDWORD(__p) = v16;
    _os_log_error_impl(&dword_2390FD000, v30, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp Shape,%u not supported", (uint8_t *)&__p, 8u);
  }
}

uint64_t sub_2391B128C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  NSObject *v4;
  _DWORD v6[2];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v2 = sub_2391B7394(a1);
  *(_QWORD *)v2 = &off_250A73CB8;
  *(_DWORD *)(v2 + 360) = 1;
  *(_BYTE *)(v2 + 16) = 5;
  *(_WORD *)(v2 + 32) = 5;
  v3 = (char *)operator new(0x200uLL, MEMORY[0x24BEDB6B8]);
  if (v3)
  {
    *(_OWORD *)(v3 + 136) = 0u;
    *(_OWORD *)(v3 + 120) = 0u;
    *(_OWORD *)(v3 + 104) = 0u;
    *(_OWORD *)(v3 + 88) = 0u;
    *(_OWORD *)(v3 + 72) = 0u;
    *(_OWORD *)(v3 + 56) = 0u;
    *(_OWORD *)(v3 + 40) = 0u;
    *(_OWORD *)(v3 + 24) = 0u;
    v3[144] = -1;
    *(_OWORD *)(v3 + 8) = 0u;
    *(_OWORD *)(v3 + 168) = 0u;
    *(_OWORD *)(v3 + 184) = 0u;
    *(_OWORD *)(v3 + 200) = 0u;
    *(_OWORD *)(v3 + 216) = 0u;
    *(_OWORD *)(v3 + 232) = 0u;
    *(_OWORD *)(v3 + 248) = 0u;
    *((_QWORD *)v3 + 63) = 0;
    *(_OWORD *)(v3 + 152) = 0u;
    *(_OWORD *)(v3 + 408) = 0u;
    *(_OWORD *)(v3 + 424) = 0u;
    *(_OWORD *)(v3 + 440) = 0u;
    *(_OWORD *)(v3 + 456) = 0u;
    *(_OWORD *)(v3 + 472) = 0u;
    *(_OWORD *)(v3 + 488) = 0u;
    *(_OWORD *)(v3 + 264) = 0u;
    *(_OWORD *)(v3 + 280) = 0u;
    *(_OWORD *)(v3 + 296) = 0u;
    *(_OWORD *)(v3 + 312) = 0u;
    *(_OWORD *)(v3 + 328) = 0u;
    *(_OWORD *)(v3 + 344) = 0u;
    *(_OWORD *)(v3 + 360) = 0u;
    *(_OWORD *)(v3 + 376) = 0u;
    *(_OWORD *)(v3 + 392) = 0u;
    *(_DWORD *)v3 = 0;
    *(_QWORD *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 364) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 40) = 0;
    v4 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v6[0] = 67109120;
      v6[1] = 1537;
      _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v6, 8u);
    }
  }
  return a1;
}

uint64_t sub_2391B140C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void **v7;

  *(_QWORD *)a1 = &off_250A73CB8;
  if (*(_WORD *)(a1 + 32) == 5)
  {
    v2 = *(_QWORD *)(a1 + 40);
    if (v2)
    {
      sub_239199F0C(v2 + 152);
      v7 = (void **)(v2 + 120);
      sub_2391AB204(&v7);
      v7 = (void **)(v2 + 96);
      sub_2391AB204(&v7);
      v3 = *(void **)(v2 + 64);
      if (v3)
      {
        *(_QWORD *)(v2 + 72) = v3;
        operator delete(v3);
      }
      v4 = *(void **)(v2 + 40);
      if (v4)
      {
        *(_QWORD *)(v2 + 48) = v4;
        operator delete(v4);
      }
      v5 = *(void **)(v2 + 16);
      if (v5)
      {
        *(_QWORD *)(v2 + 24) = v5;
        operator delete(v5);
      }
      MEMORY[0x23B838844](v2, 0x1030C40986846DALL);
    }
    *(_QWORD *)(a1 + 40) = 0;
  }
  return sub_2391B7470(a1);
}

void sub_2391B14D0(uint64_t a1)
{
  sub_2391B140C(a1);
  JUMPOUT(0x23B838844);
}

void sub_2391B14F4(uint64_t a1, char a2)
{
  _QWORD *v4;
  _QWORD v5[2];
  char v6;
  void *__p[3];

  *(_DWORD *)(a1 + 20) = 1;
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  v4 = sub_2391B5594(*(_QWORD *)(a1 + 8));
  *(_BYTE *)(v4[5] + 456) = a2;
  *(_DWORD *)(v4[5] + 4) = 1;
  sub_2391015AC(__p, 0xBB8uLL);
  v5[0] = __p;
  v5[1] = 0;
  v6 = 0;
  (*(void (**)(_QWORD *, _QWORD *))(*v4 + 32))(v4, v5);
  sub_239199C58((uint64_t)v4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_2391B15A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2391B15C8(uint64_t a1)
{
  int v1;

  if (*(_DWORD *)(a1 + 364))
  {
    v1 = 6;
  }
  else
  {
    if (!*(_DWORD *)(a1 + 20))
      return;
    v1 = 7;
  }
  sub_2391B74F4(a1, v1, *(_QWORD *)(a1 + 8));
}

void sub_2391B15F0(uint64_t a1, int a2)
{
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  uint64_t v7[2];
  uint64_t v8[2];
  char v9;
  void *__p[3];
  uint8_t buf[4];
  int v12;
  uint64_t v13;
  _DWORD v14[4];
  char v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  *(_DWORD *)(a1 + 360) = 0;
  if (a2)
  {
    if (*(_DWORD *)(*(_QWORD *)(a1 + 8) + 424) == 1)
      sub_2391B14F4(a1, 4);
    return;
  }
  sub_2391015AC(__p, 0xBB8uLL);
  v8[0] = (uint64_t)__p;
  v8[1] = 0;
  v9 = 0;
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
  {
    v4 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    *(_DWORD *)buf = 67109120;
    v12 = 513;
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(v3 + 64);
  *(_WORD *)(a1 + 56) = *(_WORD *)(v3 + 72);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(v3 + 80);
  sub_23919A01C(a1 + 72, v3 + 88);
  if (a1 + 48 != v3 + 64)
  {
    sub_239107FF0((_QWORD *)(a1 + 248), *(char **)(v3 + 264), *(char **)(v3 + 272), *(_QWORD *)(v3 + 272) - *(_QWORD *)(v3 + 264));
    *(_BYTE *)(a1 + 272) = *(_BYTE *)(v3 + 288);
    *(_BYTE *)(a1 + 280) = *(_BYTE *)(v3 + 296);
    sub_239107FF0((_QWORD *)(a1 + 288), *(char **)(v3 + 304), *(char **)(v3 + 312), *(_QWORD *)(v3 + 312) - *(_QWORD *)(v3 + 304));
    sub_239107FF0((_QWORD *)(a1 + 312), *(char **)(v3 + 328), *(char **)(v3 + 336), *(_QWORD *)(v3 + 336) - *(_QWORD *)(v3 + 328));
    sub_239107FF0((_QWORD *)(a1 + 336), *(char **)(v3 + 352), *(char **)(v3 + 360), *(_QWORD *)(v3 + 360) - *(_QWORD *)(v3 + 352));
  }
  v7[0] = (uint64_t)v8;
  v7[1] = a1 + 24;
  if (!sub_2391AA398(v7))
  {
    v5 = sub_2391BDC54();
    v6 = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 376);
    v13 = 0;
    v14[0] = 0;
    *(_DWORD *)buf = v6;
    v15 = -1;
    *(_QWORD *)&v14[1] = 5;
    v14[3] = 0;
    sub_2391BE930(v5, (unsigned int *)buf);
    if (sub_2391B7C60(a1, v8) && *(_DWORD *)(*(_QWORD *)(a1 + 8) + 424) == 1)
    {
      *(_DWORD *)(a1 + 364) = 1;
      (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
    }
    goto LABEL_16;
  }
  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109120;
    v12 = 770;
LABEL_12:
    _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
LABEL_16:
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_2391B1860(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2391B188C()
{
  return 1;
}

uint64_t sub_2391B1894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  unsigned int v17;
  uint64_t *v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  _DWORD v24[4];
  char v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  sub_2391B7BC8(a1, a2);
  v4 = sub_2391B7D4C();
  v5 = sub_2391B90F0(v4, *(unsigned __int16 *)(*(_QWORD *)(a1 + 8) + 72), *(unsigned __int16 *)(a1 + 56));
  if (!v5)
  {
    v6 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v21 = 67109120;
      v22 = 515;
      _os_log_error_impl(&dword_2390FD000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v21, 8u);
    }
  }
  v7 = *(_QWORD *)(a1 + 8) + 264;
  v8 = sub_2391B7D4C();
  if (!sub_2391B9020(v8, a1 + 248, v7))
  {
    v11 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v21 = 67109120;
      v22 = 515;
      _os_log_error_impl(&dword_2390FD000, v11, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v21, 8u);
    }
    goto LABEL_11;
  }
  if (!v5)
  {
LABEL_11:
    v12 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(a1 + 48);
    *(_WORD *)(v12 + 72) = *(_WORD *)(a1 + 56);
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(a1 + 64);
    sub_23919A01C(v12 + 88, a1 + 72);
    if (v12 + 64 != a1 + 48)
    {
      sub_239107FF0((_QWORD *)(v12 + 264), *(char **)(a1 + 248), *(char **)(a1 + 256), *(_QWORD *)(a1 + 256) - *(_QWORD *)(a1 + 248));
      *(_BYTE *)(v12 + 288) = *(_BYTE *)(a1 + 272);
      *(_BYTE *)(v12 + 296) = *(_BYTE *)(a1 + 280);
      sub_239107FF0((_QWORD *)(v12 + 304), *(char **)(a1 + 288), *(char **)(a1 + 296), *(_QWORD *)(a1 + 296) - *(_QWORD *)(a1 + 288));
      sub_239107FF0((_QWORD *)(v12 + 328), *(char **)(a1 + 312), *(char **)(a1 + 320), *(_QWORD *)(a1 + 320) - *(_QWORD *)(a1 + 312));
      sub_239107FF0((_QWORD *)(v12 + 352), *(char **)(a1 + 336), *(char **)(a1 + 344), *(_QWORD *)(a1 + 344) - *(_QWORD *)(a1 + 336));
    }
    v13 = a1;
    v14 = 12;
    goto LABEL_14;
  }
  v9 = *(unsigned __int16 *)(a1 + 32);
  if (v9 == 5)
  {
    v16 = sub_2391BDC54();
    v17 = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 376);
    v23 = 0;
    v24[0] = 0;
    v21 = v17;
    v25 = -1;
    *(_QWORD *)&v24[1] = 4;
    v24[3] = 0;
    sub_2391BE930(v16, &v21);
    v18 = (uint64_t *)sub_2391AE584();
    v19 = sub_2391AE6AC(v18, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 8));
    if (!v19)
      return 0;
    v20 = (unsigned __int16)v19;
    v13 = a1;
    if (v20 == 65529)
      v14 = 8;
    else
      v14 = 0;
    goto LABEL_14;
  }
  if (v9 != 6)
  {
    v13 = a1;
    v14 = 2;
LABEL_14:
    sub_2391B14F4(v13, v14);
    return 0;
  }
  *(_DWORD *)(a1 + 20) = 1;
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  v10 = sub_2391B5594(*(_QWORD *)(a1 + 8));
  (*(void (**)(_QWORD *, uint64_t))(*v10 + 40))(v10, a2);
  return 0;
}

void sub_2391B1B30(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char **v8;
  void **v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  NSObject *v16;
  char **v17;
  char **v18;
  char **v19;
  char **v20;
  char *v21;
  char *v22;
  _DWORD v23[2];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    v2 = *(_QWORD *)(a1 + 40);
    if (v2)
    {
      *(_WORD *)(v2 + 8) = 4;
      *(_DWORD *)(*(_QWORD *)(a1 + 40) + 88) = 1;
      v3 = *(uint64_t **)(a1 + 40);
      if (v3 + 11 != a2)
      {
        v5 = a2[1];
        v4 = a2[2];
        v6 = v3[14];
        v7 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3);
        v8 = (char **)v3[12];
        if (0xAAAAAAAAAAAAAAABLL * ((v6 - (uint64_t)v8) >> 3) < v7)
        {
          v9 = (void **)(v3 + 12);
          if (v8)
          {
            sub_23918AE9C(v3 + 12);
            operator delete(*v9);
            v6 = 0;
            *v9 = 0;
            v3[13] = 0;
            v3[14] = 0;
          }
          if (v7 > 0xAAAAAAAAAAAAAAALL)
            goto LABEL_27;
          v10 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
          v11 = 2 * v10;
          if (2 * v10 <= v7)
            v11 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3);
          v12 = v10 >= 0x555555555555555 ? 0xAAAAAAAAAAAAAAALL : v11;
          if (v12 > 0xAAAAAAAAAAAAAAALL)
LABEL_27:
            sub_23910165C();
          v13 = sub_23918B074((uint64_t)(v3 + 14), v12);
          v3[12] = (uint64_t)v13;
          v3[13] = (uint64_t)v13;
          v3[14] = (uint64_t)&v13[3 * v14];
          v15 = sub_2391B1D88((uint64_t)(v3 + 14), v5, v4, v13);
          goto LABEL_19;
        }
        if (0xAAAAAAAAAAAAAAABLL * ((v3[13] - (uint64_t)v8) >> 3) < v7)
        {
          v17 = (char **)(v5 + 8 * ((v3[13] - (uint64_t)v8) >> 3));
          sub_2391B1E98((char **)a2[1], v17, v8);
          v15 = sub_2391B1D88((uint64_t)(v3 + 14), (uint64_t)v17, v4, (_QWORD *)v3[13]);
LABEL_19:
          v3[13] = (uint64_t)v15;
          return;
        }
        v18 = sub_2391B1E98((char **)a2[1], (char **)a2[2], v8);
        v19 = (char **)v3[13];
        if (v19 != v18)
        {
          v20 = (char **)v3[13];
          do
          {
            v22 = *(v20 - 3);
            v20 -= 3;
            v21 = v22;
            if (v22)
            {
              *(v19 - 2) = v21;
              operator delete(v21);
            }
            v19 = v20;
          }
          while (v20 != v18);
        }
        v3[13] = (uint64_t)v18;
      }
    }
  }
  else
  {
    v16 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v23[0] = 67109120;
      v23[1] = 515;
      _os_log_error_impl(&dword_2390FD000, v16, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v23, 8u);
    }
  }
}

void sub_2391B1D78(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = v1;
  _Unwind_Resume(a1);
}

void sub_2391B1D80(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = v1;
  _Unwind_Resume(a1);
}

_QWORD *sub_2391B1D88(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD v8[3];
  char v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      sub_239189290(v4, *(const void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 8) - *(_QWORD *)v6);
      v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  v9 = 1;
  sub_2391B1E34((uint64_t)v8);
  return v4;
}

void sub_2391B1E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2391B1E34((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2391B1E34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  if (!*(_BYTE *)(a1 + 24))
  {
    v2 = **(_QWORD **)(a1 + 8);
    v3 = **(_QWORD **)(a1 + 16);
    if (v3 != v2)
    {
      v4 = **(_QWORD **)(a1 + 16);
      do
      {
        v6 = *(void **)(v4 - 24);
        v4 -= 24;
        v5 = v6;
        if (v6)
        {
          *(_QWORD *)(v3 - 16) = v5;
          operator delete(v5);
        }
        v3 = v4;
      }
      while (v4 != v2);
    }
  }
  return a1;
}

char **sub_2391B1E98(char **a1, char **a2, char **a3)
{
  char **v5;

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      if (v5 != a3)
        sub_239107FF0(a3, *v5, v5[1], v5[1] - *v5);
      v5 += 3;
      a3 += 3;
    }
    while (v5 != a2);
  }
  return a3;
}

uint64_t sub_2391B1EF8()
{
  uint64_t result;
  NSObject *v1;
  int v2;
  const char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  if (qword_2542CF598 != -1)
    dispatch_once(&qword_2542CF598, &unk_250A73D20);
  result = qword_2542CF590;
  if (!qword_2542CF590)
  {
    v1 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v2 = 136315138;
      v3 = "GetInstance";
      _os_log_error_impl(&dword_2390FD000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SuplProvider.cpp", 60, "false && \"Memory allocation failure\"");
  }
  return result;
}

_QWORD *sub_2391B1FEC()
{
  _QWORD *result;

  result = operator new(0x38uLL, MEMORY[0x24BEDB6B8]);
  if (result)
  {
    *result = off_250A73D50;
    result[1] = 0;
    *((_OWORD *)result + 1) = 0u;
    *((_OWORD *)result + 2) = 0u;
    result[6] = 0;
  }
  qword_2542CF590 = (uint64_t)result;
  return result;
}

uint64_t sub_2391B2030(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  _DWORD v12[2];
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 24);
  if (v5)
  {
    while (*(_DWORD *)v5 != *(_DWORD *)(a3 + 4))
    {
      v5 = *(_QWORD *)(v5 + 8);
      if (!v5)
        goto LABEL_4;
    }
    sub_2391B5AB0(v5 - 8, a4);
  }
  else
  {
LABEL_4:
    v6 = sub_2391B7D4C();
    sub_2391B8ADC(v6, *(_DWORD *)(a3 + 4));
    v7 = (_QWORD *)sub_2391AE584();
    sub_23918EDCC((uint64_t)off_25691E330, *(_DWORD *)(a3 + 4));
    sub_2391AEFF8(v7);
    v8 = sub_2391BDC54();
    v9 = *(NSObject **)(v8 + 80);
    if (v9)
    {
      dispatch_source_cancel(v9);
      *(_QWORD *)(v8 + 80) = 0;
    }
    v10 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v12[0] = 67109120;
      v12[1] = 513;
      _os_log_error_impl(&dword_2390FD000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v12, 8u);
    }
  }
  return 0;
}

uint64_t sub_2391B2148(uint64_t a1, int a2, int a3, uint64_t *a4, int a5)
{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  _DWORD v18[2];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v10 = operator new(0x258uLL, MEMORY[0x24BEDB6B8]);
  if (v10)
  {
    v11 = (uint64_t)v10;
    sub_2391B4CD8((uint64_t)v10, a2, a3, a4);
    v12 = v11 + 8;
    v13 = *(_QWORD *)(a1 + 24);
    while (v13)
    {
      v14 = v13;
      v13 = *(_QWORD *)(v13 + 8);
      if (!v13)
      {
        *(_QWORD *)(v14 + 8) = v12;
        *(_QWORD *)(v11 + 16) = 0;
        if (!a5)
          return 0;
        goto LABEL_11;
      }
    }
    *(_QWORD *)(v11 + 16) = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v12;
    if (!a5)
      return 0;
LABEL_11:
    sub_2391B4F68(v11);
    sub_2391B4FC0(v11);
    return 0;
  }
  else
  {
    v15 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v18[0] = 67109120;
      v18[1] = 1537;
      _os_log_error_impl(&dword_2390FD000, v15, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v18, 8u);
    }
    return -2;
  }
}

void sub_2391B228C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B838838](v1, MEMORY[0x24BEDB6B8]);
  _Unwind_Resume(a1);
}

void sub_2391B22A8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  _DWORD v7[2];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 24);
  if (v2)
  {
    v3 = a1 + 8;
    v4 = v2;
    while (*(_DWORD *)v4 != a2)
    {
      v4 = *(_QWORD *)(v4 + 8);
      if (!v4)
        goto LABEL_5;
    }
    v6 = v4 - 8;
    while (*(_DWORD *)v2 != a2)
    {
      v2 = *(_QWORD *)(v2 + 8);
      if (!v2)
        goto LABEL_13;
    }
    sub_2391BCCE4(v3, v2);
LABEL_13:
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  }
  else
  {
LABEL_5:
    v5 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v7[0] = 67109120;
      v7[1] = 513;
      _os_log_error_impl(&dword_2390FD000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v7, 8u);
    }
  }
}

void sub_2391B23C4(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v3;
  NSObject *v4;
  _DWORD v5[2];
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    while (*(_DWORD *)v3 != a2)
    {
      v3 = *(_QWORD *)(v3 + 8);
      if (!v3)
        goto LABEL_4;
    }
    sub_2391B5444(v3 - 8, a3);
  }
  else
  {
LABEL_4:
    v4 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v5[0] = 67109120;
      v5[1] = 513;
      _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v5, 8u);
    }
  }
}

void sub_2391B24B0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v3;
  NSObject *v4;
  _DWORD v5[2];
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    while (*(_DWORD *)v3 != a2)
    {
      v3 = *(_QWORD *)(v3 + 8);
      if (!v3)
        goto LABEL_4;
    }
    sub_2391B56F4(v3 - 8, a3);
  }
  else
  {
LABEL_4:
    v4 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v5[0] = 67109120;
      v5[1] = 513;
      _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v5, 8u);
    }
  }
}

void sub_2391B259C(uint64_t a1, int a2, char **a3)
{
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  char *v9;
  uint64_t v10;
  const void *v11;
  NSObject *v12;
  const char *v13;
  const void *v14;
  uint64_t v15;
  size_t v16;
  int64_t v17;
  NSObject *v18;
  NSObject *v19;
  int v20;
  int v21;
  uint64_t v22;
  NSObject *v23;
  unsigned __int16 v24;
  uint8_t v25[8];
  _QWORD v26[2];
  char v27;
  void *v28;
  void *v29;
  uint64_t v30;
  __int16 v31;
  uint8_t buf[4];
  int v33;
  unsigned __int16 v34;
  int64_t v35;
  void *v36;
  void *v37;
  void *__p;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  v6 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
  {
    v17 = a3[1] - *a3;
    *(_DWORD *)buf = 67109376;
    v33 = a2;
    v34 = 2048;
    v35 = v17;
    _os_log_debug_impl(&dword_2390FD000, v6, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Data received Session id %d, size %lu", buf, 0x12u);
  }
  v7 = *(_QWORD *)(a1 + 24);
  if (!v7)
  {
LABEL_6:
    v8 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplProvider::ReceiveDataInd session not found", buf, 2u);
      v8 = qword_2542CF618;
    }
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      return;
    *(_DWORD *)buf = 67109120;
    v33 = 513;
    goto LABEL_28;
  }
  while (*(_DWORD *)v7 != a2)
  {
    v7 = *(_QWORD *)(v7 + 8);
    if (!v7)
      goto LABEL_6;
  }
  v9 = a3[1];
  if (*a3 == v9)
  {
    v8 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_2390FD000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplProvider::ReceiveDataInd data empty", buf, 2u);
      v8 = qword_2542CF618;
    }
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      return;
    *(_DWORD *)buf = 67109120;
    v33 = 514;
LABEL_28:
    _os_log_error_impl(&dword_2390FD000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    return;
  }
  sub_2391B3610(a1 + 32, *(char **)(a1 + 40), *a3, v9, v9 - *a3);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(const void **)(a1 + 32);
  if ((unint64_t)(v10 - (_QWORD)v11) > 1)
  {
    v24 = 0;
    sub_2391B2B1C(v11, v10, &v24);
    v14 = *(const void **)(a1 + 32);
    v15 = *(_QWORD *)(a1 + 40);
    v16 = v15 - (_QWORD)v14;
    if (v15 - (uint64_t)v14 >= (unint64_t)v24)
    {
      if (v16 < 0xBB9)
      {
        v28 = 0;
        v29 = 0;
        v30 = 0;
        sub_239189290(&v28, v14, v15, v16);
        sub_2391B2B1C(v28, (uint64_t)v29, &v31);
        v26[0] = &v28;
        v26[1] = 5;
        v27 = 0;
        sub_2391B6D50((uint64_t)buf);
        if (sub_2391B6ED8((uint64_t)v26, (uint64_t)buf))
        {
          v19 = qword_2542CF618;
          if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)v25 = 0;
            _os_log_debug_impl(&dword_2390FD000, v19, OS_LOG_TYPE_DEBUG, "#gpsd,#supl, decoding of session ID failed", v25, 2u);
          }
          v20 = 0;
          v21 = 0;
        }
        else
        {
          v20 = v34;
          v21 = *(_DWORD *)buf;
        }
        if (v56)
        {
          v57 = v56;
          operator delete(v56);
        }
        if (v54)
        {
          v55 = v54;
          operator delete(v54);
        }
        if (v52)
        {
          v53 = v52;
          operator delete(v52);
        }
        if (v50)
        {
          v51 = v50;
          operator delete(v50);
        }
        if (v48)
        {
          v49 = v48;
          operator delete(v48);
        }
        if (v46)
        {
          v47 = v46;
          operator delete(v46);
        }
        if (v44)
        {
          v45 = v44;
          operator delete(v44);
        }
        if (v42)
        {
          v43 = v42;
          operator delete(v42);
        }
        if (v40)
        {
          v41 = v40;
          operator delete(v40);
        }
        if (__p)
        {
          v39 = __p;
          operator delete(__p);
        }
        if (v36)
        {
          v37 = v36;
          operator delete(v36);
        }
        if (v28)
        {
          v29 = v28;
          operator delete(v28);
        }
        if (v21)
        {
          v22 = *(_QWORD *)(a1 + 24);
          if (v22)
          {
            while (*(_DWORD *)v22 != v20)
            {
              v22 = *(_QWORD *)(v22 + 8);
              if (!v22)
                goto LABEL_62;
            }
            v7 = v22;
          }
          else
          {
LABEL_62:
            v23 = qword_2542CF618;
            if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 67109120;
              v33 = 513;
              _os_log_error_impl(&dword_2390FD000, v23, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
            }
          }
        }
        sub_2391B5788(v7 - 8, (_QWORD *)(a1 + 32));
      }
      else
      {
        v18 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_2390FD000, v18, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplProvider::ReceiveDataInd buffer size more than SUPL_ENCODE_BUFFER_SIZE", buf, 2u);
          v18 = qword_2542CF618;
        }
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109120;
          v33 = 514;
          _os_log_error_impl(&dword_2390FD000, v18, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        }
      }
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a1 + 32);
    }
    else
    {
      v12 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        v13 = "#gpsd,#supl SuplProvider::ReceiveDataInd buffer size less than message length, waiting for other fragments";
        goto LABEL_21;
      }
    }
  }
  else
  {
    v12 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      v13 = "#gpsd,#supl SuplProvider::ReceiveDataInd buffer size < 2 bytes, wait for more messages";
LABEL_21:
      _os_log_debug_impl(&dword_2390FD000, v12, OS_LOG_TYPE_DEBUG, v13, buf, 2u);
    }
  }
}

void sub_2391B2AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  sub_2391B326C(&a19);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2391B2B1C(const void *a1, uint64_t a2, _WORD *a3)
{
  NSObject *v4;
  uint8_t v5[16];
  _QWORD v6[2];
  char v7;
  void *__p;
  void *v9;
  uint64_t v10;

  __p = 0;
  v9 = 0;
  v10 = 0;
  sub_239189290(&__p, a1, a2, a2 - (_QWORD)a1);
  v6[0] = &__p;
  v6[1] = 0;
  v7 = 0;
  if (sub_23918C5A0((uint64_t)v6, 0, 0xFFFFu, a3))
  {
    v4 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v5 = 0;
      _os_log_debug_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl, decoding of message length failed", v5, 2u);
    }
  }
  if (__p)
  {
    v9 = __p;
    operator delete(__p);
  }
}

void sub_2391B2BD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2391B2BF0(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  NSObject *v5;
  int v6;
  int v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  sub_2391BBB24();
  if (a2 > 0xFFFE)
  {
    LOBYTE(v6) = 0;
    v7 = a2 - 0xFFFF;
    (**(void (***)(uint64_t, _QWORD, int *, uint64_t))a1)(a1, 0, &v6, 1);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4)
    {
      while (*(_DWORD *)v4 != a2)
      {
        v4 = *(_QWORD *)(v4 + 8);
        if (!v4)
          goto LABEL_5;
      }
      sub_2391B57E8(v4 - 8);
    }
    else
    {
LABEL_5:
      v5 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        v6 = 67109120;
        v7 = 513;
        _os_log_error_impl(&dword_2390FD000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v6, 8u);
      }
    }
  }
}

uint64_t sub_2391B2D1C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  NSObject *v13;
  int v14;
  uint64_t v15;
  std::string __p;
  _BYTE v18[8];
  std::string v19;
  unsigned __int16 v20;
  uint8_t v21[4];
  int v22;
  uint8_t buf[4];
  int v24;
  std::string v25;
  unsigned __int16 v26;
  int v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v4 = a1[3];
  if (v4)
  {
    v5 = a1[3];
    while (*(_DWORD *)v5 != (_DWORD)a2)
    {
      v5 = *(_QWORD *)(v5 + 8);
      if (!v5)
        goto LABEL_5;
    }
    v18[0] = 0;
    memset(&v19, 0, sizeof(v19));
    v20 = 7275;
    v7 = sub_2391BC46C();
    if (sub_2391BC79C(v7, (uint64_t)v18, a2, *(_DWORD *)(v5 + 588)))
    {
      v8 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        v24 = 770;
        _os_log_error_impl(&dword_2390FD000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      }
      v9 = a1[3];
      if (v9)
      {
        while (*(_DWORD *)v9 != (_DWORD)a2)
        {
          v9 = *(_QWORD *)(v9 + 8);
          if (!v9)
            goto LABEL_22;
        }
        a1[5] = a1[4];
      }
LABEL_22:
      sub_2391B22A8((uint64_t)a1, a2);
      v10 = 0;
    }
    else
    {
      v27 = 0;
      v28 = 0;
      memset(&v25, 0, sizeof(v25));
      v26 = 0;
      v11 = (v18[0] - 1);
      if (v11 >= 4)
      {
        v13 = qword_2542CF618;
        if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)v21 = 67109120;
          v22 = 515;
          _os_log_error_impl(&dword_2390FD000, v13, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", v21, 8u);
        }
        LOBYTE(v12) = 0;
      }
      else
      {
        v12 = 0x2030301u >> (8 * v11);
      }
      buf[0] = v12;
      std::string::operator=(&v25, &v19);
      v26 = v20;
      v14 = *(_DWORD *)(v5 + 588);
      v27 = 0;
      v28 = v14;
      v15 = sub_2391BDC54();
      if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
        sub_2391B37EC(&__p, v19.__r_.__value_.__l.__data_, v19.__r_.__value_.__l.__size_);
      else
        __p = v19;
      sub_2391BE38C(v15, (uint64_t *)&__p, v20, a2);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v25.__r_.__value_.__l.__data_);
      v10 = 1;
    }
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v19.__r_.__value_.__l.__data_);
  }
  else
  {
LABEL_5:
    v6 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      v24 = 2305;
      _os_log_error_impl(&dword_2390FD000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      v4 = a1[3];
    }
    while (v4)
    {
      if (*(_DWORD *)v4 == (_DWORD)a2)
      {
        a1[5] = a1[4];
        break;
      }
      v4 = *(_QWORD *)(v4 + 8);
    }
    sub_2391B22A8((uint64_t)a1, a2);
    return 0;
  }
  return v10;
}

void sub_2391B3024(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a14 < 0)
    operator delete(__p);
  if (a31 < 0)
    operator delete(a26);
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_2391B3078(uint64_t a1, int a2)
{
  uint64_t v2;
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  _DWORD v7[2];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 24);
  if (v2)
  {
    while (*(_DWORD *)v2 != a2)
    {
      v2 = *(_QWORD *)(v2 + 8);
      if (!v2)
        goto LABEL_4;
    }
    v5 = sub_2391BDC54();
    v6 = *(NSObject **)(v5 + 80);
    if (v6)
    {
      dispatch_source_cancel(v6);
      *(_QWORD *)(v5 + 80) = 0;
    }
    sub_2391B22A8(a1, *(_DWORD *)(v2 + 368));
    sub_23918C0B0();
  }
  else
  {
LABEL_4:
    v4 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v7[0] = 67109120;
      v7[1] = 513;
      _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v7, 8u);
    }
  }
}

BOOL sub_2391B3190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  NSObject *v6;
  _BOOL8 result;
  uint64_t v8;
  _DWORD v9[2];
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    while (*(_DWORD *)v3 != (_DWORD)a2)
    {
      v3 = *(_QWORD *)(v3 + 8);
      if (!v3)
        goto LABEL_4;
    }
    v8 = sub_2391BDC54();
    sub_2391BE1D8(v8, a2, a3);
    return 1;
  }
  else
  {
LABEL_4:
    v6 = qword_2542CF618;
    result = os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR);
    if (result)
    {
      v9[0] = 67109120;
      v9[1] = 513;
      _os_log_error_impl(&dword_2390FD000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v9, 8u);
      return 0;
    }
  }
  return result;
}

_QWORD *sub_2391B326C(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)a1[36];
  if (v2)
  {
    a1[37] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[33];
  if (v3)
  {
    a1[34] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[30];
  if (v4)
  {
    a1[31] = v4;
    operator delete(v4);
  }
  v5 = (void *)a1[25];
  if (v5)
  {
    a1[26] = v5;
    operator delete(v5);
  }
  sub_2391A61F4((uint64_t)(a1 + 3));
  return a1;
}

uint64_t sub_2391B32D4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  NSObject *v5;
  _DWORD v8[2];
  void *v9[2];
  __int128 v10;
  void *__p[5];

  __p[4] = *(void **)MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    while (*(_DWORD *)v3 != a2)
    {
      v3 = *(_QWORD *)(v3 + 8);
      if (!v3)
        goto LABEL_4;
    }
    memset(__p, 0, 25);
    v10 = 0u;
    *(_OWORD *)v9 = 0u;
    if (a3)
    {
      LOWORD(v8[0]) = *(_WORD *)a3;
      v9[0] = *(void **)(a3 + 8);
      if (v8 != (_DWORD *)a3)
      {
        sub_239107FF0(&v9[1], *(char **)(a3 + 16), *(char **)(a3 + 24), *(_QWORD *)(a3 + 24) - *(_QWORD *)(a3 + 16));
        sub_239107FF0(__p, *(char **)(a3 + 40), *(char **)(a3 + 48), *(_QWORD *)(a3 + 48) - *(_QWORD *)(a3 + 40));
      }
      LOBYTE(__p[3]) = *(_BYTE *)(a3 + 64);
    }
    LOWORD(v8[0]) = 1;
    sub_2391B5A48(v3 - 8, (uint64_t)v8);
    sub_2391B4F68(v3 - 8);
    sub_2391B4FC0(v3 - 8);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (v9[1])
    {
      *(void **)&v10 = v9[1];
      operator delete(v9[1]);
    }
    return 0;
  }
  else
  {
LABEL_4:
    v5 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      v8[0] = 67109120;
      v8[1] = 513;
      _os_log_error_impl(&dword_2390FD000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v8, 8u);
    }
    return -3;
  }
}

void sub_2391B344C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2391AF4D0(&a9);
  _Unwind_Resume(a1);
}

void sub_2391B3460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSObject *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  if (!a2)
  {
    v4 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    v6 = 67109120;
    v7 = 515;
LABEL_11:
    _os_log_error_impl(&dword_2390FD000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v6, 8u);
    return;
  }
  v2 = *(_QWORD *)(a1 + 24);
  if (!v2)
  {
LABEL_5:
    v4 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    v6 = 67109120;
    v7 = 513;
    goto LABEL_11;
  }
  while (*(_DWORD *)v2 != *(_DWORD *)(a2 + 28))
  {
    v2 = *(_QWORD *)(v2 + 8);
    if (!v2)
      goto LABEL_5;
  }
  *(_DWORD *)(v2 + 416) = *(_DWORD *)(a2 + 32);
  v5 = sub_2391AE584();
  sub_2391AF0A8(v5, (char **)a2, *(unsigned __int8 *)(a2 + 24), v2 - 8);
}

void sub_2391B35A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[4];
  int v6;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1)
  {
    do
    {
      v3 = *(_QWORD *)(v1 + 8);
      v5[0] = 0;
      v6 = *(_DWORD *)(v1 + 368);
      (**(void (***)(uint64_t, _QWORD, _BYTE *, _QWORD))a1)(a1, 0, v5, 0);
      v1 = v3;
    }
    while (v3);
  }
  v4 = sub_2391B7D4C();
  sub_2391BA468(v4);
}

char *sub_2391B3610(uint64_t a1, char *__dst, char *__src, char *a4, uint64_t a5)
{
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  int64_t v24;
  char v25;
  char *v26;
  char *v27;
  char *v28;
  char v29;
  char *v30;
  char *v31;
  char *v32;
  char v33;
  char *v34;
  char *v35;

  v5 = __dst;
  if (a5 < 1)
    return v5;
  v6 = a5;
  v7 = __src;
  v10 = *(char **)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9 - (uint64_t)v10 < a5)
  {
    v11 = *(char **)a1;
    v12 = (uint64_t)&v10[a5 - *(_QWORD *)a1];
    if (v12 < 0)
      sub_23910165C();
    v13 = (char *)(__dst - v11);
    v14 = v9 - (_QWORD)v11;
    if (2 * v14 > v12)
      v12 = 2 * v14;
    if (v14 >= 0x3FFFFFFFFFFFFFFFLL)
      v15 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v15 = v12;
    if (v15)
      v16 = operator new(v15);
    else
      v16 = 0;
    v26 = &v13[(_QWORD)v16];
    v27 = &v13[(_QWORD)v16 + v6];
    v28 = v26;
    do
    {
      v29 = *v7++;
      *v28++ = v29;
      --v6;
    }
    while (v6);
    v30 = *(char **)a1;
    if (*(char **)a1 == v5)
    {
      v32 = v26;
    }
    else
    {
      v31 = v5;
      v32 = v26;
      do
      {
        v33 = *--v31;
        *--v32 = v33;
      }
      while (v31 != v30);
      v10 = *(char **)(a1 + 8);
    }
    v34 = (char *)v16 + v15;
    if (v10 != v5)
      memmove(v27, v5, v10 - v5);
    v35 = *(char **)a1;
    *(_QWORD *)a1 = v32;
    *(_QWORD *)(a1 + 8) = &v27[v10 - v5];
    *(_QWORD *)(a1 + 16) = v34;
    if (v35)
      operator delete(v35);
    return v26;
  }
  v17 = v10 - __dst;
  if (v10 - __dst >= a5)
  {
    v18 = &__src[a5];
    v20 = *(char **)(a1 + 8);
LABEL_17:
    v21 = &v5[v6];
    v22 = &v20[-v6];
    v23 = v20;
    if (&v20[-v6] < v10)
    {
      v24 = &v10[v6] - v20;
      v23 = v20;
      do
      {
        v25 = *v22++;
        *v23++ = v25;
        --v24;
      }
      while (v24);
    }
    *(_QWORD *)(a1 + 8) = v23;
    if (v20 != v21)
      memmove(&v5[v6], v5, v20 - v21);
    if (v18 != v7)
      memmove(v5, v7, v18 - v7);
    return v5;
  }
  v18 = &__src[v17];
  v19 = a4 - &__src[v17];
  if (a4 != &__src[v17])
    memmove(*(void **)(a1 + 8), &__src[v17], a4 - &__src[v17]);
  v20 = &v10[v19];
  *(_QWORD *)(a1 + 8) = &v10[v19];
  if (v17 >= 1)
    goto LABEL_17;
  return v5;
}

void *sub_2391B37EC(_BYTE *__dst, void *__src, unint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8)
      sub_23910111C();
    v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17)
      v6 = a3 | 7;
    v7 = v6 + 1;
    v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *v5 = v8;
    v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }
  return memmove(v5, __src, a3 + 1);
}

void sub_2391B3878(_DWORD *a1, int a2, int a3, int a4, int a5)
{
  NSObject *v10;
  NSObject *v11;
  _DWORD v12[2];
  __int16 v13;
  int v14;
  __int16 v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v10 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v12[0]) = 0;
    _os_log_impl(&dword_2390FD000, v10, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::Init", (uint8_t *)v12, 2u);
  }
  *a1 = a2;
  a1[2] = a5;
  v11 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    v12[0] = 67109632;
    v12[1] = a2;
    v13 = 1024;
    v14 = a5;
    v15 = 1024;
    v16 = a3;
    _os_log_impl(&dword_2390FD000, v11, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, requestID,%u,Timertype,%u,User Type,%u", (uint8_t *)v12, 0x14u);
    v11 = qword_2542CF618;
  }
  a1[3] = a4;
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v12[0]) = 0;
    _os_log_impl(&dword_2390FD000, v11, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Leaving SuplTimer::Init", (uint8_t *)v12, 2u);
  }
}

void sub_2391B39D4(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  NSObject *v4;
  NSObject *v5;
  dispatch_source_t v6;
  NSObject *v7;
  dispatch_time_t v8;
  NSObject *v9;
  NSObject *v10;
  int v11;
  const char *v12;
  NSObject *v13;
  uint64_t v14;
  _QWORD handler[5];
  uint8_t buf[4];
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v2 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_2390FD000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::Start", buf, 2u);
  }
  v3 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, -7);
  if (!v3)
  {
    v4 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, timer queueAttr", buf, 2u);
    }
  }
  v5 = dispatch_queue_create("TimerQueue", v3);
  *(_QWORD *)(a1 + 24) = v5;
  if (!v5)
  {
    v14 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
      return;
    *(_WORD *)buf = 0;
    v12 = "#gpsd,#supl, Queue creation failed";
LABEL_16:
    v13 = v14;
    goto LABEL_17;
  }
  v6 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, v5);
  *(_QWORD *)(a1 + 16) = v6;
  if (!v6)
  {
    v14 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
      return;
    *(_WORD *)buf = 0;
    v12 = "#gpsd,#supl, fStopCompletedTimer NULL";
    goto LABEL_16;
  }
  v7 = v6;
  v8 = dispatch_time(0, 1000000000 * *(unsigned int *)(a1 + 12));
  dispatch_source_set_timer(v7, v8, 0xFFFFFFFFFFFFFFFFLL, 0x1DCD6500uLL);
  v9 = *(NSObject **)(a1 + 16);
  handler[0] = MEMORY[0x24BDAC760];
  handler[1] = 3221225472;
  handler[2] = sub_2391B3C60;
  handler[3] = &unk_250A6BEF8;
  handler[4] = a1;
  dispatch_source_set_event_handler(v9, handler);
  *(_DWORD *)(a1 + 4) = 1;
  dispatch_resume(*(dispatch_object_t *)(a1 + 16));
  v10 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    v11 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)buf = 67109120;
    v17 = v11;
    _os_log_impl(&dword_2390FD000, v10, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, timer started for %d", buf, 8u);
    v10 = qword_2542CF618;
  }
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    v12 = "#gpsd,#supl, Leaving SuplTimer::Start";
    v13 = v10;
LABEL_17:
    _os_log_impl(&dword_2390FD000, v13, OS_LOG_TYPE_DEFAULT, v12, buf, 2u);
  }
}

void sub_2391B3C60(uint64_t a1)
{
  unsigned int *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint8_t v5[16];
  uint8_t v6[16];
  uint8_t buf[16];

  v1 = *(unsigned int **)(a1 + 32);
  v2 = *v1;
  v3 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_2390FD000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::OnTimer", buf, 2u);
    v3 = qword_2542CF618;
  }
  if (v1[1])
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_2390FD000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, SuplTimer::OnTimer, timer running", v6, 2u);
    }
    v4 = sub_2391B1EF8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 48))(v4, v2);
    v3 = qword_2542CF618;
  }
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2390FD000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Leaving SuplTimer::OnTimer", v5, 2u);
  }
}

void sub_2391B3D64(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  NSObject *v4;
  uint8_t v5[16];
  uint8_t v6[16];
  uint8_t buf[16];

  v2 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_2390FD000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::Stop", buf, 2u);
    v2 = qword_2542CF618;
  }
  if (*(_DWORD *)(a1 + 4))
  {
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_2390FD000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, timer running", v6, 2u);
    }
    v3 = *(NSObject **)(a1 + 24);
    if (v3)
    {
      dispatch_release(v3);
      *(_QWORD *)(a1 + 24) = 0;
    }
    v4 = *(NSObject **)(a1 + 16);
    if (v4)
    {
      dispatch_source_cancel(v4);

      *(_QWORD *)(a1 + 16) = 0;
    }
    *(_DWORD *)(a1 + 4) = 0;
    v2 = qword_2542CF618;
  }
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2390FD000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Leaving SuplTimer::Stop", v5, 2u);
  }
}

void sub_2391B3E7C(uint64_t a1, int a2)
{
  NSObject *v4;
  NSObject *v5;
  _DWORD v6[2];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::SetTimeout %d", (uint8_t *)v6, 8u);
  }
  if (*(_DWORD *)(a1 + 4))
    sub_2391B3D64(a1);
  *(_DWORD *)(a1 + 12) = a2;
  v5 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v6[0]) = 0;
    _os_log_impl(&dword_2390FD000, v5, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Leaving SuplTimer::SetTimeout", (uint8_t *)v6, 2u);
  }
}

void sub_2391B3F74(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  NSObject *v4;
  uint8_t v5[16];
  uint8_t v6[16];
  uint8_t buf[16];

  v2 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_2390FD000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::Release", buf, 2u);
  }
  if (*(_DWORD *)(a1 + 4))
  {
    sub_2391B3D64(a1);
  }
  else
  {
    v3 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_2390FD000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, timer not running", v6, 2u);
    }
  }
  v4 = qword_2542CF618;
  if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2390FD000, v4, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Leaving SuplTimer::Release", v5, 2u);
  }
}

uint64_t sub_2391B406C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  void *v4;
  NSObject *v5;
  int v7;
  int v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v2 = sub_2391B7394(a1);
  *(_QWORD *)v2 = &off_250A73DC0;
  *(_DWORD *)(v2 + 360) = 0;
  *(_BYTE *)(v2 + 16) = 3;
  *(_WORD *)(v2 + 32) = 4;
  v3 = (char *)operator new(0x518uLL, MEMORY[0x24BEDB6B8]);
  if (!v3)
  {
    *(_QWORD *)(a1 + 40) = 0;
    v5 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return a1;
    v7 = 67109120;
    v8 = 1537;
LABEL_9:
    _os_log_error_impl(&dword_2390FD000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v7, 8u);
    return a1;
  }
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *((_OWORD *)v3 + 1) = xmmword_2391CBF60;
  *((_QWORD *)v3 + 4) = 1;
  *((_DWORD *)v3 + 10) = 0;
  *(_QWORD *)(v3 + 60) = 0;
  *(_QWORD *)(v3 + 76) = 0;
  *(_QWORD *)(v3 + 68) = 0;
  *((_DWORD *)v3 + 21) = 0;
  v3[44] = 2;
  *((_QWORD *)v3 + 6) = 0;
  *((_DWORD *)v3 + 14) = 0;
  *((_QWORD *)v3 + 22) = 0;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 136) = 0u;
  *(_OWORD *)(v3 + 152) = 0u;
  v3[168] = 0;
  *((_DWORD *)v3 + 46) = -1;
  *(_QWORD *)(v3 + 204) = 0;
  *(_QWORD *)(v3 + 209) = 0;
  *(_QWORD *)(v3 + 188) = 0;
  *(_QWORD *)(v3 + 196) = 0;
  *((_QWORD *)v3 + 28) = 0;
  *((_DWORD *)v3 + 58) = 0;
  *(_QWORD *)(v3 + 236) = -1;
  *((_QWORD *)v3 + 31) = 0;
  *((_WORD *)v3 + 128) = 0;
  *((_WORD *)v3 + 130) = -1;
  *((_QWORD *)v3 + 34) = 0;
  *((_QWORD *)v3 + 35) = 0;
  *(_QWORD *)(v3 + 286) = 0;
  *((_QWORD *)v3 + 33) = 0;
  *((_QWORD *)v3 + 38) = 0;
  *((_QWORD *)v3 + 39) = 0;
  *((_QWORD *)v3 + 37) = 0;
  v3[320] = 1;
  *((_QWORD *)v3 + 43) = 0;
  *((_QWORD *)v3 + 44) = 0;
  *((_QWORD *)v3 + 42) = 0;
  v3[372] = -1;
  *((_DWORD *)v3 + 96) = 0;
  *((_QWORD *)v3 + 47) = 0;
  v3[388] = -1;
  *((_WORD *)v3 + 195) = 0;
  v3[392] = 0;
  *((_DWORD *)v3 + 92) = 0;
  *((_QWORD *)v3 + 45) = 0;
  *((_QWORD *)v3 + 50) = 255;
  *(_OWORD *)(v3 + 408) = 0u;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_OWORD *)(v3 + 456) = 0u;
  *(_OWORD *)(v3 + 472) = 0u;
  *(_OWORD *)(v3 + 488) = 0u;
  *(_OWORD *)(v3 + 504) = 0u;
  *(_OWORD *)(v3 + 520) = 0u;
  *(_OWORD *)(v3 + 536) = 0u;
  *(_OWORD *)(v3 + 552) = 0u;
  *(_OWORD *)(v3 + 568) = 0u;
  *(_OWORD *)(v3 + 584) = 0u;
  *(_OWORD *)(v3 + 600) = 0u;
  *(_OWORD *)(v3 + 616) = 0u;
  *(_OWORD *)(v3 + 632) = 0u;
  *(_OWORD *)(v3 + 648) = 0u;
  *(_OWORD *)(v3 + 664) = 0u;
  *(_OWORD *)(v3 + 680) = 0u;
  *(_OWORD *)(v3 + 696) = 0u;
  *(_OWORD *)(v3 + 712) = 0u;
  *(_OWORD *)(v3 + 728) = 0u;
  *(_OWORD *)(v3 + 744) = 0u;
  *((_QWORD *)v3 + 95) = 0;
  *((_DWORD *)v3 + 82) = 0;
  *(_OWORD *)(v3 + 904) = 0u;
  *(_OWORD *)(v3 + 776) = 0u;
  *(_OWORD *)(v3 + 792) = 0u;
  *(_OWORD *)(v3 + 808) = 0u;
  *(_OWORD *)(v3 + 824) = 0u;
  *(_OWORD *)(v3 + 840) = 0u;
  *(_OWORD *)(v3 + 856) = 0u;
  *(_OWORD *)(v3 + 872) = 0u;
  *(_OWORD *)(v3 + 888) = 0u;
  v3[912] = -1;
  *((_DWORD *)v3 + 192) = 0;
  *(_OWORD *)(v3 + 936) = 0u;
  *(_OWORD *)(v3 + 952) = 0u;
  *(_OWORD *)(v3 + 968) = 0u;
  *(_OWORD *)(v3 + 984) = 0u;
  *(_OWORD *)(v3 + 1000) = 0u;
  *(_OWORD *)(v3 + 1016) = 0u;
  *(_OWORD *)(v3 + 1032) = 0u;
  *(_OWORD *)(v3 + 1048) = 0u;
  *(_OWORD *)(v3 + 1064) = 0u;
  *(_OWORD *)(v3 + 1080) = 0u;
  *(_OWORD *)(v3 + 1096) = 0u;
  *(_OWORD *)(v3 + 1112) = 0u;
  *(_OWORD *)(v3 + 1128) = 0u;
  *(_OWORD *)(v3 + 1144) = 0u;
  *(_OWORD *)(v3 + 1160) = 0u;
  *(_OWORD *)(v3 + 920) = 0u;
  *(_OWORD *)(v3 + 1176) = 0u;
  *(_OWORD *)(v3 + 1192) = 0u;
  *(_OWORD *)(v3 + 1208) = 0u;
  *(_OWORD *)(v3 + 1224) = 0u;
  *(_OWORD *)(v3 + 1240) = 0u;
  *(_OWORD *)(v3 + 1256) = 0u;
  *(_OWORD *)(v3 + 1272) = 0u;
  *(_OWORD *)(v3 + 1288) = 0u;
  *(_QWORD *)(a1 + 40) = v3;
  v4 = operator new(1uLL, MEMORY[0x24BEDB6B8]);
  if (!v4)
  {
    *(_QWORD *)(a1 + 368) = 0;
    v5 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return a1;
    v7 = 67109120;
    v8 = 1537;
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 368) = v4;
  return a1;
}

uint64_t sub_2391B4358(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = &off_250A73DC0;
  if (*(_WORD *)(a1 + 32) == 4)
  {
    v2 = *(_QWORD *)(a1 + 40);
    if (v2)
    {
      v3 = sub_2391AB144(v2);
      MEMORY[0x23B838844](v3, 0x1030C408837E473);
    }
    *(_QWORD *)(a1 + 40) = 0;
    v4 = *(_QWORD *)(a1 + 368);
    if (v4)
      MEMORY[0x23B838844](v4, 0xC400A2AC0F1);
    *(_QWORD *)(a1 + 368) = 0;
  }
  return sub_2391B7470(a1);
}

void sub_2391B43D4(uint64_t a1)
{
  sub_2391B4358(a1);
  JUMPOUT(0x23B838844);
}

void sub_2391B43F8(uint64_t a1)
{
  NSObject *v2;
  uint8_t v3[16];

  if (*(_DWORD *)(a1 + 360))
  {
    *(_DWORD *)(a1 + 360) = 0;
    v2 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v3 = 0;
      _os_log_debug_impl(&dword_2390FD000, v2, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplResponseRecd::UpdateState, update state to Supl_PosInit_Sent", v3, 2u);
    }
    sub_2391B74F4(a1, 4, *(_QWORD *)(a1 + 8));
  }
}

uint64_t sub_2391B447C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  NSObject *v16;
  int v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  NSObject *v43;
  NSObject *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v49[2];
  char v50;
  void *v51[3];
  __int16 v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  char v60;
  uint8_t v61[4];
  int v62;
  uint8_t buf[8];
  uint64_t v64;
  int v65;
  uint64_t v66;
  int v67;
  int v68;
  __int16 v69;
  int v70;
  __int16 v71;
  int v72;
  __int16 v73;
  int v74;
  __int16 v75;
  __int16 v76;
  int v77;
  __int16 v78;
  int v79;
  __int16 v80;
  int v81;
  __int16 v82;
  int v83;
  __int16 v84;
  int v85;
  __int16 v86;
  int v87;
  __int16 v88;
  __int16 v89;
  int v90;
  __int16 v91;
  int v92;
  __int16 v93;
  int v94;
  __int16 v95;
  _DWORD v96[3];
  __int16 v97;
  int v98;
  __int16 v99;
  int v100;
  __int16 v101;
  int v102;
  __int16 v103;
  int v104;
  __int16 v105;
  void *__p;
  void *v107;
  _QWORD v108[2];
  __int16 v109;
  int v110;
  uint64_t v111;

  v111 = *MEMORY[0x24BDAC8D0];
  sub_2391015AC(v51, 0xBB8uLL);
  v49[0] = (uint64_t)v51;
  v49[1] = 0;
  v50 = 0;
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3)
  {
    *(_OWORD *)(v2 + 16) = *(_OWORD *)(v3 + 448);
    v4 = *(_OWORD *)(v3 + 464);
    v5 = *(_OWORD *)(v3 + 480);
    v6 = *(_OWORD *)(v3 + 496);
    *(_QWORD *)(v2 + 80) = *(_QWORD *)(v3 + 512);
    *(_OWORD *)(v2 + 48) = v5;
    *(_OWORD *)(v2 + 64) = v6;
    *(_OWORD *)(v2 + 32) = v4;
  }
  else
  {
    v16 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      goto LABEL_9;
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = 513;
    _os_log_error_impl(&dword_2390FD000, v16, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v52 = *(_WORD *)(v7 + 520);
    v53 = *(_QWORD *)(v7 + 528);
    v54 = 0;
    v55 = 0;
    v56 = 0;
    sub_239189290(&v54, *(const void **)(v7 + 536), *(_QWORD *)(v7 + 544), *(_QWORD *)(v7 + 544) - *(_QWORD *)(v7 + 536));
    v57 = 0;
    v58 = 0;
    v59 = 0;
    sub_239189290(&v57, *(const void **)(v7 + 560), *(_QWORD *)(v7 + 568), *(_QWORD *)(v7 + 568) - *(_QWORD *)(v7 + 560));
    v8 = *(_BYTE *)(v7 + 584);
    v60 = v8;
    if (v52 == 1)
    {
      v9 = (v53 >> 6) & 1;
      v10 = (v53 >> 4) & 1;
      v11 = (v53 >> 3) & 1;
      v12 = (v53 >> 5) & 1;
      v13 = v53 & 1;
      v14 = (v53 >> 2) & 1;
      v15 = (v53 >> 1) & 1;
    }
    else
    {
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
    }
    if ((v10 | v9 | v11 | v12 | v13 | v14 | v15) == 1)
    {
      *(_DWORD *)v2 = 1;
      *(_DWORD *)(v2 + 112) = v12;
      *(_DWORD *)(v2 + 116) = v9;
      *(_DWORD *)(v2 + 124) = v11;
      *(_DWORD *)(v2 + 108) = v10;
      *(_DWORD *)(v2 + 96) = v15;
      *(_DWORD *)(v2 + 100) = v14;
      *(_DWORD *)(v2 + 92) = v13;
      if (v11)
      {
        *(_DWORD *)(v2 + 88) = 1;
        goto LABEL_16;
      }
    }
    else if (v11)
    {
LABEL_16:
      *(_WORD *)(v2 + 132) = WORD2(v53);
      *(_BYTE *)(v2 + 134) = BYTE6(v53);
      *(_BYTE *)(v2 + 136) = v8;
      v17 = HIBYTE(v53);
      *(_BYTE *)(v2 + 135) = HIBYTE(v53);
      if (v17)
      {
        v18 = 0;
        *(_DWORD *)(v2 + 128) = 1;
        v19 = *(uint64_t **)(v2 + 144);
        *(_QWORD *)(v2 + 152) = v19;
        do
        {
          v20 = *((unsigned __int8 *)v54 + v18);
          v21 = *((unsigned __int8 *)v57 + v18);
          v22 = *(_QWORD *)(v2 + 160);
          if ((unint64_t)v19 >= v22)
          {
            v23 = *(_QWORD **)(v2 + 144);
            v24 = v19 - v23;
            v25 = v24 + 1;
            if ((unint64_t)(v24 + 1) >> 61)
              sub_23910165C();
            v26 = v22 - (_QWORD)v23;
            if (v26 >> 2 > v25)
              v25 = v26 >> 2;
            if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFF8)
              v27 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v27 = v25;
            if (v27)
            {
              if (v27 >> 61)
                sub_239105DBC();
              v28 = (char *)operator new(8 * v27);
            }
            else
            {
              v28 = 0;
            }
            v29 = &v28[8 * v24];
            *(_QWORD *)v29 = v20 | (v21 << 32);
            v30 = (uint64_t *)(v29 + 8);
            if (v19 != v23)
            {
              do
              {
                v31 = *--v19;
                *((_QWORD *)v29 - 1) = v31;
                v29 -= 8;
              }
              while (v19 != v23);
              v19 = *(uint64_t **)(v2 + 144);
            }
            *(_QWORD *)(v2 + 144) = v29;
            *(_QWORD *)(v2 + 152) = v30;
            *(_QWORD *)(v2 + 160) = &v28[8 * v27];
            if (v19)
              operator delete(v19);
            v19 = v30;
          }
          else
          {
            *v19++ = v20 | (v21 << 32);
          }
          *(_QWORD *)(v2 + 152) = v19;
          if (v18 > 0x1C)
            break;
          ++v18;
        }
        while (v18 < HIBYTE(v53));
      }
    }
    v32 = sub_2391BC46C();
    if (sub_2391BC974(v32, *(_DWORD *)(*(_QWORD *)(a1 + 8) + 596)))
    {
      sub_23918AE9C((uint64_t *)(v2 + 864));
      sub_23918B478(*(_QWORD *)(a1 + 368), a1 + 32);
      sub_23918B25C(*(_QWORD *)(a1 + 368), a1 + 32, *(_QWORD *)(a1 + 8));
    }
    v33 = *(_QWORD *)(a1 + 8);
    if (v33)
    {
      if ((*(_BYTE *)(v33 + 380) & 0xFE) != 2)
        goto LABEL_54;
      *(_DWORD *)(a1 + 48) = 1;
      *(_WORD *)(a1 + 56) = *(_DWORD *)(v33 + 376);
      v34 = sub_2391B7D4C();
      sub_2391B8198(v34, a1 + 64, *(_DWORD *)(*(_QWORD *)(a1 + 8) + 596));
      v35 = sub_2391B7D4C();
      sub_2391B8308(v35, *(_QWORD *)(a1 + 40) + 168, *(_DWORD *)(*(_QWORD *)(a1 + 8) + 596));
      v36 = *(_QWORD *)(a1 + 8);
      v37 = sub_2391B7D4C();
      v38 = sub_2391B8A50(v37, *(_DWORD *)(v36 + 376));
      v39 = v38;
      if (v38)
      {
        if (*(_DWORD *)(*(_QWORD *)(v38 + 48) + 8) == 1)
        {
          *(_WORD *)buf = -254;
          LODWORD(v64) = 0;
          WORD2(v64) = 0;
          v65 = 0;
          LOWORD(v66) = 0;
          HIDWORD(v66) = 0;
          LOWORD(v67) = 0;
          v68 = 0;
          v69 = 0;
          v70 = 0;
          v71 = 0;
          v72 = 0;
          v73 = 0;
          v74 = 0;
          v75 = 0;
          v76 = 0;
          v77 = 0;
          v78 = 0;
          v79 = 0;
          v80 = 0;
          v81 = 0;
          v82 = 0;
          v83 = 0;
          v84 = 0;
          v85 = 0;
          v86 = 0;
          v87 = 0;
          v88 = 0;
          v89 = 0;
          v90 = 0;
          v91 = 0;
          v92 = 0;
          v93 = 0;
          v94 = 0;
          v95 = 0;
          *(_DWORD *)((char *)v96 + 3) = 0;
          v96[0] = 0;
          v96[2] = 0;
          v97 = 0;
          v98 = 0;
          v99 = 0;
          v100 = 0;
          v101 = 0;
          v102 = 0;
          v103 = 0;
          v104 = 0;
          v105 = 0;
          v109 = 0;
          v110 = 0;
          v107 = 0;
          v108[0] = 0;
          *(_QWORD *)((char *)v108 + 7) = 0;
          __p = 0;
          v40 = sub_2391B7D4C();
          sub_2391B9E14(v40, (uint64_t)buf);
          v41 = sub_2391B7D4C();
          if (sub_2391B9C40(v41, *(_QWORD *)(v39 + 48) + 200, (uint64_t)buf))
          {
            v42 = sub_2391B7D4C();
            sub_2391B9780(v42, v2 + 328, (uint64_t)buf);
            *(_DWORD *)(v2 + 4) = 1;
          }
          if (__p)
          {
            v107 = __p;
            operator delete(__p);
          }
        }
        if (sub_2391A5AA4(v39, v2 + 1280, *(unsigned int *)(*(_QWORD *)(a1 + 8) + 376), *(_DWORD *)(*(_QWORD *)(a1 + 8) + 596)))
        {
          v43 = qword_2542CF618;
          if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)buf = 0;
            _os_log_debug_impl(&dword_2390FD000, v43, OS_LOG_TYPE_DEBUG, "#gpsd,#supl FillHash failed in PrepareSuplPosInit", buf, 2u);
            v43 = qword_2542CF618;
          }
          if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)&buf[4] = 770;
            _os_log_error_impl(&dword_2390FD000, v43, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
          }
        }
      }
      *(_DWORD *)(v2 + 12) = 1;
      v33 = *(_QWORD *)(a1 + 8);
      if (v33)
      {
LABEL_54:
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(v33 + 64);
        *(_WORD *)(a1 + 56) = *(_WORD *)(v33 + 72);
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(v33 + 80);
        sub_23919A01C(a1 + 72, v33 + 88);
        if (a1 + 48 != v33 + 64)
        {
          sub_239107FF0((_QWORD *)(a1 + 248), *(char **)(v33 + 264), *(char **)(v33 + 272), *(_QWORD *)(v33 + 272) - *(_QWORD *)(v33 + 264));
          *(_BYTE *)(a1 + 272) = *(_BYTE *)(v33 + 288);
          *(_BYTE *)(a1 + 280) = *(_BYTE *)(v33 + 296);
          sub_239107FF0((_QWORD *)(a1 + 288), *(char **)(v33 + 304), *(char **)(v33 + 312), *(_QWORD *)(v33 + 312) - *(_QWORD *)(v33 + 304));
          sub_239107FF0((_QWORD *)(a1 + 312), *(char **)(v33 + 328), *(char **)(v33 + 336), *(_QWORD *)(v33 + 336) - *(_QWORD *)(v33 + 328));
          sub_239107FF0((_QWORD *)(a1 + 336), *(char **)(v33 + 352), *(char **)(v33 + 360), *(_QWORD *)(v33 + 360) - *(_QWORD *)(v33 + 352));
        }
      }
    }
    *(_QWORD *)buf = v49;
    v64 = a1 + 24;
    if (sub_2391AA398((uint64_t *)buf))
    {
      v44 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)v61 = 0;
        _os_log_debug_impl(&dword_2390FD000, v44, OS_LOG_TYPE_DEBUG, "#gpsd,#supl encoding failed in PrepareSuplPosInit", v61, 2u);
        v44 = qword_2542CF618;
      }
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v61 = 67109120;
        v62 = 770;
        _os_log_error_impl(&dword_2390FD000, v44, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", v61, 8u);
      }
    }
    *(_DWORD *)(*(_QWORD *)(a1 + 8) + 424) = 1;
    if (v57)
    {
      v58 = v57;
      operator delete(v57);
    }
    if (v54)
    {
      v55 = v54;
      operator delete(v54);
    }
    goto LABEL_65;
  }
  v16 = qword_2542CF618;
LABEL_9:
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = 513;
    _os_log_error_impl(&dword_2390FD000, v16, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
LABEL_65:
  v45 = sub_2391BDC54();
  v46 = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 376);
  v64 = 0;
  v65 = 0;
  *(_DWORD *)buf = v46;
  LOBYTE(v68) = -1;
  v66 = 3;
  v67 = 0;
  sub_2391BE930(v45, (unsigned int *)buf);
  if (sub_2391B7C60(a1, v49))
    *(_DWORD *)(a1 + 360) = 1;
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  v47 = *(unsigned int *)(a1 + 360);
  if (v51[0])
  {
    v51[1] = v51[0];
    operator delete(v51[0]);
  }
  return v47;
}

void sub_2391B4C5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52)
{
  sub_2391AF4D0(&a16);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_2391B4CD8(uint64_t a1, int a2, int a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_QWORD *)a1 = &off_250A73E18;
  *(_OWORD *)(a1 + 24) = 0u;
  v8 = a1 + 24;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  sub_2391B6D50(a1 + 64);
  *(_BYTE *)(a1 + 380) = -1;
  *(_BYTE *)(a1 + 384) = -1;
  *(_OWORD *)(a1 + 388) = 0u;
  *(_OWORD *)(a1 + 404) = 0u;
  *(_QWORD *)(a1 + 420) = 0;
  *(_OWORD *)(a1 + 448) = xmmword_2391CBF60;
  *(_QWORD *)(a1 + 464) = 1;
  *(_DWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 516) = 0;
  *(_QWORD *)(a1 + 492) = 0;
  *(_QWORD *)(a1 + 508) = 0;
  *(_QWORD *)(a1 + 500) = 0;
  *(_BYTE *)(a1 + 476) = 2;
  *(_QWORD *)(a1 + 480) = 0;
  *(_DWORD *)(a1 + 488) = 0;
  *(_QWORD *)(a1 + 584) = 0;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_DWORD *)(a1 + 376) = a3;
  v9 = *a4;
  *(_DWORD *)(a1 + 388) = *((_DWORD *)a4 + 2);
  *(_QWORD *)(a1 + 380) = v9;
  *(_QWORD *)(a1 + 432) = 0;
  *(_DWORD *)(a1 + 596) = a2;
  *(_QWORD *)(a1 + 24) = a1;
  sub_23918BBD4(v8, a1 + 448, a2);
  *(_DWORD *)(a1 + 8) = a3;
  sub_23918BD6C(v8, a2);
  *(_DWORD *)(a1 + 592) = 0;
  *(_DWORD *)(sub_2391B7D4C() + 280) = a2;
  *(_QWORD *)(a1 + 440) = 0;
  return a1;
}

void sub_2391B4E0C(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  void *v3;

  v1[3] = 0;
  v3 = (void *)v1[4];
  if (v3)
  {
    v1[5] = v3;
    operator delete(v3);
  }
  v1[2] = 0;
  _Unwind_Resume(exception_object);
}

uint64_t sub_2391B4E48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  *(_QWORD *)a1 = &off_250A73E18;
  v2 = sub_2391B7D4C();
  if (v2)
    sub_2391B8ADC(v2, *(_DWORD *)(a1 + 376));
  sub_2391B3F74(a1 + 392);
  v3 = *(_QWORD *)(a1 + 432);
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  *(_QWORD *)(a1 + 432) = 0;
  v4 = *(_QWORD *)(a1 + 440);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  *(_QWORD *)(a1 + 440) = 0;
  v5 = *(void **)(a1 + 560);
  if (v5)
  {
    *(_QWORD *)(a1 + 568) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 536);
  if (v6)
  {
    *(_QWORD *)(a1 + 544) = v6;
    operator delete(v6);
  }
  v7 = *(void **)(a1 + 352);
  if (v7)
  {
    *(_QWORD *)(a1 + 360) = v7;
    operator delete(v7);
  }
  v8 = *(void **)(a1 + 328);
  if (v8)
  {
    *(_QWORD *)(a1 + 336) = v8;
    operator delete(v8);
  }
  v9 = *(void **)(a1 + 304);
  if (v9)
  {
    *(_QWORD *)(a1 + 312) = v9;
    operator delete(v9);
  }
  v10 = *(void **)(a1 + 264);
  if (v10)
  {
    *(_QWORD *)(a1 + 272) = v10;
    operator delete(v10);
  }
  sub_2391A61F4(a1 + 88);
  *(_QWORD *)(a1 + 24) = 0;
  v11 = *(void **)(a1 + 32);
  if (v11)
  {
    *(_QWORD *)(a1 + 40) = v11;
    operator delete(v11);
  }
  *(_QWORD *)(a1 + 16) = 0;
  return a1;
}

void sub_2391B4F44(uint64_t a1)
{
  sub_2391B4E48(a1);
  JUMPOUT(0x23B838844);
}

uint64_t sub_2391B4F68(uint64_t a1)
{
  _DWORD *v1;
  int v2;
  int v3;
  int v4;

  if (*(unsigned __int8 *)(a1 + 380) >= 2u)
  {
    v1 = (_DWORD *)(a1 + 392);
    v2 = *(_DWORD *)(a1 + 376);
    v3 = *(_DWORD *)(sub_2391B7D4C() + 24);
    if (v3)
      v4 = v3;
    else
      v4 = 11;
    sub_2391B3878(v1, v2, 0, v4, 0);
  }
  return 0;
}

void sub_2391B4FC0(uint64_t a1)
{
  uint64_t v2;
  int v3;
  _DWORD *v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD v16[2];
  char v17;
  uint8_t buf[8];
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v2 = sub_2391B7D4C();
  if (!v2)
  {
    v7 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = 513;
    goto LABEL_11;
  }
  v3 = *(unsigned __int8 *)(a1 + 380);
  if (!*(_BYTE *)(a1 + 380))
  {
    v8 = *(_QWORD *)(a1 + 432);
    if (v8)
    {
      sub_2391B74F4(v8, 7, a1);
      v9 = *(_QWORD **)(a1 + 432);
      *(_BYTE *)(v9[5] + 456) = 18;
      *(_DWORD *)(v9[5] + 4) = 1;
      sub_2391015AC(buf, 0xBB8uLL);
      v16[0] = buf;
      v16[1] = 0;
      v17 = 0;
      sub_239199EAC((uint64_t)v9);
      (*(void (**)(_QWORD *, _QWORD *))(*v9 + 32))(v9, v16);
      sub_239199C58((uint64_t)v9);
      if (*(_QWORD *)buf)
      {
        v19 = *(void **)buf;
        operator delete(*(void **)buf);
      }
      return;
    }
    v7 = qword_2542CF618;
    if (!os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      return;
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = 1028;
LABEL_11:
    _os_log_error_impl(&dword_2390FD000, v7, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    return;
  }
  if (v3 == 1)
  {
    v10 = *(_QWORD *)(a1 + 432);
    if (v10)
      goto LABEL_19;
    v11 = operator new(0x168uLL, MEMORY[0x24BEDB6B8]);
    v12 = v11;
    if (v11)
    {
      sub_2391B7394((uint64_t)v11);
      *v12 = &off_250A73BD8;
    }
    sub_2391B597C(a1, (uint64_t)v12);
    v10 = *(_QWORD *)(a1 + 432);
    if (v10)
    {
LABEL_19:
      sub_2391B74F4(v10, 7, a1);
      sub_239199C58(*(_QWORD *)(a1 + 432));
      return;
    }
    v7 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = 1537;
      goto LABEL_11;
    }
  }
  else
  {
    if (v3 != 3)
    {
      sub_23918B98C((uint64_t *)(a1 + 24), (_BYTE *)(a1 + 380), *(_QWORD *)(a1 + 432), a1 + 448);
      return;
    }
    v4 = (_DWORD *)v2;
    v5 = sub_2391B8A50(v2, *(_DWORD *)(a1 + 376));
    if (v5 && !*(_DWORD *)(v5 + 20))
    {
      sub_2391B94F0(v4, a1 + 448, *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + 20), *(_DWORD *)(a1 + 596));
    }
    else
    {
      v6 = qword_2542CF618;
      if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&buf[4] = 513;
        _os_log_error_impl(&dword_2390FD000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      }
    }
    v13 = operator new(0x168uLL, MEMORY[0x24BEDB6B8]);
    v14 = v13;
    if (v13)
    {
      sub_2391B7394((uint64_t)v13);
      *v14 = &off_250A73BD8;
    }
    sub_2391B597C(a1, (uint64_t)v14);
    v15 = *(_QWORD *)(a1 + 432);
    if (v15)
    {
      sub_2391B74F4(v15, 0, a1);
      return;
    }
    v7 = qword_2542CF618;
    if (os_log_type_enabled((os_log_t)qword_2542CF618, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&buf[4] = 1537;
      goto LABEL_11;
    }
  }
}

