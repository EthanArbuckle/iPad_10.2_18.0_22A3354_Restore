uint64_t sub_1CB7F4D64(uint64_t a1, os_log_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  os_log_t *v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, os_log_t *, uint64_t);
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  _BOOL4 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(char *, uint64_t);
  char *v97;
  unsigned int (*v98)(_QWORD, _QWORD, _QWORD);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  os_log_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  os_log_t *v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  NSObject *v127;
  os_log_type_t v128;
  int v129;
  _BOOL4 v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t isa_low;
  char *v135;
  char *v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  char *v147;
  uint64_t v148;
  unint64_t v149;
  void (*v150)(uint64_t, uint64_t);
  os_log_t v151;
  char *v152;
  void (*v153)(char *, uint64_t);
  uint64_t v154;
  char *v155;
  uint64_t v156;
  void (*v157)(char *, uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  NSObject *v160;
  os_log_type_t v161;
  uint8_t *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t result;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  NSObject *v181;
  os_log_type_t v182;
  int v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  void (*v190)(char *, uint64_t);
  char *v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  unint64_t v195;
  os_log_t v196;
  uint64_t v197;
  unsigned int (*v198)(os_log_t, uint64_t, uint64_t);
  os_log_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  os_log_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  void *v211;
  id v212;
  void *v213;
  id v214;
  void *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  void (*v221)(char *, uint64_t);
  unint64_t v222;
  char *v223;
  unint64_t v224;
  void (*v225)(char *, uint64_t);
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  char v230;
  os_log_t v231;
  int v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  char *v240;
  char *v241;
  char *v242;
  uint64_t v243;
  char *v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  uint64_t v260;
  os_log_t *v261;
  os_log_t v262;
  os_log_t *v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  void (*v267)(char *, os_log_t *, uint64_t);
  os_log_t v268;
  uint8_t *v269;
  os_log_t *v270;
  uint64_t v271;
  void (*v272)(void);
  os_log_t *v273;
  char *v274;
  unint64_t v275;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v4);
  v239 = (uint64_t)&v231 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v7 = MEMORY[0x1E0C80A78](v6);
  v238 = (char *)&v231 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v268 = (os_log_t)((char *)&v231 - v10);
  MEMORY[0x1E0C80A78](v9);
  v256 = (char *)&v231 - v11;
  v271 = sub_1CB846084();
  v12 = *(_QWORD *)(v271 - 8);
  v13 = MEMORY[0x1E0C80A78](v271);
  v237 = (char *)&v231 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v265 = (char *)&v231 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v244 = (char *)&v231 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v246 = (char *)&v231 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v231 - v22;
  v24 = MEMORY[0x1E0C80A78](v21);
  v245 = (char *)&v231 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v259 = (char *)&v231 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v258 = (char *)&v231 - v29;
  MEMORY[0x1E0C80A78](v28);
  v255 = (char *)&v231 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F0A8);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v231 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F0B0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x1E0C80A78](v34);
  v253 = (uint64_t)&v231 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x1E0C80A78](v36);
  v252 = (char *)&v231 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v250 = (uint64_t)&v231 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v251 = (uint64_t)&v231 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v242 = (char *)&v231 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v249 = (uint64_t)&v231 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v248 = (uint64_t)&v231 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v241 = (char *)&v231 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v243 = (uint64_t)&v231 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v240 = (char *)&v231 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v262 = (os_log_t)((char *)&v231 - v57);
  v58 = MEMORY[0x1E0C80A78](v56);
  v257 = (char *)&v231 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  v260 = (uint64_t)&v231 - v61;
  v62 = MEMORY[0x1E0C80A78](v60);
  v261 = (os_log_t *)((char *)&v231 - v63);
  v64 = MEMORY[0x1E0C80A78](v62);
  v66 = (char *)&v231 - v65;
  MEMORY[0x1E0C80A78](v64);
  v68 = (os_log_t *)((char *)&v231 - v67);
  swift_beginAccess();
  v269 = (uint8_t *)a1;
  v69 = *(_QWORD *)(a1 + 48);
  v263 = a2;
  v273 = a2;
  swift_bridgeObjectRetain();
  sub_1CB7F4948((uint64_t (*)(char *))sub_1CB80102C, v69, (uint64_t)v33);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) != 1)
  {
    v235 = 0;
    v234 = v23;
    v74 = *(int *)(v34 + 48);
    v75 = (char *)v68 + v74;
    v76 = &v33[v74];
    v272 = *(void (**)(void))(v12 + 32);
    ((void (*)(os_log_t *, char *, uint64_t))v272)(v68, v33, v271);
    v78 = *(_QWORD *)v76;
    v77 = *((_QWORD *)v76 + 1);
    *(_QWORD *)v75 = v78;
    *((_QWORD *)v75 + 1) = v77;
    v79 = qword_1ED88E518;
    swift_retain();
    swift_retain();
    v270 = v68;
    if (v79 != -1)
      swift_once();
    v80 = sub_1CB8466D8();
    v81 = __swift_project_value_buffer(v80, (uint64_t)qword_1ED890248);
    v82 = *(void (**)(char *, os_log_t *, uint64_t))(v12 + 16);
    v83 = v12;
    v84 = v255;
    v85 = v271;
    v82(v255, v263, v271);
    v86 = &v66[*(int *)(v34 + 48)];
    v82(v66, v270, v85);
    *(_QWORD *)v86 = v78;
    *((_QWORD *)v86 + 1) = v77;
    sub_1CB801048((uint64_t)v66, (uint64_t)v261);
    sub_1CB7D836C((uint64_t)v66, v260, &qword_1EF99F0B0);
    v247 = v78;
    swift_retain();
    swift_retain();
    v236 = v81;
    v87 = sub_1CB8466C0();
    v88 = sub_1CB846C84();
    v89 = v88;
    v90 = os_log_type_enabled(v87, v88);
    v91 = v83;
    v254 = v77;
    if (v90)
    {
      v92 = swift_slowAlloc();
      v233 = swift_slowAlloc();
      v274 = (char *)v233;
      *(_DWORD *)v92 = 136315394;
      v264 = v91;
      sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v267 = v82;
      v232 = v89;
      v93 = v271;
      v94 = sub_1CB847170();
      v275 = sub_1CB775A54(v94, v95, (uint64_t *)&v274);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      v96 = *(void (**)(char *, uint64_t))(v264 + 8);
      v96(v84, v93);
      *(_WORD *)(v92 + 12) = 2080;
      v97 = v257;
      v98 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v261;
      v267(v257, v261, v93);
      v231 = v87;
      v99 = v34;
      v100 = v258;
      ((void (*)(char *, char *, uint64_t))v272)(v258, v97, v93);
      v101 = sub_1CB847170();
      v103 = v102;
      v104 = v100;
      v34 = v99;
      v255 = (char *)v96;
      v96(v104, v93);
      v91 = v264;
      v275 = sub_1CB775A54(v101, v103, (uint64_t *)&v274);
      v105 = v254;
      sub_1CB846E58();
      v82 = v267;
      swift_bridgeObjectRelease();
      sub_1CB785B54(v260, &qword_1EF99F0B0);
      sub_1CB785B54((uint64_t)v98, &qword_1EF99F0B0);
      v106 = v231;
      _os_log_impl(&dword_1CB771000, v231, (os_log_type_t)v232, "#extractTurn: Called for request %s and turn %s", (uint8_t *)v92, 0x16u);
      v107 = v233;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v107, -1, -1);
      MEMORY[0x1D179FE84](v92, -1, -1);

    }
    else
    {
      v105 = v77;
      v93 = v271;
      v255 = *(char **)(v83 + 8);
      ((void (*)(char *, uint64_t))v255)(v84, v271);
      sub_1CB785B54(v260, &qword_1EF99F0B0);
      sub_1CB785B54((uint64_t)v261, &qword_1EF99F0B0);

    }
    v108 = v34;
    v109 = (Class *)((char *)&v262->isa + *(int *)(v34 + 48));
    ((void (*)(void))v82)();
    v110 = v247;
    *v109 = v247;
    v109[1] = v105;
    v111 = v259;
    v112 = (char *)v263;
    v271 = *(_QWORD *)(v105 + 16);
    v113 = v235;
    if (v271)
    {
      v114 = (uint64_t)v256;
      v260 = v105 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
      v115 = (void (*)(char *, char *, uint64_t))v82;
      ((void (*)(char *))v82)(v256);
      v116 = *(os_log_t **)(v91 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v116)(v114, 0, 1, v93);
      v261 = *(os_log_t **)(v91 + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v261)(v114, 1, v93) != 1)
      {
        ((void (*)(char *, uint64_t, uint64_t))v272)(v111, v114, v93);
        ((void (*)(os_log_t, uint64_t))v255)(v262, v93);
        sub_1CB7762AC((unint64_t *)&qword_1ED88BBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        v117 = sub_1CB846864();
        v262 = (os_log_t)v108;
        v118 = *(int *)(v108 + 48);
        if ((v117 & 1) != 0)
        {
          v263 = v116;
          v264 = v91;
          v119 = (uint64_t)v241;
          v120 = &v241[v118];
          v121 = (uint64_t)v270;
          v115(v241, (char *)v270, v93);
          v122 = v111;
          v123 = v254;
          *(_QWORD *)v120 = v110;
          *((_QWORD *)v120 + 1) = v123;
          sub_1CB801048(v119, v248);
          sub_1CB7D836C(v119, v249, &qword_1EF99F0B0);
          v124 = (uint64_t)v242;
          v125 = &v242[SLODWORD(v262[6].isa)];
          v115(v242, (char *)v121, v93);
          *(_QWORD *)v125 = v110;
          *((_QWORD *)v125 + 1) = v123;
          sub_1CB801048(v124, v251);
          sub_1CB7D836C(v124, v250, &qword_1EF99F0B0);
          v126 = v246;
          v115(v246, v122, v93);
          swift_retain_n();
          swift_retain_n();
          v127 = sub_1CB8466C0();
          v128 = sub_1CB846C84();
          v129 = v128;
          v130 = os_log_type_enabled(v127, v128);
          v267 = (void (*)(char *, os_log_t *, uint64_t))v115;
          if (v130)
          {
            v131 = swift_slowAlloc();
            LODWORD(v253) = v129;
            v132 = (void (*)(char *, uint64_t, uint64_t))v115;
            v133 = v131;
            v256 = (char *)swift_slowAlloc();
            v274 = v256;
            *(_DWORD *)v133 = 134218498;
            isa_low = SLODWORD(v262[6].isa);
            v262 = v127;
            v135 = v257;
            v136 = &v257[isa_low];
            v137 = v248;
            v138 = (_QWORD *)(v248 + isa_low);
            v132(v257, v248, v93);
            v139 = v138[1];
            *(_QWORD *)v136 = *v138;
            *((_QWORD *)v136 + 1) = v139;
            v140 = *(_QWORD *)(v139 + 16);
            ((void (*)(char *, uint64_t))v255)(v135, v93);
            sub_1CB785B54(v137, &qword_1EF99F0B0);
            v275 = v140;
            sub_1CB846E58();
            sub_1CB785B54(v249, &qword_1EF99F0B0);
            *(_WORD *)(v133 + 12) = 2080;
            v252 = (char *)(v133 + 14);
            v141 = v251;
            v132(v135, v251, v93);
            v142 = v258;
            ((void (*)(char *, char *, uint64_t))v272)(v258, v135, v93);
            sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
            v143 = sub_1CB847170();
            v145 = v144;
            v146 = (void (*)(uint64_t, uint64_t))v255;
            ((void (*)(char *, uint64_t))v255)(v142, v93);
            v275 = sub_1CB775A54(v143, v145, (uint64_t *)&v274);
            sub_1CB846E58();
            swift_bridgeObjectRelease();
            sub_1CB785B54(v250, &qword_1EF99F0B0);
            sub_1CB785B54(v141, &qword_1EF99F0B0);
            *(_WORD *)(v133 + 22) = 2080;
            v147 = v246;
            v148 = sub_1CB847170();
            v275 = sub_1CB775A54(v148, v149, (uint64_t *)&v274);
            v150 = v146;
            sub_1CB846E58();
            swift_bridgeObjectRelease();
            v146((uint64_t)v147, v93);
            v151 = v262;
            _os_log_impl(&dword_1CB771000, v262, (os_log_type_t)v253, "#extractTurn: Extracting %ld requests as part of Turn %s (Primary Request: %s)", (uint8_t *)v133, 0x20u);
            v152 = v256;
            swift_arrayDestroy();
            MEMORY[0x1D179FE84](v152, -1, -1);
            MEMORY[0x1D179FE84](v133, -1, -1);

          }
          else
          {
            sub_1CB785B54(v248, &qword_1EF99F0B0);
            sub_1CB785B54(v249, &qword_1EF99F0B0);
            sub_1CB785B54(v250, &qword_1EF99F0B0);
            sub_1CB785B54(v251, &qword_1EF99F0B0);
            v150 = (void (*)(uint64_t, uint64_t))v255;
            ((void (*)(char *, uint64_t))v255)(v126, v93);

          }
          v198 = (unsigned int (*)(os_log_t, uint64_t, uint64_t))v261;
          v199 = v263;
          v200 = v271;
          v201 = v260;
          v274 = (char *)MEMORY[0x1E0DEE9D8];
          v202 = *(_QWORD *)(v254 + 16);
          swift_retain();
          swift_retain();
          v203 = 0;
          v204 = v268;
          while (v202 != v203)
          {
            v267((char *)v204, (os_log_t *)(v201 + *(_QWORD *)(v264 + 72) * v203), v93);
            ((void (*)(os_log_t, _QWORD, uint64_t, uint64_t))v199)(v204, 0, 1, v93);
            if (v198(v204, 1, v93) == 1)
              goto LABEL_32;
            v205 = (uint64_t)v265;
            v272();
            sub_1CB7FA6B8(v205, (uint64_t)v269, &v275);
            if (v113)
            {
              v150(v205, v93);
              swift_release();
              swift_release();
              result = swift_bridgeObjectRelease();
              __break(1u);
              return result;
            }
            ++v203;
            v150(v205, v93);
            sub_1CB7F1284(v275);
            v204 = v268;
            if (v200 == v203)
            {
              ((void (*)(os_log_t, uint64_t, uint64_t, uint64_t))v199)(v268, 1, 1, v93);
LABEL_32:
              swift_release();
              swift_release();
              v206 = (uint64_t)v274;
              v207 = v257;
              v267(v257, v270, v93);
              swift_release();
              swift_release();
              v208 = (uint64_t)v244;
              ((void (*)(char *, char *, uint64_t))v272)(v244, v207, v93);
              swift_retain();
              v209 = v239;
              sub_1CB7B554C(v208, v239);
              swift_release();
              v210 = sub_1CB7CA5EC(v208);
              if (v210)
              {
                v211 = v210;
                v212 = objc_msgSend(v210, sel_clockIdentifier);
                if (!v212)
                {
                  v219 = (uint64_t)v238;
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v263)(v238, 1, 1, v93);
                  goto LABEL_40;
                }
                v213 = v212;
                v214 = objc_msgSend(v212, sel_value);
                if (v214)
                {
                  v215 = v214;
                  v216 = sub_1CB845F94();
                  v218 = v217;

                  v219 = (uint64_t)v238;
                  sub_1CB7B601C(v216, v218);
                  v220 = v218;
                  v208 = (uint64_t)v244;
                  sub_1CB779034(v216, v220);
                }
                else
                {
                  v219 = (uint64_t)v238;
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v263)(v238, 1, 1, v93);
                }

                if (v198((os_log_t)v219, 1, v93) == 1)
                {
LABEL_40:

                  sub_1CB785B54(v219, &qword_1ED88D570);
                  goto LABEL_41;
                }
                v226 = (uint64_t)v237;
                ((void (*)(char *, uint64_t, uint64_t))v272)(v237, v219, v93);
                v227 = (uint64_t)v269;
                swift_beginAccess();
                v228 = *(_QWORD *)(v227 + 40);
                if (*(_QWORD *)(v228 + 16))
                {
                  swift_bridgeObjectRetain();
                  v229 = sub_1CB779AD8(v226);
                  if ((v230 & 1) != 0)
                  {
                    v222 = *(_QWORD *)(*(_QWORD *)(v228 + 56) + 8 * v229);
                    swift_bridgeObjectRetain();

                    swift_bridgeObjectRelease();
                    goto LABEL_49;
                  }

                  swift_bridgeObjectRelease();
                }
                else
                {

                }
                v222 = MEMORY[0x1E0DEE9D8];
LABEL_49:
                ((void (*)(uint64_t, uint64_t))v255)(v226, v93);
              }
              else
              {
LABEL_41:
                v222 = MEMORY[0x1E0DEE9D8];
              }
              v223 = v258;
              v267(v258, (os_log_t *)v208, v93);
              v275 = v206;
              sub_1CB7F1284(v222);
              v224 = v275;
              v225 = (void (*)(char *, uint64_t))v255;
              ((void (*)(uint64_t, uint64_t))v255)(v208, v93);
              v225(v259, v93);
              sub_1CB785B54((uint64_t)v270, &qword_1EF99F0B0);
              type metadata accessor for Turn();
              v171 = swift_allocObject();
              ((void (*)(uint64_t, char *, uint64_t))v272)(v171 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v223, v93);
              *(_QWORD *)(v171 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = v224;
              sub_1CB7D836C(v209, v171 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date, &qword_1ED88D550);
              return v171;
            }
          }
          __break(1u);
          goto LABEL_51;
        }
        v173 = (uint64_t)v240;
        v174 = &v240[v118];
        v175 = (uint64_t)v270;
        v176 = (void (*)(char *, uint64_t, uint64_t))v115;
        v115(v240, (char *)v270, v93);
        v177 = v254;
        *(_QWORD *)v174 = v110;
        *((_QWORD *)v174 + 1) = v177;
        v178 = v243;
        sub_1CB7D836C(v173, v243, &qword_1EF99F0B0);
        v179 = v245;
        v115(v245, v111, v93);
        v180 = v234;
        v115(v234, v112, v93);
        v181 = sub_1CB8466C0();
        v182 = sub_1CB846C84();
        v183 = v182;
        if (os_log_type_enabled(v181, v182))
        {
          v184 = swift_slowAlloc();
          v271 = swift_slowAlloc();
          v274 = (char *)v271;
          *(_DWORD *)v184 = 136315650;
          v266 = v184 + 4;
          LODWORD(v269) = v183;
          v185 = v257;
          v176(v257, v178, v93);
          v268 = v181;
          v186 = v258;
          ((void (*)(char *, char *, uint64_t))v272)(v258, v185, v93);
          sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v187 = sub_1CB847170();
          v189 = v188;
          v190 = (void (*)(char *, uint64_t))v255;
          ((void (*)(char *, uint64_t))v255)(v186, v93);
          v275 = sub_1CB775A54(v187, v189, (uint64_t *)&v274);
          sub_1CB846E58();
          swift_bridgeObjectRelease();
          sub_1CB785B54(v178, &qword_1EF99F0B0);
          *(_WORD *)(v184 + 12) = 2080;
          v191 = v245;
          v192 = sub_1CB847170();
          v275 = sub_1CB775A54(v192, v193, (uint64_t *)&v274);
          sub_1CB846E58();
          swift_bridgeObjectRelease();
          v190(v191, v93);
          *(_WORD *)(v184 + 22) = 2080;
          v194 = sub_1CB847170();
          v275 = sub_1CB775A54(v194, v195, (uint64_t *)&v274);
          sub_1CB846E58();
          swift_bridgeObjectRelease();
          v190(v180, v93);
          v196 = v268;
          _os_log_impl(&dword_1CB771000, v268, (os_log_type_t)v269, "#extractTurn: Turn %s (Primary Request: %s) has multiple requests. Skipping non primary request %s.", (uint8_t *)v184, 0x20u);
          v197 = v271;
          swift_arrayDestroy();
          MEMORY[0x1D179FE84](v197, -1, -1);
          MEMORY[0x1D179FE84](v184, -1, -1);

          v190(v259, v93);
          v170 = (uint64_t)v270;
        }
        else
        {

          v221 = (void (*)(char *, uint64_t))v255;
          ((void (*)(char *, uint64_t))v255)(v180, v93);
          v221(v179, v93);
          sub_1CB785B54(v178, &qword_1EF99F0B0);
          v221(v111, v93);
          v170 = v175;
        }
LABEL_20:
        sub_1CB785B54(v170, &qword_1EF99F0B0);
        return 0;
      }
    }
    else
    {
      v115 = (void (*)(char *, char *, uint64_t))v82;
      v114 = (uint64_t)v256;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56))(v256, 1, 1, v93);
    }
    sub_1CB785B54(v114, &qword_1ED88D570);
    v153 = (void (*)(char *, uint64_t))v255;
    ((void (*)(os_log_t, uint64_t))v255)(v262, v93);
    v154 = (uint64_t)v252;
    v155 = &v252[*(int *)(v108 + 48)];
    v156 = (uint64_t)v270;
    v157 = (void (*)(char *, uint64_t, uint64_t))v115;
    v115(v252, (char *)v270, v93);
    v158 = v254;
    *(_QWORD *)v155 = v110;
    *((_QWORD *)v155 + 1) = v158;
    v159 = v253;
    sub_1CB7D836C(v154, v253, &qword_1EF99F0B0);
    v160 = sub_1CB8466C0();
    v161 = sub_1CB846C90();
    if (os_log_type_enabled(v160, v161))
    {
      v162 = (uint8_t *)swift_slowAlloc();
      v271 = swift_slowAlloc();
      v274 = (char *)v271;
      *(_DWORD *)v162 = 136315138;
      v269 = v162 + 4;
      v163 = v257;
      v157(v257, v159, v93);
      v164 = v258;
      ((void (*)(char *, char *, uint64_t))v272)(v258, v163, v93);
      sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v165 = v159;
      v166 = sub_1CB847170();
      v168 = v167;
      v153(v164, v93);
      v275 = sub_1CB775A54(v166, v168, (uint64_t *)&v274);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      sub_1CB785B54(v165, &qword_1EF99F0B0);
      _os_log_impl(&dword_1CB771000, v160, v161, "#extractTurn: Turn %s has no associated request id.", v162, 0xCu);
      v169 = v271;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v169, -1, -1);
      MEMORY[0x1D179FE84](v162, -1, -1);

      v170 = (uint64_t)v270;
    }
    else
    {

      sub_1CB785B54(v159, &qword_1EF99F0B0);
      v170 = v156;
    }
    goto LABEL_20;
  }
  sub_1CB785B54((uint64_t)v33, &qword_1EF99F0A8);
  if (qword_1ED88E518 != -1)
LABEL_51:
    swift_once();
  v70 = sub_1CB8466D8();
  __swift_project_value_buffer(v70, (uint64_t)qword_1ED890248);
  v71 = sub_1CB8466C0();
  v72 = sub_1CB846C90();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v73 = 0;
    _os_log_impl(&dword_1CB771000, v71, v72, "#extractTurn: Request does not have a UEI turn ID. Skipping", v73, 2u);
    MEMORY[0x1D179FE84](v73, -1, -1);
  }

  return 0;
}

uint64_t InteractionReader.appInteractions(since:intentTypes:until:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1CB7F6670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_1CB846624();
  v1 = sub_1CB846618();
  v5 = v0;
  v6 = MEMORY[0x1E0DA3C50];
  *(_QWORD *)&v4 = v1;
  type metadata accessor for FlatFileSignalReader();
  v2 = swift_allocObject();
  result = sub_1CB7780BC(&v4, v2 + 16);
  qword_1ED88DAD8 = v2;
  return result;
}

uint64_t static FlatFileSignalReader.shared.getter()
{
  if (qword_1ED88DAE0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t FlatFileSignalReader.__allocating_init(path:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1CB845F58();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = sub_1CB846624();
  swift_allocObject();
  v6 = sub_1CB84660C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v11 = v5;
  v12 = MEMORY[0x1E0DA3C50];
  *(_QWORD *)&v10 = v6;
  type metadata accessor for FlatFileSignalReader();
  v7 = swift_allocObject();
  sub_1CB7780BC(&v10, v7 + 16);
  return v7;
}

uint64_t type metadata accessor for FlatFileSignalReader()
{
  return objc_opt_self();
}

uint64_t sub_1CB7F6828()
{
  uint64_t v0;
  uint64_t v2;

  sub_1CB7F68C8();
  sub_1CB846FF0();
  sub_1CB84708C();
  v0 = v2;
  if (v2)
  {
    while ((sub_1CB846048() & 1) == 0)
    {
      swift_release();
      sub_1CB84708C();
      v0 = v2;
    }
  }
  swift_release();
  swift_release();
  return v0;
}

_QWORD *sub_1CB7F68C8()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v1 = sub_1CB846600();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0CC8);
  v2 = (_QWORD *)swift_allocObject();
  v2[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = sub_1CB785DB0((unint64_t *)&qword_1ED88C040, (uint64_t *)&unk_1ED88C050, MEMORY[0x1E0DEE970]);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  v2[2] = v3;
  v2[3] = v5;
  v2[4] = v6;
  v2[5] = v5;
  v7 = sub_1CB7FFED0();
  swift_release();
  return v7;
}

uint64_t sub_1CB7F69E8()
{
  uint64_t v0;

  sub_1CB7F68C8();
  v0 = sub_1CB7D2304();
  swift_release();
  return v0;
}

uint64_t FlatFileSignalReader.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t FlatFileSignalReader.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7F6A5C()
{
  return sub_1CB7F6828();
}

_QWORD *sub_1CB7F6A7C()
{
  return sub_1CB7F68C8();
}

uint64_t sub_1CB7F6A9C()
{
  uint64_t v0;

  sub_1CB7F68C8();
  v0 = sub_1CB7D2304();
  swift_release();
  return v0;
}

_QWORD *FlatFileSignalReader.turns()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = sub_1CB7F68C8();
  *a1 = sub_1CB8006DC;
  a1[1] = result;
  return result;
}

uint64_t FlatFileSignalReader.conversations()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1CB7F68C8();
  v2 = sub_1CB7D2304();
  result = swift_release();
  *a1 = sub_1CB800700;
  a1[1] = v2;
  return result;
}

_QWORD *sub_1CB7F6B48@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = sub_1CB7F68C8();
  *a1 = sub_1CB801190;
  a1[1] = result;
  return result;
}

uint64_t sub_1CB7F6B78@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1CB7F68C8();
  v2 = sub_1CB7D2304();
  result = swift_release();
  *a1 = sub_1CB80118C;
  a1[1] = v2;
  return result;
}

uint64_t sub_1CB7F6BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v10[3];
  uint64_t v11;
  _UNKNOWN **v12;

  if (qword_1ED88DAE8 != -1)
    swift_once();
  v0 = qword_1ED890220;
  v11 = type metadata accessor for BiomePLSELFStoreReader();
  v12 = &off_1E8692400;
  v10[0] = v0;
  type metadata accessor for BiomeSignalReader();
  v1 = swift_allocObject();
  v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v5 + 16))(v4);
  v6 = *v4;
  swift_retain_n();
  v7 = sub_1CB7FC810(v6, v1);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  result = swift_release();
  qword_1ED890218 = v7;
  return result;
}

uint64_t sub_1CB7F6CE0(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v7 = *(_QWORD *)a1;
    v8 = v3;
    v9 = 1;
    swift_bridgeObjectRetain();
    a2(&v7);
    return sub_1CB800AA0(v4, v3, 1);
  }
  else
  {
    swift_retain();
    sub_1CB846FF0();
    sub_1CB84708C();
    v6 = v7;
    if (v7)
    {
      while ((sub_1CB846048() & 1) == 0)
      {
        swift_release();
        sub_1CB84708C();
        v6 = v7;
      }
    }
    swift_release();
    v7 = v6;
    v8 = 0;
    v9 = 0;
    a2(&v7);
    sub_1CB800AA0(v4, v3, 0);
    return swift_release();
  }
}

uint64_t sub_1CB7F6DF0(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD v13[2];
  char v14;

  v7 = sub_1CB7FFED0();
  if (qword_1EF99C400 != -1)
    swift_once();
  v8 = sub_1CB8466D8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EF9A0CB0);
  swift_retain();
  v9 = sub_1CB8466C0();
  v10 = sub_1CB846C84();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v11 = 134217984;
    v13[0] = sub_1CB84702C();
    sub_1CB846E58();
    swift_release();
    _os_log_impl(&dword_1CB771000, v9, v10, "Extracted %ld turn(s) from Biome", v11, 0xCu);
    MEMORY[0x1D179FE84](v11, -1, -1);

  }
  else
  {

    swift_release();
  }
  v13[0] = v7;
  v13[1] = 0;
  v14 = 0;
  swift_retain();
  a2(v13);
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1CB7F8610(a5);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1CB7F6FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  id v36;
  uint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  _QWORD aBlock[7];

  v46 = a1;
  v47 = a2;
  v40 = sub_1CB846744();
  v45 = *(_QWORD **)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CB84678C();
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64);
  v10 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v39 - v13;
  v49 = (char *)v39 - v13;
  sub_1CB846078();
  v39[1] = *(_QWORD *)(v2 + 56);
  v50 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v50(v12, v14, v8);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v48 = v10;
  v41 = v15 | 7;
  v16 = swift_allocObject();
  v51 = v2;
  *(_QWORD *)(v16 + 16) = v2;
  v42 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v42(v16 + ((v15 + 24) & ~v15), v12, v8);
  aBlock[4] = sub_1CB800C94;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_46;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1CB846768();
  v52 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB785DB0((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8, MEMORY[0x1E0DEAF38]);
  v18 = v40;
  sub_1CB846EC4();
  MEMORY[0x1D179F0D4](0, v7, v4, v17);
  _Block_release(v17);
  ((void (*)(char *, uint64_t))v45[1])(v4, v18);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v44);
  swift_release();
  v45 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v51 + 16), *(_QWORD *)(v51 + 40));
  v19 = swift_allocObject();
  swift_weakInit();
  v20 = v12;
  v21 = (uint64_t)v49;
  v22 = v8;
  v50((char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v49, v8);
  v23 = (v15 + 40) & ~v15;
  v44 = v23 + v9;
  v24 = (_QWORD *)swift_allocObject();
  v25 = v46;
  v26 = v47;
  v24[2] = v46;
  v24[3] = v26;
  v24[4] = v19;
  v27 = v20;
  v28 = v22;
  v29 = v22;
  v30 = (void (*)(char *, char *, uint64_t))v42;
  v42((uint64_t)v24 + v23, v20, v28);
  v31 = swift_allocObject();
  swift_weakInit();
  v32 = v21;
  v33 = v29;
  v50(v27, (char *)v32, v29);
  v34 = (char *)swift_allocObject();
  *((_QWORD *)v34 + 2) = v25;
  *((_QWORD *)v34 + 3) = v26;
  *((_QWORD *)v34 + 4) = v31;
  v30(&v34[v23], v27, v33);
  swift_retain_n();
  swift_retain();
  v35 = (void *)sub_1CB81B1EC((uint64_t)sub_1CB800CF4, (uint64_t)v24, (uint64_t)sub_1CB800FCC, (uint64_t)v34);
  swift_release();
  swift_release();
  swift_release();
  v36 = v35;
  v37 = (uint64_t)v49;
  sub_1CB7FCA2C((uint64_t)v49, (uint64_t)v36, v51);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v37, v33);
}

uint64_t sub_1CB7F7410(void *a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  __objc2_prot_list **p_base_prots;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  __objc2_prot_list **v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22[2];
  char v23;

  p_base_prots = &SupportedLocalesPListStore.base_prots;
  if (objc_msgSend(a1, sel_state))
  {
    if (qword_1EF99C400 != -1)
      swift_once();
    v9 = sub_1CB8466D8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EF9A0CB0);
    v10 = a1;
    v11 = sub_1CB8466C0();
    v12 = sub_1CB846C90();
    v13 = &SupportedLocalesPListStore.base_prots;
    if (os_log_type_enabled(v11, v12))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v22[0] = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = objc_msgSend(v10, sel_error);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99E380);
      v17 = sub_1CB8468DC();
      sub_1CB775A54(v17, v18, v22);
      sub_1CB846E58();

      p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v11, v12, "Failed to extract turns from SiriPrivateLearningSELFEvent stream, error=%s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v15, -1, -1);
      v19 = v14;
      v13 = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
      MEMORY[0x1D179FE84](v19, -1, -1);

    }
    else
    {

    }
    v22[0] = (uint64_t)objc_msgSend(v10, (SEL)v13[208]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99E380);
    v22[0] = sub_1CB8468DC();
    v22[1] = v20;
    v23 = 1;
    a2(v22);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1CB7F8C28(a5, objc_msgSend(a1, (SEL)p_base_prots[207]) == 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CB7F76B4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  void *v43;
  uint64_t v44;
  id v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, char *, uint64_t);
  _QWORD *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  _QWORD aBlock[7];

  v6 = v5;
  v67 = a4;
  v68 = a5;
  v66 = a3;
  v65 = a2;
  v79 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BBF0);
  v8 = *(_QWORD *)(v7 - 8);
  v72 = v7;
  v73 = v8;
  MEMORY[0x1E0C80A78](v7);
  v70 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E08);
  v11 = *(_QWORD *)(v10 - 8);
  v74 = v10;
  v75 = v11;
  MEMORY[0x1E0C80A78](v10);
  v69 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1CB846744();
  v64 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1CB84678C();
  v60 = *(_QWORD **)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CB846084();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v56 - v22;
  v77 = (char *)&v56 - v22;
  sub_1CB846078();
  v56 = *(_QWORD *)(v5 + 56);
  v61 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v24 = v17;
  v61(v21, v23, v17);
  v25 = *(unsigned __int8 *)(v18 + 80);
  v71 = v18;
  v58 = v25 | 7;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v6;
  v59 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  v76 = v21;
  v59(v26 + ((v25 + 24) & ~v25), v21, v17);
  aBlock[4] = sub_1CB800C94;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_21;
  v27 = _Block_copy(aBlock);
  swift_retain();
  sub_1CB846768();
  v80 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB785DB0((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8, MEMORY[0x1E0DEAF38]);
  v28 = v57;
  sub_1CB846EC4();
  MEMORY[0x1D179F0D4](0, v16, v14, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v14, v28);
  ((void (*)(char *, uint64_t))v60[1])(v16, v62);
  swift_release();
  v60 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 40));
  v64 = *(_QWORD *)&v79[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark];
  v29 = swift_allocObject();
  v63 = v6;
  swift_weakInit();
  v30 = (uint64_t)v77;
  v31 = v24;
  v32 = v24;
  v33 = (void (*)(char *, uint64_t, uint64_t))v61;
  v61(v21, v77, v32);
  v34 = (_QWORD *)swift_allocObject();
  v62 = (uint64_t)v34;
  v35 = v65;
  v36 = v66;
  v34[2] = v65;
  v34[3] = v36;
  v34[4] = v29;
  v37 = v76;
  v38 = (void (*)(char *, char *, uint64_t))v59;
  v59((uint64_t)v34 + ((v25 + 40) & ~v25), v76, v31);
  v57 = swift_allocObject();
  swift_weakInit();
  v33(v37, v30, v31);
  v39 = (v25 + 64) & ~v25;
  v40 = (_QWORD *)swift_allocObject();
  v40[2] = v35;
  v40[3] = v36;
  v41 = v68;
  v40[4] = v67;
  v40[5] = v41;
  v42 = (char *)v40 + v39;
  v43 = v79;
  v44 = v57;
  v40[6] = v79;
  v40[7] = v44;
  v38(v42, v76, v31);
  swift_retain_n();
  swift_retain();
  v45 = v43;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D5A0);
  sub_1CB785DB0(&qword_1EF9A0E10, &qword_1ED88D5A0, MEMORY[0x1E0D02538]);
  v46 = v70;
  sub_1CB8461A4();
  sub_1CB785DB0(&qword_1EF9A0E18, &qword_1ED88BBF0, MEMORY[0x1E0D023D8]);
  v47 = v69;
  v48 = v72;
  sub_1CB846144();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v46, v48);
  v49 = swift_allocObject();
  v50 = v62;
  *(_QWORD *)(v49 + 16) = sub_1CB800CF4;
  *(_QWORD *)(v49 + 24) = v50;
  sub_1CB785DB0(&qword_1EF9A0E20, &qword_1EF9A0E08, MEMORY[0x1E0D02388]);
  swift_retain();
  v51 = v74;
  v52 = (void *)sub_1CB846150();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v47, v51);
  swift_release();
  swift_release();
  swift_release();
  v53 = v52;
  v54 = (uint64_t)v77;
  sub_1CB7FCA2C((uint64_t)v77, (uint64_t)v53, v63);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v54, v31);
}

uint64_t sub_1CB7F7D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v4 = sub_1CB846084();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = 0x8000000000000000;
  sub_1CB82F11C(0, 0, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_endAccess();
}

uint64_t sub_1CB7F7E5C(void *a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __objc2_prot_list **p_base_prots;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  __objc2_prot_list **v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  char *v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  void (*v37)(_QWORD);
  void (*v38)(void);
  objc_super v39;
  uint64_t v40;
  uint64_t v41[2];
  char v42;

  p_base_prots = &SupportedLocalesPListStore.base_prots;
  if (objc_msgSend(a1, sel_state))
  {
    v38 = a5;
    if (qword_1EF99C400 != -1)
      swift_once();
    v16 = sub_1CB8466D8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EF9A0CB0);
    v17 = a1;
    v18 = sub_1CB8466C0();
    v19 = sub_1CB846C90();
    v20 = &SupportedLocalesPListStore.base_prots;
    if (os_log_type_enabled(v18, v19))
    {
      v36 = a4;
      v37 = a3;
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v41[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v23 = objc_msgSend(v17, sel_error);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99E380);
      v24 = sub_1CB8468DC();
      v40 = sub_1CB775A54(v24, v25, v41);
      p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
      sub_1CB846E58();

      v20 = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v18, v19, "Failed to extract turns from SiriPrivateLearningSELFEvent stream, error=%s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v22, -1, -1);
      v26 = v21;
      a3 = v37;
      MEMORY[0x1D179FE84](v26, -1, -1);

    }
    else
    {

    }
    v41[0] = (uint64_t)objc_msgSend(v17, (SEL)v20[208], v36);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99E380);
    v41[0] = sub_1CB8468DC();
    v41[1] = v34;
    v42 = 1;
    a3(v41);
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD))v38)(0);
  }
  else
  {
    v28 = *(_QWORD *)(a7 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name);
    v27 = *(_QWORD *)(a7 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8);
    v29 = (objc_class *)type metadata accessor for StreamBookmark();
    v30 = (char *)objc_allocWithZone(v29);
    v31 = &v30[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
    *(_QWORD *)v31 = v28;
    *((_QWORD *)v31 + 1) = v27;
    *(_QWORD *)&v30[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = a2;
    v32 = &v30[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
    *(_QWORD *)v32 = 0;
    v32[8] = 1;
    v39.receiver = v30;
    v39.super_class = v29;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v33 = objc_msgSendSuper2(&v39, sel_init);
    a5();

  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1CB7F8C28(a9, objc_msgSend(a1, (SEL)p_base_prots[207]) == 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CB7F81AC(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v6 = *(_QWORD *)a1;
    v7 = v3;
    v8 = 1;
    swift_bridgeObjectRetain();
    a2(&v6);
    return sub_1CB800AA0(v4, v3, 1);
  }
  else
  {
    sub_1CB800A90(*(_QWORD *)a1, v3, 0);
    v6 = sub_1CB7D2304();
    v7 = 0;
    v8 = 0;
    a2(&v6);
    sub_1CB800AA0(v4, v3, 0);
    return swift_release();
  }
}

void sub_1CB7F8264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unsigned __int8 *v17;
  int v18;
  int v19;
  int v20;
  char isUniquelyReferenced_nonNull_native;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40[3];
  uint64_t v41;

  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v40[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v40[-1] - v11;
  v13 = (uint64_t *)(a1 + 64);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 64);
  if (*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    v15 = sub_1CB779AD8(a2);
    if ((v16 & 1) != 0)
    {
      v17 = (unsigned __int8 *)(*(_QWORD *)(v14 + 56) + 16 * v15);
      v18 = v17[1];
      v19 = v17[2];
      v20 = v17[3];
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
      swift_beginAccess();
      swift_unknownObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v41 = *v13;
      *v13 = 0x8000000000000000;
      if (v18)
        v22 = 257;
      else
        v22 = 1;
      if (v19)
        v23 = 0x10000;
      else
        v23 = 0;
      v24 = v23 | v22;
      if (v20)
        v25 = 0x1000000;
      else
        v25 = 0;
      sub_1CB82F11C(v24 | v25, a3, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
      *v13 = v41;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_endAccess();
      if (v19)
      {
        swift_beginAccess();
        v26 = sub_1CB825B7C(a2);
        v28 = v27;
        swift_endAccess();
        sub_1CB800C48(v26, v28);
      }
      if (v20)
      {
        if ((v18 & 1) != 0)
        {
          swift_beginAccess();
          v29 = sub_1CB825B7C(a2);
          v31 = v30;
          swift_endAccess();
          sub_1CB800C48(v29, v31);
        }
      }
      swift_unknownObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EF99C400 != -1)
    swift_once();
  v32 = sub_1CB8466D8();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EF9A0CB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a2, v6);
  v33 = sub_1CB8466C0();
  v34 = sub_1CB846C90();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v40[0] = v36;
    *(_DWORD *)v35 = 136315138;
    v37 = sub_1CB846030();
    v41 = sub_1CB775A54(v37, v38, v40);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    _os_log_impl(&dword_1CB771000, v33, v34, "Attempting to mark non-existing subscription for key=%s as started", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v36, -1, -1);
    MEMORY[0x1D179FE84](v35, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }

}

uint64_t sub_1CB7F8610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v3 = sub_1CB846744();
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CB84678C();
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CB846084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v16[1] = *(_QWORD *)(v1 + 56);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_1CB800C60;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_15_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1CB846768();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB785DB0((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8, MEMORY[0x1E0DEAF38]);
  sub_1CB846EC4();
  MEMORY[0x1D179F0D4](0, v8, v5, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
  return swift_release();
}

void sub_1CB7F8874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unsigned __int8 *v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37[3];
  uint64_t v38;

  v4 = sub_1CB846084();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v37[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v37[-1] - v9;
  v11 = (uint64_t *)(a1 + 64);
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 64);
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_1CB779AD8(a2);
    if ((v14 & 1) != 0)
    {
      v15 = (unsigned __int8 *)(*(_QWORD *)(v12 + 56) + 16 * v13);
      v16 = *v15;
      v17 = v15[2];
      v18 = v15[3];
      v19 = *((_QWORD *)v15 + 1);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
      swift_beginAccess();
      swift_unknownObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v38 = *v11;
      *v11 = 0x8000000000000000;
      if (v17)
        v21 = 0x10000;
      else
        v21 = 0;
      if (v18)
        v22 = 0x1000000;
      else
        v22 = 0;
      sub_1CB82F11C(v21 | v16 | v22 | 0x100, v19, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
      *v11 = v38;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      swift_endAccess();
      if (v17 && v16)
      {
        swift_beginAccess();
        v23 = sub_1CB825B7C(a2);
        v25 = v24;
        swift_endAccess();
        sub_1CB800C48(v23, v25);
      }
      if ((v18 & 1) != 0)
      {
        if (v16)
        {
          swift_beginAccess();
          v26 = sub_1CB825B7C(a2);
          v28 = v27;
          swift_endAccess();
          sub_1CB800C48(v26, v28);
        }
      }
      swift_unknownObjectRelease_n();
      return;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EF99C400 != -1)
    swift_once();
  v29 = sub_1CB8466D8();
  __swift_project_value_buffer(v29, (uint64_t)qword_1EF9A0CB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
  v30 = sub_1CB8466C0();
  v31 = sub_1CB846C90();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v37[0] = v33;
    *(_DWORD *)v32 = 136315138;
    v34 = sub_1CB846030();
    v38 = sub_1CB775A54(v34, v35, v37);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    _os_log_impl(&dword_1CB771000, v30, v31, "Attempting to mark non-existing subscription for key=%s as received", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v33, -1, -1);
    MEMORY[0x1D179FE84](v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }

}

uint64_t sub_1CB7F8C28(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _BYTE v20[4];
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v3 = v2;
  v21 = a2;
  v5 = sub_1CB846744();
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1CB84678C();
  v23 = *(_QWORD *)(v8 - 8);
  v24 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1CB846084();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = *(_QWORD *)(v3 + 56);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = v15 + v13;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v3;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v12 + 32))(v17 + v15, v14, v11);
  *(_BYTE *)(v17 + v16) = v21;
  aBlock[4] = sub_1CB800BF4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_9;
  v18 = _Block_copy(aBlock);
  swift_retain();
  sub_1CB846768();
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB785DB0((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8, MEMORY[0x1E0DEAF38]);
  sub_1CB846EC4();
  MEMORY[0x1D179F0D4](0, v10, v7, v18);
  _Block_release(v18);
  (*(void (**)(_BYTE *, uint64_t))(v25 + 8))(v7, v5);
  (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v10, v24);
  return swift_release();
}

void sub_1CB7F8E9C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unsigned __int8 *v17;
  int v18;
  int v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36[3];
  uint64_t v37;

  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v36[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v36[-1] - v11;
  v13 = (uint64_t *)(a1 + 64);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 64);
  if (*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    v15 = sub_1CB779AD8(a2);
    if ((v16 & 1) != 0)
    {
      v17 = (unsigned __int8 *)(*(_QWORD *)(v14 + 56) + 16 * v15);
      v18 = *v17;
      v19 = v17[1];
      v20 = *((_QWORD *)v17 + 1);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
      swift_beginAccess();
      swift_unknownObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v37 = *v13;
      *v13 = 0x8000000000000000;
      if (v19)
        v22 = 256;
      else
        v22 = 0;
      v23 = a3 & 1;
      if (v23)
        v24 = 0x1000000;
      else
        v24 = 0x10000;
      sub_1CB82F11C(v24 | v18 | v22, v20, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
      *v13 = v37;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_endAccess();
      if (v23)
      {
        if (!v19 || (v18 & 1) == 0)
          goto LABEL_22;
      }
      else if (!v18)
      {
LABEL_22:
        swift_unknownObjectRelease_n();
        return;
      }
      swift_beginAccess();
      v32 = sub_1CB825B7C(a2);
      v34 = v33;
      swift_endAccess();
      sub_1CB800C48(v32, v34);
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EF99C400 != -1)
    swift_once();
  v25 = sub_1CB8466D8();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EF9A0CB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a2, v6);
  v26 = sub_1CB8466C0();
  v27 = sub_1CB846C90();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v36[0] = v29;
    *(_DWORD *)v28 = 136315138;
    v30 = sub_1CB846030();
    v37 = sub_1CB775A54(v30, v31, v36);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    _os_log_impl(&dword_1CB771000, v26, v27, "Attempting to mark non-existing subscription for key=%s as completed", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v29, -1, -1);
    MEMORY[0x1D179FE84](v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }

}

uint64_t sub_1CB7F9218()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7F924C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  sub_1CB7F6FCC((uint64_t)sub_1CB800B3C, v10);
  return swift_release();
}

uint64_t sub_1CB7F9340(uint64_t a1, uint64_t a2)
{
  return sub_1CB7F6FCC(a1, a2);
}

uint64_t sub_1CB7F9360(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CB7F76B4(a1, a2, a3, a4, a5);
}

uint64_t sub_1CB7F9380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1CB7F6FCC((uint64_t)sub_1CB800AB0, v4);
  return swift_release();
}

uint64_t sub_1CB7F93E4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  swift_retain();
  sub_1CB7F76B4(a1, (uint64_t)sub_1CB8011C0, v10, a4, a5);
  return swift_release();
}

uint64_t sub_1CB7F9470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1EF9A0CB0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF9A0CB0);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1CB7F9500()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (void *)sub_1CB7B5E6C();
  if (!v3)
  {
    v11 = sub_1CB846084();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v2, 1, 1, v11);
LABEL_8:
    v14 = 0;
    goto LABEL_9;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, sel_eventMetadata);
  if (v5 && (v6 = v5, v7 = objc_msgSend(v5, sel_turnID), v6, v7))
  {
    v8 = sub_1CB845F94();
    v10 = v9;

    sub_1CB7B601C(v8, v10);
    sub_1CB779034(v8, v10);
  }
  else
  {
    v12 = sub_1CB846084();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v2, 1, 1, v12);
  }

  v13 = sub_1CB846084();
  v14 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v2, 1, v13) == 1)
    goto LABEL_8;
LABEL_9:
  sub_1CB785B54((uint64_t)v2, &qword_1ED88D570);
  return v14;
}

uint64_t sub_1CB7F9680(void **a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t *v26;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t result;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;

  v47 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v44 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v44 - v13;
  v15 = *a1;
  v16 = (void *)sub_1CB7B5E6C();
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    return sub_1CB785B54((uint64_t)v5, &qword_1ED88D570);
  }
  v17 = v16;
  v46 = v14;
  v18 = objc_msgSend(v16, sel_eventMetadata);
  if (v18
    && (v19 = v18, v20 = objc_msgSend(v18, sel_turnID), v19, v20))
  {
    v21 = sub_1CB845F94();
    v44 = v12;
    v23 = v22;

    sub_1CB7B601C(v21, v23);
    v12 = v44;
    sub_1CB779034(v21, v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_1CB785B54((uint64_t)v5, &qword_1ED88D570);
  v24 = v46;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v46, v5, v6);
  v25 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v25(v12, v24, v6);
  v44 = v15;
  v26 = v47;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v48 = *v26;
  v28 = v48;
  *v26 = 0x8000000000000000;
  v30 = sub_1CB779AD8((uint64_t)v12);
  v31 = *(_QWORD *)(v28 + 16);
  v32 = (v29 & 1) == 0;
  v33 = v31 + v32;
  if (__OFADD__(v31, v32))
  {
    __break(1u);
LABEL_20:
    sub_1CB846AA4();
LABEL_18:
    sub_1CB846AD4();
    sub_1CB846A74();
    v43 = *(void (**)(char *, uint64_t))(v7 + 8);
    v43(v12, v6);
    return ((uint64_t (*)(char *, uint64_t))v43)(v46, v6);
  }
  v34 = v29;
  if (*(_QWORD *)(v28 + 24) >= v33)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CB77EF80();
      v28 = v48;
    }
LABEL_15:
    v38 = v47;
    *v47 = v28;
    swift_bridgeObjectRelease();
    v39 = (_QWORD *)*v38;
    swift_bridgeObjectRetain();
    if ((v34 & 1) == 0)
    {
      v40 = (uint64_t)v45;
      v25(v45, v12, v6);
      sub_1CB82F9E0(v30, v40, MEMORY[0x1E0DEE9D8], v39);
    }
    v41 = v39[7];
    v42 = swift_bridgeObjectRelease();
    MEMORY[0x1D179EDF8](v42);
    if (*(_QWORD *)((*(_QWORD *)(v41 + 8 * v30) & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*(_QWORD *)(v41 + 8 * v30) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      goto LABEL_18;
    goto LABEL_20;
  }
  sub_1CB77B704(v33, isUniquelyReferenced_nonNull_native);
  v28 = v48;
  v35 = sub_1CB779AD8((uint64_t)v12);
  if ((v34 & 1) == (v36 & 1))
  {
    v30 = v35;
    goto LABEL_15;
  }
  result = sub_1CB847290();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F9A0C(unint64_t *a1)
{
  unint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_1CB7FAFE4(v2);
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_1CB7FB04C(v6);
  return sub_1CB846A74();
}

uint64_t sub_1CB7F9A90@<X0>(unint64_t a1@<X0>, char *a2@<X8>)
{
  void *v2;
  SEL *p_base_prots;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, char *, char *);
  char *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  void *v50;
  void *v51;
  id v52;
  char *v53;
  char *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  void (*v62)(uint64_t, char *, char *);
  uint64_t v63;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  void (*v72)(uint64_t, char *);
  void (*v73)(uint64_t, char *);
  uint64_t v74;
  uint64_t (*v75)(char *, uint64_t, uint64_t, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void (*v87)(char *, char *);
  char *v88;
  void (*v89)(char *, char *);
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  void (*v95)(char *, char *, char *);
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CB846084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v100 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v94 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v94 - v16;
  if (!(a1 >> 62))
  {
    v18 = *(char **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v103 = v18;
    if (v18)
      goto LABEL_3;
LABEL_56:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_57:
    sub_1CB785B54(v8, &qword_1ED88D570);
    if (qword_1EF99C400 != -1)
      swift_once();
    v90 = sub_1CB8466D8();
    __swift_project_value_buffer(v90, (uint64_t)qword_1EF9A0CB0);
    v91 = sub_1CB8466C0();
    v92 = sub_1CB846C84();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v93 = 0;
      _os_log_impl(&dword_1CB771000, v91, v92, "Cannot retrieve timestamp, unable to extract turn ID", v93, 2u);
      MEMORY[0x1D179FE84](v93, -1, -1);
    }

    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E50);
    v75 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56);
    v76 = a2;
    return v75(v76, 1, 1, v74);
  }
LABEL_55:
  swift_bridgeObjectRetain();
  v103 = (char *)sub_1CB847044();
  if (!v103)
    goto LABEL_56;
LABEL_3:
  v101 = a1 & 0xC000000000000001;
  v98 = v15;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x1D179F320](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_65:
      swift_once();
      goto LABEL_44;
    }
    v19 = *(id *)(a1 + 32);
  }
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = (void *)sub_1CB7B5E6C();
  v102 = v10;
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, sel_eventMetadata);
    if (v23
      && (v2 = v23, v24 = objc_msgSend(v23, sel_turnID), v2, v24))
    {
      v2 = (void *)sub_1CB845F94();
      v26 = v25;

      sub_1CB7B601C((uint64_t)v2, v26);
      v27 = v26;
      v10 = v102;
      sub_1CB779034((uint64_t)v2, v27);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }

    v20 = v22;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    goto LABEL_57;
  v96 = (char *)v9;
  v97 = a2;
  v28 = *(void (**)(char *, char *, char *))(v10 + 32);
  v99 = v17;
  v95 = v28;
  v28(v17, (char *)v8, (char *)v9);
  swift_bridgeObjectRetain();
  v8 = 4;
  p_base_prots = (SEL *)&SupportedLocalesPListStore.base_prots;
  v15 = v103;
  v9 = v101;
  while (1)
  {
    if (v9)
      v29 = (char *)MEMORY[0x1D179F320](v8 - 4, a1);
    else
      v29 = (char *)*(id *)(a1 + 8 * v8);
    v17 = v29;
    a2 = (char *)(v8 - 3);
    if (__OFADD__(v8 - 4, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (objc_msgSend(v29, sel_anyEventType) == 6)
    {
      v30 = objc_msgSend(v17, sel_payload);
      if (v30)
      {
        v31 = sub_1CB845F94();
        v33 = v32;

        v30 = (id)sub_1CB845F88();
        v34 = v33;
        p_base_prots = (SEL *)(&SupportedLocalesPListStore + 40);
        sub_1CB779034(v31, v34);
      }
      v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A460]), sel_initWithData_, v30);

      v36 = (char *)objc_msgSend(v35, sel_event);
      if (!v36)
        goto LABEL_28;
    }
    else
    {
      v36 = v17;
    }
    v37 = sub_1CB777FA8(0, (unint64_t *)&qword_1EF9A0BC0);
    objc_msgSend(v36, sel_anyEventType);
    v38 = sub_1CB846D80();
    if (!v38 || v37 != v38)
      goto LABEL_27;
    v40 = objc_msgSend(v36, sel_payload);
    if (v40)
    {
      v41 = v40;
      v42 = sub_1CB845F94();
      v44 = v43;

      v45 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v46 = (void *)sub_1CB845F88();
      v47 = v42;
      v9 = v101;
      v48 = v44;
      v15 = v103;
      sub_1CB779034(v47, v48);
    }
    else
    {
      v45 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v46 = 0;
    }
    v49 = (char *)objc_msgSend(v45, sel_initWithData_, v46);

    if (!v49)
    {
      v10 = v102;
      p_base_prots = (SEL *)(&SupportedLocalesPListStore + 40);
LABEL_27:

LABEL_28:
      v2 = 0;
      goto LABEL_29;
    }
    objc_opt_self();
    v2 = (void *)swift_dynamicCastObjCClass();

    v36 = v49;
    v10 = v102;
    p_base_prots = (SEL *)(&SupportedLocalesPListStore + 40);
    if (!v2)
      goto LABEL_27;
LABEL_29:
    v39 = objc_msgSend(v2, p_base_prots[201]);

    if (v39)
      break;

    ++v8;
    if (a2 == v15)
    {
      swift_bridgeObjectRelease();
      p_base_prots = 0;
      v17 = v96;
      v2 = v97;
      v9 = (uint64_t)v100;
      goto LABEL_43;
    }
  }
  swift_bridgeObjectRelease();
  p_base_prots = v17;
  v50 = (void *)sub_1CB7B5E6C();
  v9 = (uint64_t)v100;
  if (v50)
  {
    v51 = v50;
    v52 = objc_msgSend(v50, sel_deviceDynamicContext);
    v54 = v96;
    v53 = v97;
    if (v52)
    {
      v55 = v52;
      objc_msgSend(v52, sel_timeIntervalSince1970);
      v57 = v56;

      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E50);
      v59 = *(int *)(v58 + 48);
      v95(v53, v99, v54);
      *(_QWORD *)&v53[v59] = v57;
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v53, 0, 1, v58);
    }
    v77 = v99;
    if (qword_1EF99C400 != -1)
      swift_once();
    v78 = sub_1CB8466D8();
    __swift_project_value_buffer(v78, (uint64_t)qword_1EF9A0CB0);
    v79 = v98;
    (*(void (**)(char *, char *, char *))(v10 + 16))(v98, v77, v54);
    v80 = sub_1CB8466C0();
    v81 = sub_1CB846C84();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc();
      v83 = swift_slowAlloc();
      v103 = (char *)p_base_prots;
      v84 = v83;
      v105 = v83;
      *(_DWORD *)v82 = 136315138;
      sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v85 = sub_1CB847170();
      v104 = sub_1CB775A54(v85, v86, &v105);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      v87 = *(void (**)(char *, char *))(v102 + 8);
      v87(v79, v54);
      _os_log_impl(&dword_1CB771000, v80, v81, "Cannot retrieve timestamp for the turn %s, unable to extract timestamp", v82, 0xCu);
      swift_arrayDestroy();
      v53 = v97;
      MEMORY[0x1D179FE84](v84, -1, -1);
      MEMORY[0x1D179FE84](v82, -1, -1);

      v88 = v103;
      v87(v99, v54);
    }
    else
    {

      v89 = *(void (**)(char *, char *))(v10 + 8);
      v89(v79, v54);

      v89(v77, v54);
    }
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E50);
    v75 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56);
    v76 = v53;
    return v75(v76, 1, 1, v74);
  }

  v17 = v96;
  v2 = v97;
LABEL_43:
  if (qword_1EF99C400 != -1)
    goto LABEL_65;
LABEL_44:
  v61 = sub_1CB8466D8();
  __swift_project_value_buffer(v61, (uint64_t)qword_1EF9A0CB0);
  v62 = *(void (**)(uint64_t, char *, char *))(v10 + 16);
  v63 = v10;
  v64 = v99;
  v62(v9, v99, v17);
  v65 = sub_1CB8466C0();
  v66 = sub_1CB846C84();
  if (os_log_type_enabled(v65, v66))
  {
    v67 = swift_slowAlloc();
    v103 = (char *)p_base_prots;
    v68 = (uint8_t *)v67;
    v69 = swift_slowAlloc();
    v105 = v69;
    *(_DWORD *)v68 = 136315138;
    sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v70 = sub_1CB847170();
    v104 = sub_1CB775A54(v70, v71, &v105);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    v72 = *(void (**)(uint64_t, char *))(v102 + 8);
    v72(v9, v17);
    _os_log_impl(&dword_1CB771000, v65, v66, "Cannot retrieve timestamp for the turn %s, unable to find DeviceDynamicContext", v68, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v69, -1, -1);
    MEMORY[0x1D179FE84](v68, -1, -1);

    v72((uint64_t)v99, v17);
  }
  else
  {

    v73 = *(void (**)(uint64_t, char *))(v63 + 8);
    v73(v9, v17);

    v73((uint64_t)v64, v17);
  }
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E50);
  v75 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56);
  v76 = (char *)v2;
  return v75(v76, 1, 1, v74);
}

uint64_t sub_1CB7FA53C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v3 = v2;
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F0B0) + 48));
  v12 = *v10;
  v11 = v10[1];
  v13 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v14 = *(_QWORD *)(v11 + 16);
  v23[1] = v3;
  if (v12)
  {
    swift_retain();
    sub_1CB7FC4E4(a2, v13, v14, (_QWORD *)(v12 + 16), v12 + 32);
    v16 = v15;
    swift_release();
    v17 = (v16 & 1) == 0;
  }
  else if (v14)
  {
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v21 = v14 - 1;
    do
    {
      v22 = v21;
      v20(v9, v13, v6);
      sub_1CB7762AC((unint64_t *)&qword_1ED88BBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v17 = sub_1CB846864();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v17 & 1) != 0)
        break;
      v21 = v22 - 1;
      v13 += v19;
    }
    while (v22);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

void sub_1CB7FA6B8(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v7 = sub_1CB846084();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CB7FDAAC(a2, a1);
  if (qword_1ED88E518 != -1)
    swift_once();
  v12 = sub_1CB8466D8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED890248);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  swift_bridgeObjectRetain_n();
  v13 = sub_1CB8466C0();
  v14 = sub_1CB846C84();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    v23 = a3;
    v15 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v26 = v21;
    *(_DWORD *)v15 = 134218242;
    v24 = v3;
    v22 = v14;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = sub_1CB847044();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v25 = v16;
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v17 = sub_1CB847170();
    v25 = sub_1CB775A54(v17, v18, &v26);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl(&dword_1CB771000, v13, (os_log_type_t)v22, "#extractTurn: Found %ld events for request id %s", (uint8_t *)v15, 0x16u);
    v19 = v21;
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v19, -1, -1);
    MEMORY[0x1D179FE84](v15, -1, -1);

    a3 = v23;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

  }
  *a3 = v11;
}

uint64_t sub_1CB7FA984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = type metadata accessor for DefaultInteractionReader();
  v1 = swift_allocObject();
  type metadata accessor for BiomeQuerying();
  v2 = swift_allocObject();
  sub_1CB777FA8(0, &qword_1ED88DDF8);
  result = sub_1CB846198();
  *(_QWORD *)(v1 + 16) = v2;
  qword_1ED88DB20 = v0;
  unk_1ED88DB28 = &protocol witness table for DefaultInteractionReader;
  qword_1ED88DB08 = v1;
  return result;
}

uint64_t DefaultInteractionReader.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  type metadata accessor for BiomeQuerying();
  v1 = swift_allocObject();
  sub_1CB777FA8(0, &qword_1ED88DDF8);
  sub_1CB846198();
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t static DefaultInteractionReader.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1ED88DB38 != -1)
    swift_once();
  return sub_1CB79CBA8((uint64_t)&qword_1ED88DB08, a1);
}

uint64_t DefaultInteractionReader.init()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for BiomeQuerying();
  v1 = swift_allocObject();
  sub_1CB777FA8(0, &qword_1ED88DDF8);
  sub_1CB846198();
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t DefaultInteractionReader.__allocating_init(biomeBasePath:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  type metadata accessor for BiomeQuerying();
  swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1CB83DDDC(a1, a2);
  return v4;
}

uint64_t DefaultInteractionReader.init(biomeBasePath:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2;
  type metadata accessor for BiomeQuerying();
  swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1CB83DDDC(a1, a2);
  return v3;
}

_QWORD *sub_1CB7FAC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v27;

  sub_1CB83DF70(a1, a2, a3);
  if (v3)
  {
    v5 = v3;
    if (qword_1EF99C400 != -1)
      swift_once();
    v6 = sub_1CB8466D8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EF9A0CB0);
    v7 = v3;
    v8 = v3;
    v9 = sub_1CB8466C0();
    v10 = sub_1CB846C90();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v27 = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = v3;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      v14 = sub_1CB8468DC();
      sub_1CB775A54(v14, v15, &v27);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v9, v10, "Cannot read interactions, error=%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v12, -1, -1);
      MEMORY[0x1D179FE84](v11, -1, -1);
    }
    else
    {

    }
    v27 = (uint64_t)v3;
    v22 = v3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
    v23 = sub_1CB8468DC();
    v17 = v24;
    sub_1CB800724();
    swift_allocError();
    *v25 = v23;
    v25[1] = (uint64_t)v17;
    swift_willThrow();

  }
  else
  {
    v16 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C030);
    v17 = (_QWORD *)swift_allocObject();
    v17[6] = v16;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = 0;
    v19 = sub_1CB785DB0((unint64_t *)&qword_1ED88C040, (uint64_t *)&unk_1ED88C050, MEMORY[0x1E0DEE970]);
    v20 = *(_QWORD *)(v16 + 16);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    v17[2] = v18;
    v17[3] = v19;
    v17[4] = v21;
    v17[5] = v19;
  }
  return v17;
}

uint64_t sub_1CB7FAF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1CB83E5A0(a1, a2, a3);
}

uint64_t DefaultInteractionReader.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t DefaultInteractionReader.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *sub_1CB7FAF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CB7FAC38(a1, a2, a3);
}

uint64_t sub_1CB7FAF94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1CB83E5A0(a1, a2, a3);
}

char *sub_1CB7FAFB8(uint64_t a1)
{
  return sub_1CB78FDBC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_1CB7FAFD0(_QWORD *a1)
{
  return sub_1CB790218(0, a1[2], 0, a1);
}

void sub_1CB7FAFE4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1D179F32CLL);
}

uint64_t sub_1CB7FB04C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  char *v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  double v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  double v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  double v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  double v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  void (*v144)(char *, uint64_t);
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E48);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v153 = (char *)&v138 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v138 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v138 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v138 - v16;
  MEMORY[0x1E0C80A78](v15);
  v150 = (char *)&v138 - v18;
  v19 = a1[1];
  result = sub_1CB847158();
  if (result >= v19)
  {
    if (v19 < 0)
      goto LABEL_153;
    if (v19)
      return sub_1CB7FBC4C(0, v19, 1, a1);
    return result;
  }
  if (v19 >= 0)
    v21 = v19;
  else
    v21 = v19 + 1;
  if (v19 < -1)
    goto LABEL_161;
  v22 = result;
  v140 = v17;
  v145 = v14;
  v143 = v11;
  v151 = v1;
  v152 = v6;
  v147 = v19;
  v138 = a1;
  if (v19 < 2)
  {
    v27 = (char *)MEMORY[0x1E0DEE9D8];
    v157 = MEMORY[0x1E0DEE9D8];
    v149 = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    v26 = v150;
    if (v19 != 1)
    {
      v31 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_119:
      if (v31 >= 2)
      {
        v131 = *v138;
        do
        {
          v132 = v31 - 2;
          if (v31 < 2)
            goto LABEL_148;
          if (!v131)
            goto LABEL_160;
          v133 = *(_QWORD *)&v27[16 * v132 + 32];
          v134 = *(_QWORD *)&v27[16 * v31 + 24];
          v135 = v151;
          sub_1CB7FBECC((char *)(v131 + 8 * v133), (char *)(v131 + 8 * *(_QWORD *)&v27[16 * v31 + 16]), (char *)(v131 + 8 * v134), v149);
          v151 = v135;
          if (v135)
            break;
          if (v134 < v133)
            goto LABEL_149;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_1CB7B8290((uint64_t)v27);
          if (v132 >= *((_QWORD *)v27 + 2))
            goto LABEL_150;
          v136 = &v27[16 * v132 + 32];
          *(_QWORD *)v136 = v133;
          *((_QWORD *)v136 + 1) = v134;
          v137 = *((_QWORD *)v27 + 2);
          if (v31 > v137)
            goto LABEL_151;
          memmove(&v27[16 * v31 + 16], &v27[16 * v31 + 32], 16 * (v137 - v31));
          *((_QWORD *)v27 + 2) = v137 - 1;
          v31 = v137 - 1;
        }
        while (v137 > 2);
      }
LABEL_130:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v157 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1CB846A74();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v23 = a1;
    v24 = v21 >> 1;
    type metadata accessor for Turn();
    v25 = sub_1CB846ABC();
    *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) = v24;
    a1 = v23;
    v149 = (char *)((v25 & 0xFFFFFFFFFFFFFF8) + 32);
    v157 = v25;
    v26 = v150;
  }
  v28 = 0;
  v29 = *a1;
  v139 = *a1 - 8;
  v27 = (char *)MEMORY[0x1E0DEE9D8];
  v30 = v147;
  v142 = v22;
  v155 = v29;
LABEL_15:
  v32 = v28;
  v33 = v28 + 1;
  v146 = v28;
  if (v28 + 1 >= v30)
    goto LABEL_49;
  v141 = v27;
  v34 = *(_QWORD *)(v29 + 8 * v33);
  v35 = *(_QWORD *)(v29 + 8 * v32);
  type metadata accessor for SignalJoining();
  v36 = *(_QWORD *)(v34 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
  swift_retain();
  swift_retain();
  sub_1CB7F9A90(v36, v26);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E50);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48);
  v39 = v38(v26, 1, v37);
  v148 = (char *)v38;
  if (v39 == 1)
  {
    sub_1CB785B54((uint64_t)v26, &qword_1EF9A0E48);
    swift_release();
    swift_release();
    v40 = v32 + 2;
    if (v32 + 2 >= v147)
    {
LABEL_32:
      v33 = v40;
      v27 = v141;
      v22 = v142;
      goto LABEL_49;
    }
    LODWORD(v156) = 0;
    v41 = v155;
  }
  else
  {
    v154 = v33;
    v42 = *(double *)&v26[*(int *)(v37 + 48)];
    v43 = sub_1CB846084();
    v144 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v43 - 8) + 8);
    v144(v26, v43);
    v156 = v35;
    v44 = v140;
    sub_1CB7F9A90(*(_QWORD *)(v35 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events), v140);
    if (v38(v44, 1, v37) == 1)
    {
      sub_1CB785B54((uint64_t)v44, &qword_1EF9A0E48);
      swift_release();
      swift_release();
      v40 = v32 + 2;
      if (v32 + 2 >= v147)
      {
        v27 = v141;
        v22 = v142;
        v41 = v155;
        if (v32 < v40)
        {
LABEL_42:
          v55 = (uint64_t *)(v139 + 8 * v40);
          v56 = v40;
          v57 = v32;
          v58 = (uint64_t *)(v41 + 8 * v32);
          while (1)
          {
            if (v57 != --v56)
            {
              if (!v41)
                goto LABEL_159;
              v59 = *v58;
              *v58 = *v55;
              *v55 = v59;
            }
            ++v57;
            --v55;
            ++v58;
            if (v57 >= v56)
              goto LABEL_48;
          }
        }
        goto LABEL_48;
      }
      LODWORD(v156) = 1;
      v33 = v154;
      v41 = v155;
      v38 = (uint64_t (*)(char *, uint64_t, uint64_t))v148;
    }
    else
    {
      v45 = *(double *)&v44[*(int *)(v37 + 48)];
      v144(v44, v43);
      swift_release();
      swift_release();
      LODWORD(v156) = v42 < v45;
      v40 = v32 + 2;
      v38 = (uint64_t (*)(char *, uint64_t, uint64_t))v148;
      v33 = v154;
      v41 = v155;
      if (v32 + 2 >= v147)
      {
LABEL_34:
        v27 = v141;
        v22 = v142;
LABEL_35:
        v33 = v40;
        if (!(_DWORD)v156)
          goto LABEL_49;
        if (v40 < v32)
          goto LABEL_156;
        goto LABEL_37;
      }
    }
  }
  v46 = v40;
  while (1)
  {
    v40 = v46;
    v47 = *(_QWORD *)(v41 + 8 * v33);
    v48 = *(_QWORD *)(*(_QWORD *)(v41 + 8 * v46) + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
    swift_retain();
    swift_retain();
    v49 = v145;
    sub_1CB7F9A90(v48, v145);
    if (v38(v49, 1, v37) != 1)
    {
      v50 = *(double *)&v49[*(int *)(v37 + 48)];
      v51 = sub_1CB846084();
      v52 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v51 - 8) + 8);
      v52(v49, v51);
      v38 = (uint64_t (*)(char *, uint64_t, uint64_t))v148;
      v53 = v143;
      sub_1CB7F9A90(*(_QWORD *)(v47 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events), v143);
      if (v38(v53, 1, v37) == 1)
      {
        sub_1CB785B54((uint64_t)v53, &qword_1EF9A0E48);
        swift_release();
        swift_release();
        v32 = v146;
        if (!(_DWORD)v156)
          goto LABEL_32;
      }
      else
      {
        v54 = *(double *)&v53[*(int *)(v37 + 48)];
        v52(v53, v51);
        swift_release();
        swift_release();
        v32 = v146;
        if (((v156 ^ (v50 >= v54)) & 1) == 0)
        {
          v27 = v141;
          v22 = v142;
          v41 = v155;
          goto LABEL_35;
        }
      }
      goto LABEL_25;
    }
    sub_1CB785B54((uint64_t)v49, &qword_1EF9A0E48);
    swift_release();
    swift_release();
    if ((v156 & 1) != 0)
      break;
LABEL_25:
    v46 = v40 + 1;
    v33 = v40;
    v41 = v155;
    if (v40 + 1 >= v147)
    {
      ++v40;
      goto LABEL_34;
    }
  }
  v27 = v141;
  v22 = v142;
  v41 = v155;
  if (v40 >= v32)
  {
LABEL_37:
    if (v32 < v40)
      goto LABEL_42;
LABEL_48:
    v33 = v40;
LABEL_49:
    if (v33 >= v147)
      goto LABEL_71;
    v60 = v153;
    if (__OFSUB__(v33, v32))
      goto LABEL_152;
    if (v33 - v32 >= v22)
      goto LABEL_71;
    if (__OFADD__(v32, v22))
      goto LABEL_154;
    if (v32 + v22 >= v147)
      v61 = (void (*)(char *, uint64_t))v147;
    else
      v61 = (void (*)(char *, uint64_t))(v32 + v22);
    if ((uint64_t)v61 < v32)
    {
LABEL_155:
      __break(1u);
      goto LABEL_156;
    }
    if ((void (*)(char *, uint64_t))v33 == v61)
      goto LABEL_71;
    v141 = v27;
    type metadata accessor for SignalJoining();
    v62 = v155;
    v63 = (char *)(v139 + 8 * v33);
    v64 = v60;
    v144 = v61;
LABEL_61:
    v66 = *(_QWORD *)(v62 + 8 * v33);
    v67 = v32;
    v148 = v63;
    v68 = (uint64_t *)v63;
    v154 = v33;
    while (1)
    {
      v69 = *v68;
      v70 = *(_QWORD *)(v66 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
      swift_retain();
      swift_retain();
      sub_1CB7F9A90(v70, v64);
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E50);
      v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48);
      if (v72(v64, 1, v71) == 1)
      {
        sub_1CB785B54((uint64_t)v64, &qword_1EF9A0E48);
        swift_release();
        swift_release();
        v65 = v154;
        v62 = v155;
        goto LABEL_60;
      }
      v156 = v67;
      v73 = *(double *)&v64[*(int *)(v71 + 48)];
      v74 = sub_1CB846084();
      v75 = v64;
      v76 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v74 - 8) + 8);
      v76(v75, v74);
      v77 = v152;
      sub_1CB7F9A90(*(_QWORD *)(v69 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events), v152);
      if (v72(v77, 1, v71) == 1)
      {
        sub_1CB785B54((uint64_t)v77, &qword_1EF9A0E48);
        swift_release();
        swift_release();
        v65 = v154;
      }
      else
      {
        v78 = *(double *)&v77[*(int *)(v71 + 48)];
        v76(v77, v74);
        swift_release();
        swift_release();
        v65 = v154;
        if (v73 >= v78)
        {
          v64 = v153;
          v62 = v155;
LABEL_60:
          v33 = v65 + 1;
          v63 = v148 + 8;
          v32 = v146;
          if ((void (*)(char *, uint64_t))v33 != v144)
            goto LABEL_61;
          v33 = (uint64_t)v144;
          v27 = v141;
LABEL_71:
          if (v33 < v32)
            goto LABEL_147;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_1CB7B8048(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
          v26 = v150;
          v81 = *((_QWORD *)v27 + 2);
          v80 = *((_QWORD *)v27 + 3);
          v31 = v81 + 1;
          v29 = v155;
          if (v81 >= v80 >> 1)
          {
            v130 = sub_1CB7B8048((char *)(v80 > 1), v81 + 1, 1, v27);
            v29 = v155;
            v27 = v130;
          }
          *((_QWORD *)v27 + 2) = v31;
          v82 = v27 + 32;
          v83 = &v27[16 * v81 + 32];
          *(_QWORD *)v83 = v32;
          *((_QWORD *)v83 + 1) = v33;
          v28 = v33;
          if (v81)
          {
            while (2)
            {
              v84 = v31 - 1;
              if (v31 >= 4)
              {
                v89 = &v82[16 * v31];
                v90 = *((_QWORD *)v89 - 8);
                v91 = *((_QWORD *)v89 - 7);
                v95 = __OFSUB__(v91, v90);
                v92 = v91 - v90;
                if (v95)
                  goto LABEL_136;
                v94 = *((_QWORD *)v89 - 6);
                v93 = *((_QWORD *)v89 - 5);
                v95 = __OFSUB__(v93, v94);
                v87 = v93 - v94;
                v88 = v95;
                if (v95)
                  goto LABEL_137;
                v96 = v31 - 2;
                v97 = &v82[16 * v31 - 32];
                v99 = *(_QWORD *)v97;
                v98 = *((_QWORD *)v97 + 1);
                v95 = __OFSUB__(v98, v99);
                v100 = v98 - v99;
                if (v95)
                  goto LABEL_139;
                v95 = __OFADD__(v87, v100);
                v101 = v87 + v100;
                if (v95)
                  goto LABEL_142;
                if (v101 >= v92)
                {
                  v119 = &v82[16 * v84];
                  v121 = *(_QWORD *)v119;
                  v120 = *((_QWORD *)v119 + 1);
                  v95 = __OFSUB__(v120, v121);
                  v122 = v120 - v121;
                  if (v95)
                    goto LABEL_146;
                  v112 = v87 < v122;
                }
                else
                {
LABEL_90:
                  if ((v88 & 1) != 0)
                    goto LABEL_138;
                  v96 = v31 - 2;
                  v102 = &v82[16 * v31 - 32];
                  v104 = *(_QWORD *)v102;
                  v103 = *((_QWORD *)v102 + 1);
                  v105 = __OFSUB__(v103, v104);
                  v106 = v103 - v104;
                  v107 = v105;
                  if (v105)
                    goto LABEL_141;
                  v108 = &v82[16 * v84];
                  v110 = *(_QWORD *)v108;
                  v109 = *((_QWORD *)v108 + 1);
                  v95 = __OFSUB__(v109, v110);
                  v111 = v109 - v110;
                  if (v95)
                    goto LABEL_144;
                  if (__OFADD__(v106, v111))
                    goto LABEL_145;
                  if (v106 + v111 < v87)
                    goto LABEL_102;
                  v112 = v87 < v111;
                }
                if (v112)
                  v84 = v96;
              }
              else
              {
                if (v31 == 3)
                {
                  v86 = *((_QWORD *)v27 + 4);
                  v85 = *((_QWORD *)v27 + 5);
                  v95 = __OFSUB__(v85, v86);
                  v87 = v85 - v86;
                  v88 = v95;
                  goto LABEL_90;
                }
                v113 = *((_QWORD *)v27 + 4);
                v114 = *((_QWORD *)v27 + 5);
                v95 = __OFSUB__(v114, v113);
                v106 = v114 - v113;
                v107 = v95;
LABEL_102:
                if ((v107 & 1) != 0)
                  goto LABEL_140;
                v115 = &v82[16 * v84];
                v117 = *(_QWORD *)v115;
                v116 = *((_QWORD *)v115 + 1);
                v95 = __OFSUB__(v116, v117);
                v118 = v116 - v117;
                if (v95)
                  goto LABEL_143;
                if (v118 < v106)
                  goto LABEL_14;
              }
              v123 = v84 - 1;
              if (v84 - 1 >= v31)
              {
                __break(1u);
LABEL_133:
                __break(1u);
LABEL_134:
                __break(1u);
LABEL_135:
                __break(1u);
LABEL_136:
                __break(1u);
LABEL_137:
                __break(1u);
LABEL_138:
                __break(1u);
LABEL_139:
                __break(1u);
LABEL_140:
                __break(1u);
LABEL_141:
                __break(1u);
LABEL_142:
                __break(1u);
LABEL_143:
                __break(1u);
LABEL_144:
                __break(1u);
LABEL_145:
                __break(1u);
LABEL_146:
                __break(1u);
LABEL_147:
                __break(1u);
LABEL_148:
                __break(1u);
LABEL_149:
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
                goto LABEL_155;
              }
              if (!v29)
                goto LABEL_158;
              v124 = &v82[16 * v123];
              v125 = *(_QWORD *)v124;
              v126 = &v82[16 * v84];
              v127 = *((_QWORD *)v126 + 1);
              v128 = v151;
              sub_1CB7FBECC((char *)(v29 + 8 * *(_QWORD *)v124), (char *)(v29 + 8 * *(_QWORD *)v126), (char *)(v29 + 8 * v127), v149);
              v151 = v128;
              if (v128)
                goto LABEL_130;
              if (v127 < v125)
                goto LABEL_133;
              if (v84 > *((_QWORD *)v27 + 2))
                goto LABEL_134;
              *(_QWORD *)v124 = v125;
              *(_QWORD *)&v82[16 * v123 + 8] = v127;
              v129 = *((_QWORD *)v27 + 2);
              if (v84 >= v129)
                goto LABEL_135;
              v31 = v129 - 1;
              memmove(&v82[16 * v84], v126 + 16, 16 * (v129 - 1 - v84));
              *((_QWORD *)v27 + 2) = v129 - 1;
              v26 = v150;
              v29 = v155;
              if (v129 <= 2)
                goto LABEL_14;
              continue;
            }
          }
          v31 = 1;
LABEL_14:
          v30 = v147;
          v22 = v142;
          if (v28 >= v147)
            goto LABEL_119;
          goto LABEL_15;
        }
      }
      v64 = v153;
      v62 = v155;
      if (!v155)
        goto LABEL_157;
      v79 = *v68;
      v66 = v68[1];
      *v68 = v66;
      v68[1] = v79;
      --v68;
      v67 = v156 + 1;
      if (v65 == v156 + 1)
        goto LABEL_60;
    }
  }
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  result = sub_1CB847038();
  __break(1u);
  return result;
}

uint64_t sub_1CB7FBC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  double v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v31 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E48);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v29 - v12;
  v30 = a2;
  if (a3 != a2)
  {
    v14 = *a4;
    type metadata accessor for SignalJoining();
    v34 = v14;
    v15 = (uint64_t *)(v14 + 8 * a3 - 8);
    v33 = v13;
LABEL_6:
    result = *(_QWORD *)(v34 + 8 * a3);
    v16 = v31;
    v32 = v15;
    v35 = a3;
    while (1)
    {
      v36 = v16;
      v17 = *v15;
      v18 = *(_QWORD *)(result + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
      v37 = result;
      swift_retain();
      v19 = v17;
      swift_retain();
      sub_1CB7F9A90(v18, v13);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E50);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
      if (v21(v13, 1, v20) == 1)
      {
        sub_1CB785B54((uint64_t)v13, &qword_1EF9A0E48);
        swift_release();
        result = swift_release();
LABEL_5:
        ++a3;
        v15 = v32 + 1;
        if (a3 == v30)
          return result;
        goto LABEL_6;
      }
      v22 = *(double *)&v13[*(int *)(v20 + 48)];
      v23 = sub_1CB846084();
      v24 = v13;
      v25 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8);
      v25(v24, v23);
      sub_1CB7F9A90(*(_QWORD *)(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events), v10);
      if (v21(v10, 1, v20) == 1)
      {
        sub_1CB785B54((uint64_t)v10, &qword_1EF9A0E48);
        swift_release();
        result = swift_release();
        a3 = v35;
        v26 = v36;
        v13 = v33;
      }
      else
      {
        v27 = *(double *)&v10[*(int *)(v20 + 48)];
        v25(v10, v23);
        swift_release();
        result = swift_release();
        a3 = v35;
        v26 = v36;
        v13 = v33;
        if (v22 >= v27)
          goto LABEL_5;
      }
      if (!v34)
        break;
      v28 = *v15;
      result = v15[1];
      *v15 = result;
      v15[1] = v28;
      --v15;
      v16 = v26 + 1;
      if (a3 == v16)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CB7FBECC(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  char *v29;
  char *v30;
  double v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  double v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  unint64_t v47;
  double v48;
  uint64_t v49;
  char *v50;
  double v51;
  BOOL v52;
  uint64_t result;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E48);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v54 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v54 - v15;
  v17 = a2 - a1;
  v18 = a2 - a1 + 7;
  if (a2 - a1 >= 0)
    v18 = a2 - a1;
  v19 = v18 >> 3;
  v20 = a2;
  v61 = a3;
  v21 = a3 - a2;
  v22 = v21 / 8;
  v67 = a1;
  v66 = a4;
  if (v18 >> 3 >= v21 / 8)
  {
    if (v21 < -7)
      goto LABEL_52;
    v55 = v13;
    v36 = v20;
    if (a4 != v20 || &v20[8 * v22] <= a4)
      memmove(a4, v20, 8 * v22);
    v37 = &a4[8 * v22];
    v65 = v37;
    v67 = v20;
    if (a1 >= v20 || v21 < 8)
    {
LABEL_51:
      sub_1CB7B81E8((void **)&v67, (const void **)&v66, &v65);
      return 1;
    }
    type metadata accessor for SignalJoining();
    v38 = v61 - 8;
    v39 = v36;
    v62 = a4;
    v63 = a1;
    while (1)
    {
      v64 = v36;
      v61 = v37;
      v40 = *((_QWORD *)v37 - 1);
      v37 -= 8;
      v60 = v38 + 8;
      v41 = (char *)*((_QWORD *)v39 - 1);
      v58 = v39 - 8;
      v42 = *(_QWORD *)(v40 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
      swift_retain();
      v59 = v41;
      swift_retain();
      v43 = v57;
      sub_1CB7F9A90(v42, v57);
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E50);
      v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48);
      if (v45(v43, 1, v44) == 1)
        break;
      v48 = *(double *)&v43[*(int *)(v44 + 48)];
      v49 = sub_1CB846084();
      v56 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v49 - 8) + 8);
      v56(v43, v49);
      v50 = v55;
      sub_1CB7F9A90(*(_QWORD *)&v59[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events], v55);
      if (v45(v50, 1, v44) == 1)
      {
        sub_1CB785B54((uint64_t)v50, &qword_1EF9A0E48);
        swift_release();
        swift_release();
        a1 = v63;
        v46 = v60;
      }
      else
      {
        v51 = *(double *)&v50[*(int *)(v44 + 48)];
        v56(v50, v49);
        swift_release();
        swift_release();
        a1 = v63;
        v46 = v60;
        if (v48 >= v51)
          goto LABEL_38;
      }
      v52 = v46 == v64;
      v37 = v61;
      v47 = (unint64_t)v62;
      v39 = v58;
      if (!v52 || v38 >= v64)
        *(_QWORD *)v38 = *(_QWORD *)v58;
      v67 = v39;
      if (v39 <= a1)
        goto LABEL_51;
LABEL_35:
      v38 -= 8;
      v36 = v39;
      if ((unint64_t)v37 <= v47)
        goto LABEL_51;
    }
    sub_1CB785B54((uint64_t)v43, &qword_1EF9A0E48);
    swift_release();
    swift_release();
    v46 = v60;
LABEL_38:
    v65 = v37;
    v47 = (unint64_t)v62;
    if (v46 < v61 || v38 >= v61 || v46 != v61)
      *(_QWORD *)v38 = *(_QWORD *)v37;
    v39 = v64;
    if (v64 <= a1)
      goto LABEL_51;
    goto LABEL_35;
  }
  if (v17 >= -7)
  {
    v59 = v14;
    if (a4 != a1 || &a1[8 * v19] <= a4)
      memmove(a4, a1, 8 * v19);
    v60 = &a4[8 * v19];
    v65 = v60;
    if (v20 < v61 && v17 >= 8)
    {
      v23 = v20;
      type metadata accessor for SignalJoining();
      while (1)
      {
        v63 = a1;
        v64 = v23;
        v24 = *(_QWORD *)a4;
        v25 = *(_QWORD *)(*(_QWORD *)v23 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
        swift_retain();
        swift_retain();
        sub_1CB7F9A90(v25, v16);
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E50);
        v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
        if (v27(v16, 1, v26) == 1)
        {
          sub_1CB785B54((uint64_t)v16, &qword_1EF9A0E48);
          swift_release();
          swift_release();
          v28 = v64;
        }
        else
        {
          v62 = a4;
          v31 = *(double *)&v16[*(int *)(v26 + 48)];
          v32 = sub_1CB846084();
          v33 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8);
          v33(v16, v32);
          v34 = v59;
          sub_1CB7F9A90(*(_QWORD *)(v24 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events), v59);
          if (v27(v34, 1, v26) == 1)
          {
            sub_1CB785B54((uint64_t)v34, &qword_1EF9A0E48);
            swift_release();
            swift_release();
            a4 = v62;
            v28 = v64;
LABEL_19:
            v30 = v28 + 8;
            v29 = v63;
            if (v63 < v28 || v63 >= v30 || v63 != v28)
              *(_QWORD *)v63 = *(_QWORD *)v28;
            goto LABEL_23;
          }
          v35 = *(double *)&v34[*(int *)(v26 + 48)];
          v33(v34, v32);
          swift_release();
          swift_release();
          a4 = v62;
          v28 = v64;
          if (v31 < v35)
            goto LABEL_19;
        }
        v29 = v63;
        if (v63 != a4)
          *(_QWORD *)v63 = *(_QWORD *)a4;
        a4 += 8;
        v66 = a4;
        v30 = v28;
LABEL_23:
        a1 = v29 + 8;
        v67 = a1;
        if (a4 < v60)
        {
          v23 = v30;
          if (v30 < v61)
            continue;
        }
        goto LABEL_51;
      }
    }
    goto LABEL_51;
  }
LABEL_52:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7FC4E4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;

  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB7762AC((unint64_t *)&qword_1ED88D568, v12, MEMORY[0x1E0CB09C8]);
  result = sub_1CB846810();
  v14 = 1 << *a4;
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    v17 = v16 & result;
    v18 = sub_1CB846498();
    *(_QWORD *)&v36 = a4;
    *((_QWORD *)&v36 + 1) = a5;
    *(_QWORD *)&v37 = v17;
    *((_QWORD *)&v37 + 1) = v18;
    *(_QWORD *)&v38 = v19;
    *((_QWORD *)&v38 + 1) = v20;
    v39 = 0;
    v21 = sub_1CB8464B0();
    v28 = v36;
    v29 = v37;
    v30 = v38;
    v31 = v39;
    if ((v22 & 1) == 0)
    {
      v23 = *(_QWORD *)(v9 + 72);
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      do
      {
        v24(v11, a2 + v23 * v21, v8);
        sub_1CB7762AC((unint64_t *)&qword_1ED88BBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        v25 = sub_1CB846864();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        if ((v25 & 1) != 0)
          break;
        sub_1CB8464C8();
        v32 = v28;
        v33 = v29;
        v34 = v30;
        v35 = v31;
        v21 = sub_1CB8464B0();
      }
      while ((v26 & 1) == 0);
    }
    return v21;
  }
  return result;
}

uint64_t sub_1CB7FC6C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  swift_retain();
  v2 = sub_1CB846FF0();
  swift_release();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  *a1 = &unk_1EF9A0E38;
  a1[1] = result;
  return result;
}

uint64_t sub_1CB7FC724(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB7FC73C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 48);
  swift_beginAccess();
  sub_1CB84708C();
  v2 = *(_QWORD *)(v0 + 40);
  swift_endAccess();
  *v1 = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7FC7AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  swift_retain();
  v2 = sub_1CB846FF0();
  swift_release();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  *a1 = &unk_1EF9A0E28;
  a1[1] = result;
  return result;
}

uint64_t sub_1CB7FC810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v13 = sub_1CB846D08();
  v4 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB846CF0();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1CB84678C();
  MEMORY[0x1E0C80A78](v9);
  v15[3] = type metadata accessor for BiomePLSELFStoreReader();
  v15[4] = &off_1E8692400;
  v15[0] = a1;
  sub_1CB777FA8(0, qword_1ED88E0B0);
  sub_1CB84675C();
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E0A8, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E090);
  sub_1CB785DB0((unint64_t *)&unk_1ED88E098, &qword_1ED88E090, MEMORY[0x1E0DEAF38]);
  sub_1CB846EC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v13);
  *(_QWORD *)(a2 + 56) = sub_1CB846D20();
  sub_1CB79CBA8((uint64_t)v15, a2 + 16);
  v10 = sub_1CB787AEC(MEMORY[0x1E0DEE9D8]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  *(_QWORD *)(a2 + 64) = v10;
  return a2;
}

uint64_t sub_1CB7FCA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v22[0] = a2;
  v5 = sub_1CB846744();
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CB84678C();
  v23 = *(_QWORD *)(v8 - 8);
  v24 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CB846084();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(_QWORD *)(a3 + 56);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v15, v14, v11);
  v18 = (void *)v22[0];
  *(_QWORD *)(v17 + v16) = v22[0];
  aBlock[4] = sub_1CB800E8C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_40;
  v19 = _Block_copy(aBlock);
  swift_retain();
  v20 = v18;
  sub_1CB846768();
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB785DB0((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8, MEMORY[0x1E0DEAF38]);
  sub_1CB846EC4();
  MEMORY[0x1D179F0D4](0, v10, v7, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v24);
  return swift_release();
}

uint64_t sub_1CB7FCCAC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  int64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  int64_t v98;
  uint64_t *v99;
  uint64_t v100;
  int64_t v101;
  unint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t *v105;
  void (*v106)(uint64_t, char *, uint64_t);
  uint64_t v107;
  unsigned int (*v108)(char *, uint64_t, uint64_t);
  void (*v109)(char *, unint64_t, uint64_t);
  void (*v110)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v111;
  unint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v114;

  v4 = v3;
  v91 = a3;
  v90 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v6);
  v80 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v95 = (uint64_t)&v75 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v79 = (char *)&v75 - v16;
  MEMORY[0x1E0C80A78](v15);
  v78 = (char *)&v75 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v89 = (char *)&v75 - v22;
  if (a1 >> 62)
    goto LABEL_65;
  v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  result = MEMORY[0x1E0DEE9D8];
  if (!v23)
    return result;
  v82 = a1;
  v75 = v4;
  v114 = MEMORY[0x1E0DEE9D8];
  a1 = (unint64_t)&v114;
  result = sub_1CB846FCC();
  if (v23 < 0)
  {
    __break(1u);
    return result;
  }
  v25 = 0;
  v81 = v82 & 0xC000000000000001;
  v105 = (uint64_t *)(v91 + 16);
  v99 = (uint64_t *)(v90 + 16);
  v76 = v82 + 32;
  v77 = v23;
  do
  {
    if (v25 == v23)
    {
      __break(1u);
LABEL_65:
      swift_bridgeObjectRetain();
      v23 = sub_1CB847044();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
    v86 = v25;
    if (v81)
    {
      v33 = MEMORY[0x1D179F320]();
    }
    else
    {
      v33 = *(_QWORD *)(v76 + 8 * v25);
      swift_retain();
    }
    v34 = MEMORY[0x1E0DEE9D8];
    v35 = v33 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
    v36 = sub_1CB778EAC(2, v33 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, 1);
    v113 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v34;
    v88 = *(_QWORD *)(v36 + 16);
    v85 = v33;
    v84 = v35;
    v83 = v36;
    if (v88)
    {
      v97 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v87 = v36 + v97;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v37 = 0;
      v107 = *(_QWORD *)(v9 + 72);
      v109 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      while (1)
      {
        v40 = v89;
        v109(v89, v87 + v107 * v37, v8);
        v110 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        v110(v40, 0, 1, v8);
        v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
        if (v108(v40, 1, v8) == 1)
          goto LABEL_8;
        v94 = v37 + 1;
        v41 = v95;
        v106 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
        v106(v95, v40, v8);
        v42 = v91;
        v93 = sub_1CB82540C(1, v41);
        v43 = *(_QWORD *)(v42 + 16);
        v112 = v34;
        v44 = *(_QWORD *)(v43 + 64);
        v96 = v43 + 64;
        v45 = -1 << *(_BYTE *)(v43 + 32);
        v92 = ~v45;
        if (-v45 < 64)
          v46 = ~(-1 << -(char)v45);
        else
          v46 = -1;
        v47 = v46 & v44;
        v100 = v43;
        swift_bridgeObjectRetain_n();
        swift_beginAccess();
        v101 = 0;
        v98 = (unint64_t)(63 - v45) >> 6;
        while (v47)
        {
          v103 = (v47 - 1) & v47;
          v48 = __clz(__rbit64(v47)) | (v101 << 6);
LABEL_38:
          v104 = *(_DWORD *)(*(_QWORD *)(v100 + 48) + 4 * v48);
          v53 = *v99;
          if (*(_QWORD *)(*v99 + 16))
          {
            v54 = sub_1CB779AD4(1);
            v55 = v34;
            if ((v56 & 1) == 0)
              goto LABEL_48;
            v57 = *(_QWORD *)(*(_QWORD *)(v53 + 56) + 8 * v54);
            if (*(_QWORD *)(v57 + 16))
            {
              swift_bridgeObjectRetain();
              v58 = sub_1CB779AD8(v95);
              if ((v59 & 1) != 0)
              {
                v60 = *(_QWORD *)(*(_QWORD *)(v57 + 56) + 8 * v58);
                swift_retain();
                swift_bridgeObjectRelease();
                swift_beginAccess();
                v61 = *(_QWORD *)(v60 + 16);
                if (*(_QWORD *)(v61 + 16))
                {
                  v62 = sub_1CB779AD4(v104);
                  if ((v63 & 1) != 0)
                  {
                    v55 = *(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * v62);
                    swift_bridgeObjectRetain();
                    swift_release();
                    goto LABEL_48;
                  }
                }
                swift_release();
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
          }
          v55 = v34;
LABEL_48:
          v111 = v34;
          v64 = *(_QWORD *)(v55 + 16);
          v102 = v55;
          if (v64)
          {
            v65 = v55 + v97;
            swift_bridgeObjectRetain();
            while (1)
            {
              v109(v21, v65, v8);
              v110(v21, 0, 1, v8);
              if (v108(v21, 1, v8) == 1)
                break;
              v106((uint64_t)v12, v21, v8);
              v67 = *v105;
              if (*(_QWORD *)(*v105 + 16))
              {
                v68 = sub_1CB779AD4(v104);
                v66 = v34;
                if ((v69 & 1) != 0)
                {
                  v70 = v9;
                  v71 = *(_QWORD *)(*(_QWORD *)(v67 + 56) + 8 * v68);
                  swift_beginAccess();
                  v72 = *(_QWORD *)(v71 + 16);
                  if (*(_QWORD *)(v72 + 16))
                  {
                    swift_retain();
                    swift_bridgeObjectRetain();
                    v73 = sub_1CB779AD8((uint64_t)v12);
                    v66 = MEMORY[0x1E0DEE9D8];
                    if ((v74 & 1) != 0)
                    {
                      v66 = *(_QWORD *)(*(_QWORD *)(v72 + 56) + 8 * v73);
                      swift_bridgeObjectRetain();
                    }
                    swift_release();
                    swift_bridgeObjectRelease();
                    v9 = v70;
                    v34 = MEMORY[0x1E0DEE9D8];
                  }
                  else
                  {
                    v66 = MEMORY[0x1E0DEE9D8];
                    v9 = v70;
                    v34 = MEMORY[0x1E0DEE9D8];
                  }
                }
              }
              else
              {
                v66 = v34;
              }
              (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
              sub_1CB7F1284(v66);
              v65 += v107;
              if (!--v64)
                goto LABEL_22;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
LABEL_22:
            v110(v21, 1, 1, v8);
          }
          swift_bridgeObjectRelease_n();
          sub_1CB7F1284(v111);
          v47 = v103;
        }
        v49 = v101 + 1;
        if (__OFADD__(v101, 1))
        {
          __break(1u);
LABEL_61:
          __break(1u);
          return v114;
        }
        if (v49 >= v98)
          goto LABEL_15;
        v50 = *(_QWORD *)(v96 + 8 * v49);
        v51 = v101 + 1;
        if (v50)
          goto LABEL_37;
        v51 = v101 + 2;
        if (v101 + 2 >= v98)
          goto LABEL_15;
        v50 = *(_QWORD *)(v96 + 8 * v51);
        if (v50)
          goto LABEL_37;
        v52 = v101 + 3;
        if (v101 + 3 < v98)
          break;
LABEL_15:
        sub_1CB7DB3CC();
        swift_bridgeObjectRelease();
        v38 = v112;
        v112 = v93;
        sub_1CB7F1284(v38);
        v39 = v112;
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v95, v8);
        sub_1CB7F1284(v39);
        v37 = v94;
        if (v94 == v88)
          goto LABEL_7;
      }
      v50 = *(_QWORD *)(v96 + 8 * v52);
      if (!v50)
      {
        while (1)
        {
          v51 = v52 + 1;
          if (__OFADD__(v52, 1))
            goto LABEL_61;
          if (v51 >= v98)
            goto LABEL_15;
          v50 = *(_QWORD *)(v96 + 8 * v51);
          ++v52;
          if (v50)
            goto LABEL_37;
        }
      }
      v51 = v101 + 3;
LABEL_37:
      v103 = (v50 - 1) & v50;
      v48 = __clz(__rbit64(v50)) + (v51 << 6);
      v101 = v51;
      goto LABEL_38;
    }
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v110 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
LABEL_7:
    v110(v89, 1, 1, v8);
LABEL_8:
    ++v86;
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    v26 = (unint64_t)v113;
    v110 = v113;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v28 = v78;
    v27(v78, v84, v8);
    v113 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85
                                                                    + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CB7F1284(v26);
    v29 = v113;
    v30 = v79;
    v27(v79, (uint64_t)v28, v8);
    v31 = sub_1CB846018();
    v32 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v80, 1, 1, v31);
    type metadata accessor for Turn();
    v4 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v30, v8);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = v29;
    sub_1CB7D836C(v32, v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date, &qword_1ED88D550);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v28, v8);
    swift_release();
    swift_bridgeObjectRelease();
    a1 = (unint64_t)&v114;
    sub_1CB846FB4();
    sub_1CB846FD8();
    sub_1CB846FE4();
    sub_1CB846FC0();
    v25 = v86;
    v23 = v77;
  }
  while (v86 != v77);
  return v114;
}

uint64_t sub_1CB7FD758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  __int128 v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB846084();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v36 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v29 - v11;
  v33 = a1;
  v29[0] = sub_1CB82534C(1, a2);
  v13 = 0;
  v14 = 0;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v34 = 0x80000001CB852090;
  v35 = v15;
  *(_QWORD *)&v16 = 136315138;
  v30 = v16;
  v29[1] = MEMORY[0x1E0DEE9B8] + 8;
  v31 = a2;
  v32 = v8;
  do
  {
    v17 = v13;
    v18 = *((unsigned __int8 *)&unk_1E868A738 + v14 + 32);
    v19 = (uint64_t)v36;
    v35(v36, a2, v7);
    if (v18)
      v20 = 0x6964654D73756C50;
    else
      v20 = 0xD000000000000018;
    if (v18)
      v21 = 0xE900000000000061;
    else
      v21 = v34;
    sub_1CB7AA4F0(v19, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1CB785B54((uint64_t)v6, &qword_1ED88D570);
      if (qword_1ED88E518 != -1)
        swift_once();
      v22 = sub_1CB8466D8();
      __swift_project_value_buffer(v22, (uint64_t)qword_1ED890248);
      v23 = sub_1CB8466C0();
      v24 = sub_1CB846C90();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc();
        v26 = swift_slowAlloc();
        v37 = v26;
        *(_DWORD *)v25 = v30;
        *(_QWORD *)(v25 + 4) = sub_1CB775A54(v20, v21, &v37);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CB771000, v23, v24, "Failed to generate a plus id for domain %s", (uint8_t *)v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v26, -1, -1);
        v27 = v25;
        a2 = v31;
        MEMORY[0x1D179FE84](v27, -1, -1);
      }

      v8 = v32;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v6, v7);
      sub_1CB77890C(1, a2, 19, (uint64_t)v12);
      sub_1CB77890C(19, (uint64_t)v12, 1, a2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    }
    v13 = 1;
    v14 = 1u;
  }
  while ((v17 & 1) == 0);
  sub_1CB778B18(1, a2);
  return v29[0];
}

uint64_t sub_1CB7FDAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t *v44;
  char v45;
  char v46;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  __int128 v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  BOOL v67;
  int64_t v68;
  unint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, uint64_t, uint64_t);
  NSObject *v75;
  os_log_type_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t *v108;
  unint64_t v109;
  char v110;
  char v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  _QWORD v116[2];
  __int128 v117;
  char *v118;
  uint64_t v119;
  int64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  unint64_t v140;
  void (*v141)(char *, unint64_t, uint64_t);
  void (*v142)(char *, unint64_t, uint64_t);
  uint64_t v143;
  void (*v144)(unint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v4 = sub_1CB846084();
  v133 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v137 = (char *)v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v116 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v136 = (char *)v116 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v116 - v13;
  MEMORY[0x1E0C80A78](v12);
  v144 = (void (*)(unint64_t, uint64_t))((char *)v116 - v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v123 = (char *)v116 - v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v116 - v22;
  v122 = a2;
  v24 = sub_1CB7FD758(a1, a2);
  v26 = v25;
  v153 = v24;
  swift_beginAccess();
  swift_retain();
  v27 = swift_bridgeObjectRetain();
  v28 = sub_1CB7F473C(v27);
  v130 = 0;
  v116[0] = v26;
  swift_release();
  swift_bridgeObjectRelease();
  v29 = MEMORY[0x1E0DEE9D8];
  v151 = MEMORY[0x1E0DEE9D8];
  v30 = *(char **)(v28 + 16);
  v138 = a1;
  v125 = v9;
  v126 = v14;
  v132 = v30;
  if (v30)
  {
    v131 = v28 + 32;
    v129 = v28;
    swift_bridgeObjectRetain();
    v31 = 0;
    v32 = v133;
    v33 = v136;
    v134 = v23;
    while (1)
    {
      v139 = v31;
      v35 = v131 + 16 * (_QWORD)v31;
      LODWORD(v141) = *(_DWORD *)v35;
      v36 = *(_QWORD *)(v35 + 8);
      v147 = v29;
      v37 = *(_QWORD *)(v36 + 16);
      v135 = v36;
      if (v37)
        break;
      swift_bridgeObjectRetain();
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
LABEL_4:
      v34(v23, 1, 1, v4);
LABEL_5:
      swift_bridgeObjectRelease();
      v31 = v139 + 1;
      sub_1CB7F1284(v147);
      v29 = MEMORY[0x1E0DEE9D8];
      if (v31 == v132)
      {
        swift_bridgeObjectRelease_n();
        v51 = v151;
        v9 = v125;
        v14 = v126;
        goto LABEL_23;
      }
    }
    v38 = v36 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    swift_bridgeObjectRetain();
    v143 = *(_QWORD *)(v32 + 72);
    v142 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
    v142(v23, v38, v4);
    while (1)
    {
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
      v34(v23, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v23, 1, v4) == 1)
        goto LABEL_5;
      (*(void (**)(void (*)(unint64_t, uint64_t), char *, uint64_t))(v32 + 32))(v144, v23, v4);
      v40 = *(_QWORD *)(a1 + 24);
      swift_beginAccess();
      v41 = *(_QWORD *)(v40 + 16);
      if (!*(_QWORD *)(v41 + 16))
        break;
      v42 = sub_1CB779AD4((int)v141);
      v39 = MEMORY[0x1E0DEE9D8];
      v33 = v136;
      if ((v43 & 1) != 0)
      {
        v44 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v42) + 16);
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        v140 = sub_1CB779AD8((uint64_t)v144);
        v46 = v45;
        swift_bridgeObjectRelease();
        if ((v46 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v48 = *v44;
          v146 = *v44;
          *v44 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1CB77EF80();
            v48 = v146;
          }
          v49 = v140;
          (*(void (**)(unint64_t, uint64_t))(v133 + 8))(*(_QWORD *)(v48 + 48) + v140 * v143, v4);
          v50 = v146;
          v39 = *(_QWORD *)(*(_QWORD *)(v146 + 56) + 8 * v49);
          sub_1CB826068(v49, v146);
          *v44 = v50;
          swift_bridgeObjectRelease();
          swift_endAccess();
          v23 = v134;
        }
        else
        {
          swift_endAccess();
          v39 = MEMORY[0x1E0DEE9D8];
        }
        swift_release();
        v32 = v133;
        goto LABEL_9;
      }
LABEL_10:
      (*(void (**)(_QWORD, uint64_t))(v32 + 8))(v144, v4);
      sub_1CB7F1284(v39);
      v38 += v143;
      --v37;
      a1 = v138;
      if (!v37)
        goto LABEL_4;
      v142(v23, v38, v4);
    }
    v39 = MEMORY[0x1E0DEE9D8];
LABEL_9:
    v33 = v136;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  v51 = MEMORY[0x1E0DEE9D8];
  v32 = v133;
  v33 = v136;
LABEL_23:
  v152 = v51;
  result = swift_beginAccess();
  v54 = *(_QWORD *)(a1 + 32);
  v55 = v137;
  if (*(_QWORD *)(v54 + 16))
  {
    swift_bridgeObjectRetain();
    v56 = sub_1CB779AD8(v122);
    if ((v57 & 1) != 0)
    {
      v58 = *(_QWORD *)(*(_QWORD *)(v54 + 56) + 8 * v56);
      swift_bridgeObjectRetain();
    }
    else
    {
      v58 = MEMORY[0x1E0DEE9E8];
    }
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v58 = MEMORY[0x1E0DEE9E8];
  }
  v59 = v123;
  if (*(_QWORD *)(v58 + 16) != 1)
  {
    swift_bridgeObjectRelease();
LABEL_82:
    v146 = v153;
    swift_bridgeObjectRetain();
    v115 = swift_bridgeObjectRetain();
    sub_1CB7F1284(v115);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return v146;
  }
  v60 = 0;
  v61 = *(_QWORD *)(v58 + 56);
  v119 = v58 + 56;
  v62 = 1 << *(_BYTE *)(v58 + 32);
  v63 = -1;
  if (v62 < 64)
    v63 = ~(-1 << v62);
  v64 = v63 & v61;
  v120 = (unint64_t)(v62 + 63) >> 6;
  v118 = &v150;
  *(_QWORD *)&v53 = 136315394;
  v117 = v53;
  v116[1] = MEMORY[0x1E0DEE9B8] + 8;
  v121 = v58;
  while (1)
  {
    if (v64)
    {
      v128 = (v64 - 1) & v64;
      v129 = v60;
      v66 = __clz(__rbit64(v64)) | (v60 << 6);
      goto LABEL_49;
    }
    v67 = __OFADD__(v60, 1);
    v68 = v60 + 1;
    if (v67)
    {
      __break(1u);
      goto LABEL_84;
    }
    if (v68 >= v120)
      goto LABEL_80;
    v69 = *(_QWORD *)(v119 + 8 * v68);
    if (!v69)
      break;
LABEL_48:
    v128 = (v69 - 1) & v69;
    v129 = v68;
    v66 = __clz(__rbit64(v69)) + (v68 << 6);
LABEL_49:
    v71 = *(_QWORD *)(v58 + 48);
    v143 = *(_QWORD *)(v32 + 72);
    v141 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
    v141(v59, v71 + v143 * v66, v4);
    v142 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v142)(v59, 0, 1, v4);
    v140 = *(_QWORD *)(v32 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v140)(v59, 1, v4) == 1)
      goto LABEL_81;
    v139 = *(char **)(v32 + 32);
    ((void (*)(char *, char *, uint64_t))v139)(v14, v59, v4);
    if (qword_1ED88E518 != -1)
      swift_once();
    v72 = sub_1CB8466D8();
    __swift_project_value_buffer(v72, (uint64_t)qword_1ED890248);
    v73 = v14;
    v74 = (void (*)(char *, uint64_t, uint64_t))v141;
    v141(v33, (unint64_t)v73, v4);
    v74(v9, v122, v4);
    v75 = sub_1CB8466C0();
    v76 = sub_1CB846C84();
    v77 = v76;
    if (os_log_type_enabled(v75, v76))
    {
      v78 = v32;
      v79 = swift_slowAlloc();
      v135 = swift_slowAlloc();
      v146 = v135;
      *(_DWORD *)v79 = v117;
      sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      LODWORD(v134) = v77;
      v80 = sub_1CB847170();
      v149 = sub_1CB775A54(v80, v81, &v146);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      v82 = *(void (**)(char *, uint64_t))(v78 + 8);
      v83 = v125;
      v82(v33, v4);
      *(_WORD *)(v79 + 12) = 2080;
      v9 = v83;
      v84 = sub_1CB847170();
      v149 = sub_1CB775A54(v84, v85, &v146);
      a1 = v138;
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      v144 = (void (*)(unint64_t, uint64_t))v82;
      v82(v83, v4);
      _os_log_impl(&dword_1CB771000, v75, (os_log_type_t)v134, "#extractTurn: Found sub-request ID: %s for request id %s.", (uint8_t *)v79, 0x16u);
      v86 = v135;
      swift_arrayDestroy();
      v55 = v137;
      MEMORY[0x1D179FE84](v86, -1, -1);
      MEMORY[0x1D179FE84](v79, -1, -1);
    }
    else
    {
      v87 = *(void (**)(char *, uint64_t))(v32 + 8);
      v87(v33, v4);
      v144 = (void (*)(unint64_t, uint64_t))v87;
      v87(v9, v4);
    }

    v14 = v126;
    v88 = sub_1CB7FD758(a1, (uint64_t)v126);
    v90 = v89;
    sub_1CB7F1284(v88);
    swift_beginAccess();
    v127 = v90;
    v91 = swift_bridgeObjectRetain();
    v92 = v130;
    v93 = sub_1CB7F473C(v91);
    v130 = v92;
    swift_bridgeObjectRelease();
    v94 = MEMORY[0x1E0DEE9D8];
    v149 = MEMORY[0x1E0DEE9D8];
    v132 = *(char **)(v93 + 16);
    if (v132)
    {
      v131 = v93 + 32;
      v124 = v93;
      swift_bridgeObjectRetain();
      v95 = 0;
      v32 = v133;
      do
      {
        v134 = v95;
        v97 = v131 + 16 * (_QWORD)v95;
        v98 = *(_DWORD *)v97;
        v99 = *(_QWORD *)(v97 + 8);
        v148 = v94;
        v100 = *(_QWORD *)(v99 + 16);
        v135 = v99;
        if (v100)
        {
          v101 = v99 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
          swift_bridgeObjectRetain();
          do
          {
            v141(v19, v101, v4);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v142)(v19, 0, 1, v4);
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v140)(v19, 1, v4) == 1)
            {
              v32 = v133;
              v33 = v136;
              v96 = v134;
              goto LABEL_58;
            }
            ((void (*)(char *, char *, uint64_t))v139)(v55, v19, v4);
            v103 = *(_QWORD *)(a1 + 24);
            swift_beginAccess();
            v104 = *(_QWORD *)(v103 + 16);
            if (*(_QWORD *)(v104 + 16))
            {
              v105 = sub_1CB779AD4(v98);
              v102 = v94;
              if ((v106 & 1) != 0)
              {
                v107 = (uint64_t)v55;
                v108 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v104 + 56) + 8 * v105) + 16);
                swift_beginAccess();
                swift_retain();
                swift_bridgeObjectRetain();
                v109 = sub_1CB779AD8(v107);
                v111 = v110;
                swift_bridgeObjectRelease();
                if ((v111 & 1) != 0)
                {
                  v112 = swift_isUniquelyReferenced_nonNull_native();
                  v113 = *v108;
                  v145 = *v108;
                  *v108 = 0x8000000000000000;
                  if (!v112)
                  {
                    sub_1CB77EF80();
                    v113 = v145;
                  }
                  v144(*(_QWORD *)(v113 + 48) + v109 * v143, v4);
                  v114 = v145;
                  v102 = *(_QWORD *)(*(_QWORD *)(v145 + 56) + 8 * v109);
                  sub_1CB826068(v109, v145);
                  *v108 = v114;
                  swift_bridgeObjectRelease();
                  swift_endAccess();
                }
                else
                {
                  swift_endAccess();
                  v102 = MEMORY[0x1E0DEE9D8];
                }
                swift_release();
                a1 = v138;
                v55 = v137;
                v94 = MEMORY[0x1E0DEE9D8];
              }
            }
            else
            {
              v102 = v94;
            }
            v144((unint64_t)v55, v4);
            sub_1CB7F1284(v102);
            v101 += v143;
            --v100;
          }
          while (v100);
          v32 = v133;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        v33 = v136;
        v96 = v134;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v142)(v19, 1, 1, v4);
LABEL_58:
        swift_bridgeObjectRelease();
        v95 = v96 + 1;
        sub_1CB7F1284(v148);
      }
      while (v95 != v132);
      swift_bridgeObjectRelease_n();
      v65 = v149;
      v9 = v125;
      v14 = v126;
    }
    else
    {
      swift_bridgeObjectRelease();
      v65 = v94;
      v32 = v133;
      v33 = v136;
    }
    sub_1CB7F1284(v65);
    swift_release();
    result = ((uint64_t (*)(char *, uint64_t))v144)(v14, v4);
    v59 = v123;
    v58 = v121;
    v60 = v129;
    v64 = v128;
  }
  v70 = v68 + 1;
  if (v68 + 1 >= v120)
    goto LABEL_80;
  v69 = *(_QWORD *)(v119 + 8 * v70);
  if (v69)
    goto LABEL_47;
  v70 = v68 + 2;
  if (v68 + 2 >= v120)
    goto LABEL_80;
  v69 = *(_QWORD *)(v119 + 8 * v70);
  if (v69)
    goto LABEL_47;
  v70 = v68 + 3;
  if (v68 + 3 >= v120)
  {
LABEL_80:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v59, 1, 1, v4);
LABEL_81:
    swift_release();
    goto LABEL_82;
  }
  v69 = *(_QWORD *)(v119 + 8 * v70);
  if (v69)
  {
LABEL_47:
    v68 = v70;
    goto LABEL_48;
  }
  while (1)
  {
    v68 = v70 + 1;
    if (__OFADD__(v70, 1))
      break;
    if (v68 >= v120)
      goto LABEL_80;
    v69 = *(_QWORD *)(v119 + 8 * v68);
    ++v70;
    if (v69)
      goto LABEL_48;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1CB7FE998(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __objc2_prot_list **p_base_prots;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  id v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  id v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  id v119;
  void *v120;
  id v121;
  id v122;
  id v123;
  id v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  id v132;
  void *v133;
  id v134;
  id v135;
  id v136;
  id v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v147)(uint64_t, uint64_t, uint64_t);
  int v148;
  void (*v149)(void);
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v153)(char *, uint64_t, uint64_t, uint64_t);
  int v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t, uint64_t, uint64_t);
  int v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  uint64_t v164;
  void (*v165)(char *, uint64_t, uint64_t, uint64_t);
  int v166;
  uint64_t v167;
  unint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t *v179;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v181;
  char v182;
  uint64_t *v183;
  char v184;
  uint64_t *v185;
  char v186;
  uint64_t *v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(uint64_t, uint64_t);
  uint64_t v193;
  uint64_t v194;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t *v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v3 = MEMORY[0x1E0C80A78](v2);
  v214 = (char *)&v196 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v213 = (char *)&v196 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v196 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v196 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v212 = (uint64_t)&v196 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v206 = (char *)&v196 - v16;
  MEMORY[0x1E0C80A78](v15);
  v205 = (char *)&v196 - v17;
  v217 = sub_1CB846084();
  v18 = *(_QWORD *)(v217 - 8);
  v19 = MEMORY[0x1E0C80A78](v217);
  v201 = (uint64_t)&v196 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v200 = (uint64_t)&v196 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v199 = (uint64_t)&v196 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v198 = (uint64_t)&v196 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v202 = (char *)&v196 - v28;
  MEMORY[0x1E0C80A78](v27);
  v197 = (uint64_t)&v196 - v29;
  type metadata accessor for RequestLinkTable();
  v30 = swift_allocObject();
  v31 = sub_1CB78B0B8(MEMORY[0x1E0DEE9D8]);
  v210 = v30;
  *(_QWORD *)(v30 + 16) = v31;
  type metadata accessor for ComponentEventTable();
  v32 = swift_allocObject();
  v209 = v32;
  *(_QWORD *)(v32 + 16) = MEMORY[0x1E0DEE9E0];
  v211 = (uint64_t *)(v32 + 16);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v33 = sub_1CB847044();
    if (v33)
      goto LABEL_3;
  }
  else
  {
    v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v33)
    {
LABEL_3:
      if (v33 < 1)
      {
        __break(1u);
        JUMPOUT(0x1CB7FFE58);
      }
      v203 = v12;
      v204 = v9;
      v34 = a1 & 0xC000000000000001;
      swift_beginAccess();
      v35 = 0;
      p_base_prots = &SupportedLocalesPListStore.base_prots;
      v207 = v18;
      v208 = a1;
      v215 = v33;
      v216 = a1 & 0xC000000000000001;
      while (1)
      {
        if (v34)
          v37 = (id)MEMORY[0x1D179F320](v35, a1);
        else
          v37 = *(id *)(a1 + 8 * v35 + 32);
        v38 = v37;
        v39 = objc_msgSend(v37, (SEL)p_base_prots[180]);
        if (!v39)
          goto LABEL_6;
        v40 = v39;
        v41 = objc_msgSend(v39, sel_payload);
        if (!v41)
          break;
        v42 = v41;
        v43 = sub_1CB845F94();
        v45 = v44;

        switch(objc_msgSend(v40, sel_anyEventType))
        {
          case 9u:
            v46 = objc_msgSend(v40, sel_payload);
            if (v46)
            {
              v47 = sub_1CB845F94();
              v49 = v48;

              v46 = (id)sub_1CB845F88();
              v50 = v49;
              v33 = v215;
              sub_1CB779034(v47, v50);
            }
            v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A488]), sel_initWithData_, v46);

            if (v51)
            {
              sub_1CB7782FC(v51);
              sub_1CB779034(v43, v45);

            }
            else
            {
              sub_1CB779034(v43, v45);
            }

            goto LABEL_64;
          case 0xDu:
            v52 = objc_allocWithZone(MEMORY[0x1E0D99640]);
            sub_1CB7A81D8(v43, v45);
            v53 = (void *)sub_1CB845F88();
            sub_1CB779034(v43, v45);
            v54 = objc_msgSend(v52, sel_initWithData_, v53);

            if (v54
              && (v55 = objc_msgSend(v54, sel_eventMetadata), v54, v55)
              && (v56 = objc_msgSend(v55, sel_flowId), v55, v56))
            {
              v57 = objc_msgSend(v56, sel_value);
              if (v57)
              {
                v58 = v57;
                v59 = v18;
                v60 = sub_1CB845F94();
                v62 = v61;

                v63 = v212;
                sub_1CB7B601C(v60, v62);
                v64 = v62;
                v33 = v215;
                sub_1CB779034(v60, v64);
                v65 = v217;
              }
              else
              {
                v146 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
                v63 = v212;
                v59 = v18;
                v65 = v217;
                v146(v212, 1, 1, v217);
              }

              v147 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
              v148 = v147(v63, 1, v65);
              v18 = v59;
              a1 = v208;
              if (v148 != 1)
              {
                v149 = *(void (**)(void))(v18 + 32);
                v142 = (uint64_t)v206;
                v150 = v18;
                v151 = v217;
                v149();
                v152 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v150 + 56);
                a1 = v208;
                v152(v142, 0, 1, v151);
                goto LABEL_110;
              }
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v212, 1, 1, v217);
            }
            v132 = objc_allocWithZone(MEMORY[0x1E0D99640]);
            sub_1CB7A81D8(v43, v45);
            v133 = (void *)sub_1CB845F88();
            sub_1CB779034(v43, v45);
            v134 = objc_msgSend(v132, sel_initWithData_, v133);

            if (v134
              && (v135 = objc_msgSend(v134, sel_eventMetadata),
                  v134,
                  v135)
              && (v136 = objc_msgSend(v135, sel_taskId), v135, v136))
            {
              v137 = objc_msgSend(v136, sel_value);
              if (v137)
              {
                v138 = v137;
                v139 = sub_1CB845F94();
                v141 = v140;

                v142 = (uint64_t)v206;
                sub_1CB7B601C(v139, v141);
                v143 = v139;
                v18 = v207;
                v144 = v141;
                v33 = v215;
                sub_1CB779034(v143, v144);
              }
              else
              {
                v142 = (uint64_t)v206;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v206, 1, 1, v217);
              }

            }
            else
            {
              v142 = (uint64_t)v206;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v206, 1, 1, v217);
            }
            sub_1CB785B54(v212, &qword_1ED88D570);
            v147 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
LABEL_110:
            v189 = v217;
            if (v147(v142, 1, v217) == 1)
            {
              sub_1CB779034(v43, v45);

              sub_1CB785B54(v142, &qword_1ED88D570);
              v18 = v207;
            }
            else
            {
              v190 = v207;
              v191 = (uint64_t)v202;
              (*(void (**)(char *, uint64_t, uint64_t))(v207 + 32))(v202, v142, v189);
              sub_1CB82522C(3, v191, v40);

              sub_1CB779034(v43, v45);
              v192 = *(void (**)(uint64_t, uint64_t))(v190 + 8);
              v193 = v191;
              v33 = v215;
              v194 = v189;
              v18 = v190;
              a1 = v208;
              v192(v193, v194);
            }
            goto LABEL_64;
          case 0x12u:
            v66 = objc_allocWithZone(MEMORY[0x1E0D99E28]);
            sub_1CB7A81D8(v43, v45);
            v67 = (void *)sub_1CB845F88();
            sub_1CB779034(v43, v45);
            v68 = objc_msgSend(v66, sel_initWithData_, v67);

            if (!v68
              || (v69 = objc_msgSend(v68, sel_eventMetadata), v68,
                                                                                                  !v69)
              || (v70 = objc_msgSend(v69, sel_nlId), v69, !v70))
            {
              v77 = v203;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v203, 1, 1, v217);
              goto LABEL_58;
            }
            v71 = objc_msgSend(v70, sel_value);
            if (v71)
            {
              v72 = v71;
              v73 = v18;
              v74 = sub_1CB845F94();
              v76 = v75;

              v77 = v203;
              sub_1CB7B601C(v74, v76);
              v78 = v76;
              v33 = v215;
              sub_1CB779034(v74, v78);
              v79 = v217;
            }
            else
            {
              v153 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
              v77 = v203;
              v73 = v18;
              v79 = v217;
              v153(v203, 1, 1, v217);
            }

            v154 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48))(v77, 1, v79);
            v18 = v73;
            a1 = v208;
            if (v154 == 1)
              goto LABEL_58;
            (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v198, v77, v217);
            v155 = *v211;
            if (*(_QWORD *)(*v211 + 16) && (v156 = sub_1CB779AD4(7), (v157 & 1) != 0))
            {
              v158 = *(_QWORD *)(*(_QWORD *)(v155 + 56) + 8 * v156);
              swift_retain();
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D698);
              v158 = swift_allocObject();
              *(_QWORD *)(v158 + 16) = MEMORY[0x1E0DEE9E0];
            }
            sub_1CB8256C4(v198, v40);
            v179 = v211;
            swift_beginAccess();
            swift_retain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v218 = *v179;
            *v179 = 0x8000000000000000;
            sub_1CB82EA40(v158, 7, isUniquelyReferenced_nonNull_native);
            *v179 = v218;
            swift_bridgeObjectRelease();
            swift_endAccess();

            swift_release();
            sub_1CB779034(v43, v45);
            (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v198, v217);
            goto LABEL_106;
          case 0x13u:
            v80 = objc_allocWithZone(MEMORY[0x1E0D99F00]);
            sub_1CB7A81D8(v43, v45);
            v81 = (void *)sub_1CB845F88();
            sub_1CB779034(v43, v45);
            v82 = objc_msgSend(v80, sel_initWithData_, v81);

            if (!v82
              || (v83 = objc_msgSend(v82, sel_eventMetadata), v82,
                                                                                                  !v83)
              || (v84 = objc_msgSend(v83, sel_requestId), v83, !v84))
            {
              v77 = v204;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v204, 1, 1, v217);
              goto LABEL_58;
            }
            v85 = objc_msgSend(v84, sel_value);
            if (v85)
            {
              v86 = v85;
              v87 = v18;
              v88 = sub_1CB845F94();
              v90 = v89;

              v77 = v204;
              sub_1CB7B601C(v88, v90);
              v91 = v90;
              v33 = v215;
              sub_1CB779034(v88, v91);
              v92 = v217;
            }
            else
            {
              v159 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
              v77 = v204;
              v87 = v18;
              v92 = v217;
              v159(v204, 1, 1, v217);
            }

            v160 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48))(v77, 1, v92);
            v18 = v87;
            a1 = v208;
            if (v160 == 1)
              goto LABEL_58;
            (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v199, v77, v217);
            v161 = *v211;
            if (*(_QWORD *)(*v211 + 16) && (v162 = sub_1CB779AD4(1), (v163 & 1) != 0))
            {
              v164 = *(_QWORD *)(*(_QWORD *)(v161 + 56) + 8 * v162);
              swift_retain();
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D698);
              v164 = swift_allocObject();
              *(_QWORD *)(v164 + 16) = MEMORY[0x1E0DEE9E0];
            }
            sub_1CB8256C4(v199, v40);
            v181 = v211;
            swift_beginAccess();
            swift_retain();
            v182 = swift_isUniquelyReferenced_nonNull_native();
            v218 = *v181;
            *v181 = 0x8000000000000000;
            sub_1CB82EA40(v164, 1, v182);
            *v181 = v218;
            swift_bridgeObjectRelease();
            swift_endAccess();

            swift_release();
            sub_1CB779034(v43, v45);
            (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v199, v217);
            goto LABEL_106;
          case 0x14u:
            v93 = objc_allocWithZone(MEMORY[0x1E0D991E0]);
            sub_1CB7A81D8(v43, v45);
            v94 = (void *)sub_1CB845F88();
            sub_1CB779034(v43, v45);
            v95 = objc_msgSend(v93, sel_initWithData_, v94);

            if (!v95
              || (v96 = objc_msgSend(v95, sel_eventMetadata), v95,
                                                                                                  !v96)
              || (v97 = objc_msgSend(v96, sel_asrId), v96, !v97))
            {
              v77 = v205;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v205, 1, 1, v217);
LABEL_58:

              sub_1CB779034(v43, v45);
              v145 = (uint64_t)v77;
              goto LABEL_63;
            }
            v98 = objc_msgSend(v97, sel_value);
            if (v98)
            {
              v99 = v98;
              v100 = sub_1CB845F94();
              v101 = v18;
              v103 = v102;

              v77 = v205;
              sub_1CB7B601C(v100, v103);
              v104 = v100;
              v33 = v215;
              sub_1CB779034(v104, v103);
              v105 = v217;
            }
            else
            {
              v165 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
              v77 = v205;
              v101 = v18;
              v105 = v217;
              v165(v205, 1, 1, v217);
            }

            v166 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48))(v77, 1, v105);
            v18 = v101;
            a1 = v208;
            if (v166 == 1)
              goto LABEL_58;
            (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v197, v77, v217);
            v167 = *v211;
            if (*(_QWORD *)(*v211 + 16) && (v168 = sub_1CB779AD4(8), (v169 & 1) != 0))
            {
              v170 = *(_QWORD *)(*(_QWORD *)(v167 + 56) + 8 * v168);
              swift_retain();
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D698);
              v170 = swift_allocObject();
              *(_QWORD *)(v170 + 16) = MEMORY[0x1E0DEE9E0];
            }
            sub_1CB8256C4(v197, v40);
            v183 = v211;
            swift_beginAccess();
            swift_retain();
            v184 = swift_isUniquelyReferenced_nonNull_native();
            v218 = *v183;
            *v183 = 0x8000000000000000;
            sub_1CB82EA40(v170, 8, v184);
            *v183 = v218;
            swift_bridgeObjectRelease();
            swift_endAccess();

            swift_release();
            sub_1CB779034(v43, v45);
            (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v197, v217);
            goto LABEL_106;
          case 0x17u:
            v106 = objc_allocWithZone(MEMORY[0x1E0D99A60]);
            sub_1CB7A81D8(v43, v45);
            v107 = (void *)sub_1CB845F88();
            sub_1CB779034(v43, v45);
            v108 = objc_msgSend(v106, sel_initWithData_, v107);

            if (!v108
              || (v109 = objc_msgSend(v108, sel_eventMetadata),
                  v108,
                  !v109)
              || (v110 = objc_msgSend(v109, sel_mhId), v109, !v110))
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v214, 1, 1, v217);
LABEL_60:

              sub_1CB779034(v43, v45);
              v145 = (uint64_t)v214;
              goto LABEL_63;
            }
            v111 = objc_msgSend(v110, sel_value);
            if (v111)
            {
              v112 = v111;
              v113 = sub_1CB845F94();
              v115 = v114;

              sub_1CB7B601C(v113, v115);
              v116 = v113;
              v18 = v207;
              v117 = v115;
              v33 = v215;
              sub_1CB779034(v116, v117);
              v118 = v217;
            }
            else
            {
              v118 = v217;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v214, 1, 1, v217);
            }

            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v214, 1, v118) == 1)
              goto LABEL_60;
            (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v201, v214, v118);
            v171 = *v211;
            if (*(_QWORD *)(*v211 + 16) && (v172 = sub_1CB779AD4(9), (v173 & 1) != 0))
            {
              v174 = *(_QWORD *)(*(_QWORD *)(v171 + 56) + 8 * v172);
              swift_retain();
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D698);
              v174 = swift_allocObject();
              *(_QWORD *)(v174 + 16) = MEMORY[0x1E0DEE9E0];
            }
            sub_1CB8256C4(v201, v40);
            v185 = v211;
            swift_beginAccess();
            swift_retain();
            v186 = swift_isUniquelyReferenced_nonNull_native();
            v218 = *v185;
            *v185 = 0x8000000000000000;
            sub_1CB82EA40(v174, 9, v186);
            *v185 = v218;
            swift_bridgeObjectRelease();
            swift_endAccess();

            swift_release();
            sub_1CB779034(v43, v45);
            (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v201, v217);
LABEL_106:
            v33 = v215;
LABEL_64:
            v34 = v216;
            p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
            break;
          case 0x26u:
            v119 = objc_allocWithZone(MEMORY[0x1E0D9A100]);
            sub_1CB7A81D8(v43, v45);
            v120 = (void *)sub_1CB845F88();
            sub_1CB779034(v43, v45);
            v121 = objc_msgSend(v119, sel_initWithData_, v120);

            if (v121
              && (v122 = objc_msgSend(v121, sel_eventMetadata),
                  v121,
                  v122)
              && (v123 = objc_msgSend(v122, sel_plusId), v122, v123))
            {
              v124 = objc_msgSend(v123, sel_value);
              if (v124)
              {
                v125 = v124;
                v126 = sub_1CB845F94();
                v128 = v127;

                sub_1CB7B601C(v126, v128);
                v129 = v126;
                v18 = v207;
                v130 = v128;
                v33 = v215;
                sub_1CB779034(v129, v130);
                v131 = v217;
              }
              else
              {
                v131 = v217;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v213, 1, 1, v217);
              }

              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v213, 1, v131) != 1)
              {
                (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v200, v213, v131);
                v175 = *v211;
                if (*(_QWORD *)(*v211 + 16) && (v176 = sub_1CB779AD4(19), (v177 & 1) != 0))
                {
                  v178 = *(_QWORD *)(*(_QWORD *)(v175 + 56) + 8 * v176);
                  swift_retain();
                }
                else
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D698);
                  v178 = swift_allocObject();
                  *(_QWORD *)(v178 + 16) = MEMORY[0x1E0DEE9E0];
                }
                sub_1CB8256C4(v200, v40);
                v187 = v211;
                swift_beginAccess();
                swift_retain();
                v188 = swift_isUniquelyReferenced_nonNull_native();
                v218 = *v187;
                *v187 = 0x8000000000000000;
                sub_1CB82EA40(v178, 19, v188);
                *v187 = v218;
                swift_bridgeObjectRelease();
                swift_endAccess();

                swift_release();
                sub_1CB779034(v43, v45);
                (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v200, v217);
                goto LABEL_106;
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v213, 1, 1, v217);
            }

            sub_1CB779034(v43, v45);
            v145 = (uint64_t)v213;
LABEL_63:
            sub_1CB785B54(v145, &qword_1ED88D570);
            goto LABEL_64;
          default:
            sub_1CB779034(v43, v45);

            p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
            break;
        }
LABEL_7:
        if (v33 == ++v35)
          goto LABEL_114;
      }

LABEL_6:
      goto LABEL_7;
    }
  }
LABEL_114:
  swift_bridgeObjectRelease();
  return v210;
}

_QWORD *sub_1CB7FFED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  unint64_t v82;
  uint64_t v83;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v0);
  v77 = (char *)v66 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_1CB846084();
  v76 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v75 = (char *)v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D560);
  v3 = MEMORY[0x1E0C80A78](v74);
  v73 = (char *)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v72 = (char *)v66 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v71 = (uint64_t)v66 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v70 = (char *)v66 - v10;
  MEMORY[0x1E0C80A78](v9);
  v69 = (uint64_t)v66 - v11;
  swift_retain();
  v12 = 0;
  v13 = sub_1CB846FFC();
  swift_release();
  if (v13 >> 62)
    goto LABEL_33;
  while (1)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0BE0);
    sub_1CB7762AC((unint64_t *)&qword_1ED88D568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    v83 = sub_1CB846804();
    MEMORY[0x1E0C80A78](v83);
    v66[-2] = &v83;
    swift_retain();
    sub_1CB847008();
    swift_release();
    v14 = MEMORY[0x1E0DEE9D8];
    v82 = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1CB846FF0();
    swift_release();
    sub_1CB84708C();
    v15 = v81;
    if (v81)
    {
      v16 = sub_1CB777FA8(0, &qword_1EF9A0E40);
      do
      {
        objc_msgSend(v15, sel_anyEventType);
        v17 = sub_1CB846D80();
        if (!v17 || v16 != v17)
          goto LABEL_4;
        v18 = objc_msgSend(v15, sel_payload);
        if (v18)
        {
          v19 = v18;
          v20 = sub_1CB845F94();
          v22 = v21;

          v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
          v24 = (void *)sub_1CB845F88();
          sub_1CB779034(v20, v22);
        }
        else
        {
          v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
          v24 = 0;
        }
        v25 = objc_msgSend(v23, sel_initWithData_, v24);

        if (v25)
        {
          objc_opt_self();
          v26 = swift_dynamicCastObjCClass();

          if (v26)
          {
            MEMORY[0x1D179EDF8]();
            if (*(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1CB846AA4();
            sub_1CB846AD4();
            sub_1CB846A74();
          }
          else
          {

          }
        }
        else
        {
LABEL_4:

        }
        sub_1CB84708C();
        v15 = v81;
      }
      while (v81);
      v14 = v82;
    }
    swift_release();
    v27 = v83;
    v28 = *(_QWORD *)(v83 + 16);
    v29 = MEMORY[0x1E0DEE9D8];
    if (!v28)
      break;
    v66[0] = v14;
    v66[1] = v12;
    v82 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CB846FCC();
    v30 = sub_1CB81B6CC(v27);
    v32 = v31;
    v34 = v33 & 1;
    v67 = v27 + 64;
    v68 = v27;
    v79 = v28 - 1;
    v35 = v76;
    v36 = v78;
    while (1)
    {
      v37 = v74;
      v38 = *(int *)(v74 + 48);
      v39 = v69;
      v80 = v32;
      v40 = sub_1CB7E201C(v69, v30, v32, v34 & 1, v27);
      *(_QWORD *)(v39 + v38) = v40;
      v41 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
      v42 = v70;
      v41(v70, v39, v36);
      *(_QWORD *)&v42[*(int *)(v37 + 48)] = v40;
      v43 = (uint64_t)v42;
      v12 = v71;
      sub_1CB7D836C(v43, v71, &qword_1ED88D560);
      swift_bridgeObjectRetain();
      sub_1CB785B54(v39, &qword_1ED88D560);
      v44 = *(int *)(v37 + 48);
      v45 = v72;
      v41(v72, v12, v36);
      v46 = *(_QWORD *)(v12 + v44);
      *(_QWORD *)&v45[v44] = v46;
      v47 = *(int *)(v37 + 48);
      v48 = v73;
      v41(v73, v12, v36);
      *(_QWORD *)&v48[v47] = v46;
      v49 = v75;
      v41(v75, (uint64_t)v45, v36);
      v50 = sub_1CB846018();
      v51 = (uint64_t)v77;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v77, 1, 1, v50);
      type metadata accessor for Turn();
      v52 = swift_allocObject();
      (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v52 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v49, v36);
      *(_QWORD *)(v52 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = v46;
      sub_1CB7D836C(v51, v52 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date, &qword_1ED88D550);
      swift_bridgeObjectRetain();
      v53 = *(void (**)(char *, uint64_t))(v35 + 8);
      v53(v45, v36);
      v53(v48, v36);
      sub_1CB785B54(v12, &qword_1ED88D560);
      sub_1CB846FB4();
      sub_1CB846FD8();
      v27 = v68;
      sub_1CB846FE4();
      sub_1CB846FC0();
      if (v30 < 0 || v30 >= -(-1 << *(_BYTE *)(v27 + 32)))
        break;
      if (((*(_QWORD *)(v67 + (((unint64_t)v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        goto LABEL_31;
      if (*(_DWORD *)(v27 + 36) != (_DWORD)v80)
        goto LABEL_32;
      v54 = sub_1CB846EDC();
      if (!v79)
      {
        v29 = v82;
        swift_bridgeObjectRelease();
        v14 = v66[0];
        goto LABEL_27;
      }
      v30 = v54;
      v34 = 0;
      v32 = *(unsigned int *)(v27 + 36);
      --v79;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    sub_1CB847044();
    swift_bridgeObjectRelease();
  }
LABEL_27:
  v55 = sub_1CB7FE998(v14);
  v57 = v56;
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  v58 = sub_1CB7FCCAC(v29, v55, v57);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v82 = v58;
  sub_1CB7F9A0C(&v82);
  v59 = v82;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C038);
  v60 = (_QWORD *)swift_allocObject();
  v60[6] = v59;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = 0;
  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    v62 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  else
  {
    v62 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v63 = sub_1CB785DB0((unint64_t *)&qword_1ED88C040, (uint64_t *)&unk_1ED88C050, MEMORY[0x1E0DEE970]);
  v64 = swift_allocObject();
  *(_QWORD *)(v64 + 16) = v62;
  swift_release();
  swift_release();
  v60[2] = v61;
  v60[3] = v63;
  v60[4] = v64;
  v60[5] = v63;
  swift_bridgeObjectRelease();
  return v60;
}

uint64_t sub_1CB8006DC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1CB7FC6C0(a1);
}

uint64_t sub_1CB800700@<X0>(_QWORD *a1@<X8>)
{
  return sub_1CB7FC7AC(a1);
}

unint64_t sub_1CB800724()
{
  unint64_t result;

  result = qword_1EF9A0CD0;
  if (!qword_1EF9A0CD0)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for InteractionReaderError, &type metadata for InteractionReaderError);
    atomic_store(result, (unint64_t *)&qword_1EF9A0CD0);
  }
  return result;
}

uint64_t dispatch thunk of SignalReader.turn(turnID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SignalReader.turns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SignalReader.conversations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AsyncSignalReader.turns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AsyncSignalReader.conversations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AsyncBookmarkingSignalReader.turns(startBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AsyncBookmarkingSignalReader.turnsBookmarked(startBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AsyncBookmarkingSignalReader.conversations(startBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AsyncBookmarkingSignalReader.conversationsBookmarked(startBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of StreamSignalReader.turn(turnID:receiveTurn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of StreamSignalReader.turns(receiveTurns:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of StreamSignalReader.turns(bookmark:receiveTurns:receiveBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t dispatch thunk of StreamSignalReader.conversations(receiveConversations:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of StreamSignalReader.conversations(bookmark:receiveConversations:receiveBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 40))();
}

ValueMetadata *type metadata accessor for SignalReadError()
{
  return &type metadata for SignalReadError;
}

uint64_t dispatch thunk of InteractionReader.appInteractions(since:intentTypes:until:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of InteractionReader.appInteractionsAsync(since:intentTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

ValueMetadata *type metadata accessor for InteractionReaderError()
{
  return &type metadata for InteractionReaderError;
}

uint64_t dispatch thunk of BiomeEventReader.readEvents(_:types:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of BiomeEventReader.readEventsAsync<A>(from:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

ValueMetadata *type metadata accessor for BiomeEventReaderError()
{
  return &type metadata for BiomeEventReaderError;
}

uint64_t method lookup function for FlatFileSignalReader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlatFileSignalReader.turn(turnID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of FlatFileSignalReader.turns()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of FlatFileSignalReader.conversations()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t type metadata accessor for BiomeSignalReader()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SignalJoining()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SignalExtracting()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DefaultInteractionReader()
{
  return objc_opt_self();
}

uint64_t method lookup function for DefaultInteractionReader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultInteractionReader.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DefaultInteractionReader.__allocating_init(biomeBasePath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DefaultInteractionReader.appInteractions(since:intentTypes:until:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DefaultInteractionReader.appInteractionsAsync(since:intentTypes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t initializeBufferWithCopyOfBuffer for BiomeSignalReader.SubscriptionState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for BiomeSignalReader.SubscriptionState()
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for BiomeSignalReader.SubscriptionState(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for BiomeSignalReader.SubscriptionState(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BiomeSignalReader.SubscriptionState()
{
  return &type metadata for BiomeSignalReader.SubscriptionState;
}

uint64_t sub_1CB800A6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB800A90(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_1CB800AA0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

uint64_t sub_1CB800AB0(uint64_t a1)
{
  uint64_t v1;

  return sub_1CB7F81AC(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1CB800AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CB846084();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CB800B3C(uint64_t a1)
{
  uint64_t v1;

  sub_1CB846084();
  return sub_1CB7F6CE0(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1CB800B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CB846084();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1CB800BF4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1CB846084() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1CB7F8E9C(*(_QWORD *)(v0 + 16), v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_1CB800C48(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_unknownObjectRelease();
  return result;
}

void sub_1CB800C60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CB846084() - 8) + 80);
  sub_1CB7F8874(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1CB800C98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CB846084() - 8) + 80);
  return sub_1CB7F7D6C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1CB800CCC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CB800CF4(uint64_t a1)
{
  return sub_1CB800FD8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *))sub_1CB7F6DF0);
}

uint64_t sub_1CB800D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CB846084();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CB800D8C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CB846084() - 8) + 80);
  return sub_1CB7F7E5C(a1, a2, *(void (**)(_QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(void))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), v2 + ((v5 + 64) & ~v5));
}

uint64_t sub_1CB800DF4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CB81B4A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CB800DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CB846084();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1CB800E8C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1CB846084() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1CB7F8264(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CB846084();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CB846084();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CB800FCC(uint64_t a1)
{
  return sub_1CB800FD8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *))sub_1CB7F7410);
}

uint64_t sub_1CB800FD8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, char *))
{
  char *v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CB846084() - 8) + 80);
  return a2(a1, *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), *((_QWORD *)v2 + 4), &v2[(v4 + 40) & ~v4]);
}

uint64_t sub_1CB80102C(uint64_t a1)
{
  uint64_t v1;

  return sub_1CB7FA53C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1CB801048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F0B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB801090()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB8010B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785488;
  return sub_1CB784350(a1, v1);
}

uint64_t sub_1CB801108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF9A0E30 + dword_1EF9A0E30))(a1, v1);
}

uint64_t sub_1CB801170(void **a1)
{
  uint64_t v1;

  return sub_1CB7F9680(a1, *(uint64_t **)(v1 + 16));
}

uint64_t UniversalSuggestionsStoreCoreData.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = static Config.universalSuggestionsStoreFilePath.getter();
  return (*(uint64_t (**)(uint64_t))(v0 + 120))(v1);
}

void sub_1CB8011E4()
{
  qword_1EF9A0E58 = 0xBFF0000000000000;
}

id sub_1CB8011F4()
{
  id result;

  result = sub_1CB801210();
  qword_1ED889540 = (uint64_t)result;
  return result;
}

id sub_1CB801210()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1CB845F58();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  type metadata accessor for UniversalSuggestionsStoreCoreData();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v13 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (v14)
  {
    sub_1CB845F34();

    v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v15(v2, v7, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      v15(v9, v2, v3);
      v16 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
      v17 = (void *)sub_1CB845EE0();
      v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      if (v18)
        return v18;
      goto LABEL_7;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  sub_1CB785B54((uint64_t)v2, &qword_1ED88E158);
LABEL_7:
  if (qword_1EF99C420 != -1)
    swift_once();
  v19 = sub_1CB8466D8();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EF9A0E60);
  v20 = sub_1CB8466C0();
  v21 = sub_1CB846C90();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1CB771000, v20, v21, "UniversalSuggestionsCoreData: Error loading data base model from bundle", v22, 2u);
    MEMORY[0x1D179FE84](v22, -1, -1);
  }

  return 0;
}

uint64_t sub_1CB801508(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v6 = swift_allocObject();
  if (!a2)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v8 = sub_1CB8466D8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED890248);
    v9 = sub_1CB8466C0();
    v10 = sub_1CB846C90();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1CB771000, v9, v10, "Store path unavailable, possibly no access to data container", v11, 2u);
      MEMORY[0x1D179FE84](v11, -1, -1);
    }

    goto LABEL_9;
  }
  v7 = sub_1CB80A1A4(a1, a2, a3 & 1);
  swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_9:
    swift_deallocPartialClassInstance();
    return 0;
  }
  *(_QWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 24) = objc_msgSend(v7, sel_newBackgroundContext);
  return v6;
}

uint64_t sub_1CB80165C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  v4 = v3;
  if (!a2)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v6 = sub_1CB8466D8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED890248);
    v7 = sub_1CB8466C0();
    v8 = sub_1CB846C90();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1CB771000, v7, v8, "Store path unavailable, possibly no access to data container", v9, 2u);
      MEMORY[0x1D179FE84](v9, -1, -1);
    }

    goto LABEL_9;
  }
  v5 = sub_1CB80A1A4(a1, a2, a3 & 1);
  swift_bridgeObjectRelease();
  if (!v5)
  {
LABEL_9:
    type metadata accessor for UniversalSuggestionsStoreCoreData();
    swift_deallocPartialClassInstance();
    return 0;
  }
  *(_QWORD *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 24) = objc_msgSend(v5, sel_newBackgroundContext);
  return v4;
}

uint64_t UniversalSuggestionsStoreCoreData.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 120))(a1, a2, 0);
}

uint64_t sub_1CB801794()
{
  uint64_t v0;
  __objc2_prot_list **p_base_prots;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  id v8;
  void *v9;
  id v10;
  unsigned int v11;
  id v12;
  __objc2_prot_list **v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  id v18[2];

  v18[1] = *(id *)MEMORY[0x1E0C80C00];
  p_base_prots = &SupportedLocalesPListStore.base_prots;
  v2 = objc_msgSend(*(id *)(v0 + 16), sel_persistentStoreCoordinator);
  v3 = objc_msgSend(v2, sel_persistentStores);

  sub_1CB777FA8(0, (unint64_t *)&unk_1ED88A748);
  v4 = sub_1CB846A5C();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v5 < 1)
    __break(1u);
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x1D179F320](i, v4);
    else
      v8 = *(id *)(v4 + 8 * i + 32);
    v9 = v8;
    v10 = objc_msgSend(*(id *)(v17 + 16), (SEL)p_base_prots[283]);
    v18[0] = 0;
    v11 = objc_msgSend(v10, sel_removePersistentStore_error_, v9, v18);

    if (v11)
    {
      v7 = v18[0];

    }
    else
    {
      v12 = v18[0];
      v13 = p_base_prots;
      v14 = sub_1CB845E80();

      swift_willThrow();
      v15 = (void *)v14;
      p_base_prots = v13;

    }
  }
  return swift_bridgeObjectRelease();
}

void sub_1CB8019B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  if (a2)
  {
    swift_beginAccess();
    *(_BYTE *)(a3 + 16) = 0;
    if (qword_1EF99C420 != -1)
      swift_once();
    v6 = sub_1CB8466D8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EF9A0E60);
    v7 = a2;
    v8 = a1;
    v9 = a2;
    v10 = v8;
    v11 = sub_1CB8466C0();
    v12 = sub_1CB846C90();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v13 = 136315394;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99E380);
      v16 = sub_1CB846E34();
      sub_1CB775A54(v16, v17, &v19);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      *(_WORD *)(v13 + 12) = 2112;
      v18 = v10;
      sub_1CB846E58();
      *v14 = v10;

      _os_log_impl(&dword_1CB771000, v11, v12, "UniversalSuggestionsCoreData: Unable to load persistent stores: %s : %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v15, -1, -1);
      MEMORY[0x1D179FE84](v13, -1, -1);

    }
    else
    {

    }
  }
}

id sub_1CB801C24()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id sub_1CB801C2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 24);
  v17[0] = 0;
  v2 = objc_msgSend(v1, sel_save_, v17);
  if ((_DWORD)v2)
  {
    v3 = v17[0];
  }
  else
  {
    v4 = v17[0];
    v5 = (void *)sub_1CB845E80();

    swift_willThrow();
    if (qword_1EF99C420 != -1)
      swift_once();
    v6 = sub_1CB8466D8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EF9A0E60);
    v7 = v5;
    v8 = v5;
    v9 = sub_1CB8466C0();
    v10 = sub_1CB846C90();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (void *)swift_slowAlloc();
      v17[0] = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = v5;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      v14 = sub_1CB8468DC();
      sub_1CB775A54(v14, v15, (uint64_t *)v17);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v9, v10, "UniversalSuggestionsCoreData: Unresolved error in saveChanges error=%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v12, -1, -1);
      MEMORY[0x1D179FE84](v11, -1, -1);

    }
    else
    {

    }
  }
  return v2;
}

uint64_t sub_1CB801E80()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t result;
  _QWORD v6[6];

  v1 = *(void **)(v0 + 24);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1CB801F9C;
  *(_QWORD *)(v2 + 24) = v0;
  v6[4] = sub_1CB801FB0;
  v6[5] = v2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1CB7A346C;
  v6[3] = &block_descriptor_10;
  v3 = _Block_copy(v6);
  v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1CB801FA0()
{
  return swift_deallocObject();
}

uint64_t sub_1CB801FB0()
{
  uint64_t v0;

  return sub_1CB7759C4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

void sub_1CB801FD0()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  id v25[2];

  v25[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97A90]), sel_initWithFetchRequest_, v3);
  v5 = *(void **)(v0 + 24);
  v25[0] = 0;
  v6 = objc_msgSend(v5, sel_executeRequest_error_, v4, v25);
  if (v6)
  {
    v7 = v6;
    v8 = v25[0];

    if ((sub_1CB801C2C() & 1) == 0)
    {
      if (qword_1EF99C420 != -1)
        swift_once();
      v9 = sub_1CB8466D8();
      __swift_project_value_buffer(v9, (uint64_t)qword_1EF9A0E60);
      v10 = sub_1CB8466C0();
      v11 = sub_1CB846C90();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_1CB771000, v10, v11, "UniversalSuggestionsCoreData: Cannot reset store, failed to save", v12, 2u);
        MEMORY[0x1D179FE84](v12, -1, -1);

        return;
      }

    }
  }
  else
  {
    v13 = v25[0];
    v14 = (void *)sub_1CB845E80();

    swift_willThrow();
    if (qword_1EF99C420 != -1)
      swift_once();
    v15 = sub_1CB8466D8();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EF9A0E60);
    v16 = v14;
    v17 = v14;
    v18 = sub_1CB8466C0();
    v19 = sub_1CB846C90();
    if (!os_log_type_enabled(v18, v19))
    {

      return;
    }
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = (void *)swift_slowAlloc();
    v25[0] = v21;
    *(_DWORD *)v20 = 136315138;
    v22 = v14;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
    v23 = sub_1CB8468DC();
    sub_1CB775A54(v23, v24, (uint64_t *)v25);
    sub_1CB846E58();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CB771000, v18, v19, "UniversalSuggestionsCoreData: Cannot reset store, error=%s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v21, -1, -1);
    MEMORY[0x1D179FE84](v20, -1, -1);

  }
}

uint64_t sub_1CB802374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[2];
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = type metadata accessor for UniversalCandidate(0);
  v25 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1CB846084();
  v4 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for UniversalSuggestion(0);
  v7 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(id *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889578);
  sub_1CB846DA4();

  v11 = v34;
  v34 = MEMORY[0x1E0DEE9D8];
  v28 = *(_QWORD *)(v11 + 16);
  if (v28)
  {
    v27 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v26 = *(_QWORD *)(v7 + 72);
    v23[1] = v11;
    swift_bridgeObjectRetain();
    v12 = 0;
    v24 = v9;
    do
    {
      sub_1CB809FF4(v27 + v26 * v12, (uint64_t)v9, type metadata accessor for UniversalSuggestion);
      v13 = *(_QWORD *)&v9[*(int *)(v29 + 24)];
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v31 = v12;
        v33 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1CB776500(0, v14, 0);
        v15 = *(unsigned __int8 *)(v25 + 80);
        v30 = v13;
        v16 = v13 + ((v15 + 32) & ~v15);
        v17 = *(_QWORD *)(v25 + 72);
        v18 = v32;
        do
        {
          sub_1CB809FF4(v16, (uint64_t)v3, type metadata accessor for UniversalCandidate);
          (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v3, v18);
          sub_1CB7BAB18((uint64_t)v3, type metadata accessor for UniversalCandidate);
          v19 = v33;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1CB776500(0, *(_QWORD *)(v19 + 16) + 1, 1);
            v18 = v32;
            v19 = v33;
          }
          v21 = *(_QWORD *)(v19 + 16);
          v20 = *(_QWORD *)(v19 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_1CB776500(v20 > 1, v21 + 1, 1);
            v18 = v32;
            v19 = v33;
          }
          *(_QWORD *)(v19 + 16) = v21 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v19+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v21, v6, v18);
          v33 = v19;
          v16 += v17;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        v9 = v24;
        v12 = v31;
      }
      else
      {
        v19 = MEMORY[0x1E0DEE9D8];
      }
      ++v12;
      sub_1CB7BAB18((uint64_t)v9, type metadata accessor for UniversalSuggestion);
      sub_1CB7F1290(v19);
    }
    while (v12 != v28);
    swift_bridgeObjectRelease_n();
    return v34;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t sub_1CB8026A0()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v1 = *(id *)(v0 + 24);
  sub_1CB846DA4();

  return v3;
}

uint64_t sub_1CB802700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB803CC8(a1);
  if (!v7)
    goto LABEL_9;
  v8 = v7;
  v9 = objc_msgSend(v7, sel_candidateForUniversalSuggestion);
  if (!v9)
  {

LABEL_9:
    v21 = 0;
    return v21 & 1;
  }
  v10 = qword_1EF99C420;
  v11 = v9;
  if (v10 != -1)
    swift_once();
  v12 = sub_1CB8466D8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EF9A0E60);
  v13 = v11;
  v14 = sub_1CB8466C0();
  v15 = sub_1CB846C84();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v27 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = objc_msgSend(v13, sel_id);
    if (v18)
    {
      v19 = v18;
      sub_1CB846054();

      v20 = sub_1CB846084();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 0, 1, v20);
    }
    else
    {
      v22 = sub_1CB846084();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 1, 1, v22);
    }
    v23 = sub_1CB8468DC();
    v26 = sub_1CB775A54(v23, v24, &v27);
    sub_1CB846E58();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v14, v15, "Deleting universal suggestion candidate: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v17, -1, -1);
    MEMORY[0x1D179FE84](v16, -1, -1);

  }
  else
  {

  }
  objc_msgSend(*(id *)(v2 + 24), sel_deleteObject_, v13);
  v21 = sub_1CB801C2C();

  return v21 & 1;
}

uint64_t sub_1CB8029B8()
{
  return sub_1CB802FA8(&qword_1ED889578);
}

uint64_t sub_1CB8029CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1CB8029F8();
  *a1 = result;
  return result;
}

uint64_t sub_1CB8029F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED889300);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UniversalSuggestion(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - v9;
  v11 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1CB84A330;
  v15 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v17 = objc_msgSend(v15, sel_initWithKey_ascending_, v16, 1);

  *(_QWORD *)(v14 + 32) = v17;
  v37 = v14;
  sub_1CB846A74();
  sub_1CB777FA8(0, (unint64_t *)&qword_1ED88DE00);
  v18 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSortDescriptors_, v18);

  v19 = *(void **)(v1 + 24);
  type metadata accessor for UniversalSuggestionCoreDataRecord();
  v20 = v19;
  v21 = sub_1CB846DB0();
  v22 = (uint64_t)v10;
  v23 = v36;

  if (!(v21 >> 62))
  {
    v24 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_3;
LABEL_18:

    swift_bridgeObjectRelease();
    v28 = MEMORY[0x1E0DEE9D8];
LABEL_19:
    swift_bridgeObjectRelease();
    return v28;
  }
  swift_bridgeObjectRetain();
  result = sub_1CB847044();
  v24 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v24 >= 1)
  {
    v34 = v13;
    v35 = v22;
    v26 = (uint64_t)v23;
    v27 = 0;
    v28 = MEMORY[0x1E0DEE9D8];
    v36 = (char *)v5;
    do
    {
      if ((v21 & 0xC000000000000001) != 0)
        v29 = (id)MEMORY[0x1D179F320](v27, v21);
      else
        v29 = *(id *)(v21 + 8 * v27 + 32);
      v30 = v29;
      sub_1CB7DDBF4((uint64_t)v4);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_1CB785B54((uint64_t)v4, qword_1ED889300);
      }
      else
      {
        v31 = v35;
        sub_1CB80A090((uint64_t)v4, v35, type metadata accessor for UniversalSuggestion);
        sub_1CB80A090(v31, v26, type metadata accessor for UniversalSuggestion);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v28 = sub_1CB7904AC(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
        v33 = *(_QWORD *)(v28 + 16);
        v32 = *(_QWORD *)(v28 + 24);
        if (v33 >= v32 >> 1)
          v28 = sub_1CB7904AC(v32 > 1, v33 + 1, 1, v28);
        *(_QWORD *)(v28 + 16) = v33 + 1;
        sub_1CB80A090(v26, v28+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v33, type metadata accessor for UniversalSuggestion);
        v5 = (uint64_t)v36;
      }
      ++v27;
    }
    while (v24 != v27);

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB802F94()
{
  return sub_1CB802FA8(&qword_1EF9A0E78);
}

uint64_t sub_1CB802FA8(uint64_t *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v5;

  v3 = *(id *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  sub_1CB846DA4();

  return v5;
}

uint64_t sub_1CB803010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E80);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UniversalRuntimeSuggestion(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - v9;
  v11 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1CB84A330;
  v15 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v17 = objc_msgSend(v15, sel_initWithKey_ascending_, v16, 1);

  *(_QWORD *)(v14 + 32) = v17;
  v37 = v14;
  sub_1CB846A74();
  sub_1CB777FA8(0, (unint64_t *)&qword_1ED88DE00);
  v18 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSortDescriptors_, v18);

  v19 = *(void **)(v1 + 24);
  type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
  v20 = v19;
  v21 = sub_1CB846DB0();
  v22 = (uint64_t)v10;
  v23 = v36;

  if (!(v21 >> 62))
  {
    v24 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_3;
LABEL_18:

    swift_bridgeObjectRelease();
    v28 = MEMORY[0x1E0DEE9D8];
LABEL_19:
    swift_bridgeObjectRelease();
    return v28;
  }
  swift_bridgeObjectRetain();
  result = sub_1CB847044();
  v24 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v24 >= 1)
  {
    v34 = v13;
    v35 = v22;
    v26 = (uint64_t)v23;
    v27 = 0;
    v28 = MEMORY[0x1E0DEE9D8];
    v36 = (char *)v5;
    do
    {
      if ((v21 & 0xC000000000000001) != 0)
        v29 = (id)MEMORY[0x1D179F320](v27, v21);
      else
        v29 = *(id *)(v21 + 8 * v27 + 32);
      v30 = v29;
      sub_1CB7DD2F0(v4);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_1CB785B54((uint64_t)v4, &qword_1EF9A0E80);
      }
      else
      {
        v31 = v35;
        sub_1CB80A090((uint64_t)v4, v35, type metadata accessor for UniversalRuntimeSuggestion);
        sub_1CB80A090(v31, v26, type metadata accessor for UniversalRuntimeSuggestion);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v28 = sub_1CB7904C0(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
        v33 = *(_QWORD *)(v28 + 16);
        v32 = *(_QWORD *)(v28 + 24);
        if (v33 >= v32 >> 1)
          v28 = sub_1CB7904C0(v32 > 1, v33 + 1, 1, v28);
        *(_QWORD *)(v28 + 16) = v33 + 1;
        sub_1CB80A090(v26, v28+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v33, type metadata accessor for UniversalRuntimeSuggestion);
        v5 = (uint64_t)v36;
      }
      ++v27;
    }
    while (v24 != v27);

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void sub_1CB8035AC(uint64_t a1)
{
  sub_1CB8042DC(a1, qword_1ED889300);
}

void sub_1CB8035C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;

  v2 = v1;
  v3 = *a1;
  v4 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v5 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  v28 = v3;
  swift_retain();
  v7 = sub_1CB7B696C();
  v9 = v8;
  swift_release();
  if (!v9)
  {
    if (qword_1EF99C420 != -1)
      swift_once();
    v15 = sub_1CB8466D8();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EF9A0E60);
    v16 = sub_1CB8466C0();
    v17 = sub_1CB846C90();
    if (!os_log_type_enabled(v16, v17))
      goto LABEL_16;
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    v19 = "UniversalSuggestionsCoreData: Unable to extract name from key entity. Skipping suggestion search.";
    goto LABEL_15;
  }
  if (qword_1EF99C420 != -1)
    swift_once();
  v10 = sub_1CB8466D8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EF9A0E60);
  swift_bridgeObjectRetain_n();
  v11 = sub_1CB8466C0();
  v12 = sub_1CB846C84();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v28 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_1CB775A54(v7, v9, &v28);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v11, v12, "UniversalSuggestionsCoreData: Searching for universal suggestion with name==%s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v14, -1, -1);
    MEMORY[0x1D179FE84](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1CB777FA8(0, &qword_1ED88A740);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A810);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1CB848A50;
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v20 + 64) = sub_1CB7A8538();
  *(_QWORD *)(v20 + 32) = v7;
  *(_QWORD *)(v20 + 40) = v9;
  v21 = (void *)sub_1CB846C48();
  objc_msgSend(v6, sel_setPredicate_, v21);

  v22 = *(void **)(v2 + 24);
  type metadata accessor for UniversalSuggestionCoreDataRecord();
  v23 = v22;
  v24 = sub_1CB846DB0();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v26 > 1)
      goto LABEL_13;
    swift_bridgeObjectRetain();
    v25 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v25 > 1)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      v16 = sub_1CB8466C0();
      v17 = sub_1CB846C90();
      if (!os_log_type_enabled(v16, v17))
      {
LABEL_16:

        return;
      }
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      v19 = "More than one suggestion records have been found with the same key name. Skipping search.";
LABEL_15:
      _os_log_impl(&dword_1CB771000, v16, v17, v19, v18, 2u);
      MEMORY[0x1D179FE84](v18, -1, -1);
      goto LABEL_16;
    }
  }
  if (!v25)
    goto LABEL_23;
  if ((v24 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1D179F320](0, v24);
    goto LABEL_23;
  }
  if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v27 = *(id *)(v24 + 32);
LABEL_23:
    swift_bridgeObjectRelease();

    return;
  }
  __break(1u);
}

void sub_1CB803BF0()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
  sub_1CB846DA4();

}

void sub_1CB803C58(uint64_t a1@<X1>, char *a2@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v5;

  sub_1CB803CC8(a1);
  if (v3)
  {
    v4 = v3;
    sub_1CB7DCBDC(a2);

  }
  else
  {
    v5 = type metadata accessor for UniversalCandidate(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 1, 1, v5);
  }
}

void sub_1CB803CC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  id v29;
  _QWORD v30[2];
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = sub_1CB846084();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v7 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  if (qword_1EF99C420 != -1)
    swift_once();
  v9 = sub_1CB8466D8();
  v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1EF9A0E60);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v32 = a1;
  v11(v5, a1, v2);
  v12 = sub_1CB8466C0();
  v13 = sub_1CB846C84();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v35 = v15;
    v30[1] = v10;
    v31 = v8;
    *(_DWORD *)v14 = 136315138;
    sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v16 = sub_1CB847170();
    v34 = sub_1CB775A54(v16, v17, &v35);
    v8 = v31;
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl(&dword_1CB771000, v12, v13, "UniversalSuggestionsCoreData: Searching for universal candidate with id==%s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v15, -1, -1);
    MEMORY[0x1D179FE84](v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

  sub_1CB777FA8(0, &qword_1ED88A740);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A810);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1CB848A50;
  v19 = sub_1CB84603C();
  *(_QWORD *)(v18 + 56) = sub_1CB777FA8(0, &qword_1EF99E358);
  *(_QWORD *)(v18 + 64) = sub_1CB80A038();
  *(_QWORD *)(v18 + 32) = v19;
  v20 = (void *)sub_1CB846C48();
  objc_msgSend(v8, sel_setPredicate_, v20);

  v21 = *(void **)(v33 + 24);
  type metadata accessor for UniversalCandidateCoreDataRecord();
  v22 = v21;
  v23 = sub_1CB846DB0();

  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v28 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v28 > 1)
      goto LABEL_8;
    swift_bridgeObjectRetain();
    v24 = sub_1CB847044();
    swift_bridgeObjectRelease();
LABEL_13:
    if (v24)
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1D179F320](0, v23);
      }
      else
      {
        if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v29 = *(id *)(v23 + 32);
      }
    }
    swift_bridgeObjectRelease();

    return;
  }
  v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v24 <= 1)
    goto LABEL_13;
LABEL_8:
  swift_bridgeObjectRelease();
  v25 = sub_1CB8466C0();
  v26 = sub_1CB846C90();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_1CB771000, v25, v26, "More than one candidate records have been found with the same id. Skipping search.", v27, 2u);
    MEMORY[0x1D179FE84](v27, -1, -1);
  }

}

void sub_1CB8042C8(uint64_t a1)
{
  sub_1CB8042DC(a1, &qword_1EF9A0E80);
}

void sub_1CB8042DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  id v4;

  v4 = *(id *)(v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1CB846DA4();

}

void sub_1CB804348(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t *)@<X2>, void (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v11 = a1;
  v8 = a2(&v11);
  if (v8)
  {
    v9 = (void *)v8;
    a3();

  }
  else
  {
    v10 = a4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a5, 1, 1, v10);
  }
}

uint64_t sub_1CB8043CC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  swift_retain();
  v0 = sub_1CB7B696C();
  v2 = v1;
  swift_release();
  if (v2)
  {
    sub_1CB8044F8(v0, v2);
    v4 = v3;
    swift_bridgeObjectRelease();
    return v4;
  }
  else
  {
    if (qword_1EF99C420 != -1)
      swift_once();
    v6 = sub_1CB8466D8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EF9A0E60);
    v7 = sub_1CB8466C0();
    v8 = sub_1CB846C90();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1CB771000, v7, v8, "UniversalSuggestionsCoreData: Unable to extract name from key entity. Skipping suggestion search.", v9, 2u);
      MEMORY[0x1D179FE84](v9, -1, -1);
    }

    return 0;
  }
}

void sub_1CB8044F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;

  v3 = v2;
  v6 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v7 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  if (qword_1EF99C420 != -1)
    swift_once();
  v9 = sub_1CB8466D8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF9A0E60);
  swift_bridgeObjectRetain_n();
  v10 = sub_1CB8466C0();
  v11 = sub_1CB846C84();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v25 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_1CB775A54(a1, a2, &v25);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v10, v11, "UniversalSuggestionsCoreData: Searching for universal runtime suggestion with name==%s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v13, -1, -1);
    MEMORY[0x1D179FE84](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1CB777FA8(0, &qword_1ED88A740);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A810);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1CB848A50;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = sub_1CB7A8538();
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  swift_bridgeObjectRetain();
  v15 = (void *)sub_1CB846C48();
  objc_msgSend(v8, sel_setPredicate_, v15);

  v16 = *(void **)(v3 + 24);
  type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
  v17 = v16;
  v18 = sub_1CB846DB0();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v23 > 1)
      goto LABEL_8;
    swift_bridgeObjectRetain();
    v19 = sub_1CB847044();
    swift_bridgeObjectRelease();
LABEL_13:
    if (v19)
    {
      if ((v18 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1D179F320](0, v18);
      }
      else
      {
        if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v24 = *(id *)(v18 + 32);
      }
    }
    swift_bridgeObjectRelease();

    return;
  }
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v19 <= 1)
    goto LABEL_13;
LABEL_8:
  swift_bridgeObjectRelease();
  v20 = sub_1CB8466C0();
  v21 = sub_1CB846C90();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1CB771000, v20, v21, "More than one runtime suggestion records have been found with the same key name. Skipping search.", v22, 2u);
    MEMORY[0x1D179FE84](v22, -1, -1);
  }

}

void sub_1CB804A84()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  type metadata accessor for UniversalSuggestionCandidateDonationResult();
  v2 = v1;
  sub_1CB846DA4();

}

uint64_t sub_1CB804AFC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  unint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t inited;
  unint64_t v105;
  id v106;
  id v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  id v112;
  id v113;
  id v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t *v119;
  void (*v120)(uint64_t, uint64_t, uint64_t, int *);
  __n128 v121;
  unint64_t v122;
  uint64_t (*v123)(uint64_t);
  double v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  void *v133;
  id v134;
  uint64_t (*v135)(uint64_t);
  uint64_t *v136;
  unint64_t v137;
  uint64_t v138;
  id v139;
  NSObject *v140;
  os_log_type_t v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  void *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t (*v165)(uint64_t);
  double v166;
  id v167;
  double v168;
  double v169;
  char v170;
  id v171;
  double v172;
  double v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  double v178;
  double v179;
  double v180;
  id v181;
  double v182;
  uint64_t v183;
  int *v184;
  uint64_t v185;
  void *v186;
  id v187;
  id v188;
  double v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  id v195;
  id v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  id v202;
  id v203;
  id v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  id v210;
  char *v211;
  uint64_t *v212;
  id v213;
  void *v214;
  void (*v215)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unsigned __int8 v220;
  uint64_t *v221;
  void *v222;
  id v223;
  id v224;
  id v225;
  void *v226;
  void *v227;
  uint64_t v228;
  id v229;
  NSObject *v230;
  os_log_type_t v231;
  uint8_t *v232;
  uint64_t v233;
  id v234;
  void *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  id v239;
  void *v240;
  id v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t (*v247)(uint64_t, uint64_t, uint64_t);
  int v248;
  void *v249;
  __objc2_prot_list **p_base_prots;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char v256;
  void (*v257)(char *, uint64_t);
  uint64_t v258;
  id v259;
  void *v260;
  id v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  BOOL v269;
  uint64_t v270;
  uint64_t v271;
  int v272;
  uint64_t v273;
  void *v274;
  uint64_t v275;
  int v276;
  uint64_t v277;
  char *v278;
  char v279;
  uint64_t v280;
  void (*v281)(char *, uint64_t);
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t *v287;
  uint64_t *v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  uint64_t v292;
  unint64_t v293;
  unint64_t v294;
  void (*v295)(uint64_t, uint64_t, uint64_t, int *);
  id v296;
  char *v297;
  id v298;
  uint64_t *v299;
  char *v300;
  char *v301;
  uint64_t v302;
  char *v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  __n128 v336;
  char *v337;
  uint64_t v338;
  char *v339;
  uint64_t *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  unint64_t v345;
  uint64_t v346;
  unint64_t *v347;
  uint64_t v348;
  char *v349;
  unsigned int (*v350)(uint64_t, uint64_t, uint64_t);
  char v351[8];
  uint64_t v352;
  __int128 v353;
  __int128 v354;
  uint64_t v355;
  unint64_t v356;

  v4 = v3;
  v340 = a2;
  v334 = a3;
  v329 = type metadata accessor for UniversalSuggestion(0);
  MEMORY[0x1E0C80A78](v329);
  v314 = (uint64_t)&v292 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v333 = type metadata accessor for UniversalSuggestionCandidateDonationResult();
  MEMORY[0x1E0C80A78](v333);
  v309 = (uint64_t)&v292 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v319 = type metadata accessor for UniversalSuggestionCandidate(0);
  MEMORY[0x1E0C80A78](v319);
  v308 = (char *)&v292 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v327 = type metadata accessor for UniversalRuntimeSuggestion(0);
  MEMORY[0x1E0C80A78](v327);
  v328 = (char *)&v292 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v341 = sub_1CB846084();
  v342 = *(_QWORD *)(v341 - 8);
  MEMORY[0x1E0C80A78](v341);
  v301 = (char *)&v292 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v318 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EF78);
  v11 = MEMORY[0x1E0C80A78](v318);
  v306 = (uint64_t)&v292 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v310 = (uint64_t)&v292 - v13;
  v338 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v14 = MEMORY[0x1E0C80A78](v338);
  v302 = (uint64_t)&v292 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v304 = (char *)&v292 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v313 = (uint64_t)&v292 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v321 = (uint64_t)&v292 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v292 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v303 = (char *)&v292 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v312 = (uint64_t)&v292 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v320 = (uint64_t)&v292 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v300 = (char *)&v292 - v32;
  MEMORY[0x1E0C80A78](v31);
  v337 = (char *)&v292 - v33;
  v317 = sub_1CB846018();
  v316 = *(_QWORD *)(v317 - 8);
  MEMORY[0x1E0C80A78](v317);
  v315 = (char *)&v292 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E90);
  v346 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v339 = (char *)&v292 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E98);
  v38 = MEMORY[0x1E0C80A78](v37);
  v347 = (unint64_t *)((char *)&v292 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v38);
  v41 = (uint64_t *)((char *)&v292 - v40);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
  v43 = MEMORY[0x1E0C80A78](v42);
  v307 = (uint64_t)&v292 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x1E0C80A78](v43);
  v324 = (uint64_t)&v292 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v305 = (char *)&v292 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v332 = (uint64_t)&v292 - v50;
  MEMORY[0x1E0C80A78](v49);
  v52 = (char *)&v292 - v51;
  v343 = type metadata accessor for UniversalCandidate(0);
  v348 = *(_QWORD *)(v343 - 8);
  v53 = MEMORY[0x1E0C80A78](v343);
  v55 = (char *)&v292 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x1E0C80A78](v53);
  v335 = (uint64_t)&v292 - v57;
  v58 = MEMORY[0x1E0C80A78](v56);
  v323 = (uint64_t)&v292 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  v311 = (uint64_t)&v292 - v61;
  v62 = MEMORY[0x1E0C80A78](v60);
  v330 = (uint64_t)&v292 - v63;
  v64 = MEMORY[0x1E0C80A78](v62);
  v350 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v292 - v65);
  v66 = MEMORY[0x1E0C80A78](v64);
  v349 = (char *)&v292 - v67;
  MEMORY[0x1E0C80A78](v66);
  v345 = (unint64_t)&v292 - v68;
  v69 = sub_1CB845E8C();
  v336.n128_u64[0] = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v71 = (char *)&v292 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = *a1;
  v331 = *v340;
  *(_QWORD *)&v354 = v72;
  swift_retain();
  v326 = sub_1CB7B696C();
  v74 = v73;
  swift_release();
  if (!v74)
  {
    if (qword_1EF99C420 != -1)
      swift_once();
    v80 = sub_1CB8466D8();
    __swift_project_value_buffer(v80, (uint64_t)qword_1EF9A0E60);
    v81 = sub_1CB8466C0();
    v82 = sub_1CB846C84();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v83 = 0;
      _os_log_impl(&dword_1CB771000, v81, v82, "UniversalSuggestionsCoreData: Unable to extract name from key entity. Skipping suggestion donation.", v83, 2u);
      MEMORY[0x1D179FE84](v83, -1, -1);
    }

    return swift_storeEnumTagMultiPayload();
  }
  v325 = v74;
  v322 = v72;
  *(_QWORD *)&v354 = v72;
  sub_1CB8035C0((uint64_t *)&v354);
  if (!v75)
  {
    sub_1CB846078();
    v94 = v343;
    *(_QWORD *)&v55[*(int *)(v343 + 20)] = v331;
    *(_QWORD *)&v55[*(int *)(v94 + 24)] = 0x3FC999999999999ALL;
    *(_QWORD *)&v55[*(int *)(v94 + 28)] = 0;
    v95 = *(void **)(v4 + 24);
    swift_retain();
    v96 = v95;
    v97 = sub_1CB7DC7AC((uint64_t)v96);

    if (!v97)
    {
      sub_1CB7BAB18((uint64_t)v55, type metadata accessor for UniversalCandidate);
      swift_bridgeObjectRelease();
      return swift_storeEnumTagMultiPayload();
    }
    v98 = v4;
    v99 = v314;
    sub_1CB846078();
    v100 = v329;
    v101 = (uint64_t *)(v99 + *(int *)(v329 + 20));
    v102 = v326;
    v103 = v325;
    *v101 = v326;
    v101[1] = v103;
    *(_QWORD *)(v99 + *(int *)(v100 + 24)) = MEMORY[0x1E0DEE9D8];
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CB84A330;
    *(_QWORD *)(inited + 32) = v97;
    *(_QWORD *)&v354 = inited;
    swift_bridgeObjectRetain();
    v329 = v98;
    sub_1CB846A74();
    v105 = v354;
    v106 = v96;
    v107 = v97;
    v108 = (void *)sub_1CB7DDA98((uint64_t)v106, v105);
    swift_bridgeObjectRelease();

    sub_1CB7BAB18(v99, type metadata accessor for UniversalSuggestion);
    v109 = (uint64_t)v328;
    sub_1CB846078();
    v110 = v327;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v348 + 56))(v109 + *(int *)(v327 + 24), 1, 1, v94);
    v111 = (uint64_t *)(v109 + *(int *)(v110 + 20));
    *v111 = v102;
    v111[1] = v103;
    *(_BYTE *)(v109 + *(int *)(v110 + 28)) = 1;
    type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
    v112 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v113 = v106;
    v114 = objc_msgSend(v112, sel_initWithContext_, v113);
    v115 = (void *)sub_1CB84603C();
    objc_msgSend(v114, sel_setId_, v115);

    v116 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    objc_msgSend(v114, sel_setQueryEntityName_, v116);

    objc_msgSend(v114, sel_setTopCandidate_, v107);
    objc_msgSend(v107, sel_setTopCandidateForUniversalRuntimeSuggestion_, v114);
    objc_msgSend(v114, sel_setNeedsDisambiguation_, 1);

    sub_1CB7BAB18(v109, type metadata accessor for UniversalRuntimeSuggestion);
    LOBYTE(v116) = sub_1CB801C2C();

    if ((v116 & 1) == 0)
    {
      sub_1CB7BAB18((uint64_t)v55, type metadata accessor for UniversalCandidate);
      return swift_storeEnumTagMultiPayload();
    }
    v117 = v334;
    sub_1CB80A090((uint64_t)v55, v334 + *(int *)(v319 + 24), type metadata accessor for UniversalCandidate);
    *(_QWORD *)(v117 + 8) = v322;
    *(_BYTE *)v117 = 1;
    goto LABEL_124;
  }
  v344 = v35;
  v329 = v4;
  v340 = v75;
  v76 = objc_msgSend(v340, sel_candidates);
  v77 = MEMORY[0x1E0DEE9D8];
  v297 = v24;
  if (v76)
  {
    v356 = MEMORY[0x1E0DEE9D8];
    v78 = v76;
    sub_1CB846C6C();

    sub_1CB7762AC(&qword_1ED88BBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    sub_1CB846E4C();
    while (v355)
    {
      sub_1CB777CAC(&v354, &v353);
      sub_1CB778000((uint64_t)&v353, (uint64_t)v351);
      type metadata accessor for UniversalCandidateCoreDataRecord();
      if ((swift_dynamicCast() & 1) == 0)
        v352 = 0;
      v79 = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v353);
      if (v352)
      {
        MEMORY[0x1D179EDF8](v79);
        if (*(_QWORD *)((v356 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v356 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CB846AA4();
        sub_1CB846AD4();
        sub_1CB846A74();
      }
      sub_1CB846E4C();
    }
    (*(void (**)(char *, uint64_t))(v336.n128_u64[0] + 8))(v71, v69);
    v85 = v356;

    if (v85 >> 62)
    {
      swift_bridgeObjectRetain();
      v86 = sub_1CB847044();
      if (v86)
        goto LABEL_20;
    }
    else
    {
      v86 = *(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v86)
      {
LABEL_20:
        if (v86 < 1)
        {
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
          goto LABEL_188;
        }
        v87 = 0;
        v77 = MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v85 & 0xC000000000000001) != 0)
            v88 = (id)MEMORY[0x1D179F320](v87, v85);
          else
            v88 = *(id *)(v85 + 8 * v87 + 32);
          v89 = v88;
          sub_1CB7DCBDC(v52);

          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v348 + 48))(v52, 1, v343) == 1)
          {
            sub_1CB785B54((uint64_t)v52, &qword_1EF99D8F8);
          }
          else
          {
            v90 = v345;
            sub_1CB80A090((uint64_t)v52, v345, type metadata accessor for UniversalCandidate);
            sub_1CB80A090(v90, (uint64_t)v349, type metadata accessor for UniversalCandidate);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              v91 = v77;
            else
              v91 = sub_1CB790498(0, *(_QWORD *)(v77 + 16) + 1, 1, v77);
            v93 = *(_QWORD *)(v91 + 16);
            v92 = *(_QWORD *)(v91 + 24);
            if (v93 >= v92 >> 1)
              v91 = sub_1CB790498(v92 > 1, v93 + 1, 1, v91);
            *(_QWORD *)(v91 + 16) = v93 + 1;
            v77 = v91;
            sub_1CB80A090((uint64_t)v349, v91+ ((*(unsigned __int8 *)(v348 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v348 + 80))+ *(_QWORD *)(v348 + 72) * v93, type metadata accessor for UniversalCandidate);
          }
          ++v87;
        }
        while (v86 != v87);
        goto LABEL_41;
      }
    }
    v77 = MEMORY[0x1E0DEE9D8];
LABEL_41:
    swift_bridgeObjectRelease_n();
  }
  v118 = *(_QWORD *)(v77 + 16);
  v85 = (unint64_t)v340;
  v119 = v347;
  if (!v118)
  {
    swift_bridgeObjectRelease();
    v192 = v335;
    sub_1CB846078();
    v193 = v343;
    *(_QWORD *)(v192 + *(int *)(v343 + 20)) = v331;
    *(_QWORD *)(v192 + *(int *)(v193 + 24)) = 0x3FC999999999999ALL;
    *(_QWORD *)(v192 + *(int *)(v193 + 28)) = 0;
    v194 = *(void **)(v329 + 24);
    swift_retain();
    v195 = v194;
    v196 = sub_1CB7DC7AC((uint64_t)v195);

    if (!v196)
    {
      sub_1CB7BAB18(v192, type metadata accessor for UniversalCandidate);
      swift_bridgeObjectRelease();
      v216 = v340;

      return swift_storeEnumTagMultiPayload();
    }
    v197 = v340;
    objc_msgSend(v340, sel_addCandidatesObject_, v196);
    v198 = (uint64_t)v328;
    sub_1CB846078();
    v199 = v327;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v348 + 56))(v198 + *(int *)(v327 + 24), 1, 1, v193);
    v200 = (uint64_t *)(v198 + *(int *)(v199 + 20));
    v201 = v325;
    *v200 = v326;
    v200[1] = v201;
    *(_BYTE *)(v198 + *(int *)(v199 + 28)) = 1;
    type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
    v202 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v203 = v195;
    v204 = objc_msgSend(v202, sel_initWithContext_, v203);
    v205 = (void *)sub_1CB84603C();
    objc_msgSend(v204, sel_setId_, v205);

    v206 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    objc_msgSend(v204, sel_setQueryEntityName_, v206);

    objc_msgSend(v204, sel_setTopCandidate_, v196);
    objc_msgSend(v196, sel_setTopCandidateForUniversalRuntimeSuggestion_, v204);
    objc_msgSend(v204, sel_setNeedsDisambiguation_, 1);

    sub_1CB7BAB18(v198, type metadata accessor for UniversalRuntimeSuggestion);
    LOBYTE(v206) = sub_1CB801C2C();

    if ((v206 & 1) == 0)
    {
      sub_1CB7BAB18(v335, type metadata accessor for UniversalCandidate);
      return swift_storeEnumTagMultiPayload();
    }
    v207 = v334;
    sub_1CB80A090(v335, v334 + *(int *)(v319 + 24), type metadata accessor for UniversalCandidate);
    *(_QWORD *)(v207 + 8) = v322;
    *(_BYTE *)v207 = 1;
LABEL_124:
    swift_storeEnumTagMultiPayload();
    return swift_retain();
  }
  v345 = v77;
  *(_QWORD *)&v354 = v322;
  v299 = (uint64_t *)sub_1CB8043CC();
  v120 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v348 + 56);
  v314 = 1;
  v295 = v120;
  v121 = ((__n128 (*)(uint64_t, uint64_t, uint64_t, uint64_t))v120)(v332, 1, 1, v343);
  v298 = 0;
  v122 = 0;
  v123 = type metadata accessor for UniversalCandidate;
  v124 = 0.0;
  v121.n128_u64[0] = 134218242;
  v336 = v121;
  v335 = MEMORY[0x1E0DEE9B8] + 8;
  v125 = v344;
LABEL_44:
  v126 = v345;
  if (v122 != v118)
  {
LABEL_45:
    if (v122 < *(_QWORD *)(v126 + 16))
    {
      v127 = (uint64_t)&v339[*(int *)(v125 + 48)];
      sub_1CB809FF4(v126+ ((*(unsigned __int8 *)(v348 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v348 + 80))+ *(_QWORD *)(v348 + 72) * v122, v127, v123);
      v128 = (uint64_t)v119 + *(int *)(v125 + 48);
      *v119 = v122;
      sub_1CB80A090(v127, v128, v123);
      v129 = 0;
      ++v122;
      goto LABEL_48;
    }
    __break(1u);
    goto LABEL_185;
  }
  while (1)
  {
    v129 = 1;
    v122 = v118;
LABEL_48:
    v130 = v346;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v346 + 56))(v119, v129, 1, v125);
    sub_1CB7D836C((uint64_t)v119, (uint64_t)v41, &qword_1EF9A0E98);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v130 + 48))(v41, 1, v125) == 1)
      break;
    v131 = *v41;
    sub_1CB80A090((uint64_t)v41 + *(int *)(v125 + 48), (uint64_t)v350, v123);
    v132 = objc_msgSend((id)v85, sel_candidates);
    if (!v132
      || (v133 = v132,
          v134 = objc_msgSend(v132, sel_objectAtIndex_, v131),
          v133,
          sub_1CB846EB8(),
          swift_unknownObjectRelease(),
          type metadata accessor for UniversalCandidateCoreDataRecord(),
          (swift_dynamicCast() & 1) == 0))
    {
      v349 = (char *)v122;
      v135 = v123;
      v136 = v41;
      v137 = v118;
      if (qword_1EF99C420 != -1)
        swift_once();
      v138 = sub_1CB8466D8();
      __swift_project_value_buffer(v138, (uint64_t)qword_1EF9A0E60);
      v139 = (id)v85;
      v140 = sub_1CB8466C0();
      v141 = sub_1CB846C90();
      if (os_log_type_enabled(v140, v141))
      {
        v142 = swift_slowAlloc();
        v143 = swift_slowAlloc();
        *(_QWORD *)&v354 = v143;
        *(_DWORD *)v142 = v336.n128_u32[0];
        *(_QWORD *)(v142 + 4) = v131;
        *(_WORD *)(v142 + 12) = 2080;
        v144 = objc_msgSend(v139, sel_id);
        if (v144)
        {
          v145 = v144;
          v146 = v337;
          sub_1CB846054();

          v147 = 0;
        }
        else
        {
          v147 = 1;
          v146 = v337;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v342 + 56))(v146, v147, 1, v341);
        v148 = sub_1CB8468DC();
        *(_QWORD *)(v142 + 14) = sub_1CB775A54(v148, v149, (uint64_t *)&v354);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CB771000, v140, v141, "UniversalSuggestionsCoreData: Could not retrieve the candidate record at position %ld in suggestion record with ID %s", (uint8_t *)v142, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v143, -1, -1);
        MEMORY[0x1D179FE84](v142, -1, -1);

        v123 = v135;
        sub_1CB7BAB18((uint64_t)v350, v135);
        v85 = (unint64_t)v340;
      }
      else
      {

        v123 = v135;
        sub_1CB7BAB18((uint64_t)v350, v135);
      }
      v119 = v347;
      v126 = v345;
      v118 = v137;
      v41 = v136;
      v122 = (unint64_t)v349;
      goto LABEL_60;
    }
    v296 = (id)v353;
    v85 = *(_QWORD *)((char *)v350 + *(int *)(v343 + 20));
    swift_retain();
    v150 = sub_1CB8462E8();
    v294 = v118;
    if (!v150)
      goto LABEL_72;
    v151 = v150;
    v152 = v150 & 0xFFFFFFFFFFFFFF8;
    if (v150 >> 62)
    {
      if (!sub_1CB847044())
      {
LABEL_71:
        swift_bridgeObjectRelease();
LABEL_72:
        v293 = 0;
LABEL_73:
        v349 = 0;
        goto LABEL_74;
      }
    }
    else if (!*(_QWORD *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_71;
    }
    if ((v151 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1D179F320](0, v151);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v153 = *(_QWORD *)(v152 + 16);
      swift_bridgeObjectRelease();
      if (!v153)
        goto LABEL_186;
    }
    v293 = sub_1CB7B6A8C();
    if (!v154)
      goto LABEL_73;
    v349 = (char *)v154;
    *(_QWORD *)&v354 = v85;
    v155 = sub_1CB7B6DD8();
    if (v156)
    {
      *(_QWORD *)&v354 = v155;
      *((_QWORD *)&v354 + 1) = v156;
      swift_bridgeObjectRetain();
      sub_1CB846954();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v349 = (char *)*((_QWORD *)&v354 + 1);
      v293 = v354;
    }
LABEL_74:
    swift_retain();
    v157 = sub_1CB8462E8();
    v158 = v157;
    if (!v157)
    {
      swift_release();
LABEL_88:
      v162 = 0;
      goto LABEL_89;
    }
    if (v157 >> 62)
    {
      if (!sub_1CB847044())
      {
LABEL_87:
        swift_release();
        swift_bridgeObjectRelease();
        v158 = 0;
        goto LABEL_88;
      }
    }
    else if (!*(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_87;
    }
    if ((v158 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1D179F320](0, v158);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v160 = v331;
    }
    else
    {
      v159 = *(_QWORD *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      v160 = v331;
      if (!v159)
        goto LABEL_187;
    }
    v158 = sub_1CB7B6A8C();
    v162 = v161;
    if (v161)
    {
      *(_QWORD *)&v354 = v160;
      v163 = sub_1CB7B6DD8();
      if (v164)
      {
        *(_QWORD *)&v354 = v163;
        *((_QWORD *)&v354 + 1) = v164;
        swift_bridgeObjectRetain();
        sub_1CB846954();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v162 = (char *)*((_QWORD *)&v354 + 1);
        v158 = v354;
      }
      else
      {
        swift_release();
      }
      v119 = v347;
    }
    else
    {
      swift_release();
      v119 = v347;
    }
LABEL_89:
    if (v349)
    {
      if (!v162)
      {
        swift_release();
LABEL_97:
        swift_bridgeObjectRelease();
LABEL_98:
        v165 = v123;
        if (qword_1EF99C410 != -1)
          swift_once();
        v166 = *(double *)&qword_1EF9A0E58;
        v167 = v296;
        objc_msgSend(v296, sel_score);
        v169 = v168 + -0.2;
        if (v166 > v169)
          v169 = v166;
        objc_msgSend(v167, sel_setScore_, v169);
        goto LABEL_107;
      }
      if (v293 == v158 && v349 == v162)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v170 = sub_1CB8471A0();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v170 & 1) == 0)
          goto LABEL_98;
      }
    }
    else
    {
      swift_release();
      if (v162)
        goto LABEL_97;
    }
    v165 = v123;
    v171 = v296;
    objc_msgSend(v296, sel_score);
    v173 = v172 + 0.2;
    if (v173 > 1.0)
      v173 = 1.0;
    objc_msgSend(v171, sel_setScore_, v173);
    v174 = v305;
    sub_1CB7DCBDC(v305);
    v175 = v332;
    sub_1CB785B54(v332, &qword_1EF99D8F8);
    v176 = v175;
    v167 = v171;
    sub_1CB7D836C((uint64_t)v174, v176, &qword_1EF99D8F8);
LABEL_107:
    v85 = (unint64_t)v340;
    v118 = v294;
    v177 = v315;
    sub_1CB846000();
    sub_1CB845FF4();
    v179 = v178;
    (*(void (**)(char *, uint64_t))(v316 + 8))(v177, v317);
    objc_msgSend(v167, sel_setLastUpdated_, v179);
    objc_msgSend((id)v85, sel_replaceObjectInCandidatesAtIndex_withObject_, v131, v167);
    objc_msgSend(v167, sel_score);
    if ((v314 & 1) != 0)
    {
      v124 = v180;
      v181 = v298;
      v123 = v165;
      v125 = v344;
      goto LABEL_115;
    }
    v123 = v165;
    if (v124 < v180)
    {
      objc_msgSend(v167, sel_score);
      v124 = v182;
      v181 = v298;
      v125 = v344;
      if (v298)
      {
        objc_msgSend(v298, sel_setTopCandidateForUniversalRuntimeSuggestion_, 0);
LABEL_115:

      }
      sub_1CB7BAB18((uint64_t)v350, v123);
      v314 = 0;
      v298 = v296;
      goto LABEL_44;
    }
    sub_1CB7BAB18((uint64_t)v350, v165);

    v314 = 0;
    v126 = v345;
LABEL_60:
    v125 = v344;
    if (v122 != v118)
      goto LABEL_45;
  }
  swift_bridgeObjectRelease();
  v183 = v324;
  sub_1CB785AC8(v332, v324, &qword_1EF99D8F8);
  v184 = (int *)v343;
  v350 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v348 + 48);
  if (v350(v183, 1, v343) != 1)
  {
    v208 = v183;
    v209 = v311;
    sub_1CB80A090(v208, v311, type metadata accessor for UniversalCandidate);
    sub_1CB80A090(v209, v330, type metadata accessor for UniversalCandidate);
    v41 = v299;
    v191 = v320;
    v190 = v325;
    v210 = v298;
    if (!v298)
    {
LABEL_174:
      swift_bridgeObjectRelease();
      v188 = 0;
      goto LABEL_175;
    }
LABEL_126:
    v188 = v210;
    goto LABEL_127;
  }
  sub_1CB785B54(v183, &qword_1EF99D8F8);
  v185 = v323;
  sub_1CB846078();
  *(_QWORD *)(v185 + v184[5]) = v331;
  *(_QWORD *)(v185 + v184[6]) = 0x3FC999999999999ALL;
  *(_QWORD *)(v185 + v184[7]) = 0;
  sub_1CB809FF4(v185, v330, type metadata accessor for UniversalCandidate);
  v186 = *(void **)(v329 + 24);
  swift_retain();
  v187 = v186;
  v188 = sub_1CB7DC7AC((uint64_t)v187);

  v41 = v299;
  if (!v188)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF99C420 == -1)
    {
LABEL_134:
      v228 = sub_1CB8466D8();
      __swift_project_value_buffer(v228, (uint64_t)qword_1EF9A0E60);
      v229 = (id)v85;
      v230 = sub_1CB8466C0();
      v231 = sub_1CB846C90();
      if (os_log_type_enabled(v230, v231))
      {
        v232 = (uint8_t *)swift_slowAlloc();
        v233 = swift_slowAlloc();
        *(_QWORD *)&v354 = v233;
        *(_DWORD *)v232 = 136315138;
        v234 = objc_msgSend(v229, sel_id);
        if (v234)
        {
          v235 = v234;
          v236 = v300;
          sub_1CB846054();

          v237 = 0;
        }
        else
        {
          v237 = 1;
          v236 = v300;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v342 + 56))(v236, v237, 1, v341);
        v290 = sub_1CB8468DC();
        *(_QWORD *)&v353 = sub_1CB775A54(v290, v291, (uint64_t *)&v354);
        sub_1CB846E58();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CB771000, v230, v231, "UniversalSuggestionsCoreData: Could not add candidate to suggestion record with ID %s", v232, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v233, -1, -1);
        MEMORY[0x1D179FE84](v232, -1, -1);

      }
      else
      {

      }
      sub_1CB7BAB18(v323, type metadata accessor for UniversalCandidate);
      v289 = v330;
      goto LABEL_182;
    }
LABEL_188:
    swift_once();
    goto LABEL_134;
  }
  objc_msgSend((id)v85, sel_addCandidatesObject_, v188);
  objc_msgSend(v188, sel_score);
  v190 = v325;
  if ((v314 & 1) != 0)
  {

    sub_1CB7BAB18(v323, type metadata accessor for UniversalCandidate);
    v191 = v320;
    goto LABEL_127;
  }
  v191 = v320;
  v210 = v298;
  if (v124 >= v189)
  {
    objc_msgSend(v188, sel_setTopCandidateForUniversalRuntimeSuggestion_, 0);

    sub_1CB7BAB18(v323, type metadata accessor for UniversalCandidate);
    if (!v210)
      goto LABEL_174;
    goto LABEL_126;
  }
  objc_msgSend(v188, sel_score);
  if (v210)
  {
    objc_msgSend(v210, sel_setTopCandidateForUniversalRuntimeSuggestion_, 0);

  }
  sub_1CB7BAB18(v323, type metadata accessor for UniversalCandidate);
LABEL_127:
  v211 = (char *)v188;
  if (!v41)
  {
    v217 = (uint64_t)v328;
    sub_1CB846078();
    v218 = v190;
    v219 = v327;
    v220 = 1;
    v295(v217 + *(int *)(v327 + 24), 1, 1, v184);
    v221 = (uint64_t *)(v217 + *(int *)(v219 + 20));
    *v221 = v326;
    v221[1] = v218;
    *(_BYTE *)(v217 + *(int *)(v219 + 28)) = 1;
    v222 = *(void **)(v329 + 24);
    type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
    v223 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v224 = v222;
    v225 = objc_msgSend(v223, sel_initWithContext_, v224);
    v226 = (void *)sub_1CB84603C();
    objc_msgSend(v225, sel_setId_, v226);

    v227 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    objc_msgSend(v225, sel_setQueryEntityName_, v227);

    objc_msgSend(v225, sel_setTopCandidate_, v211);
    objc_msgSend(v211, sel_setTopCandidateForUniversalRuntimeSuggestion_, v225);
    objc_msgSend(v225, sel_setNeedsDisambiguation_, 1);

    sub_1CB7BAB18(v217, type metadata accessor for UniversalRuntimeSuggestion);
    goto LABEL_176;
  }
  v212 = v41;
  swift_bridgeObjectRelease();
  v213 = objc_msgSend(v211, sel_id);
  if (v213)
  {
    v214 = v213;
    sub_1CB846054();

    v215 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v342 + 56);
    v215(v191, 0, 1, v341);
  }
  else
  {
    v215 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v342 + 56);
    v215(v191, 1, 1, v341);
  }
  v238 = v310;
  v239 = objc_msgSend(v212, sel_topCandidate);
  v349 = v211;
  if (v239)
  {
    v240 = v239;
    v241 = objc_msgSend(v239, sel_id);

    if (v241)
    {
      v242 = (uint64_t)v303;
      sub_1CB846054();

      v243 = 0;
      v244 = v312;
    }
    else
    {
      v243 = 1;
      v244 = v312;
      v242 = (uint64_t)v303;
    }
    v245 = v341;
    v215(v242, v243, 1, v341);
    sub_1CB7D836C(v242, v244, &qword_1ED88D570);
  }
  else
  {
    v244 = v312;
    v245 = v341;
    v215(v312, 1, 1, v341);
  }
  v246 = v238 + *(int *)(v318 + 48);
  sub_1CB785AC8(v191, v238, &qword_1ED88D570);
  sub_1CB785AC8(v244, v246, &qword_1ED88D570);
  v247 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v342 + 48);
  if (v247(v238, 1, v245) == 1)
  {
    sub_1CB785B54(v244, &qword_1ED88D570);
    sub_1CB785B54(v191, &qword_1ED88D570);
    v248 = v247(v246, 1, v245);
    v249 = v349;
    p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
    if (v248 == 1)
    {
      sub_1CB785B54(v238, &qword_1ED88D570);
      v251 = v321;
      goto LABEL_157;
    }
LABEL_154:
    sub_1CB785B54(v238, &qword_1EF99EF78);
    v251 = v321;
    goto LABEL_156;
  }
  v252 = (uint64_t)v297;
  sub_1CB785AC8(v238, (uint64_t)v297, &qword_1ED88D570);
  if (v247(v246, 1, v245) == 1)
  {
    sub_1CB785B54(v312, &qword_1ED88D570);
    sub_1CB785B54(v191, &qword_1ED88D570);
    (*(void (**)(uint64_t, uint64_t))(v342 + 8))(v252, v245);
    v249 = v349;
    p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
    goto LABEL_154;
  }
  v253 = v252;
  v254 = v342;
  v255 = v301;
  (*(void (**)(char *, uint64_t, uint64_t))(v342 + 32))(v301, v246, v245);
  sub_1CB7762AC((unint64_t *)&qword_1ED88BBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  v256 = sub_1CB846864();
  v257 = *(void (**)(char *, uint64_t))(v254 + 8);
  v257(v255, v245);
  sub_1CB785B54(v312, &qword_1ED88D570);
  sub_1CB785B54(v320, &qword_1ED88D570);
  v257((char *)v253, v245);
  sub_1CB785B54(v310, &qword_1ED88D570);
  v251 = v321;
  v249 = v349;
  p_base_prots = &SupportedLocalesPListStore.base_prots;
  if ((v256 & 1) == 0)
  {
LABEL_156:
    objc_msgSend(v212, sel_setTopCandidate_, v249);
    objc_msgSend(v249, sel_setTopCandidateForUniversalRuntimeSuggestion_, v212);
    objc_msgSend(v212, sel_setNeedsDisambiguation_, 1);
  }
LABEL_157:
  v258 = v341;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v342 + 16))(v251, v330, v341);
  v215(v251, 0, 1, v258);
  v259 = objc_msgSend(v212, (SEL)p_base_prots[413]);
  if (v259)
  {
    v260 = v259;
    v261 = objc_msgSend(v259, sel_id);

    if (v261)
    {
      v262 = (uint64_t)v304;
      sub_1CB846054();

      v263 = 0;
    }
    else
    {
      v263 = 1;
      v262 = (uint64_t)v304;
    }
    v258 = v341;
    v215(v262, v263, 1, v341);
    v265 = v313;
    sub_1CB7D836C(v262, v313, &qword_1ED88D570);
  }
  else
  {
    v264 = v313;
    v215(v313, 1, 1, v258);
    v265 = v264;
  }
  v266 = v306;
  v267 = v306 + *(int *)(v318 + 48);
  v268 = v321;
  sub_1CB785AC8(v321, v306, &qword_1ED88D570);
  sub_1CB785AC8(v265, v267, &qword_1ED88D570);
  v269 = v247(v266, 1, v258) == 1;
  v270 = v265;
  v271 = v258;
  if (v269)
  {
    sub_1CB785B54(v270, &qword_1ED88D570);
    sub_1CB785B54(v268, &qword_1ED88D570);
    v272 = v247(v267, 1, v258);
    v273 = v266;
    v41 = v299;
    v274 = v349;
    if (v272 != 1)
      goto LABEL_169;
    sub_1CB785B54(v266, &qword_1ED88D570);
LABEL_171:
    v220 = objc_msgSend(v212, sel_needsDisambiguation);

    goto LABEL_176;
  }
  v275 = v302;
  sub_1CB785AC8(v266, v302, &qword_1ED88D570);
  v276 = v247(v267, 1, v258);
  v273 = v266;
  if (v276 != 1)
  {
    v277 = v342;
    v278 = v301;
    (*(void (**)(char *, uint64_t, uint64_t))(v342 + 32))(v301, v267, v271);
    sub_1CB7762AC((unint64_t *)&qword_1ED88BBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
    v279 = sub_1CB846864();
    v280 = v271;
    v281 = *(void (**)(char *, uint64_t))(v277 + 8);
    v281(v278, v280);
    sub_1CB785B54(v313, &qword_1ED88D570);
    sub_1CB785B54(v321, &qword_1ED88D570);
    v281((char *)v275, v280);
    sub_1CB785B54(v266, &qword_1ED88D570);
    v41 = v299;
    v274 = v349;
    if ((v279 & 1) == 0)
      goto LABEL_172;
    goto LABEL_171;
  }
  sub_1CB785B54(v313, &qword_1ED88D570);
  sub_1CB785B54(v321, &qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t))(v342 + 8))(v275, v271);
  v41 = v299;
  v274 = v349;
LABEL_169:
  sub_1CB785B54(v273, &qword_1EF99EF78);
LABEL_172:

LABEL_175:
  v220 = 1;
LABEL_176:
  if ((sub_1CB801C2C() & 1) != 0)
  {
    v282 = (uint64_t)v308;
    v283 = v330;
    sub_1CB809FF4(v330, (uint64_t)&v308[*(int *)(v319 + 24)], type metadata accessor for UniversalCandidate);
    *(_QWORD *)(v282 + 8) = v322;
    *(_BYTE *)v282 = v220;
    v284 = v332;
    v285 = v307;
    sub_1CB785AC8(v332, v307, &qword_1EF99D8F8);
    v350(v285, 1, v343);
    swift_retain();
    sub_1CB785B54(v285, &qword_1EF99D8F8);
    v286 = v309;
    sub_1CB809FF4(v282, v309, type metadata accessor for UniversalSuggestionCandidate);
    swift_storeEnumTagMultiPayload();
    v287 = v340;

    sub_1CB7BAB18(v282, type metadata accessor for UniversalSuggestionCandidate);
    sub_1CB7BAB18(v283, type metadata accessor for UniversalCandidate);
    sub_1CB785B54(v284, &qword_1EF99D8F8);
    return sub_1CB80A090(v286, v334, (uint64_t (*)(_QWORD))type metadata accessor for UniversalSuggestionCandidateDonationResult);
  }
  v288 = v340;

  v289 = v330;
LABEL_182:
  sub_1CB7BAB18(v289, type metadata accessor for UniversalCandidate);
  sub_1CB785B54(v332, &qword_1EF99D8F8);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1CB8073F4()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v1 = *(id *)(v0 + 24);
  sub_1CB846DA4();

  return v3;
}

void sub_1CB80745C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  void *v55;
  void *v56;
  id v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  double v73;
  __objc2_prot_list **p_base_prots;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t, uint64_t);
  int v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, uint64_t, uint64_t);
  int v103;
  uint64_t v104;
  double v105;
  double v106;
  double v107;
  uint64_t v108;
  char *v109;
  char v110;
  char v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  void (*v120)(char *, uint64_t);
  double v121;
  char *v122;
  double v123;
  double v124;
  double v125;
  void *v126;
  double v127;
  void *v128;
  id v129;
  void *v130;
  void (*v131)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v132;
  id v133;
  id v134;
  void *v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)(uint64_t, uint64_t, uint64_t);
  int v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  void *v152;
  id v153;
  int v154;
  char *v155;
  void *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  id v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  unint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  id v181;
  uint64_t v182;
  int v183;
  char v184[8];
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  unint64_t v189;

  v171 = sub_1CB846018();
  v170 = *(_QWORD *)(v171 - 8);
  MEMORY[0x1E0C80A78](v171);
  v169 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_1CB846084();
  v182 = *(_QWORD *)(v177 - 8);
  MEMORY[0x1E0C80A78](v177);
  v163 = (char *)&v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EF78);
  v7 = MEMORY[0x1E0C80A78](v176);
  v9 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v174 = (uint64_t)&v151 - v11;
  MEMORY[0x1E0C80A78](v10);
  v165 = (uint64_t)&v151 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v14 = MEMORY[0x1E0C80A78](v13);
  v157 = (uint64_t)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v158 = (char *)&v151 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v159 = (uint64_t)&v151 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v178 = (uint64_t)&v151 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v162 = (uint64_t)&v151 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v173 = (uint64_t)&v151 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v172 = (uint64_t)&v151 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v164 = (uint64_t)&v151 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v175 = (uint64_t)&v151 - v31;
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v151 - v32;
  v34 = type metadata accessor for UniversalSuggestionSurfaced(0);
  MEMORY[0x1E0C80A78](v34);
  v180 = (char *)&v151 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1CB845E8C();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v39 = (char *)&v151 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = *a2;
  sub_1CB803CC8(a1);
  if (!v40)
  {
    if (qword_1EF99C420 != -1)
      swift_once();
    v43 = sub_1CB8466D8();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EF9A0E60);
    v44 = sub_1CB8466C0();
    v45 = sub_1CB846C84();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_1CB771000, v44, v45, "UniversalSuggestionsCoreData: Unable to find candidate record. Skipping feedback update.", v46, 2u);
      MEMORY[0x1D179FE84](v46, -1, -1);
    }

    return;
  }
  v41 = v40;
  v42 = a1 + *(int *)(v34 + 20);
  if ((*(_BYTE *)(v42 + 8) & 1) == 0)
    objc_msgSend(v40, sel_setLastSurfaced_, *(double *)v42);
  if (v183 == 2)
  {
    sub_1CB801C2C();

    return;
  }
  v47 = objc_msgSend(v41, sel_candidateForUniversalSuggestion);
  if (!v47)
  {
    if (qword_1EF99C420 != -1)
      swift_once();
    v65 = sub_1CB8466D8();
    __swift_project_value_buffer(v65, (uint64_t)qword_1EF9A0E60);
    v66 = sub_1CB8466C0();
    v67 = sub_1CB846C84();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v68 = 0;
      _os_log_impl(&dword_1CB771000, v66, v67, "UniversalSuggestionsCoreData: Unable to find corresponding suggestion record. Skipping feedback update.", v68, 2u);
      MEMORY[0x1D179FE84](v68, -1, -1);
    }

    return;
  }
  v48 = v47;
  v160 = v33;
  v179 = a1;
  v155 = v9;
  v49 = objc_msgSend(v47, sel_queryEntityName);
  if (!v49)
    goto LABEL_24;
  v50 = v49;
  v51 = sub_1CB8468A0();
  v156 = v48;
  v53 = v52;

  sub_1CB8044F8(v51, v53);
  v54 = v183;
  v56 = v55;
  v48 = v156;
  swift_bridgeObjectRelease();
  v153 = v56;
  if (!v56)
  {
LABEL_24:
    if (qword_1EF99C420 != -1)
      swift_once();
    v61 = sub_1CB8466D8();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EF9A0E60);
    v62 = sub_1CB8466C0();
    v63 = sub_1CB846C84();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v64 = 0;
      _os_log_impl(&dword_1CB771000, v62, v63, "UniversalSuggestionsCoreData: Unable to find runtime suggestion record to update. Skipping feedback update.", v64, 2u);
      MEMORY[0x1D179FE84](v64, -1, -1);
    }

    return;
  }
  v57 = objc_msgSend(v48, sel_candidates);
  v58 = MEMORY[0x1E0DEE9D8];
  v152 = v41;
  v151 = v2;
  if (v57)
  {
    v189 = MEMORY[0x1E0DEE9D8];
    v59 = v57;
    sub_1CB846C6C();

    sub_1CB7762AC(&qword_1ED88BBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    sub_1CB846E4C();
    while (v188)
    {
      sub_1CB777CAC(&v187, &v186);
      sub_1CB778000((uint64_t)&v186, (uint64_t)v184);
      type metadata accessor for UniversalCandidateCoreDataRecord();
      if ((swift_dynamicCast() & 1) == 0)
        v185 = 0;
      v60 = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v186);
      if (v185)
      {
        MEMORY[0x1D179EDF8](v60);
        if (*(_QWORD *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CB846AA4();
        sub_1CB846AD4();
        sub_1CB846A74();
      }
      sub_1CB846E4C();
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    v58 = v189;

    v41 = v152;
    v48 = v156;
    v54 = v183;
  }
  v69 = v178;
  v168 = v58;
  if (v58 >> 62)
  {
    swift_bridgeObjectRetain();
    v58 = v168;
    v70 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v70)
      goto LABEL_37;
LABEL_112:
    swift_bridgeObjectRelease();
    v132 = 0;
    v133 = v153;
    goto LABEL_113;
  }
  v70 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v70)
    goto LABEL_112;
LABEL_37:
  if (v70 < 1)
  {
    __break(1u);
    return;
  }
  v181 = 0;
  v71 = 0;
  v166 = v58 & 0xC000000000000001;
  LODWORD(v72) = 1;
  v73 = 0.0;
  p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
  v75 = (uint64_t)v180;
  v76 = v177;
  v167 = v70;
  do
  {
    if (v166)
      v77 = (id)MEMORY[0x1D179F320](v71, v58);
    else
      v77 = *(id *)(v58 + 8 * v71 + 32);
    v78 = v77;
    sub_1CB809FF4(v179, v75, type metadata accessor for UniversalSuggestionSurfaced);
    if (v54)
    {
      sub_1CB7BAB18(v75, type metadata accessor for UniversalSuggestionSurfaced);
      if (v54 != 1)
        goto LABEL_78;
      LODWORD(v177) = (_DWORD)v72;
      v79 = objc_msgSend(v78, sel_id);
      if (v79)
      {
        v80 = v79;
        v81 = v172;
        sub_1CB846054();

        v82 = v182;
        v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v182 + 56);
        v84 = v81;
        v85 = 0;
      }
      else
      {
        v82 = v182;
        v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v182 + 56);
        v81 = v172;
        v84 = v172;
        v85 = 1;
      }
      v98 = v76;
      v83(v84, v85, 1, v76);
      v99 = v173;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v173, v179, v76);
      v83(v99, 0, 1, v76);
      v100 = v174;
      v101 = v174 + *(int *)(v176 + 48);
      sub_1CB785AC8(v81, v174, &qword_1ED88D570);
      sub_1CB785AC8(v99, v101, &qword_1ED88D570);
      v102 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
      if (v102(v100, 1, v98) == 1)
      {
        sub_1CB785B54(v99, &qword_1ED88D570);
        sub_1CB785B54(v81, &qword_1ED88D570);
        v103 = v102(v101, 1, v98);
        v69 = v178;
        v76 = v98;
        v75 = (uint64_t)v180;
        if (v103 == 1)
        {
          sub_1CB785B54(v174, &qword_1ED88D570);
          p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
          goto LABEL_74;
        }
      }
      else
      {
        v104 = v162;
        sub_1CB785AC8(v100, v162, &qword_1ED88D570);
        if (v102(v101, 1, v98) != 1)
        {
          v117 = v104;
          v118 = v182;
          v119 = v163;
          (*(void (**)(char *, uint64_t, uint64_t))(v182 + 32))(v163, v101, v98);
          sub_1CB7762AC((unint64_t *)&qword_1ED88BBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
          v154 = sub_1CB846864();
          v120 = *(void (**)(char *, uint64_t))(v118 + 8);
          v120(v119, v98);
          sub_1CB785B54(v173, &qword_1ED88D570);
          sub_1CB785B54(v172, &qword_1ED88D570);
          v120((char *)v117, v98);
          sub_1CB785B54(v100, &qword_1ED88D570);
          v69 = v178;
          v76 = v98;
          v75 = (uint64_t)v180;
          p_base_prots = &SupportedLocalesPListStore.base_prots;
          if ((v154 & 1) != 0)
          {
LABEL_74:
            objc_msgSend(v78, (SEL)p_base_prots[403], v151, v152);
            v107 = v121 + 0.2;
            if (v107 > 1.0)
              v107 = 1.0;
LABEL_76:
            objc_msgSend(v78, sel_setScore_, v107);
            v122 = v169;
            sub_1CB846000();
            sub_1CB845FF4();
            v124 = v123;
            (*(void (**)(char *, uint64_t))(v170 + 8))(v122, v171);
            objc_msgSend(v78, sel_setLastUpdated_, v124);
            v54 = v183;
            goto LABEL_77;
          }
LABEL_62:
          if (qword_1EF99C410 != -1)
            swift_once();
          v105 = *(double *)&qword_1EF9A0E58;
          objc_msgSend(v78, sel_score, v151, v152);
          v107 = v106 + -0.2;
          if (v105 > v107)
            v107 = v105;
          goto LABEL_76;
        }
        sub_1CB785B54(v173, &qword_1ED88D570);
        sub_1CB785B54(v172, &qword_1ED88D570);
        (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v104, v98);
        v69 = v178;
        v76 = v98;
        v75 = (uint64_t)v180;
      }
      sub_1CB785B54(v174, &qword_1EF99EF78);
      p_base_prots = &SupportedLocalesPListStore.base_prots;
      goto LABEL_62;
    }
    v86 = objc_msgSend(v78, sel_id);
    LODWORD(v177) = (_DWORD)v72;
    v161 = v78;
    if (v86)
    {
      v87 = v86;
      v88 = (uint64_t)v160;
      sub_1CB846054();

      v89 = v182;
      v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v182 + 56);
      v90(v88, 0, 1, v76);
    }
    else
    {
      v89 = v182;
      v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v182 + 56);
      v88 = (uint64_t)v160;
      v90((uint64_t)v160, 1, 1, v76);
    }
    v91 = v175;
    v75 = (uint64_t)v180;
    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v175, v180, v76);
    v90(v91, 0, 1, v76);
    v92 = v165;
    v93 = v165 + *(int *)(v176 + 48);
    sub_1CB785AC8(v88, v165, &qword_1ED88D570);
    sub_1CB785AC8(v91, v93, &qword_1ED88D570);
    v94 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
    if (v94(v92, 1, v76) == 1)
    {
      sub_1CB785B54(v91, &qword_1ED88D570);
      sub_1CB785B54(v88, &qword_1ED88D570);
      sub_1CB7BAB18(v75, type metadata accessor for UniversalSuggestionSurfaced);
      v95 = v94(v93, 1, v76);
      v69 = v178;
      v78 = v161;
      if (v95 != 1)
        goto LABEL_54;
      sub_1CB785B54(v92, &qword_1ED88D570);
      p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
      LOBYTE(v72) = v177;
    }
    else
    {
      v96 = v164;
      sub_1CB785AC8(v92, v164, &qword_1ED88D570);
      v97 = v94(v93, 1, v76);
      v78 = v161;
      if (v97 == 1)
      {
        sub_1CB785B54(v175, &qword_1ED88D570);
        sub_1CB785B54((uint64_t)v160, &qword_1ED88D570);
        v75 = (uint64_t)v180;
        sub_1CB7BAB18((uint64_t)v180, type metadata accessor for UniversalSuggestionSurfaced);
        (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v96, v76);
        v69 = v178;
LABEL_54:
        sub_1CB785B54(v92, &qword_1EF99EF78);
        v54 = v183;
        p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
LABEL_77:
        LOBYTE(v72) = v177;
        goto LABEL_78;
      }
      v108 = v182;
      v109 = v163;
      (*(void (**)(char *, uint64_t, uint64_t))(v182 + 32))(v163, v93, v76);
      sub_1CB7762AC((unint64_t *)&qword_1ED88BBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v110 = sub_1CB846864();
      v72 = *(void (**)(char *, uint64_t))(v108 + 8);
      v72(v109, v76);
      sub_1CB785B54(v175, &qword_1ED88D570);
      sub_1CB785B54((uint64_t)v160, &qword_1ED88D570);
      v75 = (uint64_t)v180;
      sub_1CB7BAB18((uint64_t)v180, type metadata accessor for UniversalSuggestionSurfaced);
      v72((char *)v96, v76);
      sub_1CB785B54(v92, &qword_1ED88D570);
      v69 = v178;
      v54 = v183;
      p_base_prots = &SupportedLocalesPListStore.base_prots;
      LOBYTE(v72) = v177;
      if ((v110 & 1) == 0)
        goto LABEL_78;
    }
    v111 = (char)v72;
    if (qword_1EF99C410 != -1)
      swift_once();
    v112 = *(double *)&qword_1EF9A0E58;
    objc_msgSend(v78, (SEL)p_base_prots[403], v151, v152);
    v114 = v113 + -1.0;
    if (v112 > v114)
      v114 = v112;
    objc_msgSend(v78, sel_setScore_, v114);
    v72 = (void (*)(char *, uint64_t))v169;
    sub_1CB846000();
    sub_1CB845FF4();
    v116 = v115;
    (*(void (**)(_QWORD, uint64_t))(v170 + 8))(v72, v171);
    objc_msgSend(v78, sel_setLastUpdated_, v116);
    v54 = v183;
    LOBYTE(v72) = v111;
LABEL_78:
    objc_msgSend(v78, (SEL)p_base_prots[403], v151, v152);
    if ((v72 & 1) != 0)
    {
      v126 = v78;
      v78 = v181;
      v181 = v126;
      v73 = v125;
LABEL_84:
      v58 = v168;

      goto LABEL_85;
    }
    if (v73 >= v125)
    {
      objc_msgSend(v78, sel_setTopCandidateForUniversalRuntimeSuggestion_, 0);
      goto LABEL_84;
    }
    objc_msgSend(v78, (SEL)p_base_prots[403]);
    v73 = v127;
    if (v181)
    {
      v128 = v78;
      v78 = v181;
      objc_msgSend(v181, sel_setTopCandidateForUniversalRuntimeSuggestion_, 0);
      v181 = v128;
      goto LABEL_84;
    }
    v181 = v78;
    v58 = v168;
LABEL_85:
    LODWORD(v72) = 0;
    ++v71;
  }
  while (v167 != v71);
  swift_bridgeObjectRelease();
  if (v181)
  {
    v180 = (char *)v181;
    v129 = objc_msgSend(v180, sel_id);
    v41 = v152;
    v48 = v156;
    if (v129)
    {
      v130 = v129;
      sub_1CB846054();

      v131 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v182 + 56);
      v131(v69, 0, 1, v76);
    }
    else
    {
      v131 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v182 + 56);
      v131(v69, 1, 1, v76);
    }
    v134 = objc_msgSend(v153, sel_topCandidate);
    if (v134)
    {
      v135 = v134;
      v136 = objc_msgSend(v134, sel_id);

      if (v136)
      {
        v137 = (uint64_t)v158;
        sub_1CB846054();

        v138 = 0;
      }
      else
      {
        v138 = 1;
        v137 = (uint64_t)v158;
      }
      v131(v137, v138, 1, v76);
      v139 = v159;
      sub_1CB7D836C(v137, v159, &qword_1ED88D570);
    }
    else
    {
      v139 = v159;
      v131(v159, 1, 1, v76);
    }
    v140 = (uint64_t)v155;
    v141 = (uint64_t)&v155[*(int *)(v176 + 48)];
    v142 = v178;
    sub_1CB785AC8(v178, (uint64_t)v155, &qword_1ED88D570);
    sub_1CB785AC8(v139, v141, &qword_1ED88D570);
    v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v182 + 48);
    if (v143(v140, 1, v76) == 1)
    {
      sub_1CB785B54(v139, &qword_1ED88D570);
      sub_1CB785B54(v142, &qword_1ED88D570);
      v144 = v143(v141, 1, v76);
      v133 = v153;
      if (v144 == 1)
      {
        sub_1CB785B54((uint64_t)v155, &qword_1ED88D570);
        if (!v183)
          goto LABEL_106;
LABEL_109:
        objc_msgSend(v133, sel_setNeedsDisambiguation_, 0);

        goto LABEL_110;
      }
LABEL_105:
      sub_1CB785B54((uint64_t)v155, &qword_1EF99EF78);
      goto LABEL_106;
    }
    v145 = v157;
    sub_1CB785AC8(v140, v157, &qword_1ED88D570);
    if (v143(v141, 1, v76) == 1)
    {
      sub_1CB785B54(v159, &qword_1ED88D570);
      sub_1CB785B54(v178, &qword_1ED88D570);
      (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v145, v76);
      v133 = v153;
      goto LABEL_105;
    }
    v147 = v182;
    v148 = v163;
    (*(void (**)(char *, uint64_t, uint64_t))(v182 + 32))(v163, v141, v76);
    sub_1CB7762AC((unint64_t *)&qword_1ED88BBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
    v149 = sub_1CB846864();
    v150 = *(void (**)(char *, uint64_t))(v147 + 8);
    v150(v148, v76);
    sub_1CB785B54(v159, &qword_1ED88D570);
    sub_1CB785B54(v178, &qword_1ED88D570);
    v150((char *)v145, v76);
    sub_1CB785B54(v140, &qword_1ED88D570);
    v133 = v153;
    if (v183 && (v149 & 1) != 0)
      goto LABEL_109;
LABEL_106:
    v146 = v180;
    objc_msgSend(v133, sel_setTopCandidate_, v180);
    objc_msgSend(v146, sel_setTopCandidateForUniversalRuntimeSuggestion_, v133);
    objc_msgSend(v133, sel_setNeedsDisambiguation_, 1);

LABEL_110:
    v132 = v181;
  }
  else
  {
    v132 = 0;
    v41 = v152;
    v48 = v156;
    v133 = v153;
  }
LABEL_113:
  sub_1CB801C2C();

}

BOOL static UniversalSuggestionFeedbackAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1CB808A08@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v49 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UniversalCandidate(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v47 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v46 = (uint64_t)&v46 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E80);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UniversalRuntimeSuggestion(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  v20 = *(void **)(v2 + 24);
  v50 = v2;
  v51 = v19;
  v48 = v19;
  v21 = v20;
  sub_1CB846DA4();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1CB785B54((uint64_t)v14, &qword_1EF9A0E80);
    v22 = type metadata accessor for UniversalSuggestionCandidate(0);
    v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
    v24 = v49;
  }
  else
  {
    sub_1CB80A090((uint64_t)v14, (uint64_t)v18, type metadata accessor for UniversalRuntimeSuggestion);
    sub_1CB785AC8((uint64_t)&v18[*(int *)(v15 + 24)], (uint64_t)v6, &qword_1EF99D8F8);
    v25 = v18;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v38 = v46;
      sub_1CB80A090((uint64_t)v6, v46, type metadata accessor for UniversalCandidate);
      v39 = v47;
      sub_1CB80A090(v38, v47, type metadata accessor for UniversalCandidate);
      v40 = v18[*(int *)(v15 + 28)];
      v41 = v48;
      swift_retain();
      sub_1CB7BAB18((uint64_t)v18, type metadata accessor for UniversalRuntimeSuggestion);
      v42 = (char *)v49;
      *(_QWORD *)(v49 + 8) = v41;
      v43 = type metadata accessor for UniversalSuggestionCandidate(0);
      sub_1CB80A090(v39, (uint64_t)&v42[*(int *)(v43 + 24)], type metadata accessor for UniversalCandidate);
      *v42 = v40;
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 0, 1, v43);
    }
    sub_1CB785B54((uint64_t)v6, &qword_1EF99D8F8);
    v26 = v48;
    if (qword_1EF99C420 != -1)
      swift_once();
    v27 = sub_1CB8466D8();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EF9A0E60);
    swift_retain_n();
    v28 = sub_1CB8466C0();
    v29 = sub_1CB846C84();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v54 = v31;
      *(_DWORD *)v30 = 136315138;
      v52 = v26;
      swift_retain();
      v32 = sub_1CB7B696C();
      v34 = v33;
      swift_release();
      v52 = v32;
      v53 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EEC0);
      v35 = sub_1CB8468DC();
      v52 = sub_1CB775A54(v35, v36, &v54);
      sub_1CB846E58();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v28, v29, "UniversalSuggestionsCoreData: No top suggestion candidate for the specified entity with name %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v31, -1, -1);
      MEMORY[0x1D179FE84](v30, -1, -1);

      v37 = (uint64_t)v25;
    }
    else
    {
      swift_release_n();

      v37 = (uint64_t)v18;
    }
    sub_1CB7BAB18(v37, type metadata accessor for UniversalRuntimeSuggestion);
    v45 = v49;
    v22 = type metadata accessor for UniversalSuggestionCandidate(0);
    v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
    v24 = v45;
  }
  return v23(v24, 1, 1, v22);
}

uint64_t UniversalSuggestionsStoreCoreData.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t UniversalSuggestionsStoreCoreData.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_1CB808F08()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 24);
  type metadata accessor for UniversalSuggestionCandidateDonationResult();
  v2 = v1;
  sub_1CB846DA4();

}

uint64_t sub_1CB808F84()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v1 = *(id *)(*(_QWORD *)v0 + 24);
  sub_1CB846DA4();

  return v3;
}

uint64_t sub_1CB808FF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CB808A08(a1, a2);
}

void sub_1CB809010()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
  sub_1CB846DA4();

}

uint64_t sub_1CB80907C()
{
  return sub_1CB802374();
}

uint64_t sub_1CB80909C()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v1 = *(id *)(*(_QWORD *)v0 + 24);
  sub_1CB846DA4();

  return v3;
}

uint64_t sub_1CB809100()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = *(id *)(*(_QWORD *)v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889578);
  sub_1CB846DA4();

  return v3;
}

uint64_t UniversalSuggestionFeedbackAction.hash(into:)()
{
  return sub_1CB8472F0();
}

uint64_t UniversalSuggestionFeedbackAction.hashValue.getter()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

uint64_t UniversalSuggestionsStoreCoreDataWithMigrations.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = static Config.universalSuggestionsStoreFilePath.getter();
  v2 = v1;
  type metadata accessor for UniversalSuggestionsStoreCoreDataWithMigrations();
  swift_allocObject();
  return sub_1CB80165C(v0, v2, 1);
}

uint64_t UniversalSuggestionsStoreCoreDataWithMigrations.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_1CB80165C(a1, a2, 1);
}

uint64_t UniversalSuggestionsStoreCoreDataWithMigrations.init(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1CB80165C(a1, a2, 1);
}

void sub_1CB809274()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t UniversalSuggestionsStoreCoreDataWithMigrations.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t UniversalSuggestionsStoreCoreDataWithMigrations.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1CB8092F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1EF9A0E60);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF9A0E60);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1CB809380@<X0>(_BYTE *a1@<X8>)
{
  return sub_1CB80A0D4(a1);
}

uint64_t sub_1CB809394@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1CB803010();
  *a1 = result;
  return result;
}

void sub_1CB8093C0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1CB804348(*(_QWORD *)(v1 + 24), (uint64_t (*)(uint64_t *))sub_1CB8035C0, (void (*)(void))sub_1CB7DDBF4, (uint64_t (*)(void))type metadata accessor for UniversalSuggestion, a1);
}

void sub_1CB8093F0(char *a1@<X8>)
{
  uint64_t v1;

  sub_1CB803C58(*(_QWORD *)(v1 + 24), a1);
}

void sub_1CB809408(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1CB804348(*(_QWORD *)(v1 + 24), (uint64_t (*)(uint64_t *))sub_1CB8043CC, (void (*)(void))sub_1CB7DD2F0, (uint64_t (*)(void))type metadata accessor for UniversalRuntimeSuggestion, a1);
}

uint64_t sub_1CB809438@<X0>(uint64_t a1@<X8>)
{
  return sub_1CB80A160(a1);
}

uint64_t type metadata accessor for UniversalSuggestionCandidateDonationResult()
{
  uint64_t result;

  result = qword_1ED889550;
  if (!qword_1ED889550)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1CB809488(_BYTE *a1@<X8>)
{
  sub_1CB80A114(a1);
}

uint64_t type metadata accessor for UniversalSuggestionsStoreCoreDataWithMigrations()
{
  return objc_opt_self();
}

unint64_t sub_1CB8094C0()
{
  unint64_t result;

  result = qword_1EF9A0E88;
  if (!qword_1EF9A0E88)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for UniversalSuggestionFeedbackAction, &type metadata for UniversalSuggestionFeedbackAction);
    atomic_store(result, (unint64_t *)&qword_1EF9A0E88);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalSuggestionCandidateDonationResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v7 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1CB846084();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
    v12 = (int *)type metadata accessor for UniversalCandidate(0);
    *(_QWORD *)&v8[v12[5]] = *(_QWORD *)&v9[v12[5]];
    *(_QWORD *)&v8[v12[6]] = *(_QWORD *)&v9[v12[6]];
    *(_QWORD *)&v8[v12[7]] = *(_QWORD *)&v9[v12[7]];
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for UniversalSuggestionCandidateDonationResult(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    swift_release();
    v3 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
    v4 = sub_1CB846084();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1 + v3, v4);
    type metadata accessor for UniversalCandidate(0);
    return swift_release();
  }
  return result;
}

_QWORD *initializeWithCopy for UniversalSuggestionCandidateDonationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v6 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1CB846084();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
    v11 = (int *)type metadata accessor for UniversalCandidate(0);
    *(_QWORD *)&v7[v11[5]] = *(_QWORD *)&v8[v11[5]];
    *(_QWORD *)&v7[v11[6]] = *(_QWORD *)&v8[v11[6]];
    *(_QWORD *)&v7[v11[7]] = *(_QWORD *)&v8[v11[7]];
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for UniversalSuggestionCandidateDonationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;

  if (a1 != a2)
  {
    sub_1CB7BAB18((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for UniversalSuggestionCandidateDonationResult);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      v6 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1CB846084();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_retain();
      v10(v7, v8, v9);
      v11 = (int *)type metadata accessor for UniversalCandidate(0);
      *(_QWORD *)&v7[v11[5]] = *(_QWORD *)&v8[v11[5]];
      *(_QWORD *)&v7[v11[6]] = *(_QWORD *)&v8[v11[6]];
      *(_QWORD *)&v7[v11[7]] = *(_QWORD *)&v8[v11[7]];
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_QWORD *initializeWithTake for UniversalSuggestionCandidateDonationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v6 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1CB846084();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    v10 = (int *)type metadata accessor for UniversalCandidate(0);
    *(_QWORD *)&v7[v10[5]] = *(_QWORD *)&v8[v10[5]];
    *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
    *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for UniversalSuggestionCandidateDonationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;

  if (a1 != a2)
  {
    sub_1CB7BAB18((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for UniversalSuggestionCandidateDonationResult);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      v6 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1CB846084();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      v10 = (int *)type metadata accessor for UniversalCandidate(0);
      *(_QWORD *)&v7[v10[5]] = *(_QWORD *)&v8[v10[5]];
      *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
      *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalSuggestionCandidateDonationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestionCandidateDonationResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1CB809DA0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1CB809DB0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UniversalSuggestionCandidate(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of UniversalSuggestionsStore.donateSuggestionCandidate(initialEntity:correctedEntity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.updateSuggestionFromFeedback(candidate:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.getSuggestionCandidate(forEntity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.findCandidate(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.getAllCandidateIds()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.deleteCandidate(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.readAllSuggestions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t type metadata accessor for UniversalSuggestionsStoreCoreData()
{
  return objc_opt_self();
}

uint64_t method lookup function for UniversalSuggestionsStoreCoreData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.unload()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.getPersistentContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.resetStore()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.getAllCandidateIds()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.deleteCandidate(id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.readAllSuggestions()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.readAllRuntimeSuggestions()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.findSuggestion(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.findCandidate(id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.findRuntimeSuggestion(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.donateSuggestionCandidate(initialEntity:correctedEntity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.updateSuggestionFromFeedback(candidate:action:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.getSuggestionCandidate(forEntity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestionFeedbackAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CB809F60 + 4 * byte_1CB84E815[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CB809F94 + 4 * byte_1CB84E810[v4]))();
}

uint64_t sub_1CB809F94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB809F9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB809FA4);
  return result;
}

uint64_t sub_1CB809FB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB809FB8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CB809FBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB809FC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalSuggestionFeedbackAction()
{
  return &type metadata for UniversalSuggestionFeedbackAction;
}

uint64_t method lookup function for UniversalSuggestionsStoreCoreDataWithMigrations()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreDataWithMigrations.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t sub_1CB809FF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1CB80A038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF99E360;
  if (!qword_1EF99E360)
  {
    v1 = sub_1CB777FA8(255, &qword_1EF99E358);
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1EF99E360);
  }
  return result;
}

uint64_t sub_1CB80A090(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CB80A0D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1CB802700(*(_QWORD *)(v1 + 24));
  *a1 = result & 1;
  return result;
}

void sub_1CB80A114(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  sub_1CB80745C(v3, &v5);
  *a1 = v4 & 1;
}

uint64_t sub_1CB80A160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = v2;
  return sub_1CB804AFC(&v5, &v4, a1);
}

id sub_1CB80A1A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  void (*v27)(char *, uint64_t);
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjCClassFromMetadata;
  id v46;
  uint64_t inited;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  char *v54;
  char *v55;
  void *v56;
  char v57;
  _QWORD v59[2];
  void (*v60)(char *, uint64_t);
  unint64_t v61;
  id v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id aBlock[8];

  LODWORD(v67) = a3;
  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1CB846CCC();
  v65 = *(_QWORD *)(v3 - 8);
  v66 = v3;
  MEMORY[0x1E0C80A78](v3);
  v64 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CB845F58();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v59 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v59 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v59 - v16;
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97C08]), sel_init);
  objc_msgSend(v18, sel_setShouldInferMappingModelAutomatically_, 0);
  objc_msgSend(v18, sel_setShouldMigrateStoreAutomatically_, 0);
  if (qword_1ED889548 != -1)
    swift_once();
  v19 = (void *)qword_1ED889540;
  if (!qword_1ED889540)
  {

    return 0;
  }
  v59[1] = v9;
  v20 = objc_allocWithZone(MEMORY[0x1E0C97BC8]);
  v21 = v19;
  v61 = (unint64_t)"ionCoreDataRecord";
  v22 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v68 = v5;
  v23 = (void *)v22;
  v62 = v21;
  v63 = objc_msgSend(v20, sel_initWithName_managedObjectModel_, v22, v21);

  v24 = v68;
  sub_1CB845EC8();
  v25 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1CB845F28();
  v26 = (void *)sub_1CB845EE0();
  v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27(v15, v24);
  aBlock[0] = 0;
  LODWORD(v20) = objc_msgSend(v25, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v26, 1, 0, aBlock);

  v28 = aBlock[0];
  if ((_DWORD)v20)
  {
LABEL_9:
    if ((v67 & 1) == 0)
      goto LABEL_13;
    goto LABEL_10;
  }
  v29 = v28;
  v30 = (void *)sub_1CB845E80();

  swift_willThrow();
  if (qword_1EF99C420 != -1)
    swift_once();
  v31 = sub_1CB8466D8();
  __swift_project_value_buffer(v31, (uint64_t)qword_1EF9A0E60);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v17, v24);
  v32 = v30;
  v33 = v30;
  v34 = sub_1CB8466C0();
  v35 = sub_1CB846C90();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    v60 = v27;
    v37 = v36;
    v59[0] = swift_slowAlloc();
    aBlock[0] = (id)v59[0];
    *(_DWORD *)v37 = 136315394;
    sub_1CB7762AC((unint64_t *)&qword_1ED88A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v38 = sub_1CB847170();
    v69 = sub_1CB775A54(v38, v39, (uint64_t *)aBlock);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    v60(v12, v68);
    *(_WORD *)(v37 + 12) = 2080;
    v69 = (uint64_t)v30;
    v40 = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
    v41 = sub_1CB8468DC();
    v69 = sub_1CB775A54(v41, v42, (uint64_t *)aBlock);
    sub_1CB846E58();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CB771000, v34, v35, "UniversalSuggestionsCoreData: Unable to create the data directory, path=%s, error=%s", (uint8_t *)v37, 0x16u);
    v43 = v59[0];
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v43, -1, -1);
    v44 = v37;
    v27 = v60;
    v24 = v68;
    MEMORY[0x1D179FE84](v44, -1, -1);

    goto LABEL_9;
  }

  v27(v12, v24);
  if ((v67 & 1) != 0)
  {
LABEL_10:
    type metadata accessor for UniversalSuggestionsStoreCoreData();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v46 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    type metadata accessor for IncrementalMigrationManager();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v46;
    v48 = (uint64_t)v64;
    sub_1CB846CC0();
    sub_1CB7E7DF4((uint64_t)v17, v48, 0xD000000000000019, v61 | 0x8000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v48, v66);
    swift_setDeallocating();

  }
LABEL_13:
  v49 = (void *)sub_1CB845EE0();
  objc_msgSend(v18, sel_setURL_, v49);

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1CB84A330;
  *(_QWORD *)(v50 + 32) = v18;
  aBlock[0] = (id)v50;
  sub_1CB846A74();
  sub_1CB777FA8(0, (unint64_t *)&qword_1ED88DE18);
  v51 = v18;
  v52 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  v53 = v63;
  objc_msgSend(v63, sel_setPersistentStoreDescriptions_, v52);

  v54 = (char *)swift_allocObject();
  v54[16] = 1;
  v55 = v54 + 16;
  aBlock[4] = sub_1CB80AB84;
  aBlock[5] = v54;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1CB7A2148;
  aBlock[3] = &block_descriptor_13;
  v56 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v53, sel_loadPersistentStoresWithCompletionHandler_, v56);
  _Block_release(v56);

  v27(v17, v24);
  swift_beginAccess();
  v57 = *v55;
  swift_release();
  if ((v57 & 1) == 0)
  {

    return 0;
  }
  return v53;
}

uint64_t sub_1CB80AB74()
{
  return swift_deallocObject();
}

void sub_1CB80AB84(void *a1, void *a2)
{
  uint64_t v2;

  sub_1CB8019B8(a1, a2, v2);
}

uint64_t sub_1CB80AB8C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1CB8029CC(a1);
}

void sub_1CB80ABA8(uint64_t a1@<X8>)
{
  sub_1CB809408(a1);
}

void sub_1CB80ABBC(char *a1@<X8>)
{
  sub_1CB8093F0(a1);
}

uint64_t dispatch thunk of SiriUserFeedbackLearningTaskPerforming.run(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CB785488;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1CB80AC58@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0FC8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v43 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v43 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v43 - v15;
  v17 = *(_QWORD *)(a1 + 64);
  v48 = a1 + 64;
  v18 = *(_BYTE *)(a1 + 32);
  v19 = 1 << v18;
  v20 = -1;
  if (1 << v18 < 64)
    v20 = ~(-1 << (1 << v18));
  v21 = v20 & v17;
  if (v21)
  {
    v43 = v14;
    v44 = a2;
    v45 = v2;
    v22 = 0;
    v23 = __clz(__rbit64(v21));
    a2 = (v21 - 1) & v21;
    v49 = (unint64_t)(v19 + 63) >> 6;
    while (1)
    {
      v24 = *(_QWORD *)(a1 + 48);
      v25 = sub_1CB846084();
      v26 = *(_QWORD *)(v25 - 8);
      v51 = *(_QWORD *)(v26 + 72);
      v46 = v23;
      v27 = v24 + v51 * v23;
      v28 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
      v29 = (uint64_t)v47;
      v50 = v25;
      v30 = v28;
      ((void (*)(char *, uint64_t))v28)(v47, v27);
      *(_QWORD *)(v29 + *(int *)(v5 + 48)) = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v46);
      sub_1CB80BB18(v29, (uint64_t)v16);
      swift_bridgeObjectRetain();
      while (a2)
      {
        while (1)
        {
          v32 = __clz(__rbit64(a2));
          a2 &= a2 - 1;
          v33 = v32 | (v22 << 6);
LABEL_25:
          v30(v8, *(_QWORD *)(a1 + 48) + v33 * v51, v50);
          *(_QWORD *)&v8[*(int *)(v5 + 48)] = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v33);
          sub_1CB80BB18((uint64_t)v8, (uint64_t)v11);
          if (*(double *)&v16[*(int *)(v5 + 48)] < *(double *)&v11[*(int *)(v5 + 48)])
            break;
          sub_1CB785B54((uint64_t)v11, &qword_1EF9A0FC8);
          if (!a2)
            goto LABEL_9;
        }
        sub_1CB785B54((uint64_t)v16, &qword_1EF9A0FC8);
        sub_1CB80BB18((uint64_t)v11, (uint64_t)v16);
      }
LABEL_9:
      v34 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
LABEL_39:
        if (v31 < 9)
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, 1, 1, v5);
        v39 = *(_QWORD *)(a1 + 96);
        if (v39)
        {
          v22 = 4;
          goto LABEL_32;
        }
        v39 = *(_QWORD *)(a1 + 104);
        if (v39)
        {
          v22 = 5;
          goto LABEL_32;
        }
      }
      else
      {
        if (v34 >= v49)
          goto LABEL_28;
        v35 = *(_QWORD *)(v48 + 8 * v34);
        ++v22;
        if (v35)
          goto LABEL_24;
        v22 = v34 + 1;
        if (v34 + 1 >= v49)
          goto LABEL_28;
        v35 = *(_QWORD *)(v48 + 8 * v22);
        if (v35)
          goto LABEL_24;
        v22 = v34 + 2;
        if (v34 + 2 >= v49)
          goto LABEL_28;
        v35 = *(_QWORD *)(v48 + 8 * v22);
        if (v35)
          goto LABEL_24;
        v22 = v34 + 3;
        if (v34 + 3 >= v49)
          goto LABEL_28;
        v35 = *(_QWORD *)(v48 + 8 * v22);
        if (v35)
          goto LABEL_24;
        v36 = v34 + 4;
        if (v36 >= v49)
        {
LABEL_28:
          swift_release();
          v37 = v44;
          sub_1CB80BB18((uint64_t)v16, v44);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v5);
        }
        v35 = *(_QWORD *)(v48 + 8 * v36);
        if (v35)
        {
          v22 = v36;
LABEL_24:
          a2 = (v35 - 1) & v35;
          v33 = __clz(__rbit64(v35)) + (v22 << 6);
          goto LABEL_25;
        }
        while (1)
        {
          v22 = v36 + 1;
          if (__OFADD__(v36, 1))
            break;
          if (v22 >= v49)
            goto LABEL_28;
          v35 = *(_QWORD *)(v48 + 8 * v22);
          ++v36;
          if (v35)
            goto LABEL_24;
        }
        __break(1u);
      }
      v40 = 0;
      v41 = 6;
      if (v49 > 6)
        v41 = v49;
      v42 = v41 - 6;
      do
      {
        if (v42 == v40)
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, 1, 1, v5);
        v39 = *(_QWORD *)(a1 + 112 + 8 * v40++);
      }
      while (!v39);
      v22 = v40 + 5;
LABEL_32:
      a2 = (v39 - 1) & v39;
      v23 = __clz(__rbit64(v39)) + (v22 << 6);
    }
  }
  v31 = v18 & 0x3F;
  if (v31 > 6)
  {
    v49 = (unint64_t)(v19 + 63) >> 6;
    v39 = *(_QWORD *)(a1 + 72);
    if (v39)
    {
      v43 = v14;
      v44 = a2;
      v45 = v2;
      v22 = 1;
      goto LABEL_32;
    }
    if (v31 >= 8)
    {
      v39 = *(_QWORD *)(a1 + 80);
      v44 = a2;
      v45 = v2;
      v43 = v14;
      if (v39)
      {
        v22 = 2;
      }
      else
      {
        v39 = *(_QWORD *)(a1 + 88);
        if (!v39)
          goto LABEL_39;
        v22 = 3;
      }
      goto LABEL_32;
    }
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, 1, 1, v5);
}

uint64_t sub_1CB80B09C(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char v7;
  uint64_t v9;

  v2 = sub_1CB846084();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*a1, sel_nsUUID);
  sub_1CB846054();

  v7 = sub_1CB846048();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

uint64_t static SiriOntologyUtils.className(of:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0F10);
  v0 = sub_1CB8468DC();
  v2 = v1;
  v3 = sub_1CB846930();
  v4 = sub_1CB7F3CFC(v3, v0, v2);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1D179ECCC](v4, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

void static SiriOntologyUtils.selectTopDialogAct(from:ranks:)(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3 = sub_1CB80B5B0(a1, a2);
  if (v2)
    return;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_userDialogActs);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0F18);
  v6 = sub_1CB846A5C();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1CB846F30();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v4, sel_description);
    sub_1CB8468A0();

    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB80B874();
    swift_allocError();
    *v9 = 0xD000000000000023;
    v9[1] = 0x80000001CB857090;
    swift_willThrow();

    return;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1D179F320](0, v6);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }

  swift_bridgeObjectRelease();
}

unint64_t static SiriOntologyUtils.selectPrimaryTask(from:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;
  unint64_t v3;
  _QWORD *v4;

  result = sub_1CB846348();
  if (v0)
    return v1;
  v3 = result;
  if (!(result >> 62))
  {
    v1 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v1)
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1CB80B874();
    swift_allocError();
    *v4 = 0x736B736174206F4ELL;
    v4[1] = 0xE800000000000000;
    swift_willThrow();
    return v1;
  }
  swift_bridgeObjectRetain();
  v1 = sub_1CB847044();
  result = swift_bridgeObjectRelease();
  if (!v1)
    goto LABEL_10;
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v1 = MEMORY[0x1D179F320](0, v3);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v1 = *(_QWORD *)(v3 + 32);
    swift_retain();
LABEL_7:
    swift_bridgeObjectRelease();
    return v1;
  }
  __break(1u);
  return result;
}

void static SiriOntologyUtils.prettyPrintTask(_:)(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  _QWORD *v4;

  v2 = sub_1CB80B8B8(a1);
  if (!v1)
  {
    v3 = v2;
    if (sub_1CB846D50())
    {
      sub_1CB846318();

      swift_release();
    }
    else
    {
      sub_1CB80B874();
      swift_allocError();
      *v4 = 0x7061726720646142;
      v4[1] = 0xE900000000000068;
      swift_willThrow();

    }
  }
}

uint64_t SiriOntologyUtils.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SiriOntologyUtils.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

char *sub_1CB80B5B0(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v25 = a1;
  v3 = sub_1CB846084();
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0FC0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0FC8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - v14;
  sub_1CB80AC58(a2, (unint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1CB785B54((uint64_t)v8, &qword_1EF9A0FC0);
    sub_1CB80B874();
    swift_allocError();
    *v16 = 0x736B6E6172206F4ELL;
    v16[1] = 0xE800000000000000;
    swift_willThrow();
  }
  else
  {
    v17 = *(int *)(v9 + 48);
    v18 = v26;
    v19 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v19(v15, v8, v3);
    *(_QWORD *)&v15[v17] = *(_QWORD *)&v8[v17];
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v13, v15, v3);
    v20 = ((uint64_t (*)(char *, char *, uint64_t))v19)(v5, v13, v3);
    MEMORY[0x1E0C80A78](v20);
    *(&v24 - 2) = (uint64_t)v5;
    v21 = (char *)sub_1CB7F4C44(sub_1CB80BAFC, (uint64_t)(&v24 - 4), v25);
    if (v21)
    {
      v8 = v21;
    }
    else
    {
      sub_1CB80B874();
      swift_allocError();
      *v22 = 0x6D20736573726150;
      v22[1] = 0xEF686374616D7369;
      swift_willThrow();
    }
    sub_1CB785B54((uint64_t)v15, &qword_1EF9A0FC8);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  }
  return v8;
}

unint64_t sub_1CB80B874()
{
  unint64_t result;

  result = qword_1EF9A0F20;
  if (!qword_1EF9A0F20)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84C900, &type metadata for PLError);
    atomic_store(result, (unint64_t *)&qword_1EF9A0F20);
  }
  return result;
}

id sub_1CB80B8B8(uint64_t a1)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  objc_opt_self();
  v2 = (void *)swift_dynamicCastObjCClass();
  if (v2)
    return objc_msgSend(v2, sel_task);
  swift_getObjectType();
  v4 = swift_conformsToProtocol2();
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    v6 = a1;
  else
    v6 = 0;
  if (v6)
  {
    ObjectType = swift_getObjectType();
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    swift_unknownObjectRetain();
    v9 = v8(ObjectType, v5);
    if (v9)
    {
      v10 = v9;
    }
    else
    {
      sub_1CB846F30();
      sub_1CB846954();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0F18);
      sub_1CB847014();
      v10 = 0;
      sub_1CB80B874();
      swift_allocError();
      *v12 = 0;
      v12[1] = 0xE000000000000000;
      swift_willThrow();
    }
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1CB846F30();
    sub_1CB846954();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0F18);
    sub_1CB847014();
    v10 = 0xE000000000000000;
    sub_1CB80B874();
    swift_allocError();
    *v11 = 0;
    v11[1] = 0xE000000000000000;
    swift_willThrow();
  }
  return (id)v10;
}

uint64_t type metadata accessor for SiriOntologyUtils()
{
  return objc_opt_self();
}

uint64_t method lookup function for SiriOntologyUtils()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1CB80BAFC(id *a1)
{
  return sub_1CB80B09C(a1) & 1;
}

uint64_t sub_1CB80BB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Double __swiftcall floorToMostRecentDay(timestamp:)(Swift::Double timestamp)
{
  return floor(timestamp / 86400.0) * 86400.0;
}

void sub_1CB80BB7C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1CB80BBBC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CB80BC30 + 4 * byte_1CB84EA85[a2]))(0x534F63616DLL);
}

uint64_t sub_1CB80BC30(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x534F63616DLL && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1CB80BCEC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x64657463656A6572;
    else
      v3 = 0x6D6E6F646E616261;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0xEB00000000746E65;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x64657463656A6572;
      else
        v6 = 0x6D6E6F646E616261;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xEB00000000746E65;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x6465747065636361;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v3 != 0x6465747065636361)
  {
LABEL_21:
    v8 = sub_1CB8471A0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1CB80BE14(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D6E6F646E616261;
  else
    v3 = 0x65646E6F70736572;
  if (v2)
    v4 = 0xE900000000000064;
  else
    v4 = 0xEB00000000746E65;
  if ((a2 & 1) != 0)
    v5 = 0x6D6E6F646E616261;
  else
    v5 = 0x65646E6F70736572;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000746E65;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CB80BEC4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6964654D73756C50;
  else
    v3 = 0xD000000000000018;
  if (v2)
    v4 = 0x80000001CB852090;
  else
    v4 = 0xE900000000000061;
  if ((a2 & 1) != 0)
    v5 = 0x6964654D73756C50;
  else
    v5 = 0xD000000000000018;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000061;
  else
    v6 = 0x80000001CB852090;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CB80BF70(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000012;
    else
      v3 = 0xD000000000000015;
    if (v2 == 1)
      v4 = 0x80000001CB852320;
    else
      v4 = 0x80000001CB852340;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000012;
      else
        v6 = 0xD000000000000015;
      if (v5 == 1)
        v7 = 0x80000001CB852320;
      else
        v7 = 0x80000001CB852340;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x646570706F7473;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x646570706F7473)
  {
LABEL_21:
    v8 = sub_1CB8471A0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1CB80C078(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x746E65746E6F63;
  else
    v3 = 0x6E65697069636572;
  if (v2)
    v4 = 0xE900000000000074;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x746E65746E6F63;
  else
    v5 = 0x6E65697069636572;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE900000000000074;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CB80C120(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000019;
  else
    v3 = 0xD00000000000001FLL;
  if (v2)
    v4 = 0x80000001CB852260;
  else
    v4 = 0x80000001CB852280;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000019;
  else
    v5 = 0xD00000000000001FLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001CB852280;
  else
    v6 = 0x80000001CB852260;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CB80C1C8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x64616F6C796170;
  else
    v3 = 1702060386;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x64616F6C796170;
  else
    v5 = 1702060386;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CB80C264(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000014;
  else
    v3 = 0xD000000000000012;
  if (v2)
    v4 = 0x80000001CB8521E0;
  else
    v4 = 0x80000001CB852200;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000014;
  else
    v5 = 0xD000000000000012;
  if ((a2 & 1) != 0)
    v6 = 0x80000001CB852200;
  else
    v6 = 0x80000001CB8521E0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CB80C30C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000012;
  else
    v3 = 0xD000000000000010;
  if (v2)
    v4 = 0x80000001CB852220;
  else
    v4 = 0x80000001CB852240;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000012;
  else
    v5 = 0xD000000000000010;
  if ((a2 & 1) != 0)
    v6 = 0x80000001CB852240;
  else
    v6 = 0x80000001CB852220;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1CB80C3B4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1CB80C404(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CB80C468 + 4 * byte_1CB84EA8E[a2]))(0xD000000000000013);
}

uint64_t sub_1CB80C468(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000013 && v1 == 0x80000001CB852190)
    v2 = 1;
  else
    v2 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1CB80C508(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x454C4C45434E4143;
  else
    v3 = 0x414D5249464E4F43;
  if (v2)
    v4 = 0xEF4F4E5F4E4F4954;
  else
    v4 = 0xE900000000000044;
  if ((a2 & 1) != 0)
    v5 = 0x454C4C45434E4143;
  else
    v5 = 0x414D5249464E4F43;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000044;
  else
    v6 = 0xEF4F4E5F4E4F4954;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CB80C5BC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001DLL;
  else
    v3 = 0xD000000000000023;
  if (v2)
    v4 = 0x80000001CB851EC0;
  else
    v4 = 0x80000001CB851EF0;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001DLL;
  else
    v5 = 0xD000000000000023;
  if ((a2 & 1) != 0)
    v6 = 0x80000001CB851EF0;
  else
    v6 = 0x80000001CB851EC0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CB80C664(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656D69746C616572;
  else
    v3 = 0x616E65746E69616DLL;
  if (v2)
    v4 = 0xEB0000000065636ELL;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656D69746C616572;
  else
    v5 = 0x616E65746E69616DLL;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xEB0000000065636ELL;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1CB80C710()
{
  qword_1EF9A0FD0 = (uint64_t)&unk_1E868A698;
}

uint64_t sub_1CB80C724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  char v15;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v4 = sub_1CB846654();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + 16);
  v7 = *(void **)(v2 + 24);
  v8 = *(void **)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  sub_1CB80CE3C(v6, v7, v8, v9);
  v10 = sub_1CB80CB30(a1, v6, v7, v8, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_1CB80CE94(v6, v7, v8, v9);
  v17 = *(void **)(v2 + 16);
  v18 = *(void **)(v2 + 24);
  v19 = *(void **)(v2 + 32);
  LOBYTE(v7) = *(_BYTE *)(v2 + 40);
  sub_1CB80CE3C(v17, v18, v19, (char)v7);
  sub_1CB80D9C8((uint64_t)v17, (uint64_t)v18, (uint64_t)v19, (char)v7);
  LOBYTE(v8) = v20;
  sub_1CB80CE94(v17, v18, v19, (char)v7);
  if ((v8 & 1) == 0)
  {
    if (qword_1EF99C430 != -1)
      swift_once();
    v21 = sub_1CB8466D8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EF9A0FD8);
    sub_1CB80CE3C(v10, v12, v14, v16);
    sub_1CB80CE3C(v10, v12, v14, v16);
    v22 = sub_1CB8466C0();
    v23 = sub_1CB846C84();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v42 = v37;
      *(_DWORD *)v24 = 136315138;
      v36[1] = v24 + 4;
      sub_1CB80CCD4((uint64_t)v10, (uint64_t)v12, (uint64_t)v14, v16);
      v41 = sub_1CB775A54(v25, v26, &v42);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      sub_1CB80CE94(v10, v12, v14, v16);
      sub_1CB80CE94(v10, v12, v14, v16);
      _os_log_impl(&dword_1CB771000, v22, v23, "UserRejectsPhoneCallOrMessagesContactConfirmation state will be updated to %s", v24, 0xCu);
      v27 = v37;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v27, -1, -1);
      MEMORY[0x1D179FE84](v24, -1, -1);
    }
    else
    {
      sub_1CB80CE94(v10, v12, v14, v16);
      sub_1CB80CE94(v10, v12, v14, v16);
    }

  }
  v28 = *(void **)(v2 + 16);
  v29 = *(void **)(v2 + 24);
  v30 = *(void **)(v2 + 32);
  *(_QWORD *)(v2 + 16) = v10;
  *(_QWORD *)(v2 + 24) = v12;
  *(_QWORD *)(v2 + 32) = v14;
  v31 = *(_BYTE *)(v2 + 40);
  *(_BYTE *)(v2 + 40) = v16;
  sub_1CB80CE3C(v10, v12, v14, v16);
  sub_1CB80CE94(v28, v29, v30, v31);
  if (*(_BYTE *)(v2 + 40) == 2 && (v32 = *(unsigned __int8 *)(v2 + 16), (_DWORD)v32))
  {
    if ((_DWORD)v32 == 1)
      v32 = 1;
    if (qword_1ED88A288 != -1)
      swift_once();
    v33 = sub_1CB846678();
    __swift_project_value_buffer(v33, (uint64_t)qword_1ED8901B0);
    v34 = (uint64_t)v38;
    sub_1CB846648();
    sub_1CB7BECCC("events.filters.UserRejectsPhoneCallOrMessagesContactConfirmation", 64, 2, v34);
    sub_1CB80CE94(v10, v12, v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v34, v40);
  }
  else
  {
    sub_1CB80CE94(v10, v12, v14, v16);
    return 0;
  }
  return v32;
}

void *sub_1CB80CB30(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  void *v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;

  if (*(_BYTE *)(a1 + 24))
  {
    v9 = *(void **)(a1 + 16);
    if (*(_BYTE *)(a1 + 24) == 1)
    {
      sub_1CB7D345C(v9, 1u);
      a2 = sub_1CB80D6B8(v9, a2, a3, a4, a5);
      v10 = v9;
      v11 = 1;
    }
    else
    {
      sub_1CB7D345C(v9, 2u);
      a2 = (void *)sub_1CB80D2F0(v9, a2, a3, a4, a5);
      v10 = v9;
      v11 = 2;
    }
    sub_1CB7D3480(v10, v11);
  }
  else
  {
    if (qword_1EF99C430 != -1)
      swift_once();
    v12 = sub_1CB8466D8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EF9A0FD8);
    v13 = sub_1CB8466C0();
    v14 = sub_1CB846C84();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1CB771000, v13, v14, "UserRejectsPhoneCallOrMessagesContactConfirmation received a non Siri UI / Execution event", v15, 2u);
      MEMORY[0x1D179FE84](v15, -1, -1);
    }

    sub_1CB80CE3C(a2, a3, a4, a5);
  }
  return a2;
}

void sub_1CB80CCD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1CB80CD20()
{
  sub_1CB846F30();
  sub_1CB846954();
  sub_1CB847014();
  sub_1CB846954();
  return 0;
}

uint64_t sub_1CB80CDF0()
{
  uint64_t v0;

  sub_1CB80CE94(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserRejectsPhoneCallOrMessagesContactConfirmationFilter()
{
  return objc_opt_self();
}

id sub_1CB80CE3C(id result, void *a2, void *a3, char a4)
{
  id v5;

  if (!a4)
    return result;
  if (a4 == 2)
  {
    v5 = a2;
    result = a3;
    return result;
  }
  result = a2;
  if (a4 == 1)
    return result;
  return result;
}

void destroy for UserRejectsPhoneCallOrMessagesContactConfirmationState(uint64_t a1)
{
  sub_1CB80CE94(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1CB80CE94(void *a1, void *a2, void *a3, char a4)
{
  if (!a4)
    goto LABEL_6;
  if (a4 == 2)
  {

    a1 = a3;
    goto LABEL_6;
  }
  a1 = a2;
  if (a4 == 1)
LABEL_6:

}

uint64_t initializeWithCopy for UserRejectsPhoneCallOrMessagesContactConfirmationState(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1CB80CE3C(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for UserRejectsPhoneCallOrMessagesContactConfirmationState(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1CB80CE3C(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1CB80CE94(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for UserRejectsPhoneCallOrMessagesContactConfirmationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1CB80CE94(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for UserRejectsPhoneCallOrMessagesContactConfirmationState()
{
  return &type metadata for UserRejectsPhoneCallOrMessagesContactConfirmationState;
}

void sub_1CB80CFFC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  char v5;

  v1 = *v0;
  v2 = *(void **)(*v0 + 16);
  v3 = *(void **)(*v0 + 24);
  v4 = *(void **)(*v0 + 32);
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  v5 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(v1 + 40) = 3;
  sub_1CB80CE94(v2, v3, v4, v5);
}

uint64_t sub_1CB80D020(uint64_t a1)
{
  return sub_1CB80C724(a1);
}

uint64_t sub_1CB80D040()
{
  if (qword_1EF99C428 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB80D080()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB80D128()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB80D1AC()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB80D250@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CB80DF7C();
  *a1 = result;
  return result;
}

void sub_1CB80D27C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x64657463656A6572;
  if (v2 != 1)
  {
    v5 = 0x6D6E6F646E616261;
    v4 = 0xEB00000000746E65;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6465747065636361;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1CB80D2E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1CB80BCEC(*a1, *a2);
}

uint64_t sub_1CB80D2F0(void *a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  void *v18;
  id v19;
  char v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v30;
  id v31;

  v10 = objc_msgSend(a1, sel_eventBody);
  if (v10)
  {
    v11 = v10;
    if (a5 - 2 < 2)
    {
      if ((sub_1CB7D35E0(v10) & 1) != 0 || (sub_1CB7D3800(v11) & 1) != 0)
      {
        v12 = objc_msgSend(v11, sel_taskStep);

        if (v12 != (id)17)
          return 0;
        goto LABEL_29;
      }

      return 0;
    }
    if (!a5)
    {
      v17 = objc_msgSend(a2, sel_eventBody);
      if (!v17)
      {

        sub_1CB80CE94(a2, a3, a4, 0);
        return 0;
      }
      v18 = v17;
      if ((sub_1CB7EE6FC(v11) & 1) == 0)
      {

        sub_1CB80CE94(a2, a3, a4, 0);
        return 0;
      }
      v19 = objc_msgSend(v11, sel_taskStep);

      sub_1CB80CE94(a2, a3, a4, 0);
      if (v19 == (id)39)
      {
        v30 = a1;
        return 1;
      }
      if (v19 == (id)38)
      {
        v31 = a1;
        return 0;
      }
      if (v19 != (id)17)
        return 0;
LABEL_29:
      v23 = a1;
      return (uint64_t)a1;
    }
    if ((_BYTE)a2)
    {
      v20 = sub_1CB8471A0();
      v21 = a3;
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
        goto LABEL_30;
    }
    else
    {
      v22 = a3;
      swift_bridgeObjectRelease();
    }
    if (((sub_1CB7D35E0(v11) & 1) != 0 || (sub_1CB7D3800(v11) & 1) != 0) && objc_msgSend(v11, sel_taskStep) == (id)17)
    {
      sub_1CB80CE94(a2, a3, a4, 1);

      goto LABEL_29;
    }
LABEL_30:
    objc_msgSend(a3, sel_timestamp);
    v25 = v24;
    objc_msgSend(a1, sel_timestamp);
    v27 = v26;

    sub_1CB80CE94(a2, a3, a4, 1);
    if (v27 - v25 <= 300.0)
    {
      v28 = a3;
      return (uint64_t)a2;
    }
    return 0;
  }
  if (qword_1EF99C430 != -1)
    swift_once();
  v13 = sub_1CB8466D8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EF9A0FD8);
  v14 = sub_1CB8466C0();
  v15 = sub_1CB846C84();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1CB771000, v14, v15, "UserRejectsPhoneCallOrMessagesContactConfirmation cannot unwrap execution store event body", v16, 2u);
    MEMORY[0x1D179FE84](v16, -1, -1);
  }

  sub_1CB80CE3C(a2, a3, a4, a5);
  return (uint64_t)a2;
}

void *sub_1CB80D6B8(void *a1, void *a2, void *a3, void *a4, char a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  if (objc_msgSend(a1, sel_eventBody))
    __asm { BR              X10 }
  if (qword_1EF99C430 != -1)
    swift_once();
  v9 = sub_1CB8466D8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF9A0FD8);
  v10 = sub_1CB8466C0();
  v11 = sub_1CB846C84();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1CB771000, v10, v11, "UserRejectsPhoneCallOrMessagesContactConfirmation cannot unwrap UI store event body", v12, 2u);
    MEMORY[0x1D179FE84](v12, -1, -1);
  }

  sub_1CB80CE3C(a2, a3, a4, a5);
  return a2;
}

void sub_1CB80D914(uint64_t a1)
{
  sub_1CB80D9C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_1CB80D938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1EF9A0FD8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF9A0FD8);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1CB80D9C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1CB80DA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;

  if (a8)
    return 0;
  sub_1CB7BE770();
  sub_1CB80CE3C(v13, v10, v8, 0);
  sub_1CB80CE3C(v12, v11, v9, 0);
  v14 = sub_1CB846E10();
  sub_1CB80CE94(v12, v11, v9, 0);
  sub_1CB80CE94(v13, v10, v8, 0);
  return v14 & 1;
}

uint64_t storeEnumTagSinglePayload for UserRejectsPhoneCallOrMessagesContactConfirmationState.ConfirmationStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CB80DEB4 + 4 * byte_1CB84EA9F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CB80DEE8 + 4 * byte_1CB84EA9A[v4]))();
}

uint64_t sub_1CB80DEE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB80DEF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB80DEF8);
  return result;
}

uint64_t sub_1CB80DF04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB80DF0CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CB80DF10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB80DF18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserRejectsPhoneCallOrMessagesContactConfirmationState.ConfirmationStatus()
{
  return &type metadata for UserRejectsPhoneCallOrMessagesContactConfirmationState.ConfirmationStatus;
}

unint64_t sub_1CB80DF38()
{
  unint64_t result;

  result = qword_1EF9A10C0;
  if (!qword_1EF9A10C0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84EB94, &type metadata for UserRejectsPhoneCallOrMessagesContactConfirmationState.ConfirmationStatus);
    atomic_store(result, (unint64_t *)&qword_1EF9A10C0);
  }
  return result;
}

uint64_t sub_1CB80DF7C()
{
  unint64_t v0;

  v0 = sub_1CB8470B0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1CB80DFC4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BCA8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1CB785B54(a1, &qword_1ED88BCA8);
    sub_1CB825880(a2, (uint64_t)v8);
    v13 = sub_1CB846084();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1CB785B54((uint64_t)v8, &qword_1ED88BCA8);
  }
  else
  {
    sub_1CB780DC4(a1, (uint64_t)v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CB82E750((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_1CB846084();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1CB80E13C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CB846084();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1CB785B54(a1, &qword_1ED88D570);
    sub_1CB825CAC(a2, (uint64_t)v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
    return sub_1CB785B54((uint64_t)v8, &qword_1ED88D570);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CB82F428((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  }
}

uint64_t sub_1CB80E2B0(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(uint64_t *, char *);
  uint64_t v23;

  v22 = a2;
  v7 = sub_1CB846084();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1;
  v14 = *(_QWORD *)(a4 + 16);
  v19 = a4;
  if (v14)
  {
    v15 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v20 = *(_QWORD *)(v8 + 72);
    v21 = v16;
    swift_bridgeObjectRetain();
    while (1)
    {
      v21(v13, v15, v7);
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v17(v13, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
      v22(&v23, v10);
      if (v4)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        return swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v15 += v20;
      if (!--v14)
        goto LABEL_8;
    }
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
LABEL_8:
    v17(v13, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1CB80E498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = sub_1CB80E558(a2);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_1CB779AD8(a1), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(v5 + 56);
    v10 = sub_1CB846084();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(a3, v9 + *(_QWORD *)(v11 + 72) * v8, v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
  }
  else
  {
    v12 = sub_1CB846084();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB80E558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1CB846084();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_beginAccess();
  v9 = *(_QWORD *)(v1 + 24);
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v10 = sub_1CB779AD8(a1);
  if ((v11 & 1) == 0)
  {
    v8 = swift_bridgeObjectRelease();
LABEL_5:
    v13 = *(_QWORD *)(v2 + 16);
    MEMORY[0x1E0C80A78](v8);
    *(&v16 - 2) = a1;
    swift_bridgeObjectRetain();
    v12 = sub_1CB80E2B0(MEMORY[0x1E0DEE9E0], (void (*)(uint64_t *, char *))sub_1CB80E8F4, (uint64_t)(&v16 - 4), v13);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *(_QWORD *)(v2 + 24);
    *(_QWORD *)(v2 + 24) = 0x8000000000000000;
    sub_1CB82F2A8(v12, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v2 + 24) = v16;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_endAccess();
    return v12;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1CB80E71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v19)(char *, char *, uint64_t);
  _QWORD v20[2];

  v20[1] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v20 - v9;
  v11 = sub_1CB846084();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v20 - v16;
  type metadata accessor for PLUSLoggingIdGenerator();
  static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)(a3, a2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1CB785B54((uint64_t)v10, &qword_1ED88D570);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v19(v15, v17, v11);
  v19(v8, (char *)a2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  sub_1CB80E13C((uint64_t)v8, (uint64_t)v15);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t type metadata accessor for UniversalSELFPlusStoreIdMapper()
{
  return objc_opt_self();
}

uint64_t sub_1CB80E8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CB80E71C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  v4 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject();
  sub_1CB79E138(a1, (uint64_t)v4);
  v6 = sub_1CB846018();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1CB785B54((uint64_t)v4, &qword_1ED88D550);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DDB0);
    swift_deallocPartialClassInstance();
    v5 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 96), v4, v6);
  }
  sub_1CB785B54(a1, &qword_1ED88D550);
  return v5;
}

uint64_t ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = v2;
  if (a1)
  {
    *(_QWORD *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A10D0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t INControlHomeIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  sub_1CB7976DC();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1CB848A50;
  *(_QWORD *)(v1 + 32) = sub_1CB777FA8(0, &qword_1EF9A10C8);
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t INControlHomeIntentFeatureExtractor.init()()
{
  uint64_t v0;
  uint64_t v1;

  sub_1CB7976DC();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1CB848A50;
  *(_QWORD *)(v1 + 32) = sub_1CB777FA8(0, &qword_1EF9A10C8);
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t INControlHomeIntentFeatureExtractor.intentTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t INControlHomeIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t INControlHomeIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB80EAE4()
{
  return swift_bridgeObjectRetain();
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp.init(value:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB79E138(a1, (uint64_t)v5);
  v6 = sub_1CB846018();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1CB785B54((uint64_t)v5, &qword_1ED88D550);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DDB0);
    swift_deallocPartialClassInstance();
    v1 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), v5, v6);
  }
  sub_1CB785B54(a1, &qword_1ED88D550);
  return v1;
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1CB80EE10(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentGroupName);
}

uint64_t sub_1CB80EE1C(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentGroupName);
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentZoneName.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentZoneName.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB80EE5C(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentZoneName);
}

uint64_t sub_1CB80EE68(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentZoneName);
}

uint64_t ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses.init(value:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1)
  {
    *(_QWORD *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A10D0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB80EF74(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses(0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB80EFA8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1)
  {
    *(_QWORD *)(v2 + 16) = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A10D0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

unint64_t sub_1CB80F010(id *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  void (*v18)(char *, char *, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  _QWORD *v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t i;
  id v59;
  void *v60;
  id v61;
  void *v62;
  unint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  unint64_t v70;
  id v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;

  v2 = (_QWORD *)sub_1CB846018();
  v3 = *(v2 - 1);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F7A0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CB845E20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v72 = (char *)&v68 - v14;
  v15 = *a1;
  v16 = objc_msgSend(v15, sel_dateInterval);
  if (v16)
  {
    v17 = v16;
    sub_1CB845DF0();

    v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v18(v8, v13, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v18(v72, v8, v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1CB848A50;
      sub_1CB845E08();
      v20 = type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp(0);
      v21 = swift_allocObject();
      v71 = v15;
      v22 = (void *)v21;
      (*(void (**)(uint64_t, char *, _QWORD *))(v3 + 32))(v21 + *(_QWORD *)(*(_QWORD *)v21 + 96), v5, v2);
      *(_QWORD *)(v19 + 56) = v20;
      *(_QWORD *)(v19 + 64) = sub_1CB78E6AC(&qword_1EF9A1538, type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp);
      *(_QWORD *)(v19 + 32) = v22;
      v23 = v71;
      v24 = objc_msgSend(v71, sel_intent);
      objc_opt_self();
      v25 = (void *)swift_dynamicCastObjCClass();
      if (!v25 || (v26 = objc_msgSend(v25, sel_filters)) == 0)
      {

        goto LABEL_19;
      }
      v27 = v26;
      sub_1CB777FA8(0, &qword_1EF9A1550);
      v28 = sub_1CB846A5C();

      if ((unint64_t)v28 >> 62)
      {
        swift_bridgeObjectRetain();
        v2 = (_QWORD *)sub_1CB847044();
        swift_bridgeObjectRelease();
        if (v2)
          goto LABEL_7;
      }
      else
      {
        v2 = *(_QWORD **)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v2)
        {
LABEL_7:
          if ((v28 & 0xC000000000000001) != 0)
          {
            v29 = (_QWORD *)MEMORY[0x1D179F320](0, v28);
          }
          else
          {
            if (!*(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_43;
            }
            v29 = *(id *)(v28 + 32);
          }
          v2 = v29;
          swift_bridgeObjectRelease();
          v30 = objc_msgSend(v2, sel_group);
          if (v30)
          {
            v31 = v30;
            v32 = objc_msgSend(v30, sel_spokenPhrase);

            v33 = sub_1CB8468A0();
            v35 = v34;

            v36 = type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentGroupName(0);
            v37 = swift_allocObject();
            *(_QWORD *)(v37 + 16) = v33;
            *(_QWORD *)(v37 + 24) = v35;
            v23 = v71;
            v38 = sub_1CB78F738((_QWORD *)1, 2, 1, (_QWORD *)v19);
            v74 = v36;
            v75 = sub_1CB78E6AC(qword_1EF9A1560, type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentGroupName);
            *(_QWORD *)&v73 = v37;
            v38[2] = 2;
            v19 = (unint64_t)v38;
            sub_1CB7780BC(&v73, (uint64_t)(v38 + 9));
          }
          v39 = objc_msgSend(v2, sel_zone);
          if (v39)
          {
            v40 = v39;
            v41 = objc_msgSend(v39, sel_spokenPhrase);

            v42 = sub_1CB8468A0();
            v44 = v43;

            v45 = type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentZoneName(0);
            v46 = swift_allocObject();
            *(_QWORD *)(v46 + 16) = v42;
            *(_QWORD *)(v46 + 24) = v44;
            v47 = (_QWORD *)v19;
            v48 = *(_QWORD *)(v19 + 16);
            v49 = v47;
            v50 = v47[3];
            if (v48 >= v50 >> 1)
              v49 = sub_1CB78F738((_QWORD *)(v50 > 1), v48 + 1, 1, v49);
            v74 = v45;
            v75 = sub_1CB78E6AC(&qword_1EF9A1558, type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentZoneName);
            *(_QWORD *)&v73 = v46;
            v49[2] = v48 + 1;
            v51 = &v49[5 * v48];
            v19 = (unint64_t)v49;
            sub_1CB7780BC(&v73, (uint64_t)(v51 + 4));

            v23 = v71;
          }
          else
          {

          }
LABEL_19:
          v52 = objc_msgSend(v23, sel_intentResponse);
          if (v52)
          {
            v22 = v52;
            objc_opt_self();
            v53 = (void *)swift_dynamicCastObjCClass();
            if (v53)
            {
              v54 = objc_msgSend(v53, sel_entityResponses);
              if (v54)
              {
                v55 = v54;
                sub_1CB777FA8(0, &qword_1EF9A1540);
                v28 = sub_1CB846A5C();

                *(_QWORD *)&v73 = MEMORY[0x1E0DEE9D8];
                if (!((unint64_t)v28 >> 62))
                {
                  v56 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain();
                  if (v56)
                  {
LABEL_24:
                    v69 = v22;
                    v70 = v19;
                    if (v56 < 1)
                    {
                      __break(1u);
                      goto LABEL_57;
                    }
                    for (i = 0; i != v56; ++i)
                    {
                      if ((v28 & 0xC000000000000001) != 0)
                        v59 = (id)MEMORY[0x1D179F320](i, v28);
                      else
                        v59 = *(id *)(v28 + 8 * i + 32);
                      v60 = v59;
                      v61 = objc_msgSend(v59, sel_entity);

                      if (v61)
                      {
                        MEMORY[0x1D179EDF8]();
                        if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
                          sub_1CB846AA4();
                        sub_1CB846AD4();
                        sub_1CB846A74();
                      }
                    }
                    swift_bridgeObjectRelease();
                    v63 = v73;
                    v19 = v70;
                    v23 = v71;
                    v22 = v69;
LABEL_48:
                    swift_bridgeObjectRelease();
                    if (v63 >> 62)
                    {
                      swift_bridgeObjectRetain();
                      v67 = sub_1CB847044();
                      swift_bridgeObjectRelease();
                      if (v67)
                      {
LABEL_50:
                        v28 = type metadata accessor for ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses(0);
                        v56 = swift_allocObject();
                        *(_QWORD *)(v56 + 16) = v63;
                        v64 = (_QWORD *)v19;
                        v19 = *(_QWORD *)(v19 + 16);
                        v2 = v64;
                        v57 = v64[3];
                        v55 = (void *)(v19 + 1);
                        if (v19 < v57 >> 1)
                        {
LABEL_51:
                          v74 = v28;
                          v75 = sub_1CB78E6AC(&qword_1EF9A1548, type metadata accessor for ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses);
                          *(_QWORD *)&v73 = v56;
                          v2[2] = v55;
                          v65 = &v2[5 * v19];
                          v19 = (unint64_t)v2;
                          sub_1CB7780BC(&v73, (uint64_t)(v65 + 4));

                          goto LABEL_52;
                        }
LABEL_57:
                        v2 = sub_1CB78F738((_QWORD *)(v57 > 1), (int64_t)v55, 1, v2);
                        goto LABEL_51;
                      }
                    }
                    else if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10))
                    {
                      goto LABEL_50;
                    }
                    (*(void (**)(char *, uint64_t))(v10 + 8))(v72, v9);
                    swift_bridgeObjectRelease();

                    return v19;
                  }
LABEL_47:
                  swift_bridgeObjectRelease();
                  v63 = MEMORY[0x1E0DEE9D8];
                  goto LABEL_48;
                }
LABEL_43:
                if (v28 < 0)
                  v55 = (void *)v28;
                else
                  v55 = (void *)(v28 & 0xFFFFFFFFFFFFFF8);
                swift_bridgeObjectRetain();
                v56 = sub_1CB847044();
                if (v56)
                  goto LABEL_24;
                goto LABEL_47;
              }
              v62 = v22;
            }
            else
            {
              v62 = v23;
              v23 = v22;
            }

          }
LABEL_52:

          (*(void (**)(char *, uint64_t))(v10 + 8))(v72, v9);
          return v19;
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1CB785B54((uint64_t)v8, &qword_1EF99F7A0);

  return MEMORY[0x1E0DEE9D8];
}

uint64_t type metadata accessor for INControlHomeIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for INControlHomeIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of INControlHomeIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of INControlHomeIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for ControlHomeIntentFeature()
{
  return &type metadata for ControlHomeIntentFeature;
}

uint64_t type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A11C0);
}

uint64_t type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentGroupName(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A12A8);
}

uint64_t type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentZoneName(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A1390);
}

ValueMetadata *type metadata accessor for ControlHomeIntentResponseFeatures()
{
  return &type metadata for ControlHomeIntentResponseFeatures;
}

uint64_t type metadata accessor for ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A1478);
}

uint64_t type metadata accessor for DeferredAsyncSequenceTaskAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeferredAsyncSequenceTaskAdapter);
}

uint64_t type metadata accessor for DeferredAsyncSequenceTaskAdapter.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeferredAsyncSequenceTaskAdapter.Iterator);
}

uint64_t sub_1CB80F910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CB80F928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785488;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

void sub_1CB80F988()
{
  JUMPOUT(0x1D179FD88);
}

uint64_t sub_1CB80F998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t (**v1)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = sub_1CB7759C4(*v1);
  v5 = v4;
  result = swift_release();
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t type metadata accessor for MapLastSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MapLastSequence);
}

uint64_t sub_1CB80F9F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB846E40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1CB80FA78(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v10;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  v10 = *a2;
  if (v7 > 7 || v9 != 0 || ((v7 + 33) & ~v7) + v8 > 0x18)
  {
    *a1 = v10;
    a1 = (_QWORD *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v13 = a2[1];
    *a1 = v10;
    a1[1] = v13;
    v14 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v15 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    v16 = *(_QWORD *)(v15 + 8);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_QWORD *)(v14 + 8) = v16;
    *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
    v17 = (void *)((v14 + v7 + 17) & ~v7);
    v18 = (const void *)((v15 + v7 + 17) & ~v7);
    v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_retain();
    swift_retain();
    if (v19(v18, 1, v4))
    {
      memcpy(v17, v18, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v17, v18, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_1CB80FBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  swift_release();
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  return result;
}

_QWORD *sub_1CB80FC48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  size_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v6 + 8);
  *(_QWORD *)v5 = *(_QWORD *)v6;
  *(_QWORD *)(v5 + 8) = v7;
  *(_BYTE *)(v5 + 16) = *(_BYTE *)(v6 + 16);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)((v10 + 17 + v5) & ~v10);
  v12 = (const void *)((v10 + 17 + v6) & ~v10);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  swift_retain();
  if (v13(v12, 1, v8))
  {
    if (*(_DWORD *)(v9 + 84))
      v14 = *(_QWORD *)(v9 + 64);
    else
      v14 = *(_QWORD *)(v9 + 64) + 1;
    memcpy(v11, v12, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v11, v12, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_1CB80FD38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  size_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = v9;
  swift_retain();
  swift_release();
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)((v12 + 17 + v7) & ~v12);
  v14 = (void *)((v12 + 17 + v8) & ~v12);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v15(v13, 1, v10);
  v16 = v15(v14, 1, v10);
  if ((_DWORD)v8)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v13, v14, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
      return a1;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v13, v14, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v17 = *(_QWORD *)(v11 + 64);
  else
    v17 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v13, v14, v17);
  return a1;
}

_OWORD *sub_1CB80FE88(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  size_t v11;

  *a1 = *a2;
  v4 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v4 = *(_OWORD *)v5;
  *(_BYTE *)(v4 + 16) = *(_BYTE *)(v5 + 16);
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)((v8 + 17 + v4) & ~v8);
  v10 = (const void *)((v8 + 17 + v5) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84))
      v11 = *(_QWORD *)(v7 + 64);
    else
      v11 = *(_QWORD *)(v7 + 64) + 1;
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

_OWORD *sub_1CB80FF60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  size_t v15;

  v5 = (unint64_t)a2 + 23;
  *a1 = *a2;
  swift_release();
  v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v6 = *(_OWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_BYTE *)(v6 + 16) = *(_BYTE *)((v5 & 0xFFFFFFFFFFFFFFF8) + 16);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)((v10 + 17 + v6) & ~v10);
  v12 = (void *)((v10 + 17 + v7) & ~v10);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v7) = v13(v11, 1, v8);
  v14 = v13(v12, 1, v8);
  if ((_DWORD)v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v12, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      return a1;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v11, v12, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v15 = *(_QWORD *)(v9 + 64);
  else
    v15 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v11, v12, v15);
  return a1;
}

uint64_t sub_1CB81009C(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (v5)
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_28;
  v11 = v8 + ((v9 + 33) & ~v9);
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(_WORD *)((char *)a1 + v11))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 < 2)
    {
LABEL_28:
      if ((v6 & 0x80000000) != 0)
      {
        v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                     + v9
                                                                     + 17) & ~v9);
        if (v18 >= 2)
          return v18 - 1;
        else
          return 0;
      }
      else
      {
        v17 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v17) = -1;
        return (v17 + 1);
      }
    }
  }
  v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((_BYTE *)a1 + v11))
    goto LABEL_28;
LABEL_21:
  v16 = (v13 - 1) << v12;
  if (v11 > 3)
    v16 = 0;
  if ((_DWORD)v11)
  {
    if (v11 > 3)
      LODWORD(v11) = 4;
    __asm { BR              X12 }
  }
  return v7 + v16 + 1;
}

void sub_1CB810220(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((*(unsigned __int8 *)(v7 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v11;
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X15 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_1CB81047C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1CB810484()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1CB8104A4()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1CB8104AC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1CB8104BC()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t type metadata accessor for MapLastSequence.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MapLastSequence.AsyncIterator);
}

uint64_t sub_1CB8104D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = *(_QWORD *)(a2 + 16);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v5 = sub_1CB846E40();
  v3[9] = v5;
  v3[10] = *(_QWORD *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CB81058C()
{
  uint64_t v0;
  int **v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  _QWORD *v17;
  uint64_t (*v18)(uint64_t);

  v1 = *(int ***)(v0 + 32);
  if (*((_BYTE *)v1 + 32) == 1)
  {
    *((_BYTE *)v1 + 32) = 0;
    v18 = (uint64_t (*)(uint64_t))((char *)*v1 + **v1);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v2;
    *v2 = v0;
    v2[1] = sub_1CB810720;
    v3 = *(_QWORD *)(v0 + 104);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 48);
    v9 = *(int *)(*(_QWORD *)(v0 + 24) + 36);
    *(_DWORD *)(v0 + 160) = v9;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v4, (char *)v1 + v9, v5);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    *(_QWORD *)(v0 + 128) = v10;
    if (v10(v4, 1, v7) == 1)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 40));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v12 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 64);
    v14 = *(_QWORD *)(v0 + 40);
    v15 = *(_QWORD **)(v0 + 32);
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 48) + 32);
    *(_QWORD *)(v0 + 136) = v16;
    v16(v13, v12, v14);
    v18 = (uint64_t (*)(uint64_t))(*(int *)*v15 + *v15);
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v17;
    *v17 = v0;
    v17[1] = sub_1CB8108EC;
    v3 = *(_QWORD *)(v0 + 88);
  }
  return v18(v3);
}

uint64_t sub_1CB810720()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB810784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t (*v16)(_QWORD);

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 40))(*(_QWORD *)(v0 + 32) + *(int *)(*(_QWORD *)(v0 + 24) + 36), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(int *)(*(_QWORD *)(v0 + 24) + 36);
  *(_DWORD *)(v0 + 160) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v6 + v7, v2);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  *(_QWORD *)(v0 + 128) = v8;
  if (v8(v1, 1, v4) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 40));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 40);
    v13 = *(_QWORD **)(v0 + 32);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 48) + 32);
    *(_QWORD *)(v0 + 136) = v14;
    v14(v11, v10, v12);
    v16 = (uint64_t (*)(_QWORD))(*(int *)*v13 + *v13);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v15;
    *v15 = v0;
    v15[1] = sub_1CB8108EC;
    return v16(*(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_1CB8108EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB810950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 40);
  if ((*(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v0 + 128))(*(_QWORD *)(v0 + 88), 1, v1) == 1)
  {
    v2 = *(_QWORD *)(v0 + 64);
    v3 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t))(*(_QWORD *)(v0 + 32) + 16))(v2);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v0 + 136))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v1);
  }
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 40))(*(_QWORD *)(v0 + 32) + *(int *)(v0 + 160), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  v4(v7, v5, v6);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 56))(*(_QWORD *)(v0 + 16), 0, 1, *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB810A6C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB810AD8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB810B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB785488;
  return sub_1CB8104D4(a1, a2);
}

void sub_1CB810BB4()
{
  JUMPOUT(0x1D179FD88);
}

uint64_t sub_1CB810BC4()
{
  uint64_t (**v0)(void);

  sub_1CB7759C4(*v0);
  return swift_release();
}

uint64_t SISchemaUUID.toNSUUIDSafely()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v3 = objc_msgSend(v1, sel_value);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1CB845F94();
    v7 = v6;

    sub_1CB7B601C(v5, v7);
    return sub_1CB779034(v5, v7);
  }
  else
  {
    v9 = sub_1CB846084();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t PLUSUniversalSuggestionsInferenceLogger.__allocating_init()()
{
  id v0;
  void *v1;
  unsigned int v2;
  ValueMetadata *v3;
  _UNKNOWN **v4;
  uint64_t v5;
  __int128 v7;
  ValueMetadata *v8;
  _UNKNOWN **v9;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  v3 = &type metadata for SiriAnalyticsSharedPLUSEventLogTarget;
  if (v2)
    v3 = &type metadata for DisabledPLUSEventLogTarget;
  v4 = &protocol witness table for DisabledPLUSEventLogTarget;
  if (!v2)
    v4 = &protocol witness table for SiriAnalyticsSharedPLUSEventLogTarget;
  v8 = v3;
  v9 = v4;
  type metadata accessor for PLUSUniversalSuggestionsInferenceLogger();
  v5 = swift_allocObject();
  sub_1CB7780BC(&v7, v5 + 16);
  return v5;
}

uint64_t PLUSUniversalSuggestionsInferenceLogger.__allocating_init(logTarget:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1CB7780BC(a1, v2 + 16);
  return v2;
}

uint64_t type metadata accessor for PLUSUniversalSuggestionsInferenceLogger()
{
  return objc_opt_self();
}

uint64_t PLUSUniversalSuggestionsInferenceLogger.init(logTarget:)(__int128 *a1)
{
  uint64_t v1;

  sub_1CB7780BC(a1, v1 + 16);
  return v1;
}

void sub_1CB810DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CB846084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v41 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v41 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v16, a1, v9);
  sub_1CB7AA4F0((uint64_t)v16, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1CB778FF4((uint64_t)v8);
    if (qword_1ED88E518 != -1)
      swift_once();
    v20 = sub_1CB8466D8();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED890248);
    v21 = sub_1CB8466C0();
    v22 = sub_1CB846C90();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1CB771000, v21, v22, "Could not generate a plus logging identifier for a SELF event donation", v23, 2u);
      MEMORY[0x1D179FE84](v23, -1, -1);
    }

  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v24(v18, v8, v9);
    v19(v13, (uint64_t)v18, v9);
    type metadata accessor for PLUSSchemaEventConstructor();
    v25 = swift_allocObject();
    v24((char *)(v25 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId), v13, v9);
    *(_DWORD *)(v25
              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
    v26 = sub_1CB8441E0(a2);
    if (v26)
    {
      v27 = v26;
      v28 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO35suggestionChangeDataCaptureMetadata10changeTypeSo0e10PLUSChangejkL0CSgSo0eojkN0V_tFZ_0(a3);
      if (v28)
      {
        v29 = v28;
        v30 = sub_1CB797C1C((uint64_t)v27, (uint64_t)v28);
        if (v30)
        {
          v31 = v30;
          v32 = v42[5];
          v33 = v42[6];
          __swift_project_boxed_opaque_existential_1(v42 + 2, v32);
          PLUSEventLogTarget.emitMessage(_:isolatedStreamId:)((uint64_t)v31, (uint64_t)v18, v32, v33);

          swift_setDeallocating();
          v34 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
          v34(v25 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v9);
          swift_deallocClassInstance();

          v34((uint64_t)v18, v9);
          return;
        }

        v27 = v29;
      }

    }
    if (qword_1ED88E518 != -1)
      swift_once();
    v35 = sub_1CB8466D8();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED890248);
    v36 = sub_1CB8466C0();
    v37 = sub_1CB846C90();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v44 = v39;
      *(_DWORD *)v38 = 136315138;
      v43 = sub_1CB775A54(0xD00000000000004BLL, 0x80000001CB8574F0, &v44);
      sub_1CB846E58();
      _os_log_impl(&dword_1CB771000, v36, v37, "PLUSUniversalSuggestionsInferenceLogger.%s:  failed to create PLUS SELF event templates", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v39, -1, -1);
      MEMORY[0x1D179FE84](v38, -1, -1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
    }
    else
    {
      swift_setDeallocating();
      v40 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v40(v25 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v9);
      swift_deallocClassInstance();

      v40((uint64_t)v18, v9);
    }
  }
}

void sub_1CB8112A0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  void (*v48)(uint64_t, uint64_t);
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  LODWORD(v51) = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v49 - v9;
  v11 = sub_1CB846084();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v52 = (char *)&v49 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v49 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v49 - v21;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v50 = a1;
  v23(v20, a1, v11);
  sub_1CB7AA4F0((uint64_t)v20, (uint64_t)v10);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v24(v10, 1, v11) == 1)
  {
    sub_1CB778FF4((uint64_t)v10);
    if (qword_1ED88E518 != -1)
      swift_once();
    v25 = sub_1CB8466D8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED890248);
    v26 = sub_1CB8466C0();
    v27 = sub_1CB846C90();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1CB771000, v26, v27, "Could not generate a plus logging identifier for a SELF event donation", v28, 2u);
      MEMORY[0x1D179FE84](v28, -1, -1);
    }

  }
  else
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v29(v22, v10, v11);
    type metadata accessor for PLUSLoggingIdGenerator();
    static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)((uint64_t)v22, a2, (uint64_t)v8);
    v30 = (uint64_t)v22;
    if (v24(v8, 1, v11) == 1)
    {
      sub_1CB778FF4((uint64_t)v8);
      if (qword_1ED88E518 != -1)
        swift_once();
      v31 = sub_1CB8466D8();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED890248);
      v32 = sub_1CB8466C0();
      v33 = sub_1CB846C90();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_1CB771000, v32, v33, "Could not generate a suggestion link id for a SELF event donation", v34, 2u);
        MEMORY[0x1D179FE84](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v11);
    }
    else
    {
      v35 = (uint64_t)v52;
      v29(v52, v8, v11);
      v23(v15, v30, v11);
      type metadata accessor for PLUSSchemaEventConstructor();
      v36 = swift_allocObject();
      v29((char *)(v36 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId), v15, v11);
      *(_DWORD *)(v36
                + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
      v37 = sub_1CB797E3C(v50, v35, v51, 0);
      if (v37)
      {
        v38 = v37;
        v39 = v49[5];
        v40 = v49[6];
        __swift_project_boxed_opaque_existential_1(v49 + 2, v39);
        PLUSEventLogTarget.emitMessage(_:isolatedStreamId:)((uint64_t)v38, v30, v39, v40);
        swift_setDeallocating();
        v41 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
        v41(v36 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v11);
        swift_deallocClassInstance();

        v41(v35, v11);
        v41(v30, v11);
      }
      else
      {
        v51 = v30;
        if (qword_1ED88E518 != -1)
          swift_once();
        v42 = sub_1CB8466D8();
        __swift_project_value_buffer(v42, (uint64_t)qword_1ED890248);
        v43 = sub_1CB8466C0();
        v44 = sub_1CB846C90();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc();
          v46 = swift_slowAlloc();
          v54 = v46;
          *(_DWORD *)v45 = 136315138;
          v53 = sub_1CB775A54(0xD00000000000004FLL, 0x80000001CB857540, &v54);
          sub_1CB846E58();
          _os_log_impl(&dword_1CB771000, v43, v44, "PLUSUniversalSuggestionsInferenceLogger.%s:  failed to create PLUS SELF event templates", v45, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D179FE84](v46, -1, -1);
          MEMORY[0x1D179FE84](v45, -1, -1);

          swift_release();
          v47 = *(void (**)(char *, uint64_t))(v12 + 8);
          v47(v52, v11);
          v47((char *)v51, v11);
        }
        else
        {
          swift_setDeallocating();
          v48 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
          v48(v36 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v11);
          swift_deallocClassInstance();

          v48(v35, v11);
          v48(v51, v11);
        }
      }
    }
  }
}

uint64_t PLUSUniversalSuggestionsInferenceLogger.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t PLUSUniversalSuggestionsInferenceLogger.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t method lookup function for PLUSUniversalSuggestionsInferenceLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsInferenceLogger.__allocating_init(logTarget:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsInferenceLogger.logSuggestionGenerated(originalRequestId:suggestion:changeDataCaptureType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsInferenceLogger.logSuggestionOutcomeReported(originalRequestId:suggestionId:suggestionOutcome:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1CB81191C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1CB811968(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for BiomeAsyncIterator(0, a2, a3, a4);
  v5 = swift_allocObject();
  v6 = a1;
  sub_1CB811A24(v6, v7, v8, v9);
  return v5;
}

uint64_t sub_1CB8119A8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  sub_1CB811A24(a1, v3, v4, v5);
  return v2;
}

void sub_1CB8119E4(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  void **v4;
  void *v6;
  uint64_t v7;

  v6 = *v4;
  v7 = sub_1CB811968(v6, *(_QWORD *)(a1 + 16), a2, a3);

  *a4 = v7;
}

uint64_t sub_1CB811A24(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v7;
  id v8;

  v5 = v4;
  _s17AsyncAwaitAdapterCMa(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v7 = sub_1CB794764();
  *(_QWORD *)(v4 + 16) = v7;
  *(_BYTE *)(v4 + 24) = 0;
  v8 = v7;
  objc_msgSend(a1, sel_subscribe_, v8);

  return v5;
}

uint64_t sub_1CB811A94()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  *(_QWORD *)(v1 + 32) = *v0;
  return swift_task_switch();
}

uint64_t sub_1CB811AB4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  if ((sub_1CB846B94() & 1) != 0)
  {
    *(_BYTE *)(v1 + 24) = 1;
    sub_1CB794190();
    sub_1CB846B4C();
    sub_1CB785A70();
    swift_allocError();
    sub_1CB8467D4();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v3;
    sub_1CB846E40();
    *v3 = v0;
    v3[1] = sub_1CB811BE0;
    return sub_1CB847278();
  }
}

uint64_t sub_1CB811BE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB811C44()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB811C50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = v0;
  v2 = *(void **)(v0 + 16);
  sub_1CB794190();

  return v1;
}

uint64_t sub_1CB811C7C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  sub_1CB794190();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BiomeAsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BiomeAsyncIterator);
}

uint64_t type metadata accessor for BiomeAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BiomeAsyncSequence);
}

void sub_1CB811CC8()
{
  JUMPOUT(0x1D179FD88);
}

uint64_t sub_1CB811CD8(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1CB784FBC;
  v4[3] = v3;
  v4[4] = *v3;
  return swift_task_switch();
}

uint64_t sub_1CB811D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 24) = a4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 32) = v7;
  type metadata accessor for BiomeAsyncIterator(0, *(_QWORD *)(a5 + 80), v8, v9);
  *v7 = v5;
  v7[1] = sub_1CB7AF91C;
  return sub_1CB846B64();
}

uint64_t sub_1CB811DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a6, a1, AssociatedTypeWitness);
  result = type metadata accessor for AsyncTimedSequence.Iterator(0, a4, a5, v15);
  *(double *)(a6 + *(int *)(result + 36)) = a7;
  v17 = (_QWORD *)(a6 + *(int *)(result + 40));
  *v17 = a2;
  v17[1] = a3;
  return result;
}

uint64_t sub_1CB811E90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CB811EAC()
{
  uint64_t v0;
  _QWORD *v1;

  *(CFAbsoluteTime *)(v0 + 40) = CFAbsoluteTimeGetCurrent();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1CB811F68;
  return sub_1CB846B58();
}

uint64_t sub_1CB811F68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1CB811FD4()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD, double);

  v1 = *(double *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = CFAbsoluteTimeGetCurrent() - v1;
  if (*(double *)(v3 + *(int *)(v2 + 36)) >= v4)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v5 = (_QWORD *)(*(_QWORD *)(v0 + 32) + *(int *)(*(_QWORD *)(v0 + 24) + 40));
  v8 = (uint64_t (*)(_QWORD, double))(*(int *)*v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v6;
  *v6 = v0;
  v6[1] = sub_1CB812080;
  return v8(*(_QWORD *)(v0 + 16), v4);
}

uint64_t sub_1CB812080()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CB8120CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1CB785488;
  v6[3] = a2;
  v6[4] = v2;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CB81213C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_1CB812210;
  return sub_1CB846B64();
}

uint64_t sub_1CB812210()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v3 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  swift_task_dealloc();
  return ((uint64_t (*)(void))v3[1])();
}

uint64_t sub_1CB812288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v3 = v2;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v8 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v3, v6);
  sub_1CB846BA0();
  sub_1CB811DE8((uint64_t)v14, *(_QWORD *)(v3 + *(int *)(a1 + 40)), *(_QWORD *)(v3 + *(int *)(a1 + 40) + 8), v6, v11, a2, *(double *)(v3 + *(int *)(a1 + 36)));
  return swift_retain();
}

uint64_t sub_1CB812398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1CB812288(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t sub_1CB8123C8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_1CB812454()
{
  JUMPOUT(0x1D179FD88);
}

uint64_t type metadata accessor for AsyncTimedSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncTimedSequence.Iterator);
}

void sub_1CB812470(uint64_t a1)
{
  sub_1CB7943FC(a1);
}

uint64_t sub_1CB812490()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1CB812518(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    v13 = v12[1];
    v14 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v12;
    v14[1] = v13;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1CB8125E0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_1CB812628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_retain();
  return a1;
}

uint64_t sub_1CB812698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1CB812714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1CB812780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1CB8127F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1CB812878 + 4 * byte_1CB84F120[v10]))();
  }
}

void sub_1CB812904(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1CB812A00()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1CB812A80);
}

void sub_1CB812A08(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1CB812A10);
  JUMPOUT(0x1CB812A80);
}

void sub_1CB812A58()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1CB812A80);
}

void sub_1CB812A60()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1CB812A80);
}

uint64_t sub_1CB812A68(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1CB812A80);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1CB812A7CLL);
    JUMPOUT(0x1CB812A74);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for AsyncTimedSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncTimedSequence);
}

uint64_t sub_1CB812AA4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1CB812B3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    v13 = v12[1];
    v14 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v12;
    v14[1] = v13;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1CB812C20(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_1CB812C8C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_retain();
  return a1;
}

uint64_t sub_1CB812D20(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1CB812DC0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1CB812E50(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1CB812EE8(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

void sub_1CB813040(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0u;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1CB81315C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1CB8131E0);
}

void sub_1CB813164()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1CB81316CLL);
  JUMPOUT(0x1CB8131E0);
}

void sub_1CB8131B8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1CB8131E0);
}

void sub_1CB8131C0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1CB8131E0);
}

uint64_t sub_1CB8131C8@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (!(_DWORD)v4)
    JUMPOUT(0x1CB8131E0);
  if (a1 < 0x7FFFFFFF)
  {
    if ((v4 & 0x80000000) == 0)
      JUMPOUT(0x1CB8131DCLL);
    JUMPOUT(0x1CB8131D4);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v3, v4);
}

uint64_t PluginHandle.instance.getter()
{
  return swift_unknownObjectRetain();
}

id PluginHandle.bundle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t sub_1CB813224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_1CB845F58();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(v0 + 32), sel_bundleURL);
  sub_1CB845F34();

  v6 = sub_1CB845ED4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

_QWORD *PluginHandle.__allocating_init(instance:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

_QWORD *PluginHandle.init(instance:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CB8133B0(a1, a3, v3, ObjectType, a2);
}

uint64_t PluginHandle.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return v0;
}

uint64_t PluginHandle.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

_QWORD *sub_1CB8133B0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  a3[2] = a1;
  a3[3] = a5;
  a3[4] = a2;
  return a3;
}

uint64_t type metadata accessor for PluginHandle()
{
  return objc_opt_self();
}

uint64_t method lookup function for PluginHandle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PluginHandle.sourceBundleName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PluginHandle.__allocating_init(instance:bundle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t static SELFUsoRedactionUtils.joinRedactedSELFUsoGraph(graph:redactions:)(void *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  id v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  id v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  void (*v41)(_QWORD *, _QWORD);
  void (*v42)(_QWORD *, _QWORD);
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD);
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_QWORD *, _QWORD);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  char v67[32];
  _QWORD v68[5];
  uint64_t v69;

  v4 = sub_1CB8461EC();
  v64 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v54 - v8;
  v63 = sub_1CB84624C();
  v10 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CB84627C();
  v58 = *(_QWORD *)(v13 - 8);
  v59 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1CB813D94(a2);
  v61 = v15;
  sub_1CB846270();
  v17 = objc_msgSend(a1, sel_nodes);
  v18 = MEMORY[0x1E0DEE9D8];
  v66 = v9;
  if (v17)
  {
    v19 = v17;
    v65 = v16;
    sub_1CB777FA8(0, &qword_1EF9A17D0);
    v20 = sub_1CB846A5C();

    v68[0] = v18;
    sub_1CB7764B8(0, 0, 0);
    v21 = v20;
    v22 = v68[0];
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_1CB847044();
      v21 = v20;
      v23 = result;
    }
    else
    {
      v23 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
    }
    v54 = v7;
    v55 = v4;
    v62 = (unint64_t)a1;
    if (v23)
    {
      if (v23 < 1)
      {
        __break(1u);
        goto LABEL_43;
      }
      v25 = 0;
      do
      {
        if ((v21 & 0xC000000000000001) != 0)
          v26 = (id)MEMORY[0x1D179F320](v25, v21);
        else
          v26 = *(id *)(v21 + 8 * v25 + 32);
        v27 = v26;
        sub_1CB813AD0(v26, v25, v65);

        v68[0] = v22;
        v29 = *(_QWORD *)(v22 + 16);
        v28 = *(_QWORD *)(v22 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1CB7764B8(v28 > 1, v29 + 1, 1);
          v22 = v68[0];
        }
        ++v25;
        *(_QWORD *)(v22 + 16) = v29 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v22+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v29, v12, v63);
        v9 = v66;
      }
      while (v23 != v25);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v30 = v61;
    sub_1CB846264();
    v7 = v54;
    v4 = v55;
    a1 = (void *)v62;
    v18 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = v61;
  }
  v31 = objc_msgSend(a1, sel_edges, v54, v55);
  if (v31)
  {
    v32 = v31;
    sub_1CB777FA8(0, &qword_1EF9A17C8);
    v33 = sub_1CB846A5C();

    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      v34 = sub_1CB847044();
      swift_bridgeObjectRelease();
      if (v34)
      {
LABEL_19:
        v69 = v18;
        result = sub_1CB77648C(0, v34 & ~(v34 >> 63), 0);
        if ((v34 & 0x8000000000000000) == 0)
        {
          v35 = 0;
          v62 = v33 & 0xC000000000000001;
          v63 = v34;
          v10 = v69;
          v65 = v33;
          do
          {
            if (v62)
              v36 = (id)MEMORY[0x1D179F320](v35, v33);
            else
              v36 = *(id *)(v33 + 8 * v35 + 32);
            v37 = v36;
            sub_1CB8461E0();
            objc_msgSend(v37, sel_fromIndex);
            sub_1CB8461D4();
            objc_msgSend(v37, sel_toIndex);
            sub_1CB8461C8();
            if (objc_msgSend(v37, sel_hasLabel))
            {
              v38 = objc_msgSend(v37, sel_label);
              if (v38)
              {
                v39 = v38;
                v40 = v4;
                objc_msgSend(v38, sel_usoElementId);
                v41 = (void (*)(_QWORD *, _QWORD))sub_1CB8461BC();
                sub_1CB8462AC();
                v41(v68, 0);
                objc_msgSend(v39, sel_enumeration);
                v42 = (void (*)(_QWORD *, _QWORD))sub_1CB8461BC();
                sub_1CB8462A0();
                v42(v68, 0);
                if (objc_msgSend(v39, sel_hasBaseEdgeLabel))
                {
                  v43 = objc_msgSend(v39, sel_baseEdgeLabel);
                  if (v43)
                  {
                    v44 = v43;
                    v45 = objc_msgSend(v43, sel_value);

                    if (v45)
                    {
                      sub_1CB8468A0();
                      v56 = v46;

                      v57 = (void (*)(_QWORD *, _QWORD))sub_1CB8461BC();
                      v47 = (void (*)(char *, _QWORD))sub_1CB846294();
                      sub_1CB846288();
                      v47(v67, 0);
                      v57(v68, 0);
                    }
                  }
                }

                v4 = v40;
                v9 = v66;
              }
            }
            v48 = v64;
            v49 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
            v49(v9, v7, v4);

            v69 = v10;
            v51 = *(_QWORD *)(v10 + 16);
            v50 = *(_QWORD *)(v10 + 24);
            if (v51 >= v50 >> 1)
            {
              sub_1CB77648C(v50 > 1, v51 + 1, 1);
              v48 = v64;
              v10 = v69;
            }
            ++v35;
            *(_QWORD *)(v10 + 16) = v51 + 1;
            v49((char *)(v10+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v51), v9, v4);
            v33 = v65;
          }
          while (v63 != v35);
          swift_bridgeObjectRelease();
          v30 = v61;
          goto LABEL_38;
        }
LABEL_43:
        __break(1u);
        return result;
      }
    }
    else
    {
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v34)
        goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_38:
    sub_1CB846258();
  }
  sub_1CB846330();
  sub_1CB846360();
  swift_allocObject();
  sub_1CB846354();
  v52 = v60;
  v53 = sub_1CB8462B8();
  if (!v52)
    v10 = v53;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v59);
  swift_release();
  return v10;
}

void sub_1CB813AD0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  unint64_t v13;
  char v14;
  id v15;
  id v16;
  void *v17;

  v6 = sub_1CB846510();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1CB846534();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1CB846540();
  MEMORY[0x1E0C80A78](v8);
  sub_1CB846240();
  if (objc_msgSend(a1, sel_hasUsoVerbElementId))
  {
    objc_msgSend(a1, sel_usoVerbElementId);
    sub_1CB84654C();
    sub_1CB846228();
  }
  if (objc_msgSend(a1, sel_hasUsoElementId))
  {
    objc_msgSend(a1, sel_usoElementId);
    sub_1CB846204();
  }
  if (objc_msgSend(a1, sel_hasEntityLabel))
  {
    v9 = objc_msgSend(a1, sel_entityLabel);
    if (v9)
    {
      v10 = v9;
      sub_1CB8468A0();

      sub_1CB8461F8();
    }
  }
  if (objc_msgSend(a1, sel_hasVerbLabel))
  {
    v11 = objc_msgSend(a1, sel_verbLabel);
    if (v11)
    {
      v12 = v11;
      sub_1CB8468A0();

      sub_1CB846234();
    }
  }
  if (*(_QWORD *)(a3 + 16))
  {
    v13 = sub_1CB779C18(a2);
    if ((v14 & 1) != 0)
    {
      v15 = *(id *)(*(_QWORD *)(a3 + 56) + 8 * v13);
      if (objc_msgSend(v15, sel_hasStringPayload)
        && (v16 = objc_msgSend(v15, sel_stringPayload)) != 0)
      {
        v17 = v16;
        sub_1CB8468A0();

        sub_1CB846528();
        sub_1CB846210();
      }
      else if (objc_msgSend(v15, sel_hasIntegerPayload))
      {
        objc_msgSend(v15, sel_integerPayload);
        sub_1CB84651C();
        sub_1CB84621C();
      }

    }
  }
}

uint64_t sub_1CB813D94(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  __objc2_prot_list **p_base_prots;
  id v6;
  void *v7;
  BOOL v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_64;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_65;
LABEL_3:
  v3 = 0;
  v49 = v1 & 0xC000000000000001;
  v44 = v1 + 32;
  v45 = v1 & 0xFFFFFFFFFFFFFF8;
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  p_base_prots = &SupportedLocalesPListStore.base_prots;
  v46 = v1;
  v47 = v2;
  while (1)
  {
    if (v49)
    {
      v6 = (id)MEMORY[0x1D179F320](v3, v1);
    }
    else
    {
      if (v3 >= *(_QWORD *)(v45 + 16))
        goto LABEL_62;
      v6 = *(id *)(v44 + 8 * v3);
    }
    v7 = v6;
    v8 = __OFADD__(v3++, 1);
    if (v8)
      goto LABEL_60;
    v9 = objc_msgSend(v6, sel_linkedUsoNodeDatas);
    v51 = v7;
    if (!v9)
      goto LABEL_26;
    v10 = v9;
    sub_1CB777FA8(0, &qword_1EF9A17E0);
    v11 = sub_1CB846A5C();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = sub_1CB847044();
      if (!v12)
      {
LABEL_25:
        swift_bridgeObjectRelease_n();
        goto LABEL_26;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12)
        goto LABEL_25;
    }
    v13 = 4;
    while (1)
    {
      if ((v11 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x1D179F320](v13 - 4, v11);
      else
        v14 = *(id *)(v11 + 8 * v13);
      v15 = v14;
      v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
      {
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        swift_bridgeObjectRetain();
        v2 = sub_1CB847044();
        if (!v2)
        {
LABEL_65:
          v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_66:
          swift_bridgeObjectRelease();
          return (uint64_t)v4;
        }
        goto LABEL_3;
      }
      if ((objc_msgSend(v14, sel_hasIntegerPayload) & 1) != 0
        || (objc_msgSend(v15, sel_hasStringPayload) & 1) != 0)
      {
        break;
      }

      ++v13;
      if (v16 == v12)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease_n();
    v17 = objc_msgSend(v15, sel_index);
    v18 = v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1CB82EA2C((uint64_t)v18, v17, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
LABEL_23:
    p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
LABEL_26:
    v20 = objc_msgSend(v7, sel_linkedUsoGraphNodeDatas);
    if (!v20)
    {

      if (v3 == v2)
        goto LABEL_66;
      continue;
    }
    v21 = v20;
    v50 = v3;
    sub_1CB777FA8(0, &qword_1EF9A17D8);
    v22 = sub_1CB846A5C();

    if (!(v22 >> 62))
      break;
    swift_bridgeObjectRetain_n();
    v23 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v23)
      goto LABEL_29;
LABEL_4:

    swift_bridgeObjectRelease_n();
    v2 = v47;
    v3 = v50;
    if (v50 == v47)
      goto LABEL_66;
  }
  v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v23)
    goto LABEL_4;
LABEL_29:
  v24 = v22 & 0xC000000000000001;
  v25 = 0;
  if ((v22 & 0xC000000000000001) == 0)
  {
LABEL_35:
    v27 = *(id *)(v22 + 8 * v25 + 32);
    goto LABEL_36;
  }
  while (1)
  {
    v27 = (id)MEMORY[0x1D179F320](v25, v22);
LABEL_36:
    v28 = v27;
    v29 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    v30 = objc_msgSend(v27, (SEL)p_base_prots[486]);
    if (!v30)
    {
      v26 = v28;
      goto LABEL_32;
    }
    v26 = v30;
    if ((objc_msgSend(v30, sel_hasStringPayload) & 1) == 0
      && !objc_msgSend(v26, sel_hasIntegerPayload))
    {

LABEL_32:
      ++v25;
      if (v29 == v23)
        goto LABEL_4;
      if (!v24)
        goto LABEL_35;
      continue;
    }
    v31 = objc_msgSend(v26, sel_index);
    v1 = swift_isUniquelyReferenced_nonNull_native();
    v48 = v31;
    v33 = sub_1CB779C18(v31);
    v34 = v4[2];
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
      goto LABEL_61;
    v37 = v32;
    if (v4[3] < v36)
      break;
    if ((v1 & 1) == 0)
      sub_1CB77EF74();
LABEL_47:
    v1 = 8 * v33;
    if ((v37 & 1) != 0)
    {
      v40 = v4[7];

      *(_QWORD *)(v40 + v1) = v26;
    }
    else
    {
      v4[(v33 >> 6) + 8] |= 1 << v33;
      *(_QWORD *)(v4[6] + 8 * v33) = v48;
      *(_QWORD *)(v4[7] + 8 * v33) = v26;
      v41 = v4[2];
      v8 = __OFADD__(v41, 1);
      v42 = v41 + 1;
      if (v8)
        goto LABEL_63;
      v4[2] = v42;
    }

    swift_bridgeObjectRelease();
    v1 = v46;
    p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
    if (v29 == v23)
      goto LABEL_4;
    v25 = v29;
    if (!v24)
      goto LABEL_35;
  }
  sub_1CB77B6F8(v36, v1);
  v38 = sub_1CB779C18(v48);
  if ((v37 & 1) == (v39 & 1))
  {
    v33 = v38;
    goto LABEL_47;
  }
  result = sub_1CB847290();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SELFUsoRedactionUtils()
{
  return &type metadata for SELFUsoRedactionUtils;
}

uint64_t sub_1CB8142DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;

  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return AnyAsyncSequence.init<A>(_:)((uint64_t)v8, AssociatedTypeWitness, a1, a2, a3);
}

uint64_t AnyAsyncSequence.makeAsyncIterator()()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t AnyAsyncSequence.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>)
{
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t result;

  v10 = *(_QWORD *)(a3 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32))(&v12[v11], a1, a3);
  *a5 = sub_1CB8145B4;
  a5[1] = (uint64_t (*)())v12;
  return result;
}

{
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t result;

  v10 = *(_QWORD *)(a3 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32))(&v12[v11], a1, a3);
  *a5 = sub_1CB814820;
  a5[1] = (uint64_t (*)())v12;
  return result;
}

uint64_t sub_1CB814444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v19 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  sub_1CB846BA0();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, AssociatedTypeWitness);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1CB7D0828((uint64_t)v14, v20, AssociatedTypeWitness, AssociatedConformanceWitness, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, AssociatedTypeWitness);
}

uint64_t sub_1CB8145B4()
{
  return sub_1CB81482C((uint64_t (*)(uint64_t, _QWORD))sub_1CB814444);
}

uint64_t sub_1CB814658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v19 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  sub_1CB8469E4();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, AssociatedTypeWitness);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1CB7D09D4((uint64_t)v14, v20, AssociatedTypeWitness, AssociatedConformanceWitness, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, AssociatedTypeWitness);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1CB814820()
{
  return sub_1CB81482C((uint64_t (*)(uint64_t, _QWORD))sub_1CB814658);
}

uint64_t sub_1CB81482C(uint64_t (*a1)(uint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 80);
  return a1(v1 + ((v2 + 40) & ~v2), *(_QWORD *)(v1 + 16));
}

void sub_1CB814850()
{
  JUMPOUT(0x1D179FD88);
}

uint64_t sub_1CB814860()
{
  AnyAsyncSequence.makeAsyncIterator()();
  return swift_release();
}

uint64_t type metadata accessor for AnyAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAsyncSequence);
}

uint64_t MTToggleAlarmIntentFeatureExtractor.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000013;
  *(_QWORD *)(result + 24) = 0x80000001CB857640;
  return result;
}

uint64_t MTToggleAlarmIntentFeatureExtractor.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  *(_QWORD *)(v0 + 24) = 0x80000001CB857640;
  return result;
}

uint64_t sub_1CB8148E4(id *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  id v34;

  v2 = *a1;
  v3 = objc_msgSend(v2, sel_intent);
  v4 = sub_1CB7CF004();
  if (!v5)
    goto LABEL_17;
  v7 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  if (v4 == v7 && v5 == v6)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      goto LABEL_17;
  }
  v10 = objc_msgSend(v3, sel_parametersByName);
  if (!v10)
  {
LABEL_17:

    return MEMORY[0x1E0DEE9D8];
  }
  v11 = v10;
  v12 = sub_1CB8467EC();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1CB848A60;
  v14 = type metadata accessor for MTToggleAlarmEventFeature.EventType(0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v7;
  *(_QWORD *)(v15 + 24) = v6;
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 64) = sub_1CB78E6AC(&qword_1EF9A17E8, type metadata accessor for MTToggleAlarmEventFeature.EventType);
  *(_QWORD *)(v13 + 32) = v15;
  swift_bridgeObjectRetain();
  v16 = objc_msgSend(v2, sel__donatedBySiri);
  v17 = type metadata accessor for MTToggleAlarmEventFeature.DonatedBySiri(0);
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = v16;
  *(_QWORD *)(v13 + 96) = v17;
  *(_QWORD *)(v13 + 104) = sub_1CB78E6AC(&qword_1EF9A17F0, type metadata accessor for MTToggleAlarmEventFeature.DonatedBySiri);
  *(_QWORD *)(v13 + 72) = v18;
  if (!*(_QWORD *)(v12 + 16) || (v19 = sub_1CB779A70(0x6D72616C61, 0xE500000000000000), (v20 & 1) == 0))
  {
    v31 = 0u;
    v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  sub_1CB778000(*(_QWORD *)(v12 + 56) + 32 * v19, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v32 + 1))
  {
LABEL_19:

    sub_1CB778110((uint64_t)&v31);
    return v13;
  }
  sub_1CB814ECC();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v21 = v34;
    v22 = objc_msgSend(v34, sel_displayString);
    v23 = sub_1CB8468A0();
    v25 = v24;

    v26 = type metadata accessor for MTToggleAlarmEventFeature.AlarmName(0);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v23;
    *(_QWORD *)(v27 + 24) = v25;
    v29 = *(_QWORD *)(v13 + 16);
    v28 = *(_QWORD *)(v13 + 24);
    if (v29 >= v28 >> 1)
      v13 = (uint64_t)sub_1CB78F738((_QWORD *)(v28 > 1), v29 + 1, 1, (_QWORD *)v13);
    *((_QWORD *)&v32 + 1) = v26;
    v33 = sub_1CB78E6AC(&qword_1EF9A1800, type metadata accessor for MTToggleAlarmEventFeature.AlarmName);
    *(_QWORD *)&v31 = v27;
    *(_QWORD *)(v13 + 16) = v29 + 1;
    sub_1CB7780BC(&v31, v13 + 40 * v29 + 32);

  }
  else
  {

  }
  return v13;
}

uint64_t type metadata accessor for MTToggleAlarmEventFeature.EventType(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A18D8);
}

uint64_t MTToggleAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  return result;
}

uint64_t MTToggleAlarmIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MTToggleAlarmIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTToggleAlarmEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A19C0);
}

uint64_t sub_1CB814CCC(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for MTToggleAlarmEventFeature.EventType);
}

uint64_t sub_1CB814CD8(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for MTToggleAlarmEventFeature.EventType);
}

uint64_t MTToggleAlarmEventFeature.DonatedBySiri.init(value:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t MTToggleAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1;
  v3 = swift_allocObject();
  v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t MTToggleAlarmEventFeature.DonatedBySiri.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MTToggleAlarmEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB814DDC(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for MTToggleAlarmEventFeature.DonatedBySiri(0);
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB814E10(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for MTToggleAlarmEventFeature.DonatedBySiri(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t MTToggleAlarmEventFeature.AlarmName.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t MTToggleAlarmEventFeature.AlarmName.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB814EB4(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for MTToggleAlarmEventFeature.AlarmName);
}

uint64_t sub_1CB814EC0(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for MTToggleAlarmEventFeature.AlarmName);
}

unint64_t sub_1CB814ECC()
{
  unint64_t result;

  result = qword_1EF9A17F8;
  if (!qword_1EF9A17F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF9A17F8);
  }
  return result;
}

uint64_t type metadata accessor for MTToggleAlarmEventFeature.AlarmName(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A1AA8);
}

uint64_t type metadata accessor for MTToggleAlarmIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for MTToggleAlarmIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MTToggleAlarmIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MTToggleAlarmIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

ValueMetadata *type metadata accessor for MTToggleAlarmEventFeature()
{
  return &type metadata for MTToggleAlarmEventFeature;
}

uint64_t RequestIdFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t RequestIdFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t SELFRequestID.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  v4 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject();
  sub_1CB7BDB4C(a1, (uint64_t)v4);
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1CB778FF4((uint64_t)v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1B68);
    swift_deallocPartialClassInstance();
    v5 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 96), v4, v6);
  }
  sub_1CB778FF4(a1);
  return v5;
}

uint64_t RequestIdFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RequestIdFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1CB815010(unint64_t *a1)
{
  sub_1CB81530C(*a1);
}

uint64_t SELFRequestID.init(value:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB7BDB4C(a1, (uint64_t)v5);
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1CB778FF4((uint64_t)v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1B68);
    swift_deallocPartialClassInstance();
    v1 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), v5, v6);
  }
  sub_1CB778FF4(a1);
  return v1;
}

uint64_t SELFRequestID.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SELFRequestID.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void sub_1CB81530C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __objc2_prot_list **p_base_prots;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  id v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __objc2_prot_list **v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v2);
  v63 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CB846084();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v59 - v9;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CB847044();
    if (!v11)
      goto LABEL_37;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11)
      goto LABEL_37;
  }
  v59 = v8;
  v60 = v10;
  v61 = v5;
  v62 = v4;
  v12 = 0;
  v13 = a1 & 0xC000000000000001;
  p_base_prots = &SupportedLocalesPListStore.base_prots;
  v64 = a1 & 0xC000000000000001;
  while (1)
  {
    if (v13)
    {
      swift_bridgeObjectRetain();
      v15 = (id)MEMORY[0x1D179F320](v12, a1);
    }
    else
    {
      v16 = *(void **)(a1 + 8 * v12 + 32);
      swift_bridgeObjectRetain();
      v15 = v16;
    }
    v17 = v15;
    if (objc_msgSend(v15, (SEL)p_base_prots[170], v59) == 6)
    {
      v18 = objc_msgSend(v17, sel_payload);
      if (v18)
      {
        v19 = v18;
        v20 = sub_1CB845F94();
        v22 = v21;

        v23 = (void *)sub_1CB845F88();
        sub_1CB779034(v20, v22);
      }
      else
      {
        v23 = 0;
      }
      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A460]), sel_initWithData_, v23);

      v24 = objc_msgSend(v25, sel_event);
      if (!v24)
      {
LABEL_26:
        swift_bridgeObjectRelease();

        v28 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_35;
        goto LABEL_31;
      }
    }
    else
    {
      v24 = v17;
    }
    v26 = sub_1CB815990();
    objc_msgSend(v24, (SEL)p_base_prots[170]);
    v27 = sub_1CB846D80();
    if (!v27 || v26 != v27)
    {

      swift_bridgeObjectRelease();
      v28 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_35;
      goto LABEL_31;
    }
    v29 = p_base_prots;
    v30 = objc_msgSend(v24, sel_payload);
    if (v30)
    {
      v31 = sub_1CB845F94();
      v33 = v32;

      v34 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v30 = (id)sub_1CB845F88();
      sub_1CB779034(v31, v33);
    }
    else
    {
      v34 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    }
    v35 = objc_msgSend(v34, sel_initWithData_, v30);

    if (!v35)
    {
      swift_bridgeObjectRelease();

      p_base_prots = v29;
      v13 = v64;
      goto LABEL_30;
    }
    objc_opt_self();
    v36 = swift_dynamicCastObjCClass();
    p_base_prots = v29;
    if (!v36)
      break;
    v37 = (void *)v36;

    v38 = objc_msgSend(v37, sel_eventMetadata);
    v13 = v64;
    if (!v38)
      goto LABEL_26;
    v39 = objc_msgSend(v38, sel_requestId);

    swift_bridgeObjectRelease();
    if (v39)
      goto LABEL_36;
LABEL_30:
    v28 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_35;
LABEL_31:
    ++v12;
    if (v28 == v11)
      goto LABEL_37;
  }
  swift_bridgeObjectRelease();

  v13 = v64;
  v28 = v12 + 1;
  if (!__OFADD__(v12, 1))
    goto LABEL_31;
LABEL_35:
  __break(1u);
LABEL_36:
  if (v11 == v12)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    return;
  }
  if (v13)
  {
    v40 = (id)MEMORY[0x1D179F320](v12, a1);
    v41 = v62;
    goto LABEL_43;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_52;
  }
  v41 = v62;
  if (v12 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    return;
  }
  v40 = *(id *)(a1 + 8 * v12 + 32);
LABEL_43:
  v42 = (void *)sub_1CB7B5E78();
  v43 = objc_msgSend(v42, sel_eventMetadata);

  v44 = objc_msgSend(v43, sel_requestId);
  if (!v44)
    goto LABEL_53;
  swift_bridgeObjectRelease();
  v45 = objc_msgSend(v44, sel_value);
  if (v45)
  {
    v46 = v45;
    v47 = sub_1CB845F94();
    v49 = v48;

    v50 = (uint64_t)v63;
    sub_1CB7B601C(v47, v49);
    sub_1CB779034(v47, v49);
    v51 = v61;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v50, 1, v41) != 1)
    {
      v52 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 32);
      v53 = v60;
      v52(v60, v50, v41);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
      v54 = v41;
      v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_1CB848A50;
      v56 = v59;
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v59, v53, v54);
      v57 = type metadata accessor for SELFRequestID();
      v58 = swift_allocObject();
      v52((char *)(v58 + *(_QWORD *)(*(_QWORD *)v58 + 96)), (uint64_t)v56, v54);
      *(_QWORD *)(v55 + 56) = v57;
      *(_QWORD *)(v55 + 64) = sub_1CB8159CC();
      *(_QWORD *)(v55 + 32) = v58;

      (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v54);
      return;
    }
  }
  else
  {
    v50 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v63, 1, 1, v41);
  }

  sub_1CB778FF4(v50);
}

uint64_t type metadata accessor for RequestIdFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for RequestIdFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RequestIdFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of RequestIdFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t type metadata accessor for SELFRequestID()
{
  uint64_t result;

  result = qword_1ED88BC68;
  if (!qword_1ED88BC68)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1CB815990()
{
  unint64_t result;

  result = qword_1ED88BF68;
  if (!qword_1ED88BF68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED88BF68);
  }
  return result;
}

unint64_t sub_1CB8159CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED88BC60;
  if (!qword_1ED88BC60)
  {
    v1 = type metadata accessor for SELFRequestID();
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for TypedNamedFeature<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED88BC60);
  }
  return result;
}

uint64_t sub_1CB815A14()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1B88);
  sub_1CB8468DC();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  return swift_bridgeObjectRelease();
}

SiriPrivateLearningAnalytics::PrivateLearningPluginError __swiftcall PrivateLearningPluginError.init(message:)(SiriPrivateLearningAnalytics::PrivateLearningPluginError message)
{
  SiriPrivateLearningAnalytics::PrivateLearningPluginError *v1;

  *v1 = message;
  return message;
}

BOOL static PrivateLearningPluginRunContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 3)
    return v3 == 3;
  if (v3 == 3)
    return 0;
  return v2 == v3;
}

uint64_t PrivateLearningPluginRunContext.description.getter()
{
  _BYTE *v0;

  if (*v0 == 3)
    return 0x616E65746E69614DLL;
  sub_1CB846954();
  sub_1CB815A14();
  sub_1CB846954();
  return 0;
}

uint64_t static PrivateLearningPluginError.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1CB8471A0();
}

uint64_t PrivateLearningPluginError.message.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1CB815C74(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1CB8471A0();
}

uint64_t PrivateLearningPluginRunScenario.description.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1B88);
  v1 = sub_1CB8468DC();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t PrivateLearningPluginRunScenario.hash(into:)()
{
  return sub_1CB8472F0();
}

BOOL static PrivateLearningPluginRunScenario.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PrivateLearningPluginRunScenario.hashValue.getter()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

uint64_t sub_1CB815E2C()
{
  _BYTE *v0;

  if (*v0 == 3)
    return 0x616E65746E69614DLL;
  sub_1CB846954();
  sub_1CB815A14();
  sub_1CB846954();
  return 0;
}

BOOL sub_1CB815EC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 3)
    return v3 == 3;
  if (v3 == 3)
    return 0;
  return v2 == v3;
}

uint64_t _s28SiriPrivateLearningAnalytics0bC12PluginResultO2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      if (*a1 != *a2 || v3 != v4)
        return sub_1CB8471A0();
      return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

unint64_t sub_1CB815F68()
{
  unint64_t result;

  result = qword_1EF9A1B90;
  if (!qword_1EF9A1B90)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PrivateLearningPluginRunScenario, &type metadata for PrivateLearningPluginRunScenario);
    atomic_store(result, (unint64_t *)&qword_1EF9A1B90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PrivateLearningPluginResult(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PrivateLearningPluginResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivateLearningPluginResult()
{
  return &type metadata for PrivateLearningPluginResult;
}

ValueMetadata *type metadata accessor for PrivateLearningPluginError()
{
  return &type metadata for PrivateLearningPluginError;
}

uint64_t storeEnumTagSinglePayload for PrivateLearningPluginRunScenario(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CB8160BC + 4 * byte_1CB84F635[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CB8160F0 + 4 * byte_1CB84F630[v4]))();
}

uint64_t sub_1CB8160F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB8160F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB816100);
  return result;
}

uint64_t sub_1CB81610C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB816114);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CB816118(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB816120(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrivateLearningPluginRunScenario()
{
  return &type metadata for PrivateLearningPluginRunScenario;
}

uint64_t getEnumTagSinglePayload for PrivateLearningPluginRunContext(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1CB81618C + 4 * byte_1CB84F63A[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for PrivateLearningPluginRunContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CB816234 + 4 * byte_1CB84F644[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CB816268 + 4 * byte_1CB84F63F[v5]))();
}

uint64_t sub_1CB816268(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB816270(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB816278);
  return result;
}

uint64_t sub_1CB816284(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB81628CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CB816290(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB816298(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB8162A4(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_1CB8162B8(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for PrivateLearningPluginRunContext()
{
  return &type metadata for PrivateLearningPluginRunContext;
}

uint64_t dispatch thunk of PrivateLearningPlugin.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PrivateLearningPlugin.run(context:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ParametrisedPrivateLearningPlugin.run(context:parameters:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

void *static PluginLoader.loadAll(from:)()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_1CB845EE0();
  v10[0] = 0;
  v2 = objc_msgSend(v0, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v1, 0, 0, v10);

  v3 = v10[0];
  if (v2)
  {
    sub_1CB845F58();
    v4 = sub_1CB846A5C();
    v5 = v3;

    v6 = (void *)sub_1CB817914(v4, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = v10[0];
    v6 = (void *)sub_1CB845E80();

    swift_willThrow();
    sub_1CB7C65D4();
    swift_allocError();
    *(_QWORD *)v8 = 0;
    *(_QWORD *)(v8 + 8) = 0;
    *(_BYTE *)(v8 + 16) = 3;
    swift_willThrow();
  }
  return v6;
}

_QWORD *sub_1CB816460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  NSObject *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t ObjCClassMetadata;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *result;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;

  v59 = a3;
  v5 = sub_1CB845F58();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v58 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v58 - v13;
  if (a2)
  {
    sub_1CB845EEC();
    v15 = sub_1CB845ED4();
    v17 = v16;
    v58 = *(void (**)(char *, uint64_t))(v6 + 8);
    v58(v14, v5);
    LOBYTE(v15) = sub_1CB7E2C14(v15, v17, a2);
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v32 = v5;
      if (qword_1ED88E518 != -1)
        swift_once();
      v33 = sub_1CB8466D8();
      __swift_project_value_buffer(v33, (uint64_t)qword_1ED890248);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, a1, v5);
      v34 = sub_1CB8466C0();
      v35 = sub_1CB846C84();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v61 = v37;
        *(_DWORD *)v36 = 136315138;
        sub_1CB799E24();
        v38 = sub_1CB847170();
        v60 = sub_1CB775A54(v38, v39, &v61);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        v58(v12, v32);
        _os_log_impl(&dword_1CB771000, v34, v35, "PluginLoader skipping plugin bundle (not allowed), path=%s", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v37, -1, -1);
        MEMORY[0x1D179FE84](v36, -1, -1);
      }
      else
      {
        v58(v12, v5);
      }

      goto LABEL_37;
    }
  }
  sub_1CB845F4C();
  v18 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
  v19 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_initWithPath_, v19);

  if (!v20)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v40 = sub_1CB8466D8();
    __swift_project_value_buffer(v40, (uint64_t)qword_1ED890248);
    v41 = (void (*)(char *, uint64_t))v5;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
    v20 = sub_1CB8466C0();
    v42 = sub_1CB846C90();
    if (os_log_type_enabled(v20, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v61 = v44;
      v58 = v41;
      *(_DWORD *)v43 = 136315138;
      v45 = sub_1CB845F4C();
      v60 = sub_1CB775A54(v45, v46, &v61);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD))(v6 + 8))(v9, v58);
      _os_log_impl(&dword_1CB771000, v20, v42, "PluginLoader failed init Bundle at %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v44, -1, -1);
      MEMORY[0x1D179FE84](v43, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    goto LABEL_36;
  }
  v21 = -[NSObject bundleURL](v20, sel_bundleURL);
  sub_1CB845F34();

  v22 = sub_1CB845ED4();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  if ((-[NSObject load](v20, sel_load) & 1) == 0)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v47 = sub_1CB8466D8();
    __swift_project_value_buffer(v47, (uint64_t)qword_1ED890248);
    swift_bridgeObjectRetain();
    v48 = sub_1CB8466C0();
    v49 = sub_1CB846C90();
    if (!os_log_type_enabled(v48, v49))
    {

      swift_bridgeObjectRelease_n();
LABEL_36:

LABEL_37:
      result = 0;
      goto LABEL_38;
    }
    v50 = swift_slowAlloc();
    v51 = swift_slowAlloc();
    v61 = v51;
    *(_DWORD *)v50 = 136315138;
    swift_bridgeObjectRetain();
    v60 = sub_1CB775A54(v22, v24, &v61);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    v52 = "PluginLoader failed to load %s";
    goto LABEL_34;
  }
  if (!-[NSObject principalClass](v20, sel_principalClass))
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v53 = sub_1CB8466D8();
    __swift_project_value_buffer(v53, (uint64_t)qword_1ED890248);
    swift_bridgeObjectRetain();
    v48 = sub_1CB8466C0();
    v49 = sub_1CB846C90();
    if (!os_log_type_enabled(v48, v49))
      goto LABEL_43;
    v50 = swift_slowAlloc();
    v51 = swift_slowAlloc();
    v61 = v51;
    *(_DWORD *)v50 = 136315138;
    swift_bridgeObjectRetain();
    v60 = sub_1CB775A54(v22, v24, &v61);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    v52 = "PluginLoader couldn't find the principal class in %s";
LABEL_34:
    _os_log_impl(&dword_1CB771000, v48, v49, v52, (uint8_t *)v50, 0xCu);
    swift_arrayDestroy();
    v54 = v51;
LABEL_35:
    MEMORY[0x1D179FE84](v54, -1, -1);
    MEMORY[0x1D179FE84](v50, -1, -1);

    goto LABEL_36;
  }
  ObjCClassMetadata = swift_getObjCClassMetadata();
  v26 = swift_conformsToProtocol2();
  if (v26)
    v27 = v26;
  else
    v27 = 0;
  if (v26)
    v28 = ObjCClassMetadata;
  else
    v28 = 0;
  if (!v28)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v55 = sub_1CB8466D8();
    __swift_project_value_buffer(v55, (uint64_t)qword_1ED890248);
    swift_bridgeObjectRetain();
    v48 = sub_1CB8466C0();
    v56 = sub_1CB846C90();
    if (os_log_type_enabled(v48, v56))
    {
      v50 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v61 = v57;
      *(_DWORD *)v50 = 136315394;
      v60 = sub_1CB775A54(0xD000000000000015, 0x80000001CB857890, &v61);
      sub_1CB846E58();
      *(_WORD *)(v50 + 12) = 2080;
      swift_bridgeObjectRetain();
      v60 = sub_1CB775A54(v22, v24, &v61);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CB771000, v48, v56, "PluginLoader found principal class which doesn't conform to %s in %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      v54 = v57;
      goto LABEL_35;
    }
LABEL_43:

    swift_bridgeObjectRelease_n();
    goto LABEL_37;
  }
  swift_bridgeObjectRelease();
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v28, v27);
  type metadata accessor for PluginHandle();
  v30 = (_QWORD *)swift_allocObject();
  result = sub_1CB8133B0(v29, (uint64_t)v20, v30, v28, v27);
LABEL_38:
  *v59 = result;
  return result;
}

_QWORD *sub_1CB816D84(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t ObjCClassMetadata;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  unint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  unint64_t v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  void (*v82)(char *, uint64_t);
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89[2];

  v83 = a3;
  v84 = a2;
  v89[1] = *MEMORY[0x1E0C80C00];
  v86 = sub_1CB845F58();
  v4 = *(char **)(v86 - 8);
  v5 = MEMORY[0x1E0C80A78](v86);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v81 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v81 - v12;
  MEMORY[0x1E0C80A78](v11);
  v85 = (char *)&v81 - v14;
  v88 = 0;
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1CB845F4C();
  v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, sel_fileExistsAtPath_isDirectory_, v16, &v88);

  if (v17 && v88 == 1)
  {
    v18 = v83;
    sub_1CB845F10();
    sub_1CB845F1C();
    v19 = v86;
    v82 = (void (*)(char *, uint64_t))*((_QWORD *)v4 + 1);
    v82(v13, v86);
    v20 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
    v21 = (void *)sub_1CB845EE0();
    v22 = objc_msgSend(v20, sel_initWithURL_, v21);

    if (v22)
    {
      if (objc_msgSend(v22, sel_load))
      {
        if (objc_msgSend(v22, sel_principalClass))
        {
          ObjCClassMetadata = swift_getObjCClassMetadata();
          v24 = swift_conformsToProtocol2();
          if (v24)
            v25 = v24;
          else
            v25 = 0;
          if (!v24)
            ObjCClassMetadata = 0;
          if (ObjCClassMetadata)
          {
            v26 = (uint64_t)v22;
            v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(ObjCClassMetadata, v25);
            v82(v85, v19);
            type metadata accessor for PluginHandle();
            v28 = (_QWORD *)swift_allocObject();
            return sub_1CB8133B0(v27, v26, v28, ObjCClassMetadata, v25);
          }
          if (qword_1ED88E518 != -1)
            swift_once();
          v72 = sub_1CB8466D8();
          __swift_project_value_buffer(v72, (uint64_t)qword_1ED890248);
          v73 = v83;
          swift_bridgeObjectRetain_n();
          v74 = sub_1CB8466C0();
          v75 = sub_1CB846C90();
          if (os_log_type_enabled(v74, v75))
          {
            v76 = swift_slowAlloc();
            v77 = swift_slowAlloc();
            v89[0] = v77;
            *(_DWORD *)v76 = 136315394;
            v81 = v22;
            v87 = sub_1CB775A54(0xD000000000000015, 0x80000001CB857890, v89);
            sub_1CB846E58();
            *(_WORD *)(v76 + 12) = 2080;
            swift_bridgeObjectRetain();
            v78 = v84;
            v87 = sub_1CB775A54(v84, v73, v89);
            v19 = v86;
            v22 = v81;
            sub_1CB846E58();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1CB771000, v74, v75, "PluginLoader.load() found principal class which doesn't conform to %s in %s", (uint8_t *)v76, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1D179FE84](v77, -1, -1);
            MEMORY[0x1D179FE84](v76, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
            v78 = v84;
          }
          v61 = (uint64_t (*)(char *, uint64_t))v82;
          sub_1CB7C65D4();
          swift_allocError();
          *(_QWORD *)v80 = v78;
          *(_QWORD *)(v80 + 8) = v73;
          *(_BYTE *)(v80 + 16) = 2;
        }
        else
        {
          if (qword_1ED88E518 != -1)
            swift_once();
          v63 = sub_1CB8466D8();
          __swift_project_value_buffer(v63, (uint64_t)qword_1ED890248);
          swift_bridgeObjectRetain_n();
          v64 = sub_1CB8466C0();
          v65 = v18;
          v66 = sub_1CB846C90();
          if (os_log_type_enabled(v64, v66))
          {
            v67 = (uint8_t *)swift_slowAlloc();
            v68 = swift_slowAlloc();
            v81 = v22;
            v69 = v68;
            v89[0] = v68;
            *(_DWORD *)v67 = 136315138;
            swift_bridgeObjectRetain();
            v70 = v84;
            v87 = sub_1CB775A54(v84, v65, v89);
            v19 = v86;
            sub_1CB846E58();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1CB771000, v64, v66, "PluginLoader.load() couldn't find the principal class in %s", v67, 0xCu);
            swift_arrayDestroy();
            v71 = v69;
            v22 = v81;
            MEMORY[0x1D179FE84](v71, -1, -1);
            MEMORY[0x1D179FE84](v67, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
            v70 = v84;
          }
          v61 = (uint64_t (*)(char *, uint64_t))v82;
          sub_1CB7C65D4();
          swift_allocError();
          *(_QWORD *)v79 = v70;
          *(_QWORD *)(v79 + 8) = v65;
          *(_BYTE *)(v79 + 16) = 1;
        }
      }
      else
      {
        if (qword_1ED88E518 != -1)
          swift_once();
        v50 = sub_1CB8466D8();
        __swift_project_value_buffer(v50, (uint64_t)qword_1ED890248);
        swift_bridgeObjectRetain_n();
        v51 = sub_1CB8466C0();
        v52 = v18;
        v53 = sub_1CB846C90();
        if (os_log_type_enabled(v51, v53))
        {
          v54 = (uint8_t *)swift_slowAlloc();
          v55 = swift_slowAlloc();
          v81 = v22;
          v56 = v55;
          v89[0] = v55;
          *(_DWORD *)v54 = 136315138;
          swift_bridgeObjectRetain();
          v57 = v84;
          v87 = sub_1CB775A54(v84, v52, v89);
          v19 = v86;
          sub_1CB846E58();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1CB771000, v51, v53, "PluginLoader.load() failed to load %s", v54, 0xCu);
          swift_arrayDestroy();
          v58 = v56;
          v22 = v81;
          MEMORY[0x1D179FE84](v58, -1, -1);
          MEMORY[0x1D179FE84](v54, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          v57 = v84;
        }
        v61 = (uint64_t (*)(char *, uint64_t))v82;
        sub_1CB7C65D4();
        swift_allocError();
        *(_QWORD *)v62 = v57;
        *(_QWORD *)(v62 + 8) = v52;
        *(_BYTE *)(v62 + 16) = 0;
      }
      swift_bridgeObjectRetain();
      swift_willThrow();

      return (_QWORD *)v61(v85, v19);
    }
    else
    {
      if (qword_1ED88E518 != -1)
        swift_once();
      v41 = sub_1CB8466D8();
      __swift_project_value_buffer(v41, (uint64_t)qword_1ED890248);
      (*((void (**)(char *, char *, uint64_t))v4 + 2))(v10, v85, v19);
      v42 = sub_1CB8466C0();
      v43 = sub_1CB846C90();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        v45 = swift_slowAlloc();
        v89[0] = v45;
        *(_DWORD *)v44 = 136315138;
        sub_1CB799E24();
        v46 = sub_1CB847170();
        v87 = sub_1CB775A54(v46, v47, v89);
        v19 = v86;
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        v48 = (uint64_t (*)(char *, uint64_t))v82;
        v82(v10, v19);
        _os_log_impl(&dword_1CB771000, v42, v43, "PluginLoader.load() failed init Bundle at %s", v44, 0xCu);
        swift_arrayDestroy();
        v49 = v45;
        v18 = v83;
        MEMORY[0x1D179FE84](v49, -1, -1);
        MEMORY[0x1D179FE84](v44, -1, -1);
      }
      else
      {
        v48 = (uint64_t (*)(char *, uint64_t))v82;
        v82(v10, v19);
      }

      v59 = v84;
      sub_1CB7C65D4();
      swift_allocError();
      *(_QWORD *)v60 = v59;
      *(_QWORD *)(v60 + 8) = v18;
      *(_BYTE *)(v60 + 16) = 0;
      swift_bridgeObjectRetain();
      swift_willThrow();
      return (_QWORD *)v48(v85, v19);
    }
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v30 = sub_1CB8466D8();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED890248);
    v31 = v86;
    (*((void (**)(char *, uint64_t, uint64_t))v4 + 2))(v7, a1, v86);
    v32 = sub_1CB8466C0();
    v33 = sub_1CB846C90();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v85 = v4;
      v35 = v31;
      v36 = (uint8_t *)v34;
      v37 = swift_slowAlloc();
      v89[0] = v37;
      *(_DWORD *)v36 = 136315138;
      sub_1CB799E24();
      v38 = sub_1CB847170();
      v87 = sub_1CB775A54(v38, v39, v89);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v85 + 1))(v7, v35);
      _os_log_impl(&dword_1CB771000, v32, v33, "PluginLoader.load(): \"%s\" is not a directory", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v37, -1, -1);
      MEMORY[0x1D179FE84](v36, -1, -1);
    }
    else
    {
      (*((void (**)(char *, uint64_t))v4 + 1))(v7, v31);
    }

    sub_1CB7C65D4();
    swift_allocError();
    *(_QWORD *)v40 = 0;
    *(_QWORD *)(v40 + 8) = 0;
    *(_BYTE *)(v40 + 16) = 3;
    return (_QWORD *)swift_willThrow();
  }
}

uint64_t sub_1CB817914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v19[2];
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v23 = a2;
  v5 = sub_1CB845F58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v20 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v21 = *(_QWORD *)(v6 + 72);
    v22 = v13;
    v19[1] = a1;
    swift_bridgeObjectRetain();
    v14 = (uint64_t)v20;
    while (1)
    {
      v22(v10, v12, v5);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v15(v10, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
        break;
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v10, v5);
      sub_1CB816460(v14, v23, &v25);
      if (v3)
      {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
      if (v25)
      {
        v24 = 0;
        MEMORY[0x1D179EDF8](v16);
        if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CB846AA4();
        sub_1CB846AD4();
        sub_1CB846A74();
        v3 = v24;
        v14 = (uint64_t)v20;
      }
      v12 += v21;
      if (!--v11)
      {
        v15(v10, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v17(v10, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v26;
}

ValueMetadata *type metadata accessor for PluginLoader()
{
  return &type metadata for PluginLoader;
}

SiriPrivateLearningAnalytics::FeatureControl __swiftcall FeatureControl.init(defaultEnablement:)(Swift::OpaquePointer defaultEnablement)
{
  Swift::OpaquePointer *v1;
  SiriPrivateLearningAnalytics::FeatureControl result;

  v1->_rawValue = (void *)MEMORY[0x1E0DEE9D8];
  v1[1]._rawValue = defaultEnablement._rawValue;
  result.localeControls = defaultEnablement;
  return result;
}

__n128 AnyFeature.__allocating_init(name:control:)(uint64_t a1, uint64_t a2, __n128 *a3)
{
  uint64_t v6;
  __n128 result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  result = *a3;
  *(__n128 *)(v6 + 32) = *a3;
  return result;
}

SiriPrivateLearningAnalytics::OSType_optional __swiftcall OSType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningAnalytics::OSType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CB8470B0();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t OSType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CB817C58 + 4 * byte_1CB84F920[*v0]))(5459817, 0xE300000000000000);
}

uint64_t sub_1CB817C58()
{
  return 0x534F63616DLL;
}

uint64_t sub_1CB817C6C()
{
  return 1397716596;
}

uint64_t sub_1CB817C7C()
{
  return 0x534F6863746177;
}

uint64_t sub_1CB817C94()
{
  return 0x4F6E776F6E6B6E75;
}

void sub_1CB817CB0(char *a1)
{
  sub_1CB80BB7C(*a1);
}

void sub_1CB817CBC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CB8472E4();
  __asm { BR              X9 }
}

uint64_t sub_1CB817D00()
{
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

void sub_1CB817D80()
{
  __asm { BR              X10 }
}

uint64_t sub_1CB817DB4()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

void sub_1CB817E20()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CB8472E4();
  __asm { BR              X9 }
}

uint64_t sub_1CB817E60()
{
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

SiriPrivateLearningAnalytics::OSType_optional sub_1CB817EE0(Swift::String *a1)
{
  return OSType.init(rawValue:)(*a1);
}

uint64_t sub_1CB817EEC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CB817F14 + 4 * byte_1CB84F934[*v0]))();
}

void sub_1CB817F14(_QWORD *a1@<X8>)
{
  *a1 = 0x534F63616DLL;
  a1[1] = 0xE500000000000000;
}

void sub_1CB817F2C(_QWORD *a1@<X8>)
{
  *a1 = 1397716596;
  a1[1] = 0xE400000000000000;
}

void sub_1CB817F40(_QWORD *a1@<X8>)
{
  *a1 = 0x534F6863746177;
  a1[1] = 0xE700000000000000;
}

void sub_1CB817F5C(_QWORD *a1@<X8>)
{
  *a1 = 0x4F6E776F6E6B6E75;
  a1[1] = 0xE900000000000053;
}

uint64_t FeatureResolver.init(featureFlagResolver:trialResolver:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1CB7780BC(a1, a3);
  return sub_1CB7780BC(a2, a3 + 40);
}

uint64_t FeatureResolver.isTrialFactorEnabled(_:scope:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v5 = *a2;
  v4 = a2[1];
  v6 = v2[8];
  v7 = v2[9];
  __swift_project_boxed_opaque_existential_1(v2 + 5, v6);
  v9[0] = v5;
  v9[1] = v4;
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v7 + 8))(a1, v9, v6, v7) & 1;
}

double FeatureResolver.getTrialFactorValue(_:scope:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  _QWORD v9[2];

  v5 = *a2;
  v4 = a2[1];
  v6 = v2[8];
  v7 = v2[9];
  __swift_project_boxed_opaque_existential_1(v2 + 5, v6);
  v9[0] = v5;
  v9[1] = v4;
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v7 + 16))(a1, v9, v6, v7);
  return result;
}

uint64_t FeatureResolver.isFeatureFlagEnabled(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4) & 1;
}

Swift::Void __swiftcall FeatureResolver.refresh()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED890248);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CB771000, v3, v4, "FeatureResolver: refreshing trial resolver", v5, 2u);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }

  v6 = v1 + 5;
  v8 = v1[8];
  v7 = v1[9];
  __swift_project_boxed_opaque_existential_1(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v8, v7);
}

uint64_t sub_1CB818724(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _BYTE v30[48];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v2 = *a1;
  if ((a1[1] & 1) == 0)
  {
    sub_1CB81AD7C(v1, (uint64_t)v31);
    v7 = *(_QWORD *)(v2 + 16);
    if (!v7)
    {
      swift_bridgeObjectRetain();
LABEL_22:
      v9 = 0;
      goto LABEL_23;
    }
    sub_1CB81ADE0(v2 + 32, (uint64_t)v30);
    swift_bridgeObjectRetain();
    v8 = sub_1CB818A64((uint64_t)v30, v31);
    sub_1CB81AE14((uint64_t)v30);
    if ((v8 & 1) != 0)
    {
LABEL_8:
      v9 = 1;
      goto LABEL_23;
    }
    if (v7 == 1)
      goto LABEL_22;
    v17 = v2 + 80;
    v18 = 1;
    while (1)
    {
      result = sub_1CB81ADE0(v17, (uint64_t)v30);
      v20 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      sub_1CB81ADE0((uint64_t)v30, (uint64_t)&v25);
      if (!v29)
        break;
      if (v29 == 1)
      {
        sub_1CB7780BC(&v25, (uint64_t)&v23);
        v21 = v32;
        v22 = v33;
        __swift_project_boxed_opaque_existential_1(v31, v32);
        v19 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v22 + 8))(&v23, v21, v22);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v23);
LABEL_26:
        sub_1CB81AE14((uint64_t)v30);
        if ((v19 & 1) != 0)
          goto LABEL_8;
        goto LABEL_27;
      }
      if (!(v27 | v28 | (unint64_t)v25 | v26 | *((_QWORD *)&v25 + 1)))
      {
        sub_1CB81AE14((uint64_t)v30);
        v9 = 1;
LABEL_23:
        sub_1CB78674C((uint64_t)v31);
        v15 = v2;
        v16 = 0;
LABEL_37:
        j__swift_bridgeObjectRelease(v15, v16);
        return v9;
      }
      sub_1CB81AE14((uint64_t)v30);
LABEL_27:
      ++v18;
      v17 += 48;
      if (v20 == v7)
        goto LABEL_22;
    }
    v23 = *((_QWORD *)&v25 + 1);
    v24 = v26;
    v19 = FeatureResolver.isTrialFactorEnabled(_:scope:)(v25, &v23);
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_26;
  }
  sub_1CB81AD7C(v1, (uint64_t)v31);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  sub_1CB81ADE0(v2 + 32, (uint64_t)v30);
  swift_bridgeObjectRetain();
  v4 = sub_1CB818A64((uint64_t)v30, v31);
  sub_1CB81AE14((uint64_t)v30);
  if ((v4 & 1) == 0)
  {
LABEL_35:
    v9 = 0;
    goto LABEL_36;
  }
  if (v3 == 1)
  {
LABEL_19:
    v9 = 1;
LABEL_36:
    sub_1CB78674C((uint64_t)v31);
    v15 = v2;
    v16 = 1;
    goto LABEL_37;
  }
  v5 = v2 + 80;
  v6 = 1;
  while (1)
  {
    result = sub_1CB81ADE0(v5, (uint64_t)v30);
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    sub_1CB81ADE0((uint64_t)v30, (uint64_t)&v25);
    if (!v29)
    {
      v23 = *((_QWORD *)&v25 + 1);
      v24 = v26;
      v10 = FeatureResolver.isTrialFactorEnabled(_:scope:)(v25, &v23);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_10;
    }
    if (v29 == 1)
    {
      sub_1CB7780BC(&v25, (uint64_t)&v23);
      v13 = v32;
      v14 = v33;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      v10 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 8))(&v23, v13, v14);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v23);
LABEL_10:
      sub_1CB81AE14((uint64_t)v30);
      if ((v10 & 1) == 0)
        goto LABEL_35;
      goto LABEL_11;
    }
    if (v27 | v28 | (unint64_t)v25 | v26 | *((_QWORD *)&v25 + 1))
    {
      sub_1CB81AE14((uint64_t)v30);
      goto LABEL_35;
    }
    sub_1CB81AE14((uint64_t)v30);
LABEL_11:
    ++v6;
    v5 += 48;
    if (v12 == v3)
      goto LABEL_19;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1CB818A64(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int8x16_t v6;
  _OWORD v8[2];
  uint64_t v9;
  int8x16_t v10;
  int8x16_t v11;
  char v12;

  sub_1CB81ADE0(a1, (uint64_t)&v9);
  if (v12)
  {
    if (v12 == 1)
    {
      sub_1CB7780BC((__int128 *)&v9, (uint64_t)v8);
      v3 = a2[3];
      v4 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v3);
      v5 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 8))(v8, v3, v4);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    }
    else
    {
      v6 = vorrq_s8(v10, v11);
      v5 = (*(_QWORD *)&vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)) | v9) == 0;
    }
  }
  else
  {
    v8[0] = v10;
    v5 = FeatureResolver.isTrialFactorEnabled(_:scope:)(v9, (uint64_t *)v8);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v5 & 1;
}

uint64_t FeatureResolver.getDoubleFeatureParameterValue(parameter:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[2];

  v1 = *a1;
  v2 = a1[2];
  v6[0] = a1[1];
  v6[1] = v2;
  swift_bridgeObjectRetain();
  FeatureResolver.getTrialFactorValue(_:scope:)(v1, v6);
  v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t LocaleControl.init(locales:enablement:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static FeatureControlError.== infix(_:_:)(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  v5 = *((_QWORD *)a2 + 2);
  v6 = *((_QWORD *)a2 + 3);
  v11 = *a1;
  v12 = v2;
  v13 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return _s28SiriPrivateLearningAnalytics6LocaleV2eeoiySbAC_ACtFZ_0((uint64_t *)&v11, (uint64_t *)&v8) & 1;
}

uint64_t sub_1CB818BF8(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  v5 = *((_QWORD *)a2 + 2);
  v6 = *((_QWORD *)a2 + 3);
  v11 = *a1;
  v12 = v2;
  v13 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return _s28SiriPrivateLearningAnalytics6LocaleV2eeoiySbAC_ACtFZ_0((uint64_t *)&v11, (uint64_t *)&v8) & 1;
}

double FeatureControl.init(localeControl:defaultEnablement:)@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  double result;
  __int128 v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1B98);
  v6 = swift_allocObject();
  *(_QWORD *)&result = 1;
  v8 = *a1;
  *(_OWORD *)(v6 + 16) = xmmword_1CB848A50;
  *(_OWORD *)(v6 + 32) = v8;
  *a3 = v6;
  a3[1] = a2;
  return result;
}

double FeatureControl.init(localeControl:)@<D0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;

  sub_1CB7875F0(MEMORY[0x1E0DEE9D8]);
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1B98);
  v6 = swift_allocObject();
  *(_QWORD *)&result = 1;
  v8 = *a1;
  *(_OWORD *)(v6 + 16) = xmmword_1CB848A50;
  *(_OWORD *)(v6 + 32) = v8;
  *a2 = v6;
  a2[1] = v5;
  return result;
}

SiriPrivateLearningAnalytics::FeatureControl __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FeatureControl.init(localeControls:defaultEnablement:)(Swift::OpaquePointer localeControls, Swift::OpaquePointer defaultEnablement)
{
  Swift::OpaquePointer *v2;
  uint64_t v3;
  Swift::OpaquePointer *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  SiriPrivateLearningAnalytics::FeatureControl result;

  v6 = v2;
  v7 = swift_bridgeObjectRetain();
  sub_1CB819D08(v7);
  if (v3)
  {
    swift_bridgeObjectRelease();
    v8 = (void *)swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = (void *)swift_bridgeObjectRelease();
    v6->_rawValue = localeControls._rawValue;
    v6[1]._rawValue = defaultEnablement._rawValue;
  }
  result.defaultEnablement._rawValue = v9;
  result.localeControls._rawValue = v8;
  return result;
}

uint64_t sub_1CB818D60(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4, unsigned __int8 *a5)
{
  uint64_t *v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[2];
  uint64_t v64;
  unint64_t v65;

  v6 = a2;
  v8 = a4[1];
  v62 = *a4;
  v9 = *a5;
  v10 = *v5;
  v11 = v5[1];
  v12 = *(_QWORD *)(v10 + 16);
  if (v12)
  {
    v53 = v11;
    v54 = a1;
    v58 = *a5;
    v13 = v10 + 32;
    swift_bridgeObjectRetain();
    v14 = 0;
    v61 = v8;
    v56 = v13;
    v57 = v12;
    v15 = v8;
    while (1)
    {
      v16 = (_QWORD *)(v13 + 16 * v14);
      v17 = *v16;
      if (*(_QWORD *)(*v16 + 16))
      {
        v59 = v14;
        v18 = v16[1];
        sub_1CB8472E4();
        v63[0] = v62;
        v63[1] = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1CB846954();
        swift_bridgeObjectRetain();
        sub_1CB846954();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        sub_1CB846924();
        swift_bridgeObjectRelease();
        v19 = sub_1CB847314();
        v20 = -1 << *(_BYTE *)(v17 + 32);
        v21 = v19 & ~v20;
        if (((*(_QWORD *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        {
          v60 = ~v20;
          while (1)
          {
            v22 = (uint64_t *)(*(_QWORD *)(v17 + 48) + 32 * v21);
            v23 = v22[1];
            v64 = *v22;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            sub_1CB846954();
            swift_bridgeObjectRetain();
            sub_1CB846954();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v24 = v64;
            v64 = v62;
            v65 = v15;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_1CB846954();
            swift_bridgeObjectRetain();
            sub_1CB846954();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            if (v24 == v62 && v23 == v65)
              break;
            v25 = sub_1CB8471A0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v25 & 1) != 0)
              goto LABEL_14;
            v21 = (v21 + 1) & v60;
            if (((*(_QWORD *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
              goto LABEL_3;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
LABEL_14:
          if (*(_QWORD *)(v18 + 16))
          {
            sub_1CB779B3C(v58);
            v27 = v61;
            if ((v28 & 1) != 0)
            {
              v29 = *(_QWORD *)(v18 + 56) + 16 * v26;
              v30 = *(_QWORD *)v29;
              LOBYTE(v29) = *(_BYTE *)(v29 + 8);
              v64 = v30;
              LOBYTE(v65) = v29;
              v31 = sub_1CB818724(&v64);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v31 = 0;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v31 = 0;
            v27 = v61;
          }
          if (qword_1ED88E518 != -1)
            swift_once();
          v32 = sub_1CB8466D8();
          __swift_project_value_buffer(v32, (uint64_t)qword_1ED890248);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v33 = sub_1CB8466C0();
          v34 = sub_1CB846C84();
          if (os_log_type_enabled(v33, v34))
          {
            v35 = swift_slowAlloc();
            v63[0] = swift_slowAlloc();
            *(_DWORD *)v35 = 136315906;
            swift_bridgeObjectRetain();
            v64 = sub_1CB775A54(v54, a2, v63);
            sub_1CB846E58();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v35 + 12) = 2080;
            if ((v31 & 1) != 0)
              v36 = 0x64656C62616E65;
            else
              v36 = 0x64656C6261736964;
            if ((v31 & 1) != 0)
              v37 = 0xE700000000000000;
            else
              v37 = 0xE800000000000000;
            v64 = sub_1CB775A54(v36, v37, v63);
            sub_1CB846E58();
            swift_bridgeObjectRelease();
            *(_WORD *)(v35 + 22) = 2080;
            v64 = v62;
            v65 = v27;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_1CB846954();
            swift_bridgeObjectRetain();
            sub_1CB846954();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v64 = sub_1CB775A54(v64, v65, v63);
            sub_1CB846E58();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v35 + 32) = 2080;
            __asm { BR              X9 }
          }
LABEL_29:

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          return v31 & 1;
        }
LABEL_3:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = v61;
        v13 = v56;
        v12 = v57;
        v14 = v59;
      }
      if (++v14 == v12)
      {
        swift_bridgeObjectRelease();
        v9 = v58;
        a1 = v54;
        v6 = a2;
        v11 = v53;
        break;
      }
    }
  }
  if (*(_QWORD *)(v11 + 16))
  {
    sub_1CB779B3C(v9);
    if ((v39 & 1) != 0)
    {
      v40 = *(_QWORD *)(v11 + 56) + 16 * v38;
      v41 = *(_QWORD *)v40;
      LOBYTE(v40) = *(_BYTE *)(v40 + 8);
      v64 = v41;
      LOBYTE(v65) = v40;
      v31 = sub_1CB818724(&v64);
      if (qword_1ED88E518 != -1)
        swift_once();
      v42 = sub_1CB8466D8();
      __swift_project_value_buffer(v42, (uint64_t)qword_1ED890248);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v33 = sub_1CB8466C0();
      v43 = sub_1CB846C84();
      if (os_log_type_enabled(v33, v43))
      {
        v44 = swift_slowAlloc();
        v63[0] = swift_slowAlloc();
        *(_DWORD *)v44 = 136315906;
        swift_bridgeObjectRetain();
        v64 = sub_1CB775A54(a1, v6, v63);
        sub_1CB846E58();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v44 + 12) = 2080;
        v64 = v62;
        v65 = v8;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1CB846954();
        swift_bridgeObjectRetain();
        sub_1CB846954();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v64 = sub_1CB775A54(v64, v65, v63);
        sub_1CB846E58();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 22) = 2080;
        if ((v31 & 1) != 0)
          v45 = 0x64656C62616E65;
        else
          v45 = 0x64656C6261736964;
        if ((v31 & 1) != 0)
          v46 = 0xE700000000000000;
        else
          v46 = 0xE800000000000000;
        v64 = sub_1CB775A54(v45, v46, v63);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 32) = 2080;
        __asm { BR              X9 }
      }
      goto LABEL_29;
    }
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v47 = sub_1CB8466D8();
  __swift_project_value_buffer(v47, (uint64_t)qword_1ED890248);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v48 = sub_1CB8466C0();
  v49 = sub_1CB846C84();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc();
    v51 = swift_slowAlloc();
    v63[0] = v51;
    *(_DWORD *)v50 = 136315394;
    swift_bridgeObjectRetain();
    v64 = sub_1CB775A54(a1, v6, v63);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v50 + 12) = 2080;
    v64 = v62;
    v65 = v8;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v64 = sub_1CB775A54(v64, v65, v63);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v48, v49, "Feature %s in locale: %s is disabled", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v51, -1, -1);
    MEMORY[0x1D179FE84](v50, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v31 = 0;
  return v31 & 1;
}

uint64_t AnyFeature.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnyFeature.control.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *a1 = *(_QWORD *)(v1 + 32);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AnyFeature.init(name:control:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_OWORD *)(v3 + 32) = *a3;
  return v3;
}

uint64_t sub_1CB819AD4(uint64_t a1, __int128 *a2, unsigned __int8 *a3)
{
  _QWORD *v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *a2;
  v6 = *((_QWORD *)a2 + 2);
  v7 = *((_QWORD *)a2 + 3);
  v8 = *a3;
  v9 = v3[5];
  v17 = v3[4];
  v18 = v9;
  v10 = v3[2];
  v11 = v3[3];
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v13 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1CB818D60(v10, v11, a1, (uint64_t *)&v14, &v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t AnyFeature.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AnyFeature.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB819BE0(uint64_t a1, __int128 *a2, unsigned __int8 *a3)
{
  uint64_t *v3;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *v3;
  v6 = *a2;
  v7 = *((_QWORD *)a2 + 2);
  v8 = *((_QWORD *)a2 + 3);
  v9 = *a3;
  v10 = *(_QWORD *)(*v3 + 40);
  v18 = *(_QWORD *)(*v3 + 32);
  v19 = v10;
  v11 = *(_QWORD *)(v5 + 16);
  v12 = *(_QWORD *)(v5 + 24);
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v14 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1CB818D60(v11, v12, a1, (uint64_t *)&v15, &v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1 & 1;
}

SiriPrivateLearningAnalytics::OSType __swiftcall OSTypeResolver.getOS()()
{
  _BYTE *v0;
  SiriPrivateLearningAnalytics::OSType result;

  *v0 = 0;
  return result;
}

void sub_1CB819C88(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t DoubleFeatureParameter.init(factor:scope:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a3 = result;
  a3[1] = v3;
  a3[2] = v4;
  return result;
}

uint64_t DoubleFeatureParameter.getValue(resolver:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[2];

  v1 = *v0;
  v2 = v0[2];
  v6[0] = v0[1];
  v6[1] = v2;
  swift_bridgeObjectRetain();
  FeatureResolver.getTrialFactorValue(_:scope:)(v1, v6);
  v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CB819D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = MEMORY[0x1E0DEE9E8];
  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return swift_bridgeObjectRelease();
  v2 = a1 + 32;
  swift_bridgeObjectRetain();
  v3 = 0;
  v28 = v2;
  v29 = v1;
LABEL_3:
  v4 = *(_QWORD *)(v2 + 16 * v3);
  v30 = v3 + 1;
  v32 = v4 + 56;
  v5 = 1 << *(_BYTE *)(v4 + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v4 + 56);
  v33 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v31 = v4;
  while (1)
  {
    if (v7)
    {
      v35 = (v7 - 1) & v7;
      v10 = __clz(__rbit64(v7)) | (v9 << 6);
      goto LABEL_25;
    }
    v11 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      return result;
    }
    if (v11 >= v33)
      goto LABEL_35;
    v12 = *(_QWORD *)(v32 + 8 * v11);
    ++v9;
    if (v12)
      goto LABEL_24;
    v9 = v11 + 1;
    if (v11 + 1 >= v33)
      goto LABEL_35;
    v12 = *(_QWORD *)(v32 + 8 * v9);
    if (v12)
      goto LABEL_24;
    v9 = v11 + 2;
    if (v11 + 2 >= v33)
      goto LABEL_35;
    v12 = *(_QWORD *)(v32 + 8 * v9);
    if (v12)
      goto LABEL_24;
    v13 = v11 + 3;
    if (v13 >= v33)
    {
LABEL_35:
      swift_release();
      v3 = v30;
      v2 = v28;
      if (v30 != v29)
        goto LABEL_3;
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v12 = *(_QWORD *)(v32 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        v9 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_41;
        if (v9 >= v33)
          goto LABEL_35;
        v12 = *(_QWORD *)(v32 + 8 * v9);
        ++v13;
        if (v12)
          goto LABEL_24;
      }
    }
    v9 = v13;
LABEL_24:
    v35 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v9 << 6);
LABEL_25:
    v14 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v10);
    v15 = v14[1];
    v16 = v14[2];
    v17 = v14[3];
    v18 = v41;
    v38 = *v14;
    if (!*(_QWORD *)(v41 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    v34 = v9;
    sub_1CB8472E4();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    v37 = v16;
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1CB846924();
    swift_bridgeObjectRelease();
    v19 = sub_1CB847314();
    v20 = -1 << *(_BYTE *)(v18 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
      break;
    swift_bridgeObjectRelease();
LABEL_34:
    v9 = v34;
    v16 = v37;
LABEL_8:
    sub_1CB829E3C(&v39, v38, v15, v16, v17);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v7 = v35;
  }
  v36 = ~v20;
  while (1)
  {
    v22 = (uint64_t *)(*(_QWORD *)(v18 + 48) + 32 * v21);
    v23 = v22[1];
    v39 = *v22;
    v40 = v23;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v25 = v39;
    v24 = v40;
    v39 = v38;
    v40 = v15;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v25 == v39 && v24 == v40)
      break;
    v26 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
      goto LABEL_39;
    v21 = (v21 + 1) & v36;
    if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v4 = v31;
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_39:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CB81AE40();
  swift_allocError();
  *v27 = v38;
  v27[1] = v15;
  v27[2] = v37;
  v27[3] = v17;
  swift_willThrow();
  return swift_release();
}

unint64_t sub_1CB81A210()
{
  unint64_t result;

  result = qword_1ED88E498;
  if (!qword_1ED88E498)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for OSType, &type metadata for OSType);
    atomic_store(result, (unint64_t *)&qword_1ED88E498);
  }
  return result;
}

uint64_t destroy for FeatureEnablementPolicy(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)result + 2;
  if (v1 == 1)
    return __swift_destroy_boxed_opaque_existential_0(result);
  if (!v1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FeatureEnablementPolicy(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t))(v5 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 40) = 0;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for FeatureEnablementPolicy(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
    }
    else if (!v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_BYTE *)(a1 + 40) = 0;
      swift_retain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FeatureEnablementPolicy(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
    }
    else if (!v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureEnablementPolicy(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeatureEnablementPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CB81A5B0(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1CB81A5CC(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeatureEnablementPolicy()
{
  return &type metadata for FeatureEnablementPolicy;
}

uint64_t storeEnumTagSinglePayload for OSType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1CB81A650 + 4 * byte_1CB84F948[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1CB81A684 + 4 * byte_1CB84F943[v4]))();
}

uint64_t sub_1CB81A684(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB81A68C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB81A694);
  return result;
}

uint64_t sub_1CB81A6A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB81A6A8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1CB81A6AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB81A6B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OSType()
{
  return &type metadata for OSType;
}

uint64_t initializeBufferWithCopyOfBuffer for FeatureEnablementPolicyQuantifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_bridgeObjectRetain(*a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for FeatureEnablementPolicyQuantifier(uint64_t a1)
{
  return j__swift_bridgeObjectRelease(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for FeatureEnablementPolicyQuantifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_bridgeObjectRetain(*a2, v4);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease(v5, v6);
  return a1;
}

uint64_t *assignWithTake for FeatureEnablementPolicyQuantifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureEnablementPolicyQuantifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureEnablementPolicyQuantifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CB81A840(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureEnablementPolicyQuantifier()
{
  return &type metadata for FeatureEnablementPolicyQuantifier;
}

uint64_t destroy for FeatureResolver(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  return __swift_destroy_boxed_opaque_existential_0(a1 + 40);
}

uint64_t initializeWithCopy for FeatureResolver(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for FeatureResolver(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for FeatureResolver(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureResolver(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureResolver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureResolver()
{
  return &type metadata for FeatureResolver;
}

uint64_t destroy for LocaleControl()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for LocaleControl()
{
  return &type metadata for LocaleControl;
}

ValueMetadata *type metadata accessor for FeatureControlError()
{
  return &type metadata for FeatureControlError;
}

_QWORD *_s28SiriPrivateLearningAnalytics13LocaleControlVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s28SiriPrivateLearningAnalytics13LocaleControlVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s28SiriPrivateLearningAnalytics13LocaleControlVwta_0(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeatureControl()
{
  return &type metadata for FeatureControl;
}

uint64_t dispatch thunk of ControlledFeature.isEnabled(resolver:in:forOS:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for AnyFeature()
{
  return objc_opt_self();
}

uint64_t method lookup function for AnyFeature()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyFeature.__allocating_init(name:control:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AnyFeature.isEnabled(resolver:in:forOS:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of OSTypeResolving.getOS()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for OSTypeResolver()
{
  return &type metadata for OSTypeResolver;
}

uint64_t destroy for DoubleFeatureParameter()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s28SiriPrivateLearningAnalytics22DoubleFeatureParameterVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DoubleFeatureParameter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for DoubleFeatureParameter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DoubleFeatureParameter(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DoubleFeatureParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DoubleFeatureParameter()
{
  return &type metadata for DoubleFeatureParameter;
}

uint64_t sub_1CB81AD7C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  v5 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a2 + 40, a1 + 40);
  return a2;
}

uint64_t sub_1CB81ADE0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FeatureEnablementPolicy(a2, a1);
  return a2;
}

uint64_t sub_1CB81AE14(uint64_t a1)
{
  destroy for FeatureEnablementPolicy(a1);
  return a1;
}

unint64_t sub_1CB81AE40()
{
  unint64_t result;

  result = qword_1EF9A1BA0;
  if (!qword_1EF9A1BA0)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for FeatureControlError, &type metadata for FeatureControlError);
    atomic_store(result, (unint64_t *)&qword_1EF9A1BA0);
  }
  return result;
}

uint64_t sub_1CB81AE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_1CB81AE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t sub_1CB81AEA0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1CB776040(0, v1, 0);
  v2 = v26;
  result = sub_1CB81B6D0(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v21 = v3 + 80;
  v22 = v1;
  v23 = v5;
  v24 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v25 = v7;
    v12 = v3;
    sub_1CB847014();
    sub_1CB846954();
    sub_1CB847170();
    sub_1CB846954();
    result = swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v26 + 16);
    v13 = *(_QWORD *)(v26 + 24);
    if (v14 >= v13 >> 1)
      result = sub_1CB776040(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v26 + 16) = v14 + 1;
    v15 = v26 + 16 * v14;
    *(_QWORD *)(v15 + 32) = 0;
    *(_QWORD *)(v15 + 40) = 0xE000000000000000;
    v9 = 1 << *(_BYTE *)(v12 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v24;
    v16 = *(_QWORD *)(v24 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v12;
    v5 = v23;
    if (*(_DWORD *)(v12 + 36) != v23)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v22;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v22;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v24 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(v21 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v25 + 1;
    v6 = v9;
    if (v25 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1CB81B124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D5A0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB785EF0();
  sub_1CB84618C();
  type metadata accessor for BiomePLSELFStoreReader();
  v4 = swift_allocObject();
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics22BiomePLSELFStoreReader_stream, v3, v0);
  qword_1ED890220 = v4;
  return result;
}

uint64_t sub_1CB81B1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a3;
  v24 = a4;
  v22 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BBF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0E08);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF99C440 != -1)
    swift_once();
  v13 = sub_1CB8466D8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EF9A1BA8);
  v14 = sub_1CB8466C0();
  v15 = sub_1CB846C84();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v21 = v5;
    v17 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1CB771000, v14, v15, "Registering a closure to read SELF events from Biome", v16, 2u);
    v5 = v21;
    MEMORY[0x1D179FE84](v17, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D5A0);
  sub_1CB785DB0(&qword_1EF9A0E10, &qword_1ED88D5A0, MEMORY[0x1E0D02538]);
  sub_1CB8461A4();
  sub_1CB785DB0(&qword_1EF9A0E18, &qword_1ED88BBF0, MEMORY[0x1E0D023D8]);
  sub_1CB846144();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v22;
  *(_QWORD *)(v18 + 24) = a2;
  sub_1CB785DB0(&qword_1EF9A0E20, &qword_1EF9A0E08, MEMORY[0x1E0D02388]);
  swift_retain();
  v19 = sub_1CB846120();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v19;
}

void sub_1CB81B4A8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E868AB10;
}

uint64_t sub_1CB81B4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics22BiomePLSELFStoreReader_stream;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D5A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1CB81B50C()
{
  return type metadata accessor for BiomePLSELFStoreReader();
}

uint64_t type metadata accessor for BiomePLSELFStoreReader()
{
  uint64_t result;

  result = qword_1ED88DAF8;
  if (!qword_1ED88DAF8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1CB81B550()
{
  unint64_t v0;

  sub_1CB81B5BC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1CB81B5BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED88D5A8)
  {
    sub_1CB785EF0();
    v0 = sub_1CB846174();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED88D5A8);
  }
}

uint64_t sub_1CB81B610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1EF9A1BA8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF9A1BA8);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1CB81B6A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB81B6C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CB81B758(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t sub_1CB81B6D0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1CB81B758(uint64_t a1, void (*a2)(_QWORD *))
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88ADE0);
  sub_1CB846A50();
  if (qword_1EF99C440 != -1)
    swift_once();
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF9A1BA8);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C90();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CB771000, v3, v4, "Failed to convert sink input into StreamReadResult", v5, 2u);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0CC8);
  v6 = (_QWORD *)swift_allocObject();
  v7 = MEMORY[0x1E0DEE9D8];
  v6[6] = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
  v8 = swift_allocObject();
  v9 = 0;
  *(_QWORD *)(v8 + 16) = 0;
  if ((v7 & 0xC000000000000000) != 0)
    v9 = sub_1CB847044();
  v10 = sub_1CB785DB0((unint64_t *)&qword_1ED88C040, (uint64_t *)&unk_1ED88C050, MEMORY[0x1E0DEE970]);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v9;
  v6[2] = v8;
  v6[3] = v10;
  v6[4] = v11;
  v6[5] = v10;
  a2(v6);
  return swift_release();
}

uint64_t storeEnumTagSinglePayload for BiomePLSELFStoreReader.StreamReadError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB81C270 + 4 * byte_1CB84FC15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB81C2A4 + 4 * byte_1CB84FC10[v4]))();
}

uint64_t sub_1CB81C2A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB81C2AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB81C2B4);
  return result;
}

uint64_t sub_1CB81C2C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB81C2C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB81C2CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB81C2D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BiomePLSELFStoreReader.StreamReadError()
{
  return &type metadata for BiomePLSELFStoreReader.StreamReadError;
}

uint64_t sub_1CB81C2F0()
{
  return sub_1CB785DB0(&qword_1EF9A1BC8, &qword_1EF9A1BD0, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1CB81C320()
{
  unint64_t result;

  result = qword_1EF9A1BD8;
  if (!qword_1EF9A1BD8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84FD80, &type metadata for BiomePLSELFStoreReader.StreamReadError);
    atomic_store(result, (unint64_t *)&qword_1EF9A1BD8);
  }
  return result;
}

void SiriUserFeedbackLearningPlatformResult.init(mlrTaskResult:error:)(void *a1@<X0>, id a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  _QWORD *v62;
  uint64_t v63;
  void *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  v6 = sub_1CB8468D0();
  v59 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  MEMORY[0x1E0C80A78](v6);
  v58 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CB845DE4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v57 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED88E518 != -1)
    swift_once();
  v11 = sub_1CB8466D8();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED890248);
  v13 = a1;
  v14 = a2;
  v15 = v13;
  v16 = a2;
  v63 = v12;
  v17 = sub_1CB8466C0();
  v18 = sub_1CB846C84();
  v19 = os_log_type_enabled(v17, v18);
  v64 = a1;
  if (v19)
  {
    v55 = v9;
    v56 = v8;
    v61 = a2;
    v62 = a3;
    v20 = swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_QWORD *)&v66 = v22;
    *(_DWORD *)v20 = 136315650;
    *(_QWORD *)&v65 = sub_1CB775A54(0xD00000000000001ALL, 0x80000001CB852A60, (uint64_t *)&v66);
    sub_1CB846E58();
    *(_WORD *)(v20 + 12) = 2112;
    if (a1)
    {
      *(_QWORD *)&v65 = v15;
      v23 = v15;
    }
    else
    {
      *(_QWORD *)&v65 = 0;
    }
    sub_1CB846E58();
    *v21 = v64;

    *(_WORD *)(v20 + 22) = 2112;
    a2 = v61;
    if (v61)
    {
      v47 = v61;
      v48 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v65 = v48;
      sub_1CB846E58();
    }
    else
    {
      *(_QWORD *)&v65 = 0;
      sub_1CB846E58();
      v48 = 0;
    }
    v21[1] = v48;

    _os_log_impl(&dword_1CB771000, v17, v18, "SiriUserFeedbackLearningPlatformResult.%s mlrTaskResult: %@, error: %@", (uint8_t *)v20, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v21, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v22, -1, -1);
    MEMORY[0x1D179FE84](v20, -1, -1);

    a3 = v62;
    v8 = v56;
    v9 = v55;
    if (!v64)
    {
LABEL_27:
      v49 = a2;
      v50 = sub_1CB8466C0();
      v51 = sub_1CB846C90();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v52 = 0;
        _os_log_impl(&dword_1CB771000, v50, v51, "SiriUserFeedbackLearningPlatformResult: MLR task result is nil", v52, 2u);
        MEMORY[0x1D179FE84](v52, -1, -1);
      }

      v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D46590]), sel_initWithJSONResult_unprivatizedVector_, 0, 0);
      goto LABEL_30;
    }
  }
  else
  {

    if (!a1)
      goto LABEL_27;
  }
  v24 = v15;
  v25 = a2;
  v26 = objc_msgSend(v24, sel_JSONResult);
  if (!v26)
  {
    v66 = 0u;
    v67 = 0u;
LABEL_17:
    sub_1CB778110((uint64_t)&v66);
    goto LABEL_18;
  }
  v27 = v26;
  v28 = sub_1CB8467EC();

  if (*(_QWORD *)(v28 + 16) && (v29 = sub_1CB779A70(0x746C75736572, 0xE600000000000000), (v30 & 1) != 0))
  {
    sub_1CB778000(*(_QWORD *)(v28 + 56) + 32 * v29, (uint64_t)&v66);
  }
  else
  {
    v66 = 0u;
    v67 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_17;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_18;
  v66 = v65;
  v31 = v57;
  sub_1CB845DCC();
  sub_1CB78A5E8();
  sub_1CB846E94();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v31, v8);
  swift_bridgeObjectRelease();
  v32 = v58;
  sub_1CB8468C4();
  v33 = sub_1CB8468AC();
  v35 = v34;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v60);
  if (v35 >> 60 == 15)
  {
LABEL_18:
    v36 = v24;
    v37 = sub_1CB8466C0();
    v38 = sub_1CB846C90();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v62 = a3;
      v41 = (_QWORD *)v40;
      v42 = swift_slowAlloc();
      v61 = a2;
      v43 = v42;
      *(_QWORD *)&v66 = v42;
      *(_DWORD *)v39 = 138412546;
      *(_QWORD *)&v65 = v36;
      v44 = v36;
      sub_1CB846E58();
      *v41 = v64;

      *(_WORD *)(v39 + 12) = 2080;
      *(_QWORD *)&v65 = sub_1CB775A54(0x746C75736572, 0xE600000000000000, (uint64_t *)&v66);
      sub_1CB846E58();
      _os_log_impl(&dword_1CB771000, v37, v38, "SiriUserFeedbackLearningPlatformResult: Unable to get json result value from %@ for parameter: \"%s\"", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
      swift_arrayDestroy();
      v45 = v41;
      a3 = v62;
      MEMORY[0x1D179FE84](v45, -1, -1);
      swift_arrayDestroy();
      v46 = v43;
      a2 = v61;
      MEMORY[0x1D179FE84](v46, -1, -1);
      MEMORY[0x1D179FE84](v39, -1, -1);

    }
    else
    {

    }
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D46590]), sel_initWithJSONResult_unprivatizedVector_, 0, 0);

LABEL_30:
    v53 = MEMORY[0x1E0DEE9D8];
    goto LABEL_31;
  }
  sub_1CB845D78();
  swift_allocObject();
  sub_1CB845D6C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C200);
  sub_1CB81D5EC(&qword_1ED88A710, (uint64_t (*)(void))sub_1CB81D5A8, MEMORY[0x1E0DEAF40]);
  sub_1CB845D60();

  swift_release();
  sub_1CB78A670(v33, v35);
  v53 = v66;
LABEL_31:
  *a3 = v53;
  a3[1] = v24;
  a3[2] = a2;
}

uint64_t SiriUserFeedbackLearningPlatformResult.toSchedulerResult()()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CB7764E4(0, v2, 0);
    v3 = v15;
    v4 = (unint64_t *)(v1 + 56);
    do
    {
      v6 = *(v4 - 3);
      v5 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      if (*v4 >= 2)
        v9 = *(v4 - 1);
      else
        v9 = 0;
      if (*v4 >= 2)
        v10 = *v4;
      else
        v10 = 0;
      swift_bridgeObjectRetain();
      sub_1CB78A57C(v7, v8);
      v12 = *(_QWORD *)(v15 + 16);
      v11 = *(_QWORD *)(v15 + 24);
      if (v12 >= v11 >> 1)
        sub_1CB7764E4(v11 > 1, v12 + 1, 1);
      v4 += 4;
      *(_QWORD *)(v15 + 16) = v12 + 1;
      v13 = (_QWORD *)(v15 + 32 * v12);
      v13[4] = v6;
      v13[5] = v5;
      v13[6] = v9;
      v13[7] = v10;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t SiriUserFeedbackLearningPlatformResult.result.getter()
{
  return swift_bridgeObjectRetain();
}

id SiriUserFeedbackLearningPlatformResult.mlrTaskResult.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void *SiriUserFeedbackLearningPlatformResult.error.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t SiriUserFeedbackLearningPlatformResult.description.getter()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  MEMORY[0x1D179EE28](v0, &type metadata for SiriUserFeedbackLearningPluginRunResult);
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x203A746C75736572;
}

uint64_t SiriUserFeedbackLearningPlatformResult.init(result:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  void *v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v34[2];

  v3 = sub_1CB8468D0();
  MEMORY[0x1E0C80A78](v3);
  if (qword_1ED88E518 != -1)
    swift_once();
  v4 = sub_1CB8466D8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED890248);
  swift_bridgeObjectRetain_n();
  v5 = sub_1CB8466C0();
  v6 = sub_1CB846C84();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v34[0] = v8;
    *(_DWORD *)v7 = 136315394;
    sub_1CB775A54(0x7365722874696E69, 0xED0000293A746C75, v34);
    sub_1CB846E58();
    *(_WORD *)(v7 + 12) = 2080;
    v9 = swift_bridgeObjectRetain();
    v10 = MEMORY[0x1D179EE28](v9, &type metadata for SiriUserFeedbackLearningPluginRunResult);
    v12 = v11;
    swift_bridgeObjectRelease();
    sub_1CB775A54(v10, v12, v34);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v5, v6, "SiriUserFeedbackLearningPlatformResult.%s status: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v8, -1, -1);
    MEMORY[0x1D179FE84](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1CB845DC0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1CB845DB4();
  v34[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C200);
  sub_1CB81D5EC(&qword_1ED888758, (uint64_t (*)(void))sub_1CB81D654, MEMORY[0x1E0DEAF10]);
  v13 = sub_1CB845DA8();
  v15 = v14;
  sub_1CB8468C4();
  v16 = sub_1CB8468B8();
  if (v17)
  {
    v18 = v16;
    v19 = v17;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E278);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CB848A50;
    *(_QWORD *)(inited + 32) = 0x746C75736572;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v18;
    *(_QWORD *)(inited + 56) = v19;
    sub_1CB787708(inited);
    v21 = objc_allocWithZone(MEMORY[0x1E0D46590]);
    v22 = (void *)sub_1CB8467E0();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v21, sel_initWithJSONResult_unprivatizedVector_, v22, 0);

  }
  else
  {
    swift_bridgeObjectRetain();
    v24 = sub_1CB8466C0();
    v25 = sub_1CB846C90();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v34[0] = v32;
      *(_DWORD *)v26 = 136315138;
      v27 = swift_bridgeObjectRetain();
      v28 = MEMORY[0x1D179EE28](v27, &type metadata for SiriUserFeedbackLearningPluginRunResult);
      v30 = v29;
      swift_bridgeObjectRelease();
      sub_1CB775A54(v28, v30, v34);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v24, v25, "SiriUserFeedbackLearningPlatformResult: Unable to encode %s to string", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v32, -1, -1);
      MEMORY[0x1D179FE84](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D46590]), sel_initWithJSONResult_unprivatizedVector_, 0, 0);
  }
  sub_1CB779034(v13, v15);
  result = swift_release();
  *a2 = a1;
  a2[1] = (uint64_t)v23;
  a2[2] = 0;
  return result;
}

unint64_t sub_1CB81D5A8()
{
  unint64_t result;

  result = qword_1ED88A280;
  if (!qword_1ED88A280)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningPluginRunResult, &type metadata for SiriUserFeedbackLearningPluginRunResult);
    atomic_store(result, (unint64_t *)&qword_1ED88A280);
  }
  return result;
}

uint64_t sub_1CB81D5EC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88C200);
    v8 = a2();
    result = MEMORY[0x1D179FD88](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CB81D654()
{
  unint64_t result;

  result = qword_1ED888738;
  if (!qword_1ED888738)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningPluginRunResult, &type metadata for SiriUserFeedbackLearningPluginRunResult);
    atomic_store(result, (unint64_t *)&qword_1ED888738);
  }
  return result;
}

void destroy for SiriUserFeedbackLearningPlatformResult(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s28SiriPrivateLearningAnalytics38SiriUserFeedbackLearningPlatformResultVwCP_0(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  swift_bridgeObjectRetain();
  v5 = v3;
  v6 = v4;
  a1[2] = v4;
  return a1;
}

_QWORD *assignWithCopy for SiriUserFeedbackLearningPlatformResult(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = (void *)a1[2];
  v8 = (void *)a2[2];
  v9 = v8;
  a1[2] = v8;

  return a1;
}

uint64_t assignWithTake for SiriUserFeedbackLearningPlatformResult(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPlatformResult()
{
  return &type metadata for SiriUserFeedbackLearningPlatformResult;
}

uint64_t static EntityExtractor.extract(from:)(unint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t i;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v1 = static NlxSELFUtils.getTopNlxUsoGraph(from:)(a1);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = v1;
  if (qword_1ED88E518 != -1)
    swift_once();
  v4 = sub_1CB8466D8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED890248);
  swift_retain_n();
  v5 = sub_1CB8466C0();
  v6 = sub_1CB846C84();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v24 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1CB84648C();
    sub_1CB7DEDE8();
    v9 = sub_1CB847170();
    sub_1CB775A54(v9, v10, (uint64_t *)&v24);
    sub_1CB846E58();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v5, v6, "[EntityExtractor] The constructed graph: \n%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v8, -1, -1);
    MEMORY[0x1D179FE84](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v11 = MEMORY[0x1D179E6FC](v3);
  v12 = v11;
  v24 = v2;
  if (!(v11 >> 62))
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_9;
LABEL_27:
    swift_bridgeObjectRelease_n();
    v18 = MEMORY[0x1E0DEE9D8];
    if (!(MEMORY[0x1E0DEE9D8] >> 62))
      goto LABEL_19;
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  result = sub_1CB847044();
  v13 = result;
  if (!result)
    goto LABEL_27;
LABEL_9:
  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  for (i = 0; i != v13; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0)
      MEMORY[0x1D179F320](i, v12);
    else
      swift_retain();
    v16 = sub_1CB81DBB4();
    swift_release();
    if (v16)
      v17 = v16;
    else
      v17 = v2;
    sub_1CB7F13F8(v17);
  }
  swift_bridgeObjectRelease_n();
  v18 = v24;
  if (!(v24 >> 62))
  {
LABEL_19:
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v19)
      goto LABEL_20;
    goto LABEL_29;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  v19 = sub_1CB847044();
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_20:
  v24 = v2;
  result = sub_1CB77659C(0, v19 & ~(v19 >> 63), 0);
  if ((v19 & 0x8000000000000000) == 0)
  {
    v20 = 0;
    v2 = v24;
    v21 = *(_QWORD *)(v24 + 16);
    do
    {
      v22 = *(_QWORD *)(v18 + 8 * v20 + 32);
      v24 = v2;
      v23 = *(_QWORD *)(v2 + 24);
      swift_retain();
      if (v21 >= v23 >> 1)
      {
        sub_1CB77659C(v23 > 1, v21 + 1, 1);
        v2 = v24;
      }
      ++v20;
      *(_QWORD *)(v2 + 16) = v21 + 1;
      *(_QWORD *)(v2 + 8 * v21++ + 32) = v22;
    }
    while (v19 != v20);
    swift_bridgeObjectRelease();
    swift_release();
    return v2;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t EntityExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EntityExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB81DBB4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t i;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t j;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t k;
  uint64_t v11;
  uint64_t v12;
  uint64_t m;
  uint64_t v14;
  uint64_t v15;
  uint64_t n;
  uint64_t v17;
  uint64_t v18;
  uint64_t ii;
  uint64_t v20;
  uint64_t v21;
  uint64_t jj;
  uint64_t v23;
  uint64_t v24;
  uint64_t kk;
  uint64_t v26;
  uint64_t v27;
  uint64_t mm;
  uint64_t v29;
  uint64_t v30;
  uint64_t nn;
  uint64_t v32;
  uint64_t v33;
  uint64_t i1;
  uint64_t v35;
  uint64_t v36;
  uint64_t i2;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t i3;
  uint64_t v42;
  uint64_t v43;
  uint64_t i4;
  uint64_t v45;
  uint64_t v46;
  uint64_t i5;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t i6;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t i7;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[32];
  _BYTE v62[24];
  uint64_t v63;
  _BYTE v64[32];

  sub_1CB84636C();
  sub_1CB778150((uint64_t)v64, (uint64_t)v62);
  if (!v63)
  {
    sub_1CB778110((uint64_t)v64);
LABEL_17:
    v4 = 0;
LABEL_303:
    sub_1CB778110((uint64_t)v62);
    return v4;
  }
  sub_1CB778150((uint64_t)v62, (uint64_t)v61);
  sub_1CB84639C();
  if (swift_dynamicCast())
  {
    swift_retain();
    v0 = sub_1CB846414();
    swift_release();
    if (v0)
    {
      v60 = MEMORY[0x1E0DEE9D8];
      if (v0 >> 62)
      {
        swift_bridgeObjectRetain();
        v1 = sub_1CB847044();
        if (v1)
          goto LABEL_6;
      }
      else
      {
        v1 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v1)
        {
LABEL_6:
          if (v1 >= 1)
          {
            for (i = 0; i != v1; ++i)
            {
              if ((v0 & 0xC000000000000001) != 0)
                MEMORY[0x1D179F320](i, v0);
              else
                swift_retain();
              sub_1CB846324();
              v3 = swift_release();
              if (v57)
              {
                MEMORY[0x1D179EDF8](v3);
                if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1CB846AA4();
                sub_1CB846AD4();
                sub_1CB846A74();
              }
            }
LABEL_257:
            swift_bridgeObjectRelease();
            v4 = v60;
LABEL_299:
            swift_bridgeObjectRelease();
LABEL_300:
            swift_release();
            goto LABEL_301;
          }
          __break(1u);
LABEL_203:
          swift_bridgeObjectRetain();
          v5 = sub_1CB847044();
          if (!v5)
            goto LABEL_298;
          goto LABEL_22;
        }
      }
LABEL_298:
      swift_bridgeObjectRelease();
      v4 = MEMORY[0x1E0DEE9D8];
      goto LABEL_299;
    }
    goto LABEL_248;
  }
  sub_1CB8463B4();
  if (swift_dynamicCast())
  {
    swift_retain();
    v0 = sub_1CB846414();
    swift_release();
    if (v0)
    {
      v60 = MEMORY[0x1E0DEE9D8];
      if (v0 >> 62)
        goto LABEL_203;
      v5 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_22:
        if (v5 >= 1)
        {
          for (j = 0; j != v5; ++j)
          {
            if ((v0 & 0xC000000000000001) != 0)
              MEMORY[0x1D179F320](j, v0);
            else
              swift_retain();
            sub_1CB846324();
            v7 = swift_release();
            if (v57)
            {
              MEMORY[0x1D179EDF8](v7);
              if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1CB846AA4();
              sub_1CB846AD4();
              sub_1CB846A74();
            }
          }
          goto LABEL_257;
        }
        __break(1u);
        goto LABEL_220;
      }
      goto LABEL_298;
    }
LABEL_248:
    sub_1CB778110((uint64_t)v64);
    swift_release();
    v4 = 0;
LABEL_302:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
    goto LABEL_303;
  }
  sub_1CB8463A8();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB846414();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1CB847044();
      if (!v9)
        goto LABEL_298;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9)
        goto LABEL_298;
    }
    if (v9 >= 1)
    {
      for (k = 0; k != v9; ++k)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](k, v8);
        else
          swift_retain();
        sub_1CB846324();
        v11 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v11);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_240;
  }
  sub_1CB846384();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB846414();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12)
        goto LABEL_298;
      goto LABEL_50;
    }
LABEL_240:
    swift_bridgeObjectRetain();
    v12 = sub_1CB847044();
    if (!v12)
      goto LABEL_298;
LABEL_50:
    if (v12 >= 1)
    {
      for (m = 0; m != v12; ++m)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](m, v8);
        else
          swift_retain();
        sub_1CB846324();
        v14 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v14);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_259;
  }
  sub_1CB8463CC();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB846414();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v15 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v15)
        goto LABEL_298;
      goto LABEL_64;
    }
LABEL_259:
    swift_bridgeObjectRetain();
    v15 = sub_1CB847044();
    if (!v15)
      goto LABEL_298;
LABEL_64:
    if (v15 >= 1)
    {
      for (n = 0; n != v15; ++n)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](n, v8);
        else
          swift_retain();
        sub_1CB846324();
        v17 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v17);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_263;
  }
  sub_1CB8463FC();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB846414();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v18 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v18)
        goto LABEL_298;
      goto LABEL_78;
    }
LABEL_263:
    swift_bridgeObjectRetain();
    v18 = sub_1CB847044();
    if (!v18)
      goto LABEL_298;
LABEL_78:
    if (v18 >= 1)
    {
      for (ii = 0; ii != v18; ++ii)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](ii, v8);
        else
          swift_retain();
        sub_1CB846324();
        v20 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v20);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_266;
  }
  sub_1CB8463F0();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB846414();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v21 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v21)
        goto LABEL_298;
      goto LABEL_92;
    }
LABEL_266:
    swift_bridgeObjectRetain();
    v21 = sub_1CB847044();
    if (!v21)
      goto LABEL_298;
LABEL_92:
    if (v21 >= 1)
    {
      for (jj = 0; jj != v21; ++jj)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](jj, v8);
        else
          swift_retain();
        sub_1CB846324();
        v23 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v23);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_269;
  }
  sub_1CB846444();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB846414();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v24 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v24)
        goto LABEL_298;
      goto LABEL_106;
    }
LABEL_269:
    swift_bridgeObjectRetain();
    v24 = sub_1CB847044();
    if (!v24)
      goto LABEL_298;
LABEL_106:
    if (v24 >= 1)
    {
      for (kk = 0; kk != v24; ++kk)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](kk, v8);
        else
          swift_retain();
        sub_1CB846324();
        v26 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v26);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_272;
  }
  sub_1CB846474();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB846414();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v27 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v27)
        goto LABEL_298;
      goto LABEL_120;
    }
LABEL_272:
    swift_bridgeObjectRetain();
    v27 = sub_1CB847044();
    if (!v27)
      goto LABEL_298;
LABEL_120:
    if (v27 >= 1)
    {
      for (mm = 0; mm != v27; ++mm)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](mm, v8);
        else
          swift_retain();
        sub_1CB846324();
        v29 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v29);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_275;
  }
  sub_1CB846468();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB846414();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v30 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v30)
        goto LABEL_298;
      goto LABEL_134;
    }
LABEL_275:
    swift_bridgeObjectRetain();
    v30 = sub_1CB847044();
    if (!v30)
      goto LABEL_298;
LABEL_134:
    if (v30 >= 1)
    {
      for (nn = 0; nn != v30; ++nn)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](nn, v8);
        else
          swift_retain();
        sub_1CB846324();
        v32 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v32);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_278;
  }
  sub_1CB8463D8();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB8462C4();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v33 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v33)
        goto LABEL_298;
      goto LABEL_148;
    }
LABEL_278:
    swift_bridgeObjectRetain();
    v33 = sub_1CB847044();
    if (!v33)
      goto LABEL_298;
LABEL_148:
    if (v33 >= 1)
    {
      for (i1 = 0; i1 != v33; ++i1)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](i1, v8);
        else
          swift_retain();
        sub_1CB846324();
        v35 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v35);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_281;
  }
  sub_1CB84642C();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB8462C4();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v36 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v36)
        goto LABEL_298;
      goto LABEL_162;
    }
LABEL_281:
    swift_bridgeObjectRetain();
    v36 = sub_1CB847044();
    if (!v36)
      goto LABEL_298;
LABEL_162:
    if (v36 >= 1)
    {
      for (i2 = 0; i2 != v36; ++i2)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](i2, v8);
        else
          swift_retain();
        sub_1CB846324();
        v38 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v38);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_284;
  }
  sub_1CB8463C0();
  if (swift_dynamicCast())
  {
    swift_retain();
    v39 = sub_1CB8462C4();
    swift_release();
    if (!v39)
    {
      sub_1CB8462D0();
      v4 = v59;
      if (v59)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
        v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = xmmword_1CB84A330;
        *(_QWORD *)(v49 + 32) = v59;
        v58 = v49;
        sub_1CB846A74();
        v4 = v58;
      }
      goto LABEL_300;
    }
    v60 = MEMORY[0x1E0DEE9D8];
    v8 = v39;
    if (!(v39 >> 62))
    {
      v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v40)
      {
LABEL_285:
        swift_bridgeObjectRelease();
        v4 = MEMORY[0x1E0DEE9D8];
        goto LABEL_286;
      }
      goto LABEL_176;
    }
LABEL_284:
    swift_bridgeObjectRetain();
    v40 = sub_1CB847044();
    if (!v40)
      goto LABEL_285;
LABEL_176:
    if (v40 >= 1)
    {
      for (i3 = 0; i3 != v40; ++i3)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](i3, v8);
        else
          swift_retain();
        sub_1CB846324();
        v42 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v42);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
LABEL_220:
      swift_bridgeObjectRelease();
      v4 = v60;
LABEL_286:
      swift_release();
      swift_bridgeObjectRelease();
LABEL_301:
      sub_1CB778110((uint64_t)v64);
      goto LABEL_302;
    }
    __break(1u);
    goto LABEL_288;
  }
  sub_1CB84645C();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB8462C4();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v43 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v43)
        goto LABEL_298;
      goto LABEL_192;
    }
LABEL_288:
    swift_bridgeObjectRetain();
    v43 = sub_1CB847044();
    if (!v43)
      goto LABEL_298;
LABEL_192:
    if (v43 >= 1)
    {
      for (i4 = 0; i4 != v43; ++i4)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](i4, v8);
        else
          swift_retain();
        sub_1CB846324();
        v45 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v45);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_291;
  }
  sub_1CB846438();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB8462C4();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v46 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v46)
        goto LABEL_298;
      goto LABEL_209;
    }
LABEL_291:
    swift_bridgeObjectRetain();
    v46 = sub_1CB847044();
    if (!v46)
      goto LABEL_298;
LABEL_209:
    if (v46 >= 1)
    {
      for (i5 = 0; i5 != v46; ++i5)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](i5, v8);
        else
          swift_retain();
        sub_1CB846324();
        v48 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v48);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_294;
  }
  sub_1CB846408();
  if (swift_dynamicCast())
  {
    swift_retain();
    v8 = sub_1CB8462C4();
    swift_release();
    if (!v8)
      goto LABEL_248;
    v60 = MEMORY[0x1E0DEE9D8];
    if (!(v8 >> 62))
    {
      v50 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v50)
        goto LABEL_298;
      goto LABEL_229;
    }
LABEL_294:
    swift_bridgeObjectRetain();
    v50 = sub_1CB847044();
    if (!v50)
      goto LABEL_298;
LABEL_229:
    if (v50 >= 1)
    {
      for (i6 = 0; i6 != v50; ++i6)
      {
        if ((v8 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](i6, v8);
        else
          swift_retain();
        sub_1CB846324();
        v52 = swift_release();
        if (v57)
        {
          MEMORY[0x1D179EDF8](v52);
          if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
LABEL_297:
    swift_bridgeObjectRetain();
    result = sub_1CB847044();
    v53 = result;
    if (!result)
      goto LABEL_298;
    goto LABEL_246;
  }
  sub_1CB846420();
  if (!swift_dynamicCast())
  {
    sub_1CB778110((uint64_t)v64);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
    goto LABEL_17;
  }
  swift_retain();
  v8 = sub_1CB8462C4();
  swift_release();
  if (!v8)
    goto LABEL_248;
  v60 = MEMORY[0x1E0DEE9D8];
  if (v8 >> 62)
    goto LABEL_297;
  v53 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v53)
    goto LABEL_298;
LABEL_246:
  if (v53 >= 1)
  {
    for (i7 = 0; i7 != v53; ++i7)
    {
      if ((v8 & 0xC000000000000001) != 0)
        MEMORY[0x1D179F320](i7, v8);
      else
        swift_retain();
      sub_1CB846324();
      v56 = swift_release();
      if (v57)
      {
        MEMORY[0x1D179EDF8](v56);
        if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CB846AA4();
        sub_1CB846AD4();
        sub_1CB846A74();
      }
    }
    goto LABEL_257;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for EntityExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for EntityExtractor()
{
  return swift_lookUpClassMethod();
}

_QWORD *DebugModeFlagUserDefaultsStore.__allocating_init()()
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = 0xD000000000000038;
  result[3] = 0x80000001CB857970;
  result[4] = 0xD000000000000012;
  result[5] = 0x80000001CB8579B0;
  return result;
}

_QWORD *DebugModeFlagUserDefaultsStore.init()()
{
  _QWORD *v0;
  _QWORD *result;

  result = v0;
  v0[2] = 0xD000000000000038;
  v0[3] = 0x80000001CB857970;
  v0[4] = 0xD000000000000012;
  v0[5] = 0x80000001CB8579B0;
  return result;
}

id sub_1CB81F3D4()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  swift_bridgeObjectRetain();
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2)
    return 0;
  v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  return v4;
}

void sub_1CB81F488()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  swift_bridgeObjectRetain();
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    v3 = (void *)sub_1CB846B10();
    v4 = (id)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

  }
}

void (*sub_1CB81F564(_QWORD *a1))()
{
  uint64_t v1;
  unsigned __int8 *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  unsigned __int8 v7;

  *a1 = v1;
  v2 = (unsigned __int8 *)(a1 + 1);
  v3 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  swift_bridgeObjectRetain();
  v4 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithSuiteName_, v4);

  if (v5)
  {
    v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);

  }
  else
  {
    v7 = 0;
  }
  *v2 = v7;
  return sub_1CB81F62C;
}

void sub_1CB81F62C()
{
  sub_1CB81F488();
}

uint64_t DebugModeFlagUserDefaultsStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DebugModeFlagUserDefaultsStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1CB81F6A0()
{
  return (unint64_t)sub_1CB81F3D4() & 1;
}

void sub_1CB81F6C4()
{
  sub_1CB81F488();
}

void (*sub_1CB81F6E4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1CB81F564(v2);
  return sub_1CB7BD51C;
}

id sub_1CB81F72C@<X0>(_BYTE *a1@<X8>)
{
  id result;

  result = sub_1CB81F3D4();
  *a1 = result & 1;
  return result;
}

void sub_1CB81F758()
{
  sub_1CB81F488();
}

uint64_t dispatch thunk of DebugModeFlagStore.debugModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DebugModeFlagStore.debugModeEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DebugModeFlagStore.debugModeEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for DebugModeFlagUserDefaultsStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for DebugModeFlagUserDefaultsStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DebugModeFlagUserDefaultsStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DebugModeFlagUserDefaultsStore.debugModeEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DebugModeFlagUserDefaultsStore.debugModeEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DebugModeFlagUserDefaultsStore.debugModeEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

ValueMetadata *type metadata accessor for DefaultPluginPath()
{
  return &type metadata for DefaultPluginPath;
}

uint64_t sub_1CB81F7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v7;

  v0 = sub_1CB845F58();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1ED890200);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED890200);
  v5 = (id)MEMORY[0x1D179F77C]();
  sub_1CB8468A0();

  sub_1CB845EBC();
  swift_bridgeObjectRelease();
  sub_1CB845F04();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_1CB81F8F8()
{
  uint64_t v0;

  v0 = sub_1CB84672C();
  __swift_allocate_value_buffer(v0, qword_1ED8891B0);
  *(_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8891B0) = 60;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

id SiriUserFeedbackLearningPluginBase.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SiriUserFeedbackLearningPluginBase.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  v1 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_usageLogger];
  *((_QWORD *)v1 + 3) = &type metadata for UsageLogger;
  *((_QWORD *)v1 + 4) = &protocol witness table for UsageLogger;
  v2 = qword_1ED8891D0;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  v4 = sub_1CB84672C();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED8891B0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(&v3[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_timeout], v5, v4);

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for SiriUserFeedbackLearningPluginBase();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for SiriUserFeedbackLearningPluginBase()
{
  uint64_t result;

  result = qword_1ED88D5B8;
  if (!qword_1ED88D5B8)
    return swift_getSingletonMetadata();
  return result;
}

id SiriUserFeedbackLearningPluginBase.__allocating_init(usageLogger:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v3 = objc_allocWithZone(v1);
  sub_1CB79CBA8(a1, (uint64_t)v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_usageLogger);
  v4 = qword_1ED8891D0;
  v5 = v3;
  if (v4 != -1)
    swift_once();
  v6 = sub_1CB84672C();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED8891B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))((uint64_t)v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_timeout, v7, v6);

  v10.receiver = v5;
  v10.super_class = v1;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v8;
}

id SiriUserFeedbackLearningPluginBase.init(usageLogger:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  sub_1CB79CBA8(a1, (uint64_t)v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_usageLogger);
  v3 = qword_1ED8891D0;
  v4 = v1;
  if (v3 != -1)
    swift_once();
  v5 = sub_1CB84672C();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED8891B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))((uint64_t)v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_timeout, v6, v5);

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for SiriUserFeedbackLearningPluginBase();
  v7 = objc_msgSendSuper2(&v9, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v7;
}

id sub_1CB81FCFC(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t ObjectType;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  id v18;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  _QWORD *v23;
  _OWORD v24[3];
  uint64_t v25;
  uint64_t v26[4];
  uint64_t v27[8];
  uint64_t v28;

  v3 = v2;
  v4 = v1;
  ObjectType = swift_getObjectType();
  if (qword_1ED88E518 != -1)
    swift_once();
  v7 = sub_1CB8466D8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED890248);
  v8 = a1;
  v9 = sub_1CB8466C0();
  v10 = sub_1CB846C84();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v27[0] = v28;
    *(_DWORD *)v11 = 136315394;
    sub_1CB775A54(0x286D726F66726570, 0xEB00000000293A5FLL, v27);
    sub_1CB846E58();
    *(_WORD *)(v11 + 12) = 2112;
    *(_QWORD *)&v24[0] = v8;
    v12 = ObjectType;
    v13 = v8;
    sub_1CB846E58();
    *v23 = v8;

    ObjectType = v12;
    _os_log_impl(&dword_1CB771000, v9, v10, "SiriUserFeedbackLearningPluginBase.%s task:%@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v23, -1, -1);
    v14 = v28;
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v14, -1, -1);
    MEMORY[0x1D179FE84](v11, -1, -1);

  }
  else
  {

  }
  sub_1CB79CBA8((uint64_t)v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_usageLogger, (uint64_t)v24);
  SiriUserFeedbackLearningTask.init(mlrTask:usageLogger:)(v8, v24, (uint64_t)v27);
  if (!v2)
  {
    v15 = (uint64_t)v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_timeout;
    sub_1CB7A0634((uint64_t)v27, (uint64_t)v24);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v4;
    v17 = v24[1];
    *(_OWORD *)(v16 + 24) = v24[0];
    *(_OWORD *)(v16 + 40) = v17;
    *(_OWORD *)(v16 + 56) = v24[2];
    *(_QWORD *)(v16 + 72) = v25;
    *(_QWORD *)(v16 + 80) = ObjectType;
    v18 = v4;
    sub_1CB79FBF4(v15, &unk_1EF9A1C90, v16, v26);
    sub_1CB7A0670((uint64_t)v27);
    swift_release();
    v20 = v26[0];
    v21 = v26[1];
    v22 = (void *)v26[3];
    v3 = (id)v26[2];
    sub_1CB78A590(v20, v21);

  }
  return v3;
}

uint64_t sub_1CB820038(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 48) = a1;
  v5 = *(int **)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x78);
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 56) = v6;
  *v6 = v3;
  v6[1] = sub_1CB8200C8;
  return v8(v3 + 16, a3);
}

uint64_t sub_1CB8200C8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB82011C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 88) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v2;
  *v2 = v0;
  v2[1] = sub_1CB8201AC;
  return sub_1CB847188();
}

uint64_t sub_1CB8201AC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB820200()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_1CB820258;
  return swift_task_switch();
}

uint64_t sub_1CB820258()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB8202AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 48);
  *(_OWORD *)v3 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB8202C8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_1CB8202FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  int *v6;
  _QWORD *v7;
  int *v9;

  v4 = *(_QWORD **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB785DF4;
  v5[6] = a1;
  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x78);
  v9 = (int *)((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  v5[7] = v7;
  *v7 = v5;
  v7[1] = sub_1CB8200C8;
  return ((uint64_t (*)(_QWORD *, uint64_t))v9)(v5 + 2, v1 + 24);
}

uint64_t sub_1CB820458(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1CB820470()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v3[2];

  v1 = *(uint64_t **)(v0 + 16);
  v3[0] = 0xD000000000000036;
  v3[1] = 0x80000001CB857A80;
  SiriUserFeedbackLearningTaskResult.init(status:)(v3, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1CB8204C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889598);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  if (qword_1ED88E518 != -1)
    swift_once();
  v5 = sub_1CB8466D8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED890248);
  v6 = sub_1CB8466C0();
  v7 = sub_1CB846C84();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CB771000, v6, v7, "Waiting for all-clear from outgoing SELF logging queue...", v8, 2u);
    MEMORY[0x1D179FE84](v8, -1, -1);
  }

  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
  v10 = objc_msgSend(v9, sel_defaultMessageStream);

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1CB820CD8;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_11;
  v13 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v10, sel_barrierWithCompletion_, v13);
  _Block_release(v13);

}

uint64_t sub_1CB8206DC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1ED88E518 != -1)
    swift_once();
  v0 = sub_1CB8466D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  v1 = sub_1CB8466C0();
  v2 = sub_1CB846C84();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1CB771000, v1, v2, "The outgoing SELF logging queue is now empty/completed", v3, 2u);
    MEMORY[0x1D179FE84](v3, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889598);
  return sub_1CB846B34();
}

id SiriUserFeedbackLearningPluginBase.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriUserFeedbackLearningPluginBase();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CB820848(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & **v2) + 0x78);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CB785DF4;
  return v9(a1, a2);
}

uint64_t sub_1CB8208D0()
{
  return type metadata accessor for SiriUserFeedbackLearningPluginBase();
}

uint64_t sub_1CB8208D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB84672C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SiriUserFeedbackLearningPluginBase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginBase.__allocating_init(usageLogger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginBase.perform(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginBase.run(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x78);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CB785488;
  return v9(a1, a2);
}

uint64_t sub_1CB820A14()
{
  return swift_task_switch();
}

uint64_t sub_1CB820A28()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  if (qword_1ED88E518 != -1)
    swift_once();
  v1 = sub_1CB8466D8();
  *(_QWORD *)(v0 + 16) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED890248);
  v2 = sub_1CB8466C0();
  v3 = sub_1CB846C84();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1CB771000, v2, v3, "Waiting for all-clear from bookmarks write queue...", v4, 2u);
    MEMORY[0x1D179FE84](v4, -1, -1);
  }

  if (qword_1ED88D6A8 != -1)
    swift_once();
  v5 = *((_QWORD *)off_1ED88D6A0 + 15);
  v6 = *((_QWORD *)off_1ED88D6A0 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)off_1ED88D6A0 + 12, v5);
  v9 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v6 + 40) + *(_QWORD *)(v6 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v7;
  *v7 = v0;
  v7[1] = sub_1CB820B80;
  return v9(v5, v6);
}

uint64_t sub_1CB820B80()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB820BD4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_1CB8466C0();
  v2 = sub_1CB846C84();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1CB771000, v1, v2, "The bookmarks write queue is now empty/completed", v3, 2u);
    MEMORY[0x1D179FE84](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB820C74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889598);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CB820CD8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889598);
  return sub_1CB8206DC();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_1CB820D20()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

void sub_1CB820DA4(char a1)
{
  sub_1CB8472E4();
  __asm { BR              X10 }
}

uint64_t sub_1CB820DFC()
{
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB820E6C()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB820EF0()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB820F74()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB820FF8()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

void sub_1CB82109C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CB8210E4()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB821140()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB8211C0()
{
  sub_1CB8472E4();
  sub_1CB847308();
  return sub_1CB847314();
}

void sub_1CB82120C(uint64_t a1, char a2)
{
  sub_1CB8472E4();
  __asm { BR              X10 }
}

uint64_t sub_1CB821260()
{
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB8212D0()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB821350()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB8213D0()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB821450()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB8214F0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

SiriPrivateLearningAnalytics::PluginEventsSchedulerStatus_optional __swiftcall PluginEventsSchedulerStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningAnalytics::PluginEventsSchedulerStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CB8470B0();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PluginEventsSchedulerStatus.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 0xD000000000000015;
  if (*v0)
    return v1;
  else
    return 0x646570706F7473;
}

uint64_t sub_1CB8215D4()
{
  return sub_1CB820FF8();
}

uint64_t sub_1CB8215DC()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB82165C()
{
  return sub_1CB821450();
}

SiriPrivateLearningAnalytics::PluginEventsSchedulerStatus_optional sub_1CB821664(Swift::String *a1)
{
  return PluginEventsSchedulerStatus.init(rawValue:)(*a1);
}

void sub_1CB821670(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x80000001CB852320;
  v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    v5 = 0xD000000000000015;
    v4 = 0x80000001CB852340;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x646570706F7473;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1CB8216D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1CB80BF70(*a1, *a2);
}

uint64_t PluginEventsScheduler.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  PluginEventsScheduler.init()();
  return v0;
}

uint64_t PluginEventsScheduler.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD v34[2];
  _QWORD v35[3];
  uint64_t v36;
  _UNKNOWN **v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;

  v1 = v0;
  v2 = sub_1CB846D08();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CB846CF0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1CB84678C();
  MEMORY[0x1E0C80A78](v8);
  *(_BYTE *)(v0 + 16) = 0;
  v34[1] = sub_1CB777FA8(0, qword_1ED88E0B0);
  sub_1CB846780();
  *(_QWORD *)&v38 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E0A8, v7, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E090);
  sub_1CB7C6674((unint64_t *)&unk_1ED88E098, &qword_1ED88E090);
  sub_1CB846EC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
  *(_QWORD *)(v0 + 24) = sub_1CB846D20();
  *(_QWORD *)(v0 + 56) = &type metadata for EnvironmentFeatureFlags;
  *(_QWORD *)(v0 + 64) = &protocol witness table for EnvironmentFeatureFlags;
  v9 = type metadata accessor for TrialStatusResolver();
  v10 = (_OWORD *)swift_allocObject();
  v10[8] = 0u;
  v10[9] = 0u;
  *(_OWORD *)((char *)v10 + 154) = 0u;
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_clientWithIdentifier_, 112);
  v13 = sub_1CB777FA8(0, (unint64_t *)&qword_1ED88E4B8);
  v36 = v13;
  v37 = &off_1E86930A0;
  v35[0] = v12;
  sub_1CB79CBA8((uint64_t)v35, (uint64_t)&v39);
  *(_QWORD *)&v38 = 0xD000000000000027;
  *((_QWORD *)&v38 + 1) = 0x80000001CB857B80;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v14 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)&v41 + 1) = sub_1CB787E40(MEMORY[0x1E0DEE9D8]);
  sub_1CB8314BC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  v15 = v43;
  v10[5] = v42;
  v10[6] = v15;
  v10[7] = v44;
  v16 = v39;
  v10[1] = v38;
  v10[2] = v16;
  v17 = v41;
  v10[3] = v40;
  v10[4] = v17;
  *(_QWORD *)(v0 + 96) = v9;
  *(_QWORD *)(v0 + 104) = &protocol witness table for TrialStatusResolver;
  *(_QWORD *)(v0 + 72) = v10;
  v18 = type metadata accessor for TrialPrivateLearningSuggestionsStatusResolver();
  v19 = (_OWORD *)swift_allocObject();
  v19[8] = 0u;
  v19[9] = 0u;
  *(_OWORD *)((char *)v19 + 153) = 0u;
  v20 = objc_msgSend(v11, sel_clientWithIdentifier_, 276);
  v36 = v13;
  v37 = &off_1E86930A0;
  v35[0] = v20;
  sub_1CB79CBA8((uint64_t)v35, (uint64_t)&v39);
  *(_QWORD *)&v38 = 0xD00000000000002ALL;
  *((_QWORD *)&v38 + 1) = 0x80000001CB857BB0;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  *((_QWORD *)&v41 + 1) = sub_1CB787E40(v14);
  sub_1CB8314BC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  v21 = v43;
  v19[5] = v42;
  v19[6] = v21;
  v19[7] = v44;
  v22 = v39;
  v19[1] = v38;
  v19[2] = v22;
  v23 = v41;
  v19[3] = v40;
  v19[4] = v23;
  *(_QWORD *)(v0 + 136) = v18;
  *(_QWORD *)(v0 + 144) = &protocol witness table for TrialPrivateLearningSuggestionsStatusResolver;
  *(_QWORD *)(v0 + 112) = v19;
  if (qword_1ED88C1B8 != -1)
    swift_once();
  v24 = sub_1CB845F58();
  v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED890200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginPath, v25, v24);
  v26 = (void *)sub_1CB7C57F4();
  type metadata accessor for PluginScheduler();
  swift_allocObject();
  v27 = sub_1CB7C55AC(v26);

  *(_QWORD *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginScheduler) = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A870);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1CB848A50;
  v29 = type metadata accessor for BiomeFilterUserCallAfterHangupSiriCall();
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1CB8501B0;
  *(_QWORD *)(v30 + 32) = 0;
  *(_BYTE *)(v30 + 40) = 1;
  *(_QWORD *)(v30 + 48) = 0;
  *(_BYTE *)(v30 + 56) = 1;
  *(_QWORD *)(v28 + 56) = v29;
  *(_QWORD *)(v28 + 64) = &off_1E868F010;
  *(_QWORD *)(v28 + 32) = v30;
  v31 = sub_1CB7D83F0(v28);
  v32 = (uint64_t *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor);
  v32[3] = type metadata accessor for BiomeSiriEventScenarioProcessor();
  v32[4] = (uint64_t)&off_1E868EFF8;
  *v32 = v31;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginRunDelay) = 0x4024000000000000;
  return v1;
}

void sub_1CB821C4C()
{
  sub_1CB821C5C(0, 0);
}

void sub_1CB821C5C(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD v21[4];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1CB846744();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CB84678C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginScheduler)+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration), *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginScheduler)+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration+ 24));
  if ((sub_1CB823F3C() & 1) != 0 || !AFDeviceSupportsSiriUOD())
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v17 = sub_1CB8466D8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED890248);
    v18 = sub_1CB8466C0();
    v19 = sub_1CB846C84();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1CB771000, v18, v19, "PluginEventsScheduler is skipping starting events and trial subscriptions, incompatible device configuration", v20, 2u);
      MEMORY[0x1D179FE84](v20, -1, -1);
    }

    if (a1)
      a1(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v14 = swift_allocObject();
    swift_weakInit();
    v21[2] = *(_QWORD *)(v3 + 24);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v14;
    v15[3] = a1;
    v21[1] = v14;
    v15[4] = a2;
    aBlock[4] = sub_1CB824434;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CB8214F0;
    aBlock[3] = &block_descriptor_19_0;
    v16 = _Block_copy(aBlock);
    swift_retain();
    sub_1CB8243E8((uint64_t)a1);
    sub_1CB846768();
    v21[3] = MEMORY[0x1E0DEE9D8];
    sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
    sub_1CB7C6674((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8);
    sub_1CB846EC4();
    MEMORY[0x1D179F0D4](0, v13, v9, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
    swift_release();
  }
}

void sub_1CB821F84(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t Strong;
  uint64_t v11;
  char v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  id v28;
  uint64_t v29;
  void (*v30)(void);
  id v31;

  if (qword_1ED88E518 != -1)
    swift_once();
  v6 = sub_1CB8466D8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED890248);
  v7 = sub_1CB8466C0();
  v8 = sub_1CB846C84();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1CB771000, v7, v8, "PluginEventsScheduler is starting events and trial subscriptions", v9, 2u);
    MEMORY[0x1D179FE84](v9, -1, -1);
  }

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v11 = Strong;
    if (*(_BYTE *)(Strong + 16))
    {
      v12 = sub_1CB8471A0();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v13 = sub_1CB8466C0();
        v14 = sub_1CB846C90();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v15 = 0;
          _os_log_impl(&dword_1CB771000, v13, v14, "PluginEventsScheduler cannot start event / status subscriptions - the scheduler is already subscribed", v15, 2u);
          MEMORY[0x1D179FE84](v15, -1, -1);
          swift_release();

        }
        else
        {

          swift_release();
        }
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a1;
    v19[3] = a2;
    v19[4] = a3;
    v20 = *(_QWORD *)(v11 + 96);
    v21 = *(_QWORD *)(v11 + 104);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v11 + 72), v20);
    v22 = *(_QWORD *)(v21 + 16);
    v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    swift_retain();
    sub_1CB8243E8((uint64_t)a2);
    v23(v20, v22);
    v25 = *(_QWORD *)(v11 + 136);
    v24 = *(_QWORD *)(v11 + 144);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v11 + 112), v25);
    (*(void (**)(uint64_t))(*(_QWORD *)(v24 + 8) + 8))(v25);
    sub_1CB822854(a2, a3);
    v26 = *(_QWORD *)(v11 + 104);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v11 + 72), *(_QWORD *)(v11 + 96));
    v27 = *(void (**)(void))(*(_QWORD *)(v26 + 16) + 16);
    v28 = *(id *)(v11 + 24);
    v27();

    v29 = *(_QWORD *)(v11 + 144);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v11 + 112), *(_QWORD *)(v11 + 136));
    v30 = *(void (**)(void))(*(_QWORD *)(v29 + 8) + 16);
    v31 = *(id *)(v11 + 24);
    v30();
    swift_release();
    swift_release();

    return;
  }
  v16 = sub_1CB8466C0();
  v17 = sub_1CB846C90();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1CB771000, v16, v17, "PluginEventsScheduler cannot start event / status subscriptions - the scheduler was deallocated", v18, 2u);
    MEMORY[0x1D179FE84](v18, -1, -1);
  }

}

void sub_1CB822344(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD);
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t Strong;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[3];
  _BYTE v40[40];
  uint64_t v41;
  unint64_t v42;

  if (qword_1ED88E518 != -1)
    swift_once();
  v7 = sub_1CB8466D8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED890248);
  sub_1CB824494(a1, (uint64_t)v40);
  v8 = sub_1CB8466C0();
  v9 = sub_1CB846C78();
  if (os_log_type_enabled(v8, v9))
  {
    v37 = a1;
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v39[0] = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = a4;
    v13 = a3;
    v14 = v41;
    v15 = v42;
    swift_bridgeObjectRetain();
    v16 = v14;
    a4 = v12;
    v38 = sub_1CB775A54(v16, v15, v39);
    sub_1CB846E58();
    a3 = v13;
    swift_bridgeObjectRelease();
    sub_1CB8244D0((uint64_t)v40);
    _os_log_impl(&dword_1CB771000, v8, v9, "PluginEventsScheduler received a Trial experiment update for namespace %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v11, -1, -1);
    v17 = v10;
    a1 = v37;
    MEMORY[0x1D179FE84](v17, -1, -1);
  }
  else
  {
    sub_1CB8244D0((uint64_t)v40);
  }

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v19 = (_QWORD *)Strong;
    if (*(_BYTE *)(Strong + 16))
    {
      v20 = sub_1CB8471A0();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        v21 = v19[12];
        v22 = v19[13];
        __swift_project_boxed_opaque_existential_1(v19 + 9, v21);
        (*(void (**)(uint64_t))(*(_QWORD *)(v22 + 16) + 8))(v21);
        v23 = v19[17];
        v24 = v19[18];
        __swift_project_boxed_opaque_existential_1(v19 + 14, v23);
        (*(void (**)(uint64_t))(*(_QWORD *)(v24 + 8) + 8))(v23);
        sub_1CB822854(a3, a4);
LABEL_17:
        swift_release();
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1CB824494(a1, (uint64_t)v40);
    v31 = sub_1CB8466C0();
    v32 = sub_1CB846C84();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v38 = v34;
      *(_DWORD *)v33 = 136315138;
      v35 = v41;
      v36 = v42;
      swift_bridgeObjectRetain();
      sub_1CB775A54(v35, v36, &v38);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      sub_1CB8244D0((uint64_t)v40);
      _os_log_impl(&dword_1CB771000, v31, v32, "PluginEventsScheduler is ignoring a Trial experiment update for namespace %s after halting", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v34, -1, -1);
      MEMORY[0x1D179FE84](v33, -1, -1);
    }
    else
    {
      sub_1CB8244D0((uint64_t)v40);
    }

    goto LABEL_17;
  }
  sub_1CB824494(a1, (uint64_t)v40);
  v25 = sub_1CB8466C0();
  v26 = sub_1CB846C90();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v38 = v28;
    *(_DWORD *)v27 = 136315138;
    v29 = v41;
    v30 = v42;
    swift_bridgeObjectRetain();
    sub_1CB775A54(v29, v30, &v38);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB8244D0((uint64_t)v40);
    _os_log_impl(&dword_1CB771000, v25, v26, "PluginEventsScheduler received a Trial experiment update after deallocation for namespace %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v28, -1, -1);
    MEMORY[0x1D179FE84](v27, -1, -1);
  }
  else
  {
    sub_1CB8244D0((uint64_t)v40);
  }

}

void sub_1CB822854(void (*a1)(_QWORD), uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  char v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34[5];

  v3 = v2;
  v6 = *v2;
  if (qword_1ED88E518 != -1)
    swift_once();
  v7 = sub_1CB8466D8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED890248);
  v8 = sub_1CB8466C0();
  v9 = sub_1CB846C84();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1CB771000, v8, v9, "PluginEventsScheduler received a subscribe request", v10, 2u);
    MEMORY[0x1D179FE84](v10, -1, -1);
  }

  v11 = v3[7];
  v12 = v3[8];
  __swift_project_boxed_opaque_existential_1(v3 + 4, v11);
  v34[3] = (uint64_t)&type metadata for SiriPrivateLearningFeatureFlag;
  v34[4] = sub_1CB7869D8();
  LOBYTE(v34[0]) = 0;
  v13 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v12 + 8))(v34, v11, v12);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  if ((v13 & 1) != 0
    || (v14 = v3[17],
        v15 = v3[18],
        __swift_project_boxed_opaque_existential_1(v3 + 14, v14),
        ((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15) & 1) != 0))
  {
    if (*((_BYTE *)v3 + 16))
    {
      if (*((_BYTE *)v3 + 16) == 1)
      {
        swift_bridgeObjectRelease();
LABEL_17:
        v20 = sub_1CB8466C0();
        v21 = sub_1CB846C84();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v22 = 0;
          _os_log_impl(&dword_1CB771000, v20, v21, "Skipping PluginEventsScheduler subscription - the scheduler is already subscribed", v22, 2u);
          MEMORY[0x1D179FE84](v22, -1, -1);
        }

        return;
      }
      v33 = v6;
    }
    else
    {
      v33 = v6;
    }
    v19 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      goto LABEL_17;
    swift_retain_n();
    v23 = sub_1CB8466C0();
    v24 = sub_1CB846C84();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v34[0] = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = 0x80000001CB852320;
      v28 = 0xD000000000000015;
      if (*((_BYTE *)v3 + 16) == 1)
        v28 = 0xD000000000000012;
      else
        v27 = 0x80000001CB852340;
      if (*((_BYTE *)v3 + 16))
        v29 = v28;
      else
        v29 = 0x646570706F7473;
      if (*((_BYTE *)v3 + 16))
        v30 = v27;
      else
        v30 = 0xE700000000000000;
      sub_1CB775A54(v29, v30, v34);
      sub_1CB846E58();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v23, v24, "PluginEventsScheduler subscription started; previous state was %s",
        v25,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v26, -1, -1);
      MEMORY[0x1D179FE84](v25, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    *((_BYTE *)v3 + 16) = 1;
    __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor), *(_QWORD *)((char *)v3+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor+ 24));
    v31 = swift_allocObject();
    swift_weakInit();
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = v31;
    v32[3] = a1;
    v32[4] = a2;
    v32[5] = v33;
    swift_retain();
    sub_1CB8243E8((uint64_t)a1);
    sub_1CB7D4094((uint64_t)sub_1CB8243DC, (uint64_t)v32);
    swift_release();
    swift_release();
  }
  else
  {
    v16 = sub_1CB8466C0();
    v17 = sub_1CB846C84();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1CB771000, v16, v17, "Skipping PluginEventsScheduler subscription - the feature flags are disabled", v18, 2u);
      MEMORY[0x1D179FE84](v18, -1, -1);
    }

    LOBYTE(v34[0]) = 2;
    sub_1CB823480((char *)v34);
    if (a1)
      a1(MEMORY[0x1E0DEE9D8]);
  }
}

void sub_1CB822D78(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  char v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  void *v36;
  void (*v37)(_QWORD);
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD);
  uint64_t v48;
  _QWORD *v49;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v48 = Strong;
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = 0;
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v13 = a1 + 8 * v9;
        v14 = *(_QWORD *)(v13 + 32);
        if (v14)
        {
          sub_1CB7D82E8(*(id *)(v13 + 32));
          v49 = v10;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1CB776548(0, v10[2] + 1, 1);
            v10 = v49;
          }
          v12 = v10[2];
          v11 = v10[3];
          if (v12 >= v11 >> 1)
          {
            sub_1CB776548(v11 > 1, v12 + 1, 1);
            v10 = v49;
          }
          v10[2] = v12 + 1;
          v10[v12 + 4] = v14;
        }
        ++v9;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      v15 = v10[2];
      if (v15)
      {
LABEL_12:
        if (qword_1ED88E518 != -1)
          goto LABEL_48;
        while (1)
        {
          v16 = sub_1CB8466D8();
          __swift_project_value_buffer(v16, (uint64_t)qword_1ED890248);
          swift_retain_n();
          v17 = sub_1CB8466C0();
          v18 = sub_1CB846C84();
          if (os_log_type_enabled(v17, v18))
          {
            v19 = (uint8_t *)swift_slowAlloc();
            v47 = a3;
            v20 = swift_slowAlloc();
            v49 = (_QWORD *)v20;
            *(_DWORD *)v19 = 136315138;
            v21 = swift_retain();
            v22 = MEMORY[0x1D179EE28](v21, &type metadata for BiomeSiriEventScenario);
            v24 = v23;
            swift_release();
            sub_1CB775A54(v22, v24, (uint64_t *)&v49);
            sub_1CB846E58();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1CB771000, v17, v18, "PluginEventsScheduler is preparing to run plugins, discovered Biome scenarios=%s", v19, 0xCu);
            swift_arrayDestroy();
            v25 = v20;
            a3 = v47;
            MEMORY[0x1D179FE84](v25, -1, -1);
            MEMORY[0x1D179FE84](v19, -1, -1);

          }
          else
          {

            swift_release_n();
          }
          if (!v10[2])
          {
            __break(1u);
            return;
          }
          v30 = v10[4];
          if ((unint64_t)(v30 - 1) < 2)
          {
            v31 = 1;
          }
          else if ((unint64_t)(v30 - 3) >= 2)
          {
            if (!v30)
            {
              swift_retain();
              v32 = sub_1CB8466C0();
              v33 = sub_1CB846C90();
              if (os_log_type_enabled(v32, v33))
              {
                v34 = (uint8_t *)swift_slowAlloc();
                v35 = swift_slowAlloc();
                v49 = (_QWORD *)v35;
                *(_DWORD *)v34 = 136315138;
                v36 = (void *)v10[4];
                sub_1CB7D82E8(v36);
                v37 = a3;
                v38 = sub_1CB7D39F8();
                v40 = v39;
                sub_1CB7D82F8(v36);
                v41 = v38;
                a3 = v37;
                sub_1CB775A54(v41, v40, (uint64_t *)&v49);
                sub_1CB846E58();
                swift_release_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1CB771000, v32, v33, "PluginEventsScheduler cannot convert a Biome scenario (%s) to a plugin run scenario", v34, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1D179FE84](v35, -1, -1);
                MEMORY[0x1D179FE84](v34, -1, -1);

                if (v37)
                  goto LABEL_23;
              }
              else
              {

                swift_release_n();
                if (a3)
                  goto LABEL_23;
              }
              goto LABEL_43;
            }
            v31 = 0;
          }
          else
          {
            v31 = 2;
          }
          v42 = 0;
          while (1)
          {
            v43 = v42 + 1;
            if (__OFADD__(v42, 1))
              break;
            if ((unint64_t)(v10[v42 + 4] - 1) < 4)
            {
              v44 = 10.0;
              goto LABEL_42;
            }
            ++v42;
            if (v43 == v15)
            {
              v44 = 0.0;
LABEL_42:
              swift_release();
              v45 = v48 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginPath;
              v46 = swift_allocObject();
              *(_QWORD *)(v46 + 16) = a3;
              *(_QWORD *)(v46 + 24) = a4;
              LOBYTE(v49) = v31;
              sub_1CB8243E8((uint64_t)a3);
              sub_1CB7BF1C8(&v49, v45, (uint64_t)sub_1CB824424, v46, v44);
              swift_release();
              goto LABEL_43;
            }
          }
          __break(1u);
LABEL_48:
          swift_once();
        }
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v15)
        goto LABEL_12;
    }
    swift_release();
    if (a3)
LABEL_23:
      a3(MEMORY[0x1E0DEE9D8]);
LABEL_43:
    swift_release();
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v26 = sub_1CB8466D8();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED890248);
    v27 = sub_1CB8466C0();
    v28 = sub_1CB846C90();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_1CB771000, v27, v28, "PluginEventsScheduler was deallocated while subscribed", v29, 2u);
      MEMORY[0x1D179FE84](v29, -1, -1);
    }

    if (a3)
      a3(MEMORY[0x1E0DEE9D8]);
  }
}

void sub_1CB823390(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_1ED88E518 != -1)
    swift_once();
  v4 = sub_1CB8466D8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED890248);
  v5 = sub_1CB8466C0();
  v6 = sub_1CB846C84();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1CB771000, v5, v6, "PluginEventsScheduler finished running plugins", v7, 2u);
    MEMORY[0x1D179FE84](v7, -1, -1);
  }

  if (a2)
    a2(a1);
}

uint64_t sub_1CB823480(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  char v14;
  uint64_t result;
  uint64_t v16;

  v2 = v1;
  v3 = *a1;
  if (qword_1ED88E518 != -1)
    swift_once();
  v4 = sub_1CB8466D8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED890248);
  swift_retain_n();
  v5 = sub_1CB8466C0();
  v6 = sub_1CB846C84();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v16 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = 0x80000001CB852320;
    v10 = 0xD000000000000015;
    if (*(_BYTE *)(v2 + 16) == 1)
      v10 = 0xD000000000000012;
    else
      v9 = 0x80000001CB852340;
    if (*(_BYTE *)(v2 + 16))
      v11 = v10;
    else
      v11 = 0x646570706F7473;
    if (*(_BYTE *)(v2 + 16))
      v12 = v9;
    else
      v12 = 0xE700000000000000;
    sub_1CB775A54(v11, v12, &v16);
    sub_1CB846E58();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v5, v6, "PluginEventsScheduler unsubscribing from Biome streams; previous state was %s",
      v7,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v8, -1, -1);
    MEMORY[0x1D179FE84](v7, -1, -1);

    v13 = *(unsigned __int8 *)(v2 + 16);
    if (!*(_BYTE *)(v2 + 16))
      goto LABEL_17;
  }
  else
  {

    swift_release_n();
    v13 = *(unsigned __int8 *)(v2 + 16);
    if (!*(_BYTE *)(v2 + 16))
      goto LABEL_17;
  }
  if (v13 == 1)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor), *(_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor + 24));
    result = sub_1CB7D4F24();
    goto LABEL_19;
  }
LABEL_17:
  v14 = sub_1CB8471A0();
  result = swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
    goto LABEL_18;
LABEL_19:
  *(_BYTE *)(v2 + 16) = v3;
  return result;
}

uint64_t sub_1CB823714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1CB846744();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB84678C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + 24);
  aBlock[4] = sub_1CB8240E0;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_12;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1CB846768();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB7C6674((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8);
  sub_1CB846EC4();
  MEMORY[0x1D179F0D4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1CB8238E0(_QWORD *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED890248);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CB771000, v3, v4, "PluginEventsScheduler received an unsubscribe request", v5, 2u);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }

  v7 = a1[12];
  v6 = a1[13];
  __swift_project_boxed_opaque_existential_1(a1 + 9, v7);
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 + 16) + 24))(v7);
  v9 = a1[17];
  v8 = a1[18];
  __swift_project_boxed_opaque_existential_1(a1 + 14, v9);
  (*(void (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 24))(v9);
  v11 = 0;
  return sub_1CB823480(&v11);
}

_QWORD *PluginEventsScheduler.deinit()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];
  __int128 v32[2];

  v1 = v0;
  v2 = sub_1CB846744();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1CB84678C();
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor;
  v10 = v0 + 9;
  v12 = v0[12];
  v11 = v0[13];
  v28 = v10;
  __swift_project_boxed_opaque_existential_1(v10, v12);
  (*(void (**)(uint64_t))(*(_QWORD *)(v11 + 16) + 24))(v12);
  v14 = v1[17];
  v13 = v1[18];
  v27 = v1 + 14;
  __swift_project_boxed_opaque_existential_1(v1 + 14, v14);
  (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 24))(v14);
  v29 = v9;
  sub_1CB79CBA8(v9, (uint64_t)v32);
  v15 = swift_allocObject();
  sub_1CB7780BC(v32, v15 + 16);
  aBlock[4] = sub_1CB824124;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_3_0;
  v16 = _Block_copy(aBlock);
  sub_1CB846768();
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB7C6674((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8);
  sub_1CB846EC4();
  MEMORY[0x1D179F0D4](0, v8, v5, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v25);
  swift_release();
  if (qword_1ED88E518 != -1)
    swift_once();
  v17 = sub_1CB8466D8();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED890248);
  v18 = sub_1CB8466C0();
  v19 = sub_1CB846C84();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1CB771000, v18, v19, "PluginEventsScheduler will be deallocated", v20, 2u);
    MEMORY[0x1D179FE84](v20, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v1 + 4));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  v21 = (uint64_t)v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginPath;
  v22 = sub_1CB845F58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v29);
  return v1;
}

uint64_t PluginEventsScheduler.__deallocating_deinit()
{
  PluginEventsScheduler.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB823D9C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v1 = v0;
  if (objc_msgSend((id)objc_opt_self(), sel_sharedMGWrapper))
  {
    sub_1CB846EB8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1CB7D0054((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    sub_1CB777FA8(0, (unint64_t *)&unk_1ED88E058);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = objc_msgSend(v8, sel_isDeviceIPad);

      *(_BYTE *)(v0 + 16) = v2;
      return v1;
    }
  }
  else
  {
    sub_1CB778110((uint64_t)v10);
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v3 = sub_1CB8466D8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED890248);
  v4 = sub_1CB8466C0();
  v5 = sub_1CB846C90();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1CB771000, v4, v5, "DeviceConfiguration cannot initialise MobileGestalt instance", v6, 2u);
    MEMORY[0x1D179FE84](v6, -1, -1);
  }

  *(_BYTE *)(v1 + 16) = 0;
  return v1;
}

id sub_1CB823F3C()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  void *v3;
  unsigned __int8 v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;

  v1 = v0;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(result, sel_isSharedIPad);

    if (qword_1ED88E518 != -1)
      swift_once();
    v5 = sub_1CB8466D8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED890248);
    swift_retain();
    v6 = sub_1CB8466C0();
    v7 = sub_1CB846C84();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      *(_DWORD *)v8 = 67109376;
      sub_1CB846E58();
      swift_release();
      *(_WORD *)(v8 + 8) = 1024;
      sub_1CB846E58();
      _os_log_impl(&dword_1CB771000, v6, v7, "DeviceConfiguration fetched device parameters: isIPad=%{BOOL}d, isSharedIPad=%{BOOL}d", (uint8_t *)v8, 0xEu);
      MEMORY[0x1D179FE84](v8, -1, -1);

    }
    else
    {

      swift_release();
    }
    return (id)(*(_BYTE *)(v1 + 16) & v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CB8240D0()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB8240E0()
{
  _QWORD *v0;

  return sub_1CB8238E0(v0);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_1CB824100()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CB824124()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_1CB7D4F24();
}

unint64_t sub_1CB824154()
{
  unint64_t result;

  result = qword_1EF9A1D28;
  if (!qword_1EF9A1D28)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PluginEventsSchedulerStatus, &type metadata for PluginEventsSchedulerStatus);
    atomic_store(result, (unint64_t *)&qword_1EF9A1D28);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PluginEventsSchedulerStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CB8241E4 + 4 * byte_1CB84FFB1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CB824218 + 4 * byte_1CB84FFAC[v4]))();
}

uint64_t sub_1CB824218(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB824220(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB824228);
  return result;
}

uint64_t sub_1CB824234(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB82423CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CB824240(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB824248(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PluginEventsSchedulerStatus()
{
  return &type metadata for PluginEventsSchedulerStatus;
}

uint64_t sub_1CB824264()
{
  return type metadata accessor for PluginEventsScheduler();
}

uint64_t type metadata accessor for PluginEventsScheduler()
{
  uint64_t result;

  result = qword_1ED888390;
  if (!qword_1ED888390)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CB8242A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB845F58();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PluginEventsScheduler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PluginEventsScheduler.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of PluginEventsScheduler.subscribeToEvents()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PluginEventsScheduler.subscribeToEvents(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PluginEventsScheduler.unsubscribe()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t type metadata accessor for DefaultDeviceConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_1CB8243B0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CB8243D4()
{
  return objectdestroy_8Tm();
}

void sub_1CB8243DC(uint64_t a1)
{
  uint64_t v1;

  sub_1CB822D78(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1CB8243E8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1CB8243F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

void sub_1CB824424(uint64_t a1)
{
  uint64_t v1;

  sub_1CB823390(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1CB82442C()
{
  return objectdestroy_8Tm();
}

void sub_1CB824434()
{
  uint64_t v0;

  sub_1CB821F84(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1CB824440()
{
  return objectdestroy_8Tm();
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_1CB824488(uint64_t a1)
{
  uint64_t v1;

  sub_1CB822344(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1CB824494(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TrialNamespaceUpdate(a2, a1);
  return a2;
}

uint64_t sub_1CB8244D0(uint64_t a1)
{
  destroy for TrialNamespaceUpdate(a1);
  return a1;
}

id sub_1CB824514()
{
  void *v0;

  return objc_msgSend(v0, sel_reference);
}

uint64_t sub_1CB824540()
{
  return _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
}

NSObject __swiftcall Int.toNSObject()()
{
  uint64_t v0;

  return (NSObject)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v0);
}

id sub_1CB82457C()
{
  _QWORD *v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *v0);
}

NSObject __swiftcall Double.toNSObject()()
{
  double v0;

  return (NSObject)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v0);
}

id sub_1CB8245E4()
{
  double *v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *v0);
}

NSObject __swiftcall Bool.toNSObject()()
{
  char v0;

  return (NSObject)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v0 & 1);
}

id sub_1CB82464C()
{
  unsigned __int8 *v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *v0);
}

uint64_t dispatch thunk of CoreAnalyticsLoggable.toNSObject()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1CB824688(uint64_t (**a1)()@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v3 = sub_1CB8248D0();
  if (!v1)
  {
    v4 = (void *)v3;
    sub_1CB845FB8();
    v5 = objc_msgSend(v4, sel_publisherFromStartTime_);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED88ADE0);
    v8 = (void *)nullsub_1(v5);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1D38);
    v7 = MEMORY[0x1D179FD88](&unk_1CB84F2D8, v6);
    sub_1CB8142DC(v6, v7, a1);

  }
}

uint64_t static DefaultBiomeReader.shared.getter()
{
  type metadata accessor for DefaultBiomeReader();
  return swift_initStaticObject();
}

unint64_t *sub_1CB824774(uint64_t a1, uint64_t a2)
{
  return sub_1CB824F9C(a1, a2);
}

uint64_t sub_1CB824788(void *a1, uint64_t a2)
{
  id v4;

  swift_beginAccess();
  v4 = a1;
  MEMORY[0x1D179EDF8]();
  if (*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1CB846AA4();
  sub_1CB846AD4();
  sub_1CB846A74();
  return swift_endAccess();
}

uint64_t DefaultBiomeReader.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DefaultBiomeReader.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1CB824838(uint64_t (**a1)()@<X8>)
{
  sub_1CB824688(a1);
}

id sub_1CB82484C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v4;
  void *v7;
  uint64_t ObjCClassFromMetadata;
  id v9;

  v7 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  if (a4)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  else
    ObjCClassFromMetadata = 0;
  v9 = objc_msgSend(v4, sel_initWithPrivateStreamIdentifier_storeConfig_eventDataClass_, v7, a3, ObjCClassFromMetadata);

  return v9;
}

uint64_t sub_1CB8248D0()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *ObjCClassFromMetadata;
  id v12;
  id v13;
  id v14;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;

  sub_1CB8251E8();
  if (!swift_dynamicCastMetatype())
  {
    sub_1CB846F30();
    swift_bridgeObjectRelease();
    v17 = 0xD000000000000019;
    v18 = 0x80000001CB857D70;
    swift_getMetatypeMetadata();
    sub_1CB8468DC();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
LABEL_9:
    sub_1CB82513C();
    swift_allocError();
    *v16 = v17;
    v16[1] = v18;
    return swift_willThrow();
  }
  v0 = objc_msgSend((id)BiomeLibrary(), sel_Media);
  swift_unknownObjectRelease();
  v1 = objc_msgSend(v0, sel_NowPlaying);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_configuration);

  if (!v2)
  {
    sub_1CB846F30();
    swift_bridgeObjectRelease();
    v17 = 0xD00000000000002CLL;
    v18 = 0x80000001CB857D90;
    swift_getMetatypeMetadata();
    sub_1CB8468DC();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v3 = v2;
  v4 = objc_msgSend(v3, sel_storeConfig);
  if (objc_msgSend((id)objc_opt_self(), sel_isTestPathOverridden))
  {
    v5 = objc_msgSend(v4, sel_pruningPolicy);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_setFilterByAgeOnRead_, 0);

    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF9A1D60);
  v7 = objc_msgSend(v3, sel_streamIdentifier);
  v8 = sub_1CB8468A0();
  v10 = v9;

  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v12 = v4;
  v13 = objc_allocWithZone(ObjCClassFromMetadata);
  v14 = sub_1CB82484C(v8, v10, v4, 0);

  return (uint64_t)v14;
}

uint64_t type metadata accessor for DefaultBiomeReader()
{
  return objc_opt_self();
}

unint64_t sub_1CB824BDC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  void (*v10)(char *, uint64_t);
  id v11;
  double v12;
  double v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  unint64_t aBlock;
  unint64_t v31;
  void (*v32)(uint64_t, void *);
  void *v33;
  uint64_t (*v34)(void *);
  uint64_t v35;
  void *v36;

  v29 = a3;
  v4 = sub_1CB846018();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB845E08();
  sub_1CB845FB8();
  v9 = v8;
  v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v9);
  sub_1CB845DFC();
  sub_1CB845FB8();
  v13 = v12;
  v10(v7, v4);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v13);
  v15 = objc_msgSend(a1, sel_publisherWithStartTime_endTime_maxEvents_reversed_, v11, v14, 0, 0);

  objc_opt_self();
  v16 = swift_dynamicCastObjCClass();
  if (v16)
  {
    v17 = (void *)v16;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = MEMORY[0x1E0DEE9D8];
    v34 = (uint64_t (*)(void *))nullsub_1;
    v35 = 0;
    v19 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v31 = 1107296256;
    v32 = sub_1CB783140;
    v33 = &block_descriptor_13;
    v20 = _Block_copy(&aBlock);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v29;
    *(_QWORD *)(v21 + 24) = v18;
    v34 = sub_1CB8251E0;
    v35 = v21;
    aBlock = v19;
    v31 = 1107296256;
    v32 = sub_1CB783140;
    v33 = &block_descriptor_6_0;
    v22 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v23 = objc_msgSend(v17, sel_sinkWithCompletion_receiveInput_, v20, v22);
    swift_unknownObjectRelease();
    _Block_release(v22);
    _Block_release(v20);

    swift_beginAccess();
    v24 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    aBlock = 0;
    v31 = 0xE000000000000000;
    sub_1CB846F30();
    swift_bridgeObjectRelease();
    aBlock = 0xD00000000000002BLL;
    v31 = 0x80000001CB857D40;
    v36 = a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1D48);
    sub_1CB8468DC();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    v25 = aBlock;
    v24 = v31;
    sub_1CB82513C();
    swift_allocError();
    *v26 = v25;
    v26[1] = v24;
    swift_willThrow();
  }
  return v24;
}

unint64_t sub_1CB824F2C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  void *v6;
  id v7;

  v6 = (void *)sub_1CB8248D0();
  if (!v3)
  {
    v7 = v6;
    a3 = sub_1CB824BDC(v7, a1, a3);

  }
  return a3;
}

unint64_t *sub_1CB824F9C(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v15;

  v4 = MEMORY[0x1E0DEE9D8];
  v15 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v8 = 0;
    while (1)
    {
      v9 = sub_1CB824F2C(a1, *(_QWORD *)(a2 + 8 * v8 + 32), *(_QWORD *)(a2 + 8 * v8 + 32));
      if (v3)
        break;
      ++v8;
      v2 = &v15;
      sub_1CB7F15D0(v9);
      if (v5 == v8)
      {
        swift_bridgeObjectRelease();
        v4 = v15;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1D40);
    v2 = (unint64_t *)swift_allocObject();
    v2[6] = v4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = 0;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1CB847044();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v12 = sub_1CB7D22AC();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v11;
    v2[2] = v10;
    v2[3] = v12;
    v2[4] = v13;
    v2[5] = v12;
  }
  return v2;
}

uint64_t method lookup function for DefaultBiomeReader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultBiomeReader.readEventsAsync<A>(from:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of DefaultBiomeReader.readEvents(_:types:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

unint64_t sub_1CB82513C()
{
  unint64_t result;

  result = qword_1EF9A1D50;
  if (!qword_1EF9A1D50)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for BiomeEventReaderError, &type metadata for BiomeEventReaderError);
    atomic_store(result, (unint64_t *)&qword_1EF9A1D50);
  }
  return result;
}

uint64_t sub_1CB825180()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_1CB8251BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB8251E0(void *a1)
{
  uint64_t v1;

  return sub_1CB824788(a1, *(_QWORD *)(v1 + 24));
}

unint64_t sub_1CB8251E8()
{
  unint64_t result;

  result = qword_1EF9A1D58;
  if (!qword_1EF9A1D58)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF9A1D58);
  }
  return result;
}

uint64_t sub_1CB82522C(int a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v7 = (uint64_t *)(v3 + 16);
  swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1CB779AD4(a1), (v10 & 1) != 0))
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D698);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = MEMORY[0x1E0DEE9E0];
  }
  sub_1CB8256C4(a2, a3);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *v7;
  *v7 = 0x8000000000000000;
  sub_1CB82EA40(v11, a1, isUniquelyReferenced_nonNull_native);
  *v7 = v14;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1CB82534C(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;

  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 16) + 16))
    return MEMORY[0x1E0DEE9D8];
  sub_1CB779AD4(a1);
  v5 = MEMORY[0x1E0DEE9D8];
  if ((v6 & 1) != 0)
  {
    swift_beginAccess();
    swift_retain();
    v7 = sub_1CB825AA4(a2);
    swift_endAccess();
    swift_release();
    if (v7)
      return v7;
  }
  return v5;
}

uint64_t sub_1CB82540C(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v5 + 16))
    return MEMORY[0x1E0DEE9D8];
  v6 = sub_1CB779AD4(a1);
  if ((v7 & 1) == 0)
    return MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(_QWORD *)(v9 + 16);
  swift_retain();
  if (!v10)
  {
LABEL_7:
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v11 = sub_1CB779AD8(a2);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t type metadata accessor for ComponentEventTable()
{
  return objc_opt_self();
}

uint64_t sub_1CB82550C(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_1CB779AD4(a1), (v12 & 1) != 0))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1CB78F4F8(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
  v15 = *(_QWORD *)(v13 + 16);
  v14 = *(_QWORD *)(v13 + 24);
  if (v15 >= v14 >> 1)
    v13 = sub_1CB78F4F8(v14 > 1, v15 + 1, 1, v13);
  *(_QWORD *)(v13 + 16) = v15 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, v8, v5);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *v9;
  *v9 = 0x8000000000000000;
  sub_1CB82E5F8(v13, a1, isUniquelyReferenced_nonNull_native);
  *v9 = v19;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1CB8256C4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CB779AD8(a1);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v19 = v13;
  v14 = a2;
  MEMORY[0x1D179EDF8]();
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1CB846AA4();
  sub_1CB846AD4();
  sub_1CB846A74();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v15 = v19;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *v9;
  *v9 = 0x8000000000000000;
  sub_1CB82EB74(v15, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  *v9 = v18;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_endAccess();
}

uint64_t sub_1CB825874(uint64_t a1)
{
  return sub_1CB8259C0(a1, (void (*)(void))sub_1CB77E4C4);
}

uint64_t sub_1CB825880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1CB779AD8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1CB77EAD0();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1CB846084();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
    v14 = *(_QWORD *)(v13 - 8);
    sub_1CB780DC4(v12 + *(_QWORD *)(v14 + 72) * v6, a2);
    sub_1CB825DE0(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_1CB8259B4(uint64_t a1)
{
  return sub_1CB8259C0(a1, (void (*)(void))sub_1CB77ED4C);
}

uint64_t sub_1CB8259C0(uint64_t a1, void (*a2)(void))
{
  uint64_t *v2;
  uint64_t *v4;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1CB779AD8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v4;
  v14 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a2();
    v9 = v14;
  }
  v10 = *(_QWORD *)(v9 + 48);
  v11 = sub_1CB846084();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1CB826068(v6, v9);
  *v4 = v9;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1CB825AA4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1CB779AD8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1CB77EF80();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1CB846084();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1CB826068(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1CB825B7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1CB779AD8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v20 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1CB77FD2C();
    v7 = v20;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1CB846084();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = (unsigned __int8 *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = v10[3];
  sub_1CB8262CC(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  v15 = 256;
  if (!v12)
    v15 = 0;
  v16 = v15 | v11;
  v17 = 0x10000;
  if (!v13)
    v17 = 0;
  v18 = 0x1000000;
  if (!v14)
    v18 = 0;
  return v16 | v17 | v18;
}

uint64_t sub_1CB825CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1CB779AD8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v16 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1CB78021C();
      v9 = v16;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1CB846084();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(_QWORD *)(v12 + 72) * v6;
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v10 + v13, v11);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 32))(a2, *(_QWORD *)(v9 + 56) + v13, v11);
    sub_1CB826530(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v15 = sub_1CB846084();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
}

unint64_t sub_1CB825DE0(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v4 = sub_1CB846084();
  v33 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v34 = a2 + 64;
    result = sub_1CB846ED0();
    v11 = v34;
    if ((*(_QWORD *)(v34 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v33 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      do
      {
        v14 = v13 * v9;
        v32(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_1CB8267A8();
        v15 = sub_1CB846810();
        result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 < v12 || a1 < (uint64_t)v16)
            goto LABEL_6;
        }
        else if (v16 < v12 && a1 < (uint64_t)v16)
        {
          goto LABEL_6;
        }
        if (v13 * a1 < v14 || *(_QWORD *)(a2 + 48) + v13 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v14 + v13))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v13 * a1 != v14)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v19 = *(_QWORD *)(a2 + 56);
        v20 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for LogicalClockTable.DeviceFixedContextTime() - 8) + 72);
        v21 = v20 * a1;
        result = v19 + v20 * a1;
        v22 = v20 * v9;
        v23 = v19 + v20 * v9 + v20;
        if (v21 < v22 || result >= v23)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v21 == v22)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
        v11 = v34;
      }
      while (((*(_QWORD *)(v34 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v25 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CB826068(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v4 = sub_1CB846084();
  v31 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v32 = a2 + 64;
    result = sub_1CB846ED0();
    v11 = v32;
    if ((*(_QWORD *)(v32 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v31 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_1CB8267A8();
        v15 = sub_1CB846810();
        result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 >= v12 && a1 >= (uint64_t)v16)
          {
LABEL_17:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v13 * a1;
            if (v13 * a1 < v14 || result >= v19 + v14 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v14)
            {
              result = swift_arrayInitWithTakeBackToFront();
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = (_QWORD *)(v20 + 8 * a1);
            v22 = (_QWORD *)(v20 + 8 * v9);
            v11 = v32;
            if (a1 != v9 || (a1 = v9, v21 >= v22 + 1))
            {
              *v21 = *v22;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v16 >= v12 || a1 >= (uint64_t)v16)
        {
          goto LABEL_17;
        }
        v11 = v32;
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v11 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v23 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CB8262CC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v4 = sub_1CB846084();
  v31 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v32 = a2 + 64;
    result = sub_1CB846ED0();
    v11 = v32;
    if ((*(_QWORD *)(v32 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v31 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_1CB8267A8();
        v15 = sub_1CB846810();
        result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 >= v12 && a1 >= (uint64_t)v16)
          {
LABEL_17:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v13 * a1;
            if (v13 * a1 < v14 || result >= v19 + v14 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v14)
            {
              result = swift_arrayInitWithTakeBackToFront();
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = (_OWORD *)(v20 + 16 * a1);
            v22 = (_OWORD *)(v20 + 16 * v9);
            v11 = v32;
            if (a1 != v9 || (a1 = v9, v21 >= v22 + 1))
            {
              *v21 = *v22;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v16 >= v12 || a1 >= (uint64_t)v16)
        {
          goto LABEL_17;
        }
        v11 = v32;
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v11 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v23 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CB826530(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1CB846084();
  v29 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v30 = a2 + 64;
    result = sub_1CB846ED0();
    v11 = v30;
    if ((*(_QWORD *)(v30 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v29 + 72);
      v28 = *(void (**)(char *, unint64_t, uint64_t))(v29 + 16);
      do
      {
        v14 = v13 * v9;
        v28(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_1CB8267A8();
        v15 = sub_1CB846810();
        result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 < v12 || a1 < (uint64_t)v16)
            goto LABEL_6;
        }
        else if (v16 < v12 && a1 < (uint64_t)v16)
        {
          goto LABEL_6;
        }
        v19 = v13 * a1;
        if (v13 * a1 < v14 || *(_QWORD *)(a2 + 48) + v13 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v14 + v13))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v19 != v14)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v20 = *(_QWORD *)(a2 + 56);
        result = v20 + v19;
        if (v19 < v14 || result >= v20 + v14 + v13)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v19 == v14)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
        v11 = v30;
      }
      while (((*(_QWORD *)(v30 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v21 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v22 = *v21;
    v23 = (-1 << a1) - 1;
  }
  else
  {
    v21 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CB8267A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED88D568;
  if (!qword_1ED88D568)
  {
    v1 = sub_1CB846084();
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED88D568);
  }
  return result;
}

void *static PLUSSuggestionSurfacedState.allCases.getter()
{
  return &unk_1E868ABA0;
}

void sub_1CB826808(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E868ABC8;
}

uint64_t PLUSSuggestionNoveltyState.hash(into:)()
{
  return sub_1CB8472F0();
}

BOOL static PLUSSuggestionNoveltyState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void *static PLUSSuggestionNoveltyState.allCases.getter()
{
  return &unk_1E868ABF0;
}

void sub_1CB826864(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E868AC18;
}

uint64_t PLUSSuggestionRedundancyState.hash(into:)()
{
  return sub_1CB8472F0();
}

BOOL static PLUSSuggestionRedundancyState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *static PLUSSuggestionRedundancyState.allCases.getter()
{
  return &unk_1E868AC40;
}

uint64_t PLUSSuggestionRedundancyState.hashValue.getter()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

void sub_1CB826904(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E868AC68;
}

void PLUSSuggestionMetadata.suggestionSurfaced.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void PLUSSuggestionMetadata.suggestionNoveltyState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

uint64_t PLUSSuggestionMetadata.__allocating_init(suggestionSurfaced:suggestionNoveltyState:)(_BYTE *a1, char *a2)
{
  uint64_t result;
  char v5;

  result = swift_allocObject();
  v5 = *a2;
  *(_BYTE *)(result + 16) = *a1;
  *(_BYTE *)(result + 17) = v5;
  return result;
}

uint64_t PLUSSuggestionMetadata.init(suggestionSurfaced:suggestionNoveltyState:)(_BYTE *a1, char *a2)
{
  uint64_t v2;
  char v3;

  v3 = *a2;
  *(_BYTE *)(v2 + 16) = *a1;
  *(_BYTE *)(v2 + 17) = v3;
  return v2;
}

uint64_t PLUSSuggestionMetadata.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PLUSSuggestionMetadata.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1CB8269A8()
{
  unint64_t result;

  result = qword_1EF9A1D70;
  if (!qword_1EF9A1D70)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PLUSSuggestionSurfacedState, &type metadata for PLUSSuggestionSurfacedState);
    atomic_store(result, (unint64_t *)&qword_1EF9A1D70);
  }
  return result;
}

uint64_t sub_1CB8269EC()
{
  return sub_1CB7F46FC(&qword_1EF9A1D78, &qword_1EF9A1D80);
}

unint64_t sub_1CB826A14()
{
  unint64_t result;

  result = qword_1EF9A1D88;
  if (!qword_1EF9A1D88)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PLUSSuggestionNoveltyState, &type metadata for PLUSSuggestionNoveltyState);
    atomic_store(result, (unint64_t *)&qword_1EF9A1D88);
  }
  return result;
}

uint64_t sub_1CB826A58()
{
  return sub_1CB7F46FC(&qword_1EF9A1D90, &qword_1EF9A1D98);
}

unint64_t sub_1CB826A80()
{
  unint64_t result;

  result = qword_1EF9A1DA0;
  if (!qword_1EF9A1DA0)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PLUSSuggestionRedundancyState, &type metadata for PLUSSuggestionRedundancyState);
    atomic_store(result, (unint64_t *)&qword_1EF9A1DA0);
  }
  return result;
}

uint64_t sub_1CB826AC4()
{
  return sub_1CB7F46FC(&qword_1EF9A1DA8, &qword_1EF9A1DB0);
}

ValueMetadata *type metadata accessor for PLUSSuggestionSurfacedState()
{
  return &type metadata for PLUSSuggestionSurfacedState;
}

uint64_t _s28SiriPrivateLearningAnalytics27PLUSSuggestionSurfacedStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CB826B4C + 4 * byte_1CB8504A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CB826B80 + 4 * asc_1CB8504A0[v4]))();
}

uint64_t sub_1CB826B80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB826B88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB826B90);
  return result;
}

uint64_t sub_1CB826B9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB826BA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CB826BA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB826BB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PLUSSuggestionNoveltyState()
{
  return &type metadata for PLUSSuggestionNoveltyState;
}

uint64_t storeEnumTagSinglePayload for PLUSSuggestionRedundancyState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB826C18 + 4 * byte_1CB8504AF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB826C4C + 4 * byte_1CB8504AA[v4]))();
}

uint64_t sub_1CB826C4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB826C54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB826C5CLL);
  return result;
}

uint64_t sub_1CB826C68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB826C70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB826C74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB826C7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PLUSSuggestionRedundancyState()
{
  return &type metadata for PLUSSuggestionRedundancyState;
}

uint64_t type metadata accessor for PLUSSuggestionMetadata()
{
  return objc_opt_self();
}

uint64_t method lookup function for PLUSSuggestionMetadata()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PLUSSuggestionMetadata.__allocating_init(suggestionSurfaced:suggestionNoveltyState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

_QWORD *Queue.__allocating_init()()
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1CB826D08(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t sub_1CB826D18(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t sub_1CB826D28()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1CB826D30(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

_QWORD *Queue.init()()
{
  _QWORD *v0;
  _QWORD *result;

  result = v0;
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  return result;
}

BOOL sub_1CB826D48()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16) == 0;
}

uint64_t sub_1CB826D58@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  v4 = v1[2];
  if (v4)
  {
    v5 = *(_QWORD *)(v3 + 80);
    v6 = *(_QWORD *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v4 + *(_QWORD *)(*(_QWORD *)v4 + 88), v5);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v8 = a1;
    v9 = 0;
    v10 = v5;
  }
  else
  {
    v10 = *(_QWORD *)(v3 + 80);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v8 = a1;
    v9 = 1;
  }
  return v7(v8, v9, 1, v10);
}

uint64_t sub_1CB826DDC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Queue.QueueNode(0, v4, v8, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  result = sub_1CB826EF4((uint64_t)v7, 0);
  v11 = v2[4];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    v14 = result;
    v2[4] = v13;
    v15 = v2[3];
    if (v15)
    {
      *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 96)) = result;
      swift_retain();
      swift_release();
    }
    v2[3] = v14;
    swift_retain();
    swift_release();
    if (!v2[2])
    {
      v2[2] = v2[3];
      swift_retain();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1CB826EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  v5 = *(_QWORD *)v4;
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 96)) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 88), a1);
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 96)) = a2;
  swift_release();
  return v4;
}

uint64_t sub_1CB826F74@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[2];
  if (v4)
  {
    v5 = *(_QWORD *)(v3 + 80);
    v6 = *(_QWORD *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v4 + *(_QWORD *)(*(_QWORD *)v4 + 88), v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 56))(a1, 1, 1, *(_QWORD *)(v3 + 80));
  }
  return sub_1CB7E1FA0(v1);
}

uint64_t sub_1CB827000(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CB846AB0();
  sub_1CB846B04();
  sub_1CB846A98();
  v6 = v1[2];
  swift_retain();
  if (v6)
  {
    v7 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v7(v5, v6 + *(_QWORD *)(*(_QWORD *)v6 + 88), v2);
      sub_1CB846AEC();
      v8 = *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 96));
      swift_retain();
      swift_release();
      v6 = v8;
    }
    while (v8);
  }
  return v11;
}

uint64_t sub_1CB827108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = *(_QWORD *)(v0 + v1);
  *(_QWORD *)(v0 + v1) = 0;
  if (v2)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v3 = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
      swift_retain();
      swift_release();
      v2 = v3;
    }
    while (v3);
  }
  swift_release();
  return v0;
}

uint64_t sub_1CB827190()
{
  sub_1CB827108();
  return swift_deallocClassInstance();
}

uint64_t Queue.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t Queue.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t Queue.pop(if:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t (*v15)(char *);

  v15 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = sub_1CB846E40();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB826D58((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v4);
    if ((v15(v12) & 1) != 0)
    {
      sub_1CB826F74(a2);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v4);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v4);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, 1, 1, v4);
}

uint64_t Queue.pop(while:)(uint64_t (*a1)(char *))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *);
  uint64_t v21;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = sub_1CB846E40();
  v18 = *(_QWORD *)(v4 - 8);
  v19 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  v9 = MEMORY[0x1E0C80A78](v5);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - v12;
  v14 = sub_1CB846AB0();
  v20 = a1;
  v21 = v14;
  Queue.pop(if:)(a1, (uint64_t)v7);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v7, 1, v3) != 1)
  {
    v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    do
    {
      v16(v13, v7, v3);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v3);
      sub_1CB846B04();
      sub_1CB846AEC();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v3);
      Queue.pop(if:)(v20, (uint64_t)v7);
    }
    while (v15(v7, 1, v3) != 1);
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
  return v21;
}

uint64_t Queue.popAll()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v15 = sub_1CB846E40();
  v2 = *(_QWORD *)(v15 - 8);
  v3 = MEMORY[0x1E0C80A78](v15);
  v5 = (char *)&v15 - v4;
  v6 = *(_QWORD *)(v1 - 8);
  v7 = MEMORY[0x1E0C80A78](v3);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  v16 = sub_1CB846AB0();
  sub_1CB826F74((uint64_t)v5);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v12(v5, 1, v1) != 1)
  {
    v13 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    do
    {
      v13(v11, v5, v1);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v1);
      sub_1CB846B04();
      sub_1CB846AEC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v1);
      sub_1CB826F74((uint64_t)v5);
    }
    while (v12(v5, 1, v1) != 1);
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v15);
  return v16;
}

uint64_t type metadata accessor for Queue.QueueNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Queue.QueueNode);
}

uint64_t sub_1CB8276A0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Queue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Queue);
}

uint64_t method lookup function for Queue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Queue.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of Queue.isEmpty.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of Queue.head.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of Queue.push(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of Queue.pop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of Queue.peekAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t sub_1CB82774C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t FeatureManager.init(trialStatus:featureFlags:currentLocales:osResolver:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;

  v27 = a3;
  v7 = *(_QWORD *)(a1 + 24);
  v26 = *(_QWORD *)(a1 + 32);
  v8 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  v12 = *(_QWORD *)(a2 + 24);
  v25 = *(_QWORD *)(a2 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a2, v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  v18 = *(_QWORD *)(a4 + 24);
  v17 = *(_QWORD *)(a4 + 32);
  v19 = __swift_mutable_project_boxed_opaque_existential_1(a4, v18);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v21);
  v23 = sub_1CB828318((uint64_t)v10, (uint64_t)v15, v27, (uint64_t)v21, v28, v7, v12, v18, v26, v25, v17);
  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v23;
}

uint64_t FeatureManager.deinit()
{
  uint64_t v0;

  sub_1CB78674C(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  return v0;
}

uint64_t sub_1CB8279F8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *__return_ptr, uint64_t, uint64_t);
  char v11;
  char v13;
  _QWORD v14[4];

  v3 = v1[16];
  v2 = v1[17];
  v5 = v1[18];
  v4 = v1[19];
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v14[0] = v3;
  v14[1] = v2;
  v14[2] = v5;
  v14[3] = v4;
  v8 = v1[29];
  v9 = v1[30];
  __swift_project_boxed_opaque_existential_1(v1 + 26, v8);
  v10 = *(void (**)(char *__return_ptr, uint64_t, uint64_t))(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(&v13, v8, v9);
  v11 = (*(uint64_t (**)(_QWORD *, _QWORD *, char *, uint64_t, uint64_t))(v7 + 8))(v1 + 2, v14, &v13, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1CB827ACC(_QWORD *a1, __int128 *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v10 = *a2;
  v3 = *((_QWORD *)a2 + 2);
  v4 = *((_QWORD *)a2 + 3);
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v12 = v10;
  v13 = v3;
  v14 = v4;
  v7 = v2[29];
  v8 = v2[30];
  __swift_project_boxed_opaque_existential_1(v2 + 26, v7);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v8 + 8))(&v11, v7, v8);
  return (*(uint64_t (**)(_QWORD *, __int128 *, char *, uint64_t, uint64_t))(v6 + 8))(v2 + 2, &v12, &v11, v5, v6) & 1;
}

uint64_t sub_1CB827B7C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[17];
  v3 = v1[18];
  v4 = v1[19];
  *a1 = v1[16];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB827BAC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[2];

  v1 = *a1;
  v2 = a1[2];
  v6[0] = a1[1];
  v6[1] = v2;
  swift_bridgeObjectRetain();
  FeatureResolver.getTrialFactorValue(_:scope:)(v1, v6);
  v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CB827C10()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED890248);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CB771000, v3, v4, "FeatureResolver: refreshing trial resolver", v5, 2u);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }

  v6 = v1 + 7;
  v8 = v1[10];
  v7 = v1[11];
  __swift_project_boxed_opaque_existential_1(v6, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v8, v7);
}

uint64_t FeatureManager.__allocating_init(trialStatus:featureFlags:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD v13[5];
  _OWORD v14[6];
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[6];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[40];
  _BYTE v21[40];

  v5 = sub_1CB846108();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB79CBA8(a1, (uint64_t)v21);
  sub_1CB79CBA8(a2, (uint64_t)v20);
  v8 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_1CB8460B4();

  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  CurrentLocales.init(deviceLocale:siriPreferences:)((uint64_t)v7, v9, (uint64_t)v17);
  v14[0] = v17[0];
  v14[1] = v17[1];
  v14[2] = v17[2];
  v14[3] = v17[3];
  v14[4] = v17[4];
  v14[5] = v17[5];
  v15 = v18;
  v16 = v19;
  v13[3] = &type metadata for OSTypeResolver;
  v13[4] = &protocol witness table for OSTypeResolver;
  v10 = (*(uint64_t (**)(_BYTE *, _BYTE *, _OWORD *, _QWORD *))(v2 + 104))(v21, v20, v14, v13);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v10;
}

uint64_t FeatureManager.__allocating_init(trialStatus:featureFlags:currentLocales:osResolver:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;

  v29 = a3;
  v7 = swift_allocObject();
  v8 = *(_QWORD *)(a1 + 24);
  v27 = *(_QWORD *)(a1 + 32);
  v28 = v7;
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  v13 = *(_QWORD *)(a2 + 24);
  v26 = *(_QWORD *)(a2 + 32);
  v14 = __swift_mutable_project_boxed_opaque_existential_1(a2, v13);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  v19 = *(_QWORD *)(a4 + 24);
  v18 = *(_QWORD *)(a4 + 32);
  v20 = __swift_mutable_project_boxed_opaque_existential_1(a4, v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  v24 = sub_1CB828318((uint64_t)v11, (uint64_t)v16, v29, (uint64_t)v22, v28, v8, v13, v19, v27, v26, v18);
  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v24;
}

uint64_t FeatureManager.__deallocating_deinit()
{
  uint64_t v0;

  sub_1CB78674C(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  return swift_deallocClassInstance();
}

uint64_t sub_1CB8280B0(_QWORD *a1)
{
  return sub_1CB8279F8(a1) & 1;
}

uint64_t sub_1CB8280D4(_QWORD *a1, __int128 *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v3 = (_QWORD *)*v2;
  v11 = *a2;
  v4 = *((_QWORD *)a2 + 2);
  v5 = *((_QWORD *)a2 + 3);
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v13 = v11;
  v14 = v4;
  v15 = v5;
  v8 = v3[29];
  v9 = v3[30];
  __swift_project_boxed_opaque_existential_1(v3 + 26, v8);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v9 + 8))(&v12, v8, v9);
  return (*(uint64_t (**)(_QWORD *, __int128 *, char *, uint64_t, uint64_t))(v7 + 8))(v3 + 2, &v13, &v12, v6, v7) & 1;
}

uint64_t sub_1CB828188@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB8281BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[2];

  v1 = *a1;
  v2 = a1[2];
  v6[0] = a1[1];
  v6[1] = v2;
  swift_bridgeObjectRetain();
  FeatureResolver.getTrialFactorValue(_:scope:)(v1, v6);
  v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CB828224()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (_QWORD *)*v0;
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED890248);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CB771000, v3, v4, "FeatureResolver: refreshing trial resolver", v5, 2u);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }

  v6 = v1[10];
  v7 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
}

uint64_t sub_1CB828318(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a6;
  v33 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_1, a1, a6);
  *(_QWORD *)(a5 + 40) = a7;
  *(_QWORD *)(a5 + 48) = a10;
  v20 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a5 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(v20, a2, a7);
  *(_QWORD *)(a5 + 232) = a8;
  *(_QWORD *)(a5 + 240) = a11;
  v21 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a5 + 208));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(v21, a4, a8);
  v29 = a3[1];
  v30 = *a3;
  v27 = a3[3];
  v28 = a3[2];
  v25 = a3[5];
  v26 = a3[4];
  v23 = *((_QWORD *)a3 + 12);
  v22 = *((_QWORD *)a3 + 13);
  sub_1CB7780BC(&v31, a5 + 56);
  *(_OWORD *)(a5 + 96) = v30;
  *(_OWORD *)(a5 + 112) = v29;
  *(_OWORD *)(a5 + 128) = v28;
  *(_OWORD *)(a5 + 144) = v27;
  *(_OWORD *)(a5 + 160) = v26;
  *(_OWORD *)(a5 + 176) = v25;
  *(_QWORD *)(a5 + 192) = v23;
  *(_QWORD *)(a5 + 200) = v22;
  return a5;
}

uint64_t dispatch thunk of FeatureManaging.isActive(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FeatureManaging.isActive(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FeatureManaging.currentSiriLocale()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeatureManaging.getFeatureParameter(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeatureManaging.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t type metadata accessor for FeatureManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for FeatureManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeatureManager.__allocating_init(trialStatus:featureFlags:currentLocales:osResolver:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FeatureManager.isActive(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of FeatureManager.isActive(_:in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of FeatureManager.currentSiriLocale()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of FeatureManager.getFeatureParameter(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of FeatureManager.refresh()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t FindDeviceAndFriendsIntentFeatureExtractor.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = &unk_1E868AC90;
  return result;
}

uint64_t FindDeviceAndFriendsIntentFeatureExtractor.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = &unk_1E868AC90;
  return result;
}

uint64_t sub_1CB828550(id *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t DeviceAndFriends;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  const char *v27;
  unint64_t v28;
  char v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  id v62;

  v1 = *a1;
  v2 = objc_msgSend(v1, sel_intent);
  v3 = sub_1CB7CF004();
  if (!v4)
    goto LABEL_15;
  v5 = v3;
  v6 = v4;
  v7 = objc_msgSend(v2, sel_parametersByName);
  if (!v7)
  {
    swift_bridgeObjectRelease();
LABEL_15:

    return MEMORY[0x1E0DEE9D8];
  }
  v8 = v7;
  v9 = sub_1CB8467EC();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1CB848A60;
  DeviceAndFriends = type metadata accessor for FindDeviceAndFriendsFeature.EventType(0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v5;
  *(_QWORD *)(v12 + 24) = v6;
  *(_QWORD *)(v10 + 56) = DeviceAndFriends;
  *(_QWORD *)(v10 + 64) = sub_1CB78E6AC(&qword_1EF9A1E60, type metadata accessor for FindDeviceAndFriendsFeature.EventType);
  *(_QWORD *)(v10 + 32) = v12;
  swift_bridgeObjectRetain();
  LOBYTE(DeviceAndFriends) = objc_msgSend(v1, sel__donatedBySiri);
  v13 = type metadata accessor for FindDeviceAndFriendsFeature.DonatedBySiri(0);
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = DeviceAndFriends;
  *(_QWORD *)(v10 + 96) = v13;
  *(_QWORD *)(v10 + 104) = sub_1CB78E6AC(&qword_1EF9A1E68, type metadata accessor for FindDeviceAndFriendsFeature.DonatedBySiri);
  *(_QWORD *)(v10 + 72) = v14;
  if (v5 == 0xD000000000000012 && v6 == 0x80000001CB852360 || (sub_1CB8471A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v9 + 16))
    {
      v15 = sub_1CB779A70(0x656369766564, 0xE600000000000000);
      if ((v16 & 1) != 0)
      {
        sub_1CB778000(*(_QWORD *)(v9 + 56) + 32 * v15, (uint64_t)&v59);
        sub_1CB777FA8(0, &qword_1EF9A1E88);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v17 = v62;
          v18 = objc_msgSend(v62, sel_displayString);
          v19 = sub_1CB8468A0();
          v21 = v20;

          v22 = type metadata accessor for FindDeviceAndFriendsFeature.Name(0);
          v23 = swift_allocObject();
          *(_QWORD *)(v23 + 16) = v19;
          *(_QWORD *)(v23 + 24) = v21;
          v25 = *(_QWORD *)(v10 + 16);
          v24 = *(_QWORD *)(v10 + 24);
          if (v25 >= v24 >> 1)
            v10 = (uint64_t)sub_1CB78F738((_QWORD *)(v24 > 1), v25 + 1, 1, (_QWORD *)v10);
          *((_QWORD *)&v60 + 1) = v22;
          v61 = sub_1CB78E6AC(&qword_1EF9A1E78, type metadata accessor for FindDeviceAndFriendsFeature.Name);
          *(_QWORD *)&v59 = v23;
          *(_QWORD *)(v10 + 16) = v25 + 1;
          sub_1CB7780BC(&v59, v10 + 40 * v25 + 32);

        }
      }
    }
    if (!*(_QWORD *)(v9 + 16))
      goto LABEL_30;
    v26 = 0xD000000000000011;
    v27 = "locateDeviceClass";
LABEL_28:
    v39 = sub_1CB779A70(v26, (unint64_t)(v27 - 32) | 0x8000000000000000);
    if ((v40 & 1) != 0)
    {
      sub_1CB778000(*(_QWORD *)(v9 + 56) + 32 * v39, (uint64_t)&v59);
      goto LABEL_31;
    }
LABEL_30:
    v59 = 0u;
    v60 = 0u;
LABEL_31:
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v60 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v41 = v62;
        v42 = type metadata accessor for FindDeviceAndFriendsFeature.DeviceClass(0);
        v43 = swift_allocObject();
        *(_QWORD *)(v43 + 16) = v41;
        v45 = *(_QWORD *)(v10 + 16);
        v44 = *(_QWORD *)(v10 + 24);
        if (v45 >= v44 >> 1)
          v10 = (uint64_t)sub_1CB78F738((_QWORD *)(v44 > 1), v45 + 1, 1, (_QWORD *)v10);
        *((_QWORD *)&v60 + 1) = v42;
        v61 = sub_1CB78E6AC(&qword_1EF9A1E80, type metadata accessor for FindDeviceAndFriendsFeature.DeviceClass);
        *(_QWORD *)&v59 = v43;
        *(_QWORD *)(v10 + 16) = v45 + 1;
        sub_1CB7780BC(&v59, v10 + 40 * v45 + 32);
      }
      goto LABEL_36;
    }
    goto LABEL_49;
  }
  if (v5 == 0x6E756F5379616C50 && v6 == 0xEF746E65746E4964 || (sub_1CB8471A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v9 + 16))
    {
      v28 = sub_1CB779A70(0x656369766564, 0xE600000000000000);
      if ((v29 & 1) != 0)
      {
        sub_1CB778000(*(_QWORD *)(v9 + 56) + 32 * v28, (uint64_t)&v59);
        sub_1CB777FA8(0, &qword_1EF9A1E88);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v30 = v62;
          v31 = objc_msgSend(v62, sel_displayString);
          v32 = sub_1CB8468A0();
          v34 = v33;

          v35 = type metadata accessor for FindDeviceAndFriendsFeature.Name(0);
          v36 = swift_allocObject();
          *(_QWORD *)(v36 + 16) = v32;
          *(_QWORD *)(v36 + 24) = v34;
          v38 = *(_QWORD *)(v10 + 16);
          v37 = *(_QWORD *)(v10 + 24);
          if (v38 >= v37 >> 1)
            v10 = (uint64_t)sub_1CB78F738((_QWORD *)(v37 > 1), v38 + 1, 1, (_QWORD *)v10);
          *((_QWORD *)&v60 + 1) = v35;
          v61 = sub_1CB78E6AC(&qword_1EF9A1E78, type metadata accessor for FindDeviceAndFriendsFeature.Name);
          *(_QWORD *)&v59 = v36;
          *(_QWORD *)(v10 + 16) = v38 + 1;
          sub_1CB7780BC(&v59, v10 + 40 * v38 + 32);

        }
      }
    }
    if (!*(_QWORD *)(v9 + 16))
      goto LABEL_30;
    v26 = 0xD000000000000014;
    v27 = "playSoundDeviceClass";
    goto LABEL_28;
  }
  if (v5 == 0x6E49657461636F4CLL && v6 == 0xEC000000746E6574)
  {
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  v46 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  if ((v46 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_41:
  if (!*(_QWORD *)(v9 + 16) || (v47 = sub_1CB779A70(0x6E6F73726570, 0xE600000000000000), (v48 & 1) == 0))
  {
    v59 = 0u;
    v60 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  sub_1CB778000(*(_QWORD *)(v9 + 56) + 32 * v47, (uint64_t)&v59);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v60 + 1))
  {
LABEL_49:

    sub_1CB778110((uint64_t)&v59);
    return v10;
  }
  sub_1CB777FA8(0, &qword_1EF9A1E70);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_36:

    return v10;
  }
  v49 = v62;
  v50 = objc_msgSend(v62, sel_displayName);
  v51 = sub_1CB8468A0();
  v53 = v52;

  v54 = type metadata accessor for FindDeviceAndFriendsFeature.Name(0);
  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = v51;
  *(_QWORD *)(v55 + 24) = v53;
  v57 = *(_QWORD *)(v10 + 16);
  v56 = *(_QWORD *)(v10 + 24);
  if (v57 >= v56 >> 1)
    v10 = (uint64_t)sub_1CB78F738((_QWORD *)(v56 > 1), v57 + 1, 1, (_QWORD *)v10);
  *((_QWORD *)&v60 + 1) = v54;
  v61 = sub_1CB78E6AC(&qword_1EF9A1E78, type metadata accessor for FindDeviceAndFriendsFeature.Name);
  *(_QWORD *)&v59 = v55;
  *(_QWORD *)(v10 + 16) = v57 + 1;
  sub_1CB7780BC(&v59, v10 + 40 * v57 + 32);

  return v10;
}

uint64_t type metadata accessor for FindDeviceAndFriendsFeature.EventType(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A1F68);
}

uint64_t FindDeviceAndFriendsFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  return result;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t FindDeviceAndFriendsIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FindDeviceAndFriendsIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FindDeviceAndFriendsFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A2050);
}

uint64_t sub_1CB828E04(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for FindDeviceAndFriendsFeature.EventType);
}

uint64_t sub_1CB828E10(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for FindDeviceAndFriendsFeature.EventType);
}

uint64_t FindDeviceAndFriendsFeature.DonatedBySiri.init(value:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t FindDeviceAndFriendsFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1;
  v3 = swift_allocObject();
  v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t FindDeviceAndFriendsFeature.DonatedBySiri.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FindDeviceAndFriendsFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB828F14(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for FindDeviceAndFriendsFeature.DonatedBySiri(0);
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB828F48(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for FindDeviceAndFriendsFeature.DonatedBySiri(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t FindDeviceAndFriendsFeature.Name.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t FindDeviceAndFriendsFeature.Name.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB828FEC(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for FindDeviceAndFriendsFeature.Name);
}

uint64_t sub_1CB828FF8(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for FindDeviceAndFriendsFeature.Name);
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.init(value:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.__allocating_init(value:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  v5 = v4;
  if ((a2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1E90);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_QWORD *)(v4 + 16) = a1;
  }
  return v5;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.init(value:)(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1E90);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_QWORD *)(v2 + 16) = a1;
  }
  return v2;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB8290E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for FindDeviceAndFriendsFeature.DeviceClass(0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB82911C(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = *((_BYTE *)a1 + 8);
  type metadata accessor for FindDeviceAndFriendsFeature.DeviceClass(0);
  v3 = swift_allocObject();
  v4 = v3;
  if ((v2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1E90);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v1;
  }
  return v4;
}

uint64_t type metadata accessor for FindDeviceAndFriendsFeature.Name(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A2138);
}

uint64_t type metadata accessor for FindDeviceAndFriendsFeature.DeviceClass(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A2220);
}

uint64_t type metadata accessor for FindDeviceAndFriendsIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for FindDeviceAndFriendsIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FindDeviceAndFriendsIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FindDeviceAndFriendsIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

ValueMetadata *type metadata accessor for FindDeviceAndFriendsFeature()
{
  return &type metadata for FindDeviceAndFriendsFeature;
}

unint64_t UsageLogger.disabledKey.getter()
{
  return 0xD000000000000014;
}

Swift::Void __swiftcall UsageLogger.register(disabled:)(Swift::Bool disabled)
{
  id v2;
  uint64_t inited;
  void *v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E278);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CB848A50;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x80000001CB854160;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 48) = disabled;
  sub_1CB787708(inited);
  v4 = (void *)sub_1CB8467E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_registerDefaults_, v4);

}

Swift::Bool __swiftcall UsageLogger.isDisabled()()
{
  id v0;
  void *v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

unint64_t sub_1CB8293A4()
{
  return 0xD000000000000014;
}

void sub_1CB8293C0(Swift::Bool a1)
{
  UsageLogger.register(disabled:)(a1);
}

id sub_1CB8293D4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

uint64_t dispatch thunk of UsageLogging.disabledKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UsageLogging.register(disabled:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of UsageLogging.isDisabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for UsageLogger()
{
  return &type metadata for UsageLogger;
}

uint64_t sub_1CB829484(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = sub_1CB846084();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BEB0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 96)) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v7 + *(_QWORD *)(*(_QWORD *)v7 + 88), v6, v3);
  *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 96)) = 0;
  result = swift_release();
  v9 = v1[4];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v1[4] = v11;
    v12 = v1[3];
    if (v12)
    {
      *(_QWORD *)(v12 + *(_QWORD *)(*(_QWORD *)v12 + 96)) = v7;
      swift_retain();
      swift_release();
    }
    v1[3] = v7;
    swift_retain();
    swift_release();
    if (!v1[2])
    {
      v1[2] = v1[3];
      swift_retain();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1CB8295D0(uint64_t a1)
{
  return sub_1CB8295E8(a1, &qword_1ED88BEB8);
}

uint64_t sub_1CB8295DC(uint64_t a1)
{
  return sub_1CB8295E8(a1, &qword_1EF9A22E0);
}

uint64_t sub_1CB8295E8(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t result;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = 0;
  v5 = v2[4];
  v6 = v5 + 1;
  v7 = __OFADD__(v5, 1);
  result = swift_retain();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    v2[4] = v6;
    v9 = v2[3];
    if (v9)
    {
      *(_QWORD *)(v9 + 24) = v4;
      swift_retain();
      swift_release();
    }
    v2[3] = v4;
    swift_retain();
    swift_release();
    if (!v2[2])
    {
      v2[2] = v2[3];
      swift_retain();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1CB8296A8(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  void (*v14)(char *, uint64_t);
  char v15;
  uint64_t result;
  uint64_t v17;

  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v17 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v17 - v10, a1, v5);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0x8000000000000000;
  sub_1CB82ECD8((uint64_t)v11, isUniquelyReferenced_nonNull_native, a2);
  *(_QWORD *)(v2 + 40) = v17;
  swift_bridgeObjectRelease();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v11, v5);
  swift_endAccess();
  v12(v9, a1, v5);
  swift_beginAccess();
  v15 = sub_1CB829BE8((uint64_t)v11, v9);
  v14(v11, v5);
  result = swift_endAccess();
  if ((v15 & 1) != 0)
    return sub_1CB829484(a1);
  return result;
}

BOOL sub_1CB829820(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  double v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16);
  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, v10 + *(_QWORD *)(*(_QWORD *)v10 + 88), v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_7:
    sub_1CB778FF4((uint64_t)v5);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  swift_beginAccess();
  v11 = *(_QWORD *)(v1 + 40);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1CB779AD8((uint64_t)v9);
    if ((v13 & 1) != 0)
    {
      v14 = *(double *)(*(_QWORD *)(v11 + 56) + 8 * v12);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return a1 - v14 > 60.0;
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 0;
}

uint64_t sub_1CB8299E8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequestStreamEndpointer()
{
  return objc_opt_self();
}

uint64_t sub_1CB829A3C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1CB8472E4();
  swift_bridgeObjectRetain();
  sub_1CB846924();
  v8 = sub_1CB847314();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1CB8471A0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1CB8471A0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1CB82AB2C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1CB829BE8(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v30 = a2;
  v11 = sub_1CB846810();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v26 = v2;
    v27 = a1;
    v28 = ~v12;
    v16 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v29 = v16;
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v16 + 16);
    while (1)
    {
      v19 = v14;
      v20 = v18;
      v18(v9, *(_QWORD *)(v14 + 48) + v17 * v13, v6);
      sub_1CB77EA90((unint64_t *)&qword_1ED88BBD0, MEMORY[0x1E0CB09D0]);
      v21 = sub_1CB846864();
      v22 = *(void (**)(char *, uint64_t))(v29 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v13 = (v13 + 1) & v28;
      v14 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v26;
        a1 = v27;
        v7 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v30, v6);
    v20(v27, *(_QWORD *)(*v26 + 48) + v17 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = v30;
    v18(v9, v30, v6);
    v31 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CB82ACC4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1CB829E3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v10 = *v5;
  sub_1CB8472E4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  v25 = a4;
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  v11 = sub_1CB847314();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v24 = ~v12;
    while (1)
    {
      v14 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 32 * v13);
      v26 = *v14;
      v28 = v14[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1CB846954();
      swift_bridgeObjectRetain();
      sub_1CB846954();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1CB846954();
      swift_bridgeObjectRetain();
      sub_1CB846954();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v26 == a2 && v28 == a3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_10;
      }
      v15 = sub_1CB8471A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        break;
      v13 = (v13 + 1) & v24;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    v18 = (uint64_t *)(*(_QWORD *)(*v22 + 48) + 32 * v13);
    v19 = v18[1];
    v20 = v18[2];
    v21 = v18[3];
    *a1 = *v18;
    a1[1] = v19;
    a1[2] = v20;
    a1[3] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v22;
    *v22 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CB82AEB8(a2, a3, v25, a5, v13, isUniquelyReferenced_nonNull_native);
    *v22 = v27;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    result = 1;
    a1[2] = v25;
    a1[3] = a5;
  }
  return result;
}

uint64_t sub_1CB82A18C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E068);
  v3 = sub_1CB846F00();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1CB8472E4();
      sub_1CB846924();
      result = sub_1CB847314();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1CB82A468()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_1CB846084();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF78);
  v6 = sub_1CB846F00();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v36 + 72);
      v23 = *(_QWORD *)(v5 + 48) + v22 * v17;
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v23, v2);
      sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
      result = sub_1CB846810();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v22, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_1CB82A7CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF9A22E8);
  v3 = sub_1CB846F00();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31)
          goto LABEL_33;
        v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_33;
          v16 = v32[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_33;
            v16 = v32[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v30 = 1 << *(_BYTE *)(v2 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v31)
                    goto LABEL_33;
                  v16 = v32[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
      v20 = *v18;
      v19 = v18[1];
      v21 = v18[2];
      v22 = v18[3];
      sub_1CB8472E4();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1CB846954();
      swift_bridgeObjectRetain();
      sub_1CB846954();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_1CB846924();
      swift_bridgeObjectRelease();
      result = sub_1CB847314();
      v23 = -1 << *(_BYTE *)(v4 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
      *v12 = v20;
      v12[1] = v19;
      v12[2] = v21;
      v12[3] = v22;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1CB82AB2C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1CB82A18C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1CB82B1AC();
      goto LABEL_22;
    }
    sub_1CB82B740();
  }
  v11 = *v4;
  sub_1CB8472E4();
  sub_1CB846924();
  result = sub_1CB847314();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1CB8471A0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1CB847284();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1CB8471A0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1CB82ACC4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1CB82A468();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CB82B35C();
      goto LABEL_12;
    }
    sub_1CB82B9EC();
  }
  v12 = *v3;
  sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
  v13 = sub_1CB846810();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1CB77EA90((unint64_t *)&qword_1ED88BBD0, MEMORY[0x1E0CB09D0]);
      v18 = sub_1CB846864();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CB847284();
  __break(1u);
  return result;
}

uint64_t sub_1CB82AEB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v25 = result;
  v10 = *(_QWORD *)(*v6 + 16);
  v11 = *(_QWORD *)(*v6 + 24);
  if (v11 > v10 && (a6 & 1) != 0)
    goto LABEL_14;
  if ((a6 & 1) != 0)
  {
    sub_1CB82A7CC();
  }
  else
  {
    if (v11 > v10)
    {
      result = (uint64_t)sub_1CB82B580();
      goto LABEL_14;
    }
    sub_1CB82BD0C();
  }
  v12 = *v6;
  sub_1CB8472E4();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  result = sub_1CB847314();
  v13 = -1 << *(_BYTE *)(v12 + 32);
  a5 = result & ~v13;
  v24 = v12;
  v14 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
  {
    v15 = ~v13;
    do
    {
      v16 = (uint64_t *)(*(_QWORD *)(v24 + 48) + 32 * a5);
      v27 = *v16;
      v28 = v16[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1CB846954();
      swift_bridgeObjectRetain();
      sub_1CB846954();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1CB846954();
      swift_bridgeObjectRetain();
      sub_1CB846954();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v27 == v25 && v28 == a2)
        goto LABEL_17;
      v17 = sub_1CB8471A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
        goto LABEL_18;
      a5 = (a5 + 1) & v15;
    }
    while (((*(_QWORD *)(v14 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
  }
LABEL_14:
  v18 = *v23;
  *(_QWORD *)(*v23 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v19 = (uint64_t *)(*(_QWORD *)(v18 + 48) + 32 * a5);
  *v19 = v25;
  v19[1] = a2;
  v19[2] = a3;
  v19[3] = a4;
  v20 = *(_QWORD *)(v18 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (!v21)
  {
    *(_QWORD *)(v18 + 16) = v22;
    return result;
  }
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_18:
  result = sub_1CB847284();
  __break(1u);
  return result;
}

void *sub_1CB82B1AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E068);
  v2 = *v0;
  v3 = sub_1CB846EF4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CB82B35C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_1CB846084();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF78);
  v6 = *v0;
  v7 = sub_1CB846EF4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1CB82B580()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF9A22E8);
  v2 = *v0;
  v3 = sub_1CB846EF4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CB82B740()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E068);
  v3 = sub_1CB846F00();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1CB8472E4();
    swift_bridgeObjectRetain();
    sub_1CB846924();
    result = sub_1CB847314();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CB82B9EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_1CB846084();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF78);
  v7 = sub_1CB846F00();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    result = sub_1CB846810();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CB82BD0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF9A22E8);
  v3 = sub_1CB846F00();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_33;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_33;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    sub_1CB8472E4();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1CB846924();
    swift_bridgeObjectRelease();
    result = sub_1CB847314();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
    *v12 = v20;
    v12[1] = v19;
    v12[2] = v21;
    v12[3] = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void getEventTimestampFromContext(from:context:)(void *a1, void *a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  char v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;

  v4 = objc_msgSend(a1, sel_eventMetadata);
  v5 = v4;
  if (v4)
  {
    v6 = objc_msgSend(v4, sel_eventGeneratedTimestampRefId);

    if (v6)
    {
      v7 = sub_1CB8468A0();
      v5 = v8;

    }
    else
    {
      v7 = 0;
      v5 = 0;
    }
  }
  else
  {
    v7 = 0;
  }
  v9 = objc_msgSend(a2, sel_eventMetadata);
  v10 = v9;
  if (v9)
  {
    v11 = objc_msgSend(v9, sel_eventGeneratedTimestampRefId);

    if (v11)
    {
      v12 = sub_1CB8468A0();
      v10 = v13;

      if (v5)
        goto LABEL_9;
LABEL_14:
      if (!v10)
        goto LABEL_21;
LABEL_18:
      swift_bridgeObjectRelease();
      return;
    }
    v12 = 0;
    v10 = 0;
    if (!v5)
      goto LABEL_14;
  }
  else
  {
    v12 = 0;
    if (!v5)
      goto LABEL_14;
  }
LABEL_9:
  if (!v10)
    goto LABEL_18;
  if (v7 == v12 && v5 == v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return;
  }
LABEL_21:
  v15 = objc_msgSend(a1, sel_eventMetadata);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_eventGeneratedRelativeToBootTimeTimestampNs);

    v18 = objc_msgSend(a2, sel_eventMetadata);
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, sel_eventGeneratedRelativeToBootTimeTimestampNs);

      v21 = objc_msgSend(a2, sel_deviceDynamicContext);
      if (v21)
      {
        v22 = v21;
        objc_msgSend(v21, sel_timeIntervalSince1970);

        if (__OFSUB__(v17, v20))
          __break(1u);
      }
    }
  }
}

void getEventTimestamp(from:)(void *a1)
{
  if (objc_msgSend(a1, sel_hasDeviceDynamicContext))
    getEventTimestampFromContext(from:context:)(a1, a1);
}

uint64_t dispatch thunk of InferredGroundTruthStore.write<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.read<A>(type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.read<A>(type:limit:offset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.delete(uuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.deleteOldestRecordsIfNeeded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

void *sub_1CB82C308()
{
  void *result;

  result = (void *)sub_1CB82C324();
  off_1ED88D6A0 = result;
  return result;
}

uint64_t sub_1CB82C324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _UNKNOWN **v9;
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;
  __int128 v13;
  uint64_t v14;
  _UNKNOWN **v15;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;
  __int128 v19[2];
  __int128 v20[3];
  _BYTE v21[40];
  uint64_t v22[6];

  if (qword_1ED88DAE0 != -1)
    swift_once();
  v0 = qword_1ED88DAD8;
  if (qword_1ED88D9E8 != -1)
    swift_once();
  v1 = qword_1ED890218;
  if (qword_1ED88DCB8 != -1)
    swift_once();
  v2 = qword_1ED88DCA8;
  sub_1CB82C538(v22);
  if (qword_1ED88DB38 != -1)
    swift_once();
  sub_1CB79CBA8((uint64_t)&qword_1ED88DB08, (uint64_t)v21);
  v3 = type metadata accessor for DefaultBiomeReader();
  inited = swift_initStaticObject();
  sub_1CB82C6B8((uint64_t)v22, (uint64_t)v20);
  sub_1CB79CBA8((uint64_t)v21, (uint64_t)v19);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  v17 = type metadata accessor for FlatFileSignalReader();
  v18 = &protocol witness table for FlatFileSignalReader;
  *(_QWORD *)&v16 = v0;
  v14 = type metadata accessor for BiomeSignalReader();
  v15 = &off_1E8690F88;
  *(_QWORD *)&v13 = v1;
  v11 = type metadata accessor for FlatFileStreamBookmarkStore();
  v12 = &protocol witness table for FlatFileStreamBookmarkStore;
  *(_QWORD *)&v10 = v2;
  v8 = v3;
  v9 = &protocol witness table for DefaultBiomeReader;
  *(_QWORD *)&v7 = inited;
  type metadata accessor for PLLoggingReader();
  v5 = swift_allocObject();
  sub_1CB7780BC(&v16, v5 + 16);
  sub_1CB7780BC(&v13, v5 + 56);
  sub_1CB7780BC(&v10, v5 + 96);
  sub_1CB82C7F0(v20, (_OWORD *)(v5 + 136));
  sub_1CB7780BC(v19, v5 + 184);
  sub_1CB7780BC(&v7, v5 + 224);
  return v5;
}

id sub_1CB82C538@<X0>(uint64_t *a1@<X8>)
{
  char v2;
  uint64_t v3;
  id result;
  uint64_t v5;
  _UNKNOWN **v6;
  _UNKNOWN **v7;
  char v8[24];
  ValueMetadata *v9;
  unint64_t v10;

  v9 = &type metadata for SiriPrivateLearningFeatureFlag;
  v10 = sub_1CB7869D8();
  v8[0] = 12;
  v2 = _s28SiriPrivateLearningAnalytics23EnvironmentFeatureFlagsV02isF7EnabledySb0fG00fG3Key_pF_0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  if ((v2 & 1) != 0)
  {
    v3 = type metadata accessor for AIMLISSignalReader();
    result = (id)swift_allocObject();
    v5 = (uint64_t)result;
    v6 = &off_1E868D138;
    v7 = &off_1E868D110;
  }
  else
  {
    v3 = type metadata accessor for AsyncBiomeSignalReader();
    v5 = swift_allocObject();
    result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D02760]), sel_init);
    *(_QWORD *)(v5 + 16) = result;
    v6 = &off_1E868B1A8;
    v7 = &off_1E868B1C0;
  }
  a1[3] = v3;
  a1[4] = (uint64_t)v7;
  a1[5] = (uint64_t)v6;
  *a1 = v5;
  return result;
}

uint64_t static PLLoggingReader.shared.getter()
{
  if (qword_1ED88D6A8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t PLLoggingReader.signalReader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CB79CBA8(v1 + 16, a1);
}

uint64_t PLLoggingReader.streamSignalReader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CB79CBA8(v1 + 56, a1);
}

uint64_t PLLoggingReader.streamBookmarkStore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CB79CBA8(v1 + 96, a1);
}

uint64_t PLLoggingReader.asyncSignalReader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CB82C6B8(v1 + 136, a1);
}

uint64_t sub_1CB82C6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t PLLoggingReader.interactionReader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CB79CBA8(v1 + 184, a1);
}

uint64_t PLLoggingReader.biomeReader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CB79CBA8(v1 + 224, a1);
}

uint64_t PLLoggingReader.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0(v0 + 184);
  __swift_destroy_boxed_opaque_existential_0(v0 + 224);
  return v0;
}

uint64_t PLLoggingReader.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0(v0 + 184);
  __swift_destroy_boxed_opaque_existential_0(v0 + 224);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PLLoggingReader()
{
  return objc_opt_self();
}

uint64_t method lookup function for PLLoggingReader()
{
  return swift_lookUpClassMethod();
}

_OWORD *sub_1CB82C7F0(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1CB82C80C()
{
  uint64_t v0;

  v0 = sub_1CB845F58();
  __swift_allocate_value_buffer(v0, qword_1ED88DC58);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED88DC58);
  return sub_1CB845EC8();
}

uint64_t static FlatFileStreamBookmarkStore.defaultBookmarkPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED88DC70 != -1)
    swift_once();
  v2 = sub_1CB845F58();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED88DC58);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1CB82C8DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v0 = sub_1CB845F58();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v12 - v5;
  if (qword_1ED88DC70 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED88DC58);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v8(v6, v7, v0);
  v8(v4, (uint64_t)v6, v0);
  if (qword_1ED88DDD0 != -1)
    swift_once();
  v9 = qword_1ED890240;
  type metadata accessor for FlatFileStreamBookmarkStore();
  swift_allocObject();
  swift_retain();
  v10 = sub_1CB82FC88(0xD00000000000001CLL, 0x80000001CB858340, (uint64_t)v4, v9);
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  qword_1ED88DCA8 = v10;
  return result;
}

uint64_t FlatFileStreamBookmarkStore.__allocating_init(name:path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_1CB845F58();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  if (qword_1ED88DDD0 != -1)
    swift_once();
  v10 = qword_1ED890240;
  type metadata accessor for FlatFileStreamBookmarkStore();
  swift_allocObject();
  swift_retain();
  v11 = sub_1CB82FC88(a1, a2, (uint64_t)v9, v10);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a3, v6);
  return v11;
}

uint64_t type metadata accessor for FlatFileStreamBookmarkStore()
{
  uint64_t result;

  result = qword_1ED88DCD8;
  if (!qword_1ED88DCD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static FlatFileStreamBookmarkStore.shared.getter()
{
  if (qword_1ED88DCB8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1CB82CBE4(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  pthread_rwlock_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];
  uint64_t v31;

  v2 = v1;
  v4 = sub_1CB846744();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB84678C();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = -1;
  v11 = (pthread_rwlock_t *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lock);
  swift_beginAccess();
  pthread_rwlock_wrlock(v11);
  swift_endAccess();
  v13 = *(_QWORD *)&a1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  v12 = *(_QWORD *)&a1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
  v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarks);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v15 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v31 = *v14;
  *v14 = 0x8000000000000000;
  sub_1CB82F5A4((uint64_t)v15, v13, v12, isUniquelyReferenced_nonNull_native);
  *v14 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_endAccess();
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_writeSequenceNumber);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_writeSequenceNumber) = v20;
    *(_QWORD *)(v10 + 16) = v20;
    swift_beginAccess();
    pthread_rwlock_unlock(v11);
    swift_endAccess();
    dispatch_group_enter(*(dispatch_group_t *)(v2
                                             + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_dispatchGroup));
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v2;
    v21[3] = v15;
    v21[4] = v10;
    aBlock[4] = sub_1CB830024;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CB8214F0;
    aBlock[3] = &block_descriptor_14;
    v22 = _Block_copy(aBlock);
    v23 = v15;
    swift_retain();
    swift_retain();
    sub_1CB846768();
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
    sub_1CB7C6674((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8);
    v24 = v29;
    sub_1CB846EC4();
    MEMORY[0x1D179F0D4](0, v9, v6, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v24);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1CB82CF2C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_queue);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  swift_retain();
  v9 = a2;
  swift_retain();
  sub_1CB7C9EF0(v6);
  sub_1CB7C8E28(v6, v7, 5, 0, (uint64_t (*)(uint64_t, unint64_t))sub_1CB83117C, (uint64_t (*)(uint64_t, unint64_t))v8);
  return swift_release();
}

void sub_1CB82CFEC(uint64_t a1, unint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[3];
  uint64_t v46;
  uint64_t v47[4];

  v10 = sub_1CB845F58();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a3;
  if (a2)
  {
    v14 = qword_1ED88A6F0;
    swift_bridgeObjectRetain();
    if (v14 != -1)
      swift_once();
    v15 = sub_1CB8466D8();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED88A6D0);
    swift_bridgeObjectRetain();
    v16 = a4;
    v17 = sub_1CB8466C0();
    v18 = sub_1CB846C90();
    if (!os_log_type_enabled(v17, v18))
    {

      swift_bridgeObjectRelease_n();
      v24 = v42;
      goto LABEL_18;
    }
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v47[0] = v20;
    *(_DWORD *)v19 = 136315394;
    v22 = *(_QWORD *)&v16[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
    v21 = *(_QWORD *)&v16[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
    swift_bridgeObjectRetain();
    v46 = sub_1CB775A54(v22, v21, v47);
    sub_1CB846E58();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    v46 = sub_1CB775A54(a1, a2, v47);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v17, v18, "Failed to acquire a file lock to write bookmark data for %s: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v20, -1, -1);
    v23 = v19;
    goto LABEL_6;
  }
  v25 = (uint64_t *)(a5 + 16);
  v26 = *(_QWORD *)&a4[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
  v41 = *(_QWORD *)&a4[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  v27 = (uint64_t *)(a3
                  + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_writeSequenceNumberLog);
  swift_beginAccess();
  v28 = *v27;
  if (*(_QWORD *)(*v27 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = sub_1CB779A70(v41, v26);
    if ((v30 & 1) != 0)
    {
      v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (v31 >= *v25)
      {
        if (qword_1ED88A6F0 != -1)
          swift_once();
        v32 = sub_1CB8466D8();
        __swift_project_value_buffer(v32, (uint64_t)qword_1ED88A6D0);
        v33 = a4;
        swift_retain();
        v17 = sub_1CB8466C0();
        v34 = sub_1CB846C84();
        if (!os_log_type_enabled(v17, v34))
        {

          swift_release();
          v24 = v42;
          goto LABEL_18;
        }
        v35 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        v45[0] = v40;
        *(_DWORD *)v35 = 136315650;
        swift_bridgeObjectRetain();
        v46 = sub_1CB775A54(v41, v26, v45);
        sub_1CB846E58();

        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 12) = 2048;
        swift_beginAccess();
        v44 = *(_QWORD *)(a5 + 16);
        sub_1CB846E58();
        swift_release();
        *(_WORD *)(v35 + 22) = 2048;
        v44 = v31;
        sub_1CB846E58();
        _os_log_impl(&dword_1CB771000, v17, v34, "Discarding a write for %s with a sequence number %ld, the current number is %ld", (uint8_t *)v35, 0x20u);
        v36 = v40;
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v36, -1, -1);
        v23 = v35;
LABEL_6:
        MEMORY[0x1D179FE84](v23, -1, -1);

        v24 = v42;
        goto LABEL_18;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v24 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v42 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_filePath, v10);
  swift_beginAccess();
  v37 = sub_1CB831188(v13, a4, *v25);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((v37 & 1) != 0)
  {
    swift_beginAccess();
    v38 = *v25;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = *v27;
    *v27 = 0x8000000000000000;
    sub_1CB82F700(v38, v41, v26, isUniquelyReferenced_nonNull_native);
    v24 = v42;
    *v27 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
LABEL_18:
  dispatch_group_leave(*(dispatch_group_t *)(v24
                                           + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_dispatchGroup));
}

void *sub_1CB82D5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  pthread_rwlock_t *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v10;
  id v11;

  v5 = (pthread_rwlock_t *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lock);
  swift_beginAccess();
  pthread_rwlock_rdlock(v5);
  swift_endAccess();
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarks);
  swift_beginAccess();
  v7 = *v6;
  if (*(_QWORD *)(*v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_1CB779A70(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v8);
      v11 = v10;
    }
    else
    {
      v10 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  swift_beginAccess();
  pthread_rwlock_unlock(v5);
  swift_endAccess();
  return v10;
}

uint64_t sub_1CB82D6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  pthread_rwlock_t *v6;
  _QWORD *v7;

  v1 = v0;
  sub_1CB846CD8();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  v3 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v0;
  swift_retain();
  swift_retain();
  sub_1CB7C9EF0(v3);
  sub_1CB7C8E28(v3, 0, 0, 0, (uint64_t (*)(uint64_t, unint64_t))sub_1CB830078, (uint64_t (*)(uint64_t, unint64_t))v4);
  swift_release();
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  if (!v5)
    return swift_release();
  v6 = (pthread_rwlock_t *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lock);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  pthread_rwlock_wrlock(v6);
  swift_endAccess();
  v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarks);
  swift_beginAccess();
  *v7 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  pthread_rwlock_unlock(v6);
  swift_endAccess();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1CB82D864(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14[3];

  if (a2)
  {
    v6 = qword_1ED88A6F0;
    swift_bridgeObjectRetain();
    if (v6 != -1)
      swift_once();
    v7 = sub_1CB8466D8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED88A6D0);
    swift_bridgeObjectRetain();
    v8 = sub_1CB8466C0();
    v9 = sub_1CB846C90();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v14[0] = v11;
      *(_DWORD *)v10 = 136315138;
      swift_bridgeObjectRetain();
      sub_1CB775A54(a1, a2, v14);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CB771000, v8, v9, "Failed to acquire a file lock to refresh bookmark data: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v11, -1, -1);
      MEMORY[0x1D179FE84](v10, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    v13 = sub_1CB8303D0((id)(a4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_filePath));
    swift_beginAccess();
    *(_QWORD *)(a3 + 16) = v13;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CB82DA48()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  pthread_rwlock_t *v5;
  unint64_t *v6;

  v1 = v0;
  sub_1CB846CD8();
  v2 = sub_1CB78794C(MEMORY[0x1E0DEE9D8]);
  v3 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v0;
  *(_QWORD *)(v4 + 24) = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1CB7C9EF0(v3);
  sub_1CB7C8E28(v3, 0, 0, 0, (uint64_t (*)(uint64_t, unint64_t))sub_1CB8300C4, (uint64_t (*)(uint64_t, unint64_t))v4);
  swift_release();
  v5 = (pthread_rwlock_t *)(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lock);
  swift_beginAccess();
  pthread_rwlock_wrlock(v5);
  swift_endAccess();
  v6 = (unint64_t *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarks);
  swift_beginAccess();
  *v6 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  pthread_rwlock_unlock(v5);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void sub_1CB82DBA4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;

  if (a2)
  {
    v4 = qword_1ED88A6F0;
    swift_bridgeObjectRetain();
    if (v4 != -1)
      swift_once();
    v5 = sub_1CB8466D8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED88A6D0);
    swift_bridgeObjectRetain();
    v6 = sub_1CB8466C0();
    v7 = sub_1CB846C90();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v10 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_1CB775A54(a1, a2, &v10);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CB771000, v6, v7, "Failed to acquire a file lock to reset bookmark data: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v9, -1, -1);
      MEMORY[0x1D179FE84](v8, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_1CB830B84();
  }
}

uint64_t sub_1CB82DD74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v5 = sub_1CB846744();
  v22 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CB84678C();
  v20 = *(_QWORD *)(v8 - 8);
  v21 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CB846750();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_dispatchGroup);
  sub_1CB777FA8(0, qword_1ED88E0B0);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF540], v11);
  v15 = (void *)sub_1CB846D38();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  aBlock[4] = sub_1CB7A7F20;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_18_0;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1CB846768();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB7C6674((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8);
  sub_1CB846EC4();
  sub_1CB846CE4();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v21);
  return swift_release();
}

uint64_t sub_1CB82DFF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1CB82E010()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_1CB82E090;
  return sub_1CB847188();
}

uint64_t sub_1CB82E090()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB82E0E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB82E0EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889598);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1CB82DD74((uint64_t)sub_1CB830390, v6);
  return swift_release();
}

uint64_t FlatFileStreamBookmarkStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_filePath;
  v2 = sub_1CB845F58();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath, v2);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FlatFileStreamBookmarkStore.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_filePath;
  v2 = sub_1CB845F58();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath, v2);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB82E33C(char *a1)
{
  return sub_1CB82CBE4(a1);
}

void *sub_1CB82E35C(uint64_t a1, uint64_t a2)
{
  return sub_1CB82D5B4(a1, a2);
}

uint64_t sub_1CB82E37C()
{
  return sub_1CB82D6C0();
}

uint64_t sub_1CB82E39C(uint64_t a1, uint64_t a2)
{
  return sub_1CB82DD74(a1, a2);
}

uint64_t sub_1CB82E3BC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_1CB82E3D8()
{
  return sub_1CB82DA48();
}

uint64_t sub_1CB82E3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1ED88A6D0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED88A6D0);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1CB82E488(uint64_t a1, int a2, char a3)
{
  return sub_1CB82E60C(a1, a2, a3, (uint64_t (*)(void))sub_1CB77E4B8, (void (*)(void))sub_1CB77A5F4);
}

uint64_t sub_1CB82E49C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1CB779AD8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1CB77E4C4();
    goto LABEL_7;
  }
  sub_1CB77A600(v17, a3 & 1);
  v23 = sub_1CB779AD8(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_1CB847290();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1CB82F900(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1CB82E5F8(uint64_t a1, int a2, char a3)
{
  return sub_1CB82E60C(a1, a2, a3, (uint64_t (*)(void))sub_1CB77E6F4, (void (*)(void))sub_1CB77A990);
}

uint64_t sub_1CB82E60C(uint64_t a1, int a2, char a3, uint64_t (*a4)(void), void (*a5)(void))
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v8 = v5;
  v12 = *v5;
  v14 = sub_1CB779AD4(a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = a4();
LABEL_7:
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_DWORD *)(v20[6] + 4 * v14) = a2;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v23 = v20[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v20[2] = v25;
      return result;
    }
    goto LABEL_14;
  }
  a5();
  result = sub_1CB779AD4(a2);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for SISchemaComponentName(0);
  result = sub_1CB847290();
  __break(1u);
  return result;
}

uint64_t sub_1CB82E750(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1CB779AD8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
        return sub_1CB8302E8(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1CB77EAD0();
      goto LABEL_7;
    }
    sub_1CB77AF7C(v17, a3 & 1);
    v24 = sub_1CB779AD8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1CB82F850(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1CB847290();
  __break(1u);
  return result;
}

void sub_1CB82E8D0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1CB779AD8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1CB77ED4C();
    goto LABEL_7;
  }
  sub_1CB77B368(v17, a3 & 1);
  v22 = sub_1CB779AD8(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_1CB847290();
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1CB82F900(v14, (uint64_t)v11, a1, v20);
}

void sub_1CB82EA2C(uint64_t a1, uint64_t a2, char a3)
{
  sub_1CB82EFD4(a1, a2, a3, (void (*)(void))sub_1CB77EF74, (void (*)(void))sub_1CB77B6F8);
}

uint64_t sub_1CB82EA40(uint64_t a1, int a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1CB779AD4(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1CB77EF98();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_DWORD *)(v16[6] + 4 * v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1CB77BAB0(result, a3 & 1);
  result = sub_1CB779AD4(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for SISchemaComponentName(0);
  result = sub_1CB847290();
  __break(1u);
  return result;
}

uint64_t sub_1CB82EB74(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1CB82F2BC(a1, a2, a3, (void (*)(void))sub_1CB77EF80, (void (*)(void))sub_1CB77B704);
}

uint64_t sub_1CB82EB88(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1CB779AD8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1CB77F3B4();
    goto LABEL_7;
  }
  sub_1CB77C114(result, a3 & 1);
  result = sub_1CB779AD8(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_1CB847290();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1CB82F900(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1CB82ECD8(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1CB779AD8(a1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        *(double *)(v20[7] + 8 * v14) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_1CB77F778();
      goto LABEL_7;
    }
    sub_1CB77C770(result, a2 & 1);
    result = sub_1CB779AD8(a1);
    if ((v18 & 1) == (v21 & 1))
    {
      v14 = result;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
      return sub_1CB82FA84(v14, (uint64_t)v11, v20, a3);
    }
  }
  result = sub_1CB847290();
  __break(1u);
  return result;
}

uint64_t sub_1CB82EE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v7 = v6;
  v14 = *v6;
  v16 = sub_1CB779A70(a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1CB77F9AC();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (_QWORD *)(v22[7] + 24 * v16);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a4;
    v27[1] = a5;
    v28 = (_QWORD *)(v22[7] + 24 * v16);
    *v28 = a1;
    v28[1] = a2;
    v28[2] = a3;
    v29 = v22[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v22[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1CB77CAF0(v19, a6 & 1);
  v25 = sub_1CB779A70(a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1CB847290();
  __break(1u);
  return result;
}

void sub_1CB82EFC0(uint64_t a1, uint64_t a2, char a3)
{
  sub_1CB82EFD4(a1, a2, a3, (void (*)(void))sub_1CB77FB88, (void (*)(void))sub_1CB77CE1C);
}

void sub_1CB82EFD4(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void))
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v8 = v5;
  v12 = *v5;
  v14 = sub_1CB779C18(a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = 8 * v14;
    *(_QWORD *)(v20[6] + v24) = a2;
    *(_QWORD *)(v20[7] + v24) = a1;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v20[2] = v27;
      return;
    }
    goto LABEL_14;
  }
  a5();
  v22 = sub_1CB779C18(a2);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1CB847290();
  __break(1u);
}

uint64_t sub_1CB82F11C(int a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v5 = (_QWORD **)v4;
  v27 = a2;
  v9 = sub_1CB846084();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_1CB779AD8(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7] + 16 * v15;
      result = swift_unknownObjectRelease();
      *(_BYTE *)v22 = a1 & 1;
      *(_BYTE *)(v22 + 1) = BYTE1(a1) & 1;
      *(_BYTE *)(v22 + 2) = BYTE2(a1) & 1;
      *(_BYTE *)(v22 + 3) = HIBYTE(a1) & 1;
      *(_QWORD *)(v22 + 8) = v27;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1CB77FD2C();
    goto LABEL_7;
  }
  sub_1CB77D0D4(v18, a4 & 1);
  v24 = sub_1CB779AD8(a3);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_1CB847290();
    __break(1u);
    return result;
  }
  v15 = v24;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_1CB82FB1C(v15, (uint64_t)v12, a1 & 0x1010101, v27, v21);
}

uint64_t sub_1CB82F2A8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1CB82F2BC(a1, a2, a3, (void (*)(void))sub_1CB77FFE0, (void (*)(void))sub_1CB77D4C8);
}

uint64_t sub_1CB82F2BC(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void))
{
  _QWORD *v5;
  _QWORD **v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  void (*v27)(void);
  uint64_t v28;

  v27 = a5;
  v28 = a1;
  v7 = (_QWORD **)v5;
  v10 = sub_1CB846084();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_1CB779AD8(a2);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a3 & 1) != 0)
  {
LABEL_7:
    v22 = *v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 8 * v16) = v28;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_7;
  }
  v27();
  v25 = sub_1CB779AD8(a2);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_14:
    result = sub_1CB847290();
    __break(1u);
    return result;
  }
  v16 = v25;
  v22 = *v7;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  return sub_1CB82F900(v16, (uint64_t)v13, v28, v22);
}

uint64_t sub_1CB82F428(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1CB779AD8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 40))(v20[7] + *(_QWORD *)(v9 + 72) * v14, a1, v8);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1CB78021C();
      goto LABEL_7;
    }
    sub_1CB77D4D4(v17, a3 & 1);
    v22 = sub_1CB779AD8(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 40))(v20[7] + *(_QWORD *)(v9 + 72) * v14, a1, v8);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1CB82FBDC(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1CB847290();
  __break(1u);
  return result;
}

void sub_1CB82F5A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1CB779A70(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1CB780610();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1CB77DB78(v15, a4 & 1);
  v20 = sub_1CB779A70(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1CB847290();
  __break(1u);
}

uint64_t sub_1CB82F700(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1CB779A70(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1CB7807C4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1CB77DE8C(result, a4 & 1);
  result = sub_1CB779A70(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1CB847290();
  __break(1u);
  return result;
}

uint64_t sub_1CB82F850(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1CB846084();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  result = sub_1CB780DC4(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_1CB82F900(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1CB846084();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_1CB82F998(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_1CB82F9E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_1CB846084();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_1CB82FA84(unint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a3[6];
  v9 = sub_1CB846084();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(double *)(a3[7] + 8 * a1) = a4;
  v11 = a3[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a3[2] = v13;
  return result;
}

uint64_t sub_1CB82FB1C(unint64_t a1, uint64_t a2, int a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_1CB846084();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = a5[7] + 16 * a1;
  *(_BYTE *)v13 = a3 & 1;
  *(_BYTE *)(v13 + 1) = BYTE1(a3) & 1;
  *(_BYTE *)(v13 + 2) = BYTE2(a3) & 1;
  *(_BYTE *)(v13 + 3) = HIBYTE(a3) & 1;
  *(_QWORD *)(v13 + 8) = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_1CB82FBDC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1CB846084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72) * a1;
  v12 = v8 + v11;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v13(v12, a2, v9);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(a4[7] + v11, a3, v9);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

uint64_t sub_1CB82FC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = v4;
  v23 = a4;
  v24 = a3;
  v22 = sub_1CB846D08();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CB846CF0();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1CB84678C();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1CB845F58();
  v21 = *(_QWORD *)(v12 - 8);
  v13 = v21;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1;
  v26 = a2;
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB845F10();
  swift_bridgeObjectRelease();
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v16(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_filePath, v15, v12);
  sub_1CB845F10();
  v16(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath, v15, v12);
  sub_1CB777FA8(0, qword_1ED88E0B0);
  sub_1CB846774();
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E090);
  sub_1CB7C6674((unint64_t *)&unk_1ED88E098, &qword_1ED88E090);
  sub_1CB846EC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v9, *MEMORY[0x1E0DEF8D0], v22);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_queue) = sub_1CB846D20();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_dispatchGroup) = dispatch_group_create();
  v17 = v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lock;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_OWORD *)(v17 + 48) = 0u;
  *(_OWORD *)(v17 + 64) = 0u;
  *(_OWORD *)(v17 + 80) = 0u;
  *(_OWORD *)(v17 + 96) = 0u;
  *(_OWORD *)(v17 + 112) = 0u;
  *(_OWORD *)(v17 + 128) = 0u;
  *(_OWORD *)(v17 + 144) = 0u;
  *(_OWORD *)(v17 + 160) = 0u;
  *(_OWORD *)(v17 + 176) = 0u;
  *(_QWORD *)(v17 + 192) = 0;
  swift_beginAccess();
  pthread_rwlock_init((pthread_rwlock_t *)v17, 0);
  swift_endAccess();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarkFileLock) = v23;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_writeSequenceNumber) = 0;
  swift_retain();
  v18 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_writeSequenceNumberLog) = sub_1CB78783C(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarks) = sub_1CB78794C(v18);
  sub_1CB82D6C0();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v12);
  return v5;
}

uint64_t sub_1CB830010()
{
  return swift_deallocObject();
}

uint64_t sub_1CB830024()
{
  uint64_t v0;

  return sub_1CB82CF2C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_1CB830048()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CB83006C()
{
  return objectdestroy_8Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1CB830078(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CB82D864(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1CB830080()
{
  return objectdestroy_8Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_8Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

void sub_1CB8300C4(uint64_t a1, unint64_t a2)
{
  sub_1CB82DBA4(a1, a2);
}

uint64_t sub_1CB8300CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB8300F0(uint64_t a1)
{
  return sub_1CB82E0EC(a1);
}

uint64_t dispatch thunk of StreamBookmarkStore.write(bookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StreamBookmarkStore.read(name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of StreamBookmarkStore.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StreamBookmarkStore.notifyOnComplete(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of StreamBookmarkStore.notifyOnComplete()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 40) + *(_QWORD *)(a2 + 40));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB785488;
  return v7(a1, a2);
}

uint64_t dispatch thunk of StreamBookmarkStore.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1CB83018C()
{
  return type metadata accessor for FlatFileStreamBookmarkStore();
}

uint64_t sub_1CB830194()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB845F58();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FlatFileStreamBookmarkStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.write(bookmark:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.read(name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.refresh()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.notifyOnComplete(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.notifyOnComplete()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 296) + *(_QWORD *)(*(_QWORD *)v0 + 296));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1CB785DF4;
  return v4();
}

uint64_t sub_1CB8302E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB83032C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889598);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CB830390()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889598);
  return sub_1CB846B34();
}

uint64_t sub_1CB8303D0(id a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  char *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  void *v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t result;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65[2];
  char v66;
  uint64_t v67[2];

  v2 = sub_1CB845F58();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v60 - v5;
  v7 = sub_1CB845F64();
  v21 = v20;
  v22 = v7;
  sub_1CB777FA8(0, &qword_1ED88DE08);
  type metadata accessor for StreamBookmarkCollection();
  sub_1CB7A81D8(v22, v21);
  v61 = v22;
  v62 = v21;
  v23 = (char *)sub_1CB846CB4();
  if (!v23)
  {
    if (qword_1ED88A6F0 != -1)
      swift_once();
    v24 = sub_1CB8466D8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED88A6D0);
    (*(void (**)(char *, id, uint64_t))(v3 + 16))(v6, a1, v2);
    v25 = sub_1CB8466C0();
    v26 = sub_1CB846C90();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v65[0] = v28;
      *(_DWORD *)v27 = 136315138;
      sub_1CB7762AC((unint64_t *)&qword_1ED88A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v29 = sub_1CB847170();
      v67[0] = sub_1CB775A54(v29, v30, v65);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      _os_log_impl(&dword_1CB771000, v25, v26, "Cannot decode bookmarks read from path=%s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v28, -1, -1);
      MEMORY[0x1D179FE84](v27, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }

    v31 = (_QWORD *)sub_1CB78794C(MEMORY[0x1E0DEE9D8]);
    v33 = v61;
    v32 = v62;
    sub_1CB779034(v61, v62);
    sub_1CB779034(v33, v32);
    return (uint64_t)v31;
  }
  v34 = OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks;
  v35 = *(_QWORD *)&v23[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks];
  v60 = v23;
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for StreamBookmark();
  v31 = (_QWORD *)sub_1CB846804();
  v36 = *(_QWORD *)&v60[v34];
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v37 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v37)
      goto LABEL_17;
LABEL_39:
    swift_bridgeObjectRelease();
    v58 = v61;
    v57 = v62;
    sub_1CB779034(v61, v62);
    sub_1CB779034(v58, v57);

    return (uint64_t)v31;
  }
  v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v37)
    goto LABEL_39;
LABEL_17:
  v63 = v36;
  v64 = v36 & 0xC000000000000001;
  v38 = 4;
  while (1)
  {
    v41 = v64 ? (char *)MEMORY[0x1D179F320](v38 - 4, v36) : (char *)*(id *)(v36 + 8 * v38);
    v42 = v41;
    v43 = v38 - 3;
    if (__OFADD__(v38 - 4, 1))
      break;
    v36 = v37;
    v45 = *(_QWORD *)&v41[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
    v44 = *(_QWORD *)&v41[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
    swift_bridgeObjectRetain();
    a1 = v42;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v65[0] = (uint64_t)v31;
    v3 = sub_1CB779A70(v45, v44);
    v48 = v31[2];
    v49 = (v47 & 1) == 0;
    v50 = v48 + v49;
    if (__OFADD__(v48, v49))
      goto LABEL_36;
    v42 = v47;
    if (v31[3] >= v50)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v31 = (_QWORD *)v65[0];
        if ((v47 & 1) != 0)
          goto LABEL_18;
      }
      else
      {
        sub_1CB780610();
        v31 = (_QWORD *)v65[0];
        if ((v42 & 1) != 0)
          goto LABEL_18;
      }
    }
    else
    {
      sub_1CB77DB78(v50, isUniquelyReferenced_nonNull_native);
      v51 = sub_1CB779A70(v45, v44);
      if ((v42 & 1) != (v52 & 1))
      {
        result = sub_1CB847290();
        __break(1u);
        return result;
      }
      v3 = v51;
      v31 = (_QWORD *)v65[0];
      if ((v42 & 1) != 0)
      {
LABEL_18:
        v39 = v31[7];

        *(_QWORD *)(v39 + 8 * v3) = a1;
        goto LABEL_19;
      }
    }
    v31[(v3 >> 6) + 8] |= 1 << v3;
    v53 = (uint64_t *)(v31[6] + 16 * v3);
    *v53 = v45;
    v53[1] = v44;
    *(_QWORD *)(v31[7] + 8 * v3) = a1;
    v54 = v31[2];
    v55 = __OFADD__(v54, 1);
    v56 = v54 + 1;
    if (v55)
      goto LABEL_37;
    v31[2] = v56;
    swift_bridgeObjectRetain();
LABEL_19:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v38;
    v37 = v36;
    v40 = v43 == v36;
    v36 = v63;
    if (v40)
      goto LABEL_39;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  swift_once();
  v8 = sub_1CB8466D8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED88A6D0);
  (*(void (**)(void *, id, uint64_t))(v3 + 16))(v42, a1, v38);
  v9 = (id)v36;
  v10 = (id)v36;
  v11 = sub_1CB8466C0();
  v12 = sub_1CB846C84();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v67[0] = v14;
    *(_DWORD *)v13 = 136315394;
    sub_1CB7762AC((unint64_t *)&qword_1ED88A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v15 = sub_1CB847170();
    v65[0] = sub_1CB775A54(v15, v16, v67);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v3 + 8))(v42, v38);
    *(_WORD *)(v13 + 12) = 2080;
    v65[0] = v36;
    v65[1] = 0;
    v66 = 1;
    v17 = (id)v36;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED88A820);
    v18 = sub_1CB8468DC();
    v65[0] = sub_1CB775A54(v18, v19, v67);
    sub_1CB846E58();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CB771000, v11, v12, "Cannot read bookmarks from path=%s, error=%s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v14, -1, -1);
    MEMORY[0x1D179FE84](v13, -1, -1);
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v3 + 8))(v42, v38);

  }
  v31 = (_QWORD *)sub_1CB78794C(MEMORY[0x1E0DEE9D8]);

  return (uint64_t)v31;
}

uint64_t sub_1CB830B84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  objc_class *v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  objc_super v25;
  id v26[2];

  v26[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1CB845F58();
  MEMORY[0x1E0C80A78](v0);
  v1 = swift_bridgeObjectRetain();
  v2 = sub_1CB7F2C98(v1);
  swift_bridgeObjectRelease();
  v3 = (objc_class *)type metadata accessor for StreamBookmarkCollection();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks] = v2;
  v25.receiver = v4;
  v25.super_class = v3;
  v5 = objc_msgSendSuper2(&v25, sel_init);
  v6 = (void *)objc_opt_self();
  v26[0] = 0;
  v7 = objc_msgSend(v6, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v5, 1, v26);
  v8 = v26[0];
  if (v7)
  {
    v9 = sub_1CB845F94();
    v11 = v10;

    sub_1CB7A81D8(v9, v11);
    sub_1CB845FA0();
    sub_1CB779034(v9, v11);

    sub_1CB779034(v9, v11);
    return 1;
  }
  else
  {
    v12 = v8;
    v13 = (void *)sub_1CB845E80();

    swift_willThrow();
    if (qword_1ED88A6F0 != -1)
      swift_once();
    v14 = sub_1CB8466D8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED88A6D0);
    v15 = v13;
    v16 = v13;
    v17 = sub_1CB8466C0();
    v18 = sub_1CB846C90();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (void *)swift_slowAlloc();
      v26[0] = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = v13;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      v22 = sub_1CB8468DC();
      sub_1CB775A54(v22, v23, (uint64_t *)v26);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v17, v18, "Cannot encode bookmarks, error=%s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v20, -1, -1);
      MEMORY[0x1D179FE84](v19, -1, -1);

    }
    else
    {

    }
    return 0;
  }
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1CB83117C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CB82CFEC(a1, a2, *(_QWORD *)(v2 + 16), *(char **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1CB831188(void *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  char v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1CB845F58();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CB8303D0(a1);
  v12 = *(_QWORD *)&a2[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  v11 = *(_QWORD *)&a2[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
  swift_bridgeObjectRetain();
  v13 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32 = v10;
  sub_1CB82F5A4((uint64_t)v13, v12, v11, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = sub_1CB830B84();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    if (qword_1ED88A6F0 != -1)
      swift_once();
    v16 = sub_1CB8466D8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED88A6D0);
    (*(void (**)(char *, void *, uint64_t))(v7 + 16))(v9, a1, v6);
    v17 = v13;
    v18 = sub_1CB8466C0();
    v19 = sub_1CB846C84();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v28 = a3;
      v22 = v21;
      v30 = swift_slowAlloc();
      v32 = v30;
      *(_DWORD *)v22 = 136315650;
      v29 = v20;
      swift_bridgeObjectRetain();
      v31 = sub_1CB775A54(v12, v11, &v32);
      sub_1CB846E58();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2048;
      v31 = v28;
      sub_1CB846E58();
      *(_WORD *)(v22 + 22) = 2080;
      sub_1CB7762AC((unint64_t *)&qword_1ED88A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v23 = sub_1CB847170();
      v31 = sub_1CB775A54(v23, v24, &v32);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      _os_log_impl(&dword_1CB771000, v18, (os_log_type_t)v29, "Updated a bookmark, name=%s, sequenceNum=%ld, path=%s", (uint8_t *)v22, 0x20u);
      v25 = v30;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v25, -1, -1);
      MEMORY[0x1D179FE84](v22, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

  }
  return v15 & 1;
}

void __swiftcall TrialEnrollment.init(treatmentId:experimentId:rolloutId:)(SiriPrivateLearningAnalytics::TrialEnrollment *__return_ptr retstr, Swift::String_optional treatmentId, Swift::String_optional experimentId, Swift::String_optional rolloutId)
{
  retstr->treatmentId = treatmentId;
  retstr->experimentId = experimentId;
  retstr->rolloutId = rolloutId;
}

void sub_1CB8314BC()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = v0 + 2;
  v4 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 8) + 8) + 24))(v4);
  v5 = v1[5];
  v6 = v1[6];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  v7 = *v1;
  v8 = v1[1];
  v27 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v6 + 32))(*v1, v8, v5, v6);
  v10 = v9;
  v11 = v1[5];
  v12 = v1[6];
  __swift_project_boxed_opaque_existential_1(v2, v11);
  v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 40))(v7, v8, v11, v12);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, sel_experimentId);

    v16 = sub_1CB8468A0();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  v20 = v1[5];
  v19 = v1[6];
  __swift_project_boxed_opaque_existential_1(v2, v20);
  v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 48))(v7, v8, v20, v19);
  v22 = v21;
  if (v21)
  {
    v23 = objc_msgSend(v21, sel_rolloutId);

    v22 = (void *)sub_1CB8468A0();
    v25 = v24;

  }
  else
  {
    v25 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1[8] = v27;
  v1[9] = v10;
  v1[10] = v16;
  v1[11] = v18;
  v1[12] = v22;
  v1[13] = v25;
  v26 = sub_1CB831824();
  swift_bridgeObjectRelease();
  v1[7] = v26;
  sub_1CB831B20();
}

uint64_t sub_1CB83168C@<X0>(uint64_t a1@<X8>)
{
  id v2;
  _QWORD v4[5];

  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 112);
  v4[3] = sub_1CB777FA8(0, (unint64_t *)&qword_1ED88E4B8);
  v4[4] = &off_1E86930A0;
  v4[0] = v2;
  sub_1CB79CBA8((uint64_t)v4, a1 + 16);
  *(_QWORD *)a1 = 0xD000000000000027;
  *(_QWORD *)(a1 + 8) = 0x80000001CB857B80;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_QWORD *)(a1 + 56) = sub_1CB787E40(MEMORY[0x1E0DEE9D8]);
  sub_1CB8314BC();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1CB831758@<X0>(uint64_t a1@<X8>)
{
  id v2;
  _QWORD v4[5];

  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 276);
  v4[3] = sub_1CB777FA8(0, (unint64_t *)&qword_1ED88E4B8);
  v4[4] = &off_1E86930A0;
  v4[0] = v2;
  sub_1CB79CBA8((uint64_t)v4, a1 + 16);
  *(_QWORD *)a1 = 0xD00000000000002ALL;
  *(_QWORD *)(a1 + 8) = 0x80000001CB857BB0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_QWORD *)(a1 + 56) = sub_1CB787E40(MEMORY[0x1E0DEE9D8]);
  sub_1CB8314BC();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1CB831824()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char **v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  unint64_t v35;
  id v36;
  unint64_t v37;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  isUniquelyReferenced_nonNull_native = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v2 + 56))(*v0, v0[1], v1, v2);
  v4 = (_QWORD *)sub_1CB787E40(MEMORY[0x1E0DEE9D8]);
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain_n();
    v5 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
LABEL_30:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v4;
  }
  v5 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_30;
LABEL_3:
  v37 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  v6 = 4;
  v7 = &selRef_eventGeneratedRelativeToBootTimeTimestampNs;
  v34 = v5;
  v35 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    if (v37)
      v8 = (id)MEMORY[0x1D179F320](v6 - 4, isUniquelyReferenced_nonNull_native);
    else
      v8 = *(id *)(isUniquelyReferenced_nonNull_native + 8 * v6);
    v9 = v8;
    v10 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v11 = objc_msgSend(v8, v7[13]);
    if (!v11)
      break;
    v12 = v11;
    v13 = objc_msgSend(v11, sel_name);

    if (v13)
    {
      v14 = sub_1CB8468A0();
      v16 = v15;

      v17 = objc_msgSend(v9, sel_level);
      if (v17)
      {
        v36 = v17;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v18 = v14;
        v20 = sub_1CB779A70(v14, v16);
        v21 = v4[2];
        v22 = (v19 & 1) == 0;
        v23 = v21 + v22;
        if (__OFADD__(v21, v22))
          goto LABEL_27;
        v24 = v19;
        if (v4[3] >= v23)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v19 & 1) == 0)
              goto LABEL_23;
          }
          else
          {
            sub_1CB780604();
            if ((v24 & 1) == 0)
              goto LABEL_23;
          }
        }
        else
        {
          sub_1CB77DB6C(v23, isUniquelyReferenced_nonNull_native);
          v25 = sub_1CB779A70(v18, v16);
          if ((v24 & 1) != (v26 & 1))
            goto LABEL_32;
          v20 = v25;
          if ((v24 & 1) == 0)
          {
LABEL_23:
            v4[(v20 >> 6) + 8] |= 1 << v20;
            v29 = (uint64_t *)(v4[6] + 16 * v20);
            *v29 = v18;
            v29[1] = v16;
            *(_QWORD *)(v4[7] + 8 * v20) = v36;
            v30 = v4[2];
            v31 = __OFADD__(v30, 1);
            v32 = v30 + 1;
            if (v31)
              goto LABEL_28;
            v4[2] = v32;
            swift_bridgeObjectRetain();
            goto LABEL_25;
          }
        }
        v27 = v4[7];
        v28 = 8 * v20;

        *(_QWORD *)(v27 + v28) = v36;
LABEL_25:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 = v34;
        isUniquelyReferenced_nonNull_native = v35;
        v7 = &selRef_eventGeneratedRelativeToBootTimeTimestampNs;
        goto LABEL_5;
      }

      swift_bridgeObjectRelease();
    }
    else
    {

    }
LABEL_5:
    ++v6;
    if (v10 == v5)
      goto LABEL_30;
  }
  __break(1u);
LABEL_32:
  result = sub_1CB847290();
  __break(1u);
  return result;
}

void sub_1CB831B20()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  _BYTE v8[112];

  if (qword_1ED88E518 != -1)
    swift_once();
  v1 = sub_1CB8466D8();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED890248);
  sub_1CB8340F4(v0, (uint64_t)v8);
  v2 = sub_1CB8466C0();
  v3 = sub_1CB846C84();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v7 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = TrialManager.makeLogString()();
    sub_1CB775A54(v6._countAndFlagsBits, (unint64_t)v6._object, &v7);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB834128((uint64_t)v8);
    _os_log_impl(&dword_1CB771000, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v5, -1, -1);
    MEMORY[0x1D179FE84](v4, -1, -1);
  }
  else
  {
    sub_1CB834128((uint64_t)v8);
  }

}

uint64_t sub_1CB831CB0(void *a1, void (*a2)(_QWORD *))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[7];

  v9[3] = &type metadata for DefaultTrialNotificationToken;
  v9[4] = &off_1E8693368;
  v9[0] = objc_msgSend(a1, sel_token);
  swift_unknownObjectRetain();
  v4 = objc_msgSend(a1, sel_namespaceName);
  v5 = sub_1CB8468A0();
  v7 = v6;

  v9[5] = v5;
  v9[6] = v7;
  a2(v9);
  swift_unknownObjectRelease();
  return sub_1CB8244D0((uint64_t)v9);
}

uint64_t TrialNamespaceUpdate.init(token:namespace:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  result = sub_1CB7780BC(a1, a4);
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

void sub_1CB831DA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[4];

  sub_1CB79CBA8(a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2348);
  if (swift_dynamicCast())
  {
    v3 = v1[5];
    v4 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24);
    v6 = swift_unknownObjectRetain();
    v5(v6, v3, v4);
    swift_unknownObjectRelease_n();
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v7 = sub_1CB8466D8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED890248);
    sub_1CB79CBA8(a1, (uint64_t)v15);
    v8 = sub_1CB8466C0();
    v9 = sub_1CB846C90();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v14 = v11;
      *(_DWORD *)v10 = 136315138;
      __swift_project_boxed_opaque_existential_1(v15, v15[3]);
      swift_getDynamicType();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF9A2350);
      v12 = sub_1CB8468DC();
      sub_1CB775A54(v12, v13, &v14);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
      _os_log_impl(&dword_1CB771000, v8, v9, "Cannot extract Trial notification token: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v11, -1, -1);
      MEMORY[0x1D179FE84](v10, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    }

  }
}

Swift::String __swiftcall TrialManager.makeLogString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  void *v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  Swift::String result;

  sub_1CB846F30();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  v7 = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v15 >= v6)
      goto LABEL_21;
    v16 = *(_QWORD *)(v2 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v6)
        goto LABEL_21;
      v16 = *(_QWORD *)(v2 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v6)
          goto LABEL_21;
        v16 = *(_QWORD *)(v2 + 8 * v9);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v5 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    v13 = v12;
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    v14 = objc_msgSend(v13, sel_description, 538976288, 0xE400000000000000);
    sub_1CB8468A0();

    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    sub_1CB846954();

    v7 = swift_bridgeObjectRelease();
  }
  v17 = v15 + 3;
  if (v17 >= v6)
  {
LABEL_21:
    swift_release();
    v7 = 0;
    v8 = (void *)0xE000000000000000;
    goto LABEL_24;
  }
  v16 = *(_QWORD *)(v2 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v6)
      goto LABEL_21;
    v16 = *(_QWORD *)(v2 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result._object = v8;
  result._countAndFlagsBits = v7;
  return result;
}

unint64_t TrialEnrollment.description.getter()
{
  sub_1CB846F30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846F30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

uint64_t TrialEnrollment.treatmentId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrialEnrollment.experimentId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrialEnrollment.rolloutId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1CB832624()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656D697265707865;
  if (*v0 != 1)
    v1 = 0x4974756F6C6C6F72;
  if (*v0)
    return v1;
  else
    return 0x6E656D7461657274;
}

uint64_t sub_1CB832694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CB833F08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CB8326B8()
{
  sub_1CB8336A8();
  return sub_1CB84738C();
}

uint64_t sub_1CB8326E0()
{
  sub_1CB8336A8();
  return sub_1CB847398();
}

uint64_t TrialEnrollment.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2310);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB8336A8();
  sub_1CB847350();
  v14 = 0;
  v9 = v11[5];
  sub_1CB84711C();
  if (!v9)
  {
    v13 = 1;
    sub_1CB84711C();
    v12 = 2;
    sub_1CB84711C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TrialEnrollment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2320);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB8336A8();
  sub_1CB847338();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v27 = 0;
  v9 = sub_1CB8470D4();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1CB8470D4();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_1CB8470D4();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB832AA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return TrialEnrollment.init(from:)(a1, a2);
}

uint64_t sub_1CB832AB4(_QWORD *a1)
{
  return TrialEnrollment.encode(to:)(a1);
}

uint64_t TrialNamespaceUpdate.token.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CB79CBA8(v1, a1);
}

uint64_t TrialNamespaceUpdate.namespace.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1CB832B14(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;

  v61 = a2;
  v57 = a4;
  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v55 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v58 = (char *)&v54 - v11;
  v56 = sub_1CB846E40();
  v12 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v14 = (char *)&v54 - v13;
  v15 = a1[3];
  v16 = *(uint64_t (**)(void))(a3 + 64);
  v59 = a1[2];
  v60 = v15;
  v17 = v16();
  if (v17)
  {
    v18 = (void *)v17;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 + 88) + 8))(v17, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
    {
      v61 = v7;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v56);
      if (qword_1ED88E518 != -1)
        swift_once();
      v19 = sub_1CB8466D8();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED890248);
      swift_retain_n();
      v20 = v18;
      v21 = sub_1CB8466C0();
      v22 = sub_1CB846C90();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v57 = swift_slowAlloc();
        v58 = (char *)swift_slowAlloc();
        v63 = v58;
        *(_DWORD *)v23 = 136315650;
        v24 = v60;
        swift_bridgeObjectRetain();
        v62 = sub_1CB775A54(v59, v24, (uint64_t *)&v63);
        sub_1CB846E58();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2080;
        v62 = v61;
        swift_getMetatypeMetadata();
        v25 = sub_1CB8468DC();
        v62 = sub_1CB775A54(v25, v26, (uint64_t *)&v63);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 22) = 2112;
        v62 = (uint64_t)v20;
        v27 = v18;
        v28 = v20;
        sub_1CB846E58();
        v29 = v57;
        *(_QWORD *)v57 = v27;

        _os_log_impl(&dword_1CB771000, v21, v22, "Trial: Factor %s retrieved from trial but value did not match requested type %s. Raw Level: %@", (uint8_t *)v23, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v29, -1, -1);
        v30 = v58;
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v30, -1, -1);
        MEMORY[0x1D179FE84](v23, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      sub_1CB8340B0();
      swift_allocError();
      *v53 = 1;
      swift_willThrow();

    }
    else
    {
      v37 = v8;
      v38 = v57;
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v57, v14, v7);
      if (qword_1ED88E518 != -1)
        swift_once();
      v39 = sub_1CB8466D8();
      __swift_project_value_buffer(v39, (uint64_t)qword_1ED890248);
      v40 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v41 = v58;
      v40(v58, v38, v7);
      swift_retain();
      v42 = sub_1CB8466C0();
      v43 = sub_1CB846C84();
      v44 = v43;
      if (os_log_type_enabled(v42, v43))
      {
        v45 = swift_slowAlloc();
        v57 = v37;
        v46 = v45;
        v61 = swift_slowAlloc();
        v63 = (char *)v61;
        *(_DWORD *)v46 = 136315394;
        v47 = v60;
        swift_bridgeObjectRetain();
        v62 = sub_1CB775A54(v59, v47, (uint64_t *)&v63);
        LODWORD(v59) = v44;
        sub_1CB846E58();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        v48 = v58;
        v40(v55, (uint64_t)v58, v7);
        v49 = sub_1CB8468DC();
        v62 = sub_1CB775A54(v49, v50, (uint64_t *)&v63);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v7);
        _os_log_impl(&dword_1CB771000, v42, (os_log_type_t)v59, "Trial: Factor %s retrieved from trial. Value is %s", (uint8_t *)v46, 0x16u);
        v51 = v61;
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v51, -1, -1);
        MEMORY[0x1D179FE84](v46, -1, -1);

      }
      else
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v41, v7);

      }
    }
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v31 = sub_1CB8466D8();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED890248);
    swift_retain();
    v32 = sub_1CB8466C0();
    v33 = sub_1CB846C84();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v63 = (char *)v35;
      *(_DWORD *)v34 = 136315138;
      v36 = v60;
      swift_bridgeObjectRetain();
      v62 = sub_1CB775A54(v59, v36, (uint64_t *)&v63);
      sub_1CB846E58();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v32, v33, "Trial: Failed to retrieve %s from trial. No matching factor found.", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v35, -1, -1);
      MEMORY[0x1D179FE84](v34, -1, -1);

    }
    else
    {

      swift_release();
    }
    sub_1CB8340B0();
    swift_allocError();
    *v52 = 0;
    swift_willThrow();
  }
}

id sub_1CB8332B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void **v5;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD v14[6];

  v9 = *v5;
  v10 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v14[4] = a4;
  v14[5] = a5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1CB7D621C;
  v14[3] = &block_descriptor_15;
  v11 = _Block_copy(v14);
  swift_retain();
  v12 = objc_msgSend(v9, sel_addUpdateHandlerForNamespaceName_queue_usingBlock_, v10, a3, v11);

  _Block_release(v11);
  swift_release();
  return v12;
}

id sub_1CB833380(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_removeUpdateHandlerForToken_, a1);
}

uint64_t sub_1CB833394()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *v0;
  v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v3 = objc_msgSend(v1, sel_treatmentIdWithNamespaceName_, v2);

  if (!v3)
    return 0;
  v4 = sub_1CB8468A0();

  return v4;
}

id sub_1CB833410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CB833428(a1, a2, a3, a4, (SEL *)&selRef_experimentIdentifiersWithNamespaceName_);
}

id sub_1CB83341C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CB833428(a1, a2, a3, a4, (SEL *)&selRef_rolloutIdentifiersWithNamespaceName_);
}

id sub_1CB833428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void **v5;
  void *v7;
  void *v8;
  id v9;

  v7 = *v5;
  v8 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v9 = objc_msgSend(v7, *a5, v8);

  return v9;
}

uint64_t sub_1CB83347C()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *v0;
  v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v3 = objc_msgSend(v1, sel_factorLevelsWithNamespaceName_, v2);

  sub_1CB777FA8(0, &qword_1ED88E050);
  v4 = sub_1CB846A5C();

  return v4;
}

id sub_1CB8334F4()
{
  void **v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *v0;
  v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v4 = objc_msgSend(v1, sel_levelForFactor_withNamespaceName_, v2, v3);

  return v4;
}

void protocol witness for TrialFactorResolving.resolveFactor<A>(factor:scope:) in conformance TRIClient(_QWORD *a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  sub_1CB832B14(a1, a2, (uint64_t)&off_1E86930A0, a3);
}

id sub_1CB833588()
{
  id *v0;

  return objc_msgSend(*v0, sel_refresh);
}

uint64_t _s28SiriPrivateLearningAnalytics15TrialEnrollmentV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v10 = a2[4];
  v12 = a2[5];
  if (!v3)
  {
    if (v8)
      return 0;
    goto LABEL_8;
  }
  if (!v8)
    return 0;
  if (*a1 == *a2 && v3 == v8 || (v13 = sub_1CB8471A0(), result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (!v11)
        return 0;
      if (v4 != v9 || v6 != v11)
      {
        v15 = sub_1CB8471A0();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v7)
    {
      if (v12 && (v5 == v10 && v7 == v12 || (sub_1CB8471A0() & 1) != 0))
        return 1;
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1CB8336A8()
{
  unint64_t result;

  result = qword_1EF9A2318;
  if (!qword_1EF9A2318)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB850EA0, &type metadata for TrialEnrollment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF9A2318);
  }
  return result;
}

uint64_t destroy for TrialManager(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrialManager(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TrialManager(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrialManager(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TrialManager()
{
  return &type metadata for TrialManager;
}

uint64_t destroy for TrialEnrollment()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TrialEnrollment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TrialEnrollment(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for TrialEnrollment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialEnrollment(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TrialEnrollment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialEnrollment()
{
  return &type metadata for TrialEnrollment;
}

uint64_t destroy for TrialNamespaceUpdate(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrialNamespaceUpdate(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for TrialNamespaceUpdate(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrialNamespaceUpdate(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialNamespaceUpdate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrialNamespaceUpdate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialNamespaceUpdate()
{
  return &type metadata for TrialNamespaceUpdate;
}

uint64_t sub_1CB833D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1CB833D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1CB833D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1CB833D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1CB833D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1CB833D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

ValueMetadata *type metadata accessor for DefaultTrialNotificationToken()
{
  return &type metadata for DefaultTrialNotificationToken;
}

uint64_t storeEnumTagSinglePayload for TrialEnrollment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CB833DB0 + 4 * byte_1CB850BF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CB833DE4 + 4 * byte_1CB850BF0[v4]))();
}

uint64_t sub_1CB833DE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB833DEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB833DF4);
  return result;
}

uint64_t sub_1CB833E00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB833E08);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CB833E0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB833E14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrialEnrollment.CodingKeys()
{
  return &type metadata for TrialEnrollment.CodingKeys;
}

unint64_t sub_1CB833E34()
{
  unint64_t result;

  result = qword_1EF9A2328;
  if (!qword_1EF9A2328)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB850E68, &type metadata for TrialEnrollment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF9A2328);
  }
  return result;
}

unint64_t sub_1CB833E7C()
{
  unint64_t result;

  result = qword_1EF9A2330;
  if (!qword_1EF9A2330)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB850DD8, &type metadata for TrialEnrollment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF9A2330);
  }
  return result;
}

unint64_t sub_1CB833EC4()
{
  unint64_t result;

  result = qword_1EF9A2338;
  if (!qword_1EF9A2338)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB850E00, &type metadata for TrialEnrollment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF9A2338);
  }
  return result;
}

uint64_t sub_1CB833F08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656D7461657274 && a2 == 0xEB00000000644974;
  if (v2 || (sub_1CB8471A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D697265707865 && a2 == 0xEC0000006449746ELL || (sub_1CB8471A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4974756F6C6C6F72 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

unint64_t sub_1CB8340B0()
{
  unint64_t result;

  result = qword_1ED88DED8;
  if (!qword_1ED88DED8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB850F74, &type metadata for TrialFactorResolutionError);
    atomic_store(result, (unint64_t *)&qword_1ED88DED8);
  }
  return result;
}

uint64_t sub_1CB8340F4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TrialManager(a2, a1);
  return a2;
}

uint64_t sub_1CB834128(uint64_t a1)
{
  destroy for TrialManager(a1);
  return a1;
}

uint64_t storeEnumTagSinglePayload for TrialFactorResolutionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB8341A0 + 4 * byte_1CB850BFF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB8341D4 + 4 * byte_1CB850BFA[v4]))();
}

uint64_t sub_1CB8341D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB8341DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB8341E4);
  return result;
}

uint64_t sub_1CB8341F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB8341F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB8341FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB834204(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrialFactorResolutionError()
{
  return &type metadata for TrialFactorResolutionError;
}

unint64_t sub_1CB834224()
{
  unint64_t result;

  result = qword_1EF9A2360;
  if (!qword_1EF9A2360)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB850F4C, &type metadata for TrialFactorResolutionError);
    atomic_store(result, (unint64_t *)&qword_1EF9A2360);
  }
  return result;
}

_OWORD *TrialStatusResolver.__allocating_init()()
{
  _OWORD *v0;

  v0 = (_OWORD *)swift_allocObject();
  v0[8] = 0u;
  v0[9] = 0u;
  *(_OWORD *)((char *)v0 + 154) = 0u;
  sub_1CB83168C((uint64_t)(v0 + 1));
  return v0;
}

_OWORD *TrialPrivateLearningSuggestionsStatusResolver.__allocating_init()()
{
  _OWORD *v0;

  v0 = (_OWORD *)swift_allocObject();
  v0[8] = 0u;
  v0[9] = 0u;
  *(_OWORD *)((char *)v0 + 153) = 0u;
  sub_1CB831758((uint64_t)(v0 + 1));
  return v0;
}

_OWORD *TrialStatusResolver.init()()
{
  _OWORD *v0;
  _OWORD *v1;
  id v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _QWORD v7[5];
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v1 = v0;
  *(_OWORD *)((char *)v0 + 154) = 0u;
  v0[8] = 0u;
  v0[9] = 0u;
  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 112);
  v7[3] = sub_1CB786710();
  v7[4] = &off_1E86930A0;
  v7[0] = v2;
  sub_1CB79CBA8((uint64_t)v7, (uint64_t)v9);
  *(_QWORD *)&v8 = 0xD000000000000027;
  *((_QWORD *)&v8 + 1) = 0x80000001CB857B80;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  *((_QWORD *)&v10 + 1) = sub_1CB787E40(MEMORY[0x1E0DEE9D8]);
  sub_1CB8314BC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  v3 = v12;
  v1[5] = v11;
  v1[6] = v3;
  v1[7] = v13;
  v4 = v9[0];
  v1[1] = v8;
  v1[2] = v4;
  v5 = v10;
  v1[3] = v9[1];
  v1[4] = v5;
  return v1;
}

__n128 TrialStatusResolver.__allocating_init(trialManager:)(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __n128 result;

  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 154) = 0u;
  v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v2 + 96) = v3;
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a1 + 96);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v4;
  result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v2 + 64) = result;
  return result;
}

_OWORD *TrialStatusResolver.init(trialManager:)(_OWORD *a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)((char *)v1 + 154) = 0u;
  v1[8] = 0u;
  v1[9] = 0u;
  v2 = a1[5];
  v1[5] = a1[4];
  v1[6] = v2;
  v1[7] = a1[6];
  v3 = a1[1];
  v1[1] = *a1;
  v1[2] = v3;
  v4 = a1[3];
  v1[3] = a1[2];
  v1[4] = v4;
  return v1;
}

unint64_t sub_1CB834474()
{
  return sub_1CB834CE0(0xD00000000000002ELL, 0x80000001CB851F60, 0xD000000000000030, 0x80000001CB858430);
}

uint64_t sub_1CB8344AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unsigned __int8 a6)
{
  unint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1CB779A70(a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * v12);
      swift_bridgeObjectRelease();
      if (qword_1ED88E518 != -1)
        swift_once();
      v15 = sub_1CB8466D8();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED890248);
      v16 = v14;
      swift_bridgeObjectRetain_n();
      v17 = v16;
      v18 = sub_1CB8466C0();
      v19 = sub_1CB846C84();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v21 = swift_slowAlloc();
        v31 = v21;
        *(_DWORD *)v20 = 136315394;
        swift_bridgeObjectRetain();
        v30 = sub_1CB775A54(a4, a5, &v31);
        sub_1CB846E58();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v20 + 12) = 1024;
        v22 = objc_msgSend(v17, sel_BOOLeanValue, v30, v31);

        LODWORD(v29) = v22;
        sub_1CB846E58();

        _os_log_impl(&dword_1CB771000, v18, v19, "Trial: Factor %s retrieved from trial. Level is %{BOOL}d", (uint8_t *)v20, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v21, -1, -1);
        MEMORY[0x1D179FE84](v20, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a6 = objc_msgSend(v17, sel_BOOLeanValue, v29);

      return a6 & 1;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v23 = sub_1CB8466D8();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED890248);
  swift_bridgeObjectRetain_n();
  v24 = sub_1CB8466C0();
  v25 = sub_1CB846C90();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v31 = v27;
    *(_DWORD *)v26 = 136315394;
    swift_bridgeObjectRetain();
    sub_1CB775A54(a4, a5, &v31);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 1024;
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v24, v25, "Trial: Factor was not retrieved from trial. Using default level for %s: %{BOOL}d", (uint8_t *)v26, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v27, -1, -1);
    MEMORY[0x1D179FE84](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a6 & 1;
}

unint64_t sub_1CB834884()
{
  return sub_1CB834CE0(0xD000000000000021, 0x80000001CB851F90, 0xD000000000000021, 0x80000001CB858470);
}

uint64_t sub_1CB8348C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CB834EA0(a1, a2, a3, (void (*)(void))sub_1CB8348DC, (uint64_t)&unk_1E8693520, (uint64_t)sub_1CB834BD0);
}

uint64_t sub_1CB8348E0(uint64_t a1, unint64_t a2, unsigned __int8 a3)
{
  uint64_t v6;
  char v7;

  swift_beginAccess();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1CB8344AC(v6, a1, a2, a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t TrialStatusResolver.__deallocating_deinit()
{
  return sub_1CB8350F0();
}

unint64_t sub_1CB834964(uint64_t a1, uint64_t a2)
{
  return sub_1CB835160(a1, a2, 0xD00000000000002ELL, 0x80000001CB851F60, 0xD000000000000030, 0x80000001CB858430);
}

uint64_t sub_1CB83499C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 80);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 104);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB834A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CB8348C0(a1, a2, a3);
}

uint64_t sub_1CB834A38(uint64_t a1, unint64_t a2, unsigned __int8 a3)
{
  uint64_t v6;
  char v7;

  swift_beginAccess();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1CB8344AC(v6, a1, a2, a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7 & 1;
}

_OWORD *TrialPrivateLearningSuggestionsStatusResolver.init()()
{
  _OWORD *v0;
  _OWORD *v1;
  id v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _QWORD v7[5];
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v1 = v0;
  *(_OWORD *)((char *)v0 + 153) = 0u;
  v0[8] = 0u;
  v0[9] = 0u;
  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 276);
  v7[3] = sub_1CB786710();
  v7[4] = &off_1E86930A0;
  v7[0] = v2;
  sub_1CB79CBA8((uint64_t)v7, (uint64_t)v9);
  *(_QWORD *)&v8 = 0xD00000000000002ALL;
  *((_QWORD *)&v8 + 1) = 0x80000001CB857BB0;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  *((_QWORD *)&v10 + 1) = sub_1CB787E40(MEMORY[0x1E0DEE9D8]);
  sub_1CB8314BC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  v3 = v12;
  v1[5] = v11;
  v1[6] = v3;
  v1[7] = v13;
  v4 = v9[0];
  v1[1] = v8;
  v1[2] = v4;
  v5 = v10;
  v1[3] = v9[1];
  v1[4] = v5;
  return v1;
}

uint64_t sub_1CB834BAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB834BD0(void *a1)
{
  uint64_t v1;

  return sub_1CB831CB0(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t sub_1CB834BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB834C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB834C68(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A8C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CB834CA8()
{
  return sub_1CB834CE0(0xD00000000000001CLL, 0x80000001CB852070, 0xD00000000000001ELL, 0x80000001CB8584A0);
}

unint64_t sub_1CB834CE0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;

  swift_beginAccess();
  v8 = swift_bridgeObjectRetain();
  LOBYTE(a4) = sub_1CB8344AC(v8, a1, a2, a3, a4, 0);
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t sub_1CB834D68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 104);
  *(_QWORD *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB834DDC()
{
  swift_beginAccess();
  sub_1CB8314BC();
  return swift_endAccess();
}

uint64_t sub_1CB834E20()
{
  uint64_t v0;
  uint64_t countAndFlagsBits;
  _BYTE v3[112];

  swift_beginAccess();
  sub_1CB8340F4(v0 + 16, (uint64_t)v3);
  countAndFlagsBits = TrialManager.makeLogString()()._countAndFlagsBits;
  sub_1CB834128((uint64_t)v3);
  return countAndFlagsBits;
}

uint64_t sub_1CB834E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CB834EA0(a1, a2, a3, (void (*)(void))sub_1CB8348DC, (uint64_t)&unk_1E8693548, (uint64_t)sub_1CB837694);
}

uint64_t sub_1CB834EA0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  ValueMetadata *v11;
  _UNKNOWN **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **);
  uint64_t v17;
  _QWORD v20[2];
  uint64_t v21;
  _QWORD v22[3];
  ValueMetadata *v23;
  _UNKNOWN **v24;

  v7 = v6;
  a4();
  swift_beginAccess();
  sub_1CB8340F4(v6 + 16, (uint64_t)v20);
  sub_1CB79CBA8((uint64_t)&v21, (uint64_t)v22);
  v11 = v23;
  v12 = v24;
  __swift_project_boxed_opaque_existential_1(v22, (uint64_t)v23);
  v14 = v20[0];
  v13 = v20[1];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **))v12[2];
  swift_retain();
  v17 = v16(v14, v13, a1, a6, v15, v11, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  v23 = &type metadata for DefaultTrialNotificationToken;
  v24 = &off_1E8693368;
  v22[0] = v17;
  sub_1CB834128((uint64_t)v20);
  swift_beginAccess();
  sub_1CB834BD8((uint64_t)v22, v7 + 128);
  return swift_endAccess();
}

uint64_t sub_1CB834FEC()
{
  uint64_t v0;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  _BYTE v5[40];

  swift_beginAccess();
  sub_1CB834C20(v0 + 128, (uint64_t)&v2);
  if (*((_QWORD *)&v3 + 1))
  {
    sub_1CB7780BC(&v2, (uint64_t)v5);
    swift_beginAccess();
    sub_1CB8340F4(v0 + 16, (uint64_t)&v2);
    sub_1CB831DA0((uint64_t)v5);
    sub_1CB834128((uint64_t)&v2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  }
  else
  {
    sub_1CB834C68((uint64_t)&v2);
  }
  v4 = 0;
  v2 = 0u;
  v3 = 0u;
  swift_beginAccess();
  sub_1CB834BD8((uint64_t)&v2, v0 + 128);
  return swift_endAccess();
}

uint64_t TrialPrivateLearningSuggestionsStatusResolver.deinit()
{
  uint64_t v0;

  sub_1CB834128(v0 + 16);
  sub_1CB834C68(v0 + 128);
  return v0;
}

uint64_t TrialPrivateLearningSuggestionsStatusResolver.__deallocating_deinit()
{
  return sub_1CB8350F0();
}

uint64_t sub_1CB8350F0()
{
  uint64_t v0;

  sub_1CB834128(v0 + 16);
  sub_1CB834C68(v0 + 128);
  return swift_deallocClassInstance();
}

unint64_t sub_1CB835128(uint64_t a1, uint64_t a2)
{
  return sub_1CB835160(a1, a2, 0xD00000000000001CLL, 0x80000001CB852070, 0xD00000000000001ELL, 0x80000001CB8584A0);
}

unint64_t sub_1CB835160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10;

  swift_beginAccess();
  v10 = swift_bridgeObjectRetain();
  LOBYTE(a6) = sub_1CB8344AC(v10, a3, a4, a5, a6, 0);
  swift_bridgeObjectRelease();
  return a6 & 1;
}

uint64_t sub_1CB8351EC()
{
  swift_beginAccess();
  sub_1CB8314BC();
  return swift_endAccess();
}

uint64_t sub_1CB835234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CB834E84(a1, a2, a3);
}

uint64_t sub_1CB835254()
{
  return sub_1CB8348DC();
}

uint64_t TrialSiriUnderstandingTMDCStatusResolver.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  TrialSiriUnderstandingTMDCStatusResolver.init()();
  return v0;
}

_OWORD *TrialSiriUnderstandingTMDCStatusResolver.init()()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  __int128 v7;
  __int128 v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v1 = v0;
  v2 = sub_1CB846108();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_1CB8460B4();

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  CurrentLocales.init(deviceLocale:siriPreferences:)((uint64_t)v4, v6, (uint64_t)&v15);
  v7 = v17;
  v8 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1[1] = v7;
  v1[2] = v8;
  v9 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 115);
  v14[3] = sub_1CB786710();
  v14[4] = &off_1E86930A0;
  v14[0] = v9;
  sub_1CB79CBA8((uint64_t)v14, (uint64_t)&v16);
  *(_QWORD *)&v15 = 0xD000000000000017;
  *((_QWORD *)&v15 + 1) = 0x80000001CB8584C0;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  *((_QWORD *)&v18 + 1) = sub_1CB787E40(MEMORY[0x1E0DEE9D8]);
  sub_1CB8314BC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  v10 = v20;
  v1[7] = v19;
  v1[8] = v10;
  v1[9] = v21;
  v11 = v16;
  v1[3] = v15;
  v1[4] = v11;
  v12 = v18;
  v1[5] = v17;
  v1[6] = v12;
  return v1;
}

double sub_1CB8354AC()
{
  uint64_t v0;
  double v1;

  v1 = sub_1CB835508(*(_QWORD *)(v0 + 104), 0x7365726854703270, 0xEC000000646C6F68, 0x7365726854703270, 0xEE002928646C6F68, 2.0);
  return sub_1CB8360B8(v1, 2.0);
}

double sub_1CB835508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, double a6)
{
  unint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1CB779A70(a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * v12);
      swift_bridgeObjectRelease();
      if (qword_1ED88E518 != -1)
        swift_once();
      v15 = sub_1CB8466D8();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED890248);
      v16 = v14;
      swift_bridgeObjectRetain_n();
      v17 = v16;
      v18 = sub_1CB8466C0();
      v19 = sub_1CB846C84();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v21 = swift_slowAlloc();
        v32 = v21;
        *(_DWORD *)v20 = 136315394;
        swift_bridgeObjectRetain();
        v31 = sub_1CB775A54(a4, a5, &v32);
        sub_1CB846E58();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v20 + 12) = 2048;
        objc_msgSend(v17, sel_doubleValue, v31, v32);
        v30 = v22;
        sub_1CB846E58();

        _os_log_impl(&dword_1CB771000, v18, v19, "Trial: Factor %s retrieved from trial. Value is %f", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v21, -1, -1);
        MEMORY[0x1D179FE84](v20, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      objc_msgSend(v17, sel_doubleValue, v30);
      a6 = v28;

      return a6;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v23 = sub_1CB8466D8();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED890248);
  swift_bridgeObjectRetain_n();
  v24 = sub_1CB8466C0();
  v25 = sub_1CB846C90();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v32 = v27;
    *(_DWORD *)v26 = 136315394;
    swift_bridgeObjectRetain();
    sub_1CB775A54(a4, a5, &v32);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 2048;
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v24, v25, "Trial: Factor was not retrieved from trial. Using default level for %s: %f", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v27, -1, -1);
    MEMORY[0x1D179FE84](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a6;
}

double sub_1CB8358EC()
{
  uint64_t v0;
  double v1;

  v1 = sub_1CB835508(*(_QWORD *)(v0 + 104), 0xD000000000000016, 0x80000001CB8584E0, 0xD000000000000018, 0x80000001CB858500, 900.0);
  return sub_1CB8360B8(v1, 900.0);
}

double sub_1CB835954()
{
  uint64_t v0;
  double v1;

  v1 = sub_1CB835508(*(_QWORD *)(v0 + 104), 0xD000000000000028, 0x80000001CB858520, 0xD00000000000002ALL, 0x80000001CB858550, 450.0);
  return sub_1CB8360B8(v1, 450.0);
}

uint64_t sub_1CB8359BC()
{
  return sub_1CB835AD8(0x746E755263646D74, 0xEB00000000656D69, 0xD000000000000016, 0x80000001CB858580);
}

uint64_t sub_1CB8359F4()
{
  return sub_1CB835AD8(0xD000000000000016, 0x80000001CB8585A0, 0xD000000000000021, 0x80000001CB8585C0);
}

uint64_t sub_1CB835A2C()
{
  return sub_1CB835AD8(0x746E755263646D74, 0xEF6C6C6143656D69, 0xD00000000000001ALL, 0x80000001CB8585F0);
}

uint64_t sub_1CB835A68()
{
  return sub_1CB835AD8(0xD000000000000012, 0x80000001CB858610, 0xD00000000000001DLL, 0x80000001CB858630);
}

uint64_t sub_1CB835AA0()
{
  return sub_1CB835AD8(0xD000000000000017, 0x80000001CB858650, 0xD000000000000022, 0x80000001CB858670);
}

uint64_t sub_1CB835AD8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  char v5;

  v5 = sub_1CB8344AC(*(_QWORD *)(v4 + 104), a1, a2, a3, a4, 0);
  return sub_1CB8364AC(v5 & 1, 0);
}

void sub_1CB835B0C()
{
  uint64_t v0;

  sub_1CB835B5C(*(_QWORD *)(v0 + 104), 0x6F4C746567726174, 0xEC000000656C6163, 0x6F4C746567726174, 0xEE002928656C6163, 7104878, 0xE300000000000000);
}

void sub_1CB835B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  int v25;
  char **v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  NSObject *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;

  v14 = sub_1CB8466D8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1CB779A70(a2, a3);
    if ((v19 & 1) != 0)
    {
      v20 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * v18);
      swift_bridgeObjectRelease();
      if (qword_1ED88E518 != -1)
        swift_once();
      v21 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED890248);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v21, v14);
      v22 = v20;
      swift_bridgeObjectRetain_n();
      v23 = v22;
      v24 = sub_1CB8466C0();
      v25 = sub_1CB846C84();
      v44 = v24;
      v26 = &selRef_eventGeneratedRelativeToBootTimeTimestampNs;
      if (os_log_type_enabled(v24, (os_log_type_t)v25))
      {
        v43 = v25;
        v27 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v46 = v42;
        *(_DWORD *)v27 = 136315394;
        swift_bridgeObjectRetain();
        v45 = sub_1CB775A54(a4, a5, &v46);
        sub_1CB846E58();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 12) = 2080;
        v28 = objc_msgSend(v23, sel_stringValue);
        if (!v28)
        {
LABEL_19:

          __break(1u);
          return;
        }
        v29 = v28;
        v30 = sub_1CB8468A0();
        v32 = v31;

        v45 = sub_1CB775A54(v30, v32, &v46);
        sub_1CB846E58();

        swift_bridgeObjectRelease();
        v33 = v44;
        _os_log_impl(&dword_1CB771000, v44, (os_log_type_t)v43, "Trial: Factor %s retrieved from trial. Value is %s", (uint8_t *)v27, 0x16u);
        v34 = v42;
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v34, -1, -1);
        MEMORY[0x1D179FE84](v27, -1, -1);

        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        v26 = &selRef_eventGeneratedRelativeToBootTimeTimestampNs;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      }
      v39 = objc_msgSend(v23, v26[15]);
      if (v39)
      {
        v40 = v39;
        sub_1CB8468A0();

        return;
      }
      __break(1u);
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED890248);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v35 = sub_1CB8466C0();
  v36 = sub_1CB846C90();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v46 = v38;
    *(_DWORD *)v37 = 136315394;
    swift_bridgeObjectRetain();
    v45 = sub_1CB775A54(a4, a5, &v46);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2080;
    swift_bridgeObjectRetain();
    v45 = sub_1CB775A54(a6, a7, &v46);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v35, v36, "Trial: Factor was not retrieved from trial. Using default level for %s: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v38, -1, -1);
    MEMORY[0x1D179FE84](v37, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
}

uint64_t sub_1CB836068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 136);
  *(_QWORD *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1CB8360B8(double a1, double a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  sub_1CB835B5C(v2[13], 0x6F4C746567726174, 0xEC000000656C6163, 0x6F4C746567726174, 0xEE002928656C6163, 7104878, 0xE300000000000000);
  v6 = v5;
  v8 = v7;
  v10 = v2[2];
  v9 = v2[3];
  v23 = v10;
  v24 = v9;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v6 == v10 && v8 == v24)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1ED88E518 != -1)
        swift_once();
      v12 = sub_1CB8466D8();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED890248);
      swift_retain_n();
      swift_bridgeObjectRetain();
      v13 = sub_1CB8466C0();
      v14 = sub_1CB846C84();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v21 = swift_slowAlloc();
        v22 = v21;
        *(_DWORD *)v15 = 136315906;
        swift_bridgeObjectRetain();
        v23 = sub_1CB775A54(v6, v8, &v22);
        sub_1CB846E58();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2080;
        v23 = v10;
        v24 = v9;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1CB846954();
        swift_bridgeObjectRetain();
        sub_1CB846954();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v23 = sub_1CB775A54(v23, v24, &v22);
        sub_1CB846E58();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 22) = 2080;
        v16 = sub_1CB846BC4();
        v23 = sub_1CB775A54(v16, v17, &v22);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 32) = 2080;
        v18 = sub_1CB846BC4();
        v23 = sub_1CB775A54(v18, v19, &v22);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CB771000, v13, v14, "targetLocale: %s is not equal to siriLocale: %s, using: default:%s instead of factorLevel:%s", (uint8_t *)v15, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v21, -1, -1);
        MEMORY[0x1D179FE84](v15, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      return a2;
    }
  }
  return a1;
}

uint64_t sub_1CB8364AC(char a1, char a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  os_log_type_t type;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  sub_1CB835B5C(v2[13], 0x6F4C746567726174, 0xEC000000656C6163, 0x6F4C746567726174, 0xEE002928656C6163, 7104878, 0xE300000000000000);
  v6 = v5;
  v8 = v7;
  v9 = v2[2];
  v10 = v2[3];
  v26 = v9;
  v27 = v10;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v6 == v9 && v8 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v24 = a1;
    v11 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      a1 = v24;
    }
    else
    {
      if (qword_1ED88E518 != -1)
        swift_once();
      v12 = sub_1CB8466D8();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED890248);
      swift_retain_n();
      swift_bridgeObjectRetain();
      v13 = sub_1CB8466C0();
      v14 = sub_1CB846C84();
      if (os_log_type_enabled(v13, v14))
      {
        v23 = a2;
        v15 = swift_slowAlloc();
        v22 = swift_slowAlloc();
        v25 = v22;
        *(_DWORD *)v15 = 136315906;
        type = v14;
        swift_bridgeObjectRetain();
        v26 = sub_1CB775A54(v6, v8, &v25);
        sub_1CB846E58();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2080;
        v26 = v9;
        v27 = v10;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1CB846954();
        swift_bridgeObjectRetain();
        sub_1CB846954();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v26 = sub_1CB775A54(v26, v27, &v25);
        sub_1CB846E58();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 22) = 2080;
        if ((v23 & 1) != 0)
          v16 = 1702195828;
        else
          v16 = 0x65736C6166;
        if ((v23 & 1) != 0)
          v17 = 0xE400000000000000;
        else
          v17 = 0xE500000000000000;
        v26 = sub_1CB775A54(v16, v17, &v25);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 32) = 2080;
        if ((v24 & 1) != 0)
          v18 = 1702195828;
        else
          v18 = 0x65736C6166;
        if ((v24 & 1) != 0)
          v19 = 0xE400000000000000;
        else
          v19 = 0xE500000000000000;
        v26 = sub_1CB775A54(v18, v19, &v25);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CB771000, v13, type, "targetLocale: %s is not equal to siriLocale: %s, using: default:%s instead of factorLevel:%s", (uint8_t *)v15, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v22, -1, -1);
        MEMORY[0x1D179FE84](v15, -1, -1);

        a1 = v23;
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        a1 = a2;
      }
    }
  }
  return a1 & 1;
}

uint64_t TrialSiriUnderstandingTMDCStatusResolver.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CB834128(v0 + 48);
  return v0;
}

uint64_t TrialSiriUnderstandingTMDCStatusResolver.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CB834128(v0 + 48);
  return swift_deallocClassInstance();
}

double sub_1CB836954()
{
  uint64_t v0;
  double v1;

  v1 = sub_1CB835508(*(_QWORD *)(*(_QWORD *)v0 + 104), 0x7365726854703270, 0xEC000000646C6F68, 0x7365726854703270, 0xEE002928646C6F68, 2.0);
  return sub_1CB8360B8(v1, 2.0);
}

void sub_1CB8369C0()
{
  uint64_t v0;
  double v1;

  v1 = sub_1CB835508(*(_QWORD *)(*(_QWORD *)v0 + 104), 0xD000000000000016, 0x80000001CB8584E0, 0xD000000000000018, 0x80000001CB858500, 900.0);
  sub_1CB8360B8(v1, 900.0);
}

void sub_1CB836A38()
{
  uint64_t v0;
  double v1;

  v1 = sub_1CB835508(*(_QWORD *)(*(_QWORD *)v0 + 104), 0xD000000000000028, 0x80000001CB858520, 0xD00000000000002ALL, 0x80000001CB858550, 450.0);
  sub_1CB8360B8(v1, 450.0);
}

uint64_t sub_1CB836AB0(uint64_t a1, uint64_t a2)
{
  return sub_1CB836BCC(a1, a2, 0x746E755263646D74, 0xEB00000000656D69, 0xD000000000000016, 0x80000001CB858580);
}

uint64_t sub_1CB836AE8(uint64_t a1, uint64_t a2)
{
  return sub_1CB836BCC(a1, a2, 0xD000000000000016, 0x80000001CB8585A0, 0xD000000000000021, 0x80000001CB8585C0);
}

uint64_t sub_1CB836B20(uint64_t a1, uint64_t a2)
{
  return sub_1CB836BCC(a1, a2, 0x746E755263646D74, 0xEF6C6C6143656D69, 0xD00000000000001ALL, 0x80000001CB8585F0);
}

uint64_t sub_1CB836B5C(uint64_t a1, uint64_t a2)
{
  return sub_1CB836BCC(a1, a2, 0xD000000000000012, 0x80000001CB858610, 0xD00000000000001DLL, 0x80000001CB858630);
}

uint64_t sub_1CB836B94(uint64_t a1, uint64_t a2)
{
  return sub_1CB836BCC(a1, a2, 0xD000000000000017, 0x80000001CB858650, 0xD000000000000022, 0x80000001CB858670);
}

uint64_t sub_1CB836BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  char v7;

  v7 = sub_1CB8344AC(*(_QWORD *)(*(_QWORD *)v6 + 104), a3, a4, a5, a6, 0);
  return sub_1CB8364AC(v7 & 1, 0) & 1;
}

void sub_1CB836C14()
{
  uint64_t v0;

  sub_1CB835B5C(*(_QWORD *)(*(_QWORD *)v0 + 104), 0x6F4C746567726174, 0xEC000000656C6163, 0x6F4C746567726174, 0xEE002928656C6163, 7104878, 0xE300000000000000);
}

uint64_t RECTIFITrialStatusResolver.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  RECTIFITrialStatusResolver.init()();
  return v0;
}

_OWORD *RECTIFITrialStatusResolver.init()()
{
  uint64_t v0;
  _OWORD *v1;
  id v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _QWORD v7[5];
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v1 = (_OWORD *)v0;
  *(_WORD *)(v0 + 128) = 0;
  *(_BYTE *)(v0 + 130) = 0;
  *(_OWORD *)(v0 + 136) = xmmword_1CB850FC0;
  *(_OWORD *)(v0 + 152) = xmmword_1CB850FD0;
  *(_OWORD *)(v0 + 168) = xmmword_1CB8501B0;
  *(_QWORD *)(v0 + 184) = 0xD000000000000017;
  *(_QWORD *)(v0 + 192) = 0x80000001CB8586A0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 115);
  v7[3] = sub_1CB786710();
  v7[4] = &off_1E86930A0;
  v7[0] = v2;
  sub_1CB79CBA8((uint64_t)v7, (uint64_t)v9);
  *(_QWORD *)&v8 = 0xD00000000000001ALL;
  *((_QWORD *)&v8 + 1) = 0x80000001CB8586C0;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  *((_QWORD *)&v10 + 1) = sub_1CB787E40(MEMORY[0x1E0DEE9D8]);
  sub_1CB8314BC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  v3 = v12;
  v1[5] = v11;
  v1[6] = v3;
  v1[7] = v13;
  v4 = v9[0];
  v1[1] = v8;
  v1[2] = v4;
  v5 = v10;
  v1[3] = v9[1];
  v1[4] = v5;
  return v1;
}

uint64_t sub_1CB836DC8()
{
  uint64_t v0;

  return sub_1CB8344AC(*(_QWORD *)(v0 + 72), 0xD000000000000021, 0x80000001CB8586E0, 0xD000000000000023, 0x80000001CB858710, 0);
}

uint64_t sub_1CB836E08()
{
  uint64_t v0;

  return sub_1CB8344AC(*(_QWORD *)(v0 + 72), 0xD00000000000001FLL, 0x80000001CB858740, 0xD000000000000021, 0x80000001CB858760, 0);
}

uint64_t sub_1CB836E48()
{
  uint64_t v0;

  return sub_1CB8344AC(*(_QWORD *)(v0 + 72), 0xD000000000000019, 0x80000001CB858790, 0xD000000000000021, 0x80000001CB8587B0, 0);
}

double sub_1CB836E88()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(v0 + 72), 0xD000000000000013, 0x80000001CB8587E0, 0xD000000000000018, 0x80000001CB858800, 0.7);
}

double sub_1CB836ED0()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(v0 + 72), 0xD000000000000016, 0x80000001CB858820, 0xD00000000000001BLL, 0x80000001CB858840, 0.4);
}

double sub_1CB836F14()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(v0 + 72), 0x6F707075536E696DLL, 0xEA00000000007472, 0x75536E694D746567, 0xEF292874726F7070, 3.0);
}

double sub_1CB836F58()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(v0 + 72), 0x747461504B706F74, 0xEC000000736E7265, 0xD000000000000011, 0x80000001CB858860, 5.0);
}

double sub_1CB836F98()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(v0 + 72), 0xD000000000000010, 0x80000001CB858880, 0xD000000000000015, 0x80000001CB8588A0, 5.0);
}

double sub_1CB836FDC()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(v0 + 72), 0xD00000000000001FLL, 0x80000001CB8588C0, 0xD000000000000024, 0x80000001CB8588E0, 60.0);
}

void sub_1CB837020()
{
  uint64_t v0;

  sub_1CB835B5C(*(_QWORD *)(v0 + 72), 0xD000000000000018, 0x80000001CB858910, 0xD00000000000001DLL, 0x80000001CB858930, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
}

uint64_t RECTIFITrialStatusResolver.deinit()
{
  uint64_t v0;

  sub_1CB834128(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RECTIFITrialStatusResolver.__deallocating_deinit()
{
  uint64_t v0;

  sub_1CB834128(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB8370B4()
{
  uint64_t v0;

  return sub_1CB8344AC(*(_QWORD *)(*(_QWORD *)v0 + 72), 0xD000000000000021, 0x80000001CB8586E0, 0xD000000000000023, 0x80000001CB858710, 0);
}

uint64_t sub_1CB8370F8()
{
  uint64_t v0;

  return sub_1CB8344AC(*(_QWORD *)(*(_QWORD *)v0 + 72), 0xD00000000000001FLL, 0x80000001CB858740, 0xD000000000000021, 0x80000001CB858760, 0);
}

uint64_t sub_1CB83713C()
{
  uint64_t v0;

  return sub_1CB8344AC(*(_QWORD *)(*(_QWORD *)v0 + 72), 0xD000000000000019, 0x80000001CB858790, 0xD000000000000021, 0x80000001CB8587B0, 0);
}

double sub_1CB837180()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(*(_QWORD *)v0 + 72), 0xD000000000000013, 0x80000001CB8587E0, 0xD000000000000018, 0x80000001CB858800, 0.7);
}

double sub_1CB8371CC()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(*(_QWORD *)v0 + 72), 0xD000000000000016, 0x80000001CB858820, 0xD00000000000001BLL, 0x80000001CB858840, 0.4);
}

double sub_1CB837214()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(*(_QWORD *)v0 + 72), 0x6F707075536E696DLL, 0xEA00000000007472, 0x75536E694D746567, 0xEF292874726F7070, 3.0);
}

double sub_1CB83725C()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(*(_QWORD *)v0 + 72), 0x747461504B706F74, 0xEC000000736E7265, 0xD000000000000011, 0x80000001CB858860, 5.0);
}

double sub_1CB8372A0()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(*(_QWORD *)v0 + 72), 0xD000000000000010, 0x80000001CB858880, 0xD000000000000015, 0x80000001CB8588A0, 5.0);
}

double sub_1CB8372E8()
{
  uint64_t v0;

  return sub_1CB835508(*(_QWORD *)(*(_QWORD *)v0 + 72), 0xD00000000000001FLL, 0x80000001CB8588C0, 0xD000000000000024, 0x80000001CB8588E0, 60.0);
}

void sub_1CB837330()
{
  uint64_t v0;

  sub_1CB835B5C(*(_QWORD *)(*(_QWORD *)v0 + 72), 0xD000000000000018, 0x80000001CB858910, 0xD00000000000001DLL, 0x80000001CB858930, *(_QWORD *)(*(_QWORD *)v0 + 184), *(_QWORD *)(*(_QWORD *)v0 + 192));
}

uint64_t dispatch thunk of TrialStatusUpdating.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TrialStatusUpdating.addUpdateHandler(queue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of TrialStatusUpdating.removeUpdateHandler()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TrialStatusResolving.isTrialFactorEnabled(_:defaultState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of TrialPICSStatusResolving.isPICSRestatementAndSuccessfulPhoneCallEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TrialPICSStatusResolving.activePICSRuntimeEnrollment()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.isRECTIFIPatternExtractionEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getSimilarityThreshold()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getSimilarityMinThreshold()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getMinSupport()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getTopKPatterns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getDaysUntilNextRun()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getDaysAfterRemoveStaleRECTIFIData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getRECTIFICoreDataStoreName()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsPlatformStatusResolving.isEventBasedSchedulerEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.p2pThreshold()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.asrConfidenceThreshold()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.asrConfidenceThresholdForOnlyContactName()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.isTmdcRuntimeEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.isTmdcRuntimeCorrectionsEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.isTmdcRuntimeCallEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.isTmdcRuntimeMessageEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.isTmdcRuntimeLocalStorageEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.targetLocale()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t type metadata accessor for TrialStatusResolver()
{
  return objc_opt_self();
}

uint64_t method lookup function for TrialStatusResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TrialStatusResolver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of TrialStatusResolver.__allocating_init(trialManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of TrialStatusResolver.isPICSRestatementAndSuccessfulPhoneCallEnabled()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of TrialStatusResolver.isPICSRuntimeInSiriVocabEnabled()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of TrialStatusResolver.activePICSRuntimeEnrollment()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of TrialStatusResolver.addUpdateHandler(queue:using:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of TrialStatusResolver.removeUpdateHandler()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of TrialStatusResolver.isTrialFactorEnabled(_:defaultState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t type metadata accessor for TrialPrivateLearningSuggestionsStatusResolver()
{
  return objc_opt_self();
}

uint64_t method lookup function for TrialPrivateLearningSuggestionsStatusResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.activeSiriPrivateLearningSuggestionsEnrollment()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.refresh()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.makeLogString()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.addUpdateHandler(queue:using:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.removeUpdateHandler()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t type metadata accessor for TrialSiriUnderstandingTMDCStatusResolver()
{
  return objc_opt_self();
}

uint64_t method lookup function for TrialSiriUnderstandingTMDCStatusResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.p2pThreshold()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.asrConfidenceThreshold()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.asrConfidenceThresholdForOnlyContactName()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.isTmdcRuntimeEnabled()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.isTmdcRuntimeCorrectionsEnabled()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.isTmdcRuntimeCallEnabled()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.isTmdcRuntimeMessageEnabled()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.isTmdcRuntimeLocalStorageEnabled()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.targetLocale()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.activeSiriUnderstandingTMDCEnrollment()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t type metadata accessor for RECTIFITrialStatusResolver()
{
  return objc_opt_self();
}

uint64_t method lookup function for RECTIFITrialStatusResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.shouldDeleteOldCoreDataVersions()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getSimilarityThreshold()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getSimilarityMinThreshold()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getMinSupport()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getTopKPatterns()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getDaysUntilNextRun()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getDaysAfterRemoveStaleRECTIFIData()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getRECTIFICoreDataStoreName()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t UserFeedbackLearnedEntitySuggestion.init(entity:needsConfirmation:suggestionId:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a4 = a1;
  *(_BYTE *)(a4 + 8) = a2;
  v5 = a4 + *(int *)(type metadata accessor for UserFeedbackLearnedEntitySuggestion() + 24);
  v6 = sub_1CB846084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t type metadata accessor for UserFeedbackLearnedEntitySuggestion()
{
  uint64_t result;

  result = qword_1EF9A23E0;
  if (!qword_1EF9A23E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t UserFeedbackLearnedEntitySuggestion.entity.getter()
{
  return swift_retain();
}

uint64_t UserFeedbackLearnedEntitySuggestion.needsConfirmation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t UserFeedbackLearnedEntitySuggestion.suggestionId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UserFeedbackLearnedEntitySuggestion() + 24);
  v4 = sub_1CB846084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1CB837780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[24];
  uint64_t v5;

  swift_beginAccess();
  sub_1CB785AC8(v1 + 16, (uint64_t)v4, &qword_1EF9A2380);
  if (v5 != 1)
    return sub_1CB839CE8((uint64_t)v4, a1);
  sub_1CB785B54((uint64_t)v4, &qword_1EF9A2380);
  sub_1CB837848(a1);
  sub_1CB785AC8(a1, (uint64_t)v4, &qword_1EF9A2370);
  swift_beginAccess();
  sub_1CB839CA0((uint64_t)v4, v1 + 16);
  return swift_endAccess();
}

double sub_1CB837848@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  double result;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;

  v2 = static Config.universalSuggestionsStoreFilePath.getter();
  v4 = v3;
  v5 = type metadata accessor for UniversalSuggestionsStoreCoreData();
  swift_allocObject();
  v6 = sub_1CB80165C(v2, v4, 0);
  if (v6)
  {
    v7 = v6;
    if (qword_1ED88E518 != -1)
      swift_once();
    v8 = sub_1CB8466D8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED890248);
    v9 = sub_1CB8466C0();
    v10 = sub_1CB846C84();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1CB771000, v9, v10, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: lazily initialised storage", v11, 2u);
      MEMORY[0x1D179FE84](v11, -1, -1);
    }

    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = &protocol witness table for UniversalSuggestionsStoreCoreData;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v13 = sub_1CB8466D8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED890248);
    v14 = sub_1CB8466C0();
    v15 = sub_1CB846C90();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1CB771000, v14, v15, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Failed to initialise Universal Suggestions store", v16, 2u);
      MEMORY[0x1D179FE84](v16, -1, -1);
    }

    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t UserFeedbackLearnedEntitySuggester.__allocating_init()()
{
  id v0;
  void *v1;
  unsigned int v2;
  ValueMetadata *v3;
  _UNKNOWN **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;
  __int128 v12;
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  v3 = &type metadata for SiriAnalyticsSharedPLUSEventLogTarget;
  if (v2)
    v3 = &type metadata for DisabledPLUSEventLogTarget;
  v4 = &protocol witness table for DisabledPLUSEventLogTarget;
  if (!v2)
    v4 = &protocol witness table for SiriAnalyticsSharedPLUSEventLogTarget;
  v13 = v3;
  v14 = v4;
  v5 = type metadata accessor for SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager();
  swift_allocObject();
  v10 = v5;
  v11 = &protocol witness table for FeatureManager;
  *(_QWORD *)&v9 = SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.init()();
  type metadata accessor for UserFeedbackLearnedEntitySuggester();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_OWORD *)(v6 + 40) = xmmword_1CB84DCC0;
  type metadata accessor for PLUSUniversalSuggestionsRuntimeLogger();
  v7 = swift_allocObject();
  sub_1CB7780BC(&v12, v7 + 16);
  *(_QWORD *)(v6 + 56) = v7;
  sub_1CB7780BC(&v9, v6 + 64);
  return v6;
}

uint64_t type metadata accessor for UserFeedbackLearnedEntitySuggester()
{
  return objc_opt_self();
}

uint64_t sub_1CB837B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t *, uint64_t, uint64_t);
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint8_t *v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  _BOOL4 v99;
  uint64_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  os_signpost_type_t v116;
  uint64_t v117;
  const char *v118;
  char *v119;
  uint64_t v120;
  uint8_t *v121;
  os_signpost_id_t v122;
  void (*v123)(char *, uint64_t);
  char v124;
  uint64_t v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  _BOOL4 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t);
  uint64_t v134;
  os_signpost_type_t v135;
  char v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  const char *v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  NSObject *v158;
  os_signpost_type_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  const char *v163;
  char *v164;
  uint64_t v165;
  uint8_t *v166;
  os_signpost_id_t v167;
  void (*v168)(char *, uint64_t);
  char *v169;
  uint64_t v170;
  uint8_t *v171;
  os_signpost_id_t v172;
  void (*v173)(char *, uint64_t);
  uint64_t v174;
  NSObject *v175;
  os_log_type_t v176;
  _BOOL4 v177;
  uint64_t v178;
  uint8_t *v179;
  uint64_t v180;
  char v181;
  char *v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  double v188;
  char *v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t inited;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  NSObject *v201;
  os_log_type_t v202;
  _BOOL4 v203;
  uint64_t v204;
  uint8_t *v205;
  uint64_t v206;
  uint64_t v207;
  void (*v208)(char *, char *, uint64_t);
  void (*v209)(uint64_t, char *, uint64_t);
  uint64_t v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  void (*v228)(uint64_t, uint64_t);
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  char v244;
  uint64_t v245;
  uint64_t v246;
  char v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  _UNKNOWN **v253;
  __int128 v254;

  v5 = v4;
  v235 = a2;
  v241 = a4;
  v8 = sub_1CB846684();
  v236 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v234 = (uint64_t)&v207 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v221 = (char *)&v207 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v219 = (char *)&v207 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v216 = (char *)&v207 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v212 = (char *)&v207 - v18;
  MEMORY[0x1E0C80A78](v17);
  v211 = (char *)&v207 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EEB8);
  MEMORY[0x1E0C80A78](v20);
  v224 = (char *)&v207 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = type metadata accessor for UniversalSuggestionCandidate(0);
  v226 = *(_QWORD *)(v227 - 8);
  v22 = MEMORY[0x1E0C80A78](v227);
  v214 = (char *)&v207 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v232 = (char *)&v207 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v220 = (uint64_t)&v207 - v27;
  MEMORY[0x1E0C80A78](v26);
  v222 = (uint64_t)&v207 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v207 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = sub_1CB846084();
  v238 = *(_QWORD *)(v237 - 8);
  v33 = MEMORY[0x1E0C80A78](v237);
  v213 = (char *)&v207 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v207 - v36;
  MEMORY[0x1E0C80A78](v35);
  v233 = (char *)&v207 - v38;
  v242 = sub_1CB846654();
  v239 = *(_QWORD *)(v242 - 8);
  v39 = MEMORY[0x1E0C80A78](v242);
  v41 = (char *)&v207 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x1E0C80A78](v39);
  v225 = (char *)&v207 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v223 = (char *)&v207 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v218 = (char *)&v207 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v217 = (char *)&v207 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v215 = (char *)&v207 - v51;
  MEMORY[0x1E0C80A78](v50);
  v240 = (char *)&v207 - v52;
  sub_1CB8462F4();
  v53 = swift_dynamicCastClass();
  if (v53)
  {
    v54 = v53;
    v210 = v8;
    v55 = qword_1EF99C3A0;
    v230 = a1;
    swift_retain();
    if (v55 != -1)
      swift_once();
    v56 = sub_1CB846678();
    v57 = __swift_project_value_buffer(v56, (uint64_t)qword_1EF9A8990);
    sub_1CB84666C();
    v58 = (uint64_t)v240;
    sub_1CB846630();
    v229 = v57;
    v231 = sub_1CB7BE7AC("runUniversalSuggestionsQuery", 28, 2, v58);
    v228 = *(void (**)(uint64_t, uint64_t))(v239 + 8);
    v228(v58, v242);
    if (a3)
    {
      sub_1CB846024();
      v59 = v238;
      v60 = v237;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v238 + 48))(v32, 1, v237) != 1)
      {
        v61 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
        v62 = v59;
        v63 = v233;
        v61(v233, v32, v60);
        sub_1CB79CBA8(v5[7] + 16, (uint64_t)&v254);
        v208 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
        v208(v37, v63, v60);
        type metadata accessor for PLUSUniversalSuggestionsRuntimeRequestLogger();
        v64 = swift_allocObject();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v64+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId, 1, 1, v29);
        v234 = v64 + 16;
        sub_1CB7780BC(&v254, v64 + 16);
        v209 = (void (*)(uint64_t, char *, uint64_t))v61;
        v61((char *)(v64+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId), v37, v60);
        v235 = v64;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v64 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, 1, 1, v60);
        v65 = v5[11];
        v66 = v5[12];
        __swift_project_boxed_opaque_existential_1(v5 + 8, v65);
        if (qword_1EF99C388 != -1)
          swift_once();
        v67 = qword_1EF99CC10;
        v68 = type metadata accessor for AnyFeature();
        v252 = v68;
        v253 = &protocol witness table for AnyFeature;
        v250 = v67;
        v69 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v66 + 8);
        swift_retain();
        v70 = v69(&v250, v65, v66);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v250);
        v71 = v5[11];
        v72 = v5[12];
        __swift_project_boxed_opaque_existential_1(v5 + 8, v71);
        if (qword_1ED8891F0[0] != -1)
          swift_once();
        v252 = v68;
        v253 = &protocol witness table for AnyFeature;
        v250 = qword_1ED8891E8;
        v73 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v72 + 8);
        swift_retain();
        LOBYTE(v73) = v73(&v250, v71, v72);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v250);
        if ((v73 & 1) != 0)
        {
          swift_retain();
          sub_1CB837780((uint64_t)&v250);
          if (v252)
          {
            sub_1CB79CBA8((uint64_t)&v250, (uint64_t)&v246);
            sub_1CB785B54((uint64_t)&v250, &qword_1EF9A2370);
            v74 = v248;
            v75 = v249;
            __swift_project_boxed_opaque_existential_1(&v246, v248);
            v245 = v54;
            v76 = (uint64_t)v224;
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v75 + 24))(&v245, v74, v75);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v246);
            v77 = v227;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v226 + 48))(v76, 1, v227) != 1)
            {
              LODWORD(v234) = v70;
              v78 = v222;
              sub_1CB839780(v76, v222);
              v79 = (char *)(v78 + *(int *)(v77 + 24));
              v80 = type metadata accessor for UniversalCandidate(0);
              v81 = qword_1ED88E518;
              v225 = *(char **)&v79[*(int *)(v80 + 20)];
              swift_retain();
              if (v81 != -1)
                swift_once();
              v82 = sub_1CB8466D8();
              v83 = __swift_project_value_buffer(v82, (uint64_t)qword_1ED890248);
              v84 = v220;
              sub_1CB839800(v78, v220);
              v224 = (char *)v83;
              v85 = sub_1CB8466C0();
              v86 = sub_1CB846C84();
              if (os_log_type_enabled(v85, v86))
              {
                v87 = swift_slowAlloc();
                v223 = v79;
                v88 = (uint8_t *)v87;
                v89 = swift_slowAlloc();
                v246 = v89;
                *(_DWORD *)v88 = 136315138;
                v221 = (char *)(v88 + 4);
                v250 = *(_QWORD *)(v84 + *(int *)(v227 + 24) + *(int *)(v80 + 20));
                swift_retain();
                v90 = sub_1CB7B696C();
                v92 = v91;
                swift_release();
                v250 = v90;
                v251 = v92;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EEC0);
                v93 = sub_1CB8468DC();
                v250 = sub_1CB775A54(v93, v94, &v246);
                v78 = v222;
                sub_1CB846E58();
                swift_bridgeObjectRelease();
                sub_1CB8397C4(v220);
                _os_log_impl(&dword_1CB771000, v85, v86, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Found %s", v88, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1D179FE84](v89, -1, -1);
                v95 = v88;
                v79 = v223;
                MEMORY[0x1D179FE84](v95, -1, -1);
              }
              else
              {
                sub_1CB8397C4(v84);
              }

              v174 = *(int *)(v80 + 24);
              if (*(double *)&v79[v174] >= 0.0)
              {
                v182 = v79;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2378);
                v183 = *(_QWORD *)(v226 + 72);
                v184 = (*(unsigned __int8 *)(v226 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
                v185 = swift_allocObject();
                *(_OWORD *)(v185 + 16) = xmmword_1CB848A50;
                v186 = v185 + v184;
                sub_1CB839800(v78, v185 + v184);
                sub_1CB7B3290(v185);
                v187 = v234;
                sub_1CB7B373C(v234 & 1);
                if ((v187 & 1) != 0)
                {
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  (*(void (**)(char *, uint64_t))(v238 + 8))(v233, v237);
                  v188 = *(double *)&v182[v174];
                  v189 = v214;
                  sub_1CB839800(v78, (uint64_t)v214);
                  v190 = v241;
                  if (v188 >= 0.4)
                    v191 = *v189;
                  else
                    v191 = 1;
                  v151 = v236;
                  sub_1CB8397C4((uint64_t)v189);
                  v198 = v213;
                  v199 = v237;
                  v208(v213, v182, v237);
                  sub_1CB8397C4(v78);
                  *(_QWORD *)v190 = v225;
                  *(_BYTE *)(v190 + 8) = v191;
                  v200 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
                  v209(v190 + *(int *)(v200 + 24), v198, v199);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v200 - 8) + 56))(v190, 0, 1, v200);
                  v158 = sub_1CB84666C();
                  v153 = v215;
                  sub_1CB846690();
                  v159 = sub_1CB846D5C();
                  if ((sub_1CB846E28() & 1) != 0)
                  {
                    swift_retain();
                    v160 = &v243;
                    goto LABEL_57;
                  }
                }
                else
                {
                  v192 = *(_QWORD *)(v185 + 16);
                  if (v192)
                  {
                    swift_bridgeObjectRetain();
                    v193 = v227;
                    v194 = (uint64_t)v232;
                    do
                    {
                      sub_1CB839800(v186, v194);
                      v195 = &v232[*(int *)(v193 + 24)];
                      type metadata accessor for PLUSSuggestionMetadata();
                      inited = swift_initStackObject();
                      *(_WORD *)(inited + 16) = 512;
                      v197 = (uint64_t)v195;
                      v194 = (uint64_t)v232;
                      sub_1CB7B3B80(v197, inited);
                      sub_1CB8397C4(v194);
                      v186 += v183;
                      --v192;
                    }
                    while (v192);
                    swift_bridgeObjectRelease_n();
                    v78 = v222;
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                  }
                  v201 = sub_1CB8466C0();
                  v202 = sub_1CB846C84();
                  v203 = os_log_type_enabled(v201, v202);
                  v151 = v236;
                  v204 = v241;
                  if (v203)
                  {
                    v205 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)v205 = 0;
                    _os_log_impl(&dword_1CB771000, v201, v202, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Surfacing of suggestions is disabled, skipping providing a result", v205, 2u);
                    MEMORY[0x1D179FE84](v205, -1, -1);
                  }

                  swift_release();
                  swift_release();
                  swift_release();
                  sub_1CB8397C4(v78);
                  (*(void (**)(char *, uint64_t))(v238 + 8))(v233, v237);
                  v206 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v206 - 8) + 56))(v204, 1, 1, v206);
                  v158 = sub_1CB84666C();
                  v153 = v217;
                  sub_1CB846690();
                  v159 = sub_1CB846D5C();
                  if ((sub_1CB846E28() & 1) != 0)
                  {
                    swift_retain();
                    v160 = &v244;
                    goto LABEL_57;
                  }
                }
              }
              else
              {
                v175 = sub_1CB8466C0();
                v176 = sub_1CB846C84();
                v177 = os_log_type_enabled(v175, v176);
                v178 = v241;
                if (v177)
                {
                  v179 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v179 = 0;
                  _os_log_impl(&dword_1CB771000, v175, v176, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Dropping suggestion candidate because it has a low score", v179, 2u);
                  MEMORY[0x1D179FE84](v179, -1, -1);
                }

                sub_1CB7B3290(MEMORY[0x1E0DEE9D8]);
                sub_1CB7B373C(v234 & 1);
                swift_release();
                swift_release();
                swift_release();
                sub_1CB8397C4(v78);
                (*(void (**)(char *, uint64_t))(v238 + 8))(v233, v237);
                v180 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v180 - 8) + 56))(v178, 1, 1, v180);
                v158 = sub_1CB84666C();
                v153 = v218;
                sub_1CB846690();
                v159 = sub_1CB846D5C();
                v181 = sub_1CB846E28();
                v151 = v236;
                if ((v181 & 1) != 0)
                {
                  swift_retain();
                  v160 = &v247;
                  goto LABEL_57;
                }
              }
LABEL_84:

              v228((uint64_t)v153, v242);
              goto LABEL_40;
            }
          }
          else
          {
            sub_1CB785B54((uint64_t)&v250, &qword_1EF9A2370);
            v76 = (uint64_t)v224;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v226 + 56))(v224, 1, 1, v227);
          }
          sub_1CB785B54(v76, &qword_1EF99EEB8);
          if (qword_1ED88E518 != -1)
            swift_once();
          v141 = sub_1CB8466D8();
          __swift_project_value_buffer(v141, (uint64_t)qword_1ED890248);
          swift_retain_n();
          v142 = sub_1CB8466C0();
          v143 = sub_1CB846C84();
          if (os_log_type_enabled(v142, v143))
          {
            v144 = (uint8_t *)swift_slowAlloc();
            v145 = swift_slowAlloc();
            v246 = v145;
            *(_DWORD *)v144 = 136315138;
            v250 = v54;
            swift_retain();
            v146 = sub_1CB7B696C();
            v148 = v147;
            swift_release();
            v250 = v146;
            v251 = v148;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EEC0);
            v149 = sub_1CB8468DC();
            v250 = sub_1CB775A54(v149, v150, &v246);
            sub_1CB846E58();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1CB771000, v142, v143, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Could not retrieve a suggestion candidate from database for entity %s", v144, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D179FE84](v145, -1, -1);
            MEMORY[0x1D179FE84](v144, -1, -1);

          }
          else
          {

            swift_release_n();
          }
          v151 = v236;
          v152 = v241;
          v153 = v223;
          v154 = v235;
          sub_1CB7B3290(MEMORY[0x1E0DEE9D8]);
          sub_1CB7B373C(v70 & 1);
          swift_setDeallocating();
          __swift_destroy_boxed_opaque_existential_0(v234);
          sub_1CB785B54(v154 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, &qword_1ED88D570);
          v155 = *(void (**)(uint64_t, uint64_t))(v238 + 8);
          v156 = v237;
          v155(v154+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v237);
          sub_1CB785B54(v154+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId, &qword_1EF99EC50);
          swift_deallocClassInstance();
          swift_release();
          v155((uint64_t)v233, v156);
          v157 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 56))(v152, 1, 1, v157);
          v158 = sub_1CB84666C();
          sub_1CB846690();
          v159 = sub_1CB846D5C();
          if ((sub_1CB846E28() & 1) != 0)
          {
            swift_retain();
            v160 = (char *)&v249;
LABEL_57:
            v161 = *((_QWORD *)v160 - 32);
            sub_1CB8466B4();
            swift_release();
            v162 = v210;
            if ((*(unsigned int (**)(uint64_t, uint64_t))(v151 + 88))(v161, v210) == *MEMORY[0x1E0DF2190])
            {
              v163 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v161, v162);
              v163 = "";
            }
            v169 = v240;
            v170 = v242;
            (*(void (**)(char *, char *, uint64_t))(v239 + 16))(v240, v153, v242);
            v171 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v171 = 0;
            v172 = sub_1CB84663C();
            _os_signpost_emit_with_name_impl(&dword_1CB771000, v158, v159, v172, "runUniversalSuggestionsQuery", v163, v171, 2u);
            MEMORY[0x1D179FE84](v171, -1, -1);

            v173 = (void (*)(char *, uint64_t))v228;
            v228((uint64_t)v153, v170);
            v173(v169, v170);
            goto LABEL_40;
          }
          goto LABEL_84;
        }
        v124 = v70;
        v125 = v241;
        if (qword_1ED88E518 != -1)
          swift_once();
        v126 = sub_1CB8466D8();
        __swift_project_value_buffer(v126, (uint64_t)qword_1ED890248);
        v127 = sub_1CB8466C0();
        v128 = sub_1CB846C84();
        v129 = os_log_type_enabled(v127, v128);
        v130 = v235;
        if (v129)
        {
          v131 = swift_slowAlloc();
          *(_DWORD *)v131 = 67109376;
          LODWORD(v250) = v124 & 1;
          sub_1CB846E58();
          *(_WORD *)(v131 + 8) = 1024;
          LODWORD(v250) = 0;
          sub_1CB846E58();
          _os_log_impl(&dword_1CB771000, v127, v128, "Universal User Feedback suggestions is disabled, skipping; isSurfacingEnabled=%{BOOL}d, isOfflineLearningEnabled=%{BOOL}d",
            (uint8_t *)v131,
            0xEu);
          v132 = v131;
          v60 = v237;
          MEMORY[0x1D179FE84](v132, -1, -1);
        }

        sub_1CB7B373C(0);
        swift_setDeallocating();
        __swift_destroy_boxed_opaque_existential_0(v234);
        sub_1CB785B54(v130 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, &qword_1ED88D570);
        v133 = *(void (**)(uint64_t, uint64_t))(v238 + 8);
        v133(v130 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v60);
        sub_1CB785B54(v130+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId, &qword_1EF99EC50);
        swift_deallocClassInstance();
        v133((uint64_t)v233, v60);
        v134 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v125, 1, 1, v134);
        v115 = sub_1CB84666C();
        v41 = v225;
        sub_1CB846690();
        v135 = sub_1CB846D5C();
        v136 = sub_1CB846E28();
        v137 = v236;
        if ((v136 & 1) != 0)
        {
          swift_retain();
          v138 = v221;
          sub_1CB8466B4();
          swift_release();
          v139 = v210;
          if ((*(unsigned int (**)(char *, uint64_t))(v137 + 88))(v138, v210) == *MEMORY[0x1E0DF2190])
          {
            v140 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v139);
            v140 = "";
          }
          v164 = v240;
          v165 = v242;
          (*(void (**)(char *, char *, uint64_t))(v239 + 16))(v240, v41, v242);
          v166 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v166 = 0;
          v167 = sub_1CB84663C();
          _os_signpost_emit_with_name_impl(&dword_1CB771000, v115, v135, v167, "runUniversalSuggestionsQuery", v140, v166, 2u);
          MEMORY[0x1D179FE84](v166, -1, -1);

          v168 = (void (*)(char *, uint64_t))v228;
          v228((uint64_t)v41, v165);
          v168(v164, v165);
          goto LABEL_40;
        }
LABEL_37:

        v228((uint64_t)v41, v242);
LABEL_40:
        swift_release();
        return swift_release();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v238 + 56))(v32, 1, 1, v237);
    }
    sub_1CB785B54((uint64_t)v32, &qword_1ED88D570);
    if (qword_1ED88E518 != -1)
      swift_once();
    v104 = sub_1CB8466D8();
    __swift_project_value_buffer(v104, (uint64_t)qword_1ED890248);
    swift_bridgeObjectRetain_n();
    v105 = sub_1CB8466C0();
    v106 = sub_1CB846C90();
    if (os_log_type_enabled(v105, v106))
    {
      v107 = (uint8_t *)swift_slowAlloc();
      v108 = swift_slowAlloc();
      *(_QWORD *)&v254 = v108;
      *(_DWORD *)v107 = 136315138;
      if (a3)
        v109 = v235;
      else
        v109 = 0x3E6C696E3CLL;
      if (a3)
        v110 = a3;
      else
        v110 = 0xE500000000000000;
      swift_bridgeObjectRetain();
      v250 = sub_1CB775A54(v109, v110, (uint64_t *)&v254);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v105, v106, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: cannot emit events due to null identifiers, requestId: %s", v107, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v108, -1, -1);
      MEMORY[0x1D179FE84](v107, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v111 = v236;
    v112 = v241;
    v113 = v234;
    v114 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v112, 1, 1, v114);
    v115 = sub_1CB84666C();
    sub_1CB846690();
    v116 = sub_1CB846D5C();
    if ((sub_1CB846E28() & 1) != 0)
    {
      swift_retain();
      sub_1CB8466B4();
      swift_release();
      v117 = v210;
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v111 + 88))(v113, v210) == *MEMORY[0x1E0DF2190])
      {
        v118 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v113, v117);
        v118 = "";
      }
      v119 = v240;
      v120 = v242;
      (*(void (**)(char *, char *, uint64_t))(v239 + 16))(v240, v41, v242);
      v121 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v121 = 0;
      v122 = sub_1CB84663C();
      _os_signpost_emit_with_name_impl(&dword_1CB771000, v115, v116, v122, "runUniversalSuggestionsQuery", v118, v121, 2u);
      MEMORY[0x1D179FE84](v121, -1, -1);

      v123 = (void (*)(char *, uint64_t))v228;
      v228((uint64_t)v41, v120);
      v123(v119, v120);
      goto LABEL_40;
    }
    goto LABEL_37;
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v96 = sub_1CB8466D8();
  __swift_project_value_buffer(v96, (uint64_t)qword_1ED890248);
  v97 = sub_1CB8466C0();
  v98 = sub_1CB846C84();
  v99 = os_log_type_enabled(v97, v98);
  v100 = v241;
  if (v99)
  {
    v101 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v101 = 0;
    _os_log_impl(&dword_1CB771000, v97, v98, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: unsupported entity type", v101, 2u);
    MEMORY[0x1D179FE84](v101, -1, -1);
  }

  v102 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v100, 1, 1, v102);
}

uint64_t UserFeedbackLearnedEntitySuggester.deinit()
{
  uint64_t v0;

  sub_1CB785B54(v0 + 16, &qword_1EF9A2380);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return v0;
}

uint64_t UserFeedbackLearnedEntitySuggester.__deallocating_deinit()
{
  uint64_t v0;

  sub_1CB785B54(v0 + 16, &qword_1EF9A2380);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t sub_1CB839760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1CB837B9C(a1, a2, a3, a4);
}

uint64_t sub_1CB839780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UniversalSuggestionCandidate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB8397C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UniversalSuggestionCandidate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CB839800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UniversalSuggestionCandidate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of UserFeedbackLearnedEntitySuggesting.query(originalUsoEntity:requestId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1CB846084();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1CB846084();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1CB846084();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserFeedbackLearnedEntitySuggestion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB839B0C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1CB846084();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for UserFeedbackLearnedEntitySuggestion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1CB839B94(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1CB846084();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1CB839C08()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB846084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for UserFeedbackLearnedEntitySuggester()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserFeedbackLearnedEntitySuggester.query(originalUsoEntity:requestId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1CB839CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB839CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1CB839D30(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  void *v30;
  id v31;
  void *v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  void *v36;
  uint64_t v37;
  int64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[2];
  _BYTE v43[24];
  uint64_t v44;
  id v45;

  v45 = a3;
  v6 = objc_msgSend(a1, sel_entity);
  v7 = objc_msgSend(v6, sel_name);

  if (v7)
  {
    v8 = sub_1CB8468A0();
    v10 = v9;

    if (v8 == 0xD000000000000011 && v10 == 0x80000001CB853DA0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_1CB8471A0();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        return;
    }
    v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    v13 = objc_msgSend(a1, sel_primitiveValueForKey_, v12);

    if (v13)
    {
      sub_1CB846EB8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v42, 0, sizeof(v42));
    }
    sub_1CB7D0054((uint64_t)v42, (uint64_t)v43);
    if (!v44)
    {
      sub_1CB778110((uint64_t)v43);
      return;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (v40 == *(_QWORD *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesGroundTruthName)
        && v41 == *(_QWORD *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesGroundTruthName
                            + 8)
        || (sub_1CB8471A0() & 1) != 0)
      {
        goto LABEL_54;
      }
      if (v40 == *(_QWORD *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptGroundTruthName)
        && v41 == *(_QWORD *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptGroundTruthName
                            + 8)
        || (sub_1CB8471A0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v14 = sub_1CB83A7F0(*(_QWORD *)(v3+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptTaskAttribute), *(_QWORD *)(v3+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptTaskAttribute+ 8), a1);
        if (v15)
        {
          if (v14 != *(_QWORD *)(v3
                                + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesSiriKitTaskName)
            || v15 != *(_QWORD *)(v3
                                + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesSiriKitTaskName
                                + 8))
          {
            v16 = sub_1CB8471A0();
            swift_bridgeObjectRelease();
            if ((v16 & 1) != 0)
              return;
            goto LABEL_28;
          }
LABEL_54:
          swift_bridgeObjectRelease();
          return;
        }
LABEL_28:
        v18 = objc_msgSend(a2, sel_destinationEntityName);
        if (!v18)
          return;
        v19 = v18;
        v36 = a2;
        v20 = (void *)objc_opt_self();
        v21 = objc_msgSend(v45, sel_destinationContext);
        v22 = objc_msgSend(v20, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v19, v21);

        v39 = v22;
        v23 = objc_msgSend(v22, sel_entity);
        v24 = objc_msgSend(v23, sel_attributesByName);

        sub_1CB7D009C();
        v25 = sub_1CB8467EC();

        v37 = v25 + 64;
        v26 = 1 << *(_BYTE *)(v25 + 32);
        v27 = -1;
        if (v26 < 64)
          v27 = ~(-1 << v26);
        v28 = v27 & *(_QWORD *)(v25 + 64);
        v38 = (unint64_t)(v26 + 63) >> 6;
        swift_bridgeObjectRetain();
        v29 = 0;
        while (1)
        {
          if (v28)
          {
            v28 &= v28 - 1;
          }
          else
          {
            v33 = v29 + 1;
            if (__OFADD__(v29, 1))
            {
              __break(1u);
              goto LABEL_57;
            }
            if (v33 >= v38)
              goto LABEL_53;
            v34 = *(_QWORD *)(v37 + 8 * v33);
            ++v29;
            if (!v34)
            {
              v29 = v33 + 1;
              if (v33 + 1 >= v38)
                goto LABEL_53;
              v34 = *(_QWORD *)(v37 + 8 * v29);
              if (!v34)
              {
                v29 = v33 + 2;
                if (v33 + 2 >= v38)
                  goto LABEL_53;
                v34 = *(_QWORD *)(v37 + 8 * v29);
                if (!v34)
                {
                  v29 = v33 + 3;
                  if (v33 + 3 >= v38)
                    goto LABEL_53;
                  v34 = *(_QWORD *)(v37 + 8 * v29);
                  if (!v34)
                  {
                    v29 = v33 + 4;
                    if (v33 + 4 >= v38)
                      goto LABEL_53;
                    v34 = *(_QWORD *)(v37 + 8 * v29);
                    if (!v34)
                    {
                      v35 = v33 + 5;
                      if (v35 >= v38)
                      {
LABEL_53:
                        swift_release();
                        objc_msgSend(v45, sel_associateSourceInstance_withDestinationInstance_forEntityMapping_, a1, v39, v36);

                        goto LABEL_54;
                      }
                      v34 = *(_QWORD *)(v37 + 8 * v35);
                      if (!v34)
                      {
                        while (1)
                        {
                          v29 = v35 + 1;
                          if (__OFADD__(v35, 1))
                            break;
                          if (v29 >= v38)
                            goto LABEL_53;
                          v34 = *(_QWORD *)(v37 + 8 * v29);
                          ++v35;
                          if (v34)
                            goto LABEL_52;
                        }
LABEL_57:
                        __break(1u);
                        return;
                      }
                      v29 = v35;
                    }
                  }
                }
              }
            }
LABEL_52:
            v28 = (v34 - 1) & v34;
          }
          swift_bridgeObjectRetain();
          v30 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
          v31 = objc_msgSend(a1, sel_valueForKey_, v30);

          v32 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
          swift_bridgeObjectRelease();
          objc_msgSend(v39, sel_setValue_forKey_, v31, v32);
          swift_unknownObjectRelease();

        }
      }
      if (v40 == *(_QWORD *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomeGroundTruthName)
        && v41 == *(_QWORD *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomeGroundTruthName
                            + 8))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = sub_1CB8471A0();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
          goto LABEL_28;
      }
      if ((sub_1CB83A378(a1) & 1) == 0)
        return;
      goto LABEL_28;
    }
  }
}

uint64_t sub_1CB83A378(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;

  v2 = sub_1CB83ADA8(*(_QWORD *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomDomainAttribute], *(_QWORD *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomDomainAttribute+ 8], a1);
  if (!v2 || (v3 = sub_1CB799FE8(v2), v5 = v4, swift_bridgeObjectRelease(), !v5))
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v9 = sub_1CB8466D8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED890248);
    v10 = v1;
    v11 = sub_1CB8466C0();
    v12 = sub_1CB846C84();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v18 = v14;
      *(_DWORD *)v13 = 136315138;
      v15 = *(_QWORD *)&v10[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptTaskAttribute];
      v16 = *(_QWORD *)&v10[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptTaskAttribute
                          + 8];
      swift_bridgeObjectRetain();
      sub_1CB775A54(v15, v16, &v18);
      sub_1CB846E58();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v11, v12, "Encoded ground truth missing expected attribute %s. Skipping its migration.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v14, -1, -1);
      MEMORY[0x1D179FE84](v13, -1, -1);

    }
    else
    {

    }
    goto LABEL_14;
  }
  if (v3 == *(_QWORD *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesDomainEnumValue]
    && v5 == *(_QWORD *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesDomainEnumValue
                          + 8])
  {
    swift_bridgeObjectRelease();
LABEL_14:
    v8 = 0;
    return v8 & 1;
  }
  v7 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  v8 = v7 ^ 1;
  return v8 & 1;
}

id sub_1CB83A5A8()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  objc_super v9;

  v1 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesGroundTruthName];
  *(_QWORD *)v1 = 0xD000000000000013;
  *((_QWORD *)v1 + 1) = 0x80000001CB858E90;
  v2 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptGroundTruthName];
  *(_QWORD *)v2 = 0xD000000000000018;
  *((_QWORD *)v2 + 1) = 0x80000001CB852150;
  v3 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptTaskAttribute];
  *(_QWORD *)v3 = 0x5474706D6F72705FLL;
  *((_QWORD *)v3 + 1) = 0xEB000000006B7361;
  v4 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesSiriKitTaskName];
  *(_QWORD *)v4 = 0xD000000000000029;
  *((_QWORD *)v4 + 1) = 0x80000001CB858EB0;
  v5 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomeGroundTruthName];
  *(_QWORD *)v5 = 0xD000000000000023;
  *((_QWORD *)v5 + 1) = 0x80000001CB858EE0;
  v6 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomDomainAttribute];
  *(_QWORD *)v6 = 0x6E69616D6F64;
  *((_QWORD *)v6 + 1) = 0xE600000000000000;
  v7 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesDomainEnumValue];
  *(_QWORD *)v7 = 0x736567617373656DLL;
  *((_QWORD *)v7 + 1) = 0xE800000000000000;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for GroundTruthModelV3toV4CoreDataMigration();
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1CB83A6FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroundTruthModelV3toV4CoreDataMigration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GroundTruthModelV3toV4CoreDataMigration()
{
  return objc_opt_self();
}

uint64_t sub_1CB83A7F0(uint64_t a1, uint64_t a2, void *a3)
{
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _OWORD v40[2];
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v7 = objc_msgSend(a3, sel_valueForKey_, v6);

  if (v7)
  {
    sub_1CB846EB8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v40, 0, sizeof(v40));
  }
  sub_1CB7D0054((uint64_t)v40, (uint64_t)&v41);
  if (!*((_QWORD *)&v42 + 1))
    goto LABEL_23;
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_1CB845F88();
  *(_QWORD *)&v41 = 0;
  v10 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v9, 0, &v41);

  if (!v10)
  {
    v15 = (id)v41;
    v16 = (void *)sub_1CB845E80();

    swift_willThrow();
LABEL_12:
    if (qword_1ED88E518 != -1)
      swift_once();
    v17 = sub_1CB8466D8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED890248);
    v18 = v16;
    v19 = v16;
    v20 = sub_1CB8466C0();
    v21 = sub_1CB846C90();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v22 = 138412290;
      v24 = v16;
      v25 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v41 = v25;
      sub_1CB846E58();
      *v23 = v25;

      _os_log_impl(&dword_1CB771000, v20, v21, "Failed to decode ground truth to JSON during migration. Skipping copy. Error=%@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v23, -1, -1);
      MEMORY[0x1D179FE84](v22, -1, -1);
      sub_1CB779034(v38, v39);

    }
    else
    {
      sub_1CB779034(v38, v39);

    }
    return 0;
  }
  v11 = (id)v41;
  sub_1CB846EB8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF9A2558);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    sub_1CB779034(v38, v39);
    return 0;
  }
  v12 = *(_QWORD *)&v40[0];
  if (*(_QWORD *)(*(_QWORD *)&v40[0] + 16)
    && (v13 = sub_1CB779A70(0x64616F6C796170, 0xE700000000000000), (v14 & 1) != 0))
  {
    sub_1CB778000(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v41);
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v42 + 1))
  {
    sub_1CB779034(v38, v39);
LABEL_23:
    sub_1CB778110((uint64_t)&v41);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_20;
  v37 = sub_1CB845F7C();
  v27 = v26;
  swift_bridgeObjectRelease();
  if (v27 >> 60 == 15)
    goto LABEL_20;
  v36 = v27;
  v29 = (void *)sub_1CB845F88();
  *(_QWORD *)&v41 = 0;
  v30 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v29, 0, &v41);

  if (!v30)
  {
    v35 = (id)v41;
    v16 = (void *)sub_1CB845E80();

    swift_willThrow();
    sub_1CB78A670(v37, v36);
    goto LABEL_12;
  }
  v31 = (id)v41;
  sub_1CB846EB8();
  swift_unknownObjectRelease();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1CB779034(v38, v39);
    sub_1CB78A670(v37, v36);
    return 0;
  }
  v32 = *(_QWORD *)&v40[0];
  if (*(_QWORD *)(*(_QWORD *)&v40[0] + 16))
  {
    swift_bridgeObjectRetain();
    v33 = sub_1CB779A70(a1, a2);
    if ((v34 & 1) != 0)
    {
      sub_1CB778000(*(_QWORD *)(v32 + 56) + 32 * v33, (uint64_t)&v41);
    }
    else
    {
      v41 = 0u;
      v42 = 0u;
    }
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
    swift_bridgeObjectRetain();
  }
  sub_1CB779034(v38, v39);
  sub_1CB78A670(v37, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E088);
  if (swift_dynamicCast())
    return *(_QWORD *)&v40[0];
  else
    return 0;
}

uint64_t sub_1CB83ADA8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _OWORD v40[2];
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v7 = objc_msgSend(a3, sel_valueForKey_, v6);

  if (v7)
  {
    sub_1CB846EB8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v40, 0, sizeof(v40));
  }
  sub_1CB7D0054((uint64_t)v40, (uint64_t)&v41);
  if (!*((_QWORD *)&v42 + 1))
    goto LABEL_23;
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_1CB845F88();
  *(_QWORD *)&v41 = 0;
  v10 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v9, 0, &v41);

  if (!v10)
  {
    v15 = (id)v41;
    v16 = (void *)sub_1CB845E80();

    swift_willThrow();
LABEL_12:
    if (qword_1ED88E518 != -1)
      swift_once();
    v17 = sub_1CB8466D8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED890248);
    v18 = v16;
    v19 = v16;
    v20 = sub_1CB8466C0();
    v21 = sub_1CB846C90();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v22 = 138412290;
      v24 = v16;
      v25 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v41 = v25;
      sub_1CB846E58();
      *v23 = v25;

      _os_log_impl(&dword_1CB771000, v20, v21, "Failed to decode ground truth to JSON during migration. Skipping copy. Error=%@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v23, -1, -1);
      MEMORY[0x1D179FE84](v22, -1, -1);
      sub_1CB779034(v38, v39);

    }
    else
    {
      sub_1CB779034(v38, v39);

    }
    return 0;
  }
  v11 = (id)v41;
  sub_1CB846EB8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF9A2558);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    sub_1CB779034(v38, v39);
    return 0;
  }
  v12 = *(_QWORD *)&v40[0];
  if (*(_QWORD *)(*(_QWORD *)&v40[0] + 16)
    && (v13 = sub_1CB779A70(0x64616F6C796170, 0xE700000000000000), (v14 & 1) != 0))
  {
    sub_1CB778000(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v41);
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v42 + 1))
  {
    sub_1CB779034(v38, v39);
LABEL_23:
    sub_1CB778110((uint64_t)&v41);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_20;
  v37 = sub_1CB845F7C();
  v27 = v26;
  swift_bridgeObjectRelease();
  if (v27 >> 60 == 15)
    goto LABEL_20;
  v36 = v27;
  v29 = (void *)sub_1CB845F88();
  *(_QWORD *)&v41 = 0;
  v30 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v29, 0, &v41);

  if (!v30)
  {
    v35 = (id)v41;
    v16 = (void *)sub_1CB845E80();

    swift_willThrow();
    sub_1CB78A670(v37, v36);
    goto LABEL_12;
  }
  v31 = (id)v41;
  sub_1CB846EB8();
  swift_unknownObjectRelease();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1CB779034(v38, v39);
    sub_1CB78A670(v37, v36);
    return 0;
  }
  v32 = *(_QWORD *)&v40[0];
  if (*(_QWORD *)(*(_QWORD *)&v40[0] + 16))
  {
    swift_bridgeObjectRetain();
    v33 = sub_1CB779A70(a1, a2);
    if ((v34 & 1) != 0)
    {
      sub_1CB778000(*(_QWORD *)(v32 + 56) + 32 * v33, (uint64_t)&v41);
    }
    else
    {
      v41 = 0u;
      v42 = 0u;
    }
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
    swift_bridgeObjectRetain();
  }
  sub_1CB779034(v38, v39);
  sub_1CB78A670(v37, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E088);
  if (swift_dynamicCast())
    return *(_QWORD *)&v40[0];
  else
    return 0;
}

uint64_t OldestRecordEvictionPolicy.init(timestampKeyPath:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t OldestRecordEvictionPolicy.timestampKeyPath.getter()
{
  return swift_retain();
}

uint64_t OldestRecordEvictionPolicy.evictionCandidates(count:context:)(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_opt_self();
  v3 = (void *)swift_dynamicCastObjCClass();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setFetchLimit_, a1);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1CB84A330;
    sub_1CB83B4E0();
    swift_retain();
    *(_QWORD *)(v5 + 32) = sub_1CB846CA8();
    sub_1CB846A74();
    v6 = (void *)sub_1CB846A44();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setSortDescriptors_, v6);

    v7 = sub_1CB846DB0();
  }
  else
  {

    return sub_1CB846AB0();
  }
  return v7;
}

uint64_t sub_1CB83B4CC(uint64_t a1)
{
  return OldestRecordEvictionPolicy.evictionCandidates(count:context:)(a1);
}

unint64_t sub_1CB83B4E0()
{
  unint64_t result;

  result = qword_1ED88DE00;
  if (!qword_1ED88DE00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED88DE00);
  }
  return result;
}

uint64_t type metadata accessor for OldestRecordEvictionPolicy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OldestRecordEvictionPolicy);
}

uint64_t sub_1CB83B528()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1CB83B56C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for MultiDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MultiDictionary);
}

uint64_t CurrentLocales.init(deviceLocale:siriPreferences:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E140);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CB8460F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E280);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB8460FC();
  sub_1CB8460E4();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v16 = sub_1CB8460A8();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1CB785B54((uint64_t)v15, &qword_1ED88E280);
    v18 = 0x736978652D6E6F6ELL;
    v19 = 0xEC000000746E6574;
  }
  else
  {
    v18 = sub_1CB84609C();
    v19 = v20;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  }
  sub_1CB8460D8();
  v21 = sub_1CB8460CC();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v8, 1, v21) == 1)
  {
    sub_1CB785B54((uint64_t)v8, &qword_1ED88E140);
    v23 = 0x736978652D6E6F6ELL;
    v58 = 0xEC000000746E6574;
  }
  else
  {
    v23 = sub_1CB84609C();
    v58 = v24;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v21);
  }
  v25 = objc_msgSend(a2, sel_languageCode);
  v61 = v18;
  v59 = v23;
  if (v25)
  {
    v26 = v25;
    v27 = sub_1CB8468A0();
    v29 = v28;

  }
  else
  {
    v27 = 0x736978652D6E6F6ELL;
    v29 = 0xEC000000746E6574;
  }
  v66 = v27;
  v67 = v29;
  v64 = 45;
  v65 = 0xE100000000000000;
  sub_1CB78A5E8();
  v30 = (_QWORD *)sub_1CB846E7C();
  v31 = v30[2];
  v63 = a2;
  if (v31)
  {
    v32 = v30[5];
    v57 = v30[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    v57 = 0x736978652D6E6F6ELL;
    v32 = 0xEC000000746E6574;
  }
  swift_bridgeObjectRelease();
  v66 = v27;
  v67 = v29;
  v64 = 45;
  v65 = 0xE100000000000000;
  v33 = sub_1CB846E7C();
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v33 + 16);
  v60 = v19;
  if (v34)
  {
    v35 = v33 + 16 * v34;
    v36 = *(_QWORD *)(v35 + 24);
    v56 = *(_QWORD *)(v35 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    v56 = 0x736978652D6E6F6ELL;
    v36 = 0xEC000000746E6574;
  }
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(v63, sel_outputVoice);
  v62 = a1;
  if (v37
    && (v38 = v37, v39 = objc_msgSend(v37, sel_languageCode), v38, v39))
  {
    v40 = sub_1CB8468A0();
    v42 = v41;

  }
  else
  {
    v40 = 0x736978652D6E6F6ELL;
    v42 = 0xEC000000746E6574;
  }
  v66 = v40;
  v67 = v42;
  v64 = 45;
  v65 = 0xE100000000000000;
  v43 = (_QWORD *)sub_1CB846E7C();
  if (v43[2])
  {
    v44 = v43[5];
    v55 = v43[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    v55 = 0x736978652D6E6F6ELL;
    v44 = 0xEC000000746E6574;
  }
  swift_bridgeObjectRelease();
  v66 = v40;
  v67 = v42;
  v64 = 45;
  v65 = 0xE100000000000000;
  v45 = sub_1CB846E7C();
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v45 + 16);
  if (v46)
  {
    v47 = v45 + 16 * v46;
    v49 = *(_QWORD *)(v47 + 16);
    v48 = *(_QWORD *)(v47 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    v49 = 0x736978652D6E6F6ELL;
    v48 = 0xEC000000746E6574;
  }

  v50 = sub_1CB846108();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v62, v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v51 = v60;
  swift_bridgeObjectRetain();
  v52 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v61;
  *(_QWORD *)(a3 + 8) = v51;
  *(_QWORD *)(a3 + 16) = v59;
  *(_QWORD *)(a3 + 24) = v52;
  *(_QWORD *)(a3 + 32) = v57;
  *(_QWORD *)(a3 + 40) = v32;
  *(_QWORD *)(a3 + 48) = v56;
  *(_QWORD *)(a3 + 56) = v36;
  *(_QWORD *)(a3 + 64) = v55;
  *(_QWORD *)(a3 + 72) = v44;
  *(_QWORD *)(a3 + 80) = v49;
  *(_QWORD *)(a3 + 88) = v48;
  strcpy((char *)(a3 + 96), "non-existent");
  *(_BYTE *)(a3 + 109) = 0;
  *(_WORD *)(a3 + 110) = -5120;
  return result;
}

uint64_t sub_1CB83BB54(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v13[6];

  v6 = HIBYTE(a4) & 0xF;
  v13[2] = a3;
  v13[3] = a4;
  if ((a4 & 0x2000000000000000) == 0)
    v6 = a3 & 0xFFFFFFFFFFFFLL;
  v13[4] = 0;
  v13[5] = v6;
  swift_bridgeObjectRetain();
  v7 = sub_1CB84696C();
  if (v8)
  {
    v9 = v8;
    while (1)
    {
      v13[0] = v7;
      v13[1] = v9;
      v10 = a1(v13);
      swift_bridgeObjectRelease();
      if (v4 || (v10 & 1) != 0)
        break;
      v7 = sub_1CB84696C();
      v9 = v11;
      if (!v11)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t Locale.stringFormat.getter()
{
  return sub_1CB83BC3C();
}

SiriPrivateLearningAnalytics::Locale __swiftcall Locale.init(language:region:)(Swift::String language, Swift::String region)
{
  Swift::String *v2;
  SiriPrivateLearningAnalytics::Locale result;

  *v2 = language;
  v2[1] = region;
  result.region = region;
  result.language = language;
  return result;
}

uint64_t Locale.stringDashFormat.getter()
{
  return sub_1CB83BC3C();
}

uint64_t sub_1CB83BC3C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t LocalesController.currentLocales.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v1[2];
  v2 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  v9 = v1[9];
  v10 = v1[10];
  v11 = v1[11];
  v12 = v1[12];
  v13 = v1[13];
  v14 = v1[14];
  v15 = v1[15];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t LocalesController.__allocating_init(currentLocales:supportedLocalesStore:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = swift_allocObject();
  v5 = *(_OWORD *)(a1 + 16);
  v6 = *(_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 64);
  v9 = *(_OWORD *)(a1 + 80);
  v10 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 104);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = v6;
  *(_OWORD *)(v4 + 64) = v7;
  *(_OWORD *)(v4 + 80) = v8;
  *(_OWORD *)(v4 + 96) = v9;
  *(_QWORD *)(v4 + 112) = v10;
  *(_QWORD *)(v4 + 120) = v11;
  v12 = a2[3];
  v13 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v12);
  *(_QWORD *)(v4 + 128) = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  return v4;
}

uint64_t LocalesController.init(currentLocales:supportedLocalesStore:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_OWORD *)(a1 + 16);
  v5 = *(_OWORD *)(a1 + 32);
  v6 = *(_OWORD *)(a1 + 48);
  v7 = *(_OWORD *)(a1 + 64);
  v8 = *(_OWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 104);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = v5;
  *(_OWORD *)(v2 + 64) = v6;
  *(_OWORD *)(v2 + 80) = v7;
  *(_OWORD *)(v2 + 96) = v8;
  *(_QWORD *)(v2 + 112) = v9;
  *(_QWORD *)(v2 + 120) = v10;
  v11 = a2[3];
  v12 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v11);
  *(_QWORD *)(v2 + 128) = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  return v2;
}

uint64_t sub_1CB83BE58()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB83BE60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0[16] + 16);
  if (!v1)
    return 0;
  v2 = v0[3];
  v6 = v0[2];
  for (i = swift_bridgeObjectRetain() + 56; ; i += 32)
  {
    v7 = *(_QWORD *)(i - 24);
    v8 = *(_QWORD *)(i - 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v7 == v6 && v8 == v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    v4 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
      break;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1CB83C020()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0[16] + 16);
  if (!v1)
    return 0;
  v2 = v0[7];
  v6 = v0[6];
  for (i = swift_bridgeObjectRetain() + 56; ; i += 32)
  {
    v7 = *(_QWORD *)(i - 24);
    v8 = *(_QWORD *)(i - 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v7 == v6 && v8 == v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    v4 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
      break;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1CB83C1E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0[16] + 16);
  if (!v1)
    return 0;
  v2 = v0[11];
  v6 = v0[10];
  for (i = swift_bridgeObjectRetain() + 56; ; i += 32)
  {
    v7 = *(_QWORD *)(i - 24);
    v8 = *(_QWORD *)(i - 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v7 == v6 && v8 == v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    v4 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
      break;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t LocalesController.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LocalesController.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t CurrentLocales.device.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t CurrentLocales.siri.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[5];
  v3 = v1[6];
  v4 = v1[7];
  *a1 = v1[4];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t CurrentLocales.siriVoice.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[9];
  v3 = v1[10];
  v4 = v1[11];
  *a1 = v1[8];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t CurrentLocales.emptyIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall CurrentLocales.init(device:siri:siriVoice:)(SiriPrivateLearningAnalytics::CurrentLocales *__return_ptr retstr, SiriPrivateLearningAnalytics::Locale device, SiriPrivateLearningAnalytics::Locale siri, SiriPrivateLearningAnalytics::Locale siriVoice)
{
  uint64_t v4;
  void *v5;
  Swift::String v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  uint64_t v10;
  void *v11;

  v4 = *(_QWORD *)(device.language._countAndFlagsBits + 16);
  v5 = *(void **)(device.language._countAndFlagsBits + 24);
  v6 = *(Swift::String *)device.language._object;
  v7 = *((_QWORD *)device.language._object + 2);
  v8 = (void *)*((_QWORD *)device.language._object + 3);
  v9 = *(Swift::String *)device.region._countAndFlagsBits;
  v10 = *(_QWORD *)(device.region._countAndFlagsBits + 16);
  v11 = *(void **)(device.region._countAndFlagsBits + 24);
  retstr->device.language = *(Swift::String *)device.language._countAndFlagsBits;
  retstr->device.region._countAndFlagsBits = v4;
  retstr->device.region._object = v5;
  retstr->siri.language = v6;
  retstr->siri.region._countAndFlagsBits = v7;
  retstr->siri.region._object = v8;
  retstr->siriVoice.language = v9;
  retstr->siriVoice.region._countAndFlagsBits = v10;
  retstr->siriVoice.region._object = v11;
  strcpy((char *)&retstr->emptyIdentifier, "non-existent");
  BYTE5(retstr->emptyIdentifier._object) = 0;
  HIWORD(retstr->emptyIdentifier._object) = -5120;
}

uint64_t CurrentLocales.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[32];
  uint64_t v23;
  _QWORD v24[11];

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[6];
  v8 = v0[7];
  v9 = v0[8];
  v10 = v0[9];
  v11 = v0[10];
  v12 = v0[11];
  v23 = v2;
  v24[0] = v1;
  v24[1] = v3;
  v24[2] = v4;
  v24[3] = v5;
  v24[4] = v6;
  v24[5] = v7;
  v24[6] = v8;
  v24[7] = v9;
  v24[8] = v10;
  v24[9] = v11;
  v24[10] = v12;
  v21 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CB776040(0, 3, 0);
  for (i = 0; i != 12; i += 4)
  {
    v19 = *(_QWORD *)&v22[i * 8 + 32];
    v20 = v24[i];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1CB846954();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v15 = *(_QWORD *)(v21 + 16);
    v14 = *(_QWORD *)(v21 + 24);
    if (v15 >= v14 >> 1)
      sub_1CB776040(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v21 + 16) = v15 + 1;
    v16 = v21 + 16 * v15;
    *(_QWORD *)(v16 + 32) = v19;
    *(_QWORD *)(v16 + 40) = v20;
  }
  swift_arrayDestroy();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A728);
  sub_1CB79D0B0();
  v17 = sub_1CB846858();
  swift_release();
  return v17;
}

SiriPrivateLearningAnalytics::SupportedLocalesStorePath __swiftcall SupportedLocalesStorePath.init(bundle:fileName:)(NSBundle bundle, Swift::String fileName)
{
  uint64_t v2;
  SiriPrivateLearningAnalytics::SupportedLocalesStorePath result;

  *(NSBundle *)v2 = bundle;
  *(Swift::String *)(v2 + 8) = fileName;
  result.fileName = fileName;
  result.bundle = bundle;
  return result;
}

__n128 SupportedLocalesPListStore.__allocating_init(storePath:)(__n128 *a1)
{
  uint64_t v2;
  __n128 result;
  unint64_t v4;

  v2 = swift_allocObject();
  result = *a1;
  v4 = a1[1].n128_u64[0];
  *(__n128 *)(v2 + 16) = *a1;
  *(_QWORD *)(v2 + 40) = 0xD000000000000010;
  *(_QWORD *)(v2 + 48) = 0x80000001CB858F10;
  *(_QWORD *)(v2 + 32) = v4;
  return result;
}

uint64_t SupportedLocalesPListStore.init(storePath:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_QWORD *)(v1 + 40) = 0xD000000000000010;
  *(_QWORD *)(v1 + 48) = 0x80000001CB858F10;
  *(_QWORD *)(v1 + 32) = v2;
  return v1;
}

_QWORD *sub_1CB83C850()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41[2];
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 16);
  v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v4 = objc_msgSend(v1, sel_pathForResource_ofType_, v2, v3);

  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v6 = objc_msgSend(v5, sel_contentsAtPath_, v4);

    if (v6)
    {
      v7 = sub_1CB845F94();
      v9 = v8;

      v10 = (void *)objc_opt_self();
      v11 = (void *)sub_1CB845F88();
      v42 = 0;
      v12 = objc_msgSend(v10, sel_propertyListWithData_options_format_error_, v11, 0, 0, &v42);

      if (v12)
      {
        v13 = (id)v42;
        sub_1CB846EB8();
        swift_unknownObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A708);
        if ((swift_dynamicCast() & 1) != 0)
        {
          if (*(_QWORD *)(v41[0] + 16))
          {
            v16 = v0 + 40;
            v14 = *(_QWORD *)(v0 + 40);
            v15 = *(_QWORD *)(v16 + 8);
            swift_bridgeObjectRetain();
            v17 = sub_1CB779A70(v14, v15);
            if ((v18 & 1) != 0)
            {
              v19 = *(_QWORD *)(*(_QWORD *)(v41[0] + 56) + 8 * v17);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v20 = *(_QWORD *)(v19 + 16);
              if (v20)
              {
                v39 = v7;
                v40 = v9;
                swift_bridgeObjectRetain();
                v21 = (uint64_t *)(v19 + 40);
                v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
                do
                {
                  v24 = *v21;
                  v41[0] = *(v21 - 1);
                  v41[1] = v24;
                  sub_1CB83CD28(v41, &v42);
                  v25 = v43;
                  if (v43)
                  {
                    v26 = v42;
                    v28 = v44;
                    v27 = v45;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v22 = sub_1CB7904D4(0, v22[2] + 1, 1, v22);
                    v30 = v22[2];
                    v29 = v22[3];
                    if (v30 >= v29 >> 1)
                      v22 = sub_1CB7904D4((_QWORD *)(v29 > 1), v30 + 1, 1, v22);
                    v22[2] = v30 + 1;
                    v23 = &v22[4 * v30];
                    v23[4] = v26;
                    v23[5] = v25;
                    v23[6] = v28;
                    v23[7] = v27;
                  }
                  v21 += 2;
                  --v20;
                }
                while (v20);
                swift_bridgeObjectRelease();
                sub_1CB779034(v39, v40);
                swift_bridgeObjectRelease();
              }
              else
              {
                sub_1CB779034(v7, v9);
                swift_bridgeObjectRelease();
                return (_QWORD *)MEMORY[0x1E0DEE9D8];
              }
              return v22;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        sub_1CB779034(v7, v9);
      }
      else
      {
        v31 = (id)v42;
        v32 = (void *)sub_1CB845E80();

        swift_willThrow();
        sub_1CB779034(v7, v9);

      }
    }
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v33 = sub_1CB8466D8();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED890248);
  v34 = sub_1CB8466C0();
  v35 = sub_1CB846C90();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    *(_DWORD *)v36 = 136315138;
    v41[0] = v37;
    v42 = 28261;
    v43 = 0xE200000000000000;
    sub_1CB846954();
    sub_1CB846954();
    v42 = sub_1CB775A54(v42, v43, v41);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v34, v35, "Couldn't get supported locales, falling back to %s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v37, -1, -1);
    MEMORY[0x1D179FE84](v36, -1, -1);
  }

  return &unk_1E868ACE0;
}

void sub_1CB83CD28(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v5 = *a1;
  v4 = a1[1];
  v19 = *a1;
  v20 = v4;
  sub_1CB78A5E8();
  v6 = (_QWORD *)sub_1CB846E7C();
  if (v6[2])
  {
    v7 = v6[4];
    v8 = v6[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = v5;
    v20 = v4;
    v9 = sub_1CB846E7C();
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = v9 + 16 * v10;
      v13 = *(_QWORD *)(v11 + 16);
      v12 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *a2 = v7;
      a2[1] = v8;
      a2[2] = v13;
      a2[3] = v12;
      return;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1ED88E518 != -1)
    swift_once();
  v14 = sub_1CB8466D8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED890248);
  swift_bridgeObjectRetain_n();
  v15 = sub_1CB8466C0();
  v16 = sub_1CB846C90();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    v21 = v2;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain();
    sub_1CB775A54(v5, v4, &v19);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v15, v16, "Supported locales has unexpect format %s, expected language_region format", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v18, -1, -1);
    MEMORY[0x1D179FE84](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(_OWORD *)a2 = 0u;
  *((_OWORD *)a2 + 1) = 0u;
}

uint64_t SupportedLocalesPListStore.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SupportedLocalesPListStore.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

__n128 sub_1CB83D018@<Q0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __n128 result;
  unint64_t v6;

  type metadata accessor for SupportedLocalesPListStore();
  v4 = swift_allocObject();
  result = *a1;
  v6 = a1[1].n128_u64[0];
  *(__n128 *)(v4 + 16) = *a1;
  *(_QWORD *)(v4 + 40) = 0xD000000000000010;
  *(_QWORD *)(v4 + 48) = 0x80000001CB858F10;
  *(_QWORD *)(v4 + 32) = v6;
  *a2 = v4;
  return result;
}

_QWORD *sub_1CB83D078()
{
  return sub_1CB83C850();
}

uint64_t static LocaleError.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1CB8471A0();
}

void static Locale.enUSDefaultLocale.getter(_QWORD *a1@<X8>)
{
  *a1 = 28261;
  a1[1] = 0xE200000000000000;
  a1[2] = 21333;
  a1[3] = 0xE200000000000000;
}

SiriPrivateLearningAnalytics::Locale __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Locale.init(from:separator:)(Swift::String from, Swift::String separator)
{
  _QWORD *v2;
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD v29[4];
  uint64_t v30;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  SiriPrivateLearningAnalytics::Locale result;

  v32 = separator;
  object = separator._object;
  countAndFlagsBits = separator._countAndFlagsBits;
  v5 = from._object;
  v6 = from._countAndFlagsBits;
  v7 = v2;
  v29[2] = &v32;
  if ((sub_1CB83BB54(sub_1CB83DA40, (uint64_t)v29, from._countAndFlagsBits, (unint64_t)from._object) & 1) == 0)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v19 = sub_1CB8466D8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED890248);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v20 = sub_1CB8466C0();
    v21 = sub_1CB846C90();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v32._countAndFlagsBits = v23;
      *(_DWORD *)v22 = 136315394;
      swift_bridgeObjectRetain();
      v30 = sub_1CB775A54(v6, (unint64_t)v5, &v32._countAndFlagsBits);
      v33 = v6;
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      swift_bridgeObjectRetain();
      v30 = sub_1CB775A54(countAndFlagsBits, (unint64_t)object, &v32._countAndFlagsBits);
      v6 = v33;
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CB771000, v20, v21, "Locale %s does not contain \"%s\" separator", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      v24 = v23;
LABEL_12:
      MEMORY[0x1D179FE84](v24, -1, -1);
      MEMORY[0x1D179FE84](v22, -1, -1);

LABEL_14:
      sub_1CB83DA94();
      swift_allocError();
      *v28 = v6;
      v28[1] = (uint64_t)v5;
      v15 = swift_willThrow();
      goto LABEL_15;
    }
LABEL_13:

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v32._countAndFlagsBits = v6;
  v32._object = v5;
  v30 = countAndFlagsBits;
  v31 = object;
  sub_1CB78A5E8();
  v8 = (_QWORD *)sub_1CB846E7C();
  v9 = v8[2];
  if (!v9)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED88E518 != -1)
      swift_once();
    v25 = sub_1CB8466D8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED890248);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v20 = sub_1CB8466C0();
    v26 = sub_1CB846C90();
    if (os_log_type_enabled(v20, v26))
    {
      v22 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v32._countAndFlagsBits = v33;
      *(_DWORD *)v22 = 136315394;
      swift_bridgeObjectRetain();
      v30 = sub_1CB775A54(v6, (unint64_t)v5, &v32._countAndFlagsBits);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      swift_bridgeObjectRetain();
      v30 = sub_1CB775A54(countAndFlagsBits, (unint64_t)object, &v32._countAndFlagsBits);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CB771000, v20, v26, "Locale %s has unexpected format, expected <language>%s<region>", (uint8_t *)v22, 0x16u);
      v27 = v33;
      swift_arrayDestroy();
      v24 = v27;
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  v10 = v8[4];
  v11 = v8[5];
  v12 = (uint64_t)&v8[2 * v9 + 4];
  v14 = *(_QWORD *)(v12 - 16);
  v13 = *(_QWORD *)(v12 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = swift_bridgeObjectRelease();
  *v7 = v10;
  v7[1] = v11;
  v7[2] = v14;
  v7[3] = v13;
LABEL_15:
  result.region._object = v18;
  result.region._countAndFlagsBits = v17;
  result.language._object = v16;
  result.language._countAndFlagsBits = v15;
  return result;
}

uint64_t Locale.description.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v2;
}

uint64_t Locale.hash(into:)()
{
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t Locale.hashValue.getter()
{
  sub_1CB8472E4();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB83D734()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1CB83D7A4()
{
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB83D848()
{
  sub_1CB8472E4();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t _s28SiriPrivateLearningAnalytics6LocaleV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v2 = a2[1];
  v6 = *a1;
  v7 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v6 == v3 && v7 == v2)
    v4 = 1;
  else
    v4 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1CB83DA40(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1CB8471A0() & 1;
}

unint64_t sub_1CB83DA94()
{
  unint64_t result;

  result = qword_1EF9A2578;
  if (!qword_1EF9A2578)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for LocaleError, &type metadata for LocaleError);
    atomic_store(result, (unint64_t *)&qword_1EF9A2578);
  }
  return result;
}

unint64_t sub_1CB83DADC()
{
  unint64_t result;

  result = qword_1ED88A6C8;
  if (!qword_1ED88A6C8)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for Locale, &type metadata for Locale);
    atomic_store(result, (unint64_t *)&qword_1ED88A6C8);
  }
  return result;
}

uint64_t type metadata accessor for LocalesController()
{
  return objc_opt_self();
}

uint64_t method lookup function for LocalesController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalesController.__allocating_init(currentLocales:supportedLocalesStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LocalesController.supportedLocaleList()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of LocalesController.isDeviceCurrentLocaleSupported()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of LocalesController.isSiriCurrentLocaleSupported()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of LocalesController.isSiriVoiceCurrentLocaleSupported()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

ValueMetadata *type metadata accessor for CurrentLocales()
{
  return &type metadata for CurrentLocales;
}

uint64_t destroy for SupportedLocalesStorePath(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s28SiriPrivateLearningAnalytics25SupportedLocalesStorePathVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SupportedLocalesStorePath(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SupportedLocalesStorePath(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SupportedLocalesStorePath()
{
  return &type metadata for SupportedLocalesStorePath;
}

uint64_t dispatch thunk of SupportedLocalesStore.init(storePath:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SupportedLocalesStore.getSupportedLocales()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for SupportedLocalesPListStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for SupportedLocalesPListStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SupportedLocalesPListStore.__allocating_init(storePath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for LocaleError()
{
  return &type metadata for LocaleError;
}

ValueMetadata *type metadata accessor for Locale()
{
  return &type metadata for Locale;
}

uint64_t sub_1CB83DD18(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1CB8471A0();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1CB8471A0() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB83DDDC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v16;
  unint64_t v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BC08);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)objc_opt_self();
  v16 = 0;
  v17 = 0xE000000000000000;
  sub_1CB846F30();
  swift_bridgeObjectRelease();
  v16 = a1;
  v17 = a2;
  sub_1CB846954();
  v11 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_newPrivateStreamDefaultConfigurationWithStoreBasePath_, v11);

  v13 = objc_msgSend(v12, sel_pruningPolicy);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, sel_setFilterByAgeOnRead_, 0);

  }
  sub_1CB777FA8(0, &qword_1ED88DDF8);
  sub_1CB846180();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics13BiomeQuerying_intentStream, v9, v6);
  return v3;
}

void sub_1CB83DF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v7 = *v3;
  v8 = (void *)MEMORY[0x1D179F824]();
  sub_1CB83E000(a1, a2, a3, v7, (unint64_t)&v9);
  objc_autoreleasePoolPop(v8);
}

unint64_t sub_1CB83E000@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X8>)
{
  uint64_t v5;
  unint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  result = sub_1CB83EE74(a1, a2, a3);
  if (!v5)
  {
    v9 = result;
    if (result >> 62)
      goto LABEL_15;
    v10 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
      while (1)
      {
        v29 = MEMORY[0x1E0DEE9D8];
        v25 = v10;
        result = sub_1CB7765B8(0, v10 & ~(v10 >> 63), 0);
        v11 = v25;
        if (v25 < 0)
          break;
        v12 = 0;
        v13 = v29;
        v22 = (_QWORD *)a5;
        v23 = v9 & 0xC000000000000001;
        v24 = v9;
        while (v11 != v12)
        {
          if (v23)
            v14 = (id)MEMORY[0x1D179F320](v12, v9);
          else
            v14 = *(id *)(v9 + 8 * v12 + 32);
          v15 = v14;
          v16 = a4;
          sub_1CB83E22C(v14, (uint64_t *)&v27);
          v26 = v27;
          v17 = v28;

          v29 = v13;
          a5 = *(_QWORD *)(v13 + 16);
          v18 = *(_QWORD *)(v13 + 24);
          if (a5 >= v18 >> 1)
          {
            sub_1CB7765B8(v18 > 1, a5 + 1, 1);
            v13 = v29;
          }
          ++v12;
          *(_QWORD *)(v13 + 16) = a5 + 1;
          v19 = v13 + 32 * a5;
          *(_OWORD *)(v19 + 32) = v26;
          *(_QWORD *)(v19 + 48) = v17;
          *(_BYTE *)(v19 + 56) = 0;
          v9 = v24;
          v11 = v25;
          a4 = v16;
          if (v25 == v12)
          {
            swift_bridgeObjectRelease();
            a5 = (unint64_t)v22;
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_15:
        swift_bridgeObjectRetain();
        v20 = sub_1CB847044();
        swift_bridgeObjectRelease();
        v10 = v20;
        if (!v20)
          goto LABEL_16;
      }
      __break(1u);
    }
    else
    {
LABEL_16:
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x1E0DEE9D8];
LABEL_17:
      v21 = sub_1CB83FA28(v13);
      result = swift_bridgeObjectRelease();
      *(_QWORD *)a5 = v21;
    }
  }
  return result;
}

void sub_1CB83E22C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;

  v5 = objc_msgSend(a1, sel_interaction);
  v6 = sub_1CB845F94();
  v8 = v7;

  v9 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  sub_1CB7A81D8(v6, v8);
  v10 = sub_1CB7D7FE8();
  if (v2)
  {
    sub_1CB779034(v6, v8);
    v11 = v2;
    sub_1CB846F30();
    sub_1CB846954();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
    sub_1CB847014();
    sub_1CB846954();
    v12 = objc_msgSend(a1, sel_description);
    sub_1CB8468A0();

    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB83F7A0();
    swift_allocError();
    *v13 = 0;
    v13[1] = 0xE000000000000000;
    swift_willThrow();

    sub_1CB779034(v6, v8);
  }
  else
  {
    v14 = v10;
    sub_1CB779034(v6, v8);
    sub_1CB777FA8(0, &qword_1EF99F7A8);
    sub_1CB8468A0();
    v15 = v14;
    v16 = sub_1CB846DEC();
    swift_bridgeObjectRelease();
    if (v16)
    {
      v17 = objc_msgSend(a1, sel_bundleID);
      v18 = sub_1CB8468A0();
      v20 = v19;
      sub_1CB779034(v6, v8);

      *a2 = v16;
      a2[1] = v18;
      a2[2] = v20;
    }
    else
    {
      sub_1CB846F30();
      sub_1CB846954();
      v21 = objc_msgSend(a1, sel_description);
      sub_1CB8468A0();

      sub_1CB846954();
      swift_bridgeObjectRelease();
      sub_1CB83F7A0();
      swift_allocError();
      *v22 = 0;
      v22[1] = 0xE000000000000000;
      swift_willThrow();

      sub_1CB779034(v6, v8);
    }
  }
}

uint64_t sub_1CB83E5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  double v29;
  double v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v5 = v3;
  v9 = *v5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BBF0);
  v47 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v46 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2588);
  MEMORY[0x1E0C80A78](v50);
  v48 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2590);
  MEMORY[0x1E0C80A78](v52);
  v49 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2598);
  MEMORY[0x1E0C80A78](v55);
  v51 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CBD8);
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v53 = v17;
  v54 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v56 = (char *)v41 - v18;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = MEMORY[0x1E0DEE9D8];
  if (v19)
  {
    v41[0] = a1;
    v41[1] = v5;
    v42 = v10;
    v43 = v9;
    v44 = a3;
    v45 = v4;
    v60 = MEMORY[0x1E0DEE9D8];
    sub_1CB776040(0, v19, 0);
    v20 = v60;
    v21 = (uint64_t *)(a2 + 32);
    do
    {
      v59 = *v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF70);
      v22 = sub_1CB8468DC();
      v24 = v23;
      v60 = v20;
      v26 = *(_QWORD *)(v20 + 16);
      v25 = *(_QWORD *)(v20 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1CB776040(v25 > 1, v26 + 1, 1);
        v20 = v60;
      }
      *(_QWORD *)(v20 + 16) = v26 + 1;
      v27 = v20 + 16 * v26;
      *(_QWORD *)(v27 + 32) = v22;
      *(_QWORD *)(v27 + 40) = v24;
      ++v21;
      --v19;
    }
    while (v19);
    a3 = v44;
    v10 = v42;
    v9 = v43;
  }
  v28 = (void *)sub_1CB845FDC();
  objc_msgSend(v28, sel_timeIntervalSinceReferenceDate);
  v30 = v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BC08);
  sub_1CB785DB0(&qword_1ED88BC00, &qword_1ED88BC08, MEMORY[0x1E0D02538]);
  v31 = v46;
  sub_1CB8461A4();
  v32 = sub_1CB84615C();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v10);
  v60 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A1D38);
  sub_1CB777FA8(0, &qword_1ED88DDF8);
  sub_1CB785DB0(&qword_1EF9A25A8, &qword_1EF9A1D38, (uint64_t)&unk_1CB84F2D8);
  sub_1CB847164();
  *(double *)(swift_allocObject() + 16) = trunc(v30);
  sub_1CB785DB0(&qword_1EF9A25C0, &qword_1EF9A2588, MEMORY[0x1E0DF0DB8]);
  sub_1CB847080();
  *(_QWORD *)(swift_allocObject() + 16) = v20;
  v33 = MEMORY[0x1E0DF0CC0];
  sub_1CB785DB0(&qword_1EF9A25D8, &qword_1EF9A2590, MEMORY[0x1E0DF0CC0]);
  sub_1CB847080();
  *(_QWORD *)(swift_allocObject() + 16) = v9;
  sub_1CB785DB0(&qword_1EF9A25F0, &qword_1EF9A2598, v33);
  v34 = v56;
  sub_1CB847164();
  v36 = v57;
  v35 = v58;
  v37 = v54;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v34, v58);
  v38 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v39 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v39 + v38, v37, v35);
  *a3 = sub_1CB83F9BC;
  a3[1] = v39;
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v34, v35);
}

uint64_t sub_1CB83EAB8(_QWORD *a1, id *a2)
{
  uint64_t v2;

  *a1 = objc_msgSend(*a2, sel_eventBody);
  return sub_1CB785854(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1CB83EB04(_QWORD *a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = *a1;
  return swift_task_switch();
}

uint64_t sub_1CB83EB24()
{
  uint64_t v0;
  double v1;
  double v2;

  v1 = *(double *)(v0 + 16);
  objc_msgSend(*(id *)(v0 + 24), sel_absoluteTimestamp);
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v2 >= v1);
}

uint64_t sub_1CB83EB68(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1CB83EB84()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_intentClass);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 16);
    v3 = sub_1CB8468A0();
    v5 = v4;

    LOBYTE(v1) = sub_1CB83DD18(v3, v5, v2);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 & 1);
}

uint64_t sub_1CB83EC0C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a1;
  v3[4] = a3;
  v3[5] = *a2;
  return swift_task_switch();
}

uint64_t sub_1CB83EC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  uint64_t v5;

  sub_1CB83E22C(*(void **)(v0 + 40), (uint64_t *)&v4);
  v1 = *(_QWORD *)(v0 + 24);
  v2 = v5;
  *(_OWORD *)v1 = v4;
  *(_QWORD *)(v1 + 16) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB83EE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD v41[4];
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v5 = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BBF0);
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x1E0C80A78](v9);
  v43 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BBE0);
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v46 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 16);
  v42 = v4;
  if (v12)
  {
    v41[1] = a1;
    v41[2] = a3;
    v41[3] = v5;
    v49 = MEMORY[0x1E0DEE9D8];
    sub_1CB776040(0, v12, 0);
    v13 = v49;
    v14 = (uint64_t *)(a2 + 32);
    do
    {
      v48 = *v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF70);
      v15 = sub_1CB8468DC();
      v17 = v16;
      v49 = v13;
      v19 = *(_QWORD *)(v13 + 16);
      v18 = *(_QWORD *)(v13 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1CB776040(v18 > 1, v19 + 1, 1);
        v13 = v49;
      }
      *(_QWORD *)(v13 + 16) = v19 + 1;
      v20 = v13 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      ++v14;
      --v12;
    }
    while (v12);
    v21 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v21 = MEMORY[0x1E0DEE9D8];
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v22 = (void *)sub_1CB845FDC();
  objc_msgSend(v22, sel_timeIntervalSinceReferenceDate);
  v24 = v23;

  v25 = trunc(v24);
  v26 = (void *)sub_1CB845FDC();
  objc_msgSend(v26, sel_timeIntervalSinceReferenceDate);
  v28 = v27;

  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v21;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 24) = 0;
  *(_QWORD *)(v30 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BC08);
  sub_1CB785DB0(&qword_1ED88BC00, &qword_1ED88BC08, MEMORY[0x1E0D02538]);
  v31 = v43;
  sub_1CB8461A4();
  v32 = swift_allocObject();
  *(double *)(v32 + 16) = v25;
  *(_QWORD *)(v32 + 24) = v28;
  *(_QWORD *)(v32 + 32) = v13;
  sub_1CB785DB0(&qword_1ED88BBF8, &qword_1ED88BBF0, MEMORY[0x1E0D023D8]);
  v33 = v45;
  v34 = v46;
  sub_1CB846138();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v33);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v29;
  *(_QWORD *)(v35 + 24) = v28;
  sub_1CB785DB0(&qword_1ED88BBE8, &qword_1ED88BBE0, MEMORY[0x1E0D02378]);
  swift_retain();
  swift_retain();
  v36 = v50;

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v36);
  swift_beginAccess();
  v37 = *(_QWORD *)(v30 + 24);
  if (v37)
  {
    v38 = *(_QWORD *)(v30 + 16);
    sub_1CB83F7A0();
    swift_allocError();
    *v39 = v38;
    v39[1] = v37;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    v38 = *(_QWORD *)(v29 + 16);
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_release();
  return v38;
}

uint64_t sub_1CB83F2BC(void *a1, _QWORD *a2, double a3, double a4)
{
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  char v16;

  v7 = objc_msgSend(a1, sel_eventBody);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_intentClass);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1CB8468A0();
      v13 = v12;

      objc_msgSend(v8, sel_absoluteTimestamp);
      if (v14 < a3 || v14 > a4)
        v16 = 0;
      else
        v16 = sub_1CB83DD18(v11, v13, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = 0;
    }

  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

id sub_1CB83F398(void *a1, uint64_t a2)
{
  id result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(a1, sel_state);
  if (result)
  {
    objc_msgSend(a1, sel_error);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99E380);
    v5 = sub_1CB8468DC();
    v7 = v6;
    swift_beginAccess();
    *(_QWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 24) = v7;
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1CB83F438(void *a1, uint64_t a2, double a3)
{
  id v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  BOOL v11;
  double v12;

  v6 = objc_msgSend(a1, sel_eventBody);
  if (v6)
  {
    v7 = v6;
    swift_beginAccess();
    v8 = v7;
    MEMORY[0x1D179EDF8]();
    if (*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_1CB846AA4();
    sub_1CB846AD4();
    sub_1CB846A74();
    swift_endAccess();
    objc_msgSend(v8, sel_absoluteTimestamp);
    v10 = v9;

    v11 = v10 > a3;
  }
  else
  {
    objc_msgSend(a1, sel_timestamp);
    v11 = v12 > a3 + 5.0;
  }
  return !v11;
}

SiriPrivateLearningAnalytics::AppInteraction __swiftcall AppInteraction.init(interaction:bundleID:)(INInteraction interaction, Swift::String bundleID)
{
  uint64_t v2;
  SiriPrivateLearningAnalytics::AppInteraction result;

  *(INInteraction *)v2 = interaction;
  *(Swift::String *)(v2 + 8) = bundleID;
  result.bundleID = bundleID;
  result.interaction = interaction;
  return result;
}

uint64_t sub_1CB83F544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics13BiomeQuerying_intentStream;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BC08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id AppInteraction.interaction.getter()
{
  id *v0;

  return *v0;
}

uint64_t AppInteraction.bundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1CB83F5CC()
{
  return type metadata accessor for BiomeQuerying();
}

uint64_t type metadata accessor for BiomeQuerying()
{
  uint64_t result;

  result = qword_1ED88D5D0;
  if (!qword_1ED88D5D0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1CB83F610()
{
  unint64_t v0;

  sub_1CB83F67C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1CB83F67C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED88D598)
  {
    sub_1CB777FA8(255, &qword_1ED88DDF8);
    v0 = sub_1CB846174();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED88D598);
  }
}

ValueMetadata *type metadata accessor for AppInteraction()
{
  return &type metadata for AppInteraction;
}

uint64_t sub_1CB83F6F0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CB83F714()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CB83F738()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CB83F75C(void *a1)
{
  uint64_t v1;

  return sub_1CB83F2BC(a1, *(_QWORD **)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24));
}

id sub_1CB83F768(void *a1)
{
  uint64_t v1;

  return sub_1CB83F398(a1, v1);
}

uint64_t sub_1CB83F770()
{
  swift_release();
  return swift_deallocObject();
}

BOOL sub_1CB83F794(void *a1)
{
  uint64_t v1;

  return sub_1CB83F438(a1, *(_QWORD *)(v1 + 16), *(double *)(v1 + 24));
}

unint64_t sub_1CB83F7A0()
{
  unint64_t result;

  result = qword_1EF9A2580;
  if (!qword_1EF9A2580)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB85187C, &type metadata for BiomeAppIntentEventsError);
    atomic_store(result, (unint64_t *)&qword_1EF9A2580);
  }
  return result;
}

uint64_t sub_1CB83F7E4()
{
  return swift_deallocObject();
}

uint64_t sub_1CB83F7F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB7A0124;
  v5[2] = v4;
  v5[3] = *a1;
  return swift_task_switch();
}

uint64_t sub_1CB83F868(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB7A0FD0;
  v6 = *a1;
  v5[2] = v4;
  v5[3] = v6;
  return swift_task_switch();
}

uint64_t sub_1CB83F8D0()
{
  return swift_deallocObject();
}

uint64_t sub_1CB83F8E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CB785488;
  v7[3] = a1;
  v7[4] = v6;
  v7[5] = *a2;
  return swift_task_switch();
}

uint64_t sub_1CB83F958()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CBD8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CB83F9BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CBD8) - 8) + 80);
  return sub_1CB784DEC(v1 + ((v3 + 16) & ~v3), a1);
}

void sub_1CB83F9FC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {

  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

_QWORD *sub_1CB83FA28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _BYTE *v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  id v33;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = swift_bridgeObjectRetain();
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = (_BYTE *)(v2 + 56);
    v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v11 = (void *)*((_QWORD *)v4 - 3);
      v10 = *((_QWORD *)v4 - 2);
      v12 = *((_QWORD *)v4 - 1);
      if ((*v4 & 1) != 0)
      {
        v33 = (id)*((_QWORD *)v4 - 3);
        v13 = v11;
        v14 = v11;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v3 = sub_1CB7904E8(0, v3[2] + 1, 1, v3);
          v16 = v3[2];
          v15 = v3[3];
          if (v16 >= v15 >> 1)
            v3 = sub_1CB7904E8((_QWORD *)(v15 > 1), v16 + 1, 1, v3);
          v3[2] = v16 + 1;
          v17 = &v3[2 * v16];
          v17[4] = v31;
          v17[5] = v32;
          sub_1CB83F9FC(v11, v10, v12, 1);

          goto LABEL_5;
        }

        v31 = 0;
        v32 = 0xE000000000000000;
        v23 = v11;
        sub_1CB847014();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1CB7904E8(0, v3[2] + 1, 1, v3);
        v25 = v3[2];
        v24 = v3[3];
        if (v25 >= v24 >> 1)
          v3 = sub_1CB7904E8((_QWORD *)(v24 > 1), v25 + 1, 1, v3);
        v3[2] = v25 + 1;
        v26 = &v3[2 * v25];
        v26[4] = 0;
        v26[5] = 0xE000000000000000;
        sub_1CB83F9FC(v11, v10, v12, 1);
        v6 = v11;
        v7 = v10;
        v8 = v12;
        v9 = 1;
      }
      else
      {
        v18 = v11;
        swift_bridgeObjectRetain_n();
        v19 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v20 = v30;
        else
          v20 = sub_1CB7905F4(0, v30[2] + 1, 1, v30);
        v22 = v20[2];
        v21 = v20[3];
        if (v22 >= v21 >> 1)
          v20 = sub_1CB7905F4((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
        v20[2] = v22 + 1;
        v30 = v20;
        v5 = &v20[3 * v22];
        v5[4] = v19;
        v5[5] = v10;
        v5[6] = v12;
        v6 = v11;
        v7 = v10;
        v8 = v12;
        v9 = 0;
      }
      sub_1CB83F9FC(v6, v7, v8, v9);
LABEL_5:
      v4 += 32;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        v27 = v30;
        if (v3[2])
          goto LABEL_24;
LABEL_26:
        swift_bridgeObjectRelease();
        return v27;
      }
    }
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    goto LABEL_26;
LABEL_24:
  swift_bridgeObjectRelease();
  sub_1CB83FD78();
  swift_allocError();
  *v28 = v3;
  swift_willThrow();
  return v27;
}

unint64_t sub_1CB83FD78()
{
  unint64_t result;

  result = qword_1EF9A25F8;
  if (!qword_1EF9A25F8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB85183C, &type metadata for AggregateBiomeAppIntentEventsError);
    atomic_store(result, (unint64_t *)&qword_1EF9A25F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregateBiomeAppIntentEventsError()
{
  return &type metadata for AggregateBiomeAppIntentEventsError;
}

ValueMetadata *type metadata accessor for BiomeAppIntentEventsError()
{
  return &type metadata for BiomeAppIntentEventsError;
}

uint64_t UniversalSuggestionSummary.candidateId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CB7BDB4C(v1, a1);
}

uint64_t UniversalSuggestionSummary.suggestionSurfacedState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UniversalSuggestionSummary(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for UniversalSuggestionSummary(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A2680);
}

uint64_t UniversalSuggestionSummaryExtractor.init(suggestionStore:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 40))(v4, v5);
  type metadata accessor for UniversalSELFPlusStoreIdMapper();
  v7 = swift_allocObject();
  v8 = sub_1CB787CAC(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v8;
  *a2 = v7;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t UniversalSuggestionSummaryExtractor.extract(from:)(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t j;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v3 = *v1;
  v4 = MEMORY[0x1E0DEE9D8];
  v27 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1CB847044();
    v5 = result;
    if (result)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
        goto LABEL_39;
      }
      for (i = 0; i != v5; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v8 = (id)MEMORY[0x1D179F320](i, a1);
        else
          v8 = *(id *)(a1 + 8 * i + 32);
        v9 = v8;
        if (objc_msgSend(v8, sel_anyEventType) == 38)
        {
          sub_1CB846FB4();
          sub_1CB846FD8();
          sub_1CB846FE4();
          sub_1CB846FC0();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v10 = v27;
      v28 = v4;
      if (v10 < 0)
        goto LABEL_32;
      goto LABEL_16;
    }
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v10 = MEMORY[0x1E0DEE9D8];
  v28 = v4;
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
    goto LABEL_32;
LABEL_16:
  if ((v10 & 0x4000000000000000) != 0)
  {
LABEL_32:
    swift_retain();
    result = sub_1CB847044();
    v11 = result;
    if (!result)
      goto LABEL_33;
    goto LABEL_18;
  }
  v11 = *(_QWORD *)(v10 + 16);
  result = swift_retain();
  if (v11)
  {
LABEL_18:
    if (v11 >= 1)
    {
      for (j = 0; j != v11; ++j)
      {
        if ((v10 & 0xC000000000000001) != 0)
          v13 = (id)MEMORY[0x1D179F320](j, v10);
        else
          v13 = *(id *)(v10 + 8 * j + 32);
        v14 = v13;
        v15 = objc_msgSend(v13, sel_payload);
        if (v15)
        {
          v16 = v15;
          v17 = sub_1CB845F94();
          v19 = v18;

          v20 = (void *)sub_1CB845F88();
          sub_1CB779034(v17, v19);
        }
        else
        {
          v20 = 0;
        }
        v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A100]), sel_initWithData_, v20);

        if (v21)
        {
          MEMORY[0x1D179EDF8]();
          if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      swift_release();
      v22 = v28;
      goto LABEL_34;
    }
LABEL_39:
    __break(1u);
    return result;
  }
LABEL_33:
  swift_release();
  v22 = MEMORY[0x1E0DEE9D8];
LABEL_34:
  swift_release();
  swift_retain();
  v23 = sub_1CB841024(v22, v3);
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v23 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1CB848A50;
    v25 = type metadata accessor for UniversalSuggestionSummaries(0);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v23;
    *(_QWORD *)(v24 + 56) = v25;
    *(_QWORD *)(v24 + 64) = sub_1CB7762AC(&qword_1EF9A2600, type metadata accessor for UniversalSuggestionSummaries, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
    *(_QWORD *)(v24 + 32) = v26;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v24;
}

uint64_t sub_1CB840244@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  id v45;
  void *v46;
  unsigned int v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  unint64_t v76;
  void *v77;
  uint64_t *v78;
  uint64_t v79;
  id v80;
  id v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  unint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[2];
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;

  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v5 = MEMORY[0x1E0C80A78](v98);
  v97 = (uint64_t)v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v100 = (char *)v93 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v93 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v101 = (char *)v93 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v93 - v14;
  v16 = sub_1CB846084();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v93 - v21;
  v99 = *v2;
  v23 = objc_msgSend(a1, sel_eventMetadata);
  if (!v23
    || (v24 = v23, v25 = objc_msgSend(v23, sel_plusId), v24, !v25))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_8:
    v37 = (uint64_t)v15;
LABEL_9:
    sub_1CB785B54(v37, &qword_1ED88D570);
LABEL_10:
    v38 = type metadata accessor for UniversalSuggestionSummary(0);
    v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
    v40 = a2;
    return v39(v40, 1, 1, v38);
  }
  v95 = v11;
  v96 = v20;
  v26 = objc_msgSend(v25, sel_value);
  if (v26)
  {
    v27 = v26;
    v28 = v17;
    v29 = v22;
    v30 = v16;
    v31 = a2;
    v32 = sub_1CB845F94();
    v34 = v33;

    sub_1CB7B601C(v32, v34);
    v35 = v32;
    a2 = v31;
    v16 = v30;
    v22 = v29;
    v17 = v28;
    sub_1CB779034(v35, v34);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  }

  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v36(v15, 1, v16) == 1)
    goto LABEL_8;
  v42 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v42(v22, v15, v16);
  v43 = (char *)objc_msgSend(a1, sel_plusSuggesterSuggestionMetadataReported);
  if (!v43)
  {
LABEL_19:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    goto LABEL_10;
  }
  v44 = v43;
  v45 = objc_msgSend(v43, sel_suggestionDomainMetadata);
  if (!v45)
  {

    goto LABEL_19;
  }
  v46 = v45;
  v47 = objc_msgSend(v45, sel_suggestionGenerationDomain);

  if (v47 != 2)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);

    goto LABEL_10;
  }
  v48 = objc_msgSend(v44, sel_suggestionLinkId);
  if (!v48)
  {
    v60 = v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v101, 1, 1, v16);
LABEL_24:

    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    v37 = (uint64_t)v60;
    goto LABEL_9;
  }
  v49 = v48;
  v50 = objc_msgSend(v48, sel_value);
  if (v50)
  {
    v51 = v50;
    v52 = sub_1CB845F94();
    v94 = v17;
    v53 = v22;
    v54 = v16;
    v55 = a2;
    v56 = v52;
    v57 = v44;
    v59 = v58;

    v60 = v101;
    sub_1CB7B601C(v56, v59);
    v61 = v56;
    a2 = v55;
    v16 = v54;
    v22 = v53;
    v17 = v94;
    v62 = v59;
    v44 = v57;
    sub_1CB779034(v61, v62);
  }
  else
  {
    v60 = v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v101, 1, 1, v16);
  }
  v63 = (uint64_t)v96;

  if (v36(v60, 1, v16) == 1)
    goto LABEL_24;
  v42((char *)v63, v60, v16);
  v64 = objc_msgSend(v44, sel_suggestionSurfaced) - 1;
  if (v64 >= 3)
  {
    v99 = a2;
    v103 = 0;
    v104 = 0xE000000000000000;
    sub_1CB846F30();
    sub_1CB846954();
    sub_1CB846DE0();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    v75 = v103;
    v76 = v104;
    sub_1CB841978();
    v77 = (void *)swift_allocError();
    *v78 = v75;
    v78[1] = v76;
    swift_willThrow();
    if (qword_1ED88E518 != -1)
      swift_once();
    v79 = sub_1CB8466D8();
    __swift_project_value_buffer(v79, (uint64_t)qword_1ED890248);
    v80 = v77;
    v81 = v77;
    v82 = sub_1CB8466C0();
    v83 = sub_1CB846C90();
    if (os_log_type_enabled(v82, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc();
      v85 = swift_slowAlloc();
      v101 = v44;
      v102 = (uint64_t)v77;
      v86 = v85;
      v103 = v85;
      *(_DWORD *)v84 = 136315138;
      v87 = v77;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      v88 = sub_1CB8468DC();
      v100 = v22;
      v102 = sub_1CB775A54(v88, v89, &v103);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v82, v83, "Unable to convert suggestion surfaced value for suggestion summary: %s", v84, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v86, -1, -1);
      MEMORY[0x1D179FE84](v84, -1, -1);

      v90 = *(void (**)(char *, uint64_t))(v17 + 8);
      v90(v96, v16);
      v91 = (uint64_t)v100;
    }
    else
    {

      v90 = *(void (**)(char *, uint64_t))(v17 + 8);
      v90((char *)v63, v16);
      v91 = (uint64_t)v22;
    }
    v90((char *)v91, v16);
    v38 = type metadata accessor for UniversalSuggestionSummary(0);
    v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
    v40 = v99;
    return v39(v40, 1, 1, v38);
  }
  LODWORD(v94) = v64;
  v101 = v44;
  v65 = (uint64_t)v95;
  sub_1CB80E498(v63, (uint64_t)v22, (uint64_t)v95);
  if (qword_1ED88E518 != -1)
    swift_once();
  v66 = sub_1CB8466D8();
  __swift_project_value_buffer(v66, (uint64_t)qword_1ED890248);
  v67 = (uint64_t)v100;
  sub_1CB7BDB4C(v65, (uint64_t)v100);
  v68 = sub_1CB8466C0();
  v69 = sub_1CB846C84();
  if (os_log_type_enabled(v68, v69))
  {
    v70 = (uint8_t *)swift_slowAlloc();
    v71 = swift_slowAlloc();
    v103 = v71;
    v99 = a2;
    *(_DWORD *)v70 = 136315138;
    v93[1] = v70 + 4;
    sub_1CB7BDB4C(v67, v97);
    v72 = sub_1CB8468DC();
    v102 = sub_1CB775A54(v72, v73, &v103);
    a2 = v99;
    sub_1CB846E58();
    v65 = (uint64_t)v95;
    swift_bridgeObjectRelease();
    sub_1CB785B54(v67, &qword_1ED88D570);
    _os_log_impl(&dword_1CB771000, v68, v69, "makeSuggestionSummary candidateId: %s", v70, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v71, -1, -1);
    MEMORY[0x1D179FE84](v70, -1, -1);

    v74 = *(void (**)(char *, uint64_t))(v17 + 8);
    v74(v96, v16);
  }
  else
  {

    sub_1CB785B54(v67, &qword_1ED88D570);
    v74 = *(void (**)(char *, uint64_t))(v17 + 8);
    v74((char *)v63, v16);
  }
  v74(v22, v16);
  sub_1CB7B4B88(v65, a2);
  v92 = type metadata accessor for UniversalSuggestionSummary(0);
  *(_BYTE *)(a2 + *(int *)(v92 + 20)) = v94;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(a2, 0, 1, v92);
}

uint64_t UniversalSuggestionSummaries.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = v2;
  if (a1)
  {
    *(_QWORD *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2608);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t sub_1CB840B8C(unint64_t *a1)
{
  return UniversalSuggestionSummaryExtractor.extract(from:)(*a1);
}

uint64_t UniversalSuggestionSummaries.init(value:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1)
  {
    *(_QWORD *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2608);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t UniversalSuggestionSummaries.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UniversalSuggestionSummaries.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB840C94(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for UniversalSuggestionSummaries(0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB840CC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for UniversalSuggestionSummaries(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1)
  {
    *(_QWORD *)(v2 + 16) = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A2608);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

BOOL _s28SiriPrivateLearningAnalytics26UniversalSuggestionSummaryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_1CB846084();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EF78);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v26 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v26 - v18;
  sub_1CB7BDB4C(a1, (uint64_t)&v26 - v18);
  v27 = a2;
  sub_1CB7BDB4C(a2, (uint64_t)v17);
  v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1CB7BDB4C((uint64_t)v19, (uint64_t)v10);
  sub_1CB7BDB4C((uint64_t)v17, v20);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_1CB785B54((uint64_t)v17, &qword_1ED88D570);
    sub_1CB785B54((uint64_t)v19, &qword_1ED88D570);
    if (v21(v20, 1, v4) == 1)
    {
      sub_1CB785B54((uint64_t)v10, &qword_1ED88D570);
LABEL_8:
      v24 = type metadata accessor for UniversalSuggestionSummary(0);
      return *(unsigned __int8 *)(a1 + *(int *)(v24 + 20)) == *(unsigned __int8 *)(v27 + *(int *)(v24 + 20));
    }
    goto LABEL_6;
  }
  sub_1CB7BDB4C((uint64_t)v10, (uint64_t)v14);
  if (v21(v20, 1, v4) == 1)
  {
    sub_1CB785B54((uint64_t)v17, &qword_1ED88D570);
    sub_1CB785B54((uint64_t)v19, &qword_1ED88D570);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_6:
    sub_1CB785B54((uint64_t)v10, &qword_1EF99EF78);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v20, v4);
  sub_1CB7762AC((unint64_t *)&qword_1ED88BBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  v22 = sub_1CB846864();
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v7, v4);
  sub_1CB785B54((uint64_t)v17, &qword_1ED88D570);
  sub_1CB785B54((uint64_t)v19, &qword_1ED88D570);
  v23(v14, v4);
  sub_1CB785B54((uint64_t)v10, &qword_1ED88D570);
  if ((v22 & 1) != 0)
    goto LABEL_8;
  return 0;
}

unint64_t sub_1CB841024(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id *v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v27 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A27A0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for UniversalSuggestionSummary(0);
  v8 = *(_QWORD *)(v26 - 8);
  v9 = MEMORY[0x1E0C80A78](v26);
  v25 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v23 = (uint64_t)&v22 - v11;
  if (a1 >> 62)
    goto LABEL_18;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; v12 = sub_1CB847044())
  {
    v22 = v3;
    v24 = a1 & 0xC000000000000001;
    v13 = MEMORY[0x1E0DEE9D8];
    v14 = 4;
    v15 = (id *)a1;
    while (1)
    {
      v3 = v14 - 4;
      v16 = v24 ? (id *)MEMORY[0x1D179F320](v14 - 4, a1) : (id *)*(id *)(a1 + 8 * v14);
      a1 = (unint64_t)v16;
      v17 = v14 - 3;
      if (__OFADD__(v3, 1))
        break;
      v28 = v27;
      sub_1CB840244(v16, (uint64_t)v7);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v26) == 1)
      {
        sub_1CB785B54((uint64_t)v7, &qword_1EF9A27A0);
      }
      else
      {
        v18 = v23;
        sub_1CB841934((uint64_t)v7, v23);
        sub_1CB841934(v18, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_1CB78FA7C(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
        v20 = *(_QWORD *)(v13 + 16);
        v19 = *(_QWORD *)(v13 + 24);
        if (v20 >= v19 >> 1)
          v13 = sub_1CB78FA7C(v19 > 1, v20 + 1, 1, v13);
        *(_QWORD *)(v13 + 16) = v20 + 1;
        sub_1CB841934(v25, v13+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v20);
      }
      a1 = (unint64_t)v15;
      ++v14;
      if (v17 == v12)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t type metadata accessor for UniversalSuggestionSummaries(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A26E0);
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalSuggestionSummary(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CB846084();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for UniversalSuggestionSummary(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1CB846084();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for UniversalSuggestionSummary(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for UniversalSuggestionSummary(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for UniversalSuggestionSummary(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for UniversalSuggestionSummary(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalSuggestionSummary()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB8417B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestionSummary()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB841838(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

void sub_1CB8418B4()
{
  unint64_t v0;

  sub_1CB7B4A94();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for UniversalSuggestionSummaryExtractor()
{
  return &type metadata for UniversalSuggestionSummaryExtractor;
}

uint64_t sub_1CB841934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UniversalSuggestionSummary(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CB841978()
{
  unint64_t result;

  result = qword_1EF9A27A8;
  if (!qword_1EF9A27A8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB8499E8, &type metadata for PLUSSchemaConverters.ConversionError);
    atomic_store(result, (unint64_t *)&qword_1EF9A27A8);
  }
  return result;
}

NSObject *sub_1CB8419BC()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E080);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CB848A60;
  if (qword_1ED88A670 != -1)
    swift_once();
  v1 = *(_QWORD *)algn_1ED88A668;
  *(_QWORD *)(inited + 32) = qword_1ED88A660;
  *(_QWORD *)(inited + 40) = v1;
  v2 = qword_1ED88A6A0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = *(_QWORD *)algn_1ED88A698;
  *(_QWORD *)(inited + 48) = qword_1ED88A690;
  *(_QWORD *)(inited + 56) = v3;
  swift_bridgeObjectRetain();
  v4 = sub_1CB8423E4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v4;
}

id DiagnosticExtensionFileFinder.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id DiagnosticExtensionFileFinder.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagnosticExtensionFileFinder();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DiagnosticExtensionFileFinder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagnosticExtensionFileFinder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CB841C70(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  id v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  void (*v68)(char *, unint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72[2];

  v72[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1CB845F58();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v63 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v63 - v10;
  v71 = MEMORY[0x1E0DEE9D8];
  if (qword_1ED88E518 != -1)
    swift_once();
  v12 = sub_1CB8466D8();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED890248);
  v14 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
  v14(v11, a1, v2);
  v69 = v13;
  v15 = sub_1CB8466C0();
  v16 = sub_1CB846C78();
  v17 = os_log_type_enabled(v15, v16);
  v68 = v14;
  v66 = v3;
  if (v17)
  {
    v18 = swift_slowAlloc();
    v64 = a1;
    v19 = v2;
    v20 = v3;
    v21 = (uint8_t *)v18;
    v22 = (void *)swift_slowAlloc();
    v72[0] = v22;
    v65 = v6;
    *(_DWORD *)v21 = 136315138;
    v67 = (void (*)(char *, uint64_t))(v21 + 4);
    sub_1CB799E24();
    v23 = sub_1CB847170();
    v70 = sub_1CB775A54(v23, v24, (uint64_t *)v72);
    v6 = v65;
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    v25 = *(void (**)(char *, uint64_t))(v20 + 8);
    v2 = v19;
    a1 = v64;
    v67 = v25;
    v25(v11, v2);
    _os_log_impl(&dword_1CB771000, v15, v16, "DiagnosticExtension - Gathering files from: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v22, -1, -1);
    MEMORY[0x1D179FE84](v21, -1, -1);
  }
  else
  {
    v67 = *(void (**)(char *, uint64_t))(v3 + 8);
    v67(v11, v2);
  }

  v26 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v27 = (void *)sub_1CB845EE0();
  v72[0] = 0;
  v28 = objc_msgSend(v26, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v27, 0, 0, v72);

  v29 = v72[0];
  if (v28)
  {
    v30 = sub_1CB846A5C();
    v31 = v29;

    v32 = *(_QWORD *)(v30 + 16);
    if (v32)
    {
      v72[0] = (id)MEMORY[0x1E0DEE9D8];
      sub_1CB846FCC();
      v33 = v67;
      v34 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
      v65 = (char *)v30;
      v35 = v30 + v34;
      v36 = *(_QWORD *)(v66 + 72);
      v37 = v68;
      do
      {
        v37(v9, v35, v2);
        sub_1CB845F4C();
        v38 = objc_allocWithZone(MEMORY[0x1E0C99E98]);
        v39 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
        swift_bridgeObjectRelease();
        objc_msgSend(v38, sel_initFileURLWithPath_, v39);

        v33(v9, v2);
        sub_1CB846FB4();
        sub_1CB846FD8();
        sub_1CB846FE4();
        sub_1CB846FC0();
        v35 += v36;
        --v32;
      }
      while (v32);
      v40 = v72[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v40 = (id)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRetain_n();
    v53 = sub_1CB8466C0();
    v54 = sub_1CB846C78();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = (void *)swift_slowAlloc();
      v72[0] = v56;
      *(_DWORD *)v55 = 136315138;
      v57 = sub_1CB8426E4();
      v58 = swift_bridgeObjectRetain();
      v59 = MEMORY[0x1D179EE28](v58, v57);
      v61 = v60;
      swift_bridgeObjectRelease();
      v70 = sub_1CB775A54(v59, v61, (uint64_t *)v72);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v53, v54, "DiagnosticExtension - URLS: %s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v56, -1, -1);
      MEMORY[0x1D179FE84](v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1CB7F1788((unint64_t)v40);
  }
  else
  {
    v41 = v72[0];
    v42 = (void *)sub_1CB845E80();

    swift_willThrow();
    v68(v6, a1, v2);
    v43 = v42;
    v44 = v42;
    v45 = sub_1CB8466C0();
    v46 = sub_1CB846C90();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = swift_slowAlloc();
      v48 = (void *)swift_slowAlloc();
      v72[0] = v48;
      *(_DWORD *)v47 = 136315394;
      sub_1CB799E24();
      v49 = sub_1CB847170();
      v70 = sub_1CB775A54(v49, v50, (uint64_t *)v72);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      v67(v6, v2);
      *(_WORD *)(v47 + 12) = 2080;
      swift_getErrorValue();
      v51 = sub_1CB84729C();
      v70 = sub_1CB775A54(v51, v52, (uint64_t *)v72);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v45, v46, "DiagnosticExtension - Error while enumerating files %s: %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v48, -1, -1);
      MEMORY[0x1D179FE84](v47, -1, -1);

    }
    else
    {

      v67(v6, v2);
    }
  }
  return v71;
}

NSObject *sub_1CB8423E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  NSObject *v18;
  uint64_t v20;
  NSObject *v21;

  v2 = sub_1CB845F58();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), sel_init);
  v7 = MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    v9 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1CB845EC8();
      v10 = sub_1CB841C70((unint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      sub_1CB7F1788(v10);
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v7 = (unint64_t)v21;
  }
  sub_1CB77505C(v7);
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_addObjectsFromArray_, v11);

  if (qword_1ED88E518 != -1)
    swift_once();
  v12 = sub_1CB8466D8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED890248);
  v13 = v6;
  v14 = sub_1CB8466C0();
  v15 = sub_1CB846C78();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v16 = 138412290;
    v21 = v13;
    v18 = v13;
    sub_1CB846E58();
    *v17 = v13;

    _os_log_impl(&dword_1CB771000, v14, v15, "DiagnosticExtension - Final set of URLS: %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v17, -1, -1);
    MEMORY[0x1D179FE84](v16, -1, -1);
  }
  else
  {

    v14 = v13;
  }

  return v13;
}

uint64_t type metadata accessor for DiagnosticExtensionFileFinder()
{
  return objc_opt_self();
}

uint64_t method lookup function for DiagnosticExtensionFileFinder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DiagnosticExtensionFileFinder.getFileList()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

unint64_t sub_1CB8426E4()
{
  unint64_t result;

  result = qword_1EF9A0BF0;
  if (!qword_1EF9A0BF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF9A0BF0);
  }
  return result;
}

void static RuntimeSuggestionLog.record(requestId:suggestionId:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (**v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  unint64_t v30;
  uint8_t *v31;
  char *v32;
  void *v33;
  id v34;
  void *v35;
  unsigned __int8 v36;
  uint64_t v37;
  char *v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB845F58();
  v8 = *(void (***)(char *, char *, uint64_t))(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v52 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v53 = (char *)&v49 - v11;
  v12 = sub_1CB8468D0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = a1;
  v57 = a2;
  swift_bridgeObjectRetain();
  sub_1CB846954();
  sub_1CB846954();
  v16 = v57;
  v54 = v56;
  swift_bridgeObjectRetain();
  sub_1CB846954();
  sub_1CB8468C4();
  v17 = sub_1CB8468AC();
  v19 = v18;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v19 >> 60 == 15)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v20 = sub_1CB8466D8();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED890248);
    swift_bridgeObjectRetain();
    v21 = sub_1CB8466C0();
    v22 = sub_1CB846C90();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v56 = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain();
      v55 = sub_1CB775A54(v54, v16, &v56);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CB771000, v21, v22, "RuntimeSuggestionLog failed to convert entry to data for writing: \"%s\"", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v24, -1, -1);
      MEMORY[0x1D179FE84](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    v51 = v19;
    sub_1CB843090((uint64_t)v6);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v8[6])(v6, 1, v7) == 1)
    {
      v25 = v17;
      swift_bridgeObjectRelease();
      sub_1CB799DA0((uint64_t)v6);
      if (qword_1ED88E518 != -1)
        swift_once();
      v26 = sub_1CB8466D8();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED890248);
      v27 = sub_1CB8466C0();
      v28 = sub_1CB846C90();
      v29 = os_log_type_enabled(v27, v28);
      v30 = v51;
      if (v29)
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_1CB771000, v27, v28, "RuntimeSuggestionLog no container access", v31, 2u);
        MEMORY[0x1D179FE84](v31, -1, -1);
      }
      sub_1CB78A670(v25, v30);

    }
    else
    {
      v50 = v17;
      v32 = v53;
      v8[4](v53, v6, v7);
      v33 = (void *)objc_opt_self();
      v34 = objc_msgSend(v33, sel_defaultManager);
      sub_1CB845F40();
      v35 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
      swift_bridgeObjectRelease();
      v36 = objc_msgSend(v34, sel_fileExistsAtPath_, v35);

      v49 = v7;
      if ((v36 & 1) != 0)
      {
        sub_1CB843EDC();
        v37 = (uint64_t)v52;
        v8[2](v52, v32, v7);
        v38 = v32;
        v39 = sub_1CB84328C(v37);
        sub_1CB846C54();
        v52 = (char *)v8;
        v47 = v51;
        v48 = (void *)sub_1CB845F88();
        objc_msgSend(v39, sel_writeData_, v48);

        objc_msgSend(v39, sel_closeFile);
      }
      else
      {
        v52 = (char *)v8;
        v40 = objc_msgSend(v33, sel_defaultManager);
        sub_1CB845F40();
        v41 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
        swift_bridgeObjectRelease();
        v47 = v51;
        v39 = (void *)sub_1CB845F88();
        objc_msgSend(v40, sel_createFileAtPath_contents_attributes_, v41, v39, 0);

        v38 = v32;
      }

      if (qword_1ED88E518 != -1)
        swift_once();
      v42 = sub_1CB8466D8();
      __swift_project_value_buffer(v42, (uint64_t)qword_1ED890248);
      swift_bridgeObjectRetain();
      v43 = sub_1CB8466C0();
      v44 = sub_1CB846C84();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        v46 = swift_slowAlloc();
        v56 = v46;
        *(_DWORD *)v45 = 136315138;
        swift_bridgeObjectRetain();
        v55 = sub_1CB775A54(v54, v16, &v56);
        sub_1CB846E58();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1CB771000, v43, v44, "RuntimeSuggestionLog recorded: \"%s\"", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v46, -1, -1);
        MEMORY[0x1D179FE84](v45, -1, -1);
        sub_1CB78A670(v50, v47);
      }
      else
      {
        sub_1CB78A670(v50, v47);
        swift_bridgeObjectRelease_n();
      }

      (*((void (**)(char *, uint64_t))v52 + 1))(v38, v49);
    }
  }
}

uint64_t sub_1CB843090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = sub_1CB846570();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - v10;
  sub_1CB7CF380((uint64_t)v9);
  v12 = sub_1CB845F58();
  v13 = *(_QWORD **)(v12 - 8);
  v14 = (unsigned int (*)(char *, uint64_t, uint64_t))v13[6];
  if (v14(v9, 1, v12) == 1)
  {
    sub_1CB799DA0((uint64_t)v9);
    v15 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v13[7];
    v15(v11, 1, 1, v12);
  }
  else
  {
    sub_1CB846564();
    sub_1CB845EF8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v16 = (void (*)(char *, uint64_t))v13[1];
    v16(v9, v12);
    v15 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v13[7];
    v15(v11, 0, 1, v12);
    if (v14(v11, 1, v12) != 1)
    {
      sub_1CB845F10();
      v16(v11, v12);
      v17 = a1;
      v18 = 0;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v17, v18, 1, v12);
    }
  }
  sub_1CB799DA0((uint64_t)v11);
  v17 = a1;
  v18 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v17, v18, 1, v12);
}

id sub_1CB84328C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1CB845EE0();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_1CB845F58();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_1CB845E80();

    swift_willThrow();
    v9 = sub_1CB845F58();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

unint64_t static RuntimeSuggestionLog.readAll()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t result;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;

  v0 = sub_1CB845DE4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CB8468D0();
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CB845F58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB843090((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1CB799DA0((uint64_t)v7);
    if (qword_1ED88E518 != -1)
      swift_once();
    v12 = sub_1CB8466D8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED890248);
    v13 = sub_1CB8466C0();
    v14 = sub_1CB846C90();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1CB771000, v13, v14, "RuntimeSuggestionLog no container access", v15, 2u);
      MEMORY[0x1D179FE84](v15, -1, -1);
    }

    return sub_1CB787F60(MEMORY[0x1E0DEE9D8]);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_1CB8468C4();
  v17 = sub_1CB846870();
  v50 = 0;
  v54 = v17;
  v55 = v18;
  sub_1CB845DD8();
  v19 = sub_1CB78A5E8();
  v20 = sub_1CB846E70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v46 = v11;
    v47 = v9;
    v48 = v8;
    swift_bridgeObjectRetain();
    v45 = v20;
    v22 = (uint64_t *)(v20 + 40);
    v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v49 = v19;
    do
    {
      v24 = *v22;
      v54 = *(v22 - 1);
      v55 = v24;
      swift_bridgeObjectRetain();
      v25 = (_QWORD *)sub_1CB846EAC();
      if (v25[2] < 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v27 = v25[6];
        v26 = v25[7];
        v28 = v25[4];
        v29 = v25[5];
        v30 = v25[8];
        v31 = v25[9];
        v51 = v25[10];
        v52 = v30;
        v53 = v23;
        v32 = v25[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v33 = MEMORY[0x1D179ECCC](v28, v29, v27, v26);
        v35 = v34;
        swift_bridgeObjectRelease();
        v36 = MEMORY[0x1D179ECCC](v52, v31, v51, v32);
        v38 = v37;
        swift_bridgeObjectRelease();
        v23 = v53;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v23 = sub_1CB790718(0, v23[2] + 1, 1, v23);
        v40 = v23[2];
        v39 = v23[3];
        if (v40 >= v39 >> 1)
          v23 = sub_1CB790718((_QWORD *)(v39 > 1), v40 + 1, 1, v23);
        v23[2] = v40 + 1;
        v41 = &v23[4 * v40];
        v41[4] = v33;
        v41[5] = v35;
        v41[6] = v36;
        v41[7] = v38;
      }
      v22 += 2;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    v9 = v47;
    v8 = v48;
    v11 = v46;
  }
  else
  {
    v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v42 = v50;
  if (v23[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAC0);
    v43 = sub_1CB847068();
  }
  else
  {
    v43 = MEMORY[0x1E0DEE9E0];
  }
  v54 = v43;
  sub_1CB843F18((uint64_t)v23, 1, &v54);
  if (!v42)
  {
    swift_bridgeObjectRelease();
    v16 = v54;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v16;
  }
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

void static RuntimeSuggestionLog.clear()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  void *v13;
  unsigned int v14;
  id v15;
  void *v16;
  unsigned int v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  void *v32;
  uint64_t v33;
  _QWORD v34[2];
  id v35[2];

  v35[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1CB845F58();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB843090((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    v11 = (void *)objc_opt_self();
    v12 = objc_msgSend(v11, sel_defaultManager);
    sub_1CB845F40();
    v13 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v12, sel_fileExistsAtPath_, v13);

    if (v14)
    {
      v15 = objc_msgSend(v11, sel_defaultManager);
      v16 = (void *)sub_1CB845EE0();
      v35[0] = 0;
      v17 = objc_msgSend(v15, sel_removeItemAtURL_error_, v16, v35);

      if (!v17)
      {
        v23 = v35[0];
        v24 = (void *)sub_1CB845E80();

        swift_willThrow();
        if (qword_1ED88E518 != -1)
          swift_once();
        v25 = sub_1CB8466D8();
        __swift_project_value_buffer(v25, (uint64_t)qword_1ED890248);
        v26 = v24;
        v27 = v24;
        v28 = sub_1CB8466C0();
        v29 = sub_1CB846C90();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = (uint8_t *)swift_slowAlloc();
          v34[0] = swift_slowAlloc();
          *(_DWORD *)v30 = 138412290;
          v31 = v24;
          v32 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v35[0] = v32;
          sub_1CB846E58();
          v33 = v34[0];
          *(_QWORD *)v34[0] = v32;

          _os_log_impl(&dword_1CB771000, v28, v29, "RuntimeSuggestionLog failed to clear log: %@", v30, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
          swift_arrayDestroy();
          MEMORY[0x1D179FE84](v33, -1, -1);
          MEMORY[0x1D179FE84](v30, -1, -1);

        }
        else
        {

        }
        goto LABEL_21;
      }
      v18 = v35[0];
    }
    if (qword_1ED88E518 != -1)
      swift_once();
    v19 = sub_1CB8466D8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED890248);
    v20 = sub_1CB8466C0();
    v21 = sub_1CB846C84();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1CB771000, v20, v21, "RuntimeSuggestionLog cleared", v22, 2u);
      MEMORY[0x1D179FE84](v22, -1, -1);
    }

LABEL_21:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return;
  }
  sub_1CB799DA0((uint64_t)v2);
  if (qword_1ED88E518 != -1)
    swift_once();
  v7 = sub_1CB8466D8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED890248);
  v8 = sub_1CB8466C0();
  v9 = sub_1CB846C90();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1CB771000, v8, v9, "RuntimeSuggestionLog no container access", v10, 2u);
    MEMORY[0x1D179FE84](v10, -1, -1);
  }

}

unint64_t sub_1CB843EDC()
{
  unint64_t result;

  result = qword_1EF9A27D8;
  if (!qword_1EF9A27D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF9A27D8);
  }
  return result;
}

uint64_t sub_1CB843F18(uint64_t result, char a2, uint64_t *a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *i;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = v6[4];
    v7 = v6[5];
    v9 = v6[6];
    v10 = v6[7];
    v49 = v6;
    v50 = a3;
    v11 = *a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1CB779A70(v8, v7);
    v14 = *(_QWORD *)(v11 + 16);
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v17 = v12;
    if (*(_QWORD *)(v11 + 24) >= v16)
    {
      if ((a2 & 1) == 0)
      {
        sub_1CB780970();
        v20 = v50;
        v21 = (_QWORD *)*v50;
        if ((v17 & 1) != 0)
        {
LABEL_8:
          swift_bridgeObjectRelease();
          v22 = (_QWORD *)(v21[7] + 16 * v13);
          swift_bridgeObjectRelease();
          v20 = v50;
          *v22 = v9;
          v22[1] = v10;
          v23 = v3 - 1;
          if (v3 != 1)
          {
LABEL_15:
            for (i = v49 + 11; ; i += 4)
            {
              v32 = *(i - 3);
              v31 = *(i - 2);
              v33 = *(i - 1);
              v34 = *i;
              v35 = *v20;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v37 = sub_1CB779A70(v32, v31);
              v38 = *(_QWORD *)(v35 + 16);
              v39 = (v36 & 1) == 0;
              v40 = v38 + v39;
              if (__OFADD__(v38, v39))
                break;
              v41 = v36;
              if (*(_QWORD *)(v35 + 24) < v40)
              {
                sub_1CB77E194(v40, 1);
                v42 = sub_1CB779A70(v32, v31);
                if ((v41 & 1) != (v43 & 1))
                  goto LABEL_27;
                v37 = v42;
              }
              v20 = v50;
              v44 = (_QWORD *)*v50;
              if ((v41 & 1) != 0)
              {
                swift_bridgeObjectRelease();
                v30 = (_QWORD *)(v44[7] + 16 * v37);
                swift_bridgeObjectRelease();
                v20 = v50;
                *v30 = v33;
                v30[1] = v34;
              }
              else
              {
                v44[(v37 >> 6) + 8] |= 1 << v37;
                v45 = (uint64_t *)(v44[6] + 16 * v37);
                *v45 = v32;
                v45[1] = v31;
                v46 = (_QWORD *)(v44[7] + 16 * v37);
                *v46 = v33;
                v46[1] = v34;
                v47 = v44[2];
                v27 = __OFADD__(v47, 1);
                v48 = v47 + 1;
                if (v27)
                  goto LABEL_26;
                v44[2] = v48;
              }
              if (!--v23)
                return swift_bridgeObjectRelease();
            }
            goto LABEL_25;
          }
          return swift_bridgeObjectRelease();
        }
LABEL_11:
        v21[(v13 >> 6) + 8] |= 1 << v13;
        v24 = (uint64_t *)(v21[6] + 16 * v13);
        *v24 = v8;
        v24[1] = v7;
        v25 = (_QWORD *)(v21[7] + 16 * v13);
        *v25 = v9;
        v25[1] = v10;
        v26 = v21[2];
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
        {
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        v21[2] = v28;
        v23 = v3 - 1;
        if (v3 != 1)
          goto LABEL_15;
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1CB77E194(v16, a2 & 1);
      v18 = sub_1CB779A70(v8, v7);
      if ((v17 & 1) != (v19 & 1))
      {
LABEL_27:
        result = sub_1CB847290();
        __break(1u);
        return result;
      }
      v13 = v18;
    }
    v20 = v50;
    v21 = (_QWORD *)*v50;
    if ((v17 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
  return result;
}

ValueMetadata *type metadata accessor for RuntimeSuggestionLog()
{
  return &type metadata for RuntimeSuggestionLog;
}

void *sub_1CB8441E0(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v19;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A130]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A150]), sel_init);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A160]), sel_init);
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A168]), sel_init);
        if (v8)
        {
          v9 = v8;
          v10 = a1 + *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
          v11 = type metadata accessor for UniversalCandidate(0);
          if (*(double *)(v10 + *(int *)(v11 + 28)) > 0.0)
            v12 = 1;
          else
            v12 = 2;
          objc_msgSend(v5, sel_setSurfacedBeforeStatus_, v12);
          objc_msgSend(v9, sel_setConfidence_, *(double *)(v10 + *(int *)(v11 + 24)));
          objc_msgSend(v7, sel_setUniversalSuggestion_, v9);
          objc_msgSend(v3, sel_setSuggestionValue_, v7);
          objc_msgSend(v3, sel_setSuggestionMetadata_, v5);

          return v3;
        }

        v3 = v5;
      }
      else
      {
        v7 = v5;
      }

      v3 = v7;
    }

  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v13 = sub_1CB8466D8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED890248);
  v14 = sub_1CB8466C0();
  v15 = sub_1CB846C90();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v19 = v17;
    *(_DWORD *)v16 = 136315138;
    sub_1CB775A54(0xD000000000000017, 0x80000001CB8591C0, &v19);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v14, v15, "PLUSSchemaUniversalSuggestionsMessageConstructor.%s:  failed to create PLUS SELF event templates", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v17, -1, -1);
    MEMORY[0x1D179FE84](v16, -1, -1);
  }

  return 0;
}

NSObject *sub_1CB844488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB846084();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A148]), sel_init);
  if (!v11)
    goto LABEL_9;
  v12 = v11;
  v13 = sub_1CB8441E0(a2);
  if (!v13)
  {

LABEL_9:
    if (qword_1ED88E518 != -1)
      swift_once();
    v21 = sub_1CB8466D8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED890248);
    v12 = sub_1CB8466C0();
    v22 = sub_1CB846C90();
    if (os_log_type_enabled(v12, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_1CB775A54(0xD000000000000024, 0x80000001CB8591E0, &v30);
      sub_1CB846E58();
      _os_log_impl(&dword_1CB771000, v12, v22, "PLUSSchemaUniversalSuggestionsMessageConstructor.%s:  failed to create PLUS SELF event templates", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v24, -1, -1);
      MEMORY[0x1D179FE84](v23, -1, -1);
    }
    goto LABEL_15;
  }
  v14 = v13;
  type metadata accessor for PLUSLoggingIdGenerator();
  v15 = type metadata accessor for UniversalSuggestionCandidate(0);
  static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)(a1, a2 + *(int *)(v15 + 24), (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1CB778FF4((uint64_t)v6);
    if (qword_1ED88E518 != -1)
      swift_once();
    v16 = sub_1CB8466D8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED890248);
    v17 = sub_1CB8466C0();
    v18 = sub_1CB846C90();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v30 = v20;
      *(_DWORD *)v19 = 136315138;
      v29 = sub_1CB775A54(0xD000000000000024, 0x80000001CB8591E0, &v30);
      sub_1CB846E58();
      _os_log_impl(&dword_1CB771000, v17, v18, "PLUSSchemaUniversalSuggestionsMessageConstructor.%s:  cannot generate a suggestion link id", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v20, -1, -1);
      MEMORY[0x1D179FE84](v19, -1, -1);

    }
    else
    {

    }
LABEL_15:

    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v25 = objc_allocWithZone(MEMORY[0x1E0D9A500]);
  v26 = (void *)sub_1CB84603C();
  v27 = objc_msgSend(v25, sel_initWithNSUUID_, v26);

  -[NSObject setSuggestionId:](v12, sel_setSuggestionId_, v27);
  -[NSObject setGeneratedSuggestion:](v12, sel_setGeneratedSuggestion_, v14);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

uint64_t SiriCorrectionsUndoResponse.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = v2;
  if (a1)
  {
    *(_QWORD *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A27E0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t SiriCorrectionsFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SiriCorrectionsFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t SiriCorrectionsFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SiriCorrectionsFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB844944(unint64_t *a1)
{
  return sub_1CB844AE8(*a1);
}

uint64_t SiriCorrectionsUndoResponse.init(value:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1)
  {
    *(_QWORD *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A27E0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t SiriCorrectionsUndoResponse.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SiriCorrectionsUndoResponse.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1CB844A4C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for SiriCorrectionsUndoResponse();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB844A80(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for SiriCorrectionsUndoResponse();
  v2 = swift_allocObject();
  v3 = v2;
  if (v1)
  {
    *(_QWORD *)(v2 + 16) = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A27E0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t sub_1CB844AE8(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t j;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t k;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t m;
  id v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v2 = MEMORY[0x1E0DEE9D8];
  v35 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1CB847044();
    v3 = result;
    if (result)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
        goto LABEL_66;
      }
      for (i = 0; i != v3; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x1D179F320](i, a1);
        else
          v6 = *(id *)(a1 + 8 * i + 32);
        v7 = v6;
        if (objc_msgSend(v6, sel_anyEventType) == 61)
        {
          sub_1CB846FB4();
          sub_1CB846FD8();
          sub_1CB846FE4();
          sub_1CB846FC0();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v8 = v35;
      v36 = v2;
      if (v8 < 0)
        goto LABEL_32;
      goto LABEL_16;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v8 = MEMORY[0x1E0DEE9D8];
  v36 = v2;
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
    goto LABEL_32;
LABEL_16:
  if ((v8 & 0x4000000000000000) != 0)
  {
LABEL_32:
    swift_retain();
    result = sub_1CB847044();
    v9 = result;
    if (!result)
      goto LABEL_33;
    goto LABEL_18;
  }
  v9 = *(_QWORD *)(v8 + 16);
  result = swift_retain();
  if (!v9)
  {
LABEL_33:
    swift_release();
    v20 = MEMORY[0x1E0DEE9D8];
    goto LABEL_34;
  }
LABEL_18:
  if (v9 < 1)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  for (j = 0; j != v9; ++j)
  {
    if ((v8 & 0xC000000000000001) != 0)
      v11 = (id)MEMORY[0x1D179F320](j, v8);
    else
      v11 = *(id *)(v8 + 8 * j + 32);
    v12 = v11;
    v13 = objc_msgSend(v11, sel_payload);
    if (v13)
    {
      v14 = v13;
      v15 = sub_1CB845F94();
      v17 = v16;

      v18 = (void *)sub_1CB845F88();
      sub_1CB779034(v15, v17);
    }
    else
    {
      v18 = 0;
    }
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A378]), sel_initWithData_, v18);

    if (v19)
    {
      MEMORY[0x1D179EDF8]();
      if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      sub_1CB846A74();
    }
  }
  swift_release();
  v20 = v36;
  v2 = MEMORY[0x1E0DEE9D8];
LABEL_34:
  swift_release();
  if (!(v20 >> 62))
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v21)
      goto LABEL_36;
LABEL_50:
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x1E0DEE9D8];
    goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  result = sub_1CB847044();
  v21 = result;
  if (!result)
    goto LABEL_50;
LABEL_36:
  if (v21 < 1)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  for (k = 0; k != v21; ++k)
  {
    if ((v20 & 0xC000000000000001) != 0)
      v23 = (id)MEMORY[0x1D179F320](k, v20);
    else
      v23 = *(id *)(v20 + 8 * k + 32);
    v24 = v23;
    v25 = objc_msgSend(v23, sel_undoChecked);
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, sel_checkUndoResponse);

      if (v27)
      {
        MEMORY[0x1D179EDF8]();
        if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CB846AA4();
        sub_1CB846AD4();
        sub_1CB846A74();
      }
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v28 = v2;
LABEL_51:
  swift_bridgeObjectRelease();
  if (!(v28 >> 62))
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v29)
      goto LABEL_53;
LABEL_63:
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x1E0DEE9D8];
LABEL_64:
    swift_bridgeObjectRelease();
    v34 = sub_1CB774ADC(v33);
    swift_bridgeObjectRelease();
    return v34;
  }
  swift_bridgeObjectRetain();
  result = sub_1CB847044();
  v29 = result;
  if (!result)
    goto LABEL_63;
LABEL_53:
  if (v29 >= 1)
  {
    for (m = 0; m != v29; ++m)
    {
      if ((v28 & 0xC000000000000001) != 0)
        v31 = (id)MEMORY[0x1D179F320](m, v28);
      else
        v31 = *(id *)(v28 + 8 * m + 32);
      v32 = v31;
      type metadata accessor for SiriCorrectionsUndoResponse();
      *(_QWORD *)(swift_allocObject() + 16) = v32;
      MEMORY[0x1D179EDF8]();
      if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      sub_1CB846A74();
    }
    swift_bridgeObjectRelease();
    v33 = v2;
    goto LABEL_64;
  }
LABEL_68:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SiriCorrectionsFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for SiriCorrectionsFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriCorrectionsFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of SiriCorrectionsFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for SiriCorrectionsUndoResponse()
{
  uint64_t result;

  result = qword_1EF9A2828;
  if (!qword_1EF9A2828)
    return swift_getSingletonMetadata();
  return result;
}

id UniversalCandidateCoreDataRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id UniversalCandidateCoreDataRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for UniversalCandidateCoreDataRecord();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for UniversalCandidateCoreDataRecord()
{
  return objc_opt_self();
}

id UniversalCandidateCoreDataRecord.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UniversalCandidateCoreDataRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1CB845204@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_lastUpdated);
  *a2 = v4;
  return result;
}

id sub_1CB845234(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLastUpdated_, *a1);
}

id sub_1CB845248@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_candidateForUniversalSuggestion);
  *a2 = result;
  return result;
}

id sub_1CB845280(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCandidateForUniversalSuggestion_, *a1);
}

id static UniversalCandidateCoreDataRecord.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

unint64_t sub_1CB845300()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF9A28E8;
  if (!qword_1EF9A28E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED88D570);
    v2 = sub_1CB8267A8();
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEE990], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF9A28E8);
  }
  return result;
}

void sub_1CB845364(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_candidateEntity);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1CB845F94();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1CB8453C8(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_1CB845F88();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setCandidateEntity_);

}

uint64_t sub_1CB84542C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_id);
  if (v3)
  {
    v4 = v3;
    sub_1CB846054();

    v5 = sub_1CB846084();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_1CB846084();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_1CB8454B0(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB7BDB4C(a1, (uint64_t)v6);
  v7 = *a2;
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    v10 = (void *)sub_1CB84603C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setId_, v10);

}

uint64_t sub_1CB84558C@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*v1, sel_id);
  if (v3)
  {
    v4 = v3;
    sub_1CB846054();

    v5 = sub_1CB846084();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1CB846084();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

char *keypath_get_selector_candidateEntity()
{
  return sel_candidateEntity;
}

char *keypath_get_selector_lastSurfaced()
{
  return sel_lastSurfaced;
}

id sub_1CB845638@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_lastSurfaced);
  *a2 = v4;
  return result;
}

id sub_1CB845668(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLastSurfaced_, *a1);
}

id sub_1CB84567C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_lastUpdated);
  *a2 = v4;
  return result;
}

id sub_1CB8456AC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLastUpdated_, *a1);
}

char *keypath_get_selector_score()
{
  return sel_score;
}

id sub_1CB8456CC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_score);
  *a2 = v4;
  return result;
}

id sub_1CB8456FC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setScore_, *a1);
}

id sub_1CB845710@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_candidateForUniversalSuggestion);
  *a2 = result;
  return result;
}

id sub_1CB845748(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCandidateForUniversalSuggestion_, *a1);
}

char *keypath_get_selector_topCandidateForUniversalRuntimeSuggestion()
{
  return sel_topCandidateForUniversalRuntimeSuggestion;
}

id sub_1CB845768@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_topCandidateForUniversalRuntimeSuggestion);
  *a2 = result;
  return result;
}

id sub_1CB8457A0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTopCandidateForUniversalRuntimeSuggestion_, *a1);
}

id UniversalRuntimeSuggestionCoreDataRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id UniversalRuntimeSuggestionCoreDataRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord()
{
  return objc_opt_self();
}

id UniversalRuntimeSuggestionCoreDataRecord.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static UniversalRuntimeSuggestionCoreDataRecord.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1CB845974(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_queryEntityName);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1CB8468A0();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1CB8459D8(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setQueryEntityName_);

}

char *keypath_get_selector_needsDisambiguation()
{
  return sel_needsDisambiguation;
}

id sub_1CB845A48@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_needsDisambiguation);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1CB845A78(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNeedsDisambiguation_, *a1);
}

char *keypath_get_selector_queryEntityName()
{
  return sel_queryEntityName;
}

char *keypath_get_selector_topCandidate()
{
  return sel_topCandidate;
}

id sub_1CB845AAC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_topCandidate);
  *a2 = result;
  return result;
}

id sub_1CB845AE4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTopCandidate_, *a1);
}

id UniversalSuggestionCoreDataRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id UniversalSuggestionCoreDataRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for UniversalSuggestionCoreDataRecord();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for UniversalSuggestionCoreDataRecord()
{
  return objc_opt_self();
}

id UniversalSuggestionCoreDataRecord.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UniversalSuggestionCoreDataRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1CB845C50@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_candidates);
  *a2 = result;
  return result;
}

id sub_1CB845C88(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCandidates_, *a1);
}

id static UniversalSuggestionCoreDataRecord.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

id sub_1CB845D14@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_candidates);
  *a2 = result;
  return result;
}

id sub_1CB845D4C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCandidates_, *a1);
}

uint64_t sub_1CB845D60()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1CB845D6C()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1CB845D78()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1CB845D84()
{
  return MEMORY[0x1E0CAE0C8]();
}

uint64_t sub_1CB845D90()
{
  return MEMORY[0x1E0CAE0E0]();
}

uint64_t sub_1CB845D9C()
{
  return MEMORY[0x1E0CAE108]();
}

uint64_t sub_1CB845DA8()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1CB845DB4()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1CB845DC0()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1CB845DCC()
{
  return MEMORY[0x1E0CAE3A0]();
}

uint64_t sub_1CB845DD8()
{
  return MEMORY[0x1E0CAE498]();
}

uint64_t sub_1CB845DE4()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1CB845DF0()
{
  return MEMORY[0x1E0CAE578]();
}

uint64_t sub_1CB845DFC()
{
  return MEMORY[0x1E0CAE580]();
}

uint64_t sub_1CB845E08()
{
  return MEMORY[0x1E0CAE5A0]();
}

uint64_t sub_1CB845E14()
{
  return MEMORY[0x1E0CAE5C0]();
}

uint64_t sub_1CB845E20()
{
  return MEMORY[0x1E0CAE5D0]();
}

uint64_t sub_1CB845E2C()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1CB845E38()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1CB845E44()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1CB845E50()
{
  return MEMORY[0x1E0CAE9F0]();
}

uint64_t sub_1CB845E5C()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1CB845E68()
{
  return MEMORY[0x1E0CAF8B0]();
}

uint64_t sub_1CB845E74()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1CB845E80()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1CB845E8C()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_1CB845E98()
{
  return MEMORY[0x1E0CAFC18]();
}

uint64_t sub_1CB845EA4()
{
  return MEMORY[0x1E0CAFD48]();
}

uint64_t sub_1CB845EB0()
{
  return MEMORY[0x1E0CAFD98]();
}

uint64_t sub_1CB845EBC()
{
  return MEMORY[0x1E0CAFDD8]();
}

uint64_t sub_1CB845EC8()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_1CB845ED4()
{
  return MEMORY[0x1E0CAFE08]();
}

uint64_t sub_1CB845EE0()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1CB845EEC()
{
  return MEMORY[0x1E0CAFE68]();
}

uint64_t sub_1CB845EF8()
{
  return MEMORY[0x1E0DF0170]();
}

uint64_t sub_1CB845F04()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1CB845F10()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_1CB845F1C()
{
  return MEMORY[0x1E0CAFE90]();
}

uint64_t sub_1CB845F28()
{
  return MEMORY[0x1E0CAFEB8]();
}

uint64_t sub_1CB845F34()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1CB845F40()
{
  return MEMORY[0x1E0CAFF30]();
}

uint64_t sub_1CB845F4C()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1CB845F58()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1CB845F64()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1CB845F70()
{
  return MEMORY[0x1E0CB0110]();
}

uint64_t sub_1CB845F7C()
{
  return MEMORY[0x1E0CB0138]();
}

uint64_t sub_1CB845F88()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1CB845F94()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1CB845FA0()
{
  return MEMORY[0x1E0CB0270]();
}

uint64_t sub_1CB845FAC()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1CB845FB8()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1CB845FC4()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1CB845FD0()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1CB845FDC()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1CB845FE8()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1CB845FF4()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1CB846000()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1CB84600C()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1CB846018()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1CB846024()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t sub_1CB846030()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1CB84603C()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_1CB846048()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1CB846054()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1CB846060()
{
  return MEMORY[0x1E0CB0970]();
}

uint64_t sub_1CB84606C()
{
  return MEMORY[0x1E0CB0978]();
}

uint64_t sub_1CB846078()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1CB846084()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1CB846090()
{
  return MEMORY[0x1E0CB0A80]();
}

uint64_t sub_1CB84609C()
{
  return MEMORY[0x1E0CB0AC0]();
}

uint64_t sub_1CB8460A8()
{
  return MEMORY[0x1E0CB0AE8]();
}

uint64_t sub_1CB8460B4()
{
  return MEMORY[0x1E0CB0C30]();
}

uint64_t sub_1CB8460C0()
{
  return MEMORY[0x1E0CB0C38]();
}

uint64_t sub_1CB8460CC()
{
  return MEMORY[0x1E0CB0C48]();
}

uint64_t sub_1CB8460D8()
{
  return MEMORY[0x1E0CB0CB0]();
}

uint64_t sub_1CB8460E4()
{
  return MEMORY[0x1E0CB0D80]();
}

uint64_t sub_1CB8460F0()
{
  return MEMORY[0x1E0CB0DB8]();
}

uint64_t sub_1CB8460FC()
{
  return MEMORY[0x1E0CB0DF0]();
}

uint64_t sub_1CB846108()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1CB846114()
{
  return MEMORY[0x1E0CF1390]();
}

uint64_t sub_1CB846120()
{
  return MEMORY[0x1E0D02398]();
}

uint64_t sub_1CB84612C()
{
  return MEMORY[0x1E0D023A0]();
}

uint64_t sub_1CB846138()
{
  return MEMORY[0x1E0D023A8]();
}

uint64_t sub_1CB846144()
{
  return MEMORY[0x1E0D023B0]();
}

uint64_t sub_1CB846150()
{
  return MEMORY[0x1E0D023B8]();
}

uint64_t sub_1CB84615C()
{
  return MEMORY[0x1E0D023C0]();
}

uint64_t sub_1CB846168()
{
  return MEMORY[0x1E0D02508]();
}

uint64_t sub_1CB846174()
{
  return MEMORY[0x1E0D02510]();
}

uint64_t sub_1CB846180()
{
  return MEMORY[0x1E0D02520]();
}

uint64_t sub_1CB84618C()
{
  return MEMORY[0x1E0D02528]();
}

uint64_t sub_1CB846198()
{
  return MEMORY[0x1E0D02530]();
}

uint64_t sub_1CB8461A4()
{
  return MEMORY[0x1E0D02548]();
}

uint64_t _s28SiriPrivateLearningAnalytics23EnvironmentFeatureFlagsV02isF7EnabledySb0fG00fG3Key_pF_0()
{
  return MEMORY[0x1E0D20EF8]();
}

uint64_t sub_1CB8461BC()
{
  return MEMORY[0x1E0D9F1A0]();
}

uint64_t sub_1CB8461C8()
{
  return MEMORY[0x1E0D9F1A8]();
}

uint64_t sub_1CB8461D4()
{
  return MEMORY[0x1E0D9F1B0]();
}

uint64_t sub_1CB8461E0()
{
  return MEMORY[0x1E0D9F1B8]();
}

uint64_t sub_1CB8461EC()
{
  return MEMORY[0x1E0D9F1C0]();
}

uint64_t sub_1CB8461F8()
{
  return MEMORY[0x1E0D9F1D0]();
}

uint64_t sub_1CB846204()
{
  return MEMORY[0x1E0D9F1D8]();
}

uint64_t sub_1CB846210()
{
  return MEMORY[0x1E0D9F1E8]();
}

uint64_t sub_1CB84621C()
{
  return MEMORY[0x1E0D9F1F0]();
}

uint64_t sub_1CB846228()
{
  return MEMORY[0x1E0D9F200]();
}

uint64_t sub_1CB846234()
{
  return MEMORY[0x1E0D9F208]();
}

uint64_t sub_1CB846240()
{
  return MEMORY[0x1E0D9F210]();
}

uint64_t sub_1CB84624C()
{
  return MEMORY[0x1E0D9F218]();
}

uint64_t sub_1CB846258()
{
  return MEMORY[0x1E0D9F240]();
}

uint64_t sub_1CB846264()
{
  return MEMORY[0x1E0D9F250]();
}

uint64_t sub_1CB846270()
{
  return MEMORY[0x1E0D9F268]();
}

uint64_t sub_1CB84627C()
{
  return MEMORY[0x1E0D9F270]();
}

uint64_t sub_1CB846288()
{
  return MEMORY[0x1E0D9F288]();
}

uint64_t sub_1CB846294()
{
  return MEMORY[0x1E0D9F378]();
}

uint64_t sub_1CB8462A0()
{
  return MEMORY[0x1E0D9F380]();
}

uint64_t sub_1CB8462AC()
{
  return MEMORY[0x1E0D9F388]();
}

uint64_t sub_1CB8462B8()
{
  return MEMORY[0x1E0D9F950]();
}

uint64_t sub_1CB8462C4()
{
  return MEMORY[0x1E0DA0188]();
}

uint64_t sub_1CB8462D0()
{
  return MEMORY[0x1E0DA0190]();
}

uint64_t sub_1CB8462DC()
{
  return MEMORY[0x1E0DA01A0]();
}

uint64_t sub_1CB8462E8()
{
  return MEMORY[0x1E0DA01D8]();
}

uint64_t sub_1CB8462F4()
{
  return MEMORY[0x1E0DA01E0]();
}

uint64_t sub_1CB846300()
{
  return MEMORY[0x1E0DA0428]();
}

uint64_t sub_1CB84630C()
{
  return MEMORY[0x1E0DA0430]();
}

uint64_t sub_1CB846318()
{
  return MEMORY[0x1E0DA0698]();
}

uint64_t sub_1CB846324()
{
  return MEMORY[0x1E0DA0CA0]();
}

uint64_t sub_1CB846330()
{
  return MEMORY[0x1E0DA0DE0]();
}

uint64_t sub_1CB84633C()
{
  return MEMORY[0x1E0DA0EB0]();
}

uint64_t sub_1CB846348()
{
  return MEMORY[0x1E0DA0EB8]();
}

uint64_t sub_1CB846354()
{
  return MEMORY[0x1E0DA0FA8]();
}

uint64_t sub_1CB846360()
{
  return MEMORY[0x1E0DA0FB8]();
}

uint64_t sub_1CB84636C()
{
  return MEMORY[0x1E0DA12F8]();
}

uint64_t sub_1CB846378()
{
  return MEMORY[0x1E0DA1330]();
}

uint64_t sub_1CB846384()
{
  return MEMORY[0x1E0DA1600]();
}

uint64_t sub_1CB846390()
{
  return MEMORY[0x1E0DA1618]();
}

uint64_t sub_1CB84639C()
{
  return MEMORY[0x1E0DA1B18]();
}

uint64_t sub_1CB8463A8()
{
  return MEMORY[0x1E0DA1B78]();
}

uint64_t sub_1CB8463B4()
{
  return MEMORY[0x1E0DA1EF8]();
}

uint64_t sub_1CB8463C0()
{
  return MEMORY[0x1E0DA2178]();
}

uint64_t sub_1CB8463CC()
{
  return MEMORY[0x1E0DA21B8]();
}

uint64_t sub_1CB8463D8()
{
  return MEMORY[0x1E0DA21E0]();
}

uint64_t sub_1CB8463E4()
{
  return MEMORY[0x1E0DA21F0]();
}

uint64_t sub_1CB8463F0()
{
  return MEMORY[0x1E0DA2238]();
}

uint64_t sub_1CB8463FC()
{
  return MEMORY[0x1E0DA2250]();
}

uint64_t sub_1CB846408()
{
  return MEMORY[0x1E0DA2268]();
}

uint64_t sub_1CB846414()
{
  return MEMORY[0x1E0DA22A8]();
}

uint64_t sub_1CB846420()
{
  return MEMORY[0x1E0DA2478]();
}

uint64_t sub_1CB84642C()
{
  return MEMORY[0x1E0DA2588]();
}

uint64_t sub_1CB846438()
{
  return MEMORY[0x1E0DA25A0]();
}

uint64_t sub_1CB846444()
{
  return MEMORY[0x1E0DA25A8]();
}

uint64_t sub_1CB846450()
{
  return MEMORY[0x1E0DA26A0]();
}

uint64_t sub_1CB84645C()
{
  return MEMORY[0x1E0DA26F0]();
}

uint64_t sub_1CB846468()
{
  return MEMORY[0x1E0DA2780]();
}

uint64_t sub_1CB846474()
{
  return MEMORY[0x1E0DA2788]();
}

uint64_t sub_1CB846480()
{
  return MEMORY[0x1E0DA2790]();
}

uint64_t sub_1CB84648C()
{
  return MEMORY[0x1E0DA2998]();
}

uint64_t sub_1CB846498()
{
  return MEMORY[0x1E0D12E30]();
}

uint64_t sub_1CB8464A4()
{
  return MEMORY[0x1E0D12E40]();
}

uint64_t sub_1CB8464B0()
{
  return MEMORY[0x1E0D12E48]();
}

uint64_t sub_1CB8464BC()
{
  return MEMORY[0x1E0D12E50]();
}

uint64_t sub_1CB8464C8()
{
  return MEMORY[0x1E0D12E58]();
}

uint64_t sub_1CB8464D4()
{
  return MEMORY[0x1E0D12E60]();
}

uint64_t sub_1CB8464E0()
{
  return MEMORY[0x1E0D12E70]();
}

uint64_t sub_1CB8464EC()
{
  return MEMORY[0x1E0D12E78]();
}

uint64_t sub_1CB8464F8()
{
  return MEMORY[0x1E0D12E80]();
}

uint64_t sub_1CB846504()
{
  return MEMORY[0x1E0D98F68]();
}

uint64_t sub_1CB846510()
{
  return MEMORY[0x1E0D3E680]();
}

uint64_t sub_1CB84651C()
{
  return MEMORY[0x1E0D3E698]();
}

uint64_t sub_1CB846528()
{
  return MEMORY[0x1E0D3E710]();
}

uint64_t sub_1CB846534()
{
  return MEMORY[0x1E0D3E740]();
}

uint64_t sub_1CB846540()
{
  return MEMORY[0x1E0D3E788]();
}

uint64_t sub_1CB84654C()
{
  return MEMORY[0x1E0D3E7A0]();
}

uint64_t sub_1CB846558()
{
  return MEMORY[0x1E0DF0268]();
}

uint64_t sub_1CB846564()
{
  return MEMORY[0x1E0DF0320]();
}

uint64_t sub_1CB846570()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t sub_1CB84657C()
{
  return MEMORY[0x1E0CF1398]();
}

uint64_t sub_1CB846588()
{
  return MEMORY[0x1E0CF13A0]();
}

uint64_t sub_1CB846594()
{
  return MEMORY[0x1E0CF13A8]();
}

uint64_t sub_1CB8465A0()
{
  return MEMORY[0x1E0CF13C0]();
}

uint64_t sub_1CB8465AC()
{
  return MEMORY[0x1E0CF13C8]();
}

uint64_t sub_1CB8465B8()
{
  return MEMORY[0x1E0CF13D0]();
}

uint64_t sub_1CB8465C4()
{
  return MEMORY[0x1E0CF13D8]();
}

uint64_t sub_1CB8465D0()
{
  return MEMORY[0x1E0CF13E0]();
}

uint64_t sub_1CB8465DC()
{
  return MEMORY[0x1E0CF13E8]();
}

uint64_t sub_1CB8465E8()
{
  return MEMORY[0x1E0CF1408]();
}

uint64_t sub_1CB8465F4()
{
  return MEMORY[0x1E0CF1410]();
}

uint64_t sub_1CB846600()
{
  return MEMORY[0x1E0DA3C38]();
}

uint64_t sub_1CB84660C()
{
  return MEMORY[0x1E0DA3C40]();
}

uint64_t sub_1CB846618()
{
  return MEMORY[0x1E0DA3C48]();
}

uint64_t sub_1CB846624()
{
  return MEMORY[0x1E0DA3C58]();
}

uint64_t sub_1CB846630()
{
  return MEMORY[0x1E0DF2100]();
}

uint64_t sub_1CB84663C()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t sub_1CB846648()
{
  return MEMORY[0x1E0DF2110]();
}

uint64_t sub_1CB846654()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_1CB846660()
{
  return MEMORY[0x1E0DF2130]();
}

uint64_t sub_1CB84666C()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t sub_1CB846678()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t sub_1CB846684()
{
  return MEMORY[0x1E0DF2198]();
}

uint64_t sub_1CB846690()
{
  return MEMORY[0x1E0DF2218]();
}

uint64_t sub_1CB84669C()
{
  return MEMORY[0x1E0DF2220]();
}

uint64_t sub_1CB8466A8()
{
  return MEMORY[0x1E0DF2228]();
}

uint64_t sub_1CB8466B4()
{
  return MEMORY[0x1E0DF2238]();
}

uint64_t sub_1CB8466C0()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1CB8466CC()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1CB8466D8()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1CB8466E4()
{
  return MEMORY[0x1E0DEF390]();
}

uint64_t sub_1CB8466F0()
{
  return MEMORY[0x1E0DF2040]();
}

uint64_t sub_1CB8466FC()
{
  return MEMORY[0x1E0DEF3F0]();
}

uint64_t sub_1CB846708()
{
  return MEMORY[0x1E0DEF3F8]();
}

uint64_t sub_1CB846714()
{
  return MEMORY[0x1E0DEF420]();
}

uint64_t sub_1CB846720()
{
  return MEMORY[0x1E0DEF428]();
}

uint64_t sub_1CB84672C()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1CB846738()
{
  return MEMORY[0x1E0DEF4B8]();
}

uint64_t sub_1CB846744()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1CB846750()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1CB84675C()
{
  return MEMORY[0x1E0DEF570]();
}

uint64_t sub_1CB846768()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1CB846774()
{
  return MEMORY[0x1E0DEF590]();
}

uint64_t sub_1CB846780()
{
  return MEMORY[0x1E0DEF598]();
}

uint64_t sub_1CB84678C()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1CB846798()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1CB8467A4()
{
  return MEMORY[0x1E0DEF6A0]();
}

uint64_t sub_1CB8467B0()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1CB8467BC()
{
  return MEMORY[0x1E0DEF750]();
}

uint64_t sub_1CB8467C8()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1CB8467D4()
{
  return MEMORY[0x1E0DF05B0]();
}

uint64_t sub_1CB8467E0()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1CB8467EC()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1CB8467F8()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1CB846804()
{
  return MEMORY[0x1E0DE9E58]();
}

uint64_t sub_1CB846810()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1CB84681C()
{
  return MEMORY[0x1E0DEA250]();
}

uint64_t sub_1CB846828()
{
  return MEMORY[0x1E0DEA260]();
}

uint64_t sub_1CB846834()
{
  return MEMORY[0x1E0DEA268]();
}

uint64_t sub_1CB846840()
{
  return MEMORY[0x1E0DEA280]();
}

uint64_t sub_1CB84684C()
{
  return MEMORY[0x1E0DF1FA0]();
}

uint64_t sub_1CB846858()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1CB846864()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1CB846870()
{
  return MEMORY[0x1E0CB1840]();
}

uint64_t _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1CB846888()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1CB846894()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1CB8468A0()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1CB8468AC()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1CB8468B8()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1CB8468C4()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1CB8468D0()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1CB8468DC()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1CB8468E8()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1CB8468F4()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1CB846900()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1CB84690C()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1CB846918()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1CB846924()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1CB846930()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1CB84693C()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1CB846948()
{
  return MEMORY[0x1E0DEA7F0]();
}

uint64_t sub_1CB846954()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1CB846960()
{
  return MEMORY[0x1E0DEA828]();
}

uint64_t sub_1CB84696C()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_1CB846978()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1CB846984()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1CB846990()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1CB84699C()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1CB8469A8()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1CB8469B4()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1CB8469C0()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1CB8469CC()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1CB8469D8()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1CB8469E4()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1CB8469F0()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t sub_1CB8469FC()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t sub_1CB846A08()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1CB846A14()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1CB846A20()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1CB846A2C()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1CB846A38()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1CB846A44()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1CB846A50()
{
  return MEMORY[0x1E0CB1AE0]();
}

uint64_t sub_1CB846A5C()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1CB846A68()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1CB846A74()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1CB846A80()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1CB846A8C()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_1CB846A98()
{
  return MEMORY[0x1E0DEADD8]();
}

uint64_t sub_1CB846AA4()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1CB846AB0()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1CB846ABC()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1CB846AC8()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_1CB846AD4()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1CB846AE0()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_1CB846AEC()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1CB846AF8()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_1CB846B04()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1CB846B10()
{
  return MEMORY[0x1E0CB1B28]();
}

uint64_t sub_1CB846B1C()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1CB846B28()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1CB846B34()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1CB846B40()
{
  return MEMORY[0x1E0DF05D8]();
}

uint64_t sub_1CB846B4C()
{
  return MEMORY[0x1E0DF05E0]();
}

uint64_t sub_1CB846B58()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t sub_1CB846B64()
{
  return MEMORY[0x1E0DF06B8]();
}

uint64_t sub_1CB846B70()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1CB846B7C()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1CB846B88()
{
  return MEMORY[0x1E0DF0878]();
}

uint64_t sub_1CB846B94()
{
  return MEMORY[0x1E0DF08B8]();
}

uint64_t sub_1CB846BA0()
{
  return MEMORY[0x1E0DF09D0]();
}

uint64_t sub_1CB846BAC()
{
  return MEMORY[0x1E0CB1B48]();
}

uint64_t sub_1CB846BB8()
{
  return MEMORY[0x1E0CB1B50]();
}

uint64_t sub_1CB846BC4()
{
  return MEMORY[0x1E0DEAFE8]();
}

uint64_t sub_1CB846BD0()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1CB846BDC()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1CB846BE8()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1CB846BF4()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1CB846C00()
{
  return MEMORY[0x1E0CB1C18]();
}

uint64_t sub_1CB846C0C()
{
  return MEMORY[0x1E0CB1C20]();
}

uint64_t sub_1CB846C18()
{
  return MEMORY[0x1E0CB1C28]();
}

uint64_t sub_1CB846C24()
{
  return MEMORY[0x1E0DEB408]();
}

uint64_t sub_1CB846C30()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1CB846C3C()
{
  return MEMORY[0x1E0DEB738]();
}

uint64_t sub_1CB846C48()
{
  return MEMORY[0x1E0CB1C90]();
}

uint64_t sub_1CB846C54()
{
  return MEMORY[0x1E0CB1D10]();
}

uint64_t sub_1CB846C60()
{
  return MEMORY[0x1E0CB1D18]();
}

uint64_t sub_1CB846C6C()
{
  return MEMORY[0x1E0CB1D20]();
}

uint64_t sub_1CB846C78()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1CB846C84()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1CB846C90()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1CB846C9C()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1CB846CA8()
{
  return MEMORY[0x1E0CB1E40]();
}

uint64_t sub_1CB846CB4()
{
  return MEMORY[0x1E0CB1E68]();
}

uint64_t sub_1CB846CC0()
{
  return MEMORY[0x1E0C97790]();
}

uint64_t sub_1CB846CCC()
{
  return MEMORY[0x1E0C97798]();
}

uint64_t sub_1CB846CD8()
{
  return MEMORY[0x1E0DEF7E0]();
}

uint64_t sub_1CB846CE4()
{
  return MEMORY[0x1E0DEF7E8]();
}

uint64_t sub_1CB846CF0()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1CB846CFC()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t sub_1CB846D08()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1CB846D14()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1CB846D20()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1CB846D2C()
{
  return MEMORY[0x1E0DEF918]();
}

uint64_t sub_1CB846D38()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1CB846D44()
{
  return MEMORY[0x1E0C977A0]();
}

uint64_t sub_1CB846D50()
{
  return MEMORY[0x1E0DA2BE8]();
}

uint64_t sub_1CB846D5C()
{
  return MEMORY[0x1E0DF2298]();
}

uint64_t sub_1CB846D68()
{
  return MEMORY[0x1E0DF22A0]();
}

uint64_t sub_1CB846D74()
{
  return MEMORY[0x1E0DF22A8]();
}

uint64_t sub_1CB846D80()
{
  return MEMORY[0x1E0D990F8]();
}

uint64_t sub_1CB846D8C()
{
  return MEMORY[0x1E0DEFA60]();
}

uint64_t sub_1CB846D98()
{
  return MEMORY[0x1E0DEFA70]();
}

uint64_t sub_1CB846DA4()
{
  return MEMORY[0x1E0C977B8]();
}

uint64_t sub_1CB846DB0()
{
  return MEMORY[0x1E0C977D8]();
}

uint64_t sub_1CB846DBC()
{
  return MEMORY[0x1E0C977F0]();
}

uint64_t sub_1CB846DC8()
{
  return MEMORY[0x1E0C977F8]();
}

uint64_t sub_1CB846DD4()
{
  return MEMORY[0x1E0C97800]();
}

uint64_t sub_1CB846DE0()
{
  return MEMORY[0x1E0D99148]();
}

uint64_t sub_1CB846DEC()
{
  return MEMORY[0x1E0CB2020]();
}

uint64_t sub_1CB846DF8()
{
  return MEMORY[0x1E0CB2028]();
}

uint64_t sub_1CB846E04()
{
  return MEMORY[0x1E0CB20E0]();
}

uint64_t sub_1CB846E10()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1CB846E1C()
{
  return MEMORY[0x1E0CB2130]();
}

uint64_t sub_1CB846E28()
{
  return MEMORY[0x1E0DF22B0]();
}

uint64_t sub_1CB846E34()
{
  return MEMORY[0x1E0DEB930]();
}

uint64_t sub_1CB846E40()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1CB846E4C()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1CB846E58()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1CB846E64()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1CB846E70()
{
  return MEMORY[0x1E0CB2400]();
}

uint64_t sub_1CB846E7C()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1CB846E88()
{
  return MEMORY[0x1E0CB2418]();
}

uint64_t sub_1CB846E94()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1CB846EA0()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1CB846EAC()
{
  return MEMORY[0x1E0DEFF58]();
}

uint64_t sub_1CB846EB8()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1CB846EC4()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1CB846ED0()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1CB846EDC()
{
  return MEMORY[0x1E0DEC070]();
}

uint64_t sub_1CB846EE8()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1CB846EF4()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1CB846F00()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1CB846F0C()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1CB846F18()
{
  return MEMORY[0x1E0DEC290]();
}

uint64_t sub_1CB846F24()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1CB846F30()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1CB846F3C()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1CB846F48()
{
  return MEMORY[0x1E0DEC338]();
}

uint64_t sub_1CB846F54()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_1CB846F60()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1CB846F6C()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1CB846F78()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1CB846F84()
{
  return MEMORY[0x1E0DEC488]();
}

uint64_t sub_1CB846F90()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1CB846F9C()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1CB846FA8()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_1CB846FB4()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1CB846FC0()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1CB846FCC()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1CB846FD8()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1CB846FE4()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1CB846FF0()
{
  return MEMORY[0x1E0DEC888]();
}

uint64_t sub_1CB846FFC()
{
  return MEMORY[0x1E0DEC8A0]();
}

uint64_t sub_1CB847008()
{
  return MEMORY[0x1E0DEC8B0]();
}

uint64_t sub_1CB847014()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1CB847020()
{
  return MEMORY[0x1E0DF0C68]();
}

uint64_t sub_1CB84702C()
{
  return MEMORY[0x1E0DECAA8]();
}

uint64_t sub_1CB847038()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1CB847044()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1CB847050()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1CB84705C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1CB847068()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1CB847074()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1CB847080()
{
  return MEMORY[0x1E0DF0CB8]();
}

uint64_t sub_1CB84708C()
{
  return MEMORY[0x1E0DECD90]();
}

uint64_t sub_1CB847098()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1CB8470A4()
{
  return MEMORY[0x1E0DECF18]();
}

uint64_t sub_1CB8470B0()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1CB8470BC()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1CB8470C8()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1CB8470D4()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1CB8470E0()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1CB8470EC()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1CB8470F8()
{
  return MEMORY[0x1E0DED030]();
}

uint64_t sub_1CB847104()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1CB847110()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1CB84711C()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1CB847128()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1CB847134()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1CB847140()
{
  return MEMORY[0x1E0DED160]();
}

uint64_t sub_1CB84714C()
{
  return MEMORY[0x1E0DED1A0]();
}

uint64_t sub_1CB847158()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1CB847164()
{
  return MEMORY[0x1E0DF0DB0]();
}

uint64_t sub_1CB847170()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1CB84717C()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1CB847188()
{
  return MEMORY[0x1E0DF0DD0]();
}

uint64_t sub_1CB847194()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1CB8471A0()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1CB8471AC()
{
  return MEMORY[0x1E0DED628]();
}

uint64_t sub_1CB8471B8()
{
  return MEMORY[0x1E0DED630]();
}

uint64_t sub_1CB8471C4()
{
  return MEMORY[0x1E0DED638]();
}

uint64_t sub_1CB8471D0()
{
  return MEMORY[0x1E0DED658]();
}

uint64_t sub_1CB8471DC()
{
  return MEMORY[0x1E0DED668]();
}

uint64_t sub_1CB8471E8()
{
  return MEMORY[0x1E0DED670]();
}

uint64_t sub_1CB8471F4()
{
  return MEMORY[0x1E0DED680]();
}

uint64_t sub_1CB847200()
{
  return MEMORY[0x1E0DED688]();
}

uint64_t sub_1CB84720C()
{
  return MEMORY[0x1E0DED6C8]();
}

uint64_t sub_1CB847218()
{
  return MEMORY[0x1E0DED6D0]();
}

uint64_t sub_1CB847224()
{
  return MEMORY[0x1E0DED6D8]();
}

uint64_t sub_1CB847230()
{
  return MEMORY[0x1E0DED6F8]();
}

uint64_t sub_1CB84723C()
{
  return MEMORY[0x1E0DED710]();
}

uint64_t sub_1CB847248()
{
  return MEMORY[0x1E0DED718]();
}

uint64_t sub_1CB847254()
{
  return MEMORY[0x1E0DED730]();
}

uint64_t sub_1CB847260()
{
  return MEMORY[0x1E0DED738]();
}

uint64_t sub_1CB84726C()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1CB847278()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1CB847284()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1CB847290()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1CB84729C()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1CB8472A8()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1CB8472B4()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1CB8472C0()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1CB8472CC()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1CB8472D8()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1CB8472E4()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1CB8472F0()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1CB8472FC()
{
  return MEMORY[0x1E0DEDF28]();
}

uint64_t sub_1CB847308()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1CB847314()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1CB847320()
{
  return MEMORY[0x1E0DEE220]();
}

uint64_t sub_1CB84732C()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1CB847338()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1CB847344()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1CB847350()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1CB84735C()
{
  return MEMORY[0x1E0DEE538]();
}

uint64_t sub_1CB847368()
{
  return MEMORY[0x1E0DEE6B8]();
}

uint64_t sub_1CB847374()
{
  return MEMORY[0x1E0DEE6E0]();
}

uint64_t sub_1CB847380()
{
  return MEMORY[0x1E0DEE6F0]();
}

uint64_t sub_1CB84738C()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1CB847398()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1CB8473A4()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t AFDeviceSupportsSiriUOD()
{
  return MEMORY[0x1E0CFE460]();
}

uint64_t AFSystemRootDirectory()
{
  return MEMORY[0x1E0CFE770]();
}

uint64_t AFTurnIdentifierGetBytes()
{
  return MEMORY[0x1E0CFE778]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

uint64_t BPSDemandMax()
{
  return MEMORY[0x1E0D023F8]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x1E0D01E18]();
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return MEMORY[0x1E0C80330](md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return MEMORY[0x1E0C80338](c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1E0C80340](c, data, *(_QWORD *)&len);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x1E0DE7960]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x1E0DE7970]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

long double exp2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83288](__x);
  return result;
}

int flock(int a1, int a2)
{
  return MEMORY[0x1E0C83400](*(_QWORD *)&a1, *(_QWORD *)&a2);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1E0C83C50]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

int pthread_rwlock_init(pthread_rwlock_t *a1, const pthread_rwlockattr_t *a2)
{
  return MEMORY[0x1E0C84E98](a1, a2);
}

int pthread_rwlock_rdlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x1E0C84EA0](a1);
}

int pthread_rwlock_unlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x1E0C84EB8](a1);
}

int pthread_rwlock_wrlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x1E0C84EC0](a1);
}

uint64_t sandbox_check()
{
  return MEMORY[0x1E0C85178]();
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1E0DEEB98]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x1E0DEEBD0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1E0DEED80]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1E0DEED90]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x1E0DEEDB8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1E0DEEE90]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

